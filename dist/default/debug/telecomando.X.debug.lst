

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 20 13:56:16 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0030B4                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  0030B4  14                 	db	20
    72                           
    73                           	psect	mediumconst
    74  003EEA                     __pmediumconst:
    75                           	opt stack 0
    76  003EEA  00                 	db	0
    77  003EEB                     __npowers_:
    78                           	opt stack 0
    79  003EEB  0000               	dw	0
    80  003EED  3F80               	dw	16256
    81  003EEF  CCCD               	dw	52429
    82  003EF1  3DCC               	dw	15820
    83  003EF3  D70A               	dw	55050
    84  003EF5  3C23               	dw	15395
    85  003EF7  126F               	dw	4719
    86  003EF9  3A83               	dw	14979
    87  003EFB  B717               	dw	46871
    88  003EFD  38D1               	dw	14545
    89  003EFF  C5AC               	dw	50604
    90  003F01  3727               	dw	14119
    91  003F03  37BD               	dw	14269
    92  003F05  3586               	dw	13702
    93  003F07  BF95               	dw	49045
    94  003F09  33D6               	dw	13270
    95  003F0B  CC77               	dw	52343
    96  003F0D  322B               	dw	12843
    97  003F0F  705F               	dw	28767
    98  003F11  3089               	dw	12425
    99  003F13  E6FF               	dw	59135
   100  003F15  2EDB               	dw	11995
   101  003F17  E508               	dw	58632
   102  003F19  1E3C               	dw	7740
   103  003F1B  4260               	dw	16992
   104  003F1D  0DA2               	dw	3490
   105  003F1F                     __end_of__npowers_:
   106                           	opt stack 0
   107  003F1F                     __powers_:
   108                           	opt stack 0
   109  003F1F  0000               	dw	0
   110  003F21  3F80               	dw	16256
   111  003F23  0000               	dw	0
   112  003F25  4120               	dw	16672
   113  003F27  0000               	dw	0
   114  003F29  42C8               	dw	17096
   115  003F2B  0000               	dw	0
   116  003F2D  447A               	dw	17530
   117  003F2F  4000               	dw	16384
   118  003F31  461C               	dw	17948
   119  003F33  5000               	dw	20480
   120  003F35  47C3               	dw	18371
   121  003F37  2400               	dw	9216
   122  003F39  4974               	dw	18804
   123  003F3B  9680               	dw	38528
   124  003F3D  4B18               	dw	19224
   125  003F3F  BC20               	dw	48160
   126  003F41  4CBE               	dw	19646
   127  003F43  6B28               	dw	27432
   128  003F45  4E6E               	dw	20078
   129  003F47  02F9               	dw	761
   130  003F49  5015               	dw	20501
   131  003F4B  78EC               	dw	30956
   132  003F4D  60AD               	dw	24749
   133  003F4F  F2CA               	dw	62154
   134  003F51  7149               	dw	29001
   135  003F53                     __end_of__powers_:
   136                           	opt stack 0
   137  003F53                     _dpowers:
   138                           	opt stack 0
   139  003F53  0001               	dw	1
   140  003F55  0000               	dw	0
   141  003F57  000A               	dw	10
   142  003F59  0000               	dw	0
   143  003F5B  0064               	dw	100
   144  003F5D  0000               	dw	0
   145  003F5F  03E8               	dw	1000
   146  003F61  0000               	dw	0
   147  003F63  2710               	dw	10000
   148  003F65  0000               	dw	0
   149  003F67  86A0               	dw	34464
   150  003F69  0001               	dw	1
   151  003F6B  4240               	dw	16960
   152  003F6D  000F               	dw	15
   153  003F6F  9680               	dw	38528
   154  003F71  0098               	dw	152
   155  003F73  E100               	dw	57600
   156  003F75  05F5               	dw	1525
   157  003F77  CA00               	dw	51712
   158  003F79  3B9A               	dw	15258
   159  003F7B                     __end_of_dpowers:
   160                           	opt stack 0
   161  003F7B                     STR_3:
   162  003F7B  54                 	db	84	;'T'
   163  003F7C  75                 	db	117	;'u'
   164  003F7D  72                 	db	114	;'r'
   165  003F7E  6E                 	db	110	;'n'
   166  003F7F  20                 	db	32
   167  003F80  74                 	db	116	;'t'
   168  003F81  68                 	db	104	;'h'
   169  003F82  65                 	db	101	;'e'
   170  003F83  20                 	db	32
   171  003F84  73                 	db	115	;'s'
   172  003F85  77                 	db	119	;'w'
   173  003F86  69                 	db	105	;'i'
   174  003F87  74                 	db	116	;'t'
   175  003F88  63                 	db	99	;'c'
   176  003F89  68                 	db	104	;'h'
   177  003F8A  20                 	db	32
   178  003F8B  4F                 	db	79	;'O'
   179  003F8C  4E                 	db	78	;'N'
   180  003F8D  21                 	db	33
   181  003F8E  20                 	db	32
   182  003F8F  00                 	db	0
   183  003F90                     STR_2:
   184  003F90  3D                 	db	61	;'='
   185  003F91  3D                 	db	61	;'='
   186  003F92  3E                 	db	62	;'>'
   187  003F93  20                 	db	32
   188  003F94  56                 	db	86	;'V'
   189  003F95  45                 	db	69	;'E'
   190  003F96  48                 	db	72	;'H'
   191  003F97  49                 	db	73	;'I'
   192  003F98  43                 	db	67	;'C'
   193  003F99  4C                 	db	76	;'L'
   194  003F9A  45                 	db	69	;'E'
   195  003F9B  20                 	db	32
   196  003F9C  20                 	db	32
   197  003F9D  4F                 	db	79	;'O'
   198  003F9E  46                 	db	70	;'F'
   199  003F9F  46                 	db	70	;'F'
   200  003FA0  20                 	db	32
   201  003FA1  3C                 	db	60	;'<'
   202  003FA2  3D                 	db	61	;'='
   203  003FA3  3D                 	db	61	;'='
   204  003FA4  00                 	db	0
   205  003FA5                     STR_5:
   206  003FA5  3D                 	db	61	;'='
   207  003FA6  3D                 	db	61	;'='
   208  003FA7  3D                 	db	61	;'='
   209  003FA8  20                 	db	32
   210  003FA9  56                 	db	86	;'V'
   211  003FAA  45                 	db	69	;'E'
   212  003FAB  48                 	db	72	;'H'
   213  003FAC  49                 	db	73	;'I'
   214  003FAD  43                 	db	67	;'C'
   215  003FAE  4C                 	db	76	;'L'
   216  003FAF  45                 	db	69	;'E'
   217  003FB0  20                 	db	32
   218  003FB1  44                 	db	68	;'D'
   219  003FB2  41                 	db	65	;'A'
   220  003FB3  54                 	db	84	;'T'
   221  003FB4  41                 	db	65	;'A'
   222  003FB5  20                 	db	32
   223  003FB6  3D                 	db	61	;'='
   224  003FB7  3D                 	db	61	;'='
   225  003FB8  3D                 	db	61	;'='
   226  003FB9  00                 	db	0
   227  003FBA                     STR_1:
   228  003FBA  3D                 	db	61	;'='
   229  003FBB  3D                 	db	61	;'='
   230  003FBC  3D                 	db	61	;'='
   231  003FBD  3D                 	db	61	;'='
   232  003FBE  3D                 	db	61	;'='
   233  003FBF  3D                 	db	61	;'='
   234  003FC0  3D                 	db	61	;'='
   235  003FC1  3D                 	db	61	;'='
   236  003FC2  3D                 	db	61	;'='
   237  003FC3  3D                 	db	61	;'='
   238  003FC4  3D                 	db	61	;'='
   239  003FC5  3D                 	db	61	;'='
   240  003FC6  3D                 	db	61	;'='
   241  003FC7  3D                 	db	61	;'='
   242  003FC8  3D                 	db	61	;'='
   243  003FC9  3D                 	db	61	;'='
   244  003FCA  3D                 	db	61	;'='
   245  003FCB  3D                 	db	61	;'='
   246  003FCC  3D                 	db	61	;'='
   247  003FCD  3D                 	db	61	;'='
   248  003FCE  00                 	db	0
   249  003FCF                     STR_6:
   250  003FCF  44                 	db	68	;'D'
   251  003FD0  69                 	db	105	;'i'
   252  003FD1  72                 	db	114	;'r'
   253  003FD2  65                 	db	101	;'e'
   254  003FD3  63                 	db	99	;'c'
   255  003FD4  74                 	db	116	;'t'
   256  003FD5  69                 	db	105	;'i'
   257  003FD6  6F                 	db	111	;'o'
   258  003FD7  6E                 	db	110	;'n'
   259  003FD8  3A                 	db	58	;':'
   260  003FD9  20                 	db	32
   261  003FDA  00                 	db	0
   262  003FDB                     STR_10:
   263  003FDB  53                 	db	83	;'S'
   264  003FDC  70                 	db	112	;'p'
   265  003FDD  65                 	db	101	;'e'
   266  003FDE  65                 	db	101	;'e'
   267  003FDF  64                 	db	100	;'d'
   268  003FE0  3A                 	db	58	;':'
   269  003FE1  20                 	db	32
   270  003FE2  25                 	db	37
   271  003FE3  2E                 	db	46
   272  003FE4  33                 	db	51	;'3'
   273  003FE5  66                 	db	102	;'f'
   274  003FE6  00                 	db	0
   275  003FE7                     STR_13:
   276  003FE7  57                 	db	87	;'W'
   277  003FE8  61                 	db	97	;'a'
   278  003FE9  69                 	db	105	;'i'
   279  003FEA  74                 	db	116	;'t'
   280  003FEB  2E                 	db	46
   281  003FEC  2E                 	db	46
   282  003FED  2E                 	db	46
   283  003FEE  00                 	db	0
   284  003FEF                     STR_8:
   285  003FEF  42                 	db	66	;'B'
   286  003FF0  4B                 	db	75	;'K'
   287  003FF1  57                 	db	87	;'W'
   288  003FF2  44                 	db	68	;'D'
   289  003FF3  00                 	db	0
   290  003FF4                     STR_11:
   291  003FF4  4B                 	db	75	;'K'
   292  003FF5  6D                 	db	109	;'m'
   293  003FF6  2F                 	db	47
   294  003FF7  68                 	db	104	;'h'
   295  003FF8  00                 	db	0
   296  003FF9                     STR_7:
   297  003FF9  46                 	db	70	;'F'
   298  003FFA  57                 	db	87	;'W'
   299  003FFB  44                 	db	68	;'D'
   300  003FFC  00                 	db	0
   301  003FFD                     STR_9:
   302  003FFD  50                 	db	80	;'P'
   303  003FFE  00                 	db	0
   304  0000                     
   305                           ; #config settings
   306  003FFF  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	nvCOMRAM
   309  000044                     __pnvCOMRAM:
   310                           	opt stack 0
   311  000044                     _clock_counter_reference:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  0000                     _ADCON0bits	set	4034
   315  0000                     _ADCON1	set	4033
   316  0000                     _ADCON2bits	set	4032
   317  0000                     _ADRESH	set	4036
   318  0000                     _INTCONbits	set	4082
   319  0000                     _IPR1bits	set	3999
   320  0000                     _IPR2bits	set	4002
   321  0000                     _LATA	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATBbits	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _LATD	set	3980
   327  0000                     _LATE	set	3981
   328  0000                     _PIE1	set	3997
   329  0000                     _PIE1bits	set	3997
   330  0000                     _PIE2bits	set	4000
   331  0000                     _PIR1bits	set	3998
   332  0000                     _PIR2bits	set	4001
   333  0000                     _PORTAbits	set	3968
   334  0000                     _PORTBbits	set	3969
   335  0000                     _PORTDbits	set	3971
   336  0000                     _RCONbits	set	4048
   337  0000                     _RCREG	set	4014
   338  0000                     _RCSTA	set	4011
   339  0000                     _RCSTAbits	set	4011
   340  0000                     _SPBRG	set	4015
   341  0000                     _SPBRGH	set	4016
   342  0000                     _T3CON	set	4017
   343  0000                     _TMR3H	set	4019
   344  0000                     _TMR3L	set	4018
   345  0000                     _TRISA	set	3986
   346  0000                     _TRISB	set	3987
   347  0000                     _TRISC	set	3988
   348  0000                     _TRISCbits	set	3988
   349  0000                     _TRISD	set	3989
   350  0000                     _TRISE	set	3990
   351  0000                     _TXREG	set	4013
   352  0000                     _TXSTA	set	4012
   353  0000                     _TXSTAbits	set	4012
   354                           
   355                           	psect	cinit
   356  002DC4                     __pcinit:
   357                           	opt stack 0
   358  002DC4                     start_initialization:
   359                           	opt stack 0
   360  002DC4                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to BANK1 (12 bytes)
   364  002DC4  EE01  F021         	lfsr	0,__pbssBANK1
   365  002DC8  0E0C               	movlw	12
   366  002DCA                     clear_0:
   367  002DCA  6AEE               	clrf	postinc0,c
   368  002DCC  06E8               	decf	wreg,f,c
   369  002DCE  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to BANK0 (32 bytes)
   372  002DD0  EE00  F0CA         	lfsr	0,__pbssBANK0
   373  002DD4  0E20               	movlw	32
   374  002DD6                     clear_1:
   375  002DD6  6AEE               	clrf	postinc0,c
   376  002DD8  06E8               	decf	wreg,f,c
   377  002DDA  E1FD               	bnz	clear_1
   378                           
   379                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   380  002DDC  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   381                           
   382                           ; Clear objects allocated to COMRAM (35 bytes)
   383  002DDE  EE00  F001         	lfsr	0,__pbssCOMRAM
   384  002DE2  0E23               	movlw	35
   385  002DE4                     clear_2:
   386  002DE4  6AEE               	clrf	postinc0,c
   387  002DE6  06E8               	decf	wreg,f,c
   388  002DE8  E1FD               	bnz	clear_2
   389                           
   390                           ; Initialize objects allocated to COMRAM (1 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  002DEA  0EB4               	movlw	low __pidataCOMRAM
   393  002DEC  6EF6               	movwf	tblptrl,c
   394  002DEE  0E30               	movlw	high __pidataCOMRAM
   395  002DF0  6EF7               	movwf	tblptrh,c
   396  002DF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  002DF4  6EF8               	movwf	tblptru,c
   398  002DF6  0009               	tblrd		*+	;fetch initializer
   399  002DF8  CFF5 F046          	movff	tablat,__pdataCOMRAM
   400  002DFC                     end_of_initialization:
   401                           	opt stack 0
   402  002DFC                     __end_of__initialization:
   403                           	opt stack 0
   404  002DFC  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   405  002DFE  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   406  002E00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   407  002E02  6EF8               	movwf	tblptru,c
   408  002E04  0100               	movlb	0
   409  002E06  EF84  F00B         	goto	_main	;jump to C main() function
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417                           	psect	bitbssCOMRAM
   418  000218                     __pbitbssCOMRAM:
   419                           	opt stack 0
   420  000218                     _actual_dir:
   421                           	opt stack 0
   422  000218                     	ds	1
   423  000219                     _dir:
   424                           	opt stack 0
   425  000219                     	ds	1
   426  00021A                     _power_switch:
   427                           	opt stack 0
   428  00021A                     	ds	1
   429  00021B                     _wait_low:
   430                           	opt stack 0
   431  00021B                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           
   439                           	psect	bssCOMRAM
   440  000001                     __pbssCOMRAM:
   441                           	opt stack 0
   442  000001                     _pr_time_1:
   443                           	opt stack 0
   444  000001                     	ds	4
   445  000005                     _pr_time_2:
   446                           	opt stack 0
   447  000005                     	ds	4
   448  000009                     _time_counter:
   449                           	opt stack 0
   450  000009                     	ds	4
   451  00000D                     _set_speed:
   452                           	opt stack 0
   453  00000D                     	ds	2
   454  00000F                     _Battery_Check:
   455                           	opt stack 0
   456  00000F                     	ds	1
   457  000010                     _ECU_Check:
   458                           	opt stack 0
   459  000010                     	ds	1
   460  000011                     _USART_Status:
   461                           	opt stack 0
   462  000011                     	ds	1
   463  000012                     _actual_speed_pk0:
   464                           	opt stack 0
   465  000012                     	ds	1
   466  000013                     _actual_speed_pk1:
   467                           	opt stack 0
   468  000013                     	ds	1
   469  000014                     _analogic_brake:
   470                           	opt stack 0
   471  000014                     	ds	1
   472  000015                     _i:
   473                           	opt stack 0
   474  000015                     	ds	1
   475  000016                     _set_speed_pk0:
   476                           	opt stack 0
   477  000016                     	ds	1
   478  000017                     _set_speed_pk1:
   479                           	opt stack 0
   480  000017                     	ds	1
   481  000018                     _set_steering:
   482                           	opt stack 0
   483  000018                     	ds	1
   484  000019                     _switch_position:
   485                           	opt stack 0
   486  000019                     	ds	1
   487  00001A                     _JoystickConstants:
   488                           	opt stack 0
   489  00001A                     	ds	8
   490  000022                     _JoystickValues:
   491                           	opt stack 0
   492  000022                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	dataCOMRAM
   501  000046                     __pdataCOMRAM:
   502                           	opt stack 0
   503  000046                     _delay_quartz_frequency_value:
   504                           	opt stack 0
   505  000046                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	bssBANK0
   514  0000CA                     __pbssBANK0:
   515                           	opt stack 0
   516  0000CA                     LCD_write_integer@F17027:
   517                           	opt stack 0
   518  0000CA                     	ds	6
   519  0000D0                     _actual_speed_kmh:
   520                           	opt stack 0
   521  0000D0                     	ds	4
   522  0000D4                     _pr_time_3:
   523                           	opt stack 0
   524  0000D4                     	ds	4
   525  0000D8                     _actual_speed:
   526                           	opt stack 0
   527  0000D8                     	ds	2
   528  0000DA                     _USART_Rx:
   529                           	opt stack 0
   530  0000DA                     	ds	8
   531  0000E2                     _USART_Tx:
   532                           	opt stack 0
   533  0000E2                     	ds	8
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541                           	psect	bssBANK1
   542  000121                     __pbssBANK1:
   543                           	opt stack 0
   544  000121                     _str:
   545                           	opt stack 0
   546  000121                     	ds	12
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554                           	psect	cstackBANK1
   555  000100                     __pcstackBANK1:
   556                           	opt stack 0
   557  000100                     _sprintf$2394:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x0
   561  000100                     	ds	4
   562  000104                     sprintf@ap:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x4
   566  000104                     	ds	2
   567  000106                     sprintf@flag:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x6
   571  000106                     	ds	2
   572  000108                     sprintf@val:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x8
   576  000108                     	ds	4
   577  00010C                     sprintf@exp:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00010C                     	ds	2
   582  00010E                     sprintf@tmpval:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0xE
   586  00010E                     	ds	4
   587  000112                     sprintf@prec:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x12
   591  000112                     	ds	2
   592  000114                     sprintf@fval:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x14
   596  000114                     	ds	4
   597  000118                     sprintf@c:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x18
   601  000118                     	ds	1
   602  000119                     ??_main:
   603                           
   604                           ; 0 bytes @ 0x19
   605  000119                     	ds	8
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           
   613                           	psect	cstackBANK0
   614  000060                     __pcstackBANK0:
   615                           	opt stack 0
   616  000060                     ??_ISR_alta:
   617                           
   618                           ; 0 bytes @ 0x0
   619  000060                     	ds	16
   620  000070                     ?___awdiv:
   621                           	opt stack 0
   622  000070                     ?__tdiv_to_l_:
   623                           	opt stack 0
   624  000070                     ?__div_to_l_:
   625                           	opt stack 0
   626  000070                     ?___lldiv:
   627                           	opt stack 0
   628  000070                     ?___llmod:
   629                           	opt stack 0
   630  000070                     ?___xxtofl:
   631                           	opt stack 0
   632  000070                     delay_ms@value_ms:
   633                           	opt stack 0
   634  000070                     ___awdiv@dividend:
   635                           	opt stack 0
   636  000070                     __div_to_l_@f1:
   637                           	opt stack 0
   638  000070                     ___flge@ff1:
   639                           	opt stack 0
   640  000070                     __tdiv_to_l_@f1:
   641                           	opt stack 0
   642  000070                     ___lldiv@dividend:
   643                           	opt stack 0
   644  000070                     ___llmod@dividend:
   645                           	opt stack 0
   646  000070                     ___xxtofl@val:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x10
   650  000070                     	ds	2
   651  000072                     delay_s@value_s:
   652                           	opt stack 0
   653  000072                     LCD_send_command@D2:
   654                           	opt stack 0
   655  000072                     ___awdiv@divisor:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x12
   659  000072                     	ds	1
   660  000073                     delay_s@repeat_loop:
   661                           	opt stack 0
   662  000073                     LCD_send_command@D1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x13
   666  000073                     	ds	1
   667  000074                     ??___xxtofl:
   668  000074                     LCD_send_command@D0:
   669                           	opt stack 0
   670  000074                     ___awdiv@counter:
   671                           	opt stack 0
   672  000074                     __div_to_l_@f2:
   673                           	opt stack 0
   674  000074                     ___flge@ff2:
   675                           	opt stack 0
   676  000074                     __tdiv_to_l_@f2:
   677                           	opt stack 0
   678  000074                     ___lldiv@divisor:
   679                           	opt stack 0
   680  000074                     ___llmod@divisor:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x14
   684  000074                     	ds	1
   685  000075                     LCD_goto_line@line:
   686                           	opt stack 0
   687  000075                     LCD_write_char@D3:
   688                           	opt stack 0
   689  000075                     LCD_cursor@blinking:
   690                           	opt stack 0
   691  000075                     ___awdiv@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x15
   695  000075                     	ds	1
   696  000076                     LCD_write_char@D2:
   697                           	opt stack 0
   698  000076                     LCD_cursor@active:
   699                           	opt stack 0
   700  000076                     ___awdiv@quotient:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x16
   704  000076                     	ds	1
   705  000077                     LCD_write_char@D1:
   706                           	opt stack 0
   707  000077                     LCD_initialize@quartz_frequency:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x17
   711  000077                     	ds	1
   712  000078                     LCD_write_char@D0:
   713                           	opt stack 0
   714  000078                     ___xxtofl@sign:
   715                           	opt stack 0
   716  000078                     __tdiv_to_l_@quot:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x18
   720  000078                     	ds	1
   721  000079                     LCD_write_char@value:
   722                           	opt stack 0
   723  000079                     ___xxtofl@exp:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x19
   727  000079                     	ds	1
   728  00007A                     LCD_write_message@buffer:
   729                           	opt stack 0
   730  00007A                     LCD_write_string@buffer:
   731                           	opt stack 0
   732  00007A                     ___xxtofl@arg:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x1A
   736  00007A                     	ds	2
   737  00007C                     __tdiv_to_l_@cntr:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x1C
   741  00007C                     	ds	1
   742  00007D                     __tdiv_to_l_@exp1:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x1D
   746  00007D                     	ds	1
   747  00007E                     ?___flmul:
   748                           	opt stack 0
   749  00007E                     ___flmul@b:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x1E
   753  00007E                     	ds	4
   754  000082                     ___flmul@a:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x22
   758  000082                     	ds	4
   759  000086                     ??___flmul:
   760                           
   761                           ; 0 bytes @ 0x26
   762  000086                     	ds	4
   763  00008A                     ___flmul@sign:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x2A
   767  00008A                     	ds	1
   768  00008B                     ___flmul@aexp:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x2B
   772  00008B                     	ds	1
   773  00008C                     ___flmul@grs:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x2C
   777  00008C                     	ds	4
   778  000090                     ___flmul@bexp:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x30
   782  000090                     	ds	1
   783  000091                     ___flmul@prod:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x31
   787  000091                     	ds	4
   788  000095                     ___flmul@temp:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x35
   792  000095                     	ds	2
   793  000097                     ?_fround:
   794                           	opt stack 0
   795  000097                     ?_scale:
   796                           	opt stack 0
   797                           
   798                           ; 4 bytes @ 0x37
   799  000097                     	ds	4
   800  00009B                     _fround$2392:
   801                           	opt stack 0
   802  00009B                     _scale$2393:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x3B
   806  00009B                     	ds	4
   807  00009F                     scale@scl:
   808                           	opt stack 0
   809  00009F                     _fround$2391:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x3F
   813  00009F                     	ds	1
   814  0000A0                     ?___fltol:
   815                           	opt stack 0
   816  0000A0                     ___fltol@f1:
   817                           	opt stack 0
   818                           
   819                           ; 4 bytes @ 0x40
   820  0000A0                     	ds	3
   821  0000A3                     fround@prec:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x43
   825  0000A3                     	ds	1
   826  0000A4                     ??___fltol:
   827  0000A4                     ?___fladd:
   828                           	opt stack 0
   829  0000A4                     ___fladd@b:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x44
   833  0000A4                     	ds	4
   834  0000A8                     ___fltol@sign1:
   835                           	opt stack 0
   836  0000A8                     ___fladd@a:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x48
   840  0000A8                     	ds	1
   841  0000A9                     ___fltol@exp1:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x49
   845  0000A9                     	ds	3
   846  0000AC                     ??___fladd:
   847                           
   848                           ; 0 bytes @ 0x4C
   849  0000AC                     	ds	8
   850  0000B4                     ___fladd@signs:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x54
   854  0000B4                     	ds	1
   855  0000B5                     ___fladd@aexp:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x55
   859  0000B5                     	ds	1
   860  0000B6                     ___fladd@bexp:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x56
   864  0000B6                     	ds	1
   865  0000B7                     ___fladd@grs:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x57
   869  0000B7                     	ds	1
   870  0000B8                     ?___flsub:
   871                           	opt stack 0
   872  0000B8                     ___flsub@b:
   873                           	opt stack 0
   874                           
   875                           ; 4 bytes @ 0x58
   876  0000B8                     	ds	4
   877  0000BC                     ___flsub@a:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x5C
   881  0000BC                     	ds	4
   882  0000C0                     ?_sprintf:
   883                           	opt stack 0
   884  0000C0                     sprintf@sp:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x60
   888  0000C0                     	ds	2
   889  0000C2                     sprintf@f:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x62
   893  0000C2                     	ds	6
   894  0000C8                     ??_sprintf:
   895                           
   896                           ; 0 bytes @ 0x68
   897  0000C8                     	ds	2
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905                           	psect	cstackCOMRAM
   906  000024                     __pcstackCOMRAM:
   907                           	opt stack 0
   908  000024                     ??_ISR_bassa:
   909  000024                     
   910                           ; 1 bytes @ 0x0
   911  000024                     	ds	17
   912  000035                     ReadUSART@data:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x11
   916  000035                     	ds	1
   917  000036                     getsUSART@buffer:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x12
   921  000036                     	ds	2
   922  000038                     getsUSART@len:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x14
   926  000038                     	ds	1
   927  000039                     getsUSART@data:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x15
   931  000039                     	ds	1
   932  00003A                     getsUSART@i:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x16
   936  00003A                     	ds	1
   937  00003B                     _ISR_alta$1195:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x17
   941  00003B                     	ds	1
   942  00003C                     ??_Joystick_Polling:
   943  00003C                     ??_isdigit:
   944  00003C                     ??__tdiv_to_l_:
   945  00003C                     ??___flge:
   946  00003C                     ?___wmul:
   947                           	opt stack 0
   948  00003C                     ?___awmod:
   949                           	opt stack 0
   950  00003C                     ?___lwdiv:
   951                           	opt stack 0
   952  00003C                     ?___flneg:
   953                           	opt stack 0
   954  00003C                     delay_set_quartz@frequency:
   955                           	opt stack 0
   956  00003C                     LCD_backlight@active:
   957                           	opt stack 0
   958  00003C                     WriteUSART@data:
   959                           	opt stack 0
   960  00003C                     ___llmod@counter:
   961                           	opt stack 0
   962  00003C                     OpenUSART@spbrg:
   963                           	opt stack 0
   964  00003C                     ___wmul@multiplier:
   965                           	opt stack 0
   966  00003C                     ___awmod@dividend:
   967                           	opt stack 0
   968  00003C                     ___lwdiv@dividend:
   969                           	opt stack 0
   970  00003C                     __div_to_l_@quot:
   971                           	opt stack 0
   972  00003C                     ___flneg@f1:
   973                           	opt stack 0
   974  00003C                     ___lldiv@quotient:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x18
   978  00003C                     	ds	1
   979  00003D                     _isdigit$2000:
   980                           	opt stack 0
   981  00003D                     putsUSART@data:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x19
   985  00003D                     	ds	1
   986  00003E                     OpenUSART@config:
   987                           	opt stack 0
   988  00003E                     isdigit@c:
   989                           	opt stack 0
   990  00003E                     ___wmul@multiplicand:
   991                           	opt stack 0
   992  00003E                     ___awmod@divisor:
   993                           	opt stack 0
   994  00003E                     ___lwdiv@divisor:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x1A
   998  00003E                     	ds	1
   999  00003F                     
  1000                           ; 0 bytes @ 0x1B
  1001  00003F                     	ds	1
  1002  000040                     ___awmod@counter:
  1003                           	opt stack 0
  1004  000040                     __div_to_l_@cntr:
  1005                           	opt stack 0
  1006  000040                     ___lldiv@counter:
  1007                           	opt stack 0
  1008  000040                     ___wmul@product:
  1009                           	opt stack 0
  1010  000040                     ___lwdiv@quotient:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x1C
  1014  000040                     	ds	1
  1015  000041                     ___awmod@sign:
  1016                           	opt stack 0
  1017  000041                     __div_to_l_@exp1:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x1D
  1021  000041                     	ds	1
  1022  000042                     LCD_send_command@D3:
  1023                           	opt stack 0
  1024  000042                     ___lwdiv@counter:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1E
  1028  000042                     	ds	1
  1029  000043                     tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           
  1036                           ; 0 bytes @ 0x1F
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 122 in file "telecomando.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;		None               void
  1049 ;; Registers used:
  1050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1056 ;;      Params:         0       0       0       0
  1057 ;;      Locals:         0       0       0       0
  1058 ;;      Temps:          0       0       8       0
  1059 ;;      Totals:         0       0       8       0
  1060 ;;Total ram usage:        8 bytes
  1061 ;; Hardware stack levels required when called:   11
  1062 ;; This function calls:
  1063 ;;		_Joystick_Polling
  1064 ;;		_LCD_Handler
  1065 ;;		_LCD_clear
  1066 ;;		_LCD_goto_line
  1067 ;;		_LCD_write_message
  1068 ;;		_USART_Send
  1069 ;;		___flmul
  1070 ;;		___fltol
  1071 ;;		___xxtofl
  1072 ;;		_board_initialization
  1073 ;;		_delay_ms
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  001708                     __ptext0:
  1081                           	opt stack 0
  1082  001708                     _main:
  1083                           	opt stack 20
  1084                           
  1085                           ;telecomando.c: 123: board_initialization();
  1086                           
  1087                           ;incstack = 0
  1088  001708  EC56  F014         	call	_board_initialization	;wreg free
  1089                           
  1090                           ;telecomando.c: 124: PORTDbits.RD7 = 0;
  1091  00170C  9E83               	bcf	3971,7,c	;volatile
  1092                           
  1093                           ;telecomando.c: 127: USART_Tx[0] = 0xAA;
  1094  00170E  0EAA               	movlw	170
  1095  001710  0100               	movlb	0	; () banked
  1096  001712  6FE2               	movwf	_USART_Tx& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;telecomando.c: 128: USART_Tx[6] = 0xAA;
  1100  001714  0EAA               	movlw	170
  1101  001716  0100               	movlb	0	; () banked
  1102  001718  6FE8               	movwf	(_USART_Tx+6)& (0+255),b
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;telecomando.c: 129: USART_Tx[7] = '\0';
  1106  00171A  0E00               	movlw	0
  1107  00171C  0100               	movlb	0	; () banked
  1108  00171E  6FE9               	movwf	(_USART_Tx+7)& (0+255),b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;telecomando.c: 130: JoystickConstants[0] = 0.703;
  1112  001720  0ECF               	movlw	207
  1113  001722  6E1A               	movwf	_JoystickConstants,c	;volatile
  1114  001724  0EF7               	movlw	247
  1115  001726  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1116  001728  0E33               	movlw	51
  1117  00172A  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1118  00172C  0E3F               	movlw	63
  1119  00172E  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;telecomando.c: 131: JoystickConstants[1] = 34;
  1123  001730  0E00               	movlw	0
  1124  001732  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1125  001734  0E00               	movlw	0
  1126  001736  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1127  001738  0E08               	movlw	8
  1128  00173A  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1129  00173C  0E42               	movlw	66
  1130  00173E  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1131  001740                     l5574:
  1132                           
  1133                           ;telecomando.c: 137: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  1134  001740  A681               	btfss	3969,3,c	;volatile
  1135  001742  D002               	goto	l249
  1136  001744  B643               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1137  001746  D009               	goto	l247
  1138  001748                     l249:
  1139                           
  1140                           ;telecomando.c: 138: wait_low = 0;
  1141  001748  9643               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1142                           
  1143                           ;telecomando.c: 139: if (PORTBbits.RB3 == 1) {
  1144  00174A  A681               	btfss	3969,3,c	;volatile
  1145  00174C  D006               	goto	l247
  1146                           
  1147                           ;telecomando.c: 140: power_switch = ~power_switch;
  1148  00174E  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1149  001750  D002               	goto	u6460
  1150  001752  8443               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1151  001754  D001               	goto	u6475
  1152  001756                     u6460:
  1153  001756  9443               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1154  001758                     u6475:
  1155                           
  1156                           ;telecomando.c: 141: wait_low = 1;
  1157  001758  8643               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1158  00175A                     l247:
  1159                           
  1160                           ;telecomando.c: 142: }
  1161                           ;telecomando.c: 143: }
  1162                           ;telecomando.c: 145: if (power_switch == 0) {
  1163  00175A  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1164  00175C  D08F               	goto	l5608
  1165                           
  1166                           ;telecomando.c: 146: dir = 1;
  1167  00175E  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1168                           
  1169                           ;telecomando.c: 147: set_speed = 0;
  1170  001760  0E00               	movlw	0
  1171  001762  6E0E               	movwf	_set_speed+1,c	;volatile
  1172  001764  0E00               	movlw	0
  1173  001766  6E0D               	movwf	_set_speed,c	;volatile
  1174                           
  1175                           ;telecomando.c: 148: set_steering = 90;
  1176  001768  0E5A               	movlw	90
  1177  00176A  6E18               	movwf	_set_steering,c	;volatile
  1178                           
  1179                           ;telecomando.c: 149: analogic_brake = 0;
  1180  00176C  0E00               	movlw	0
  1181  00176E  6E14               	movwf	_analogic_brake,c	;volatile
  1182                           
  1183                           ;telecomando.c: 150: USART_Send();
  1184  001770  EC20  F017         	call	_USART_Send	;wreg free
  1185                           
  1186                           ;telecomando.c: 151: while (power_switch == 0) {
  1187  001774  D080               	goto	l5606
  1188  001776                     l5586:
  1189                           
  1190                           ;telecomando.c: 152: LCD_clear();
  1191  001776  EC53  F017         	call	_LCD_clear	;wreg free
  1192                           
  1193                           ;telecomando.c: 153: LCD_goto_line(1);
  1194  00177A  0E01               	movlw	1
  1195  00177C  EC71  F013         	call	_LCD_goto_line
  1196                           
  1197                           ;telecomando.c: 154: LCD_write_message("====================");
  1198  001780  0EBA               	movlw	low STR_1
  1199  001782  0100               	movlb	0	; () banked
  1200  001784  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1201  001786  0E3F               	movlw	high STR_1
  1202  001788  0100               	movlb	0	; () banked
  1203  00178A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1204  00178C  ECB2  F017         	call	_LCD_write_message	;wreg free
  1205                           
  1206                           ;telecomando.c: 155: LCD_goto_line(2);
  1207  001790  0E02               	movlw	2
  1208  001792  EC71  F013         	call	_LCD_goto_line
  1209                           
  1210                           ;telecomando.c: 156: LCD_write_message("==> VEHICLE  OFF <==");
  1211  001796  0E90               	movlw	low STR_2
  1212  001798  0100               	movlb	0	; () banked
  1213  00179A  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1214  00179C  0E3F               	movlw	high STR_2
  1215  00179E  0100               	movlb	0	; () banked
  1216  0017A0  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1217  0017A2  ECB2  F017         	call	_LCD_write_message	;wreg free
  1218                           
  1219                           ;telecomando.c: 157: LCD_goto_line(3);
  1220  0017A6  0E03               	movlw	3
  1221  0017A8  EC71  F013         	call	_LCD_goto_line
  1222                           
  1223                           ;telecomando.c: 158: LCD_write_message("Turn the switch ON! ");
  1224  0017AC  0E7B               	movlw	low STR_3
  1225  0017AE  0100               	movlb	0	; () banked
  1226  0017B0  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1227  0017B2  0E3F               	movlw	high STR_3
  1228  0017B4  0100               	movlb	0	; () banked
  1229  0017B6  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1230  0017B8  ECB2  F017         	call	_LCD_write_message	;wreg free
  1231                           
  1232                           ;telecomando.c: 159: LCD_goto_line(4);
  1233  0017BC  0E04               	movlw	4
  1234  0017BE  EC71  F013         	call	_LCD_goto_line
  1235                           
  1236                           ;telecomando.c: 160: LCD_write_message("====================");
  1237  0017C2  0EBA               	movlw	low STR_1
  1238  0017C4  0100               	movlb	0	; () banked
  1239  0017C6  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1240  0017C8  0E3F               	movlw	high STR_1
  1241  0017CA  0100               	movlb	0	; () banked
  1242  0017CC  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1243  0017CE  ECB2  F017         	call	_LCD_write_message	;wreg free
  1244                           
  1245                           ;telecomando.c: 161: if ((time_counter - pr_time_1) >= 50) {
  1246  0017D2  C001  F119         	movff	_pr_time_1,??_main	;volatile
  1247  0017D6  C002  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1248  0017DA  C003  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1249  0017DE  C004  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1250  0017E2  0101               	movlb	1	; () banked
  1251  0017E4  1F19               	comf	??_main& (0+255),f,b
  1252  0017E6  1F1A               	comf	(??_main+1)& (0+255),f,b
  1253  0017E8  1F1B               	comf	(??_main+2)& (0+255),f,b
  1254  0017EA  1F1C               	comf	(??_main+3)& (0+255),f,b
  1255  0017EC  2B19               	incf	??_main& (0+255),f,b
  1256  0017EE  0E00               	movlw	0
  1257  0017F0  231A               	addwfc	(??_main+1)& (0+255),f,b
  1258  0017F2  231B               	addwfc	(??_main+2)& (0+255),f,b
  1259  0017F4  231C               	addwfc	(??_main+3)& (0+255),f,b
  1260  0017F6  5009               	movf	_time_counter,w,c	;volatile
  1261  0017F8  0101               	movlb	1	; () banked
  1262  0017FA  2519               	addwf	??_main& (0+255),w,b
  1263  0017FC  0101               	movlb	1	; () banked
  1264  0017FE  6F1D               	movwf	(??_main+4)& (0+255),b
  1265  001800  500A               	movf	_time_counter+1,w,c	;volatile
  1266  001802  0101               	movlb	1	; () banked
  1267  001804  211A               	addwfc	(??_main+1)& (0+255),w,b
  1268  001806  0101               	movlb	1	; () banked
  1269  001808  6F1E               	movwf	(??_main+5)& (0+255),b
  1270  00180A  500B               	movf	_time_counter+2,w,c	;volatile
  1271  00180C  0101               	movlb	1	; () banked
  1272  00180E  211B               	addwfc	(??_main+2)& (0+255),w,b
  1273  001810  0101               	movlb	1	; () banked
  1274  001812  6F1F               	movwf	(??_main+6)& (0+255),b
  1275  001814  500C               	movf	_time_counter+3,w,c	;volatile
  1276  001816  0101               	movlb	1	; () banked
  1277  001818  211C               	addwfc	(??_main+3)& (0+255),w,b
  1278  00181A  0101               	movlb	1	; () banked
  1279  00181C  6F20               	movwf	(??_main+7)& (0+255),b
  1280  00181E  0101               	movlb	1	; () banked
  1281  001820  5120               	movf	(??_main+7)& (0+255),w,b
  1282  001822  0101               	movlb	1	; () banked
  1283  001824  111F               	iorwf	(??_main+6)& (0+255),w,b
  1284  001826  0101               	movlb	1	; () banked
  1285  001828  111E               	iorwf	(??_main+5)& (0+255),w,b
  1286  00182A  E105               	bnz	u6490
  1287  00182C  0E32               	movlw	50
  1288  00182E  0101               	movlb	1	; () banked
  1289  001830  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1290  001832  A0D8               	btfss	status,0,c
  1291  001834  D019               	goto	l5604
  1292  001836                     u6490:
  1293                           
  1294                           ; BSR set to: 1
  1295                           ;telecomando.c: 162: pr_time_1 = time_counter;
  1296  001836  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1297  00183A  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1298  00183E  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1299  001842  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1300                           
  1301                           ; BSR set to: 1
  1302                           ;telecomando.c: 163: PORTDbits.RD7 = ~PORTDbits.RD7;
  1303  001846  AE83               	btfss	3971,7,c	;volatile
  1304  001848  D002               	goto	u6500
  1305  00184A  0E01               	movlw	1
  1306  00184C  D001               	goto	u6506
  1307  00184E                     u6500:
  1308  00184E  0E00               	movlw	0
  1309  001850                     u6506:
  1310  001850  0AFF               	xorlw	255
  1311  001852  0101               	movlb	1	; () banked
  1312  001854  6F19               	movwf	??_main& (0+255),b
  1313  001856  0101               	movlb	1	; () banked
  1314  001858  3319               	rrcf	??_main& (0+255),f,b
  1315  00185A  3319               	rrcf	??_main& (0+255),f,b
  1316  00185C  5083               	movf	3971,w,c	;volatile
  1317  00185E  0101               	movlb	1	; () banked
  1318  001860  1919               	xorwf	??_main& (0+255),w,b
  1319  001862  0B7F               	andlw	-129
  1320  001864  1919               	xorwf	??_main& (0+255),w,b
  1321  001866  6E83               	movwf	3971,c	;volatile
  1322  001868                     l5604:
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;telecomando.c: 164: }
  1326                           ;telecomando.c: 165: delay_ms(300);
  1327  001868  0E01               	movlw	1
  1328  00186A  0100               	movlb	0	; () banked
  1329  00186C  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1330  00186E  0E2C               	movlw	44
  1331  001870  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1332  001872  EC6C  F017         	call	_delay_ms	;wreg free
  1333  001876                     l5606:
  1334  001876  A443               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1335  001878  D77E               	goto	l5586
  1336                           
  1337                           ;telecomando.c: 166: }
  1338                           ;telecomando.c: 167: PORTDbits.RD7 = 0;
  1339  00187A  9E83               	bcf	3971,7,c	;volatile
  1340  00187C                     l5608:
  1341                           
  1342                           ;telecomando.c: 168: }
  1343                           ;telecomando.c: 170: Joystick_Polling();
  1344  00187C  ECBE  F016         	call	_Joystick_Polling	;wreg free
  1345                           
  1346                           ;telecomando.c: 173: if (PORTAbits.RA2 == 1) {
  1347  001880  A480               	btfss	3968,2,c	;volatile
  1348  001882  D003               	goto	l256
  1349                           
  1350                           ;telecomando.c: 174: switch_position = 0;
  1351  001884  0E00               	movlw	0
  1352  001886  6E19               	movwf	_switch_position,c	;volatile
  1353                           
  1354                           ;telecomando.c: 175: } else {
  1355  001888  D009               	goto	l257
  1356  00188A                     l256:
  1357                           
  1358                           ;telecomando.c: 176: if (PORTAbits.RA3 == 0) {
  1359  00188A  B680               	btfsc	3968,3,c	;volatile
  1360  00188C  D004               	goto	l5618
  1361                           
  1362                           ;telecomando.c: 177: switch_position = 1;
  1363  00188E  0E01               	movlw	1
  1364  001890  6E19               	movwf	_switch_position,c	;volatile
  1365                           
  1366                           ;telecomando.c: 178: dir = 1;
  1367  001892  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1368                           
  1369                           ;telecomando.c: 179: } else {
  1370  001894  D003               	goto	l257
  1371  001896                     l5618:
  1372                           
  1373                           ;telecomando.c: 180: switch_position = 2;
  1374  001896  0E02               	movlw	2
  1375  001898  6E19               	movwf	_switch_position,c	;volatile
  1376                           
  1377                           ;telecomando.c: 181: dir = 0;
  1378  00189A  9243               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1379  00189C                     l257:
  1380                           
  1381                           ;telecomando.c: 182: }
  1382                           ;telecomando.c: 183: }
  1383                           ;telecomando.c: 185: if (switch_position != 0) {
  1384  00189C  5019               	movf	_switch_position,w,c	;volatile
  1385  00189E  B4D8               	btfsc	status,2,c
  1386  0018A0  D074               	goto	l5634
  1387                           
  1388                           ;telecomando.c: 186: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1389  0018A2  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1390  0018A6  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1391  0018AA  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1392  0018AE  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1393  0018B2  C022  F119         	movff	_JoystickValues,??_main	;volatile
  1394  0018B6  0101               	movlb	1	; () banked
  1395  0018B8  6B1A               	clrf	(??_main+1)& (0+255),b
  1396  0018BA  BF19               	btfsc	??_main& (0+255),7,b
  1397  0018BC  071A               	decf	(??_main+1)& (0+255),f,b
  1398  0018BE  0E80               	movlw	128
  1399  0018C0  0101               	movlb	1	; () banked
  1400  0018C2  2719               	addwf	??_main& (0+255),f,b
  1401  0018C4  0E00               	movlw	0
  1402  0018C6  231A               	addwfc	(??_main+1)& (0+255),f,b
  1403  0018C8  C119  F070         	movff	??_main,___xxtofl@val
  1404  0018CC  C11A  F071         	movff	??_main+1,___xxtofl@val+1
  1405  0018D0  0100               	movlb	0	; () banked
  1406  0018D2  0E00               	movlw	0
  1407  0018D4  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1408  0018D6  0EFF               	movlw	-1
  1409  0018D8  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1410  0018DA  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1411  0018DC  0E01               	movlw	1
  1412  0018DE  EC9C  F00E         	call	___xxtofl
  1413  0018E2  C070  F07E         	movff	?___xxtofl,___flmul@b
  1414  0018E6  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1415  0018EA  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1416  0018EE  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1417  0018F2  ECE4  F006         	call	___flmul	;wreg free
  1418  0018F6  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1419  0018FA  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1420  0018FE  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1421  001902  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1422  001906  ECEB  F012         	call	___fltol	;wreg free
  1423  00190A  0100               	movlb	0	; () banked
  1424  00190C  51A0               	movf	?___fltol& (0+255),w,b
  1425  00190E  6E18               	movwf	_set_steering,c	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;telecomando.c: 187: if (JoystickValues[1] > 0) {
  1429  001910  5023               	movf	_JoystickValues+1,w,c	;volatile
  1430  001912  0A80               	xorlw	128
  1431  001914  0F7F               	addlw	-129
  1432  001916  A0D8               	btfss	status,0,c
  1433  001918  D02E               	goto	l5630
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;telecomando.c: 188: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1437  00191A  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1438  00191E  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1439  001922  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1440  001926  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1441  00192A  5023               	movf	_JoystickValues+1,w,c	;volatile
  1442  00192C  0100               	movlb	0	; () banked
  1443  00192E  6F70               	movwf	___xxtofl@val& (0+255),b
  1444  001930  0E00               	movlw	0
  1445  001932  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1446  001934  0EFF               	movlw	-1
  1447  001936  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1448  001938  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1449  00193A  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1450  00193C  0E01               	movlw	1
  1451  00193E  EC9C  F00E         	call	___xxtofl
  1452  001942  C070  F07E         	movff	?___xxtofl,___flmul@b
  1453  001946  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1454  00194A  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1455  00194E  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1456  001952  ECE4  F006         	call	___flmul	;wreg free
  1457  001956  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1458  00195A  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1459  00195E  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1460  001962  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1461  001966  ECEB  F012         	call	___fltol	;wreg free
  1462  00196A  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1463  00196E  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1464                           
  1465                           ;telecomando.c: 189: analogic_brake = 0;
  1466  001972  0E00               	movlw	0
  1467  001974  D008               	goto	L1
  1468  001976                     l5630:
  1469                           
  1470                           ;telecomando.c: 191: set_speed = 0;
  1471  001976  0E00               	movlw	0
  1472  001978  6E0E               	movwf	_set_speed+1,c	;volatile
  1473  00197A  0E00               	movlw	0
  1474  00197C  6E0D               	movwf	_set_speed,c	;volatile
  1475                           
  1476                           ;telecomando.c: 192: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1477  00197E  5023               	movf	_JoystickValues+1,w,c	;volatile
  1478  001980  0D02               	mullw	2
  1479  001982  28F3               	incf	prodl,w,c
  1480  001984  0800               	sublw	0
  1481  001986                     L1:
  1482  001986  6E14               	movwf	_analogic_brake,c	;volatile
  1483                           
  1484                           ;telecomando.c: 193: }
  1485                           ;telecomando.c: 194: } else {
  1486  001988  D005               	goto	l5638
  1487  00198A                     l5634:
  1488                           
  1489                           ;telecomando.c: 195: set_speed = 0;
  1490  00198A  0E00               	movlw	0
  1491  00198C  6E0E               	movwf	_set_speed+1,c	;volatile
  1492  00198E  0E00               	movlw	0
  1493  001990  6E0D               	movwf	_set_speed,c	;volatile
  1494                           
  1495                           ;telecomando.c: 196: analogic_brake = 255;
  1496  001992  6814               	setf	_analogic_brake,c	;volatile
  1497  001994                     l5638:
  1498                           
  1499                           ;telecomando.c: 197: }
  1500                           ;telecomando.c: 199: if ((time_counter - pr_time_2) >= 1) {
  1501  001994  C005  F119         	movff	_pr_time_2,??_main	;volatile
  1502  001998  C006  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1503  00199C  C007  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1504  0019A0  C008  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1505  0019A4  0101               	movlb	1	; () banked
  1506  0019A6  1F19               	comf	??_main& (0+255),f,b
  1507  0019A8  1F1A               	comf	(??_main+1)& (0+255),f,b
  1508  0019AA  1F1B               	comf	(??_main+2)& (0+255),f,b
  1509  0019AC  1F1C               	comf	(??_main+3)& (0+255),f,b
  1510  0019AE  2B19               	incf	??_main& (0+255),f,b
  1511  0019B0  0E00               	movlw	0
  1512  0019B2  231A               	addwfc	(??_main+1)& (0+255),f,b
  1513  0019B4  231B               	addwfc	(??_main+2)& (0+255),f,b
  1514  0019B6  231C               	addwfc	(??_main+3)& (0+255),f,b
  1515  0019B8  5009               	movf	_time_counter,w,c	;volatile
  1516  0019BA  0101               	movlb	1	; () banked
  1517  0019BC  2519               	addwf	??_main& (0+255),w,b
  1518  0019BE  0101               	movlb	1	; () banked
  1519  0019C0  6F1D               	movwf	(??_main+4)& (0+255),b
  1520  0019C2  500A               	movf	_time_counter+1,w,c	;volatile
  1521  0019C4  0101               	movlb	1	; () banked
  1522  0019C6  211A               	addwfc	(??_main+1)& (0+255),w,b
  1523  0019C8  0101               	movlb	1	; () banked
  1524  0019CA  6F1E               	movwf	(??_main+5)& (0+255),b
  1525  0019CC  500B               	movf	_time_counter+2,w,c	;volatile
  1526  0019CE  0101               	movlb	1	; () banked
  1527  0019D0  211B               	addwfc	(??_main+2)& (0+255),w,b
  1528  0019D2  0101               	movlb	1	; () banked
  1529  0019D4  6F1F               	movwf	(??_main+6)& (0+255),b
  1530  0019D6  500C               	movf	_time_counter+3,w,c	;volatile
  1531  0019D8  0101               	movlb	1	; () banked
  1532  0019DA  211C               	addwfc	(??_main+3)& (0+255),w,b
  1533  0019DC  0101               	movlb	1	; () banked
  1534  0019DE  6F20               	movwf	(??_main+7)& (0+255),b
  1535  0019E0  0101               	movlb	1	; () banked
  1536  0019E2  511D               	movf	(??_main+4)& (0+255),w,b
  1537  0019E4  0101               	movlb	1	; () banked
  1538  0019E6  111E               	iorwf	(??_main+5)& (0+255),w,b
  1539  0019E8  0101               	movlb	1	; () banked
  1540  0019EA  111F               	iorwf	(??_main+6)& (0+255),w,b
  1541  0019EC  0101               	movlb	1	; () banked
  1542  0019EE  1120               	iorwf	(??_main+7)& (0+255),w,b
  1543  0019F0  B4D8               	btfsc	status,2,c
  1544  0019F2  D00A               	goto	l5644
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;telecomando.c: 200: pr_time_2 = time_counter;
  1548  0019F4  C009  F005         	movff	_time_counter,_pr_time_2	;volatile
  1549  0019F8  C00A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1550  0019FC  C00B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1551  001A00  C00C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;telecomando.c: 201: USART_Send();
  1555  001A04  EC20  F017         	call	_USART_Send	;wreg free
  1556  001A08                     l5644:
  1557                           
  1558                           ;telecomando.c: 202: }
  1559                           ;telecomando.c: 204: if ((time_counter - pr_time_3) >= 30) {
  1560  001A08  C0D4  F119         	movff	_pr_time_3,??_main	;volatile
  1561  001A0C  C0D5  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1562  001A10  C0D6  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1563  001A14  C0D7  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1564  001A18  0101               	movlb	1	; () banked
  1565  001A1A  1F19               	comf	??_main& (0+255),f,b
  1566  001A1C  1F1A               	comf	(??_main+1)& (0+255),f,b
  1567  001A1E  1F1B               	comf	(??_main+2)& (0+255),f,b
  1568  001A20  1F1C               	comf	(??_main+3)& (0+255),f,b
  1569  001A22  2B19               	incf	??_main& (0+255),f,b
  1570  001A24  0E00               	movlw	0
  1571  001A26  231A               	addwfc	(??_main+1)& (0+255),f,b
  1572  001A28  231B               	addwfc	(??_main+2)& (0+255),f,b
  1573  001A2A  231C               	addwfc	(??_main+3)& (0+255),f,b
  1574  001A2C  5009               	movf	_time_counter,w,c	;volatile
  1575  001A2E  0101               	movlb	1	; () banked
  1576  001A30  2519               	addwf	??_main& (0+255),w,b
  1577  001A32  0101               	movlb	1	; () banked
  1578  001A34  6F1D               	movwf	(??_main+4)& (0+255),b
  1579  001A36  500A               	movf	_time_counter+1,w,c	;volatile
  1580  001A38  0101               	movlb	1	; () banked
  1581  001A3A  211A               	addwfc	(??_main+1)& (0+255),w,b
  1582  001A3C  0101               	movlb	1	; () banked
  1583  001A3E  6F1E               	movwf	(??_main+5)& (0+255),b
  1584  001A40  500B               	movf	_time_counter+2,w,c	;volatile
  1585  001A42  0101               	movlb	1	; () banked
  1586  001A44  211B               	addwfc	(??_main+2)& (0+255),w,b
  1587  001A46  0101               	movlb	1	; () banked
  1588  001A48  6F1F               	movwf	(??_main+6)& (0+255),b
  1589  001A4A  500C               	movf	_time_counter+3,w,c	;volatile
  1590  001A4C  0101               	movlb	1	; () banked
  1591  001A4E  211C               	addwfc	(??_main+3)& (0+255),w,b
  1592  001A50  0101               	movlb	1	; () banked
  1593  001A52  6F20               	movwf	(??_main+7)& (0+255),b
  1594  001A54  0101               	movlb	1	; () banked
  1595  001A56  5120               	movf	(??_main+7)& (0+255),w,b
  1596  001A58  0101               	movlb	1	; () banked
  1597  001A5A  111F               	iorwf	(??_main+6)& (0+255),w,b
  1598  001A5C  0101               	movlb	1	; () banked
  1599  001A5E  111E               	iorwf	(??_main+5)& (0+255),w,b
  1600  001A60  E105               	bnz	u6570
  1601  001A62  0E1E               	movlw	30
  1602  001A64  0101               	movlb	1	; () banked
  1603  001A66  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1604  001A68  A0D8               	btfss	status,0,c
  1605  001A6A  D66A               	goto	l5574
  1606  001A6C                     u6570:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;telecomando.c: 205: pr_time_3 = time_counter;
  1610  001A6C  C009  F0D4         	movff	_time_counter,_pr_time_3	;volatile
  1611  001A70  C00A  F0D5         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1612  001A74  C00B  F0D6         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1613  001A78  C00C  F0D7         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;telecomando.c: 206: LCD_Handler();
  1617  001A7C  EC60  F012         	call	_LCD_Handler	;wreg free
  1618  001A80  D65F               	goto	l5574
  1619  001A82                     __end_of_main:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodl	equ	0xFF3
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _board_initialization *****************
  1631 ;; Defined at:
  1632 ;;		line 266 in file "telecomando.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;		None               void
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1646 ;;      Params:         0       0       0       0
  1647 ;;      Locals:         0       0       0       0
  1648 ;;      Temps:          0       0       0       0
  1649 ;;      Totals:         0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:   10
  1653 ;; This function calls:
  1654 ;;		_LCD_backlight
  1655 ;;		_LCD_clear
  1656 ;;		_LCD_goto_line
  1657 ;;		_LCD_initialize
  1658 ;;		_LCD_write_message
  1659 ;;		_OpenUSART
  1660 ;;		_delay_ms
  1661 ;;		_delay_s
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text1
  1668  0028AC                     __ptext1:
  1669                           	opt stack 0
  1670  0028AC                     _board_initialization:
  1671                           	opt stack 20
  1672                           
  1673                           ;telecomando.c: 268: LATA = 0x00;
  1674                           
  1675                           ;incstack = 0
  1676  0028AC  0E00               	movlw	0
  1677  0028AE  6E89               	movwf	3977,c	;volatile
  1678                           
  1679                           ;telecomando.c: 269: TRISA = 0b00001111;
  1680  0028B0  0E0F               	movlw	15
  1681  0028B2  6E92               	movwf	3986,c	;volatile
  1682                           
  1683                           ;telecomando.c: 270: LATB = 0x00;
  1684  0028B4  0E00               	movlw	0
  1685  0028B6  6E8A               	movwf	3978,c	;volatile
  1686                           
  1687                           ;telecomando.c: 271: TRISB = 0xFF;
  1688  0028B8  6893               	setf	3987,c	;volatile
  1689                           
  1690                           ;telecomando.c: 272: LATC = 0x00;
  1691  0028BA  0E00               	movlw	0
  1692  0028BC  6E8B               	movwf	3979,c	;volatile
  1693                           
  1694                           ;telecomando.c: 273: TRISC = 0b10110000;
  1695  0028BE  0EB0               	movlw	176
  1696  0028C0  6E94               	movwf	3988,c	;volatile
  1697                           
  1698                           ;telecomando.c: 274: LATD = 0x00;
  1699  0028C2  0E00               	movlw	0
  1700  0028C4  6E8C               	movwf	3980,c	;volatile
  1701                           
  1702                           ;telecomando.c: 275: TRISD = 0x00;
  1703  0028C6  0E00               	movlw	0
  1704  0028C8  6E95               	movwf	3989,c	;volatile
  1705                           
  1706                           ;telecomando.c: 276: LATE = 0x00;
  1707  0028CA  0E00               	movlw	0
  1708  0028CC  6E8D               	movwf	3981,c	;volatile
  1709                           
  1710                           ;telecomando.c: 277: TRISE = 0x00;
  1711  0028CE  0E00               	movlw	0
  1712  0028D0  6E96               	movwf	3990,c	;volatile
  1713                           
  1714                           ;telecomando.c: 280: PIR1bits.RCIF = 0;
  1715  0028D2  9A9E               	bcf	3998,5,c	;volatile
  1716                           
  1717                           ;telecomando.c: 281: PIR2bits.TMR3IF = 0;
  1718  0028D4  92A1               	bcf	4001,1,c	;volatile
  1719                           
  1720                           ;telecomando.c: 284: RCONbits.IPEN = 1;
  1721  0028D6  8ED0               	bsf	4048,7,c	;volatile
  1722                           
  1723                           ;telecomando.c: 285: IPR1bits.RCIP = 1;
  1724  0028D8  8A9F               	bsf	3999,5,c	;volatile
  1725                           
  1726                           ;telecomando.c: 286: IPR2bits.TMR3IP = 0;
  1727  0028DA  92A2               	bcf	4002,1,c	;volatile
  1728                           
  1729                           ;telecomando.c: 289: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1730  0028DC  0E4F               	movlw	79
  1731  0028DE  16AB               	andwf	4011,f,c	;volatile
  1732  0028E0  9AAC               	bcf	4012,5,c	;volatile
  1733  0028E2  0ECF               	movlw	207
  1734  0028E4  169D               	andwf	3997,f,c	;volatile
  1735                           
  1736                           ;telecomando.c: 290: delay_ms(10);
  1737  0028E6  0E00               	movlw	0
  1738  0028E8  0100               	movlb	0	; () banked
  1739  0028EA  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1740  0028EC  0E0A               	movlw	10
  1741  0028EE  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1742  0028F0  EC6C  F017         	call	_delay_ms	;wreg free
  1743                           
  1744                           ;telecomando.c: 291: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1745                           ;telecomando.c: 292: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1746  0028F4  0E00               	movlw	0
  1747  0028F6  6E3D               	movwf	OpenUSART@spbrg+1,c
  1748  0028F8  0E67               	movlw	103
  1749  0028FA  6E3C               	movwf	OpenUSART@spbrg,c
  1750  0028FC  0E7C               	movlw	124
  1751  0028FE  EC41  F016         	call	_OpenUSART
  1752                           
  1753                           ;telecomando.c: 295: ADCON1 = 0b00001101;
  1754  002902  0E0D               	movlw	13
  1755  002904  6EC1               	movwf	4033,c	;volatile
  1756                           
  1757                           ;telecomando.c: 296: ADCON0bits.CHS2 = 0;
  1758  002906  98C2               	bcf	4034,4,c	;volatile
  1759                           
  1760                           ;telecomando.c: 297: ADCON0bits.CHS1 = 0;
  1761  002908  96C2               	bcf	4034,3,c	;volatile
  1762                           
  1763                           ;telecomando.c: 298: ADCON0bits.CHS0 = 0;
  1764  00290A  94C2               	bcf	4034,2,c	;volatile
  1765                           
  1766                           ;telecomando.c: 299: ADCON2bits.ACQT2 = 1;
  1767  00290C  8AC0               	bsf	4032,5,c	;volatile
  1768                           
  1769                           ;telecomando.c: 300: ADCON2bits.ACQT1 = 1;
  1770  00290E  88C0               	bsf	4032,4,c	;volatile
  1771                           
  1772                           ;telecomando.c: 301: ADCON2bits.ACQT0 = 0;
  1773  002910  96C0               	bcf	4032,3,c	;volatile
  1774                           
  1775                           ;telecomando.c: 302: ADCON2bits.ADCS2 = 1;
  1776  002912  84C0               	bsf	4032,2,c	;volatile
  1777                           
  1778                           ;telecomando.c: 303: ADCON2bits.ADCS1 = 0;
  1779  002914  92C0               	bcf	4032,1,c	;volatile
  1780                           
  1781                           ;telecomando.c: 304: ADCON2bits.ADCS0 = 1;
  1782  002916  80C0               	bsf	4032,0,c	;volatile
  1783                           
  1784                           ;telecomando.c: 305: ADCON2bits.ADFM = 0;
  1785  002918  9EC0               	bcf	4032,7,c	;volatile
  1786                           
  1787                           ;telecomando.c: 306: ADCON0bits.ADON = 1;
  1788  00291A  80C2               	bsf	4034,0,c	;volatile
  1789                           
  1790                           ;telecomando.c: 308: PORTDbits.RD2 = 1;
  1791  00291C  8483               	bsf	3971,2,c	;volatile
  1792                           
  1793                           ;telecomando.c: 309: delay_ms(10);
  1794  00291E  0E00               	movlw	0
  1795  002920  0100               	movlb	0	; () banked
  1796  002922  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1797  002924  0E0A               	movlw	10
  1798  002926  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1799  002928  EC6C  F017         	call	_delay_ms	;wreg free
  1800                           
  1801                           ;telecomando.c: 310: PORTDbits.RD3 = 1;
  1802  00292C  8683               	bsf	3971,3,c	;volatile
  1803                           
  1804                           ;telecomando.c: 311: delay_s(1);
  1805  00292E  0E01               	movlw	1
  1806  002930  EC9C  F017         	call	_delay_s
  1807                           
  1808                           ;telecomando.c: 313: LCD_initialize(16);
  1809  002934  0E10               	movlw	16
  1810  002936  EC4C  F010         	call	_LCD_initialize
  1811                           
  1812                           ;telecomando.c: 314: LCD_backlight(0);
  1813  00293A  0E00               	movlw	0
  1814  00293C  EC4F  F018         	call	_LCD_backlight
  1815                           
  1816                           ;telecomando.c: 315: LCD_clear();
  1817  002940  EC53  F017         	call	_LCD_clear	;wreg free
  1818                           
  1819                           ;telecomando.c: 316: LCD_goto_line(1);
  1820  002944  0E01               	movlw	1
  1821  002946  EC71  F013         	call	_LCD_goto_line
  1822                           
  1823                           ;telecomando.c: 318: LCD_write_message("Wait...");
  1824  00294A  0EE7               	movlw	low STR_13
  1825  00294C  0100               	movlb	0	; () banked
  1826  00294E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1827  002950  0E3F               	movlw	high STR_13
  1828  002952  0100               	movlb	0	; () banked
  1829  002954  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1830  002956  ECB2  F017         	call	_LCD_write_message	;wreg free
  1831                           
  1832                           ;telecomando.c: 320: PORTDbits.RD2 = 0;
  1833  00295A  9483               	bcf	3971,2,c	;volatile
  1834                           
  1835                           ;telecomando.c: 321: PORTDbits.RD3 = 0;
  1836  00295C  9683               	bcf	3971,3,c	;volatile
  1837                           
  1838                           ;telecomando.c: 324: TMR3H = 0x63;
  1839  00295E  0E63               	movlw	99
  1840  002960  6EB3               	movwf	4019,c	;volatile
  1841                           
  1842                           ;telecomando.c: 325: TMR3L = 0xC0;
  1843  002962  0EC0               	movlw	192
  1844  002964  6EB2               	movwf	4018,c	;volatile
  1845                           
  1846                           ;telecomando.c: 328: PIE1bits.RCIE = 1;
  1847  002966  8A9D               	bsf	3997,5,c	;volatile
  1848                           
  1849                           ;telecomando.c: 329: PIE2bits.TMR3IE = 1;
  1850  002968  82A0               	bsf	4000,1,c	;volatile
  1851                           
  1852                           ;telecomando.c: 330: INTCONbits.GIEH = 1;
  1853  00296A  8EF2               	bsf	intcon,7,c	;volatile
  1854                           
  1855                           ;telecomando.c: 331: INTCONbits.GIEL = 1;
  1856  00296C  8CF2               	bsf	intcon,6,c	;volatile
  1857                           
  1858                           ;telecomando.c: 333: RCSTAbits.SPEN = 1;
  1859  00296E  8EAB               	bsf	4011,7,c	;volatile
  1860                           
  1861                           ;telecomando.c: 334: T3CON = 0x01;
  1862  002970  0E01               	movlw	1
  1863  002972  6EB1               	movwf	4017,c	;volatile
  1864                           
  1865                           ;telecomando.c: 335: LCD_clear();
  1866  002974  EC53  F017         	call	_LCD_clear	;wreg free
  1867  002978  0012               	return		;funcret
  1868  00297A                     __end_of_board_initialization:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodl	equ	0xFF3
  1875                           intcon	equ	0xFF2
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function _delay_s *****************
  1881 ;; Defined at:
  1882 ;;		line 102 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  value_s         1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  value_s         1   18[BANK0 ] unsigned char 
  1887 ;;  repeat_loop     1   19[BANK0 ] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;		None               void
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1897 ;;      Params:         0       0       0       0
  1898 ;;      Locals:         0       2       0       0
  1899 ;;      Temps:          0       0       0       0
  1900 ;;      Totals:         0       2       0       0
  1901 ;;Total ram usage:        2 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    6
  1904 ;; This function calls:
  1905 ;;		_delay_ms
  1906 ;; This function is called by:
  1907 ;;		_board_initialization
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text2
  1912  002F38                     __ptext2:
  1913                           	opt stack 0
  1914  002F38                     _delay_s:
  1915                           	opt stack 23
  1916                           
  1917                           ;incstack = 0
  1918                           ;delay_s@value_s stored from wreg
  1919  002F38  0100               	movlb	0	; () banked
  1920  002F3A  6F72               	movwf	delay_s@value_s& (0+255),b
  1921                           
  1922                           ;src\delay.c: 104: unsigned char repeat_loop;
  1923                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1924  002F3C  0E00               	movlw	0
  1925  002F3E  0100               	movlb	0	; () banked
  1926  002F40  6F73               	movwf	delay_s@repeat_loop& (0+255),b
  1927  002F42  D009               	goto	l5084
  1928  002F44                     l5080:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;src\delay.c: 107: delay_ms (1000);
  1932  002F44  0E03               	movlw	3
  1933  002F46  0100               	movlb	0	; () banked
  1934  002F48  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1935  002F4A  0EE8               	movlw	232
  1936  002F4C  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1937  002F4E  EC6C  F017         	call	_delay_ms	;wreg free
  1938  002F52  0100               	movlb	0	; () banked
  1939  002F54  2B73               	incf	delay_s@repeat_loop& (0+255),f,b
  1940  002F56                     l5084:
  1941                           
  1942                           ; BSR set to: 0
  1943  002F56  0100               	movlb	0	; () banked
  1944  002F58  5172               	movf	delay_s@value_s& (0+255),w,b
  1945  002F5A  0100               	movlb	0	; () banked
  1946  002F5C  5D73               	subwf	delay_s@repeat_loop& (0+255),w,b
  1947  002F5E  B0D8               	btfsc	status,0,c
  1948  002F60  0012               	return	
  1949  002F62  D7F0               	goto	l5080
  1950  002F64                     __end_of_delay_s:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodl	equ	0xFF3
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _OpenUSART *****************
  1963 ;; Defined at:
  1964 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  config          1    wreg     unsigned char 
  1967 ;;  spbrg           2   24[COMRAM] unsigned int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  config          1   26[COMRAM] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;		None               void
  1972 ;; Registers used:
  1973 ;;		wreg, status,2
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1979 ;;      Params:         2       0       0       0
  1980 ;;      Locals:         1       0       0       0
  1981 ;;      Temps:          0       0       0       0
  1982 ;;      Totals:         3       0       0       0
  1983 ;;Total ram usage:        3 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_board_initialization
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text3
  1994  002C82                     __ptext3:
  1995                           	opt stack 0
  1996  002C82                     _OpenUSART:
  1997                           	opt stack 25
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;incstack = 0
  2001                           ;OpenUSART@config stored from wreg
  2002  002C82  6E3E               	movwf	OpenUSART@config,c
  2003  002C84  0E00               	movlw	0
  2004  002C86  6EAC               	movwf	4012,c	;volatile
  2005  002C88  0E00               	movlw	0
  2006  002C8A  6EAB               	movwf	4011,c	;volatile
  2007  002C8C  B03E               	btfsc	OpenUSART@config,0,c
  2008  002C8E  88AC               	bsf	4012,4,c	;volatile
  2009  002C90  A23E               	btfss	OpenUSART@config,1,c
  2010  002C92  D002               	goto	l3804
  2011  002C94  8CAC               	bsf	4012,6,c	;volatile
  2012  002C96  8CAB               	bsf	4011,6,c	;volatile
  2013  002C98                     l3804:
  2014  002C98  B43E               	btfsc	OpenUSART@config,2,c
  2015  002C9A  8EAC               	bsf	4012,7,c	;volatile
  2016  002C9C  A63E               	btfss	OpenUSART@config,3,c
  2017  002C9E  D002               	goto	l422
  2018  002CA0  88AB               	bsf	4011,4,c	;volatile
  2019  002CA2  D001               	goto	l3812
  2020  002CA4                     l422:
  2021  002CA4  8AAB               	bsf	4011,5,c	;volatile
  2022  002CA6                     l3812:
  2023  002CA6  B83E               	btfsc	OpenUSART@config,4,c
  2024  002CA8  84AC               	bsf	4012,2,c	;volatile
  2025  002CAA  989E               	bcf	3998,4,c	;volatile
  2026  002CAC  BA3E               	btfsc	OpenUSART@config,5,c
  2027  002CAE  86AB               	bsf	4011,3,c	;volatile
  2028  002CB0  AC3E               	btfss	OpenUSART@config,6,c
  2029  002CB2  D002               	goto	l426
  2030  002CB4  8A9D               	bsf	3997,5,c	;volatile
  2031  002CB6  D001               	goto	l427
  2032  002CB8                     l426:
  2033  002CB8  9A9D               	bcf	3997,5,c	;volatile
  2034  002CBA                     l427:
  2035  002CBA  9A9E               	bcf	3998,5,c	;volatile
  2036  002CBC  AE3E               	btfss	OpenUSART@config,7,c
  2037  002CBE  D002               	goto	l428
  2038  002CC0  889D               	bsf	3997,4,c	;volatile
  2039  002CC2  D001               	goto	l429
  2040  002CC4                     l428:
  2041  002CC4  989D               	bcf	3997,4,c	;volatile
  2042  002CC6                     l429:
  2043  002CC6  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2044  002CCA  503D               	movf	OpenUSART@spbrg+1,w,c
  2045  002CCC  6EB0               	movwf	4016,c	;volatile
  2046  002CCE  8AAC               	bsf	4012,5,c	;volatile
  2047  002CD0  8EAB               	bsf	4011,7,c	;volatile
  2048  002CD2  9C94               	bcf	3988,6,c	;volatile
  2049  002CD4  8E94               	bsf	3988,7,c	;volatile
  2050  002CD6  A8AC               	btfss	4012,4,c	;volatile
  2051  002CD8  0012               	return	
  2052  002CDA  BEAC               	btfsc	4012,7,c	;volatile
  2053  002CDC  0012               	return	
  2054  002CDE  8C94               	bsf	3988,6,c	;volatile
  2055  002CE0  0012               	return	
  2056  002CE2                     __end_of_OpenUSART:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _LCD_initialize *****************
  2069 ;; Defined at:
  2070 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  quartz_frequ    1    wreg     unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;		None               void
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2084 ;;      Params:         0       0       0       0
  2085 ;;      Locals:         0       1       0       0
  2086 ;;      Temps:          0       0       0       0
  2087 ;;      Totals:         0       1       0       0
  2088 ;;Total ram usage:        1 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    9
  2091 ;; This function calls:
  2092 ;;		_LCD_clear
  2093 ;;		_LCD_cursor
  2094 ;;		_LCD_send_command
  2095 ;;		_delay_ms
  2096 ;;		_delay_set_quartz
  2097 ;; This function is called by:
  2098 ;;		_board_initialization
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text4
  2103  002098                     __ptext4:
  2104                           	opt stack 0
  2105  002098                     _LCD_initialize:
  2106                           	opt stack 20
  2107                           
  2108                           ;incstack = 0
  2109                           ;LCD_initialize@quartz_frequency stored from wreg
  2110  002098  0100               	movlb	0	; () banked
  2111  00209A  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2112                           
  2113                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2114  00209C  0100               	movlb	0	; () banked
  2115  00209E  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2116  0020A0  EC56  F018         	call	_delay_set_quartz
  2117                           
  2118                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  2119  0020A4  928A               	bcf	3978,1,c	;volatile
  2120                           
  2121                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  2122  0020A6  968A               	bcf	3978,3,c	;volatile
  2123                           
  2124                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  2125  0020A8  948A               	bcf	3978,2,c	;volatile
  2126                           
  2127                           ;src\LCD_44780.c: 291: delay_ms (100);
  2128  0020AA  0E00               	movlw	0
  2129  0020AC  0100               	movlb	0	; () banked
  2130  0020AE  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2131  0020B0  0E64               	movlw	100
  2132  0020B2  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2133  0020B4  EC6C  F017         	call	_delay_ms	;wreg free
  2134                           
  2135                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2136  0020B8  0E00               	movlw	0
  2137  0020BA  0100               	movlb	0	; () banked
  2138  0020BC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2139  0020BE  0E01               	movlw	1
  2140  0020C0  0100               	movlb	0	; () banked
  2141  0020C2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2142  0020C4  0E01               	movlw	1
  2143  0020C6  0100               	movlb	0	; () banked
  2144  0020C8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2145  0020CA  0E00               	movlw	0
  2146  0020CC  EC05  F017         	call	_LCD_send_command
  2147                           
  2148                           ;src\LCD_44780.c: 293: delay_ms (100);
  2149  0020D0  0E00               	movlw	0
  2150  0020D2  0100               	movlb	0	; () banked
  2151  0020D4  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2152  0020D6  0E64               	movlw	100
  2153  0020D8  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2154  0020DA  EC6C  F017         	call	_delay_ms	;wreg free
  2155                           
  2156                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2157  0020DE  0E00               	movlw	0
  2158  0020E0  0100               	movlb	0	; () banked
  2159  0020E2  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2160  0020E4  0E01               	movlw	1
  2161  0020E6  0100               	movlb	0	; () banked
  2162  0020E8  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2163  0020EA  0E01               	movlw	1
  2164  0020EC  0100               	movlb	0	; () banked
  2165  0020EE  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2166  0020F0  0E00               	movlw	0
  2167  0020F2  EC05  F017         	call	_LCD_send_command
  2168                           
  2169                           ;src\LCD_44780.c: 295: delay_ms (10);
  2170  0020F6  0E00               	movlw	0
  2171  0020F8  0100               	movlb	0	; () banked
  2172  0020FA  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2173  0020FC  0E0A               	movlw	10
  2174  0020FE  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2175  002100  EC6C  F017         	call	_delay_ms	;wreg free
  2176                           
  2177                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2178  002104  0E00               	movlw	0
  2179  002106  0100               	movlb	0	; () banked
  2180  002108  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2181  00210A  0E01               	movlw	1
  2182  00210C  0100               	movlb	0	; () banked
  2183  00210E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2184  002110  0E01               	movlw	1
  2185  002112  0100               	movlb	0	; () banked
  2186  002114  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2187  002116  0E00               	movlw	0
  2188  002118  EC05  F017         	call	_LCD_send_command
  2189                           
  2190                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2191  00211C  0E00               	movlw	0
  2192  00211E  0100               	movlb	0	; () banked
  2193  002120  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2194  002122  0E01               	movlw	1
  2195  002124  0100               	movlb	0	; () banked
  2196  002126  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2197  002128  0E00               	movlw	0
  2198  00212A  0100               	movlb	0	; () banked
  2199  00212C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2200  00212E  0E00               	movlw	0
  2201  002130  EC05  F017         	call	_LCD_send_command
  2202                           
  2203                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2204  002134  0E00               	movlw	0
  2205  002136  0100               	movlb	0	; () banked
  2206  002138  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2207  00213A  0E01               	movlw	1
  2208  00213C  0100               	movlb	0	; () banked
  2209  00213E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2210  002140  0E00               	movlw	0
  2211  002142  0100               	movlb	0	; () banked
  2212  002144  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2213  002146  0E00               	movlw	0
  2214  002148  EC05  F017         	call	_LCD_send_command
  2215                           
  2216                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2217  00214C  0E00               	movlw	0
  2218  00214E  0100               	movlb	0	; () banked
  2219  002150  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2220  002152  0E00               	movlw	0
  2221  002154  0100               	movlb	0	; () banked
  2222  002156  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2223  002158  0E00               	movlw	0
  2224  00215A  0100               	movlb	0	; () banked
  2225  00215C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2226  00215E  0E01               	movlw	1
  2227  002160  EC05  F017         	call	_LCD_send_command
  2228                           
  2229                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2230  002164  0E00               	movlw	0
  2231  002166  0100               	movlb	0	; () banked
  2232  002168  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2233  00216A  0E00               	movlw	0
  2234  00216C  0100               	movlb	0	; () banked
  2235  00216E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2236  002170  0E00               	movlw	0
  2237  002172  0100               	movlb	0	; () banked
  2238  002174  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2239  002176  0E00               	movlw	0
  2240  002178  EC05  F017         	call	_LCD_send_command
  2241                           
  2242                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2243  00217C  0E00               	movlw	0
  2244  00217E  0100               	movlb	0	; () banked
  2245  002180  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2246  002182  0E00               	movlw	0
  2247  002184  0100               	movlb	0	; () banked
  2248  002186  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2249  002188  0E00               	movlw	0
  2250  00218A  0100               	movlb	0	; () banked
  2251  00218C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2252  00218E  0E01               	movlw	1
  2253  002190  EC05  F017         	call	_LCD_send_command
  2254                           
  2255                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2256  002194  0E00               	movlw	0
  2257  002196  0100               	movlb	0	; () banked
  2258  002198  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2259  00219A  0E00               	movlw	0
  2260  00219C  0100               	movlb	0	; () banked
  2261  00219E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2262  0021A0  0E00               	movlw	0
  2263  0021A2  0100               	movlb	0	; () banked
  2264  0021A4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2265  0021A6  0E00               	movlw	0
  2266  0021A8  EC05  F017         	call	_LCD_send_command
  2267                           
  2268                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2269  0021AC  0E00               	movlw	0
  2270  0021AE  0100               	movlb	0	; () banked
  2271  0021B0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2272  0021B2  0E00               	movlw	0
  2273  0021B4  0100               	movlb	0	; () banked
  2274  0021B6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2275  0021B8  0E01               	movlw	1
  2276  0021BA  0100               	movlb	0	; () banked
  2277  0021BC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2278  0021BE  0E00               	movlw	0
  2279  0021C0  EC05  F017         	call	_LCD_send_command
  2280                           
  2281                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2282  0021C4  0E00               	movlw	0
  2283  0021C6  0100               	movlb	0	; () banked
  2284  0021C8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2285  0021CA  0E00               	movlw	0
  2286  0021CC  0100               	movlb	0	; () banked
  2287  0021CE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2288  0021D0  0E00               	movlw	0
  2289  0021D2  0100               	movlb	0	; () banked
  2290  0021D4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2291  0021D6  0E00               	movlw	0
  2292  0021D8  EC05  F017         	call	_LCD_send_command
  2293                           
  2294                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2295  0021DC  0E01               	movlw	1
  2296  0021DE  0100               	movlb	0	; () banked
  2297  0021E0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2298  0021E2  0E01               	movlw	1
  2299  0021E4  0100               	movlb	0	; () banked
  2300  0021E6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2301  0021E8  0E00               	movlw	0
  2302  0021EA  0100               	movlb	0	; () banked
  2303  0021EC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2304  0021EE  0E00               	movlw	0
  2305  0021F0  EC05  F017         	call	_LCD_send_command
  2306                           
  2307                           ;src\LCD_44780.c: 312: LCD_clear ();
  2308  0021F4  EC53  F017         	call	_LCD_clear	;wreg free
  2309                           
  2310                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2311  0021F8  0E00               	movlw	0
  2312  0021FA  0100               	movlb	0	; () banked
  2313  0021FC  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  2314  0021FE  0E00               	movlw	0
  2315  002200  EC3A  F017         	call	_LCD_cursor
  2316  002204  0012               	return		;funcret
  2317  002206                     __end_of_LCD_initialize:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodl	equ	0xFF3
  2324                           intcon	equ	0xFF2
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           status	equ	0xFD8
  2328                           
  2329 ;; *************** function _delay_set_quartz *****************
  2330 ;; Defined at:
  2331 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  frequency       1    wreg     unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  frequency       1   24[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;		None               void
  2338 ;; Registers used:
  2339 ;;		wreg
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2345 ;;      Params:         0       0       0       0
  2346 ;;      Locals:         1       0       0       0
  2347 ;;      Temps:          0       0       0       0
  2348 ;;      Totals:         1       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_LCD_initialize
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text5
  2360  0030AC                     __ptext5:
  2361                           	opt stack 0
  2362  0030AC                     _delay_set_quartz:
  2363                           	opt stack 24
  2364                           
  2365                           ;incstack = 0
  2366                           ;delay_set_quartz@frequency stored from wreg
  2367  0030AC  6E3C               	movwf	delay_set_quartz@frequency,c
  2368                           
  2369                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2370  0030AE  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2371  0030B2  0012               	return		;funcret
  2372  0030B4                     __end_of_delay_set_quartz:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           prodl	equ	0xFF3
  2379                           intcon	equ	0xFF2
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _LCD_cursor *****************
  2385 ;; Defined at:
  2386 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  active          1    wreg     unsigned char 
  2389 ;;  blinking        1   21[BANK0 ] unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  active          1   22[BANK0 ] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2401 ;;      Params:         0       1       0       0
  2402 ;;      Locals:         0       1       0       0
  2403 ;;      Temps:          0       0       0       0
  2404 ;;      Totals:         0       2       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    8
  2408 ;; This function calls:
  2409 ;;		_LCD_send_command
  2410 ;; This function is called by:
  2411 ;;		_LCD_initialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text6
  2416  002E74                     __ptext6:
  2417                           	opt stack 0
  2418  002E74                     _LCD_cursor:
  2419                           	opt stack 20
  2420                           
  2421                           ;incstack = 0
  2422                           ;LCD_cursor@active stored from wreg
  2423  002E74  0100               	movlb	0	; () banked
  2424  002E76  6F76               	movwf	LCD_cursor@active& (0+255),b
  2425                           
  2426                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2427  002E78  0E00               	movlw	0
  2428  002E7A  0100               	movlb	0	; () banked
  2429  002E7C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2430  002E7E  0E00               	movlw	0
  2431  002E80  0100               	movlb	0	; () banked
  2432  002E82  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2433  002E84  0E00               	movlw	0
  2434  002E86  0100               	movlb	0	; () banked
  2435  002E88  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2436  002E8A  0E00               	movlw	0
  2437  002E8C  EC05  F017         	call	_LCD_send_command
  2438                           
  2439                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2440  002E90  0E01               	movlw	1
  2441  002E92  0100               	movlb	0	; () banked
  2442  002E94  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2443  002E96  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2444  002E9A  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2445  002E9E  0E01               	movlw	1
  2446  002EA0  EC05  F017         	call	_LCD_send_command
  2447  002EA4  0012               	return		;funcret
  2448  002EA6                     __end_of_LCD_cursor:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodl	equ	0xFF3
  2455                           intcon	equ	0xFF2
  2456                           postinc0	equ	0xFEE
  2457                           wreg	equ	0xFE8
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _LCD_backlight *****************
  2461 ;; Defined at:
  2462 ;;		line 275 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  active          1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  active          1   24[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2476 ;;      Params:         0       0       0       0
  2477 ;;      Locals:         1       0       0       0
  2478 ;;      Temps:          0       0       0       0
  2479 ;;      Totals:         1       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    4
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_board_initialization
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text7
  2491  00309E                     __ptext7:
  2492                           	opt stack 0
  2493  00309E                     _LCD_backlight:
  2494                           	opt stack 25
  2495                           
  2496                           ;incstack = 0
  2497                           ;LCD_backlight@active stored from wreg
  2498  00309E  6E3C               	movwf	LCD_backlight@active,c
  2499                           
  2500                           ;src\LCD_44780.c: 277: LATCbits.LATC2 = active;
  2501  0030A0  B03C               	btfsc	LCD_backlight@active,0,c
  2502  0030A2  D002               	bra	u3625
  2503  0030A4  948B               	bcf	3979,2,c	;volatile
  2504  0030A6  D001               	bra	u3626
  2505  0030A8                     u3625:
  2506  0030A8  848B               	bsf	3979,2,c	;volatile
  2507  0030AA                     u3626:
  2508  0030AA  0012               	return		;funcret
  2509  0030AC                     __end_of_LCD_backlight:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodl	equ	0xFF3
  2516                           intcon	equ	0xFF2
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _USART_Send *****************
  2522 ;; Defined at:
  2523 ;;		line 224 in file "telecomando.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2537 ;;      Params:         0       0       0       0
  2538 ;;      Locals:         0       0       0       0
  2539 ;;      Temps:          0       0       0       0
  2540 ;;      Totals:         0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    6
  2544 ;; This function calls:
  2545 ;;		_putsUSART
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text8
  2552  002E40                     __ptext8:
  2553                           	opt stack 0
  2554  002E40                     _USART_Send:
  2555                           	opt stack 24
  2556                           
  2557                           ;telecomando.c: 225: set_speed_pk1 = set_speed >> 8;
  2558                           
  2559                           ;incstack = 0
  2560  002E40  500E               	movf	_set_speed+1,w,c	;volatile
  2561  002E42  6E17               	movwf	_set_speed_pk1,c	;volatile
  2562                           
  2563                           ;telecomando.c: 226: set_speed_pk0 = set_speed;
  2564  002E44  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2565                           
  2566                           ;telecomando.c: 227: USART_Tx[1] = dir;
  2567  002E48  0E00               	movlw	0
  2568  002E4A  B243               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2569  002E4C  0E01               	movlw	1
  2570  002E4E  0100               	movlb	0	; () banked
  2571  002E50  6FE3               	movwf	(_USART_Tx+1)& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;telecomando.c: 228: USART_Tx[2] = set_speed_pk1;
  2575  002E52  C017  F0E4         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;telecomando.c: 229: USART_Tx[3] = set_speed_pk0;
  2579  002E56  C016  F0E5         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;telecomando.c: 230: USART_Tx[4] = set_steering;
  2583  002E5A  C018  F0E6         	movff	_set_steering,_USART_Tx+4	;volatile
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;telecomando.c: 231: USART_Tx[5] = analogic_brake;
  2587  002E5E  C014  F0E7         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2588  002E62                     l279:
  2589  002E62  A2AC               	btfss	4012,1,c	;volatile
  2590  002E64  D7FE               	goto	l279
  2591                           
  2592                           ;telecomando.c: 234: putsUSART((char *) USART_Tx);
  2593  002E66  0EE2               	movlw	low _USART_Tx
  2594  002E68  6E3D               	movwf	putsUSART@data,c
  2595  002E6A  0E00               	movlw	high _USART_Tx
  2596  002E6C  6E3E               	movwf	putsUSART@data+1,c
  2597  002E6E  ECDE  F017         	call	_putsUSART	;wreg free
  2598  002E72  0012               	return		;funcret
  2599  002E74                     __end_of_USART_Send:
  2600                           	opt stack 0
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           prodl	equ	0xFF3
  2606                           intcon	equ	0xFF2
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _putsUSART *****************
  2612 ;; Defined at:
  2613 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  data            2   25[COMRAM] PTR unsigned char 
  2616 ;;		 -> USART_Tx(8), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;		None               void
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2628 ;;      Params:         2       0       0       0
  2629 ;;      Locals:         0       0       0       0
  2630 ;;      Temps:          0       0       0       0
  2631 ;;      Totals:         2       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    5
  2635 ;; This function calls:
  2636 ;;		_WriteUSART
  2637 ;; This function is called by:
  2638 ;;		_USART_Send
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text9
  2643  002FBC                     __ptext9:
  2644                           	opt stack 0
  2645  002FBC                     _putsUSART:
  2646                           	opt stack 24
  2647  002FBC                     l439:
  2648  002FBC  A2AC               	btfss	4012,1,c	;volatile
  2649  002FBE  D7FE               	goto	l439
  2650  002FC0  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2651  002FC4  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2652  002FC8  50DF               	movf	indf2,w,c
  2653  002FCA  EC46  F018         	call	_WriteUSART
  2654  002FCE  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2655  002FD2  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2656  002FD6  4A3D               	infsnz	putsUSART@data,f,c
  2657  002FD8  2A3E               	incf	putsUSART@data+1,f,c
  2658  002FDA  50DF               	movf	indf2,w,c
  2659  002FDC  B4D8               	btfsc	status,2,c
  2660  002FDE  0012               	return	
  2661  002FE0  D7ED               	goto	l439
  2662  002FE2                     __end_of_putsUSART:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodl	equ	0xFF3
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           indf2	equ	0xFDF
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _WriteUSART *****************
  2678 ;; Defined at:
  2679 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  data            1    wreg     unsigned char 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  data            1   24[COMRAM] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;		None               void
  2686 ;; Registers used:
  2687 ;;		wreg
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2693 ;;      Params:         0       0       0       0
  2694 ;;      Locals:         1       0       0       0
  2695 ;;      Temps:          0       0       0       0
  2696 ;;      Totals:         1       0       0       0
  2697 ;;Total ram usage:        1 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_putsUSART
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text10
  2708  00308C                     __ptext10:
  2709                           	opt stack 0
  2710  00308C                     _WriteUSART:
  2711                           	opt stack 24
  2712                           
  2713                           ;incstack = 0
  2714                           ;WriteUSART@data stored from wreg
  2715  00308C  6E3C               	movwf	WriteUSART@data,c
  2716  00308E  ACAC               	btfss	4012,6,c	;volatile
  2717  003090  D003               	goto	l3342
  2718  003092  90AC               	bcf	4012,0,c	;volatile
  2719  003094  B211               	btfsc	_USART_Status,1,c
  2720  003096  80AC               	bsf	4012,0,c	;volatile
  2721  003098                     l3342:
  2722  003098  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2723  00309C  0012               	return		;funcret
  2724  00309E                     __end_of_WriteUSART:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           indf2	equ	0xFDF
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _LCD_Handler *****************
  2740 ;; Defined at:
  2741 ;;		line 237 in file "telecomando.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2755 ;;      Params:         0       0       0       0
  2756 ;;      Locals:         0       0       0       0
  2757 ;;      Temps:          0       0       0       0
  2758 ;;      Totals:         0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   10
  2762 ;; This function calls:
  2763 ;;		_LCD_clear
  2764 ;;		_LCD_goto_line
  2765 ;;		_LCD_write_message
  2766 ;;		_LCD_write_string
  2767 ;;		___lwdiv
  2768 ;;		___xxtofl
  2769 ;;		_sprintf
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text11
  2776  0024C0                     __ptext11:
  2777                           	opt stack 0
  2778  0024C0                     _LCD_Handler:
  2779                           	opt stack 20
  2780                           
  2781                           ;telecomando.c: 238: actual_speed_kmh = actual_speed / 278;
  2782                           
  2783                           ;incstack = 0
  2784  0024C0  0E01               	movlw	1
  2785  0024C2  6E3F               	movwf	___lwdiv@divisor+1,c
  2786  0024C4  0E16               	movlw	22
  2787  0024C6  6E3E               	movwf	___lwdiv@divisor,c
  2788  0024C8  C0D8  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2789  0024CC  C0D9  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2790  0024D0  EC71  F016         	call	___lwdiv	;wreg free
  2791  0024D4  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2792  0024D8  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2793  0024DC  0100               	movlb	0	; () banked
  2794  0024DE  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2795  0024E0  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2796  0024E2  0E00               	movlw	0
  2797  0024E4  EC9C  F00E         	call	___xxtofl
  2798  0024E8  C070  F0D0         	movff	?___xxtofl,_actual_speed_kmh
  2799  0024EC  C071  F0D1         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2800  0024F0  C072  F0D2         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2801  0024F4  C073  F0D3         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2802                           
  2803                           ;telecomando.c: 240: LCD_clear();
  2804  0024F8  EC53  F017         	call	_LCD_clear	;wreg free
  2805                           
  2806                           ;telecomando.c: 241: LCD_goto_line(1);
  2807  0024FC  0E01               	movlw	1
  2808  0024FE  EC71  F013         	call	_LCD_goto_line
  2809                           
  2810                           ;telecomando.c: 242: LCD_write_message("=== VEHICLE DATA ===");
  2811  002502  0EA5               	movlw	low STR_5
  2812  002504  0100               	movlb	0	; () banked
  2813  002506  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2814  002508  0E3F               	movlw	high STR_5
  2815  00250A  0100               	movlb	0	; () banked
  2816  00250C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2817  00250E  ECB2  F017         	call	_LCD_write_message	;wreg free
  2818                           
  2819                           ;telecomando.c: 244: LCD_goto_line(2);
  2820  002512  0E02               	movlw	2
  2821  002514  EC71  F013         	call	_LCD_goto_line
  2822                           
  2823                           ;telecomando.c: 245: LCD_write_message("Direction: ");
  2824  002518  0ECF               	movlw	low STR_6
  2825  00251A  0100               	movlb	0	; () banked
  2826  00251C  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2827  00251E  0E3F               	movlw	high STR_6
  2828  002520  0100               	movlb	0	; () banked
  2829  002522  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2830  002524  ECB2  F017         	call	_LCD_write_message	;wreg free
  2831                           
  2832                           ;telecomando.c: 246: if (switch_position != 0) {
  2833  002528  5019               	movf	_switch_position,w,c	;volatile
  2834  00252A  B4D8               	btfsc	status,2,c
  2835  00252C  D014               	goto	l5478
  2836                           
  2837                           ;telecomando.c: 247: if (dir == 1) {
  2838  00252E  A243               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2839  002530  D009               	goto	l5476
  2840                           
  2841                           ;telecomando.c: 248: LCD_write_message("FWD");
  2842  002532  0EF9               	movlw	low STR_7
  2843  002534  0100               	movlb	0	; () banked
  2844  002536  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2845  002538  0E3F               	movlw	high STR_7
  2846  00253A  0100               	movlb	0	; () banked
  2847  00253C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2848  00253E  ECB2  F017         	call	_LCD_write_message	;wreg free
  2849                           
  2850                           ;telecomando.c: 249: } else {
  2851  002542  D011               	goto	l5480
  2852  002544                     l5476:
  2853                           
  2854                           ;telecomando.c: 250: LCD_write_message("BKWD");
  2855  002544  0EEF               	movlw	low STR_8
  2856  002546  0100               	movlb	0	; () banked
  2857  002548  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2858  00254A  0E3F               	movlw	high STR_8
  2859  00254C  0100               	movlb	0	; () banked
  2860  00254E  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2861  002550  ECB2  F017         	call	_LCD_write_message	;wreg free
  2862                           
  2863                           ;telecomando.c: 251: }
  2864                           ;telecomando.c: 252: } else {
  2865  002554  D008               	goto	l5480
  2866  002556                     l5478:
  2867                           
  2868                           ;telecomando.c: 253: LCD_write_message("P");
  2869  002556  0EFD               	movlw	low STR_9
  2870  002558  0100               	movlb	0	; () banked
  2871  00255A  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2872  00255C  0E3F               	movlw	high STR_9
  2873  00255E  0100               	movlb	0	; () banked
  2874  002560  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2875  002562  ECB2  F017         	call	_LCD_write_message	;wreg free
  2876  002566                     l5480:
  2877                           
  2878                           ;telecomando.c: 254: }
  2879                           ;telecomando.c: 256: LCD_goto_line(3);
  2880  002566  0E03               	movlw	3
  2881  002568  EC71  F013         	call	_LCD_goto_line
  2882                           
  2883                           ;telecomando.c: 257: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2884  00256C  0E21               	movlw	low _str
  2885  00256E  0100               	movlb	0	; () banked
  2886  002570  6FC0               	movwf	sprintf@sp& (0+255),b
  2887  002572  0E01               	movlw	high _str
  2888  002574  0100               	movlb	0	; () banked
  2889  002576  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2890  002578  0EDB               	movlw	low STR_10
  2891  00257A  0100               	movlb	0	; () banked
  2892  00257C  6FC2               	movwf	sprintf@f& (0+255),b
  2893  00257E  0E3F               	movlw	high STR_10
  2894  002580  0100               	movlb	0	; () banked
  2895  002582  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2896  002584  C0D0  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2897  002588  C0D1  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2898  00258C  C0D2  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2899  002590  C0D3  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2900  002594  EC62  F000         	call	_sprintf	;wreg free
  2901                           
  2902                           ;telecomando.c: 258: str[11] = '\0';
  2903  002598  0E00               	movlw	0
  2904  00259A  0101               	movlb	1	; () banked
  2905  00259C  6F2C               	movwf	(_str+11)& (0+255),b
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;telecomando.c: 259: LCD_write_string(str);
  2909  00259E  0E21               	movlw	low _str
  2910  0025A0  0100               	movlb	0	; () banked
  2911  0025A2  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2912  0025A4  0E01               	movlw	high _str
  2913  0025A6  0100               	movlb	0	; () banked
  2914  0025A8  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2915  0025AA  ECF1  F017         	call	_LCD_write_string	;wreg free
  2916                           
  2917                           ;telecomando.c: 260: LCD_write_message("Km/h");
  2918  0025AE  0EF4               	movlw	low STR_11
  2919  0025B0  0100               	movlb	0	; () banked
  2920  0025B2  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2921  0025B4  0E3F               	movlw	high STR_11
  2922  0025B6  0100               	movlb	0	; () banked
  2923  0025B8  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2924  0025BA  ECB2  F017         	call	_LCD_write_message	;wreg free
  2925                           
  2926                           ;telecomando.c: 262: LCD_goto_line(4);
  2927  0025BE  0E04               	movlw	4
  2928  0025C0  EC71  F013         	call	_LCD_goto_line
  2929                           
  2930                           ;telecomando.c: 263: LCD_write_message("====================");
  2931  0025C4  0EBA               	movlw	low STR_1
  2932  0025C6  0100               	movlb	0	; () banked
  2933  0025C8  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2934  0025CA  0E3F               	movlw	high STR_1
  2935  0025CC  0100               	movlb	0	; () banked
  2936  0025CE  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2937  0025D0  ECB2  F017         	call	_LCD_write_message	;wreg free
  2938  0025D4  0012               	return		;funcret
  2939  0025D6                     __end_of_LCD_Handler:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           indf2	equ	0xFDF
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _sprintf *****************
  2955 ;; Defined at:
  2956 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  2959 ;;		 -> str(12), 
  2960 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  2961 ;;		 -> STR_10(12), 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2964 ;;  tmpval          4   14[BANK1 ] struct .
  2965 ;;  val             4    8[BANK1 ] unsigned long 
  2966 ;;  cp              3    0        PTR const unsigned char 
  2967 ;;  prec            2   18[BANK1 ] int 
  2968 ;;  exp             2   12[BANK1 ] int 
  2969 ;;  flag            2    6[BANK1 ] unsigned short 
  2970 ;;  ap              2    4[BANK1 ] PTR void [1]
  2971 ;;		 -> ?_sprintf(2), 
  2972 ;;  len             2    0        unsigned int 
  2973 ;;  width           2    0        int 
  2974 ;;  c               1   24[BANK1 ] char 
  2975 ;;  d               1    0        unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   96[BANK0 ] int 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2985 ;;      Params:         0       8       0       0
  2986 ;;      Locals:         0       0      25       0
  2987 ;;      Temps:          0       2       0       0
  2988 ;;      Totals:         0      10      25       0
  2989 ;;Total ram usage:       35 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    6
  2992 ;; This function calls:
  2993 ;;		___awdiv
  2994 ;;		___fladd
  2995 ;;		___flge
  2996 ;;		___flmul
  2997 ;;		___flneg
  2998 ;;		___flsub
  2999 ;;		___fltol
  3000 ;;		___lldiv
  3001 ;;		___llmod
  3002 ;;		___wmul
  3003 ;;		___xxtofl
  3004 ;;		__div_to_l_
  3005 ;;		__tdiv_to_l_
  3006 ;;		_fround
  3007 ;;		_isdigit
  3008 ;;		_scale
  3009 ;; This function is called by:
  3010 ;;		_LCD_Handler
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text12
  3015  0000C4                     __ptext12:
  3016                           	opt stack 0
  3017  0000C4                     _sprintf:
  3018                           	opt stack 23
  3019                           
  3020                           ;doprnt.c: 494: va_list ap;
  3021                           ;doprnt.c: 499: signed char c;
  3022                           ;doprnt.c: 501: int width;
  3023                           ;doprnt.c: 504: int prec;
  3024                           ;doprnt.c: 508: unsigned short flag;
  3025                           ;doprnt.c: 515: char d;
  3026                           ;doprnt.c: 516: double fval;
  3027                           ;doprnt.c: 517: int exp;
  3028                           ;doprnt.c: 523: union {
  3029                           ;doprnt.c: 524: unsigned long vd;
  3030                           ;doprnt.c: 525: double integ;
  3031                           ;doprnt.c: 526: } tmpval;
  3032                           ;doprnt.c: 528: unsigned long val;
  3033                           ;doprnt.c: 529: unsigned len;
  3034                           ;doprnt.c: 530: const char * cp;
  3035                           ;doprnt.c: 533: *ap = __va_start();
  3036                           
  3037                           ;incstack = 0
  3038  0000C4  0EC4               	movlw	low (?_sprintf+4)
  3039  0000C6  0101               	movlb	1	; () banked
  3040  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3041  0000CA  0E00               	movlw	high (?_sprintf+4)
  3042  0000CC  0101               	movlb	1	; () banked
  3043  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3044                           
  3045                           ;doprnt.c: 536: while(c = *f++) {
  3046  0000D0  EF7A  F004         	goto	l5356
  3047  0000D4                     l5158:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;doprnt.c: 538: if(c != '%')
  3051  0000D4  0E25               	movlw	37
  3052  0000D6  0101               	movlb	1	; () banked
  3053  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3054  0000DA  B4D8               	btfsc	status,2,c
  3055  0000DC  D008               	goto	l5164
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;doprnt.c: 540: {
  3059                           ;doprnt.c: 541: ((*sp++ = (c)));
  3060  0000DE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3061  0000E2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3062  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3063  0000EA  EF77  F004         	goto	l5354
  3064  0000EE                     l5164:
  3065                           
  3066                           ;doprnt.c: 543: }
  3067                           ;doprnt.c: 548: flag = 0;
  3068  0000EE  0E00               	movlw	0
  3069  0000F0  0101               	movlb	1	; () banked
  3070  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3071  0000F4  0E00               	movlw	0
  3072  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;doprnt.c: 611: if(*f == '.') {
  3076  0000F8  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3077  0000FC  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3078  000100                     	if	0	;tblptru may be non-zero
  3079  000100                     	endif
  3080  000100                     	if	0	;tblptru may be non-zero
  3081  000100                     	endif
  3082  000100  0008               	tblrd		*
  3083  000102  50F5               	movf	tablat,w,c
  3084  000104  0A2E               	xorlw	46
  3085  000106  A4D8               	btfss	status,2,c
  3086  000108  D034               	goto	l5178
  3087                           
  3088                           ; BSR set to: 1
  3089                           ;doprnt.c: 612: flag |= 0x4000;
  3090  00010A  0101               	movlb	1	; () banked
  3091  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3092                           
  3093                           ;doprnt.c: 613: f++;
  3094  00010E  0100               	movlb	0	; () banked
  3095  000110  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3096  000112  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;doprnt.c: 620: {
  3100                           ;doprnt.c: 621: prec = 0;
  3101  000114  0E00               	movlw	0
  3102  000116  0101               	movlb	1	; () banked
  3103  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3104  00011A  0E00               	movlw	0
  3105  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3106                           
  3107                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3108  00011E  D01E               	goto	l5176
  3109  000120                     l5172:
  3110                           
  3111                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3112  000120  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  3113  000124  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  3114  000128  0E00               	movlw	0
  3115  00012A  6E3F               	movwf	___wmul@multiplicand+1,c
  3116  00012C  0E0A               	movlw	10
  3117  00012E  6E3E               	movwf	___wmul@multiplicand,c
  3118  000130  EC04  F018         	call	___wmul	;wreg free
  3119  000134  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3120  000138  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3121  00013C                     	if	0	;tblptru may be non-zero
  3122  00013C                     	endif
  3123  00013C                     	if	0	;tblptru may be non-zero
  3124  00013C                     	endif
  3125  00013C  0008               	tblrd		*
  3126  00013E  50F5               	movf	tablat,w,c
  3127  000140  263C               	addwf	?___wmul,f,c
  3128  000142  0E00               	movlw	0
  3129  000144  223D               	addwfc	?___wmul+1,f,c
  3130  000146  0ED0               	movlw	208
  3131  000148  243C               	addwf	?___wmul,w,c
  3132  00014A  0101               	movlb	1	; () banked
  3133  00014C  6F12               	movwf	sprintf@prec& (0+255),b
  3134  00014E  0EFF               	movlw	255
  3135  000150  203D               	addwfc	?___wmul+1,w,c
  3136  000152  0101               	movlb	1	; () banked
  3137  000154  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3138                           
  3139                           ; BSR set to: 1
  3140  000156  0100               	movlb	0	; () banked
  3141  000158  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3142  00015A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3143  00015C                     l5176:
  3144  00015C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3145  000160  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3146  000164                     	if	0	;tblptru may be non-zero
  3147  000164                     	endif
  3148  000164                     	if	0	;tblptru may be non-zero
  3149  000164                     	endif
  3150  000164  0008               	tblrd		*
  3151  000166  50F5               	movf	tablat,w,c
  3152  000168  EC28  F018         	call	_isdigit
  3153  00016C  A0D8               	btfss	status,0,c
  3154  00016E  D00C               	goto	l5186
  3155  000170  D7D7               	goto	l5172
  3156  000172                     l5178:
  3157                           
  3158                           ;doprnt.c: 626: prec = 0;
  3159  000172  0E00               	movlw	0
  3160  000174  0101               	movlb	1	; () banked
  3161  000176  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3162  000178  0E00               	movlw	0
  3163  00017A  6F12               	movwf	sprintf@prec& (0+255),b
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;doprnt.c: 628: flag |= 0x1000;
  3167  00017C  0101               	movlb	1	; () banked
  3168  00017E  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3169                           
  3170                           ; BSR set to: 1
  3171                           ;doprnt.c: 630: }
  3172                           ;doprnt.c: 635: switch(c = *f++) {
  3173  000180  D003               	goto	l5186
  3174  000182                     l5182:
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;doprnt.c: 663: flag |= 0x400;
  3178  000182  0101               	movlb	1	; () banked
  3179  000184  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3180                           
  3181                           ;doprnt.c: 664: break;
  3182  000186  D013               	goto	l5188
  3183  000188                     l5186:
  3184  000188  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3185  00018C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3186  000190  0100               	movlb	0	; () banked
  3187  000192  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3188  000194  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3189  000196                     	if	0	;tblptru may be non-zero
  3190  000196                     	endif
  3191  000196                     	if	0	;tblptru may be non-zero
  3192  000196                     	endif
  3193  000196  0008               	tblrd		*
  3194  000198  CFF5 F118          	movff	tablat,sprintf@c
  3195  00019C  0101               	movlb	1	; () banked
  3196  00019E  5118               	movf	sprintf@c& (0+255),w,b
  3197                           
  3198                           ; Switch size 1, requested type "space"
  3199                           ; Number of cases is 2, Range of values is 0 to 102
  3200                           ; switch strategies available:
  3201                           ; Name         Instructions Cycles
  3202                           ; simple_byte            7     4 (average)
  3203                           ;	Chosen strategy is simple_byte
  3204  0001A0  0A00               	xorlw	0	; case 0
  3205  0001A2  B4D8               	btfsc	status,2,c
  3206  0001A4  D3B6               	goto	l5358
  3207  0001A6  0A66               	xorlw	102	; case 102
  3208  0001A8  B4D8               	btfsc	status,2,c
  3209  0001AA  D7EB               	goto	l5182
  3210  0001AC  D3A3               	goto	l5356
  3211  0001AE                     l5188:
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;doprnt.c: 825: if(flag & (0x700)) {
  3215  0001AE  0E07               	movlw	7
  3216  0001B0  0101               	movlb	1	; () banked
  3217  0001B2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3218  0001B4  B4D8               	btfsc	status,2,c
  3219  0001B6  D346               	goto	l5336
  3220                           
  3221                           ; BSR set to: 1
  3222                           ;doprnt.c: 827: if(flag & 0x1000)
  3223  0001B8  0101               	movlb	1	; () banked
  3224  0001BA  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3225  0001BC  D005               	goto	l5194
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;doprnt.c: 829: prec = 6;
  3229  0001BE  0E00               	movlw	0
  3230  0001C0  0101               	movlb	1	; () banked
  3231  0001C2  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3232  0001C4  0E06               	movlw	6
  3233  0001C6  6F12               	movwf	sprintf@prec& (0+255),b
  3234  0001C8                     l5194:
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3238  0001C8  C104  FFD9         	movff	sprintf@ap,fsr2l
  3239  0001CC  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3240  0001D0  CFDE F114          	movff	postinc2,sprintf@fval
  3241  0001D4  CFDE F115          	movff	postinc2,sprintf@fval+1
  3242  0001D8  CFDE F116          	movff	postinc2,sprintf@fval+2
  3243  0001DC  CFDE F117          	movff	postinc2,sprintf@fval+3
  3244                           
  3245                           ; BSR set to: 1
  3246  0001E0  0E04               	movlw	4
  3247  0001E2  0101               	movlb	1	; () banked
  3248  0001E4  2704               	addwf	sprintf@ap& (0+255),f,b
  3249  0001E6  0E00               	movlw	0
  3250  0001E8  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3251                           
  3252                           ; BSR set to: 1
  3253                           ;doprnt.c: 831: if(fval < 0.0) {
  3254  0001EA  0101               	movlb	1	; () banked
  3255  0001EC  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3256  0001EE  D015               	goto	l5204
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;doprnt.c: 832: fval = -fval;
  3260  0001F0  C114  F03C         	movff	sprintf@fval,___flneg@f1
  3261  0001F4  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  3262  0001F8  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  3263  0001FC  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  3264  000200  EC85  F017         	call	___flneg	;wreg free
  3265  000204  C03C  F114         	movff	?___flneg,sprintf@fval
  3266  000208  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  3267  00020C  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  3268  000210  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  3269                           
  3270                           ;doprnt.c: 833: flag |= 0x03;
  3271  000214  0E03               	movlw	3
  3272  000216  0101               	movlb	1	; () banked
  3273  000218  1306               	iorwf	sprintf@flag& (0+255),f,b
  3274  00021A                     l5204:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;doprnt.c: 834: }
  3278                           ;doprnt.c: 835: exp = 0;
  3279  00021A  0E00               	movlw	0
  3280  00021C  0101               	movlb	1	; () banked
  3281  00021E  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3282  000220  0E00               	movlw	0
  3283  000222  6F0C               	movwf	sprintf@exp& (0+255),b
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;doprnt.c: 836: if( fval!=0) {
  3287  000224  0101               	movlb	1	; () banked
  3288  000226  5114               	movf	sprintf@fval& (0+255),w,b
  3289  000228  0101               	movlb	1	; () banked
  3290  00022A  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3291  00022C  0101               	movlb	1	; () banked
  3292  00022E  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3293  000230  0101               	movlb	1	; () banked
  3294  000232  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3295  000234  B4D8               	btfsc	status,2,c
  3296  000236  D08D               	goto	l5232
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3300  000238  0101               	movlb	1	; () banked
  3301  00023A  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3302  00023C  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3303  00023E  0F82               	addlw	130
  3304  000240  0101               	movlb	1	; () banked
  3305  000242  6F0C               	movwf	sprintf@exp& (0+255),b
  3306  000244  0101               	movlb	1	; () banked
  3307  000246  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3308  000248  0EFF               	movlw	255
  3309  00024A  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;doprnt.c: 838: exp--;
  3313  00024C  0101               	movlb	1	; () banked
  3314  00024E  070C               	decf	sprintf@exp& (0+255),f,b
  3315  000250  A0D8               	btfss	status,0,c
  3316  000252  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;doprnt.c: 839: exp *= 3;
  3320  000254  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  3321  000258  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3322  00025C  0E00               	movlw	0
  3323  00025E  6E3F               	movwf	___wmul@multiplicand+1,c
  3324  000260  0E03               	movlw	3
  3325  000262  6E3E               	movwf	___wmul@multiplicand,c
  3326  000264  EC04  F018         	call	___wmul	;wreg free
  3327  000268  C03C  F10C         	movff	?___wmul,sprintf@exp
  3328  00026C  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  3329                           
  3330                           ;doprnt.c: 840: exp /= 10;
  3331  000270  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  3332  000274  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3333  000278  0E00               	movlw	0
  3334  00027A  0100               	movlb	0	; () banked
  3335  00027C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3336  00027E  0E0A               	movlw	10
  3337  000280  6F72               	movwf	___awdiv@divisor& (0+255),b
  3338  000282  ECBD  F014         	call	___awdiv	;wreg free
  3339  000286  C070  F10C         	movff	?___awdiv,sprintf@exp
  3340  00028A  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3341                           
  3342                           ;doprnt.c: 841: if(exp < 0)
  3343  00028E  0101               	movlb	1	; () banked
  3344  000290  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3345  000292  D004               	goto	l5220
  3346                           
  3347                           ; BSR set to: 1
  3348                           ;doprnt.c: 842: exp--;
  3349  000294  0101               	movlb	1	; () banked
  3350  000296  070C               	decf	sprintf@exp& (0+255),f,b
  3351  000298  A0D8               	btfss	status,0,c
  3352  00029A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3353  00029C                     l5220:
  3354                           
  3355                           ; BSR set to: 1
  3356                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3357  00029C  0101               	movlb	1	; () banked
  3358  00029E  510C               	movf	sprintf@exp& (0+255),w,b
  3359  0002A0  0800               	sublw	0
  3360  0002A2  EC37  F009         	call	_scale
  3361  0002A6  C097  F10E         	movff	?_scale,sprintf@tmpval
  3362  0002AA  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3363  0002AE  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3364  0002B2  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3365                           
  3366                           ;doprnt.c: 847: tmpval.integ *= fval;
  3367  0002B6  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  3368  0002BA  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3369  0002BE  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3370  0002C2  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3371  0002C6  C114  F082         	movff	sprintf@fval,___flmul@a
  3372  0002CA  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3373  0002CE  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3374  0002D2  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3375  0002D6  ECE4  F006         	call	___flmul	;wreg free
  3376  0002DA  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  3377  0002DE  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3378  0002E2  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3379  0002E6  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3380                           
  3381                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3382  0002EA  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3383  0002EE  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3384  0002F2  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3385  0002F6  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3386  0002FA  0E00               	movlw	0
  3387  0002FC  0100               	movlb	0	; () banked
  3388  0002FE  6F74               	movwf	___flge@ff2& (0+255),b
  3389  000300  0E00               	movlw	0
  3390  000302  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3391  000304  0E80               	movlw	128
  3392  000306  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3393  000308  0E3F               	movlw	63
  3394  00030A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3395  00030C  ECB2  F011         	call	___flge	;wreg free
  3396  000310  0100               	movlb	0	; () banked
  3397  000312  B0D8               	btfsc	status,0,c
  3398  000314  D005               	goto	l5228
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;doprnt.c: 849: exp--;
  3402  000316  0101               	movlb	1	; () banked
  3403  000318  070C               	decf	sprintf@exp& (0+255),f,b
  3404  00031A  A0D8               	btfss	status,0,c
  3405  00031C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3406  00031E  D019               	goto	l5232
  3407  000320                     l5228:
  3408                           
  3409                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3410  000320  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3411  000324  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3412  000328  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3413  00032C  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3414  000330  0E00               	movlw	0
  3415  000332  0100               	movlb	0	; () banked
  3416  000334  6F74               	movwf	___flge@ff2& (0+255),b
  3417  000336  0E00               	movlw	0
  3418  000338  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3419  00033A  0E20               	movlw	32
  3420  00033C  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3421  00033E  0E41               	movlw	65
  3422  000340  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3423  000342  ECB2  F011         	call	___flge	;wreg free
  3424  000346  0100               	movlb	0	; () banked
  3425  000348  A0D8               	btfss	status,0,c
  3426  00034A  D003               	goto	l5232
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;doprnt.c: 851: exp++;
  3430  00034C  0101               	movlb	1	; () banked
  3431  00034E  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3432  000350  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3433  000352                     l5232:
  3434                           
  3435                           ;doprnt.c: 852: }
  3436                           ;doprnt.c: 1112: if(prec <= 12)
  3437  000352  0101               	movlb	1	; () banked
  3438  000354  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3439  000356  D008               	goto	l5234
  3440  000358  0101               	movlb	1	; () banked
  3441  00035A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3442  00035C  E123               	bnz	l5236
  3443  00035E  0E0D               	movlw	13
  3444  000360  0101               	movlb	1	; () banked
  3445  000362  5D12               	subwf	sprintf@prec& (0+255),w,b
  3446  000364  B0D8               	btfsc	status,0,c
  3447  000366  D01E               	goto	l5236
  3448  000368                     l5234:
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;doprnt.c: 1113: fval += fround(prec);
  3452  000368  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3453  00036C  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3454  000370  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3455  000374  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3456  000378  0101               	movlb	1	; () banked
  3457  00037A  5112               	movf	sprintf@prec& (0+255),w,b
  3458  00037C  EC41  F00D         	call	_fround
  3459  000380  C097  F0A8         	movff	?_fround,___fladd@a
  3460  000384  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3461  000388  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3462  00038C  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3463  000390  EC90  F004         	call	___fladd	;wreg free
  3464  000394  C0A4  F114         	movff	?___fladd,sprintf@fval
  3465  000398  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3466  00039C  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3467  0003A0  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3468  0003A4                     l5236:
  3469                           
  3470                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3471  0003A4  0101               	movlb	1	; () banked
  3472  0003A6  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3473  0003A8  D008               	goto	l5238
  3474  0003AA  0101               	movlb	1	; () banked
  3475  0003AC  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3476  0003AE  E12E               	bnz	l5244
  3477  0003B0  0E0A               	movlw	10
  3478  0003B2  0101               	movlb	1	; () banked
  3479  0003B4  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3480  0003B6  B0D8               	btfsc	status,0,c
  3481  0003B8  D029               	goto	l5244
  3482  0003BA                     l5238:
  3483                           
  3484                           ; BSR set to: 1
  3485  0003BA  0101               	movlb	1	; () banked
  3486  0003BC  5114               	movf	sprintf@fval& (0+255),w,b
  3487  0003BE  0101               	movlb	1	; () banked
  3488  0003C0  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3489  0003C2  0101               	movlb	1	; () banked
  3490  0003C4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3491  0003C6  0101               	movlb	1	; () banked
  3492  0003C8  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3493  0003CA  B4D8               	btfsc	status,2,c
  3494  0003CC  D06D               	goto	l5258
  3495                           
  3496                           ; BSR set to: 1
  3497  0003CE  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3498  0003D2  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3499  0003D6  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3500  0003DA  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3501  0003DE  ECEB  F012         	call	___fltol	;wreg free
  3502  0003E2  0100               	movlb	0	; () banked
  3503  0003E4  51A0               	movf	?___fltol& (0+255),w,b
  3504  0003E6  0100               	movlb	0	; () banked
  3505  0003E8  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3506  0003EA  0100               	movlb	0	; () banked
  3507  0003EC  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3508  0003EE  0100               	movlb	0	; () banked
  3509  0003F0  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3510  0003F2  A4D8               	btfss	status,2,c
  3511  0003F4  D059               	goto	l5258
  3512                           
  3513                           ; BSR set to: 0
  3514  0003F6  0101               	movlb	1	; () banked
  3515  0003F8  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3516  0003FA  D056               	goto	l5258
  3517  0003FC  0101               	movlb	1	; () banked
  3518  0003FE  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3519  000400  E105               	bnz	l5244
  3520  000402  0E02               	movlw	2
  3521  000404  0101               	movlb	1	; () banked
  3522  000406  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3523  000408  A0D8               	btfss	status,0,c
  3524  00040A  D04E               	goto	l5258
  3525  00040C                     l5244:
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3529  00040C  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3530  000410  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3531  000414  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3532  000418  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3533  00041C  0E5F               	movlw	95
  3534  00041E  0100               	movlb	0	; () banked
  3535  000420  6F74               	movwf	___flge@ff2& (0+255),b
  3536  000422  0E70               	movlw	112
  3537  000424  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3538  000426  0E89               	movlw	137
  3539  000428  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3540  00042A  0E40               	movlw	64
  3541  00042C  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3542  00042E  ECB2  F011         	call	___flge	;wreg free
  3543  000432  0100               	movlb	0	; () banked
  3544  000434  B0D8               	btfsc	status,0,c
  3545  000436  D003               	goto	l5248
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3549  000438  0101               	movlb	1	; () banked
  3550  00043A  0EF7               	movlw	247
  3551  00043C  D002               	goto	L2
  3552  00043E                     l5248:
  3553                           
  3554                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3555  00043E  0101               	movlb	1	; () banked
  3556  000440  0EF8               	movlw	248
  3557  000442                     L2:
  3558  000442  270C               	addwf	sprintf@exp& (0+255),f,b
  3559  000444  0EFF               	movlw	255
  3560  000446  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3564                           
  3565                           ; BSR set to: 1
  3566  000448  0101               	movlb	1	; () banked
  3567  00044A  510C               	movf	sprintf@exp& (0+255),w,b
  3568  00044C  EC37  F009         	call	_scale
  3569  000450  C097  F10E         	movff	?_scale,sprintf@tmpval
  3570  000454  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3571  000458  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3572  00045C  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3573  000460  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3574  000464  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3575  000468  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3576  00046C  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3577  000470  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3578  000474  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3579  000478  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3580  00047C  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3581  000480  EC03  F011         	call	__div_to_l_	;wreg free
  3582  000484  C070  F108         	movff	?__div_to_l_,sprintf@val
  3583  000488  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3584  00048C  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3585  000490  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3586                           
  3587                           ;doprnt.c: 1129: fval = 0.0;
  3588  000494  0E00               	movlw	0
  3589  000496  0101               	movlb	1	; () banked
  3590  000498  6F14               	movwf	sprintf@fval& (0+255),b
  3591  00049A  0E00               	movlw	0
  3592  00049C  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3593  00049E  0E00               	movlw	0
  3594  0004A0  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3595  0004A2  0E00               	movlw	0
  3596  0004A4  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3597                           
  3598                           ;doprnt.c: 1130: } else {
  3599  0004A6  D03C               	goto	l5262
  3600  0004A8                     l5258:
  3601                           
  3602                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3603  0004A8  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3604  0004AC  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3605  0004B0  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3606  0004B4  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3607  0004B8  ECEB  F012         	call	___fltol	;wreg free
  3608  0004BC  C0A0  F108         	movff	?___fltol,sprintf@val
  3609  0004C0  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3610  0004C4  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3611  0004C8  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3612                           
  3613                           ;doprnt.c: 1132: fval -= (double)val;
  3614  0004CC  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3615  0004D0  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3616  0004D4  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3617  0004D8  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3618  0004DC  C108  F070         	movff	sprintf@val,___xxtofl@val
  3619  0004E0  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3620  0004E4  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3621  0004E8  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3622  0004EC  0E00               	movlw	0
  3623  0004EE  EC9C  F00E         	call	___xxtofl
  3624  0004F2  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3625  0004F6  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3626  0004FA  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3627  0004FE  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3628  000502  EC9A  F016         	call	___flsub	;wreg free
  3629  000506  C0B8  F114         	movff	?___flsub,sprintf@fval
  3630  00050A  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3631  00050E  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3632  000512  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3633                           
  3634                           ;doprnt.c: 1133: exp = 0;
  3635  000516  0E00               	movlw	0
  3636  000518  0101               	movlb	1	; () banked
  3637  00051A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3638  00051C  0E00               	movlw	0
  3639  00051E  6F0C               	movwf	sprintf@exp& (0+255),b
  3640  000520                     l5262:
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;doprnt.c: 1134: }
  3644                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3645  000520  0E01               	movlw	1
  3646  000522  0101               	movlb	1	; () banked
  3647  000524  6F18               	movwf	sprintf@c& (0+255),b
  3648  000526                     l5264:
  3649                           
  3650                           ; BSR set to: 1
  3651  000526  0E0A               	movlw	10
  3652  000528  0101               	movlb	1	; () banked
  3653  00052A  1918               	xorwf	sprintf@c& (0+255),w,b
  3654  00052C  B4D8               	btfsc	status,2,c
  3655  00052E  D01E               	goto	l5276
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;doprnt.c: 1137: if(val < dpowers[c])
  3659                           
  3660                           ; BSR set to: 1
  3661                           
  3662                           ; BSR set to: 1
  3663  000530  0101               	movlb	1	; () banked
  3664  000532  5118               	movf	sprintf@c& (0+255),w,b
  3665  000534  0D04               	mullw	4
  3666  000536  0E53               	movlw	low _dpowers
  3667  000538  24F3               	addwf	prodl,w,c
  3668  00053A  6EF6               	movwf	tblptrl,c
  3669  00053C  0E3F               	movlw	high _dpowers
  3670  00053E  20F4               	addwfc	prodh,w,c
  3671  000540  6EF7               	movwf	tblptrh,c
  3672  000542                     	if	0	;There are less than 3 active tblptr bytes
  3673  000542                     	endif
  3674  000542  0009               	tblrd		*+
  3675  000544  50F5               	movf	tablat,w,c
  3676  000546  0101               	movlb	1	; () banked
  3677  000548  5D08               	subwf	sprintf@val& (0+255),w,b
  3678  00054A  0009               	tblrd		*+
  3679  00054C  50F5               	movf	tablat,w,c
  3680  00054E  0101               	movlb	1	; () banked
  3681  000550  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3682  000552  0009               	tblrd		*+
  3683  000554  50F5               	movf	tablat,w,c
  3684  000556  0101               	movlb	1	; () banked
  3685  000558  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3686  00055A  0009               	tblrd		*+
  3687  00055C  50F5               	movf	tablat,w,c
  3688  00055E  0101               	movlb	1	; () banked
  3689  000560  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3690  000562  A0D8               	btfss	status,0,c
  3691  000564  D003               	goto	l5276
  3692                           
  3693                           ; BSR set to: 1
  3694                           
  3695                           ; BSR set to: 1
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;doprnt.c: 1138: break;
  3699  000566  0101               	movlb	1	; () banked
  3700  000568  2B18               	incf	sprintf@c& (0+255),f,b
  3701  00056A  D7DD               	goto	l5264
  3702  00056C                     l5276:
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;doprnt.c: 1175: {
  3706                           ;doprnt.c: 1188: if(flag & 0x03)
  3707  00056C  0E03               	movlw	3
  3708  00056E  0101               	movlb	1	; () banked
  3709  000570  1506               	andwf	sprintf@flag& (0+255),w,b
  3710  000572  0100               	movlb	0	; () banked
  3711  000574  6FC8               	movwf	??_sprintf& (0+255),b
  3712  000576  0E00               	movlw	0
  3713  000578  0101               	movlb	1	; () banked
  3714  00057A  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3715  00057C  0100               	movlb	0	; () banked
  3716  00057E  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3717  000580  0100               	movlb	0	; () banked
  3718  000582  51C8               	movf	??_sprintf& (0+255),w,b
  3719  000584  0100               	movlb	0	; () banked
  3720  000586  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3721  000588  B4D8               	btfsc	status,2,c
  3722  00058A  D055               	goto	l5290
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3726  00058C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3727  000590  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3728  000594  0E2D               	movlw	45
  3729  000596  D04D               	goto	L3
  3730  000598                     l5280:
  3731                           
  3732                           ; BSR set to: 0
  3733  000598  0100               	movlb	0	; () banked
  3734  00059A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3735  00059C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;doprnt.c: 1195: }
  3739                           ;doprnt.c: 1196: while(c--) {
  3740  00059E  D04B               	goto	l5290
  3741  0005A0                     l5282:
  3742                           
  3743                           ;doprnt.c: 1200: {
  3744                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3745  0005A0  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3746  0005A4  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3747  0005A8  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3748  0005AC  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3749  0005B0  0101               	movlb	1	; () banked
  3750  0005B2  5118               	movf	sprintf@c& (0+255),w,b
  3751  0005B4  0D04               	mullw	4
  3752  0005B6  0E53               	movlw	low _dpowers
  3753  0005B8  24F3               	addwf	prodl,w,c
  3754  0005BA  6EF6               	movwf	tblptrl,c
  3755  0005BC  0E3F               	movlw	high _dpowers
  3756  0005BE  20F4               	addwfc	prodh,w,c
  3757  0005C0  6EF7               	movwf	tblptrh,c
  3758  0005C2                     	if	0	;There are less than 3 active tblptr bytes
  3759  0005C2                     	endif
  3760  0005C2  0009               	tblrd		*+
  3761  0005C4  CFF5 F074          	movff	tablat,___lldiv@divisor
  3762  0005C8  0009               	tblrd		*+
  3763  0005CA  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3764  0005CE  0009               	tblrd		*+
  3765  0005D0  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3766  0005D4  000A               	tblrd		*-
  3767  0005D6  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3768  0005DA  EC1C  F015         	call	___lldiv	;wreg free
  3769  0005DE  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3770  0005E2  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3771  0005E6  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3772  0005EA  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3773                           
  3774                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3775  0005EE  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3776  0005F2  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3777  0005F6  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3778  0005FA  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3779  0005FE  0E0A               	movlw	10
  3780  000600  0100               	movlb	0	; () banked
  3781  000602  6F74               	movwf	___llmod@divisor& (0+255),b
  3782  000604  0E00               	movlw	0
  3783  000606  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3784  000608  0E00               	movlw	0
  3785  00060A  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3786  00060C  0E00               	movlw	0
  3787  00060E  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3788  000610  ECBF  F015         	call	___llmod	;wreg free
  3789  000614  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3790  000618  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3791  00061C  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3792  000620  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3793                           
  3794                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3795  000624  0101               	movlb	1	; () banked
  3796  000626  510E               	movf	sprintf@tmpval& (0+255),w,b
  3797  000628  0F30               	addlw	48
  3798  00062A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3799  00062E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3800  000632                     L3:
  3801  000632  6EDF               	movwf	indf2,c
  3802  000634  D7B1               	goto	l5280
  3803  000636                     l5290:
  3804                           
  3805                           ; BSR set to: 0
  3806  000636  0101               	movlb	1	; () banked
  3807  000638  0718               	decf	sprintf@c& (0+255),f,b
  3808  00063A  0101               	movlb	1	; () banked
  3809  00063C  2918               	incf	sprintf@c& (0+255),w,b
  3810  00063E  B4D8               	btfsc	status,2,c
  3811  000640  D00E               	goto	l5298
  3812  000642  D7AE               	goto	l5282
  3813  000644                     l5292:
  3814                           
  3815                           ; BSR set to: 1
  3816                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3817  000644  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3818  000648  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3819  00064C  0E30               	movlw	48
  3820  00064E  6EDF               	movwf	indf2,c
  3821                           
  3822                           ; BSR set to: 1
  3823  000650  0100               	movlb	0	; () banked
  3824  000652  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3825  000654  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;doprnt.c: 1209: exp--;
  3829  000656  0101               	movlb	1	; () banked
  3830  000658  070C               	decf	sprintf@exp& (0+255),f,b
  3831  00065A  A0D8               	btfss	status,0,c
  3832  00065C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3833  00065E                     l5298:
  3834                           
  3835                           ; BSR set to: 1
  3836  00065E  0101               	movlb	1	; () banked
  3837  000660  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3838  000662  D007               	goto	l5300
  3839  000664  0101               	movlb	1	; () banked
  3840  000666  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3841  000668  E1ED               	bnz	l5292
  3842  00066A  0101               	movlb	1	; () banked
  3843  00066C  050C               	decf	sprintf@exp& (0+255),w,b
  3844  00066E  B0D8               	btfsc	status,0,c
  3845  000670  D7E9               	goto	l5292
  3846  000672                     l5300:
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;doprnt.c: 1210: }
  3850                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3851  000672  0101               	movlb	1	; () banked
  3852  000674  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3853  000676  D00C               	goto	l370
  3854  000678  0101               	movlb	1	; () banked
  3855  00067A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3856  00067C  E105               	bnz	u6150
  3857  00067E  0E09               	movlw	9
  3858  000680  0101               	movlb	1	; () banked
  3859  000682  5D12               	subwf	sprintf@prec& (0+255),w,b
  3860  000684  A0D8               	btfss	status,0,c
  3861  000686  D004               	goto	l370
  3862  000688                     u6150:
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3866  000688  0E08               	movlw	8
  3867  00068A  0101               	movlb	1	; () banked
  3868  00068C  6F18               	movwf	sprintf@c& (0+255),b
  3869  00068E  D002               	goto	l5304
  3870  000690                     l370:
  3871                           
  3872                           ; BSR set to: 1
  3873                           ;doprnt.c: 1213: else
  3874                           ;doprnt.c: 1214: c = prec;
  3875  000690  C112  F118         	movff	sprintf@prec,sprintf@c
  3876  000694                     l5304:
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;doprnt.c: 1215: prec -= c;
  3880  000694  0101               	movlb	1	; () banked
  3881  000696  5118               	movf	sprintf@c& (0+255),w,b
  3882  000698  0101               	movlb	1	; () banked
  3883  00069A  5F12               	subwf	sprintf@prec& (0+255),f,b
  3884  00069C  0E00               	movlw	0
  3885  00069E  0101               	movlb	1	; () banked
  3886  0006A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3887  0006A2  0EFF               	movlw	255
  3888  0006A4  0101               	movlb	1	; () banked
  3889  0006A6  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;doprnt.c: 1219: if(c)
  3893  0006A8  0101               	movlb	1	; () banked
  3894  0006AA  5118               	movf	sprintf@c& (0+255),w,b
  3895  0006AC  0101               	movlb	1	; () banked
  3896  0006AE  B4D8               	btfsc	status,2,c
  3897  0006B0  D009               	goto	l5312
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3901  0006B2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3902  0006B6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3903  0006BA  0E2E               	movlw	46
  3904  0006BC  6EDF               	movwf	indf2,c
  3905                           
  3906                           ; BSR set to: 1
  3907  0006BE  0100               	movlb	0	; () banked
  3908  0006C0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3909  0006C2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3910  0006C4                     l5312:
  3911                           
  3912                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3913  0006C4  0101               	movlb	1	; () banked
  3914  0006C6  5118               	movf	sprintf@c& (0+255),w,b
  3915  0006C8  EC37  F009         	call	_scale
  3916  0006CC  C097  F100         	movff	?_scale,_sprintf$2394
  3917  0006D0  C098  F101         	movff	?_scale+1,_sprintf$2394+1
  3918  0006D4  C099  F102         	movff	?_scale+2,_sprintf$2394+2
  3919  0006D8  C09A  F103         	movff	?_scale+3,_sprintf$2394+3
  3920                           
  3921                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3922  0006DC  C114  F082         	movff	sprintf@fval,___flmul@a
  3923  0006E0  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3924  0006E4  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3925  0006E8  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3926  0006EC  C100  F07E         	movff	_sprintf$2394,___flmul@b
  3927  0006F0  C101  F07F         	movff	_sprintf$2394+1,___flmul@b+1
  3928  0006F4  C102  F080         	movff	_sprintf$2394+2,___flmul@b+2
  3929  0006F8  C103  F081         	movff	_sprintf$2394+3,___flmul@b+3
  3930  0006FC  ECE4  F006         	call	___flmul	;wreg free
  3931  000700  C07E  F0A0         	movff	?___flmul,___fltol@f1
  3932  000704  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  3933  000708  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  3934  00070C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  3935  000710  ECEB  F012         	call	___fltol	;wreg free
  3936  000714  C0A0  F108         	movff	?___fltol,sprintf@val
  3937  000718  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3938  00071C  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3939  000720  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3940                           
  3941                           ;doprnt.c: 1228: while(c--) {
  3942  000724  D074               	goto	l5326
  3943  000726                     l5316:
  3944                           
  3945                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3946  000726  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3947  00072A  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3948  00072E  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3949  000732  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3950  000736  0101               	movlb	1	; () banked
  3951  000738  5118               	movf	sprintf@c& (0+255),w,b
  3952  00073A  0D04               	mullw	4
  3953  00073C  0E53               	movlw	low _dpowers
  3954  00073E  24F3               	addwf	prodl,w,c
  3955  000740  6EF6               	movwf	tblptrl,c
  3956  000742  0E3F               	movlw	high _dpowers
  3957  000744  20F4               	addwfc	prodh,w,c
  3958  000746  6EF7               	movwf	tblptrh,c
  3959  000748                     	if	0	;There are less than 3 active tblptr bytes
  3960  000748                     	endif
  3961  000748  0009               	tblrd		*+
  3962  00074A  CFF5 F074          	movff	tablat,___lldiv@divisor
  3963  00074E  0009               	tblrd		*+
  3964  000750  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3965  000754  0009               	tblrd		*+
  3966  000756  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3967  00075A  000A               	tblrd		*-
  3968  00075C  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3969  000760  EC1C  F015         	call	___lldiv	;wreg free
  3970  000764  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3971  000768  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3972  00076C  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3973  000770  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3974                           
  3975                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3976  000774  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3977  000778  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3978  00077C  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3979  000780  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3980  000784  0E0A               	movlw	10
  3981  000786  0100               	movlb	0	; () banked
  3982  000788  6F74               	movwf	___llmod@divisor& (0+255),b
  3983  00078A  0E00               	movlw	0
  3984  00078C  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3985  00078E  0E00               	movlw	0
  3986  000790  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3987  000792  0E00               	movlw	0
  3988  000794  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3989  000796  ECBF  F015         	call	___llmod	;wreg free
  3990  00079A  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3991  00079E  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3992  0007A2  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3993  0007A6  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3994                           
  3995                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3996  0007AA  0101               	movlb	1	; () banked
  3997  0007AC  510E               	movf	sprintf@tmpval& (0+255),w,b
  3998  0007AE  0F30               	addlw	48
  3999  0007B0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4000  0007B4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4001  0007B8  6EDF               	movwf	indf2,c
  4002                           
  4003                           ; BSR set to: 1
  4004  0007BA  0100               	movlb	0	; () banked
  4005  0007BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4006  0007BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;doprnt.c: 1232: val %= dpowers[c];
  4010  0007C0  C108  F070         	movff	sprintf@val,___llmod@dividend
  4011  0007C4  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  4012  0007C8  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  4013  0007CC  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  4014  0007D0  0101               	movlb	1	; () banked
  4015  0007D2  5118               	movf	sprintf@c& (0+255),w,b
  4016  0007D4  0D04               	mullw	4
  4017  0007D6  0E53               	movlw	low _dpowers
  4018  0007D8  24F3               	addwf	prodl,w,c
  4019  0007DA  6EF6               	movwf	tblptrl,c
  4020  0007DC  0E3F               	movlw	high _dpowers
  4021  0007DE  20F4               	addwfc	prodh,w,c
  4022  0007E0  6EF7               	movwf	tblptrh,c
  4023  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  4024  0007E2                     	endif
  4025  0007E2  0009               	tblrd		*+
  4026  0007E4  CFF5 F074          	movff	tablat,___llmod@divisor
  4027  0007E8  0009               	tblrd		*+
  4028  0007EA  CFF5 F075          	movff	tablat,___llmod@divisor+1
  4029  0007EE  0009               	tblrd		*+
  4030  0007F0  CFF5 F076          	movff	tablat,___llmod@divisor+2
  4031  0007F4  000A               	tblrd		*-
  4032  0007F6  CFF5 F077          	movff	tablat,___llmod@divisor+3
  4033  0007FA  ECBF  F015         	call	___llmod	;wreg free
  4034  0007FE  C070  F108         	movff	?___llmod,sprintf@val
  4035  000802  C071  F109         	movff	?___llmod+1,sprintf@val+1
  4036  000806  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  4037  00080A  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  4038  00080E                     l5326:
  4039  00080E  0101               	movlb	1	; () banked
  4040  000810  0718               	decf	sprintf@c& (0+255),f,b
  4041  000812  0101               	movlb	1	; () banked
  4042  000814  2918               	incf	sprintf@c& (0+255),w,b
  4043  000816  B4D8               	btfsc	status,2,c
  4044  000818  D00E               	goto	l5334
  4045  00081A  D785               	goto	l5316
  4046  00081C                     l5328:
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4050  00081C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4051  000820  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4052  000824  0E30               	movlw	48
  4053  000826  6EDF               	movwf	indf2,c
  4054                           
  4055                           ; BSR set to: 1
  4056  000828  0100               	movlb	0	; () banked
  4057  00082A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4058  00082C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;doprnt.c: 1237: prec--;
  4062  00082E  0101               	movlb	1	; () banked
  4063  000830  0712               	decf	sprintf@prec& (0+255),f,b
  4064  000832  A0D8               	btfss	status,0,c
  4065  000834  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4066  000836                     l5334:
  4067                           
  4068                           ; BSR set to: 1
  4069  000836  0101               	movlb	1	; () banked
  4070  000838  5112               	movf	sprintf@prec& (0+255),w,b
  4071  00083A  0101               	movlb	1	; () banked
  4072  00083C  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4073  00083E  B4D8               	btfsc	status,2,c
  4074  000840  D059               	goto	l5356
  4075  000842  D7EC               	goto	l5328
  4076  000844                     l5336:
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;doprnt.c: 1246: }
  4080                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4081  000844  0101               	movlb	1	; () banked
  4082  000846  5112               	movf	sprintf@prec& (0+255),w,b
  4083  000848  0101               	movlb	1	; () banked
  4084  00084A  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4085  00084C  A4D8               	btfss	status,2,c
  4086  00084E  D00D               	goto	l5342
  4087                           
  4088                           ; BSR set to: 1
  4089  000850  0101               	movlb	1	; () banked
  4090  000852  5108               	movf	sprintf@val& (0+255),w,b
  4091  000854  0101               	movlb	1	; () banked
  4092  000856  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4093  000858  0101               	movlb	1	; () banked
  4094  00085A  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4095  00085C  0101               	movlb	1	; () banked
  4096  00085E  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4097  000860  A4D8               	btfss	status,2,c
  4098  000862  D003               	goto	l5342
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;doprnt.c: 1291: prec++;
  4102  000864  0101               	movlb	1	; () banked
  4103  000866  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4104  000868  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4105  00086A                     l5342:
  4106                           
  4107                           ; BSR set to: 1
  4108                           ;doprnt.c: 1339: if(c < prec)
  4109  00086A  0E80               	movlw	128
  4110  00086C  0101               	movlb	1	; () banked
  4111  00086E  BF18               	btfsc	sprintf@c& (0+255),7,b
  4112  000870  0E7F               	movlw	127
  4113  000872  0100               	movlb	0	; () banked
  4114  000874  6FC8               	movwf	??_sprintf& (0+255),b
  4115  000876  0101               	movlb	1	; () banked
  4116  000878  5112               	movf	sprintf@prec& (0+255),w,b
  4117  00087A  0101               	movlb	1	; () banked
  4118  00087C  5D18               	subwf	sprintf@c& (0+255),w,b
  4119  00087E  0101               	movlb	1	; () banked
  4120  000880  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4121  000882  0A80               	xorlw	128
  4122  000884  0100               	movlb	0	; () banked
  4123  000886  59C8               	subwfb	??_sprintf& (0+255),w,b
  4124  000888  B0D8               	btfsc	status,0,c
  4125  00088A  D003               	goto	l5346
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;doprnt.c: 1340: c = prec;
  4129  00088C  C112  F118         	movff	sprintf@prec,sprintf@c
  4130  000890  D018               	goto	l5350
  4131  000892                     l5346:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;doprnt.c: 1341: else if(prec < c)
  4135  000892  0101               	movlb	1	; () banked
  4136  000894  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4137  000896  0A80               	xorlw	128
  4138  000898  0100               	movlb	0	; () banked
  4139  00089A  6FC8               	movwf	??_sprintf& (0+255),b
  4140  00089C  0101               	movlb	1	; () banked
  4141  00089E  5118               	movf	sprintf@c& (0+255),w,b
  4142  0008A0  0101               	movlb	1	; () banked
  4143  0008A2  5D12               	subwf	sprintf@prec& (0+255),w,b
  4144  0008A4  0E80               	movlw	128
  4145  0008A6  0101               	movlb	1	; () banked
  4146  0008A8  BF18               	btfsc	sprintf@c& (0+255),7,b
  4147  0008AA  0E7F               	movlw	127
  4148  0008AC  0100               	movlb	0	; () banked
  4149  0008AE  59C8               	subwfb	??_sprintf& (0+255),w,b
  4150  0008B0  B0D8               	btfsc	status,0,c
  4151  0008B2  D007               	goto	l5350
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;doprnt.c: 1342: prec = c;
  4155  0008B4  0101               	movlb	1	; () banked
  4156  0008B6  5118               	movf	sprintf@c& (0+255),w,b
  4157  0008B8  0101               	movlb	1	; () banked
  4158  0008BA  6F12               	movwf	sprintf@prec& (0+255),b
  4159  0008BC  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4160  0008BE  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4161  0008C0  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4162  0008C2                     l5350:
  4163                           
  4164                           ;doprnt.c: 1422: {
  4165                           ;doprnt.c: 1438: if(flag & 0x03)
  4166  0008C2  0E03               	movlw	3
  4167  0008C4  0101               	movlb	1	; () banked
  4168  0008C6  1506               	andwf	sprintf@flag& (0+255),w,b
  4169  0008C8  0100               	movlb	0	; () banked
  4170  0008CA  6FC8               	movwf	??_sprintf& (0+255),b
  4171  0008CC  0E00               	movlw	0
  4172  0008CE  0101               	movlb	1	; () banked
  4173  0008D0  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4174  0008D2  0100               	movlb	0	; () banked
  4175  0008D4  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  4176  0008D6  0100               	movlb	0	; () banked
  4177  0008D8  51C8               	movf	??_sprintf& (0+255),w,b
  4178  0008DA  0100               	movlb	0	; () banked
  4179  0008DC  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  4180  0008DE  B4D8               	btfsc	status,2,c
  4181  0008E0  D009               	goto	l5356
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4185  0008E2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4186  0008E6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4187  0008EA  0E2D               	movlw	45
  4188  0008EC  6EDF               	movwf	indf2,c
  4189  0008EE                     l5354:
  4190                           
  4191                           ; BSR set to: 0
  4192  0008EE  0100               	movlb	0	; () banked
  4193  0008F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4194  0008F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4195  0008F4                     l5356:
  4196  0008F4  C0C2  FFF6         	movff	sprintf@f,tblptrl
  4197  0008F8  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  4198  0008FC  0100               	movlb	0	; () banked
  4199  0008FE  4BC2               	infsnz	sprintf@f& (0+255),f,b
  4200  000900  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  4201  000902                     	if	0	;tblptru may be non-zero
  4202  000902                     	endif
  4203  000902                     	if	0	;tblptru may be non-zero
  4204  000902                     	endif
  4205  000902  0008               	tblrd		*
  4206  000904  CFF5 F118          	movff	tablat,sprintf@c
  4207  000908  0101               	movlb	1	; () banked
  4208  00090A  5118               	movf	sprintf@c& (0+255),w,b
  4209  00090C  A4D8               	btfss	status,2,c
  4210  00090E  EF6A  F000         	goto	l5158
  4211  000912                     l5358:
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;doprnt.c: 1538: *sp = 0;
  4215  000912  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4216  000916  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4217  00091A  0E00               	movlw	0
  4218  00091C  6EDF               	movwf	indf2,c
  4219  00091E  0012               	return	
  4220  000920                     __end_of_sprintf:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           intcon	equ	0xFF2
  4229                           postinc0	equ	0xFEE
  4230                           wreg	equ	0xFE8
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _scale *****************
  4238 ;; Defined at:
  4239 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  scl             1    wreg     char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  scl             1   63[BANK0 ] char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  4   55[BANK0 ] char 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4253 ;;      Params:         0       4       0       0
  4254 ;;      Locals:         0       5       0       0
  4255 ;;      Temps:          0       0       0       0
  4256 ;;      Totals:         0       9       0       0
  4257 ;;Total ram usage:        9 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    5
  4260 ;; This function calls:
  4261 ;;		___awdiv
  4262 ;;		___awmod
  4263 ;;		___flmul
  4264 ;; This function is called by:
  4265 ;;		_sprintf
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text13
  4270  00126E                     __ptext13:
  4271                           	opt stack 0
  4272  00126E                     _scale:
  4273                           	opt stack 23
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;incstack = 0
  4277                           ;scale@scl stored from wreg
  4278  00126E  0100               	movlb	0	; () banked
  4279  001270  6F9F               	movwf	scale@scl& (0+255),b
  4280                           
  4281                           ;doprnt.c: 428: if(scl < 0) {
  4282  001272  0100               	movlb	0	; () banked
  4283  001274  AF9F               	btfss	scale@scl& (0+255),7,b
  4284  001276  D125               	goto	l4772
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;doprnt.c: 429: scl = -scl;
  4288  001278  0100               	movlb	0	; () banked
  4289  00127A  6D9F               	negf	scale@scl& (0+255),b
  4290                           
  4291                           ;doprnt.c: 430: if(scl>=110)
  4292  00127C  0100               	movlb	0	; () banked
  4293  00127E  519F               	movf	scale@scl& (0+255),w,b
  4294  001280  0A80               	xorlw	128
  4295  001282  0F12               	addlw	-238
  4296  001284  A0D8               	btfss	status,0,c
  4297  001286  D0AA               	goto	l4762
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4301  001288  0E00               	movlw	0
  4302  00128A  0100               	movlb	0	; () banked
  4303  00128C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4304  00128E  0E0A               	movlw	10
  4305  001290  6F72               	movwf	___awdiv@divisor& (0+255),b
  4306  001292  0E00               	movlw	0
  4307  001294  6E3F               	movwf	___awmod@divisor+1,c
  4308  001296  0E64               	movlw	100
  4309  001298  6E3E               	movwf	___awmod@divisor,c
  4310  00129A  0100               	movlb	0	; () banked
  4311  00129C  519F               	movf	scale@scl& (0+255),w,b
  4312  00129E  6E3C               	movwf	___awmod@dividend,c
  4313  0012A0  6A3D               	clrf	___awmod@dividend+1,c
  4314  0012A2  BE3C               	btfsc	___awmod@dividend,7,c
  4315  0012A4  063D               	decf	___awmod@dividend+1,f,c
  4316  0012A6  EC09  F016         	call	___awmod	;wreg free
  4317  0012AA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4318  0012AE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4319  0012B2  ECBD  F014         	call	___awdiv	;wreg free
  4320  0012B6  0100               	movlb	0	; () banked
  4321  0012B8  90D8               	bcf	status,0,c
  4322  0012BA  3770               	rlcf	?___awdiv& (0+255),f,b
  4323  0012BC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4324  0012BE  0100               	movlb	0	; () banked
  4325  0012C0  90D8               	bcf	status,0,c
  4326  0012C2  3770               	rlcf	?___awdiv& (0+255),f,b
  4327  0012C4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4328  0012C6  0E24               	movlw	36
  4329  0012C8  0100               	movlb	0	; () banked
  4330  0012CA  2770               	addwf	?___awdiv& (0+255),f,b
  4331  0012CC  0E00               	movlw	0
  4332  0012CE  0100               	movlb	0	; () banked
  4333  0012D0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4334  0012D2  0EEB               	movlw	low __npowers_
  4335  0012D4  0100               	movlb	0	; () banked
  4336  0012D6  2570               	addwf	?___awdiv& (0+255),w,b
  4337  0012D8  6EF6               	movwf	tblptrl,c
  4338  0012DA  0E3E               	movlw	high __npowers_
  4339  0012DC  0100               	movlb	0	; () banked
  4340  0012DE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4341  0012E0  6EF7               	movwf	tblptrh,c
  4342  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4343  0012E2                     	endif
  4344  0012E2  0009               	tblrd		*+
  4345  0012E4  CFF5 F082          	movff	tablat,___flmul@a
  4346  0012E8  0009               	tblrd		*+
  4347  0012EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4348  0012EE  0009               	tblrd		*+
  4349  0012F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4350  0012F4  000A               	tblrd		*-
  4351  0012F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4352  0012FA  0E00               	movlw	0
  4353  0012FC  0100               	movlb	0	; () banked
  4354  0012FE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4355  001300  0E64               	movlw	100
  4356  001302  6F72               	movwf	___awdiv@divisor& (0+255),b
  4357  001304  0100               	movlb	0	; () banked
  4358  001306  519F               	movf	scale@scl& (0+255),w,b
  4359  001308  0100               	movlb	0	; () banked
  4360  00130A  6F70               	movwf	___awdiv@dividend& (0+255),b
  4361  00130C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4362  00130E  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4363  001310  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4364  001312  ECBD  F014         	call	___awdiv	;wreg free
  4365  001316  0100               	movlb	0	; () banked
  4366  001318  90D8               	bcf	status,0,c
  4367  00131A  3770               	rlcf	?___awdiv& (0+255),f,b
  4368  00131C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4369  00131E  0100               	movlb	0	; () banked
  4370  001320  90D8               	bcf	status,0,c
  4371  001322  3770               	rlcf	?___awdiv& (0+255),f,b
  4372  001324  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4373  001326  0E48               	movlw	72
  4374  001328  0100               	movlb	0	; () banked
  4375  00132A  2770               	addwf	?___awdiv& (0+255),f,b
  4376  00132C  0E00               	movlw	0
  4377  00132E  0100               	movlb	0	; () banked
  4378  001330  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4379  001332  0EEB               	movlw	low __npowers_
  4380  001334  0100               	movlb	0	; () banked
  4381  001336  2570               	addwf	?___awdiv& (0+255),w,b
  4382  001338  6EF6               	movwf	tblptrl,c
  4383  00133A  0E3E               	movlw	high __npowers_
  4384  00133C  0100               	movlb	0	; () banked
  4385  00133E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4386  001340  6EF7               	movwf	tblptrh,c
  4387  001342                     	if	0	;There are less than 3 active tblptr bytes
  4388  001342                     	endif
  4389  001342  0009               	tblrd		*+
  4390  001344  CFF5 F07E          	movff	tablat,___flmul@b
  4391  001348  0009               	tblrd		*+
  4392  00134A  CFF5 F07F          	movff	tablat,___flmul@b+1
  4393  00134E  0009               	tblrd		*+
  4394  001350  CFF5 F080          	movff	tablat,___flmul@b+2
  4395  001354  000A               	tblrd		*-
  4396  001356  CFF5 F081          	movff	tablat,___flmul@b+3
  4397  00135A  ECE4  F006         	call	___flmul	;wreg free
  4398  00135E  C07E  F09B         	movff	?___flmul,_scale$2393
  4399  001362  C07F  F09C         	movff	?___flmul+1,_scale$2393+1
  4400  001366  C080  F09D         	movff	?___flmul+2,_scale$2393+2
  4401  00136A  C081  F09E         	movff	?___flmul+3,_scale$2393+3
  4402                           
  4403                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4404  00136E  C09B  F07E         	movff	_scale$2393,___flmul@b
  4405  001372  C09C  F07F         	movff	_scale$2393+1,___flmul@b+1
  4406  001376  C09D  F080         	movff	_scale$2393+2,___flmul@b+2
  4407  00137A  C09E  F081         	movff	_scale$2393+3,___flmul@b+3
  4408  00137E  0E00               	movlw	0
  4409  001380  6E3F               	movwf	___awmod@divisor+1,c
  4410  001382  0E0A               	movlw	10
  4411  001384  6E3E               	movwf	___awmod@divisor,c
  4412  001386  0100               	movlb	0	; () banked
  4413  001388  519F               	movf	scale@scl& (0+255),w,b
  4414  00138A  6E3C               	movwf	___awmod@dividend,c
  4415  00138C  6A3D               	clrf	___awmod@dividend+1,c
  4416  00138E  BE3C               	btfsc	___awmod@dividend,7,c
  4417  001390  063D               	decf	___awmod@dividend+1,f,c
  4418  001392  EC09  F016         	call	___awmod	;wreg free
  4419  001396  90D8               	bcf	status,0,c
  4420  001398  363C               	rlcf	?___awmod,f,c
  4421  00139A  363D               	rlcf	?___awmod+1,f,c
  4422  00139C  90D8               	bcf	status,0,c
  4423  00139E  363C               	rlcf	?___awmod,f,c
  4424  0013A0  363D               	rlcf	?___awmod+1,f,c
  4425  0013A2  0EEB               	movlw	low __npowers_
  4426  0013A4  243C               	addwf	?___awmod,w,c
  4427  0013A6  6EF6               	movwf	tblptrl,c
  4428  0013A8  0E3E               	movlw	high __npowers_
  4429  0013AA  203D               	addwfc	?___awmod+1,w,c
  4430  0013AC  6EF7               	movwf	tblptrh,c
  4431  0013AE                     	if	0	;There are less than 3 active tblptr bytes
  4432  0013AE                     	endif
  4433  0013AE  0009               	tblrd		*+
  4434  0013B0  CFF5 F082          	movff	tablat,___flmul@a
  4435  0013B4  0009               	tblrd		*+
  4436  0013B6  CFF5 F083          	movff	tablat,___flmul@a+1
  4437  0013BA  0009               	tblrd		*+
  4438  0013BC  CFF5 F084          	movff	tablat,___flmul@a+2
  4439  0013C0  000A               	tblrd		*-
  4440  0013C2  CFF5 F085          	movff	tablat,___flmul@a+3
  4441  0013C6  ECE4  F006         	call	___flmul	;wreg free
  4442  0013CA  C07E  F097         	movff	?___flmul,?_scale
  4443  0013CE  C07F  F098         	movff	?___flmul+1,?_scale+1
  4444  0013D2  C080  F099         	movff	?___flmul+2,?_scale+2
  4445  0013D6  C081  F09A         	movff	?___flmul+3,?_scale+3
  4446  0013DA  0012               	return	
  4447  0013DC                     l4762:
  4448                           
  4449                           ;doprnt.c: 432: else if(scl > 10)
  4450  0013DC  0100               	movlb	0	; () banked
  4451  0013DE  519F               	movf	scale@scl& (0+255),w,b
  4452  0013E0  0A80               	xorlw	128
  4453  0013E2  0F75               	addlw	-139
  4454  0013E4  A0D8               	btfss	status,0,c
  4455  0013E6  D057               	goto	l4768
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4459  0013E8  0E00               	movlw	0
  4460  0013EA  0100               	movlb	0	; () banked
  4461  0013EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4462  0013EE  0E0A               	movlw	10
  4463  0013F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4464  0013F2  0100               	movlb	0	; () banked
  4465  0013F4  519F               	movf	scale@scl& (0+255),w,b
  4466  0013F6  0100               	movlb	0	; () banked
  4467  0013F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4468  0013FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4469  0013FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4470  0013FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4471  001400  ECBD  F014         	call	___awdiv	;wreg free
  4472  001404  0100               	movlb	0	; () banked
  4473  001406  90D8               	bcf	status,0,c
  4474  001408  3770               	rlcf	?___awdiv& (0+255),f,b
  4475  00140A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4476  00140C  0100               	movlb	0	; () banked
  4477  00140E  90D8               	bcf	status,0,c
  4478  001410  3770               	rlcf	?___awdiv& (0+255),f,b
  4479  001412  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4480  001414  0E24               	movlw	36
  4481  001416  0100               	movlb	0	; () banked
  4482  001418  2770               	addwf	?___awdiv& (0+255),f,b
  4483  00141A  0E00               	movlw	0
  4484  00141C  0100               	movlb	0	; () banked
  4485  00141E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4486  001420  0EEB               	movlw	low __npowers_
  4487  001422  0100               	movlb	0	; () banked
  4488  001424  2570               	addwf	?___awdiv& (0+255),w,b
  4489  001426  6EF6               	movwf	tblptrl,c
  4490  001428  0E3E               	movlw	high __npowers_
  4491  00142A  0100               	movlb	0	; () banked
  4492  00142C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4493  00142E  6EF7               	movwf	tblptrh,c
  4494  001430                     	if	0	;There are less than 3 active tblptr bytes
  4495  001430                     	endif
  4496  001430  0009               	tblrd		*+
  4497  001432  CFF5 F07E          	movff	tablat,___flmul@b
  4498  001436  0009               	tblrd		*+
  4499  001438  CFF5 F07F          	movff	tablat,___flmul@b+1
  4500  00143C  0009               	tblrd		*+
  4501  00143E  CFF5 F080          	movff	tablat,___flmul@b+2
  4502  001442  000A               	tblrd		*-
  4503  001444  CFF5 F081          	movff	tablat,___flmul@b+3
  4504  001448  0E00               	movlw	0
  4505  00144A  6E3F               	movwf	___awmod@divisor+1,c
  4506  00144C  0E0A               	movlw	10
  4507  00144E  6E3E               	movwf	___awmod@divisor,c
  4508  001450  0100               	movlb	0	; () banked
  4509  001452  519F               	movf	scale@scl& (0+255),w,b
  4510  001454  6E3C               	movwf	___awmod@dividend,c
  4511  001456  6A3D               	clrf	___awmod@dividend+1,c
  4512  001458  BE3C               	btfsc	___awmod@dividend,7,c
  4513  00145A  063D               	decf	___awmod@dividend+1,f,c
  4514  00145C  EC09  F016         	call	___awmod	;wreg free
  4515  001460  90D8               	bcf	status,0,c
  4516  001462  363C               	rlcf	?___awmod,f,c
  4517  001464  363D               	rlcf	?___awmod+1,f,c
  4518  001466  90D8               	bcf	status,0,c
  4519  001468  363C               	rlcf	?___awmod,f,c
  4520  00146A  363D               	rlcf	?___awmod+1,f,c
  4521  00146C  0EEB               	movlw	low __npowers_
  4522  00146E  243C               	addwf	?___awmod,w,c
  4523  001470  6EF6               	movwf	tblptrl,c
  4524  001472  0E3E               	movlw	high __npowers_
  4525  001474  203D               	addwfc	?___awmod+1,w,c
  4526  001476  6EF7               	movwf	tblptrh,c
  4527  001478                     	if	0	;There are less than 3 active tblptr bytes
  4528  001478                     	endif
  4529  001478  0009               	tblrd		*+
  4530  00147A  CFF5 F082          	movff	tablat,___flmul@a
  4531  00147E  0009               	tblrd		*+
  4532  001480  CFF5 F083          	movff	tablat,___flmul@a+1
  4533  001484  0009               	tblrd		*+
  4534  001486  CFF5 F084          	movff	tablat,___flmul@a+2
  4535  00148A  000A               	tblrd		*-
  4536  00148C  CFF5 F085          	movff	tablat,___flmul@a+3
  4537  001490  ECE4  F006         	call	___flmul	;wreg free
  4538  001494  D79A               	goto	L4
  4539  001496                     l4768:
  4540                           
  4541                           ;doprnt.c: 434: return _npowers_[scl];
  4542  001496  0100               	movlb	0	; () banked
  4543  001498  519F               	movf	scale@scl& (0+255),w,b
  4544  00149A  0D04               	mullw	4
  4545  00149C  0EEB               	movlw	low __npowers_
  4546  00149E  24F3               	addwf	prodl,w,c
  4547  0014A0  6EF6               	movwf	tblptrl,c
  4548  0014A2  0E3E               	movlw	high __npowers_
  4549  0014A4  20F4               	addwfc	prodh,w,c
  4550  0014A6  6EF7               	movwf	tblptrh,c
  4551  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  4552  0014A8                     	endif
  4553  0014A8  0009               	tblrd		*+
  4554  0014AA  CFF5 F097          	movff	tablat,?_scale
  4555  0014AE  0009               	tblrd		*+
  4556  0014B0  CFF5 F098          	movff	tablat,?_scale+1
  4557  0014B4  0009               	tblrd		*+
  4558  0014B6  CFF5 F099          	movff	tablat,?_scale+2
  4559  0014BA  000A               	tblrd		*-
  4560  0014BC  CFF5 F09A          	movff	tablat,?_scale+3
  4561                           
  4562                           ; BSR set to: 0
  4563  0014C0  0012               	return	
  4564  0014C2                     l4772:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;doprnt.c: 435: }
  4568                           ;doprnt.c: 436: if(scl>=110)
  4569  0014C2  0100               	movlb	0	; () banked
  4570  0014C4  519F               	movf	scale@scl& (0+255),w,b
  4571  0014C6  0A80               	xorlw	128
  4572  0014C8  0F12               	addlw	-238
  4573  0014CA  A0D8               	btfss	status,0,c
  4574  0014CC  D0AA               	goto	l4780
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4578  0014CE  0E00               	movlw	0
  4579  0014D0  0100               	movlb	0	; () banked
  4580  0014D2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4581  0014D4  0E0A               	movlw	10
  4582  0014D6  6F72               	movwf	___awdiv@divisor& (0+255),b
  4583  0014D8  0E00               	movlw	0
  4584  0014DA  6E3F               	movwf	___awmod@divisor+1,c
  4585  0014DC  0E64               	movlw	100
  4586  0014DE  6E3E               	movwf	___awmod@divisor,c
  4587  0014E0  0100               	movlb	0	; () banked
  4588  0014E2  519F               	movf	scale@scl& (0+255),w,b
  4589  0014E4  6E3C               	movwf	___awmod@dividend,c
  4590  0014E6  6A3D               	clrf	___awmod@dividend+1,c
  4591  0014E8  BE3C               	btfsc	___awmod@dividend,7,c
  4592  0014EA  063D               	decf	___awmod@dividend+1,f,c
  4593  0014EC  EC09  F016         	call	___awmod	;wreg free
  4594  0014F0  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4595  0014F4  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4596  0014F8  ECBD  F014         	call	___awdiv	;wreg free
  4597  0014FC  0100               	movlb	0	; () banked
  4598  0014FE  90D8               	bcf	status,0,c
  4599  001500  3770               	rlcf	?___awdiv& (0+255),f,b
  4600  001502  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4601  001504  0100               	movlb	0	; () banked
  4602  001506  90D8               	bcf	status,0,c
  4603  001508  3770               	rlcf	?___awdiv& (0+255),f,b
  4604  00150A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4605  00150C  0E24               	movlw	36
  4606  00150E  0100               	movlb	0	; () banked
  4607  001510  2770               	addwf	?___awdiv& (0+255),f,b
  4608  001512  0E00               	movlw	0
  4609  001514  0100               	movlb	0	; () banked
  4610  001516  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4611  001518  0E1F               	movlw	low __powers_
  4612  00151A  0100               	movlb	0	; () banked
  4613  00151C  2570               	addwf	?___awdiv& (0+255),w,b
  4614  00151E  6EF6               	movwf	tblptrl,c
  4615  001520  0E3F               	movlw	high __powers_
  4616  001522  0100               	movlb	0	; () banked
  4617  001524  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4618  001526  6EF7               	movwf	tblptrh,c
  4619  001528                     	if	0	;There are less than 3 active tblptr bytes
  4620  001528                     	endif
  4621  001528  0009               	tblrd		*+
  4622  00152A  CFF5 F082          	movff	tablat,___flmul@a
  4623  00152E  0009               	tblrd		*+
  4624  001530  CFF5 F083          	movff	tablat,___flmul@a+1
  4625  001534  0009               	tblrd		*+
  4626  001536  CFF5 F084          	movff	tablat,___flmul@a+2
  4627  00153A  000A               	tblrd		*-
  4628  00153C  CFF5 F085          	movff	tablat,___flmul@a+3
  4629  001540  0E00               	movlw	0
  4630  001542  0100               	movlb	0	; () banked
  4631  001544  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4632  001546  0E64               	movlw	100
  4633  001548  6F72               	movwf	___awdiv@divisor& (0+255),b
  4634  00154A  0100               	movlb	0	; () banked
  4635  00154C  519F               	movf	scale@scl& (0+255),w,b
  4636  00154E  0100               	movlb	0	; () banked
  4637  001550  6F70               	movwf	___awdiv@dividend& (0+255),b
  4638  001552  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4639  001554  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4640  001556  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4641  001558  ECBD  F014         	call	___awdiv	;wreg free
  4642  00155C  0100               	movlb	0	; () banked
  4643  00155E  90D8               	bcf	status,0,c
  4644  001560  3770               	rlcf	?___awdiv& (0+255),f,b
  4645  001562  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4646  001564  0100               	movlb	0	; () banked
  4647  001566  90D8               	bcf	status,0,c
  4648  001568  3770               	rlcf	?___awdiv& (0+255),f,b
  4649  00156A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4650  00156C  0E48               	movlw	72
  4651  00156E  0100               	movlb	0	; () banked
  4652  001570  2770               	addwf	?___awdiv& (0+255),f,b
  4653  001572  0E00               	movlw	0
  4654  001574  0100               	movlb	0	; () banked
  4655  001576  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4656  001578  0E1F               	movlw	low __powers_
  4657  00157A  0100               	movlb	0	; () banked
  4658  00157C  2570               	addwf	?___awdiv& (0+255),w,b
  4659  00157E  6EF6               	movwf	tblptrl,c
  4660  001580  0E3F               	movlw	high __powers_
  4661  001582  0100               	movlb	0	; () banked
  4662  001584  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4663  001586  6EF7               	movwf	tblptrh,c
  4664  001588                     	if	0	;There are less than 3 active tblptr bytes
  4665  001588                     	endif
  4666  001588  0009               	tblrd		*+
  4667  00158A  CFF5 F07E          	movff	tablat,___flmul@b
  4668  00158E  0009               	tblrd		*+
  4669  001590  CFF5 F07F          	movff	tablat,___flmul@b+1
  4670  001594  0009               	tblrd		*+
  4671  001596  CFF5 F080          	movff	tablat,___flmul@b+2
  4672  00159A  000A               	tblrd		*-
  4673  00159C  CFF5 F081          	movff	tablat,___flmul@b+3
  4674  0015A0  ECE4  F006         	call	___flmul	;wreg free
  4675  0015A4  C07E  F09B         	movff	?___flmul,_scale$2393
  4676  0015A8  C07F  F09C         	movff	?___flmul+1,_scale$2393+1
  4677  0015AC  C080  F09D         	movff	?___flmul+2,_scale$2393+2
  4678  0015B0  C081  F09E         	movff	?___flmul+3,_scale$2393+3
  4679                           
  4680                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4681  0015B4  C09B  F07E         	movff	_scale$2393,___flmul@b
  4682  0015B8  C09C  F07F         	movff	_scale$2393+1,___flmul@b+1
  4683  0015BC  C09D  F080         	movff	_scale$2393+2,___flmul@b+2
  4684  0015C0  C09E  F081         	movff	_scale$2393+3,___flmul@b+3
  4685  0015C4  0E00               	movlw	0
  4686  0015C6  6E3F               	movwf	___awmod@divisor+1,c
  4687  0015C8  0E0A               	movlw	10
  4688  0015CA  6E3E               	movwf	___awmod@divisor,c
  4689  0015CC  0100               	movlb	0	; () banked
  4690  0015CE  519F               	movf	scale@scl& (0+255),w,b
  4691  0015D0  6E3C               	movwf	___awmod@dividend,c
  4692  0015D2  6A3D               	clrf	___awmod@dividend+1,c
  4693  0015D4  BE3C               	btfsc	___awmod@dividend,7,c
  4694  0015D6  063D               	decf	___awmod@dividend+1,f,c
  4695  0015D8  EC09  F016         	call	___awmod	;wreg free
  4696  0015DC  90D8               	bcf	status,0,c
  4697  0015DE  363C               	rlcf	?___awmod,f,c
  4698  0015E0  363D               	rlcf	?___awmod+1,f,c
  4699  0015E2  90D8               	bcf	status,0,c
  4700  0015E4  363C               	rlcf	?___awmod,f,c
  4701  0015E6  363D               	rlcf	?___awmod+1,f,c
  4702  0015E8  0E1F               	movlw	low __powers_
  4703  0015EA  243C               	addwf	?___awmod,w,c
  4704  0015EC  6EF6               	movwf	tblptrl,c
  4705  0015EE  0E3F               	movlw	high __powers_
  4706  0015F0  203D               	addwfc	?___awmod+1,w,c
  4707  0015F2  6EF7               	movwf	tblptrh,c
  4708  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  4709  0015F4                     	endif
  4710  0015F4  0009               	tblrd		*+
  4711  0015F6  CFF5 F082          	movff	tablat,___flmul@a
  4712  0015FA  0009               	tblrd		*+
  4713  0015FC  CFF5 F083          	movff	tablat,___flmul@a+1
  4714  001600  0009               	tblrd		*+
  4715  001602  CFF5 F084          	movff	tablat,___flmul@a+2
  4716  001606  000A               	tblrd		*-
  4717  001608  CFF5 F085          	movff	tablat,___flmul@a+3
  4718  00160C  ECE4  F006         	call	___flmul	;wreg free
  4719  001610  C07E  F097         	movff	?___flmul,?_scale
  4720  001614  C07F  F098         	movff	?___flmul+1,?_scale+1
  4721  001618  C080  F099         	movff	?___flmul+2,?_scale+2
  4722  00161C  C081  F09A         	movff	?___flmul+3,?_scale+3
  4723  001620  0012               	return	
  4724  001622                     l4780:
  4725                           
  4726                           ;doprnt.c: 438: else if(scl > 10)
  4727  001622  0100               	movlb	0	; () banked
  4728  001624  519F               	movf	scale@scl& (0+255),w,b
  4729  001626  0A80               	xorlw	128
  4730  001628  0F75               	addlw	-139
  4731  00162A  A0D8               	btfss	status,0,c
  4732  00162C  D057               	goto	l4786
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4736  00162E  0E00               	movlw	0
  4737  001630  0100               	movlb	0	; () banked
  4738  001632  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4739  001634  0E0A               	movlw	10
  4740  001636  6F72               	movwf	___awdiv@divisor& (0+255),b
  4741  001638  0100               	movlb	0	; () banked
  4742  00163A  519F               	movf	scale@scl& (0+255),w,b
  4743  00163C  0100               	movlb	0	; () banked
  4744  00163E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4745  001640  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4746  001642  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4747  001644  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4748  001646  ECBD  F014         	call	___awdiv	;wreg free
  4749  00164A  0100               	movlb	0	; () banked
  4750  00164C  90D8               	bcf	status,0,c
  4751  00164E  3770               	rlcf	?___awdiv& (0+255),f,b
  4752  001650  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4753  001652  0100               	movlb	0	; () banked
  4754  001654  90D8               	bcf	status,0,c
  4755  001656  3770               	rlcf	?___awdiv& (0+255),f,b
  4756  001658  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4757  00165A  0E24               	movlw	36
  4758  00165C  0100               	movlb	0	; () banked
  4759  00165E  2770               	addwf	?___awdiv& (0+255),f,b
  4760  001660  0E00               	movlw	0
  4761  001662  0100               	movlb	0	; () banked
  4762  001664  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4763  001666  0E1F               	movlw	low __powers_
  4764  001668  0100               	movlb	0	; () banked
  4765  00166A  2570               	addwf	?___awdiv& (0+255),w,b
  4766  00166C  6EF6               	movwf	tblptrl,c
  4767  00166E  0E3F               	movlw	high __powers_
  4768  001670  0100               	movlb	0	; () banked
  4769  001672  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4770  001674  6EF7               	movwf	tblptrh,c
  4771  001676                     	if	0	;There are less than 3 active tblptr bytes
  4772  001676                     	endif
  4773  001676  0009               	tblrd		*+
  4774  001678  CFF5 F07E          	movff	tablat,___flmul@b
  4775  00167C  0009               	tblrd		*+
  4776  00167E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4777  001682  0009               	tblrd		*+
  4778  001684  CFF5 F080          	movff	tablat,___flmul@b+2
  4779  001688  000A               	tblrd		*-
  4780  00168A  CFF5 F081          	movff	tablat,___flmul@b+3
  4781  00168E  0E00               	movlw	0
  4782  001690  6E3F               	movwf	___awmod@divisor+1,c
  4783  001692  0E0A               	movlw	10
  4784  001694  6E3E               	movwf	___awmod@divisor,c
  4785  001696  0100               	movlb	0	; () banked
  4786  001698  519F               	movf	scale@scl& (0+255),w,b
  4787  00169A  6E3C               	movwf	___awmod@dividend,c
  4788  00169C  6A3D               	clrf	___awmod@dividend+1,c
  4789  00169E  BE3C               	btfsc	___awmod@dividend,7,c
  4790  0016A0  063D               	decf	___awmod@dividend+1,f,c
  4791  0016A2  EC09  F016         	call	___awmod	;wreg free
  4792  0016A6  90D8               	bcf	status,0,c
  4793  0016A8  363C               	rlcf	?___awmod,f,c
  4794  0016AA  363D               	rlcf	?___awmod+1,f,c
  4795  0016AC  90D8               	bcf	status,0,c
  4796  0016AE  363C               	rlcf	?___awmod,f,c
  4797  0016B0  363D               	rlcf	?___awmod+1,f,c
  4798  0016B2  0E1F               	movlw	low __powers_
  4799  0016B4  243C               	addwf	?___awmod,w,c
  4800  0016B6  6EF6               	movwf	tblptrl,c
  4801  0016B8  0E3F               	movlw	high __powers_
  4802  0016BA  203D               	addwfc	?___awmod+1,w,c
  4803  0016BC  6EF7               	movwf	tblptrh,c
  4804  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  4805  0016BE                     	endif
  4806  0016BE  0009               	tblrd		*+
  4807  0016C0  CFF5 F082          	movff	tablat,___flmul@a
  4808  0016C4  0009               	tblrd		*+
  4809  0016C6  CFF5 F083          	movff	tablat,___flmul@a+1
  4810  0016CA  0009               	tblrd		*+
  4811  0016CC  CFF5 F084          	movff	tablat,___flmul@a+2
  4812  0016D0  000A               	tblrd		*-
  4813  0016D2  CFF5 F085          	movff	tablat,___flmul@a+3
  4814  0016D6  ECE4  F006         	call	___flmul	;wreg free
  4815  0016DA  D79A               	goto	L5
  4816  0016DC                     l4786:
  4817                           
  4818                           ;doprnt.c: 440: return _powers_[scl];
  4819  0016DC  0100               	movlb	0	; () banked
  4820  0016DE  519F               	movf	scale@scl& (0+255),w,b
  4821  0016E0  0D04               	mullw	4
  4822  0016E2  0E1F               	movlw	low __powers_
  4823  0016E4  24F3               	addwf	prodl,w,c
  4824  0016E6  6EF6               	movwf	tblptrl,c
  4825  0016E8  0E3F               	movlw	high __powers_
  4826  0016EA  20F4               	addwfc	prodh,w,c
  4827  0016EC  6EF7               	movwf	tblptrh,c
  4828  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  4829  0016EE                     	endif
  4830  0016EE  0009               	tblrd		*+
  4831  0016F0  CFF5 F097          	movff	tablat,?_scale
  4832  0016F4  0009               	tblrd		*+
  4833  0016F6  CFF5 F098          	movff	tablat,?_scale+1
  4834  0016FA  0009               	tblrd		*+
  4835  0016FC  CFF5 F099          	movff	tablat,?_scale+2
  4836  001700  000A               	tblrd		*-
  4837  001702  CFF5 F09A          	movff	tablat,?_scale+3
  4838  001706  0012               	return	
  4839  001708                     __end_of_scale:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8
  4855                           
  4856 ;; *************** function _isdigit *****************
  4857 ;; Defined at:
  4858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  c               1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  c               1   26[COMRAM] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4872 ;;      Params:         0       0       0       0
  4873 ;;      Locals:         2       0       0       0
  4874 ;;      Temps:          1       0       0       0
  4875 ;;      Totals:         3       0       0       0
  4876 ;;Total ram usage:        3 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    4
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_sprintf
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text14
  4887  003050                     __ptext14:
  4888                           	opt stack 0
  4889  003050                     _isdigit:
  4890                           	opt stack 24
  4891                           
  4892                           ;incstack = 0
  4893                           ;isdigit@c stored from wreg
  4894  003050  6E3E               	movwf	isdigit@c,c
  4895  003052  0E00               	movlw	0
  4896  003054  6E3D               	movwf	_isdigit$2000,c
  4897  003056  0E3A               	movlw	58
  4898  003058  603E               	cpfslt	isdigit@c,c
  4899  00305A  D005               	goto	l4798
  4900  00305C  0E2F               	movlw	47
  4901  00305E  643E               	cpfsgt	isdigit@c,c
  4902  003060  D002               	goto	l4798
  4903  003062  0E01               	movlw	1
  4904  003064  6E3D               	movwf	_isdigit$2000,c
  4905  003066                     l4798:
  4906  003066  C03D  F03C         	movff	_isdigit$2000,??_isdigit
  4907  00306A  303C               	rrcf	??_isdigit,w,c
  4908  00306C  0012               	return	
  4909  00306E                     __end_of_isdigit:
  4910                           	opt stack 0
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _fround *****************
  4927 ;; Defined at:
  4928 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  prec            1    wreg     unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  prec            1   67[BANK0 ] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  4   55[BANK0 ] unsigned char 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4942 ;;      Params:         0       4       0       0
  4943 ;;      Locals:         0       9       0       0
  4944 ;;      Temps:          0       0       0       0
  4945 ;;      Totals:         0      13       0       0
  4946 ;;Total ram usage:       13 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    5
  4949 ;; This function calls:
  4950 ;;		___awdiv
  4951 ;;		___awmod
  4952 ;;		___flmul
  4953 ;; This function is called by:
  4954 ;;		_sprintf
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text15
  4959  001A82                     __ptext15:
  4960                           	opt stack 0
  4961  001A82                     _fround:
  4962                           	opt stack 23
  4963                           
  4964                           ;incstack = 0
  4965                           ;fround@prec stored from wreg
  4966  001A82  0100               	movlb	0	; () banked
  4967  001A84  6FA3               	movwf	fround@prec& (0+255),b
  4968                           
  4969                           ;doprnt.c: 413: if(prec>=110)
  4970  001A86  0E6D               	movlw	109
  4971  001A88  0100               	movlb	0	; () banked
  4972  001A8A  65A3               	cpfsgt	fround@prec& (0+255),b
  4973  001A8C  D0BC               	goto	l4740
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4977  001A8E  0E00               	movlw	0
  4978  001A90  0100               	movlb	0	; () banked
  4979  001A92  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4980  001A94  0E0A               	movlw	10
  4981  001A96  6F72               	movwf	___awdiv@divisor& (0+255),b
  4982  001A98  0E00               	movlw	0
  4983  001A9A  6E3F               	movwf	___awmod@divisor+1,c
  4984  001A9C  0E64               	movlw	100
  4985  001A9E  6E3E               	movwf	___awmod@divisor,c
  4986  001AA0  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4987  001AA4  6A3D               	clrf	___awmod@dividend+1,c
  4988  001AA6  EC09  F016         	call	___awmod	;wreg free
  4989  001AAA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4990  001AAE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4991  001AB2  ECBD  F014         	call	___awdiv	;wreg free
  4992  001AB6  0100               	movlb	0	; () banked
  4993  001AB8  90D8               	bcf	status,0,c
  4994  001ABA  3770               	rlcf	?___awdiv& (0+255),f,b
  4995  001ABC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4996  001ABE  0100               	movlb	0	; () banked
  4997  001AC0  90D8               	bcf	status,0,c
  4998  001AC2  3770               	rlcf	?___awdiv& (0+255),f,b
  4999  001AC4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5000  001AC6  0E24               	movlw	36
  5001  001AC8  0100               	movlb	0	; () banked
  5002  001ACA  2770               	addwf	?___awdiv& (0+255),f,b
  5003  001ACC  0E00               	movlw	0
  5004  001ACE  0100               	movlb	0	; () banked
  5005  001AD0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5006  001AD2  0EEB               	movlw	low __npowers_
  5007  001AD4  0100               	movlb	0	; () banked
  5008  001AD6  2570               	addwf	?___awdiv& (0+255),w,b
  5009  001AD8  6EF6               	movwf	tblptrl,c
  5010  001ADA  0E3E               	movlw	high __npowers_
  5011  001ADC  0100               	movlb	0	; () banked
  5012  001ADE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5013  001AE0  6EF7               	movwf	tblptrh,c
  5014  001AE2                     	if	0	;There are less than 3 active tblptr bytes
  5015  001AE2                     	endif
  5016  001AE2  0009               	tblrd		*+
  5017  001AE4  CFF5 F082          	movff	tablat,___flmul@a
  5018  001AE8  0009               	tblrd		*+
  5019  001AEA  CFF5 F083          	movff	tablat,___flmul@a+1
  5020  001AEE  0009               	tblrd		*+
  5021  001AF0  CFF5 F084          	movff	tablat,___flmul@a+2
  5022  001AF4  000A               	tblrd		*-
  5023  001AF6  CFF5 F085          	movff	tablat,___flmul@a+3
  5024  001AFA  0E00               	movlw	0
  5025  001AFC  0100               	movlb	0	; () banked
  5026  001AFE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5027  001B00  0E64               	movlw	100
  5028  001B02  6F72               	movwf	___awdiv@divisor& (0+255),b
  5029  001B04  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5030  001B08  0100               	movlb	0	; () banked
  5031  001B0A  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5032  001B0C  ECBD  F014         	call	___awdiv	;wreg free
  5033  001B10  0100               	movlb	0	; () banked
  5034  001B12  90D8               	bcf	status,0,c
  5035  001B14  3770               	rlcf	?___awdiv& (0+255),f,b
  5036  001B16  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5037  001B18  0100               	movlb	0	; () banked
  5038  001B1A  90D8               	bcf	status,0,c
  5039  001B1C  3770               	rlcf	?___awdiv& (0+255),f,b
  5040  001B1E  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5041  001B20  0E48               	movlw	72
  5042  001B22  0100               	movlb	0	; () banked
  5043  001B24  2770               	addwf	?___awdiv& (0+255),f,b
  5044  001B26  0E00               	movlw	0
  5045  001B28  0100               	movlb	0	; () banked
  5046  001B2A  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5047  001B2C  0EEB               	movlw	low __npowers_
  5048  001B2E  0100               	movlb	0	; () banked
  5049  001B30  2570               	addwf	?___awdiv& (0+255),w,b
  5050  001B32  6EF6               	movwf	tblptrl,c
  5051  001B34  0E3E               	movlw	high __npowers_
  5052  001B36  0100               	movlb	0	; () banked
  5053  001B38  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5054  001B3A  6EF7               	movwf	tblptrh,c
  5055  001B3C                     	if	0	;There are less than 3 active tblptr bytes
  5056  001B3C                     	endif
  5057  001B3C  0009               	tblrd		*+
  5058  001B3E  CFF5 F07E          	movff	tablat,___flmul@b
  5059  001B42  0009               	tblrd		*+
  5060  001B44  CFF5 F07F          	movff	tablat,___flmul@b+1
  5061  001B48  0009               	tblrd		*+
  5062  001B4A  CFF5 F080          	movff	tablat,___flmul@b+2
  5063  001B4E  000A               	tblrd		*-
  5064  001B50  CFF5 F081          	movff	tablat,___flmul@b+3
  5065  001B54  ECE4  F006         	call	___flmul	;wreg free
  5066  001B58  C07E  F09F         	movff	?___flmul,_fround$2391
  5067  001B5C  C07F  F0A0         	movff	?___flmul+1,_fround$2391+1
  5068  001B60  C080  F0A1         	movff	?___flmul+2,_fround$2391+2
  5069  001B64  C081  F0A2         	movff	?___flmul+3,_fround$2391+3
  5070                           
  5071                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5072  001B68  0E00               	movlw	0
  5073  001B6A  6E3F               	movwf	___awmod@divisor+1,c
  5074  001B6C  0E0A               	movlw	10
  5075  001B6E  6E3E               	movwf	___awmod@divisor,c
  5076  001B70  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5077  001B74  6A3D               	clrf	___awmod@dividend+1,c
  5078  001B76  EC09  F016         	call	___awmod	;wreg free
  5079  001B7A  90D8               	bcf	status,0,c
  5080  001B7C  363C               	rlcf	?___awmod,f,c
  5081  001B7E  363D               	rlcf	?___awmod+1,f,c
  5082  001B80  90D8               	bcf	status,0,c
  5083  001B82  363C               	rlcf	?___awmod,f,c
  5084  001B84  363D               	rlcf	?___awmod+1,f,c
  5085  001B86  0EEB               	movlw	low __npowers_
  5086  001B88  243C               	addwf	?___awmod,w,c
  5087  001B8A  6EF6               	movwf	tblptrl,c
  5088  001B8C  0E3E               	movlw	high __npowers_
  5089  001B8E  203D               	addwfc	?___awmod+1,w,c
  5090  001B90  6EF7               	movwf	tblptrh,c
  5091  001B92                     	if	0	;There are less than 3 active tblptr bytes
  5092  001B92                     	endif
  5093  001B92  0009               	tblrd		*+
  5094  001B94  CFF5 F082          	movff	tablat,___flmul@a
  5095  001B98  0009               	tblrd		*+
  5096  001B9A  CFF5 F083          	movff	tablat,___flmul@a+1
  5097  001B9E  0009               	tblrd		*+
  5098  001BA0  CFF5 F084          	movff	tablat,___flmul@a+2
  5099  001BA4  000A               	tblrd		*-
  5100  001BA6  CFF5 F085          	movff	tablat,___flmul@a+3
  5101  001BAA  C09F  F07E         	movff	_fround$2391,___flmul@b
  5102  001BAE  C0A0  F07F         	movff	_fround$2391+1,___flmul@b+1
  5103  001BB2  C0A1  F080         	movff	_fround$2391+2,___flmul@b+2
  5104  001BB6  C0A2  F081         	movff	_fround$2391+3,___flmul@b+3
  5105  001BBA  ECE4  F006         	call	___flmul	;wreg free
  5106  001BBE  C07E  F09B         	movff	?___flmul,_fround$2392
  5107  001BC2  C07F  F09C         	movff	?___flmul+1,_fround$2392+1
  5108  001BC6  C080  F09D         	movff	?___flmul+2,_fround$2392+2
  5109  001BCA  C081  F09E         	movff	?___flmul+3,_fround$2392+3
  5110                           
  5111                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5112  001BCE  C09B  F07E         	movff	_fround$2392,___flmul@b
  5113  001BD2  C09C  F07F         	movff	_fround$2392+1,___flmul@b+1
  5114  001BD6  C09D  F080         	movff	_fround$2392+2,___flmul@b+2
  5115  001BDA  C09E  F081         	movff	_fround$2392+3,___flmul@b+3
  5116  001BDE  0E00               	movlw	0
  5117  001BE0  0100               	movlb	0	; () banked
  5118  001BE2  6F82               	movwf	___flmul@a& (0+255),b
  5119  001BE4  0E00               	movlw	0
  5120  001BE6  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5121  001BE8  0E00               	movlw	0
  5122  001BEA  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5123  001BEC  0E3F               	movlw	63
  5124  001BEE  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5125  001BF0  ECE4  F006         	call	___flmul	;wreg free
  5126  001BF4  C07E  F097         	movff	?___flmul,?_fround
  5127  001BF8  C07F  F098         	movff	?___flmul+1,?_fround+1
  5128  001BFC  C080  F099         	movff	?___flmul+2,?_fround+2
  5129  001C00  C081  F09A         	movff	?___flmul+3,?_fround+3
  5130  001C04  0012               	return	
  5131  001C06                     l4740:
  5132                           
  5133                           ;doprnt.c: 415: else if(prec > 10)
  5134  001C06  0E0A               	movlw	10
  5135  001C08  0100               	movlb	0	; () banked
  5136  001C0A  65A3               	cpfsgt	fround@prec& (0+255),b
  5137  001C0C  D06C               	goto	l4748
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5141  001C0E  0E00               	movlw	0
  5142  001C10  6E3F               	movwf	___awmod@divisor+1,c
  5143  001C12  0E0A               	movlw	10
  5144  001C14  6E3E               	movwf	___awmod@divisor,c
  5145  001C16  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5146  001C1A  6A3D               	clrf	___awmod@dividend+1,c
  5147  001C1C  EC09  F016         	call	___awmod	;wreg free
  5148  001C20  90D8               	bcf	status,0,c
  5149  001C22  363C               	rlcf	?___awmod,f,c
  5150  001C24  363D               	rlcf	?___awmod+1,f,c
  5151  001C26  90D8               	bcf	status,0,c
  5152  001C28  363C               	rlcf	?___awmod,f,c
  5153  001C2A  363D               	rlcf	?___awmod+1,f,c
  5154  001C2C  0EEB               	movlw	low __npowers_
  5155  001C2E  243C               	addwf	?___awmod,w,c
  5156  001C30  6EF6               	movwf	tblptrl,c
  5157  001C32  0E3E               	movlw	high __npowers_
  5158  001C34  203D               	addwfc	?___awmod+1,w,c
  5159  001C36  6EF7               	movwf	tblptrh,c
  5160  001C38                     	if	0	;There are less than 3 active tblptr bytes
  5161  001C38                     	endif
  5162  001C38  0009               	tblrd		*+
  5163  001C3A  CFF5 F082          	movff	tablat,___flmul@a
  5164  001C3E  0009               	tblrd		*+
  5165  001C40  CFF5 F083          	movff	tablat,___flmul@a+1
  5166  001C44  0009               	tblrd		*+
  5167  001C46  CFF5 F084          	movff	tablat,___flmul@a+2
  5168  001C4A  000A               	tblrd		*-
  5169  001C4C  CFF5 F085          	movff	tablat,___flmul@a+3
  5170  001C50  0E00               	movlw	0
  5171  001C52  0100               	movlb	0	; () banked
  5172  001C54  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5173  001C56  0E0A               	movlw	10
  5174  001C58  6F72               	movwf	___awdiv@divisor& (0+255),b
  5175  001C5A  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5176  001C5E  0100               	movlb	0	; () banked
  5177  001C60  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5178  001C62  ECBD  F014         	call	___awdiv	;wreg free
  5179  001C66  0100               	movlb	0	; () banked
  5180  001C68  90D8               	bcf	status,0,c
  5181  001C6A  3770               	rlcf	?___awdiv& (0+255),f,b
  5182  001C6C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5183  001C6E  0100               	movlb	0	; () banked
  5184  001C70  90D8               	bcf	status,0,c
  5185  001C72  3770               	rlcf	?___awdiv& (0+255),f,b
  5186  001C74  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5187  001C76  0E24               	movlw	36
  5188  001C78  0100               	movlb	0	; () banked
  5189  001C7A  2770               	addwf	?___awdiv& (0+255),f,b
  5190  001C7C  0E00               	movlw	0
  5191  001C7E  0100               	movlb	0	; () banked
  5192  001C80  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5193  001C82  0EEB               	movlw	low __npowers_
  5194  001C84  0100               	movlb	0	; () banked
  5195  001C86  2570               	addwf	?___awdiv& (0+255),w,b
  5196  001C88  6EF6               	movwf	tblptrl,c
  5197  001C8A  0E3E               	movlw	high __npowers_
  5198  001C8C  0100               	movlb	0	; () banked
  5199  001C8E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5200  001C90  6EF7               	movwf	tblptrh,c
  5201  001C92                     	if	0	;There are less than 3 active tblptr bytes
  5202  001C92                     	endif
  5203  001C92  0009               	tblrd		*+
  5204  001C94  CFF5 F07E          	movff	tablat,___flmul@b
  5205  001C98  0009               	tblrd		*+
  5206  001C9A  CFF5 F07F          	movff	tablat,___flmul@b+1
  5207  001C9E  0009               	tblrd		*+
  5208  001CA0  CFF5 F080          	movff	tablat,___flmul@b+2
  5209  001CA4  000A               	tblrd		*-
  5210  001CA6  CFF5 F081          	movff	tablat,___flmul@b+3
  5211  001CAA  ECE4  F006         	call	___flmul	;wreg free
  5212  001CAE  C07E  F09F         	movff	?___flmul,_fround$2391
  5213  001CB2  C07F  F0A0         	movff	?___flmul+1,_fround$2391+1
  5214  001CB6  C080  F0A1         	movff	?___flmul+2,_fround$2391+2
  5215  001CBA  C081  F0A2         	movff	?___flmul+3,_fround$2391+3
  5216                           
  5217                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5218  001CBE  C09F  F07E         	movff	_fround$2391,___flmul@b
  5219  001CC2  C0A0  F07F         	movff	_fround$2391+1,___flmul@b+1
  5220  001CC6  C0A1  F080         	movff	_fround$2391+2,___flmul@b+2
  5221  001CCA  C0A2  F081         	movff	_fround$2391+3,___flmul@b+3
  5222  001CCE  0E00               	movlw	0
  5223  001CD0  0100               	movlb	0	; () banked
  5224  001CD2  6F82               	movwf	___flmul@a& (0+255),b
  5225  001CD4  0E00               	movlw	0
  5226  001CD6  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5227  001CD8  0E00               	movlw	0
  5228  001CDA  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5229  001CDC  0E3F               	movlw	63
  5230  001CDE  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5231  001CE0  ECE4  F006         	call	___flmul	;wreg free
  5232  001CE4  D787               	goto	L6
  5233  001CE6                     l4748:
  5234                           
  5235                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5236  001CE6  0100               	movlb	0	; () banked
  5237  001CE8  51A3               	movf	fround@prec& (0+255),w,b
  5238  001CEA  0D04               	mullw	4
  5239  001CEC  0EEB               	movlw	low __npowers_
  5240  001CEE  24F3               	addwf	prodl,w,c
  5241  001CF0  6EF6               	movwf	tblptrl,c
  5242  001CF2  0E3E               	movlw	high __npowers_
  5243  001CF4  20F4               	addwfc	prodh,w,c
  5244  001CF6  6EF7               	movwf	tblptrh,c
  5245  001CF8                     	if	0	;There are less than 3 active tblptr bytes
  5246  001CF8                     	endif
  5247  001CF8  0009               	tblrd		*+
  5248  001CFA  CFF5 F07E          	movff	tablat,___flmul@b
  5249  001CFE  0009               	tblrd		*+
  5250  001D00  CFF5 F07F          	movff	tablat,___flmul@b+1
  5251  001D04  0009               	tblrd		*+
  5252  001D06  CFF5 F080          	movff	tablat,___flmul@b+2
  5253  001D0A  000A               	tblrd		*-
  5254  001D0C  CFF5 F081          	movff	tablat,___flmul@b+3
  5255  001D10  0E00               	movlw	0
  5256  001D12  0100               	movlb	0	; () banked
  5257  001D14  6F82               	movwf	___flmul@a& (0+255),b
  5258  001D16  0E00               	movlw	0
  5259  001D18  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5260  001D1A  0E00               	movlw	0
  5261  001D1C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5262  001D1E  0E3F               	movlw	63
  5263  001D20  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5264  001D22  ECE4  F006         	call	___flmul	;wreg free
  5265  001D26  C07E  F097         	movff	?___flmul,?_fround
  5266  001D2A  C07F  F098         	movff	?___flmul+1,?_fround+1
  5267  001D2E  C080  F099         	movff	?___flmul+2,?_fround+2
  5268  001D32  C081  F09A         	movff	?___flmul+3,?_fround+3
  5269  001D36  0012               	return	
  5270  001D38                     __end_of_fround:
  5271                           	opt stack 0
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           intcon	equ	0xFF2
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           indf2	equ	0xFDF
  5282                           postinc2	equ	0xFDE
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function ___flmul *****************
  5288 ;; Defined at:
  5289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  b               4   30[BANK0 ] unsigned char 
  5292 ;;  a               4   34[BANK0 ] unsigned char 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  prod            4   49[BANK0 ] struct .
  5295 ;;  grs             4   44[BANK0 ] unsigned long 
  5296 ;;  temp            2   53[BANK0 ] struct .
  5297 ;;  bexp            1   48[BANK0 ] unsigned char 
  5298 ;;  aexp            1   43[BANK0 ] unsigned char 
  5299 ;;  sign            1   42[BANK0 ] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  4   30[BANK0 ] unsigned char 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, prodl, prodh
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5309 ;;      Params:         0       8       0       0
  5310 ;;      Locals:         0      13       0       0
  5311 ;;      Temps:          0       4       0       0
  5312 ;;      Totals:         0      25       0       0
  5313 ;;Total ram usage:       25 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    4
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;;		_fround
  5321 ;;		_scale
  5322 ;;		_sprintf
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text16
  5327  000DC8                     __ptext16:
  5328                           	opt stack 0
  5329  000DC8                     ___flmul:
  5330                           	opt stack 26
  5331                           
  5332                           ;incstack = 0
  5333  000DC8  0100               	movlb	0	; () banked
  5334  000DCA  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5335  000DCC  0B80               	andlw	128
  5336  000DCE  0100               	movlb	0	; () banked
  5337  000DD0  6F8A               	movwf	___flmul@sign& (0+255),b
  5338  000DD2  0100               	movlb	0	; () banked
  5339  000DD4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5340  000DD6  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5341  000DD8  0100               	movlb	0	; () banked
  5342  000DDA  6F90               	movwf	___flmul@bexp& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345  000DDC  0100               	movlb	0	; () banked
  5346  000DDE  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5347  000DE0  D002               	goto	l4504
  5348                           
  5349                           ; BSR set to: 0
  5350  000DE2  0100               	movlb	0	; () banked
  5351  000DE4  8190               	bsf	___flmul@bexp& (0+255),0,b
  5352  000DE6                     l4504:
  5353                           
  5354                           ; BSR set to: 0
  5355  000DE6  0100               	movlb	0	; () banked
  5356  000DE8  5190               	movf	___flmul@bexp& (0+255),w,b
  5357  000DEA  0100               	movlb	0	; () banked
  5358  000DEC  B4D8               	btfsc	status,2,c
  5359  000DEE  D010               	goto	l4512
  5360                           
  5361                           ; BSR set to: 0
  5362  000DF0  0100               	movlb	0	; () banked
  5363  000DF2  2990               	incf	___flmul@bexp& (0+255),w,b
  5364  000DF4  A4D8               	btfss	status,2,c
  5365  000DF6  D009               	goto	l4510
  5366                           
  5367                           ; BSR set to: 0
  5368  000DF8  0E00               	movlw	0
  5369  000DFA  0100               	movlb	0	; () banked
  5370  000DFC  6F7E               	movwf	___flmul@b& (0+255),b
  5371  000DFE  0E00               	movlw	0
  5372  000E00  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5373  000E02  0E00               	movlw	0
  5374  000E04  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5375  000E06  0E00               	movlw	0
  5376  000E08  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5377  000E0A                     l4510:
  5378                           
  5379                           ; BSR set to: 0
  5380  000E0A  0100               	movlb	0	; () banked
  5381  000E0C  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5382  000E0E  D009               	goto	l4514
  5383  000E10                     l4512:
  5384                           
  5385                           ; BSR set to: 0
  5386  000E10  0E00               	movlw	0
  5387  000E12  0100               	movlb	0	; () banked
  5388  000E14  6F7E               	movwf	___flmul@b& (0+255),b
  5389  000E16  0E00               	movlw	0
  5390  000E18  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5391  000E1A  0E00               	movlw	0
  5392  000E1C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5393  000E1E  0E00               	movlw	0
  5394  000E20  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5395  000E22                     l4514:
  5396                           
  5397                           ; BSR set to: 0
  5398  000E22  0100               	movlb	0	; () banked
  5399  000E24  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5400  000E26  0B80               	andlw	128
  5401  000E28  0100               	movlb	0	; () banked
  5402  000E2A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5403                           
  5404                           ; BSR set to: 0
  5405  000E2C  0100               	movlb	0	; () banked
  5406  000E2E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5407  000E30  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5408  000E32  0100               	movlb	0	; () banked
  5409  000E34  6F8B               	movwf	___flmul@aexp& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412  000E36  0100               	movlb	0	; () banked
  5413  000E38  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5414  000E3A  D002               	goto	l4522
  5415                           
  5416                           ; BSR set to: 0
  5417  000E3C  0100               	movlb	0	; () banked
  5418  000E3E  818B               	bsf	___flmul@aexp& (0+255),0,b
  5419  000E40                     l4522:
  5420                           
  5421                           ; BSR set to: 0
  5422  000E40  0100               	movlb	0	; () banked
  5423  000E42  518B               	movf	___flmul@aexp& (0+255),w,b
  5424  000E44  0100               	movlb	0	; () banked
  5425  000E46  B4D8               	btfsc	status,2,c
  5426  000E48  D010               	goto	l4530
  5427                           
  5428                           ; BSR set to: 0
  5429  000E4A  0100               	movlb	0	; () banked
  5430  000E4C  298B               	incf	___flmul@aexp& (0+255),w,b
  5431  000E4E  A4D8               	btfss	status,2,c
  5432  000E50  D009               	goto	l4528
  5433                           
  5434                           ; BSR set to: 0
  5435  000E52  0E00               	movlw	0
  5436  000E54  0100               	movlb	0	; () banked
  5437  000E56  6F82               	movwf	___flmul@a& (0+255),b
  5438  000E58  0E00               	movlw	0
  5439  000E5A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5440  000E5C  0E00               	movlw	0
  5441  000E5E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5442  000E60  0E00               	movlw	0
  5443  000E62  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5444  000E64                     l4528:
  5445                           
  5446                           ; BSR set to: 0
  5447  000E64  0100               	movlb	0	; () banked
  5448  000E66  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5449  000E68  D009               	goto	l1050
  5450  000E6A                     l4530:
  5451                           
  5452                           ; BSR set to: 0
  5453  000E6A  0E00               	movlw	0
  5454  000E6C  0100               	movlb	0	; () banked
  5455  000E6E  6F82               	movwf	___flmul@a& (0+255),b
  5456  000E70  0E00               	movlw	0
  5457  000E72  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5458  000E74  0E00               	movlw	0
  5459  000E76  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5460  000E78  0E00               	movlw	0
  5461  000E7A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5462  000E7C                     l1050:
  5463                           
  5464                           ; BSR set to: 0
  5465  000E7C  0100               	movlb	0	; () banked
  5466  000E7E  518B               	movf	___flmul@aexp& (0+255),w,b
  5467  000E80  0100               	movlb	0	; () banked
  5468  000E82  B4D8               	btfsc	status,2,c
  5469  000E84  D005               	goto	l4534
  5470                           
  5471                           ; BSR set to: 0
  5472  000E86  0100               	movlb	0	; () banked
  5473  000E88  5190               	movf	___flmul@bexp& (0+255),w,b
  5474  000E8A  0100               	movlb	0	; () banked
  5475  000E8C  A4D8               	btfss	status,2,c
  5476  000E8E  D00A               	goto	l4538
  5477  000E90                     l4534:
  5478                           
  5479                           ; BSR set to: 0
  5480  000E90  0E00               	movlw	0
  5481  000E92  0100               	movlb	0	; () banked
  5482  000E94  6F7E               	movwf	?___flmul& (0+255),b
  5483  000E96  0E00               	movlw	0
  5484  000E98  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5485  000E9A  0E00               	movlw	0
  5486  000E9C  6F80               	movwf	(?___flmul+2)& (0+255),b
  5487  000E9E  0E00               	movlw	0
  5488  000EA0  6F81               	movwf	(?___flmul+3)& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491  000EA2  0012               	return	
  5492  000EA4                     l4538:
  5493                           
  5494                           ; BSR set to: 0
  5495  000EA4  0100               	movlb	0	; () banked
  5496  000EA6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5497  000EA8  0100               	movlb	0	; () banked
  5498  000EAA  037E               	mulwf	___flmul@b& (0+255),b
  5499  000EAC  CFF3 F095          	movff	prodl,___flmul@temp
  5500  000EB0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5501                           
  5502                           ; BSR set to: 0
  5503  000EB4  0100               	movlb	0	; () banked
  5504  000EB6  5195               	movf	___flmul@temp& (0+255),w,b
  5505  000EB8  0100               	movlb	0	; () banked
  5506  000EBA  6F8C               	movwf	___flmul@grs& (0+255),b
  5507  000EBC  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5508  000EBE  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5509  000EC0  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5510                           
  5511                           ; BSR set to: 0
  5512  000EC2  0100               	movlb	0	; () banked
  5513  000EC4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5514  000EC6  0100               	movlb	0	; () banked
  5515  000EC8  6F91               	movwf	___flmul@prod& (0+255),b
  5516  000ECA  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5517  000ECC  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5518  000ECE  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5519  000ED0  0100               	movlb	0	; () banked
  5520  000ED2  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5521  000ED4  0100               	movlb	0	; () banked
  5522  000ED6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5523  000ED8  CFF3 F095          	movff	prodl,___flmul@temp
  5524  000EDC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5525                           
  5526                           ; BSR set to: 0
  5527  000EE0  0100               	movlb	0	; () banked
  5528  000EE2  5195               	movf	___flmul@temp& (0+255),w,b
  5529  000EE4  0100               	movlb	0	; () banked
  5530  000EE6  278C               	addwf	___flmul@grs& (0+255),f,b
  5531  000EE8  0E00               	movlw	0
  5532  000EEA  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5533  000EEC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5534  000EEE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5535                           
  5536                           ; BSR set to: 0
  5537  000EF0  0100               	movlb	0	; () banked
  5538  000EF2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5539  000EF4  0100               	movlb	0	; () banked
  5540  000EF6  2791               	addwf	___flmul@prod& (0+255),f,b
  5541  000EF8  0E00               	movlw	0
  5542  000EFA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5543  000EFC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5544  000EFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5545  000F00  0100               	movlb	0	; () banked
  5546  000F02  5182               	movf	___flmul@a& (0+255),w,b
  5547  000F04  0100               	movlb	0	; () banked
  5548  000F06  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5549  000F08  CFF3 F095          	movff	prodl,___flmul@temp
  5550  000F0C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5551                           
  5552                           ; BSR set to: 0
  5553  000F10  0100               	movlb	0	; () banked
  5554  000F12  5195               	movf	___flmul@temp& (0+255),w,b
  5555  000F14  0100               	movlb	0	; () banked
  5556  000F16  278C               	addwf	___flmul@grs& (0+255),f,b
  5557  000F18  0E00               	movlw	0
  5558  000F1A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5559  000F1C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5560  000F1E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5561                           
  5562                           ; BSR set to: 0
  5563  000F20  0100               	movlb	0	; () banked
  5564  000F22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5565  000F24  0100               	movlb	0	; () banked
  5566  000F26  2791               	addwf	___flmul@prod& (0+255),f,b
  5567  000F28  0E00               	movlw	0
  5568  000F2A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5569  000F2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5570  000F2E  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5571                           
  5572                           ; BSR set to: 0
  5573  000F30  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5574  000F34  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5575  000F38  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5576  000F3C  0100               	movlb	0	; () banked
  5577  000F3E  6B8C               	clrf	___flmul@grs& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580  000F40  0100               	movlb	0	; () banked
  5581  000F42  5182               	movf	___flmul@a& (0+255),w,b
  5582  000F44  0100               	movlb	0	; () banked
  5583  000F46  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5584  000F48  CFF3 F095          	movff	prodl,___flmul@temp
  5585  000F4C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5586                           
  5587                           ; BSR set to: 0
  5588  000F50  0100               	movlb	0	; () banked
  5589  000F52  5195               	movf	___flmul@temp& (0+255),w,b
  5590  000F54  0100               	movlb	0	; () banked
  5591  000F56  278C               	addwf	___flmul@grs& (0+255),f,b
  5592  000F58  0100               	movlb	0	; () banked
  5593  000F5A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5594  000F5C  0100               	movlb	0	; () banked
  5595  000F5E  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5596  000F60  0E00               	movlw	0
  5597  000F62  0100               	movlb	0	; () banked
  5598  000F64  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5599  000F66  0E00               	movlw	0
  5600  000F68  0100               	movlb	0	; () banked
  5601  000F6A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5602                           
  5603                           ; BSR set to: 0
  5604  000F6C  0100               	movlb	0	; () banked
  5605  000F6E  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5606  000F70  0100               	movlb	0	; () banked
  5607  000F72  037E               	mulwf	___flmul@b& (0+255),b
  5608  000F74  CFF3 F095          	movff	prodl,___flmul@temp
  5609  000F78  CFF4 F096          	movff	prodh,___flmul@temp+1
  5610                           
  5611                           ; BSR set to: 0
  5612  000F7C  0100               	movlb	0	; () banked
  5613  000F7E  5195               	movf	___flmul@temp& (0+255),w,b
  5614  000F80  0100               	movlb	0	; () banked
  5615  000F82  278C               	addwf	___flmul@grs& (0+255),f,b
  5616  000F84  0100               	movlb	0	; () banked
  5617  000F86  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5618  000F88  0100               	movlb	0	; () banked
  5619  000F8A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5620  000F8C  0E00               	movlw	0
  5621  000F8E  0100               	movlb	0	; () banked
  5622  000F90  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5623  000F92  0E00               	movlw	0
  5624  000F94  0100               	movlb	0	; () banked
  5625  000F96  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628  000F98  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5629  000F9C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5630  000FA0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5631  000FA4  0100               	movlb	0	; () banked
  5632  000FA6  6B8C               	clrf	___flmul@grs& (0+255),b
  5633  000FA8  0100               	movlb	0	; () banked
  5634  000FAA  5182               	movf	___flmul@a& (0+255),w,b
  5635  000FAC  0100               	movlb	0	; () banked
  5636  000FAE  037E               	mulwf	___flmul@b& (0+255),b
  5637  000FB0  CFF3 F095          	movff	prodl,___flmul@temp
  5638  000FB4  CFF4 F096          	movff	prodh,___flmul@temp+1
  5639                           
  5640                           ; BSR set to: 0
  5641  000FB8  0100               	movlb	0	; () banked
  5642  000FBA  5195               	movf	___flmul@temp& (0+255),w,b
  5643  000FBC  0100               	movlb	0	; () banked
  5644  000FBE  278C               	addwf	___flmul@grs& (0+255),f,b
  5645  000FC0  0100               	movlb	0	; () banked
  5646  000FC2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5647  000FC4  0100               	movlb	0	; () banked
  5648  000FC6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5649  000FC8  0E00               	movlw	0
  5650  000FCA  0100               	movlb	0	; () banked
  5651  000FCC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5652  000FCE  0E00               	movlw	0
  5653  000FD0  0100               	movlb	0	; () banked
  5654  000FD2  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5655                           
  5656                           ; BSR set to: 0
  5657  000FD4  0100               	movlb	0	; () banked
  5658  000FD6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5659  000FD8  0100               	movlb	0	; () banked
  5660  000FDA  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5661  000FDC  CFF3 F095          	movff	prodl,___flmul@temp
  5662  000FE0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5663  000FE4  0100               	movlb	0	; () banked
  5664  000FE6  5195               	movf	___flmul@temp& (0+255),w,b
  5665  000FE8  0100               	movlb	0	; () banked
  5666  000FEA  2791               	addwf	___flmul@prod& (0+255),f,b
  5667  000FEC  0100               	movlb	0	; () banked
  5668  000FEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5669  000FF0  0100               	movlb	0	; () banked
  5670  000FF2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5671  000FF4  0E00               	movlw	0
  5672  000FF6  0100               	movlb	0	; () banked
  5673  000FF8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5674  000FFA  0E00               	movlw	0
  5675  000FFC  0100               	movlb	0	; () banked
  5676  000FFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5677                           
  5678                           ; BSR set to: 0
  5679  001000  0100               	movlb	0	; () banked
  5680  001002  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5681  001004  0100               	movlb	0	; () banked
  5682  001006  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5683  001008  CFF3 F095          	movff	prodl,___flmul@temp
  5684  00100C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5685                           
  5686                           ; BSR set to: 0
  5687  001010  0100               	movlb	0	; () banked
  5688  001012  5195               	movf	___flmul@temp& (0+255),w,b
  5689  001014  0100               	movlb	0	; () banked
  5690  001016  2791               	addwf	___flmul@prod& (0+255),f,b
  5691  001018  0100               	movlb	0	; () banked
  5692  00101A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5693  00101C  0100               	movlb	0	; () banked
  5694  00101E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5695  001020  0E00               	movlw	0
  5696  001022  0100               	movlb	0	; () banked
  5697  001024  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5698  001026  0E00               	movlw	0
  5699  001028  0100               	movlb	0	; () banked
  5700  00102A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5701  00102C  0100               	movlb	0	; () banked
  5702  00102E  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5703  001030  0100               	movlb	0	; () banked
  5704  001032  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5705  001034  CFF3 F095          	movff	prodl,___flmul@temp
  5706  001038  CFF4 F096          	movff	prodh,___flmul@temp+1
  5707                           
  5708                           ; BSR set to: 0
  5709  00103C  0100               	movlb	0	; () banked
  5710  00103E  5195               	movf	___flmul@temp& (0+255),w,b
  5711  001040  0100               	movlb	0	; () banked
  5712  001042  6F86               	movwf	??___flmul& (0+255),b
  5713  001044  0100               	movlb	0	; () banked
  5714  001046  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5715  001048  0100               	movlb	0	; () banked
  5716  00104A  6F87               	movwf	(??___flmul+1)& (0+255),b
  5717  00104C  0100               	movlb	0	; () banked
  5718  00104E  6B88               	clrf	(??___flmul+2)& (0+255),b
  5719  001050  0100               	movlb	0	; () banked
  5720  001052  6B89               	clrf	(??___flmul+3)& (0+255),b
  5721  001054  C088  F089         	movff	??___flmul+2,??___flmul+3
  5722  001058  C087  F088         	movff	??___flmul+1,??___flmul+2
  5723  00105C  C086  F087         	movff	??___flmul,??___flmul+1
  5724  001060  0100               	movlb	0	; () banked
  5725  001062  6B86               	clrf	??___flmul& (0+255),b
  5726  001064  0100               	movlb	0	; () banked
  5727  001066  5186               	movf	??___flmul& (0+255),w,b
  5728  001068  0100               	movlb	0	; () banked
  5729  00106A  2791               	addwf	___flmul@prod& (0+255),f,b
  5730  00106C  0100               	movlb	0	; () banked
  5731  00106E  5187               	movf	(??___flmul+1)& (0+255),w,b
  5732  001070  0100               	movlb	0	; () banked
  5733  001072  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5734  001074  0100               	movlb	0	; () banked
  5735  001076  5188               	movf	(??___flmul+2)& (0+255),w,b
  5736  001078  0100               	movlb	0	; () banked
  5737  00107A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5738  00107C  0100               	movlb	0	; () banked
  5739  00107E  5189               	movf	(??___flmul+3)& (0+255),w,b
  5740  001080  0100               	movlb	0	; () banked
  5741  001082  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5742                           
  5743                           ; BSR set to: 0
  5744  001084  C08C  F086         	movff	___flmul@grs,??___flmul
  5745  001088  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5746  00108C  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5747  001090  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5748  001094  0E19               	movlw	25
  5749  001096  D006               	goto	u5130
  5750  001098                     u5135:
  5751  001098  0100               	movlb	0	; () banked
  5752  00109A  90D8               	bcf	status,0,c
  5753  00109C  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5754  00109E  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5755  0010A0  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5756  0010A2  3386               	rrcf	??___flmul& (0+255),f,b
  5757  0010A4                     u5130:
  5758  0010A4  2EE8               	decfsz	wreg,f,c
  5759  0010A6  D7F8               	goto	u5135
  5760  0010A8  0100               	movlb	0	; () banked
  5761  0010AA  5186               	movf	??___flmul& (0+255),w,b
  5762  0010AC  0100               	movlb	0	; () banked
  5763  0010AE  2791               	addwf	___flmul@prod& (0+255),f,b
  5764  0010B0  0100               	movlb	0	; () banked
  5765  0010B2  5187               	movf	(??___flmul+1)& (0+255),w,b
  5766  0010B4  0100               	movlb	0	; () banked
  5767  0010B6  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5768  0010B8  0100               	movlb	0	; () banked
  5769  0010BA  5188               	movf	(??___flmul+2)& (0+255),w,b
  5770  0010BC  0100               	movlb	0	; () banked
  5771  0010BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5772  0010C0  0100               	movlb	0	; () banked
  5773  0010C2  5189               	movf	(??___flmul+3)& (0+255),w,b
  5774  0010C4  0100               	movlb	0	; () banked
  5775  0010C6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5776                           
  5777                           ; BSR set to: 0
  5778  0010C8  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5779  0010CC  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5780  0010D0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5781  0010D4  0100               	movlb	0	; () banked
  5782  0010D6  6B8C               	clrf	___flmul@grs& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785  0010D8  0100               	movlb	0	; () banked
  5786  0010DA  518B               	movf	___flmul@aexp& (0+255),w,b
  5787  0010DC  C090  F086         	movff	___flmul@bexp,??___flmul
  5788  0010E0  0100               	movlb	0	; () banked
  5789  0010E2  6B87               	clrf	(??___flmul+1)& (0+255),b
  5790  0010E4  0100               	movlb	0	; () banked
  5791  0010E6  2786               	addwf	??___flmul& (0+255),f,b
  5792  0010E8  0E00               	movlw	0
  5793  0010EA  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5794  0010EC  0E82               	movlw	130
  5795  0010EE  0100               	movlb	0	; () banked
  5796  0010F0  2586               	addwf	??___flmul& (0+255),w,b
  5797  0010F2  0100               	movlb	0	; () banked
  5798  0010F4  6F95               	movwf	___flmul@temp& (0+255),b
  5799  0010F6  0EFF               	movlw	255
  5800  0010F8  0100               	movlb	0	; () banked
  5801  0010FA  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5802  0010FC  0100               	movlb	0	; () banked
  5803  0010FE  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5804  001100  D015               	goto	l4586
  5805  001102                     l4580:
  5806                           
  5807                           ; BSR set to: 0
  5808  001102  0100               	movlb	0	; () banked
  5809  001104  90D8               	bcf	status,0,c
  5810  001106  3791               	rlcf	___flmul@prod& (0+255),f,b
  5811  001108  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5812  00110A  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5813  00110C  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 0
  5816  00110E  0100               	movlb	0	; () banked
  5817  001110  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5818  001112  D002               	goto	l1057
  5819                           
  5820                           ; BSR set to: 0
  5821  001114  0100               	movlb	0	; () banked
  5822  001116  8191               	bsf	___flmul@prod& (0+255),0,b
  5823  001118                     l1057:
  5824                           
  5825                           ; BSR set to: 0
  5826  001118  0100               	movlb	0	; () banked
  5827  00111A  90D8               	bcf	status,0,c
  5828  00111C  378C               	rlcf	___flmul@grs& (0+255),f,b
  5829  00111E  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5830  001120  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5831  001122  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5832  001124  0100               	movlb	0	; () banked
  5833  001126  0795               	decf	___flmul@temp& (0+255),f,b
  5834  001128  A0D8               	btfss	status,0,c
  5835  00112A  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5836  00112C                     l4586:
  5837                           
  5838                           ; BSR set to: 0
  5839  00112C  0100               	movlb	0	; () banked
  5840  00112E  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5841  001130  D7E8               	goto	l4580
  5842                           
  5843                           ; BSR set to: 0
  5844                           
  5845                           ; BSR set to: 0
  5846  001132  0E00               	movlw	0
  5847  001134  0100               	movlb	0	; () banked
  5848  001136  6F8B               	movwf	___flmul@aexp& (0+255),b
  5849                           
  5850                           ; BSR set to: 0
  5851  001138  0100               	movlb	0	; () banked
  5852  00113A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5853  00113C  D024               	goto	l1059
  5854                           
  5855                           ; BSR set to: 0
  5856  00113E  0EFF               	movlw	255
  5857  001140  0100               	movlb	0	; () banked
  5858  001142  158C               	andwf	___flmul@grs& (0+255),w,b
  5859  001144  0100               	movlb	0	; () banked
  5860  001146  6F86               	movwf	??___flmul& (0+255),b
  5861  001148  0EFF               	movlw	255
  5862  00114A  0100               	movlb	0	; () banked
  5863  00114C  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5864  00114E  0100               	movlb	0	; () banked
  5865  001150  6F87               	movwf	(??___flmul+1)& (0+255),b
  5866  001152  0EFF               	movlw	255
  5867  001154  0100               	movlb	0	; () banked
  5868  001156  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5869  001158  0100               	movlb	0	; () banked
  5870  00115A  6F88               	movwf	(??___flmul+2)& (0+255),b
  5871  00115C  0E7F               	movlw	127
  5872  00115E  0100               	movlb	0	; () banked
  5873  001160  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5874  001162  0100               	movlb	0	; () banked
  5875  001164  6F89               	movwf	(??___flmul+3)& (0+255),b
  5876  001166  0100               	movlb	0	; () banked
  5877  001168  5186               	movf	??___flmul& (0+255),w,b
  5878  00116A  0100               	movlb	0	; () banked
  5879  00116C  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5880  00116E  0100               	movlb	0	; () banked
  5881  001170  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5882  001172  0100               	movlb	0	; () banked
  5883  001174  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5884  001176  A4D8               	btfss	status,2,c
  5885  001178  D003               	goto	l4596
  5886                           
  5887                           ; BSR set to: 0
  5888                           
  5889                           ; BSR set to: 0
  5890  00117A  0100               	movlb	0	; () banked
  5891  00117C  A191               	btfss	___flmul@prod& (0+255),0,b
  5892  00117E  D003               	goto	l1059
  5893  001180                     l4596:
  5894                           
  5895                           ; BSR set to: 0
  5896  001180  0E01               	movlw	1
  5897  001182  0100               	movlb	0	; () banked
  5898  001184  6F8B               	movwf	___flmul@aexp& (0+255),b
  5899  001186                     l1059:
  5900                           
  5901                           ; BSR set to: 0
  5902  001186  0100               	movlb	0	; () banked
  5903  001188  518B               	movf	___flmul@aexp& (0+255),w,b
  5904  00118A  0100               	movlb	0	; () banked
  5905  00118C  B4D8               	btfsc	status,2,c
  5906  00118E  D023               	goto	l4606
  5907                           
  5908                           ; BSR set to: 0
  5909  001190  0E01               	movlw	1
  5910  001192  0100               	movlb	0	; () banked
  5911  001194  2791               	addwf	___flmul@prod& (0+255),f,b
  5912  001196  0E00               	movlw	0
  5913  001198  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5914  00119A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5915  00119C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5916                           
  5917                           ; BSR set to: 0
  5918  00119E  0100               	movlb	0	; () banked
  5919  0011A0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  5920  0011A2  D019               	goto	l4606
  5921                           
  5922                           ; BSR set to: 0
  5923  0011A4  C091  F086         	movff	___flmul@prod,??___flmul
  5924  0011A8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  5925  0011AC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  5926  0011B0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  5927  0011B4  0100               	movlb	0	; () banked
  5928  0011B6  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  5929  0011B8  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5930  0011BA  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5931  0011BC  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5932  0011BE  3386               	rrcf	??___flmul& (0+255),f,b
  5933  0011C0  C086  F091         	movff	??___flmul,___flmul@prod
  5934  0011C4  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  5935  0011C8  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  5936  0011CC  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  5937                           
  5938                           ; BSR set to: 0
  5939  0011D0  0100               	movlb	0	; () banked
  5940  0011D2  4B95               	infsnz	___flmul@temp& (0+255),f,b
  5941  0011D4  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  5942  0011D6                     l4606:
  5943                           
  5944                           ; BSR set to: 0
  5945  0011D6  0100               	movlb	0	; () banked
  5946  0011D8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5947  0011DA  D010               	goto	l4610
  5948  0011DC  0100               	movlb	0	; () banked
  5949  0011DE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5950  0011E0  E104               	bnz	u5210
  5951  0011E2  0100               	movlb	0	; () banked
  5952  0011E4  2995               	incf	___flmul@temp& (0+255),w,b
  5953  0011E6  A0D8               	btfss	status,0,c
  5954  0011E8  D009               	goto	l4610
  5955  0011EA                     u5210:
  5956                           
  5957                           ; BSR set to: 0
  5958  0011EA  0E00               	movlw	0
  5959  0011EC  0100               	movlb	0	; () banked
  5960  0011EE  6F91               	movwf	___flmul@prod& (0+255),b
  5961  0011F0  0E00               	movlw	0
  5962  0011F2  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5963  0011F4  0E80               	movlw	128
  5964  0011F6  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5965  0011F8  0E7F               	movlw	127
  5966  0011FA  D02B               	goto	L7
  5967  0011FC                     l4610:
  5968                           
  5969                           ; BSR set to: 0
  5970  0011FC  0100               	movlb	0	; () banked
  5971  0011FE  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5972  001200  D007               	goto	l4612
  5973  001202  0100               	movlb	0	; () banked
  5974  001204  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5975  001206  E111               	bnz	l1067
  5976  001208  0100               	movlb	0	; () banked
  5977  00120A  0595               	decf	___flmul@temp& (0+255),w,b
  5978  00120C  B0D8               	btfsc	status,0,c
  5979  00120E  D00D               	goto	l1067
  5980  001210                     l4612:
  5981                           
  5982                           ; BSR set to: 0
  5983  001210  0E00               	movlw	0
  5984  001212  0100               	movlb	0	; () banked
  5985  001214  6F91               	movwf	___flmul@prod& (0+255),b
  5986  001216  0E00               	movlw	0
  5987  001218  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5988  00121A  0E00               	movlw	0
  5989  00121C  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5990  00121E  0E00               	movlw	0
  5991  001220  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5992  001222  0E00               	movlw	0
  5993  001224  0100               	movlb	0	; () banked
  5994  001226  6F8A               	movwf	___flmul@sign& (0+255),b
  5995  001228  D015               	goto	l4622
  5996  00122A                     l1067:
  5997                           
  5998                           ; BSR set to: 0
  5999  00122A  C095  F090         	movff	___flmul@temp,___flmul@bexp
  6000                           
  6001                           ; BSR set to: 0
  6002  00122E  0EFF               	movlw	255
  6003  001230  0100               	movlb	0	; () banked
  6004  001232  1791               	andwf	___flmul@prod& (0+255),f,b
  6005  001234  0EFF               	movlw	255
  6006  001236  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  6007  001238  0E7F               	movlw	127
  6008  00123A  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  6009  00123C  0E00               	movlw	0
  6010  00123E  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  6011                           
  6012                           ; BSR set to: 0
  6013  001240  0100               	movlb	0	; () banked
  6014  001242  A190               	btfss	___flmul@bexp& (0+255),0,b
  6015  001244  D002               	goto	l4620
  6016                           
  6017                           ; BSR set to: 0
  6018  001246  0100               	movlb	0	; () banked
  6019  001248  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  6020  00124A                     l4620:
  6021                           
  6022                           ; BSR set to: 0
  6023  00124A  0100               	movlb	0	; () banked
  6024  00124C  90D8               	bcf	status,0,c
  6025  00124E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6026  001250  0100               	movlb	0	; () banked
  6027  001252                     L7:
  6028  001252  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6029  001254                     l4622:
  6030                           
  6031                           ; BSR set to: 0
  6032  001254  0100               	movlb	0	; () banked
  6033  001256  518A               	movf	___flmul@sign& (0+255),w,b
  6034  001258  0100               	movlb	0	; () banked
  6035  00125A  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  00125C  C091  F07E         	movff	___flmul@prod,?___flmul
  6039  001260  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6040  001264  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6041  001268  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6042  00126C  0012               	return	
  6043  00126E                     __end_of___flmul:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           indf2	equ	0xFDF
  6055                           postinc2	equ	0xFDE
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function ___awmod *****************
  6061 ;; Defined at:
  6062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  dividend        2   24[COMRAM] int 
  6065 ;;  divisor         2   26[COMRAM] int 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  sign            1   29[COMRAM] unsigned char 
  6068 ;;  counter         1   28[COMRAM] unsigned char 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  2   24[COMRAM] int 
  6071 ;; Registers used:
  6072 ;;		wreg, status,2, status,0
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6078 ;;      Params:         4       0       0       0
  6079 ;;      Locals:         2       0       0       0
  6080 ;;      Temps:          0       0       0       0
  6081 ;;      Totals:         6       0       0       0
  6082 ;;Total ram usage:        6 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    4
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_fround
  6089 ;;		_scale
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text17
  6094  002C12                     __ptext17:
  6095                           	opt stack 0
  6096  002C12                     ___awmod:
  6097                           	opt stack 23
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;incstack = 0
  6101  002C12  0E00               	movlw	0
  6102  002C14  6E41               	movwf	___awmod@sign,c
  6103  002C16  AE3D               	btfss	___awmod@dividend+1,7,c
  6104  002C18  D006               	goto	l4680
  6105  002C1A  6C3C               	negf	___awmod@dividend,c
  6106  002C1C  1E3D               	comf	___awmod@dividend+1,f,c
  6107  002C1E  B0D8               	btfsc	status,0,c
  6108  002C20  2A3D               	incf	___awmod@dividend+1,f,c
  6109  002C22  0E01               	movlw	1
  6110  002C24  6E41               	movwf	___awmod@sign,c
  6111  002C26                     l4680:
  6112  002C26  AE3F               	btfss	___awmod@divisor+1,7,c
  6113  002C28  D004               	goto	l4684
  6114  002C2A  6C3E               	negf	___awmod@divisor,c
  6115  002C2C  1E3F               	comf	___awmod@divisor+1,f,c
  6116  002C2E  B0D8               	btfsc	status,0,c
  6117  002C30  2A3F               	incf	___awmod@divisor+1,f,c
  6118  002C32                     l4684:
  6119  002C32  503E               	movf	___awmod@divisor,w,c
  6120  002C34  103F               	iorwf	___awmod@divisor+1,w,c
  6121  002C36  B4D8               	btfsc	status,2,c
  6122  002C38  D018               	goto	l4700
  6123  002C3A  0E01               	movlw	1
  6124  002C3C  6E40               	movwf	___awmod@counter,c
  6125  002C3E  D004               	goto	l4690
  6126  002C40                     l4688:
  6127  002C40  90D8               	bcf	status,0,c
  6128  002C42  363E               	rlcf	___awmod@divisor,f,c
  6129  002C44  363F               	rlcf	___awmod@divisor+1,f,c
  6130  002C46  2A40               	incf	___awmod@counter,f,c
  6131  002C48                     l4690:
  6132  002C48  AE3F               	btfss	___awmod@divisor+1,7,c
  6133  002C4A  D7FA               	goto	l4688
  6134  002C4C                     l4692:
  6135  002C4C  503E               	movf	___awmod@divisor,w,c
  6136  002C4E  5C3C               	subwf	___awmod@dividend,w,c
  6137  002C50  503F               	movf	___awmod@divisor+1,w,c
  6138  002C52  583D               	subwfb	___awmod@dividend+1,w,c
  6139  002C54  A0D8               	btfss	status,0,c
  6140  002C56  D004               	goto	l4696
  6141  002C58  503E               	movf	___awmod@divisor,w,c
  6142  002C5A  5E3C               	subwf	___awmod@dividend,f,c
  6143  002C5C  503F               	movf	___awmod@divisor+1,w,c
  6144  002C5E  5A3D               	subwfb	___awmod@dividend+1,f,c
  6145  002C60                     l4696:
  6146  002C60  90D8               	bcf	status,0,c
  6147  002C62  323F               	rrcf	___awmod@divisor+1,f,c
  6148  002C64  323E               	rrcf	___awmod@divisor,f,c
  6149  002C66  2E40               	decfsz	___awmod@counter,f,c
  6150  002C68  D7F1               	goto	l4692
  6151  002C6A                     l4700:
  6152  002C6A  5041               	movf	___awmod@sign,w,c
  6153  002C6C  B4D8               	btfsc	status,2,c
  6154  002C6E  D004               	goto	l4704
  6155  002C70  6C3C               	negf	___awmod@dividend,c
  6156  002C72  1E3D               	comf	___awmod@dividend+1,f,c
  6157  002C74  B0D8               	btfsc	status,0,c
  6158  002C76  2A3D               	incf	___awmod@dividend+1,f,c
  6159  002C78                     l4704:
  6160  002C78  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6161  002C7C  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6162  002C80  0012               	return	
  6163  002C82                     __end_of___awmod:
  6164                           	opt stack 0
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           postinc0	equ	0xFEE
  6173                           wreg	equ	0xFE8
  6174                           indf2	equ	0xFDF
  6175                           postinc2	equ	0xFDE
  6176                           fsr2h	equ	0xFDA
  6177                           fsr2l	equ	0xFD9
  6178                           status	equ	0xFD8
  6179                           
  6180 ;; *************** function ___awdiv *****************
  6181 ;; Defined at:
  6182 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  dividend        2   16[BANK0 ] int 
  6185 ;;  divisor         2   18[BANK0 ] int 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  quotient        2   22[BANK0 ] int 
  6188 ;;  sign            1   21[BANK0 ] unsigned char 
  6189 ;;  counter         1   20[BANK0 ] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  2   16[BANK0 ] int 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6199 ;;      Params:         0       4       0       0
  6200 ;;      Locals:         0       4       0       0
  6201 ;;      Temps:          0       0       0       0
  6202 ;;      Totals:         0       8       0       0
  6203 ;;Total ram usage:        8 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    4
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_fround
  6210 ;;		_scale
  6211 ;;		_sprintf
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text18
  6216  00297A                     __ptext18:
  6217                           	opt stack 0
  6218  00297A                     ___awdiv:
  6219                           	opt stack 23
  6220                           
  6221                           ;incstack = 0
  6222  00297A  0E00               	movlw	0
  6223  00297C  0100               	movlb	0	; () banked
  6224  00297E  6F75               	movwf	___awdiv@sign& (0+255),b
  6225                           
  6226                           ; BSR set to: 0
  6227  002980  0100               	movlb	0	; () banked
  6228  002982  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6229  002984  D008               	goto	l4636
  6230                           
  6231                           ; BSR set to: 0
  6232  002986  0100               	movlb	0	; () banked
  6233  002988  6D72               	negf	___awdiv@divisor& (0+255),b
  6234  00298A  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6235  00298C  B0D8               	btfsc	status,0,c
  6236  00298E  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  002990  0E01               	movlw	1
  6240  002992  0100               	movlb	0	; () banked
  6241  002994  6F75               	movwf	___awdiv@sign& (0+255),b
  6242  002996                     l4636:
  6243                           
  6244                           ; BSR set to: 0
  6245  002996  0100               	movlb	0	; () banked
  6246  002998  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6247  00299A  D008               	goto	l4642
  6248                           
  6249                           ; BSR set to: 0
  6250  00299C  0100               	movlb	0	; () banked
  6251  00299E  6D70               	negf	___awdiv@dividend& (0+255),b
  6252  0029A0  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6253  0029A2  B0D8               	btfsc	status,0,c
  6254  0029A4  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6255                           
  6256                           ; BSR set to: 0
  6257  0029A6  0E01               	movlw	1
  6258  0029A8  0100               	movlb	0	; () banked
  6259  0029AA  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6260  0029AC                     l4642:
  6261                           
  6262                           ; BSR set to: 0
  6263  0029AC  0E00               	movlw	0
  6264  0029AE  0100               	movlb	0	; () banked
  6265  0029B0  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6266  0029B2  0E00               	movlw	0
  6267  0029B4  6F76               	movwf	___awdiv@quotient& (0+255),b
  6268                           
  6269                           ; BSR set to: 0
  6270  0029B6  0100               	movlb	0	; () banked
  6271  0029B8  5172               	movf	___awdiv@divisor& (0+255),w,b
  6272  0029BA  0100               	movlb	0	; () banked
  6273  0029BC  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6274  0029BE  B4D8               	btfsc	status,2,c
  6275  0029C0  D02C               	goto	l4664
  6276                           
  6277                           ; BSR set to: 0
  6278  0029C2  0E01               	movlw	1
  6279  0029C4  0100               	movlb	0	; () banked
  6280  0029C6  6F74               	movwf	___awdiv@counter& (0+255),b
  6281  0029C8  D006               	goto	l4650
  6282  0029CA                     l4648:
  6283                           
  6284                           ; BSR set to: 0
  6285  0029CA  0100               	movlb	0	; () banked
  6286  0029CC  90D8               	bcf	status,0,c
  6287  0029CE  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6288  0029D0  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6289  0029D2  0100               	movlb	0	; () banked
  6290  0029D4  2B74               	incf	___awdiv@counter& (0+255),f,b
  6291  0029D6                     l4650:
  6292                           
  6293                           ; BSR set to: 0
  6294  0029D6  0100               	movlb	0	; () banked
  6295  0029D8  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6296  0029DA  D7F7               	goto	l4648
  6297  0029DC                     l4652:
  6298                           
  6299                           ; BSR set to: 0
  6300  0029DC  0100               	movlb	0	; () banked
  6301  0029DE  90D8               	bcf	status,0,c
  6302  0029E0  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6303  0029E2  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6304                           
  6305                           ; BSR set to: 0
  6306  0029E4  0100               	movlb	0	; () banked
  6307  0029E6  5172               	movf	___awdiv@divisor& (0+255),w,b
  6308  0029E8  0100               	movlb	0	; () banked
  6309  0029EA  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6310  0029EC  0100               	movlb	0	; () banked
  6311  0029EE  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6312  0029F0  0100               	movlb	0	; () banked
  6313  0029F2  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6314  0029F4  A0D8               	btfss	status,0,c
  6315  0029F6  D00A               	goto	l4660
  6316                           
  6317                           ; BSR set to: 0
  6318  0029F8  0100               	movlb	0	; () banked
  6319  0029FA  5172               	movf	___awdiv@divisor& (0+255),w,b
  6320  0029FC  0100               	movlb	0	; () banked
  6321  0029FE  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6322  002A00  0100               	movlb	0	; () banked
  6323  002A02  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6324  002A04  0100               	movlb	0	; () banked
  6325  002A06  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328  002A08  0100               	movlb	0	; () banked
  6329  002A0A  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6330  002A0C                     l4660:
  6331                           
  6332                           ; BSR set to: 0
  6333  002A0C  0100               	movlb	0	; () banked
  6334  002A0E  90D8               	bcf	status,0,c
  6335  002A10  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6336  002A12  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6337                           
  6338                           ; BSR set to: 0
  6339  002A14  0100               	movlb	0	; () banked
  6340  002A16  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6341  002A18  D7E1               	goto	l4652
  6342  002A1A                     l4664:
  6343                           
  6344                           ; BSR set to: 0
  6345  002A1A  0100               	movlb	0	; () banked
  6346  002A1C  5175               	movf	___awdiv@sign& (0+255),w,b
  6347  002A1E  0100               	movlb	0	; () banked
  6348  002A20  B4D8               	btfsc	status,2,c
  6349  002A22  D005               	goto	l4668
  6350                           
  6351                           ; BSR set to: 0
  6352  002A24  0100               	movlb	0	; () banked
  6353  002A26  6D76               	negf	___awdiv@quotient& (0+255),b
  6354  002A28  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6355  002A2A  B0D8               	btfsc	status,0,c
  6356  002A2C  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6357  002A2E                     l4668:
  6358                           
  6359                           ; BSR set to: 0
  6360  002A2E  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6361  002A32  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6362  002A36  0012               	return	
  6363  002A38                     __end_of___awdiv:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           indf2	equ	0xFDF
  6375                           postinc2	equ	0xFDE
  6376                           fsr2h	equ	0xFDA
  6377                           fsr2l	equ	0xFD9
  6378                           status	equ	0xFD8
  6379                           
  6380 ;; *************** function __tdiv_to_l_ *****************
  6381 ;; Defined at:
  6382 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  f1              4   16[BANK0 ] float 
  6385 ;;  f2              4   20[BANK0 ] float 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  quot            4   24[BANK0 ] unsigned long 
  6388 ;;  exp1            1   29[BANK0 ] unsigned char 
  6389 ;;  cntr            1   28[BANK0 ] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4   16[BANK0 ] unsigned long 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6399 ;;      Params:         0       8       0       0
  6400 ;;      Locals:         0       6       0       0
  6401 ;;      Temps:          3       0       0       0
  6402 ;;      Totals:         3      14       0       0
  6403 ;;Total ram usage:       17 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    4
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_sprintf
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text19
  6414  001F06                     __ptext19:
  6415                           	opt stack 0
  6416  001F06                     __tdiv_to_l_:
  6417                           	opt stack 24
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;incstack = 0
  6421  001F06  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6422  001F0A  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6423  001F0C  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6424  001F0E  0100               	movlb	0	; () banked
  6425  001F10  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6426  001F12  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6427  001F14  E301               	bnc	u5451
  6428  001F16  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6429  001F18                     u5451:
  6430  001F18  503C               	movf	??__tdiv_to_l_,w,c
  6431  001F1A  0100               	movlb	0	; () banked
  6432  001F1C  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6433  001F1E  0100               	movlb	0	; () banked
  6434  001F20  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6435  001F22  A4D8               	btfss	status,2,c
  6436  001F24  D00A               	goto	l4808
  6437                           
  6438                           ; BSR set to: 0
  6439  001F26  0E00               	movlw	0
  6440  001F28  0100               	movlb	0	; () banked
  6441  001F2A  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6442  001F2C  0E00               	movlw	0
  6443  001F2E  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6444  001F30  0E00               	movlw	0
  6445  001F32  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6446  001F34  0E00               	movlw	0
  6447  001F36  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6448                           
  6449                           ; BSR set to: 0
  6450  001F38  0012               	return	
  6451  001F3A                     l4808:
  6452                           
  6453                           ; BSR set to: 0
  6454  001F3A  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6455  001F3E  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6456  001F40  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6457  001F42  0100               	movlb	0	; () banked
  6458  001F44  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6459  001F46  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6460  001F48  E301               	bnc	u5471
  6461  001F4A  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6462  001F4C                     u5471:
  6463  001F4C  503C               	movf	??__tdiv_to_l_,w,c
  6464  001F4E  0100               	movlb	0	; () banked
  6465  001F50  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6466  001F52  0100               	movlb	0	; () banked
  6467  001F54  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6468  001F56  A4D8               	btfss	status,2,c
  6469  001F58  D00A               	goto	l4814
  6470                           
  6471                           ; BSR set to: 0
  6472  001F5A  0E00               	movlw	0
  6473  001F5C  0100               	movlb	0	; () banked
  6474  001F5E  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6475  001F60  0E00               	movlw	0
  6476  001F62  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6477  001F64  0E00               	movlw	0
  6478  001F66  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6479  001F68  0E00               	movlw	0
  6480  001F6A  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6481                           
  6482                           ; BSR set to: 0
  6483  001F6C  0012               	return	
  6484  001F6E                     l4814:
  6485                           
  6486                           ; BSR set to: 0
  6487  001F6E  0100               	movlb	0	; () banked
  6488  001F70  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6489                           
  6490                           ; BSR set to: 0
  6491  001F72  0EFF               	movlw	255
  6492  001F74  0100               	movlb	0	; () banked
  6493  001F76  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6494  001F78  0EFF               	movlw	255
  6495  001F7A  0100               	movlb	0	; () banked
  6496  001F7C  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6497  001F7E  0E00               	movlw	0
  6498  001F80  0100               	movlb	0	; () banked
  6499  001F82  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6500  001F84  0100               	movlb	0	; () banked
  6501  001F86  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6502                           
  6503                           ; BSR set to: 0
  6504  001F88  0EFF               	movlw	255
  6505  001F8A  0100               	movlb	0	; () banked
  6506  001F8C  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6507  001F8E  0EFF               	movlw	255
  6508  001F90  0100               	movlb	0	; () banked
  6509  001F92  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6510  001F94  0E00               	movlw	0
  6511  001F96  0100               	movlb	0	; () banked
  6512  001F98  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6513                           
  6514                           ; BSR set to: 0
  6515  001F9A  0E00               	movlw	0
  6516  001F9C  0100               	movlb	0	; () banked
  6517  001F9E  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6518  001FA0  0E00               	movlw	0
  6519  001FA2  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6520  001FA4  0E00               	movlw	0
  6521  001FA6  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6522  001FA8  0E00               	movlw	0
  6523  001FAA  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526  001FAC  0E7F               	movlw	127
  6527  001FAE  0100               	movlb	0	; () banked
  6528  001FB0  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6529                           
  6530                           ; BSR set to: 0
  6531  001FB2  0100               	movlb	0	; () banked
  6532  001FB4  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6533  001FB6  0F98               	addlw	152
  6534  001FB8  0100               	movlb	0	; () banked
  6535  001FBA  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6536                           
  6537                           ; BSR set to: 0
  6538  001FBC  0E18               	movlw	24
  6539  001FBE  0100               	movlb	0	; () banked
  6540  001FC0  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6541  001FC2                     l774:
  6542                           
  6543                           ; BSR set to: 0
  6544  001FC2  0100               	movlb	0	; () banked
  6545  001FC4  90D8               	bcf	status,0,c
  6546  001FC6  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6547  001FC8  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6548  001FCA  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6549  001FCC  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6550                           
  6551                           ; BSR set to: 0
  6552  001FCE  0100               	movlb	0	; () banked
  6553  001FD0  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6554  001FD2  0100               	movlb	0	; () banked
  6555  001FD4  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6556  001FD6  0100               	movlb	0	; () banked
  6557  001FD8  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6558  001FDA  0100               	movlb	0	; () banked
  6559  001FDC  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6560  001FDE  0100               	movlb	0	; () banked
  6561  001FE0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6562  001FE2  0100               	movlb	0	; () banked
  6563  001FE4  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6564  001FE6  A0D8               	btfss	status,0,c
  6565  001FE8  D00E               	goto	l775
  6566                           
  6567                           ; BSR set to: 0
  6568  001FEA  0100               	movlb	0	; () banked
  6569  001FEC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6570  001FEE  0100               	movlb	0	; () banked
  6571  001FF0  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6572  001FF2  0100               	movlb	0	; () banked
  6573  001FF4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6574  001FF6  0100               	movlb	0	; () banked
  6575  001FF8  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6576  001FFA  0100               	movlb	0	; () banked
  6577  001FFC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6578  001FFE  0100               	movlb	0	; () banked
  6579  002000  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6580                           
  6581                           ; BSR set to: 0
  6582  002002  0100               	movlb	0	; () banked
  6583  002004  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6584  002006                     l775:
  6585                           
  6586                           ; BSR set to: 0
  6587  002006  0100               	movlb	0	; () banked
  6588  002008  90D8               	bcf	status,0,c
  6589  00200A  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6590  00200C  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6591  00200E  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6592                           
  6593                           ; BSR set to: 0
  6594  002010  0100               	movlb	0	; () banked
  6595  002012  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6596  002014  D7D6               	goto	l774
  6597                           
  6598                           ; BSR set to: 0
  6599                           
  6600                           ; BSR set to: 0
  6601  002016  0100               	movlb	0	; () banked
  6602  002018  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6603  00201A  D01A               	goto	l4848
  6604                           
  6605                           ; BSR set to: 0
  6606  00201C  0100               	movlb	0	; () banked
  6607  00201E  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6608  002020  0A80               	xorlw	128
  6609  002022  0F97               	addlw	151
  6610  002024  B0D8               	btfsc	status,0,c
  6611  002026  D00A               	goto	l4844
  6612                           
  6613                           ; BSR set to: 0
  6614  002028  0E00               	movlw	0
  6615  00202A  0100               	movlb	0	; () banked
  6616  00202C  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6617  00202E  0E00               	movlw	0
  6618  002030  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6619  002032  0E00               	movlw	0
  6620  002034  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6621  002036  0E00               	movlw	0
  6622  002038  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6623                           
  6624                           ; BSR set to: 0
  6625  00203A  0012               	return	
  6626  00203C                     l4844:
  6627                           
  6628                           ; BSR set to: 0
  6629  00203C  0100               	movlb	0	; () banked
  6630  00203E  90D8               	bcf	status,0,c
  6631  002040  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6632  002042  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6633  002044  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6634  002046  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6635                           
  6636                           ; BSR set to: 0
  6637  002048  0100               	movlb	0	; () banked
  6638  00204A  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6639  00204C  D7F7               	goto	l4844
  6640                           
  6641                           ; BSR set to: 0
  6642  00204E  D01B               	goto	l781
  6643  002050                     l4848:
  6644                           
  6645                           ; BSR set to: 0
  6646  002050  0E17               	movlw	23
  6647  002052  0100               	movlb	0	; () banked
  6648  002054  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6649  002056  D012               	goto	l4856
  6650                           
  6651                           ; BSR set to: 0
  6652  002058  0E00               	movlw	0
  6653  00205A  0100               	movlb	0	; () banked
  6654  00205C  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6655  00205E  0E00               	movlw	0
  6656  002060  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6657  002062  0E00               	movlw	0
  6658  002064  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6659  002066  0E00               	movlw	0
  6660  002068  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6661                           
  6662                           ; BSR set to: 0
  6663  00206A  0012               	return	
  6664  00206C                     l4854:
  6665                           
  6666                           ; BSR set to: 0
  6667  00206C  0100               	movlb	0	; () banked
  6668  00206E  90D8               	bcf	status,0,c
  6669  002070  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6670  002072  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6671  002074  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6672  002076  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6673  002078  0100               	movlb	0	; () banked
  6674  00207A  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6675  00207C                     l4856:
  6676                           
  6677                           ; BSR set to: 0
  6678  00207C  0100               	movlb	0	; () banked
  6679  00207E  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6680  002080  0100               	movlb	0	; () banked
  6681  002082  A4D8               	btfss	status,2,c
  6682  002084  D7F3               	goto	l4854
  6683  002086                     l781:
  6684                           
  6685                           ; BSR set to: 0
  6686  002086  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6687  00208A  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6688  00208E  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6689  002092  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6690                           
  6691                           ; BSR set to: 0
  6692  002096  0012               	return		;funcret
  6693  002098                     __end_of__tdiv_to_l_:
  6694                           	opt stack 0
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           intcon	equ	0xFF2
  6702                           postinc0	equ	0xFEE
  6703                           wreg	equ	0xFE8
  6704                           indf2	equ	0xFDF
  6705                           postinc2	equ	0xFDE
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function __div_to_l_ *****************
  6711 ;; Defined at:
  6712 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  f1              4   16[BANK0 ] unsigned long 
  6715 ;;  f2              4   20[BANK0 ] unsigned long 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  quot            4   24[COMRAM] unsigned long 
  6718 ;;  exp1            1   29[COMRAM] unsigned char 
  6719 ;;  cntr            1   28[COMRAM] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  4   16[BANK0 ] unsigned long 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6729 ;;      Params:         0       8       0       0
  6730 ;;      Locals:         6       0       0       0
  6731 ;;      Temps:          0       0       0       0
  6732 ;;      Totals:         6       8       0       0
  6733 ;;Total ram usage:       14 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    4
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_sprintf
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text20
  6744  002206                     __ptext20:
  6745                           	opt stack 0
  6746  002206                     __div_to_l_:
  6747                           	opt stack 24
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;incstack = 0
  6751  002206  0100               	movlb	0	; () banked
  6752  002208  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6753  00220A  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6754  00220C  6E41               	movwf	__div_to_l_@exp1,c
  6755  00220E  5041               	movf	__div_to_l_@exp1,w,c
  6756  002210  A4D8               	btfss	status,2,c
  6757  002212  D00A               	goto	l4864
  6758                           
  6759                           ; BSR set to: 0
  6760  002214  0E00               	movlw	0
  6761  002216  0100               	movlb	0	; () banked
  6762  002218  6F70               	movwf	?__div_to_l_& (0+255),b
  6763  00221A  0E00               	movlw	0
  6764  00221C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6765  00221E  0E00               	movlw	0
  6766  002220  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6767  002222  0E00               	movlw	0
  6768  002224  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6769                           
  6770                           ; BSR set to: 0
  6771  002226  0012               	return	
  6772  002228                     l4864:
  6773                           
  6774                           ; BSR set to: 0
  6775  002228  0100               	movlb	0	; () banked
  6776  00222A  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6777  00222C  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6778  00222E  6E40               	movwf	__div_to_l_@cntr,c
  6779  002230  5040               	movf	__div_to_l_@cntr,w,c
  6780  002232  A4D8               	btfss	status,2,c
  6781  002234  D00A               	goto	l4870
  6782                           
  6783                           ; BSR set to: 0
  6784  002236  0E00               	movlw	0
  6785  002238  0100               	movlb	0	; () banked
  6786  00223A  6F70               	movwf	?__div_to_l_& (0+255),b
  6787  00223C  0E00               	movlw	0
  6788  00223E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6789  002240  0E00               	movlw	0
  6790  002242  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6791  002244  0E00               	movlw	0
  6792  002246  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6793                           
  6794                           ; BSR set to: 0
  6795  002248  0012               	return	
  6796  00224A                     l4870:
  6797                           
  6798                           ; BSR set to: 0
  6799  00224A  0100               	movlb	0	; () banked
  6800  00224C  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6801                           
  6802                           ; BSR set to: 0
  6803  00224E  0EFF               	movlw	255
  6804  002250  0100               	movlb	0	; () banked
  6805  002252  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6806  002254  0EFF               	movlw	255
  6807  002256  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6808  002258  0EFF               	movlw	255
  6809  00225A  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6810  00225C  0E00               	movlw	0
  6811  00225E  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6812                           
  6813                           ; BSR set to: 0
  6814  002260  0100               	movlb	0	; () banked
  6815  002262  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6816  002264  0EFF               	movlw	255
  6817  002266  0100               	movlb	0	; () banked
  6818  002268  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6819  00226A  0EFF               	movlw	255
  6820  00226C  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6821  00226E  0EFF               	movlw	255
  6822  002270  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6823  002272  0E00               	movlw	0
  6824  002274  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6825                           
  6826                           ; BSR set to: 0
  6827  002276  0E00               	movlw	0
  6828  002278  6E3C               	movwf	__div_to_l_@quot,c
  6829  00227A  0E00               	movlw	0
  6830  00227C  6E3D               	movwf	__div_to_l_@quot+1,c
  6831  00227E  0E00               	movlw	0
  6832  002280  6E3E               	movwf	__div_to_l_@quot+2,c
  6833  002282  0E00               	movlw	0
  6834  002284  6E3F               	movwf	__div_to_l_@quot+3,c
  6835                           
  6836                           ; BSR set to: 0
  6837  002286  0E7F               	movlw	127
  6838  002288  5E41               	subwf	__div_to_l_@exp1,f,c
  6839                           
  6840                           ; BSR set to: 0
  6841  00228A  5040               	movf	__div_to_l_@cntr,w,c
  6842  00228C  0FA0               	addlw	160
  6843  00228E  5E41               	subwf	__div_to_l_@exp1,f,c
  6844                           
  6845                           ; BSR set to: 0
  6846  002290  0E20               	movlw	32
  6847  002292  6E40               	movwf	__div_to_l_@cntr,c
  6848  002294                     l4884:
  6849                           
  6850                           ; BSR set to: 0
  6851  002294  90D8               	bcf	status,0,c
  6852  002296  363C               	rlcf	__div_to_l_@quot,f,c
  6853  002298  363D               	rlcf	__div_to_l_@quot+1,f,c
  6854  00229A  363E               	rlcf	__div_to_l_@quot+2,f,c
  6855  00229C  363F               	rlcf	__div_to_l_@quot+3,f,c
  6856                           
  6857                           ; BSR set to: 0
  6858  00229E  0100               	movlb	0	; () banked
  6859  0022A0  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6860  0022A2  0100               	movlb	0	; () banked
  6861  0022A4  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6862  0022A6  0100               	movlb	0	; () banked
  6863  0022A8  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6864  0022AA  0100               	movlb	0	; () banked
  6865  0022AC  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6866  0022AE  0100               	movlb	0	; () banked
  6867  0022B0  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6868  0022B2  0100               	movlb	0	; () banked
  6869  0022B4  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6870  0022B6  0100               	movlb	0	; () banked
  6871  0022B8  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6872  0022BA  0100               	movlb	0	; () banked
  6873  0022BC  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6874  0022BE  A0D8               	btfss	status,0,c
  6875  0022C0  D011               	goto	l4892
  6876                           
  6877                           ; BSR set to: 0
  6878  0022C2  0100               	movlb	0	; () banked
  6879  0022C4  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6880  0022C6  0100               	movlb	0	; () banked
  6881  0022C8  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6882  0022CA  0100               	movlb	0	; () banked
  6883  0022CC  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6884  0022CE  0100               	movlb	0	; () banked
  6885  0022D0  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6886  0022D2  0100               	movlb	0	; () banked
  6887  0022D4  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6888  0022D6  0100               	movlb	0	; () banked
  6889  0022D8  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6890  0022DA  0100               	movlb	0	; () banked
  6891  0022DC  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6892  0022DE  0100               	movlb	0	; () banked
  6893  0022E0  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6894                           
  6895                           ; BSR set to: 0
  6896  0022E2  803C               	bsf	__div_to_l_@quot,0,c
  6897  0022E4                     l4892:
  6898                           
  6899                           ; BSR set to: 0
  6900  0022E4  0100               	movlb	0	; () banked
  6901  0022E6  90D8               	bcf	status,0,c
  6902  0022E8  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6903  0022EA  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6904  0022EC  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6905  0022EE  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6906                           
  6907                           ; BSR set to: 0
  6908  0022F0  2E40               	decfsz	__div_to_l_@cntr,f,c
  6909  0022F2  D7D0               	goto	l4884
  6910                           
  6911                           ; BSR set to: 0
  6912                           
  6913                           ; BSR set to: 0
  6914  0022F4  AE41               	btfss	__div_to_l_@exp1,7,c
  6915  0022F6  D017               	goto	l4908
  6916                           
  6917                           ; BSR set to: 0
  6918  0022F8  5041               	movf	__div_to_l_@exp1,w,c
  6919  0022FA  0A80               	xorlw	128
  6920  0022FC  0F9F               	addlw	159
  6921  0022FE  B0D8               	btfsc	status,0,c
  6922  002300  D00A               	goto	l4904
  6923                           
  6924                           ; BSR set to: 0
  6925  002302  0E00               	movlw	0
  6926  002304  0100               	movlb	0	; () banked
  6927  002306  6F70               	movwf	?__div_to_l_& (0+255),b
  6928  002308  0E00               	movlw	0
  6929  00230A  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6930  00230C  0E00               	movlw	0
  6931  00230E  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6932  002310  0E00               	movlw	0
  6933  002312  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936  002314  0012               	return	
  6937  002316                     l4904:
  6938  002316  90D8               	bcf	status,0,c
  6939  002318  323F               	rrcf	__div_to_l_@quot+3,f,c
  6940  00231A  323E               	rrcf	__div_to_l_@quot+2,f,c
  6941  00231C  323D               	rrcf	__div_to_l_@quot+1,f,c
  6942  00231E  323C               	rrcf	__div_to_l_@quot,f,c
  6943  002320  3E41               	incfsz	__div_to_l_@exp1,f,c
  6944  002322  D7F9               	goto	l4904
  6945  002324  D016               	goto	l677
  6946  002326                     l4908:
  6947  002326  0E1F               	movlw	31
  6948  002328  6441               	cpfsgt	__div_to_l_@exp1,c
  6949  00232A  D010               	goto	l4916
  6950  00232C  0E00               	movlw	0
  6951  00232E  0100               	movlb	0	; () banked
  6952  002330  6F70               	movwf	?__div_to_l_& (0+255),b
  6953  002332  0E00               	movlw	0
  6954  002334  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6955  002336  0E00               	movlw	0
  6956  002338  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6957  00233A  0E00               	movlw	0
  6958  00233C  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6959                           
  6960                           ; BSR set to: 0
  6961  00233E  0012               	return	
  6962  002340                     l4914:
  6963  002340  90D8               	bcf	status,0,c
  6964  002342  363C               	rlcf	__div_to_l_@quot,f,c
  6965  002344  363D               	rlcf	__div_to_l_@quot+1,f,c
  6966  002346  363E               	rlcf	__div_to_l_@quot+2,f,c
  6967  002348  363F               	rlcf	__div_to_l_@quot+3,f,c
  6968  00234A  0641               	decf	__div_to_l_@exp1,f,c
  6969  00234C                     l4916:
  6970  00234C  5041               	movf	__div_to_l_@exp1,w,c
  6971  00234E  A4D8               	btfss	status,2,c
  6972  002350  D7F7               	goto	l4914
  6973  002352                     l677:
  6974  002352  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  6975  002356  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6976  00235A  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6977  00235E  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6978  002362  0012               	return		;funcret
  6979  002364                     __end_of__div_to_l_:
  6980                           	opt stack 0
  6981                           tblptru	equ	0xFF8
  6982                           tblptrh	equ	0xFF7
  6983                           tblptrl	equ	0xFF6
  6984                           tablat	equ	0xFF5
  6985                           prodh	equ	0xFF4
  6986                           prodl	equ	0xFF3
  6987                           intcon	equ	0xFF2
  6988                           postinc0	equ	0xFEE
  6989                           wreg	equ	0xFE8
  6990                           indf2	equ	0xFDF
  6991                           postinc2	equ	0xFDE
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           
  6996 ;; *************** function ___xxtofl *****************
  6997 ;; Defined at:
  6998 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  sign            1    wreg     unsigned char 
  7001 ;;  val             4   16[BANK0 ] long 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  sign            1   24[BANK0 ] unsigned char 
  7004 ;;  arg             4   26[BANK0 ] unsigned long 
  7005 ;;  exp             1   25[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  4   16[BANK0 ] unsigned char 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7015 ;;      Params:         0       4       0       0
  7016 ;;      Locals:         0       6       0       0
  7017 ;;      Temps:          0       4       0       0
  7018 ;;      Totals:         0      14       0       0
  7019 ;;Total ram usage:       14 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    4
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;;		_LCD_Handler
  7027 ;;		_sprintf
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text21
  7032  001D38                     __ptext21:
  7033                           	opt stack 0
  7034  001D38                     ___xxtofl:
  7035                           	opt stack 26
  7036                           
  7037                           ;incstack = 0
  7038                           ;___xxtofl@sign stored from wreg
  7039  001D38  0100               	movlb	0	; () banked
  7040  001D3A  6F78               	movwf	___xxtofl@sign& (0+255),b
  7041  001D3C  0100               	movlb	0	; () banked
  7042  001D3E  5178               	movf	___xxtofl@sign& (0+255),w,b
  7043  001D40  0100               	movlb	0	; () banked
  7044  001D42  B4D8               	btfsc	status,2,c
  7045  001D44  D01E               	goto	l1072
  7046                           
  7047                           ; BSR set to: 0
  7048  001D46  0100               	movlb	0	; () banked
  7049  001D48  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7050  001D4A  D01B               	goto	l1072
  7051                           
  7052                           ; BSR set to: 0
  7053  001D4C  C070  F074         	movff	___xxtofl@val,??___xxtofl
  7054  001D50  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  7055  001D54  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  7056  001D58  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  7057  001D5C  0100               	movlb	0	; () banked
  7058  001D5E  1F74               	comf	??___xxtofl& (0+255),f,b
  7059  001D60  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  7060  001D62  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  7061  001D64  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  7062  001D66  2B74               	incf	??___xxtofl& (0+255),f,b
  7063  001D68  0E00               	movlw	0
  7064  001D6A  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7065  001D6C  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7066  001D6E  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7067  001D70  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  7068  001D74  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7069  001D78  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7070  001D7C  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7071  001D80  D008               	goto	l5042
  7072  001D82                     l1072:
  7073                           
  7074                           ; BSR set to: 0
  7075  001D82  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  7076  001D86  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7077  001D8A  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7078  001D8E  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7079  001D92                     l5042:
  7080                           
  7081                           ; BSR set to: 0
  7082  001D92  0100               	movlb	0	; () banked
  7083  001D94  5170               	movf	___xxtofl@val& (0+255),w,b
  7084  001D96  0100               	movlb	0	; () banked
  7085  001D98  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7086  001D9A  0100               	movlb	0	; () banked
  7087  001D9C  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7088  001D9E  0100               	movlb	0	; () banked
  7089  001DA0  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7090  001DA2  A4D8               	btfss	status,2,c
  7091  001DA4  D00A               	goto	l5048
  7092                           
  7093                           ; BSR set to: 0
  7094  001DA6  0E00               	movlw	0
  7095  001DA8  0100               	movlb	0	; () banked
  7096  001DAA  6F70               	movwf	?___xxtofl& (0+255),b
  7097  001DAC  0E00               	movlw	0
  7098  001DAE  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  7099  001DB0  0E00               	movlw	0
  7100  001DB2  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  7101  001DB4  0E00               	movlw	0
  7102  001DB6  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  7103                           
  7104                           ; BSR set to: 0
  7105  001DB8  0012               	return	
  7106  001DBA                     l5048:
  7107                           
  7108                           ; BSR set to: 0
  7109  001DBA  0E96               	movlw	150
  7110  001DBC  0100               	movlb	0	; () banked
  7111  001DBE  6F79               	movwf	___xxtofl@exp& (0+255),b
  7112  001DC0  D008               	goto	l5052
  7113  001DC2                     l5050:
  7114                           
  7115                           ; BSR set to: 0
  7116  001DC2  0100               	movlb	0	; () banked
  7117  001DC4  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7118  001DC6  0100               	movlb	0	; () banked
  7119  001DC8  90D8               	bcf	status,0,c
  7120  001DCA  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7121  001DCC  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7122  001DCE  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7123  001DD0  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7124  001DD2                     l5052:
  7125                           
  7126                           ; BSR set to: 0
  7127  001DD2  0E00               	movlw	0
  7128  001DD4  0100               	movlb	0	; () banked
  7129  001DD6  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7130  001DD8  0100               	movlb	0	; () banked
  7131  001DDA  6F74               	movwf	??___xxtofl& (0+255),b
  7132  001DDC  0E00               	movlw	0
  7133  001DDE  0100               	movlb	0	; () banked
  7134  001DE0  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7135  001DE2  0100               	movlb	0	; () banked
  7136  001DE4  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7137  001DE6  0E00               	movlw	0
  7138  001DE8  0100               	movlb	0	; () banked
  7139  001DEA  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7140  001DEC  0100               	movlb	0	; () banked
  7141  001DEE  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7142  001DF0  0EFE               	movlw	254
  7143  001DF2  0100               	movlb	0	; () banked
  7144  001DF4  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7145  001DF6  0100               	movlb	0	; () banked
  7146  001DF8  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7147  001DFA  0100               	movlb	0	; () banked
  7148  001DFC  5174               	movf	??___xxtofl& (0+255),w,b
  7149  001DFE  0100               	movlb	0	; () banked
  7150  001E00  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7151  001E02  0100               	movlb	0	; () banked
  7152  001E04  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7153  001E06  0100               	movlb	0	; () banked
  7154  001E08  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7155  001E0A  B4D8               	btfsc	status,2,c
  7156  001E0C  D010               	goto	l1079
  7157  001E0E  D7D9               	goto	l5050
  7158  001E10                     l5054:
  7159                           
  7160                           ; BSR set to: 0
  7161  001E10  0100               	movlb	0	; () banked
  7162  001E12  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7163                           
  7164                           ; BSR set to: 0
  7165  001E14  0E01               	movlw	1
  7166  001E16  0100               	movlb	0	; () banked
  7167  001E18  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7168  001E1A  0E00               	movlw	0
  7169  001E1C  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7170  001E1E  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7171  001E20  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7172                           
  7173                           ; BSR set to: 0
  7174  001E22  0100               	movlb	0	; () banked
  7175  001E24  90D8               	bcf	status,0,c
  7176  001E26  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7177  001E28  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7178  001E2A  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7179  001E2C  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7180  001E2E                     l1079:
  7181                           
  7182                           ; BSR set to: 0
  7183  001E2E  0E00               	movlw	0
  7184  001E30  0100               	movlb	0	; () banked
  7185  001E32  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7186  001E34  0100               	movlb	0	; () banked
  7187  001E36  6F74               	movwf	??___xxtofl& (0+255),b
  7188  001E38  0E00               	movlw	0
  7189  001E3A  0100               	movlb	0	; () banked
  7190  001E3C  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7191  001E3E  0100               	movlb	0	; () banked
  7192  001E40  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7193  001E42  0E00               	movlw	0
  7194  001E44  0100               	movlb	0	; () banked
  7195  001E46  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7196  001E48  0100               	movlb	0	; () banked
  7197  001E4A  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7198  001E4C  0EFF               	movlw	255
  7199  001E4E  0100               	movlb	0	; () banked
  7200  001E50  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7201  001E52  0100               	movlb	0	; () banked
  7202  001E54  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7203  001E56  0100               	movlb	0	; () banked
  7204  001E58  5174               	movf	??___xxtofl& (0+255),w,b
  7205  001E5A  0100               	movlb	0	; () banked
  7206  001E5C  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7207  001E5E  0100               	movlb	0	; () banked
  7208  001E60  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7209  001E62  0100               	movlb	0	; () banked
  7210  001E64  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7211  001E66  B4D8               	btfsc	status,2,c
  7212  001E68  D009               	goto	l5062
  7213  001E6A  D7D2               	goto	l5054
  7214  001E6C                     l5060:
  7215                           
  7216                           ; BSR set to: 0
  7217  001E6C  0100               	movlb	0	; () banked
  7218  001E6E  0779               	decf	___xxtofl@exp& (0+255),f,b
  7219  001E70  0100               	movlb	0	; () banked
  7220  001E72  90D8               	bcf	status,0,c
  7221  001E74  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7222  001E76  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7223  001E78  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7224  001E7A  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7225  001E7C                     l5062:
  7226                           
  7227                           ; BSR set to: 0
  7228  001E7C  0100               	movlb	0	; () banked
  7229  001E7E  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7230  001E80  D004               	goto	l1086
  7231                           
  7232                           ; BSR set to: 0
  7233  001E82  0E02               	movlw	2
  7234  001E84  0100               	movlb	0	; () banked
  7235  001E86  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7236  001E88  D7F1               	goto	l5060
  7237  001E8A                     l1086:
  7238                           
  7239                           ; BSR set to: 0
  7240  001E8A  0100               	movlb	0	; () banked
  7241  001E8C  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7242  001E8E  D009               	goto	l1087
  7243                           
  7244                           ; BSR set to: 0
  7245  001E90  0EFF               	movlw	255
  7246  001E92  0100               	movlb	0	; () banked
  7247  001E94  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7248  001E96  0EFF               	movlw	255
  7249  001E98  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7250  001E9A  0E7F               	movlw	127
  7251  001E9C  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7252  001E9E  0EFF               	movlw	255
  7253  001EA0  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7254  001EA2                     l1087:
  7255                           
  7256                           ; BSR set to: 0
  7257  001EA2  0100               	movlb	0	; () banked
  7258  001EA4  90D8               	bcf	status,0,c
  7259  001EA6  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7260  001EA8  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7261  001EAC  0100               	movlb	0	; () banked
  7262  001EAE  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7263  001EB0  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7264  001EB2  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7265  001EB4  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7266  001EB8  0100               	movlb	0	; () banked
  7267  001EBA  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7268  001EBC  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7269  001EBE  6B74               	clrf	??___xxtofl& (0+255),b
  7270  001EC0  0100               	movlb	0	; () banked
  7271  001EC2  5174               	movf	??___xxtofl& (0+255),w,b
  7272  001EC4  0100               	movlb	0	; () banked
  7273  001EC6  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7274  001EC8  0100               	movlb	0	; () banked
  7275  001ECA  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7276  001ECC  0100               	movlb	0	; () banked
  7277  001ECE  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7278  001ED0  0100               	movlb	0	; () banked
  7279  001ED2  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7280  001ED4  0100               	movlb	0	; () banked
  7281  001ED6  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7282  001ED8  0100               	movlb	0	; () banked
  7283  001EDA  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7284  001EDC  0100               	movlb	0	; () banked
  7285  001EDE  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7286                           
  7287                           ; BSR set to: 0
  7288  001EE0  0100               	movlb	0	; () banked
  7289  001EE2  5178               	movf	___xxtofl@sign& (0+255),w,b
  7290  001EE4  0100               	movlb	0	; () banked
  7291  001EE6  B4D8               	btfsc	status,2,c
  7292  001EE8  D005               	goto	l5074
  7293                           
  7294                           ; BSR set to: 0
  7295  001EEA  0100               	movlb	0	; () banked
  7296  001EEC  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7297  001EEE  D002               	goto	l5074
  7298                           
  7299                           ; BSR set to: 0
  7300  001EF0  0100               	movlb	0	; () banked
  7301  001EF2  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7302  001EF4                     l5074:
  7303                           
  7304                           ; BSR set to: 0
  7305  001EF4  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7306  001EF8  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7307  001EFC  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7308  001F00  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7309  001F04  0012               	return	
  7310  001F06                     __end_of___xxtofl:
  7311                           	opt stack 0
  7312                           tblptru	equ	0xFF8
  7313                           tblptrh	equ	0xFF7
  7314                           tblptrl	equ	0xFF6
  7315                           tablat	equ	0xFF5
  7316                           prodh	equ	0xFF4
  7317                           prodl	equ	0xFF3
  7318                           intcon	equ	0xFF2
  7319                           postinc0	equ	0xFEE
  7320                           wreg	equ	0xFE8
  7321                           indf2	equ	0xFDF
  7322                           postinc2	equ	0xFDE
  7323                           fsr2h	equ	0xFDA
  7324                           fsr2l	equ	0xFD9
  7325                           status	equ	0xFD8
  7326                           
  7327 ;; *************** function ___llmod *****************
  7328 ;; Defined at:
  7329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  dividend        4   16[BANK0 ] unsigned long 
  7332 ;;  divisor         4   20[BANK0 ] unsigned long 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  counter         1   24[COMRAM] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  4   16[BANK0 ] unsigned long 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7344 ;;      Params:         0       8       0       0
  7345 ;;      Locals:         1       0       0       0
  7346 ;;      Temps:          0       0       0       0
  7347 ;;      Totals:         1       8       0       0
  7348 ;;Total ram usage:        9 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:    4
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_sprintf
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text22
  7359  002B7E                     __ptext22:
  7360                           	opt stack 0
  7361  002B7E                     ___llmod:
  7362                           	opt stack 24
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;incstack = 0
  7366  002B7E  0100               	movlb	0	; () banked
  7367  002B80  5174               	movf	___llmod@divisor& (0+255),w,b
  7368  002B82  0100               	movlb	0	; () banked
  7369  002B84  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7370  002B86  0100               	movlb	0	; () banked
  7371  002B88  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7372  002B8A  0100               	movlb	0	; () banked
  7373  002B8C  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7374  002B8E  B4D8               	btfsc	status,2,c
  7375  002B90  D037               	goto	l880
  7376                           
  7377                           ; BSR set to: 0
  7378  002B92  0E01               	movlw	1
  7379  002B94  6E3C               	movwf	___llmod@counter,c
  7380  002B96  D007               	goto	l5026
  7381  002B98                     l5024:
  7382                           
  7383                           ; BSR set to: 0
  7384  002B98  0100               	movlb	0	; () banked
  7385  002B9A  90D8               	bcf	status,0,c
  7386  002B9C  3774               	rlcf	___llmod@divisor& (0+255),f,b
  7387  002B9E  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7388  002BA0  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7389  002BA2  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7390  002BA4  2A3C               	incf	___llmod@counter,f,c
  7391  002BA6                     l5026:
  7392                           
  7393                           ; BSR set to: 0
  7394  002BA6  0100               	movlb	0	; () banked
  7395  002BA8  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7396  002BAA  D7F6               	goto	l5024
  7397  002BAC                     l5028:
  7398                           
  7399                           ; BSR set to: 0
  7400  002BAC  0100               	movlb	0	; () banked
  7401  002BAE  5174               	movf	___llmod@divisor& (0+255),w,b
  7402  002BB0  0100               	movlb	0	; () banked
  7403  002BB2  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7404  002BB4  0100               	movlb	0	; () banked
  7405  002BB6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7406  002BB8  0100               	movlb	0	; () banked
  7407  002BBA  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7408  002BBC  0100               	movlb	0	; () banked
  7409  002BBE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7410  002BC0  0100               	movlb	0	; () banked
  7411  002BC2  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7412  002BC4  0100               	movlb	0	; () banked
  7413  002BC6  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7414  002BC8  0100               	movlb	0	; () banked
  7415  002BCA  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7416  002BCC  A0D8               	btfss	status,0,c
  7417  002BCE  D010               	goto	l5032
  7418                           
  7419                           ; BSR set to: 0
  7420  002BD0  0100               	movlb	0	; () banked
  7421  002BD2  5174               	movf	___llmod@divisor& (0+255),w,b
  7422  002BD4  0100               	movlb	0	; () banked
  7423  002BD6  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7424  002BD8  0100               	movlb	0	; () banked
  7425  002BDA  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7426  002BDC  0100               	movlb	0	; () banked
  7427  002BDE  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7428  002BE0  0100               	movlb	0	; () banked
  7429  002BE2  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7430  002BE4  0100               	movlb	0	; () banked
  7431  002BE6  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7432  002BE8  0100               	movlb	0	; () banked
  7433  002BEA  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7434  002BEC  0100               	movlb	0	; () banked
  7435  002BEE  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7436  002BF0                     l5032:
  7437                           
  7438                           ; BSR set to: 0
  7439  002BF0  0100               	movlb	0	; () banked
  7440  002BF2  90D8               	bcf	status,0,c
  7441  002BF4  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7442  002BF6  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7443  002BF8  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7444  002BFA  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7445                           
  7446                           ; BSR set to: 0
  7447  002BFC  2E3C               	decfsz	___llmod@counter,f,c
  7448  002BFE  D7D6               	goto	l5028
  7449  002C00                     l880:
  7450                           
  7451                           ; BSR set to: 0
  7452  002C00  C070  F070         	movff	___llmod@dividend,?___llmod
  7453  002C04  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7454  002C08  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7455  002C0C  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7456                           
  7457                           ; BSR set to: 0
  7458  002C10  0012               	return		;funcret
  7459  002C12                     __end_of___llmod:
  7460                           	opt stack 0
  7461                           tblptru	equ	0xFF8
  7462                           tblptrh	equ	0xFF7
  7463                           tblptrl	equ	0xFF6
  7464                           tablat	equ	0xFF5
  7465                           prodh	equ	0xFF4
  7466                           prodl	equ	0xFF3
  7467                           intcon	equ	0xFF2
  7468                           postinc0	equ	0xFEE
  7469                           wreg	equ	0xFE8
  7470                           indf2	equ	0xFDF
  7471                           postinc2	equ	0xFDE
  7472                           fsr2h	equ	0xFDA
  7473                           fsr2l	equ	0xFD9
  7474                           status	equ	0xFD8
  7475                           
  7476 ;; *************** function ___lldiv *****************
  7477 ;; Defined at:
  7478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  dividend        4   16[BANK0 ] unsigned long 
  7481 ;;  divisor         4   20[BANK0 ] unsigned long 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  quotient        4   24[COMRAM] unsigned long 
  7484 ;;  counter         1   28[COMRAM] unsigned char 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  4   16[BANK0 ] unsigned long 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7494 ;;      Params:         0       8       0       0
  7495 ;;      Locals:         5       0       0       0
  7496 ;;      Temps:          0       0       0       0
  7497 ;;      Totals:         5       8       0       0
  7498 ;;Total ram usage:       13 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    4
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_sprintf
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text23
  7509  002A38                     __ptext23:
  7510                           	opt stack 0
  7511  002A38                     ___lldiv:
  7512                           	opt stack 24
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;incstack = 0
  7516  002A38  0E00               	movlw	0
  7517  002A3A  6E3C               	movwf	___lldiv@quotient,c
  7518  002A3C  0E00               	movlw	0
  7519  002A3E  6E3D               	movwf	___lldiv@quotient+1,c
  7520  002A40  0E00               	movlw	0
  7521  002A42  6E3E               	movwf	___lldiv@quotient+2,c
  7522  002A44  0E00               	movlw	0
  7523  002A46  6E3F               	movwf	___lldiv@quotient+3,c
  7524  002A48  0100               	movlb	0	; () banked
  7525  002A4A  5174               	movf	___lldiv@divisor& (0+255),w,b
  7526  002A4C  0100               	movlb	0	; () banked
  7527  002A4E  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7528  002A50  0100               	movlb	0	; () banked
  7529  002A52  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7530  002A54  0100               	movlb	0	; () banked
  7531  002A56  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7532  002A58  B4D8               	btfsc	status,2,c
  7533  002A5A  D03D               	goto	l870
  7534                           
  7535                           ; BSR set to: 0
  7536  002A5C  0E01               	movlw	1
  7537  002A5E  6E40               	movwf	___lldiv@counter,c
  7538  002A60  D007               	goto	l5006
  7539  002A62                     l5004:
  7540                           
  7541                           ; BSR set to: 0
  7542  002A62  0100               	movlb	0	; () banked
  7543  002A64  90D8               	bcf	status,0,c
  7544  002A66  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7545  002A68  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7546  002A6A  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7547  002A6C  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7548  002A6E  2A40               	incf	___lldiv@counter,f,c
  7549  002A70                     l5006:
  7550                           
  7551                           ; BSR set to: 0
  7552  002A70  0100               	movlb	0	; () banked
  7553  002A72  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7554  002A74  D7F6               	goto	l5004
  7555  002A76                     l5008:
  7556                           
  7557                           ; BSR set to: 0
  7558  002A76  90D8               	bcf	status,0,c
  7559  002A78  363C               	rlcf	___lldiv@quotient,f,c
  7560  002A7A  363D               	rlcf	___lldiv@quotient+1,f,c
  7561  002A7C  363E               	rlcf	___lldiv@quotient+2,f,c
  7562  002A7E  363F               	rlcf	___lldiv@quotient+3,f,c
  7563                           
  7564                           ; BSR set to: 0
  7565  002A80  0100               	movlb	0	; () banked
  7566  002A82  5174               	movf	___lldiv@divisor& (0+255),w,b
  7567  002A84  0100               	movlb	0	; () banked
  7568  002A86  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7569  002A88  0100               	movlb	0	; () banked
  7570  002A8A  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7571  002A8C  0100               	movlb	0	; () banked
  7572  002A8E  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7573  002A90  0100               	movlb	0	; () banked
  7574  002A92  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7575  002A94  0100               	movlb	0	; () banked
  7576  002A96  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7577  002A98  0100               	movlb	0	; () banked
  7578  002A9A  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7579  002A9C  0100               	movlb	0	; () banked
  7580  002A9E  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7581  002AA0  A0D8               	btfss	status,0,c
  7582  002AA2  D011               	goto	l5016
  7583                           
  7584                           ; BSR set to: 0
  7585  002AA4  0100               	movlb	0	; () banked
  7586  002AA6  5174               	movf	___lldiv@divisor& (0+255),w,b
  7587  002AA8  0100               	movlb	0	; () banked
  7588  002AAA  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7589  002AAC  0100               	movlb	0	; () banked
  7590  002AAE  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7591  002AB0  0100               	movlb	0	; () banked
  7592  002AB2  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7593  002AB4  0100               	movlb	0	; () banked
  7594  002AB6  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7595  002AB8  0100               	movlb	0	; () banked
  7596  002ABA  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7597  002ABC  0100               	movlb	0	; () banked
  7598  002ABE  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7599  002AC0  0100               	movlb	0	; () banked
  7600  002AC2  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7601                           
  7602                           ; BSR set to: 0
  7603  002AC4  803C               	bsf	___lldiv@quotient,0,c
  7604  002AC6                     l5016:
  7605                           
  7606                           ; BSR set to: 0
  7607  002AC6  0100               	movlb	0	; () banked
  7608  002AC8  90D8               	bcf	status,0,c
  7609  002ACA  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7610  002ACC  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7611  002ACE  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7612  002AD0  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7613                           
  7614                           ; BSR set to: 0
  7615  002AD2  2E40               	decfsz	___lldiv@counter,f,c
  7616  002AD4  D7D0               	goto	l5008
  7617  002AD6                     l870:
  7618                           
  7619                           ; BSR set to: 0
  7620  002AD6  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7621  002ADA  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7622  002ADE  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7623  002AE2  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7624                           
  7625                           ; BSR set to: 0
  7626  002AE6  0012               	return		;funcret
  7627  002AE8                     __end_of___lldiv:
  7628                           	opt stack 0
  7629                           tblptru	equ	0xFF8
  7630                           tblptrh	equ	0xFF7
  7631                           tblptrl	equ	0xFF6
  7632                           tablat	equ	0xFF5
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           postinc0	equ	0xFEE
  7637                           wreg	equ	0xFE8
  7638                           indf2	equ	0xFDF
  7639                           postinc2	equ	0xFDE
  7640                           fsr2h	equ	0xFDA
  7641                           fsr2l	equ	0xFD9
  7642                           status	equ	0xFD8
  7643                           
  7644 ;; *************** function ___fltol *****************
  7645 ;; Defined at:
  7646 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  f1              4   64[BANK0 ] unsigned long 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  exp1            1   73[BANK0 ] unsigned char 
  7651 ;;  sign1           1   72[BANK0 ] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  4   64[BANK0 ] long 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7661 ;;      Params:         0       4       0       0
  7662 ;;      Locals:         0       2       0       0
  7663 ;;      Temps:          0       4       0       0
  7664 ;;      Totals:         0      10       0       0
  7665 ;;Total ram usage:       10 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    4
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_main
  7672 ;;		_sprintf
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text24
  7677  0025D6                     __ptext24:
  7678                           	opt stack 0
  7679  0025D6                     ___fltol:
  7680                           	opt stack 26
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;incstack = 0
  7684  0025D6  0100               	movlb	0	; () banked
  7685  0025D8  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7686  0025DA  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7687  0025DC  0100               	movlb	0	; () banked
  7688  0025DE  6FA9               	movwf	___fltol@exp1& (0+255),b
  7689  0025E0  0100               	movlb	0	; () banked
  7690  0025E2  51A9               	movf	___fltol@exp1& (0+255),w,b
  7691  0025E4  A4D8               	btfss	status,2,c
  7692  0025E6  D00A               	goto	l4960
  7693                           
  7694                           ; BSR set to: 0
  7695  0025E8  0E00               	movlw	0
  7696  0025EA  0100               	movlb	0	; () banked
  7697  0025EC  6FA0               	movwf	?___fltol& (0+255),b
  7698  0025EE  0E00               	movlw	0
  7699  0025F0  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7700  0025F2  0E00               	movlw	0
  7701  0025F4  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7702  0025F6  0E00               	movlw	0
  7703  0025F8  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7704                           
  7705                           ; BSR set to: 0
  7706  0025FA  0012               	return	
  7707  0025FC                     l4960:
  7708                           
  7709                           ; BSR set to: 0
  7710  0025FC  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7711  002600  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7712  002604  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7713  002608  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7714  00260C  0E20               	movlw	32
  7715  00260E  D006               	goto	u5680
  7716  002610                     u5685:
  7717  002610  0100               	movlb	0	; () banked
  7718  002612  90D8               	bcf	status,0,c
  7719  002614  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7720  002616  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7721  002618  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7722  00261A  33A4               	rrcf	??___fltol& (0+255),f,b
  7723  00261C                     u5680:
  7724  00261C  2EE8               	decfsz	wreg,f,c
  7725  00261E  D7F8               	goto	u5685
  7726  002620  0100               	movlb	0	; () banked
  7727  002622  51A4               	movf	??___fltol& (0+255),w,b
  7728  002624  0100               	movlb	0	; () banked
  7729  002626  6FA8               	movwf	___fltol@sign1& (0+255),b
  7730                           
  7731                           ; BSR set to: 0
  7732  002628  0100               	movlb	0	; () banked
  7733  00262A  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7734                           
  7735                           ; BSR set to: 0
  7736  00262C  0EFF               	movlw	255
  7737  00262E  0100               	movlb	0	; () banked
  7738  002630  17A0               	andwf	___fltol@f1& (0+255),f,b
  7739  002632  0EFF               	movlw	255
  7740  002634  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7741  002636  0EFF               	movlw	255
  7742  002638  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7743  00263A  0E00               	movlw	0
  7744  00263C  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7745                           
  7746                           ; BSR set to: 0
  7747  00263E  0E96               	movlw	150
  7748  002640  0100               	movlb	0	; () banked
  7749  002642  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7750                           
  7751                           ; BSR set to: 0
  7752  002644  0100               	movlb	0	; () banked
  7753  002646  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7754  002648  D01A               	goto	l4980
  7755                           
  7756                           ; BSR set to: 0
  7757  00264A  0100               	movlb	0	; () banked
  7758  00264C  51A9               	movf	___fltol@exp1& (0+255),w,b
  7759  00264E  0A80               	xorlw	128
  7760  002650  0F97               	addlw	151
  7761  002652  B0D8               	btfsc	status,0,c
  7762  002654  D00A               	goto	l4976
  7763                           
  7764                           ; BSR set to: 0
  7765  002656  0E00               	movlw	0
  7766  002658  0100               	movlb	0	; () banked
  7767  00265A  6FA0               	movwf	?___fltol& (0+255),b
  7768  00265C  0E00               	movlw	0
  7769  00265E  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7770  002660  0E00               	movlw	0
  7771  002662  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7772  002664  0E00               	movlw	0
  7773  002666  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7774                           
  7775                           ; BSR set to: 0
  7776  002668  0012               	return	
  7777  00266A                     l4976:
  7778                           
  7779                           ; BSR set to: 0
  7780  00266A  0100               	movlb	0	; () banked
  7781  00266C  90D8               	bcf	status,0,c
  7782  00266E  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7783  002670  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7784  002672  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7785  002674  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788  002676  0100               	movlb	0	; () banked
  7789  002678  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7790  00267A  D7F7               	goto	l4976
  7791                           
  7792                           ; BSR set to: 0
  7793  00267C  D01B               	goto	l4990
  7794  00267E                     l4980:
  7795                           
  7796                           ; BSR set to: 0
  7797  00267E  0E1F               	movlw	31
  7798  002680  0100               	movlb	0	; () banked
  7799  002682  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7800  002684  D012               	goto	l4988
  7801                           
  7802                           ; BSR set to: 0
  7803  002686  0E00               	movlw	0
  7804  002688  0100               	movlb	0	; () banked
  7805  00268A  6FA0               	movwf	?___fltol& (0+255),b
  7806  00268C  0E00               	movlw	0
  7807  00268E  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7808  002690  0E00               	movlw	0
  7809  002692  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7810  002694  0E00               	movlw	0
  7811  002696  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7812                           
  7813                           ; BSR set to: 0
  7814  002698  0012               	return	
  7815  00269A                     l4986:
  7816                           
  7817                           ; BSR set to: 0
  7818  00269A  0100               	movlb	0	; () banked
  7819  00269C  90D8               	bcf	status,0,c
  7820  00269E  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7821  0026A0  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7822  0026A2  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7823  0026A4  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7824  0026A6  0100               	movlb	0	; () banked
  7825  0026A8  07A9               	decf	___fltol@exp1& (0+255),f,b
  7826  0026AA                     l4988:
  7827                           
  7828                           ; BSR set to: 0
  7829  0026AA  0100               	movlb	0	; () banked
  7830  0026AC  51A9               	movf	___fltol@exp1& (0+255),w,b
  7831  0026AE  0100               	movlb	0	; () banked
  7832  0026B0  A4D8               	btfss	status,2,c
  7833  0026B2  D7F3               	goto	l4986
  7834  0026B4                     l4990:
  7835                           
  7836                           ; BSR set to: 0
  7837  0026B4  0100               	movlb	0	; () banked
  7838  0026B6  51A8               	movf	___fltol@sign1& (0+255),w,b
  7839  0026B8  0100               	movlb	0	; () banked
  7840  0026BA  B4D8               	btfsc	status,2,c
  7841  0026BC  D009               	goto	l4994
  7842                           
  7843                           ; BSR set to: 0
  7844  0026BE  0100               	movlb	0	; () banked
  7845  0026C0  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7846  0026C2  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7847  0026C4  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7848  0026C6  6DA0               	negf	___fltol@f1& (0+255),b
  7849  0026C8  0E00               	movlw	0
  7850  0026CA  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7851  0026CC  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7852  0026CE  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7853  0026D0                     l4994:
  7854                           
  7855                           ; BSR set to: 0
  7856  0026D0  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7857  0026D4  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7858  0026D8  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7859  0026DC  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7860  0026E0  0012               	return	
  7861  0026E2                     __end_of___fltol:
  7862                           	opt stack 0
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           intcon	equ	0xFF2
  7870                           postinc0	equ	0xFEE
  7871                           wreg	equ	0xFE8
  7872                           indf2	equ	0xFDF
  7873                           postinc2	equ	0xFDE
  7874                           fsr2h	equ	0xFDA
  7875                           fsr2l	equ	0xFD9
  7876                           status	equ	0xFD8
  7877                           
  7878 ;; *************** function ___flsub *****************
  7879 ;; Defined at:
  7880 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  b               4   88[BANK0 ] long 
  7883 ;;  a               4   92[BANK0 ] long 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  4   88[BANK0 ] long 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7895 ;;      Params:         0       8       0       0
  7896 ;;      Locals:         0       0       0       0
  7897 ;;      Temps:          0       0       0       0
  7898 ;;      Totals:         0       8       0       0
  7899 ;;Total ram usage:        8 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    5
  7902 ;; This function calls:
  7903 ;;		___fladd
  7904 ;; This function is called by:
  7905 ;;		_sprintf
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text25
  7910  002D34                     __ptext25:
  7911                           	opt stack 0
  7912  002D34                     ___flsub:
  7913                           	opt stack 23
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;incstack = 0
  7917  002D34  0E00               	movlw	0
  7918  002D36  0100               	movlb	0	; () banked
  7919  002D38  1BBC               	xorwf	___flsub@a& (0+255),f,b
  7920  002D3A  0E00               	movlw	0
  7921  002D3C  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  7922  002D3E  0E00               	movlw	0
  7923  002D40  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  7924  002D42  0E80               	movlw	128
  7925  002D44  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  7926                           
  7927                           ; BSR set to: 0
  7928  002D46  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  7929  002D4A  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  7930  002D4E  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  7931  002D52  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  7932  002D56  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  7933  002D5A  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  7934  002D5E  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  7935  002D62  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  7936  002D66  EC90  F004         	call	___fladd	;wreg free
  7937  002D6A  C0A4  F0B8         	movff	?___fladd,?___flsub
  7938  002D6E  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  7939  002D72  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  7940  002D76  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  7941  002D7A  0012               	return	
  7942  002D7C                     __end_of___flsub:
  7943                           	opt stack 0
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           indf2	equ	0xFDF
  7954                           postinc2	equ	0xFDE
  7955                           fsr2h	equ	0xFDA
  7956                           fsr2l	equ	0xFD9
  7957                           status	equ	0xFD8
  7958                           
  7959 ;; *************** function ___fladd *****************
  7960 ;; Defined at:
  7961 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  b               4   68[BANK0 ] long 
  7964 ;;  a               4   72[BANK0 ] long 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  grs             1   87[BANK0 ] unsigned char 
  7967 ;;  bexp            1   86[BANK0 ] unsigned char 
  7968 ;;  aexp            1   85[BANK0 ] unsigned char 
  7969 ;;  signs           1   84[BANK0 ] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  4   68[BANK0 ] unsigned char 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7979 ;;      Params:         0       8       0       0
  7980 ;;      Locals:         0       4       0       0
  7981 ;;      Temps:          0       8       0       0
  7982 ;;      Totals:         0      20       0       0
  7983 ;;Total ram usage:       20 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    4
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_sprintf
  7990 ;;		___flsub
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text26
  7995  000920                     __ptext26:
  7996                           	opt stack 0
  7997  000920                     ___fladd:
  7998                           	opt stack 23
  7999                           
  8000                           ;incstack = 0
  8001  000920  0100               	movlb	0	; () banked
  8002  000922  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8003  000924  0B80               	andlw	128
  8004  000926  0100               	movlb	0	; () banked
  8005  000928  6FB4               	movwf	___fladd@signs& (0+255),b
  8006  00092A  0100               	movlb	0	; () banked
  8007  00092C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8008  00092E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  8009  000930  0100               	movlb	0	; () banked
  8010  000932  6FB6               	movwf	___fladd@bexp& (0+255),b
  8011                           
  8012                           ; BSR set to: 0
  8013  000934  0100               	movlb	0	; () banked
  8014  000936  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8015  000938  D002               	goto	l4302
  8016                           
  8017                           ; BSR set to: 0
  8018  00093A  0100               	movlb	0	; () banked
  8019  00093C  81B6               	bsf	___fladd@bexp& (0+255),0,b
  8020  00093E                     l4302:
  8021                           
  8022                           ; BSR set to: 0
  8023  00093E  0100               	movlb	0	; () banked
  8024  000940  51B6               	movf	___fladd@bexp& (0+255),w,b
  8025  000942  0100               	movlb	0	; () banked
  8026  000944  B4D8               	btfsc	status,2,c
  8027  000946  D012               	goto	l4312
  8028                           
  8029                           ; BSR set to: 0
  8030  000948  0100               	movlb	0	; () banked
  8031  00094A  29B6               	incf	___fladd@bexp& (0+255),w,b
  8032  00094C  A4D8               	btfss	status,2,c
  8033  00094E  D009               	goto	l4308
  8034                           
  8035                           ; BSR set to: 0
  8036  000950  0E00               	movlw	0
  8037  000952  0100               	movlb	0	; () banked
  8038  000954  6FA4               	movwf	___fladd@b& (0+255),b
  8039  000956  0E00               	movlw	0
  8040  000958  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8041  00095A  0E00               	movlw	0
  8042  00095C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8043  00095E  0E00               	movlw	0
  8044  000960  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8045  000962                     l4308:
  8046                           
  8047                           ; BSR set to: 0
  8048  000962  0100               	movlb	0	; () banked
  8049  000964  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8050                           
  8051                           ; BSR set to: 0
  8052  000966  0E00               	movlw	0
  8053  000968  0100               	movlb	0	; () banked
  8054  00096A  D008               	goto	L8
  8055  00096C                     l4312:
  8056                           
  8057                           ; BSR set to: 0
  8058  00096C  0E00               	movlw	0
  8059  00096E  0100               	movlb	0	; () banked
  8060  000970  6FA4               	movwf	___fladd@b& (0+255),b
  8061  000972  0E00               	movlw	0
  8062  000974  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8063  000976  0E00               	movlw	0
  8064  000978  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8065  00097A  0E00               	movlw	0
  8066  00097C                     L8:
  8067  00097C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8068                           
  8069                           ; BSR set to: 0
  8070                           
  8071                           ; BSR set to: 0
  8072  00097E  0100               	movlb	0	; () banked
  8073  000980  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8074  000982  0B80               	andlw	128
  8075  000984  0100               	movlb	0	; () banked
  8076  000986  6FB5               	movwf	___fladd@aexp& (0+255),b
  8077                           
  8078                           ; BSR set to: 0
  8079  000988  0100               	movlb	0	; () banked
  8080  00098A  51B4               	movf	___fladd@signs& (0+255),w,b
  8081  00098C  0100               	movlb	0	; () banked
  8082  00098E  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  8083  000990  B4D8               	btfsc	status,2,c
  8084  000992  D002               	goto	l4320
  8085                           
  8086                           ; BSR set to: 0
  8087  000994  0100               	movlb	0	; () banked
  8088  000996  8DB4               	bsf	___fladd@signs& (0+255),6,b
  8089  000998                     l4320:
  8090                           
  8091                           ; BSR set to: 0
  8092  000998  0100               	movlb	0	; () banked
  8093  00099A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8094  00099C  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  8095  00099E  0100               	movlb	0	; () banked
  8096  0009A0  6FB5               	movwf	___fladd@aexp& (0+255),b
  8097                           
  8098                           ; BSR set to: 0
  8099  0009A2  0100               	movlb	0	; () banked
  8100  0009A4  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  8101  0009A6  D002               	goto	l4326
  8102                           
  8103                           ; BSR set to: 0
  8104  0009A8  0100               	movlb	0	; () banked
  8105  0009AA  81B5               	bsf	___fladd@aexp& (0+255),0,b
  8106  0009AC                     l4326:
  8107                           
  8108                           ; BSR set to: 0
  8109  0009AC  0100               	movlb	0	; () banked
  8110  0009AE  51B5               	movf	___fladd@aexp& (0+255),w,b
  8111  0009B0  0100               	movlb	0	; () banked
  8112  0009B2  B4D8               	btfsc	status,2,c
  8113  0009B4  D012               	goto	l4336
  8114                           
  8115                           ; BSR set to: 0
  8116  0009B6  0100               	movlb	0	; () banked
  8117  0009B8  29B5               	incf	___fladd@aexp& (0+255),w,b
  8118  0009BA  A4D8               	btfss	status,2,c
  8119  0009BC  D009               	goto	l4332
  8120                           
  8121                           ; BSR set to: 0
  8122  0009BE  0E00               	movlw	0
  8123  0009C0  0100               	movlb	0	; () banked
  8124  0009C2  6FA8               	movwf	___fladd@a& (0+255),b
  8125  0009C4  0E00               	movlw	0
  8126  0009C6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8127  0009C8  0E00               	movlw	0
  8128  0009CA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8129  0009CC  0E00               	movlw	0
  8130  0009CE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8131  0009D0                     l4332:
  8132                           
  8133                           ; BSR set to: 0
  8134  0009D0  0100               	movlb	0	; () banked
  8135  0009D2  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8136                           
  8137                           ; BSR set to: 0
  8138  0009D4  0E00               	movlw	0
  8139  0009D6  0100               	movlb	0	; () banked
  8140  0009D8  D008               	goto	L9
  8141  0009DA                     l4336:
  8142                           
  8143                           ; BSR set to: 0
  8144  0009DA  0E00               	movlw	0
  8145  0009DC  0100               	movlb	0	; () banked
  8146  0009DE  6FA8               	movwf	___fladd@a& (0+255),b
  8147  0009E0  0E00               	movlw	0
  8148  0009E2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8149  0009E4  0E00               	movlw	0
  8150  0009E6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8151  0009E8  0E00               	movlw	0
  8152  0009EA                     L9:
  8153  0009EA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8154                           
  8155                           ; BSR set to: 0
  8156                           
  8157                           ; BSR set to: 0
  8158  0009EC  0100               	movlb	0	; () banked
  8159  0009EE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8160  0009F0  0100               	movlb	0	; () banked
  8161  0009F2  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8162  0009F4  B0D8               	btfsc	status,0,c
  8163  0009F6  D024               	goto	l4374
  8164                           
  8165                           ; BSR set to: 0
  8166  0009F8  0100               	movlb	0	; () banked
  8167  0009FA  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8168  0009FC  D003               	goto	l4344
  8169                           
  8170                           ; BSR set to: 0
  8171  0009FE  0E80               	movlw	128
  8172  000A00  0100               	movlb	0	; () banked
  8173  000A02  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8174  000A04                     l4344:
  8175                           
  8176                           ; BSR set to: 0
  8177  000A04  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8178                           
  8179                           ; BSR set to: 0
  8180  000A08  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8181                           
  8182                           ; BSR set to: 0
  8183  000A0C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8184                           
  8185                           ; BSR set to: 0
  8186  000A10  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8187                           
  8188                           ; BSR set to: 0
  8189  000A14  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8190                           
  8191                           ; BSR set to: 0
  8192  000A18  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8193                           
  8194                           ; BSR set to: 0
  8195  000A1C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8196                           
  8197                           ; BSR set to: 0
  8198  000A20  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8199                           
  8200                           ; BSR set to: 0
  8201  000A24  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8202                           
  8203                           ; BSR set to: 0
  8204  000A28  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8205                           
  8206                           ; BSR set to: 0
  8207  000A2C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8208                           
  8209                           ; BSR set to: 0
  8210  000A30  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8211                           
  8212                           ; BSR set to: 0
  8213  000A34  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8214                           
  8215                           ; BSR set to: 0
  8216  000A38  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8217                           
  8218                           ; BSR set to: 0
  8219  000A3C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8220  000A40                     l4374:
  8221                           
  8222                           ; BSR set to: 0
  8223  000A40  0E00               	movlw	0
  8224  000A42  0100               	movlb	0	; () banked
  8225  000A44  6FB7               	movwf	___fladd@grs& (0+255),b
  8226                           
  8227                           ; BSR set to: 0
  8228  000A46  0100               	movlb	0	; () banked
  8229  000A48  51B6               	movf	___fladd@bexp& (0+255),w,b
  8230  000A4A  0100               	movlb	0	; () banked
  8231  000A4C  6FAC               	movwf	??___fladd& (0+255),b
  8232  000A4E  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8233  000A50  0100               	movlb	0	; () banked
  8234  000A52  1FAC               	comf	??___fladd& (0+255),f,b
  8235  000A54  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8236  000A56  4BAC               	infsnz	??___fladd& (0+255),f,b
  8237  000A58  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8238  000A5A  0100               	movlb	0	; () banked
  8239  000A5C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8240  000A5E  0100               	movlb	0	; () banked
  8241  000A60  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8242  000A62  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8243  000A64  0100               	movlb	0	; () banked
  8244  000A66  51AC               	movf	??___fladd& (0+255),w,b
  8245  000A68  0100               	movlb	0	; () banked
  8246  000A6A  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8247  000A6C  0100               	movlb	0	; () banked
  8248  000A6E  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8249  000A70  0100               	movlb	0	; () banked
  8250  000A72  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8251  000A74  0100               	movlb	0	; () banked
  8252  000A76  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8253  000A78  D03D               	goto	l965
  8254  000A7A  0100               	movlb	0	; () banked
  8255  000A7C  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8256  000A7E  E105               	bnz	u4750
  8257  000A80  0E1A               	movlw	26
  8258  000A82  0100               	movlb	0	; () banked
  8259  000A84  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8260  000A86  A0D8               	btfss	status,0,c
  8261  000A88  D035               	goto	l965
  8262  000A8A                     u4750:
  8263                           
  8264                           ; BSR set to: 0
  8265  000A8A  0100               	movlb	0	; () banked
  8266  000A8C  51A4               	movf	___fladd@b& (0+255),w,b
  8267  000A8E  0100               	movlb	0	; () banked
  8268  000A90  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8269  000A92  0100               	movlb	0	; () banked
  8270  000A94  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8271  000A96  0100               	movlb	0	; () banked
  8272  000A98  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8273  000A9A  B4D8               	btfsc	status,2,c
  8274  000A9C  D002               	goto	u4760
  8275  000A9E  0E01               	movlw	1
  8276  000AA0  D001               	goto	u4770
  8277  000AA2                     u4760:
  8278  000AA2  0E00               	movlw	0
  8279  000AA4                     u4770:
  8280  000AA4  0100               	movlb	0	; () banked
  8281  000AA6  6FB7               	movwf	___fladd@grs& (0+255),b
  8282                           
  8283                           ; BSR set to: 0
  8284  000AA8  0E00               	movlw	0
  8285  000AAA  0100               	movlb	0	; () banked
  8286  000AAC  6FA4               	movwf	___fladd@b& (0+255),b
  8287  000AAE  0E00               	movlw	0
  8288  000AB0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8289  000AB2  0E00               	movlw	0
  8290  000AB4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8291  000AB6  0E00               	movlw	0
  8292  000AB8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8293                           
  8294                           ; BSR set to: 0
  8295  000ABA  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8296  000ABE  D020               	goto	l964
  8297  000AC0                     l966:
  8298                           
  8299                           ; BSR set to: 0
  8300  000AC0  0100               	movlb	0	; () banked
  8301  000AC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8302  000AC4  D007               	goto	l4386
  8303                           
  8304                           ; BSR set to: 0
  8305  000AC6  0100               	movlb	0	; () banked
  8306  000AC8  90D8               	bcf	status,0,c
  8307  000ACA  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8308  000ACC  0901               	iorlw	1
  8309  000ACE  0100               	movlb	0	; () banked
  8310  000AD0  6FB7               	movwf	___fladd@grs& (0+255),b
  8311  000AD2  D003               	goto	l4388
  8312  000AD4                     l4386:
  8313                           
  8314                           ; BSR set to: 0
  8315  000AD4  0100               	movlb	0	; () banked
  8316  000AD6  90D8               	bcf	status,0,c
  8317  000AD8  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8318  000ADA                     l4388:
  8319                           
  8320                           ; BSR set to: 0
  8321  000ADA  0100               	movlb	0	; () banked
  8322  000ADC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8323  000ADE  D002               	goto	l4392
  8324                           
  8325                           ; BSR set to: 0
  8326  000AE0  0100               	movlb	0	; () banked
  8327  000AE2  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8328  000AE4                     l4392:
  8329                           
  8330                           ; BSR set to: 0
  8331  000AE4  0100               	movlb	0	; () banked
  8332  000AE6  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8333  000AE8  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8334  000AEA  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8335  000AEC  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8336  000AEE  33A4               	rrcf	___fladd@b& (0+255),f,b
  8337                           
  8338                           ; BSR set to: 0
  8339  000AF0  0100               	movlb	0	; () banked
  8340  000AF2  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8341  000AF4                     l965:
  8342                           
  8343                           ; BSR set to: 0
  8344  000AF4  0100               	movlb	0	; () banked
  8345  000AF6  51B5               	movf	___fladd@aexp& (0+255),w,b
  8346  000AF8  0100               	movlb	0	; () banked
  8347  000AFA  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8348  000AFC  A0D8               	btfss	status,0,c
  8349  000AFE  D7E0               	goto	l966
  8350  000B00                     l964:
  8351                           
  8352                           ; BSR set to: 0
  8353  000B00  0100               	movlb	0	; () banked
  8354  000B02  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8355  000B04  D03F               	goto	l4420
  8356                           
  8357                           ; BSR set to: 0
  8358  000B06  0100               	movlb	0	; () banked
  8359  000B08  51B6               	movf	___fladd@bexp& (0+255),w,b
  8360  000B0A  0100               	movlb	0	; () banked
  8361  000B0C  A4D8               	btfss	status,2,c
  8362  000B0E  D00A               	goto	l4402
  8363                           
  8364                           ; BSR set to: 0
  8365  000B10  0E00               	movlw	0
  8366  000B12  0100               	movlb	0	; () banked
  8367  000B14  6FA4               	movwf	?___fladd& (0+255),b
  8368  000B16  0E00               	movlw	0
  8369  000B18  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8370  000B1A  0E00               	movlw	0
  8371  000B1C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8372  000B1E  0E00               	movlw	0
  8373  000B20  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8374                           
  8375                           ; BSR set to: 0
  8376  000B22  0012               	return	
  8377  000B24                     l4402:
  8378                           
  8379                           ; BSR set to: 0
  8380  000B24  0100               	movlb	0	; () banked
  8381  000B26  51A8               	movf	___fladd@a& (0+255),w,b
  8382  000B28  0100               	movlb	0	; () banked
  8383  000B2A  27A4               	addwf	___fladd@b& (0+255),f,b
  8384  000B2C  0100               	movlb	0	; () banked
  8385  000B2E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8386  000B30  0100               	movlb	0	; () banked
  8387  000B32  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8388  000B34  0100               	movlb	0	; () banked
  8389  000B36  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8390  000B38  0100               	movlb	0	; () banked
  8391  000B3A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8392  000B3C  0100               	movlb	0	; () banked
  8393  000B3E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8394  000B40  0100               	movlb	0	; () banked
  8395  000B42  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8396                           
  8397                           ; BSR set to: 0
  8398  000B44  0100               	movlb	0	; () banked
  8399  000B46  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8400  000B48  D0CC               	goto	l4456
  8401                           
  8402                           ; BSR set to: 0
  8403  000B4A  0100               	movlb	0	; () banked
  8404  000B4C  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8405  000B4E  D009               	goto	l4410
  8406                           
  8407                           ; BSR set to: 0
  8408  000B50  0100               	movlb	0	; () banked
  8409  000B52  90D8               	bcf	status,0,c
  8410  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8411  000B56  0100               	movlb	0	; () banked
  8412  000B58  51B7               	movf	___fladd@grs& (0+255),w,b
  8413  000B5A  0901               	iorlw	1
  8414  000B5C  0100               	movlb	0	; () banked
  8415  000B5E  6FB7               	movwf	___fladd@grs& (0+255),b
  8416  000B60  D003               	goto	l4412
  8417  000B62                     l4410:
  8418                           
  8419                           ; BSR set to: 0
  8420  000B62  0100               	movlb	0	; () banked
  8421  000B64  90D8               	bcf	status,0,c
  8422  000B66  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8423  000B68                     l4412:
  8424                           
  8425                           ; BSR set to: 0
  8426  000B68  0100               	movlb	0	; () banked
  8427  000B6A  A1A4               	btfss	___fladd@b& (0+255),0,b
  8428  000B6C  D002               	goto	l4416
  8429                           
  8430                           ; BSR set to: 0
  8431  000B6E  0100               	movlb	0	; () banked
  8432  000B70  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8433  000B72                     l4416:
  8434                           
  8435                           ; BSR set to: 0
  8436  000B72  0100               	movlb	0	; () banked
  8437  000B74  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8438  000B76  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8439  000B78  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8440  000B7A  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8441  000B7C  33A4               	rrcf	___fladd@b& (0+255),f,b
  8442                           
  8443                           ; BSR set to: 0
  8444  000B7E  0100               	movlb	0	; () banked
  8445  000B80  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8446                           
  8447                           ; BSR set to: 0
  8448  000B82  D0AF               	goto	l4456
  8449  000B84                     l4420:
  8450                           
  8451                           ; BSR set to: 0
  8452  000B84  0100               	movlb	0	; () banked
  8453  000B86  51A8               	movf	___fladd@a& (0+255),w,b
  8454  000B88  0100               	movlb	0	; () banked
  8455  000B8A  5DA4               	subwf	___fladd@b& (0+255),w,b
  8456  000B8C  0100               	movlb	0	; () banked
  8457  000B8E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8458  000B90  0100               	movlb	0	; () banked
  8459  000B92  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8460  000B94  0100               	movlb	0	; () banked
  8461  000B96  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8462  000B98  0100               	movlb	0	; () banked
  8463  000B9A  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8464  000B9C  0100               	movlb	0	; () banked
  8465  000B9E  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8466  000BA0  0A80               	xorlw	128
  8467  000BA2  0100               	movlb	0	; () banked
  8468  000BA4  6FAC               	movwf	??___fladd& (0+255),b
  8469  000BA6  0100               	movlb	0	; () banked
  8470  000BA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8471  000BAA  0A80               	xorlw	128
  8472  000BAC  0100               	movlb	0	; () banked
  8473  000BAE  59AC               	subwfb	??___fladd& (0+255),w,b
  8474  000BB0  B0D8               	btfsc	status,0,c
  8475  000BB2  D050               	goto	l4430
  8476                           
  8477                           ; BSR set to: 0
  8478  000BB4  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8479  000BB8  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8480  000BBC  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8481  000BC0  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8482  000BC4  0100               	movlb	0	; () banked
  8483  000BC6  1FAC               	comf	??___fladd& (0+255),f,b
  8484  000BC8  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8485  000BCA  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8486  000BCC  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8487  000BCE  2BAC               	incf	??___fladd& (0+255),f,b
  8488  000BD0  0E00               	movlw	0
  8489  000BD2  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8490  000BD4  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8491  000BD6  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8492  000BD8  0100               	movlb	0	; () banked
  8493  000BDA  51A8               	movf	___fladd@a& (0+255),w,b
  8494  000BDC  0100               	movlb	0	; () banked
  8495  000BDE  25AC               	addwf	??___fladd& (0+255),w,b
  8496  000BE0  0100               	movlb	0	; () banked
  8497  000BE2  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8498  000BE4  0100               	movlb	0	; () banked
  8499  000BE6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8500  000BE8  0100               	movlb	0	; () banked
  8501  000BEA  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8502  000BEC  0100               	movlb	0	; () banked
  8503  000BEE  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8504  000BF0  0100               	movlb	0	; () banked
  8505  000BF2  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8506  000BF4  0100               	movlb	0	; () banked
  8507  000BF6  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8508  000BF8  0100               	movlb	0	; () banked
  8509  000BFA  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8510  000BFC  0100               	movlb	0	; () banked
  8511  000BFE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8512  000C00  0100               	movlb	0	; () banked
  8513  000C02  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8514  000C04  0100               	movlb	0	; () banked
  8515  000C06  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8516  000C08  0EFF               	movlw	255
  8517  000C0A  0100               	movlb	0	; () banked
  8518  000C0C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8519  000C0E  0100               	movlb	0	; () banked
  8520  000C10  6FA4               	movwf	___fladd@b& (0+255),b
  8521  000C12  0EFF               	movlw	255
  8522  000C14  0100               	movlb	0	; () banked
  8523  000C16  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8524  000C18  0100               	movlb	0	; () banked
  8525  000C1A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8526  000C1C  0EFF               	movlw	255
  8527  000C1E  0100               	movlb	0	; () banked
  8528  000C20  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8529  000C22  0100               	movlb	0	; () banked
  8530  000C24  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8531  000C26  0EFF               	movlw	255
  8532  000C28  0100               	movlb	0	; () banked
  8533  000C2A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8534  000C2C  0100               	movlb	0	; () banked
  8535  000C2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8536  000C30  0E80               	movlw	128
  8537  000C32  0100               	movlb	0	; () banked
  8538  000C34  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8539                           
  8540                           ; BSR set to: 0
  8541  000C36  0100               	movlb	0	; () banked
  8542  000C38  6DB7               	negf	___fladd@grs& (0+255),b
  8543                           
  8544                           ; BSR set to: 0
  8545  000C3A  0100               	movlb	0	; () banked
  8546  000C3C  51B7               	movf	___fladd@grs& (0+255),w,b
  8547  000C3E  0100               	movlb	0	; () banked
  8548  000C40  A4D8               	btfss	status,2,c
  8549  000C42  D018               	goto	l981
  8550                           
  8551                           ; BSR set to: 0
  8552  000C44  0E01               	movlw	1
  8553  000C46  0100               	movlb	0	; () banked
  8554  000C48  27A4               	addwf	___fladd@b& (0+255),f,b
  8555  000C4A  0E00               	movlw	0
  8556  000C4C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8557  000C4E  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8558  000C50  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8559                           
  8560                           ; BSR set to: 0
  8561  000C52  D010               	goto	l981
  8562  000C54                     l4430:
  8563                           
  8564                           ; BSR set to: 0
  8565  000C54  0100               	movlb	0	; () banked
  8566  000C56  51A8               	movf	___fladd@a& (0+255),w,b
  8567  000C58  0100               	movlb	0	; () banked
  8568  000C5A  5FA4               	subwf	___fladd@b& (0+255),f,b
  8569  000C5C  0100               	movlb	0	; () banked
  8570  000C5E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8571  000C60  0100               	movlb	0	; () banked
  8572  000C62  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8573  000C64  0100               	movlb	0	; () banked
  8574  000C66  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8575  000C68  0100               	movlb	0	; () banked
  8576  000C6A  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8577  000C6C  0100               	movlb	0	; () banked
  8578  000C6E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8579  000C70  0100               	movlb	0	; () banked
  8580  000C72  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8581  000C74                     l981:
  8582                           
  8583                           ; BSR set to: 0
  8584  000C74  0100               	movlb	0	; () banked
  8585  000C76  51A4               	movf	___fladd@b& (0+255),w,b
  8586  000C78  0100               	movlb	0	; () banked
  8587  000C7A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8588  000C7C  0100               	movlb	0	; () banked
  8589  000C7E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8590  000C80  0100               	movlb	0	; () banked
  8591  000C82  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8592  000C84  A4D8               	btfss	status,2,c
  8593  000C86  D02A               	goto	l4454
  8594                           
  8595                           ; BSR set to: 0
  8596  000C88  0100               	movlb	0	; () banked
  8597  000C8A  51B7               	movf	___fladd@grs& (0+255),w,b
  8598  000C8C  0100               	movlb	0	; () banked
  8599  000C8E  A4D8               	btfss	status,2,c
  8600  000C90  D025               	goto	l4454
  8601                           
  8602                           ; BSR set to: 0
  8603  000C92  0E00               	movlw	0
  8604  000C94  0100               	movlb	0	; () banked
  8605  000C96  6FA4               	movwf	?___fladd& (0+255),b
  8606  000C98  0E00               	movlw	0
  8607  000C9A  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8608  000C9C  0E00               	movlw	0
  8609  000C9E  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8610  000CA0  0E00               	movlw	0
  8611  000CA2  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8612                           
  8613                           ; BSR set to: 0
  8614  000CA4  0012               	return	
  8615  000CA6                     l4438:
  8616                           
  8617                           ; BSR set to: 0
  8618  000CA6  0100               	movlb	0	; () banked
  8619  000CA8  90D8               	bcf	status,0,c
  8620  000CAA  37A4               	rlcf	___fladd@b& (0+255),f,b
  8621  000CAC  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8622  000CAE  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8623  000CB0  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8624                           
  8625                           ; BSR set to: 0
  8626  000CB2  0100               	movlb	0	; () banked
  8627  000CB4  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8628  000CB6  D002               	goto	l4444
  8629                           
  8630                           ; BSR set to: 0
  8631  000CB8  0100               	movlb	0	; () banked
  8632  000CBA  81A4               	bsf	___fladd@b& (0+255),0,b
  8633  000CBC                     l4444:
  8634                           
  8635                           ; BSR set to: 0
  8636  000CBC  0100               	movlb	0	; () banked
  8637  000CBE  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8638  000CC0  D003               	goto	l4448
  8639                           
  8640                           ; BSR set to: 0
  8641  000CC2  80D8               	bsf	status,0,c
  8642  000CC4  0100               	movlb	0	; () banked
  8643  000CC6  D002               	goto	L10
  8644  000CC8                     l4448:
  8645                           
  8646                           ; BSR set to: 0
  8647  000CC8  0100               	movlb	0	; () banked
  8648  000CCA  90D8               	bcf	status,0,c
  8649  000CCC                     L10:
  8650  000CCC  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653                           
  8654                           ; BSR set to: 0
  8655  000CCE  0100               	movlb	0	; () banked
  8656  000CD0  51B6               	movf	___fladd@bexp& (0+255),w,b
  8657  000CD2  0100               	movlb	0	; () banked
  8658  000CD4  B4D8               	btfsc	status,2,c
  8659  000CD6  D002               	goto	l4454
  8660                           
  8661                           ; BSR set to: 0
  8662  000CD8  0100               	movlb	0	; () banked
  8663  000CDA  07B6               	decf	___fladd@bexp& (0+255),f,b
  8664  000CDC                     l4454:
  8665                           
  8666                           ; BSR set to: 0
  8667  000CDC  0100               	movlb	0	; () banked
  8668  000CDE  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8669  000CE0  D7E2               	goto	l4438
  8670  000CE2                     l4456:
  8671                           
  8672                           ; BSR set to: 0
  8673  000CE2  0E00               	movlw	0
  8674  000CE4  0100               	movlb	0	; () banked
  8675  000CE6  6FB5               	movwf	___fladd@aexp& (0+255),b
  8676                           
  8677                           ; BSR set to: 0
  8678  000CE8  0100               	movlb	0	; () banked
  8679  000CEA  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8680  000CEC  D00D               	goto	l990
  8681                           
  8682                           ; BSR set to: 0
  8683  000CEE  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8684  000CF2  0E7F               	movlw	127
  8685  000CF4  0100               	movlb	0	; () banked
  8686  000CF6  17AC               	andwf	??___fladd& (0+255),f,b
  8687  000CF8  A4D8               	btfss	status,2,c
  8688  000CFA  D003               	goto	l4464
  8689                           
  8690                           ; BSR set to: 0
  8691                           
  8692                           ; BSR set to: 0
  8693  000CFC  0100               	movlb	0	; () banked
  8694  000CFE  A1A4               	btfss	___fladd@b& (0+255),0,b
  8695  000D00  D003               	goto	l990
  8696  000D02                     l4464:
  8697                           
  8698                           ; BSR set to: 0
  8699  000D02  0E01               	movlw	1
  8700  000D04  0100               	movlb	0	; () banked
  8701  000D06  6FB5               	movwf	___fladd@aexp& (0+255),b
  8702  000D08                     l990:
  8703                           
  8704                           ; BSR set to: 0
  8705  000D08  0100               	movlb	0	; () banked
  8706  000D0A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8707  000D0C  0100               	movlb	0	; () banked
  8708  000D0E  B4D8               	btfsc	status,2,c
  8709  000D10  D026               	goto	l4474
  8710                           
  8711                           ; BSR set to: 0
  8712  000D12  0E01               	movlw	1
  8713  000D14  0100               	movlb	0	; () banked
  8714  000D16  27A4               	addwf	___fladd@b& (0+255),f,b
  8715  000D18  0E00               	movlw	0
  8716  000D1A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8717  000D1C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8718  000D1E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8719                           
  8720                           ; BSR set to: 0
  8721  000D20  0100               	movlb	0	; () banked
  8722  000D22  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8723  000D24  D01C               	goto	l4474
  8724                           
  8725                           ; BSR set to: 0
  8726  000D26  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8727  000D2A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8728  000D2E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8729  000D32  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8730  000D36  0100               	movlb	0	; () banked
  8731  000D38  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8732  000D3A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8733  000D3C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8734  000D3E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8735  000D40  33AC               	rrcf	??___fladd& (0+255),f,b
  8736  000D42  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8737  000D46  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8738  000D4A  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8739  000D4E  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8740  000D52  0100               	movlb	0	; () banked
  8741  000D54  29B6               	incf	___fladd@bexp& (0+255),w,b
  8742  000D56  B4D8               	btfsc	status,2,c
  8743  000D58  D002               	goto	l4474
  8744                           
  8745                           ; BSR set to: 0
  8746  000D5A  0100               	movlb	0	; () banked
  8747  000D5C  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8748  000D5E                     l4474:
  8749                           
  8750                           ; BSR set to: 0
  8751  000D5E  0100               	movlb	0	; () banked
  8752  000D60  29B6               	incf	___fladd@bexp& (0+255),w,b
  8753  000D62  B4D8               	btfsc	status,2,c
  8754  000D64  D005               	goto	l4478
  8755                           
  8756                           ; BSR set to: 0
  8757  000D66  0100               	movlb	0	; () banked
  8758  000D68  51B6               	movf	___fladd@bexp& (0+255),w,b
  8759  000D6A  0100               	movlb	0	; () banked
  8760  000D6C  A4D8               	btfss	status,2,c
  8761  000D6E  D011               	goto	l4482
  8762  000D70                     l4478:
  8763                           
  8764                           ; BSR set to: 0
  8765  000D70  0E00               	movlw	0
  8766  000D72  0100               	movlb	0	; () banked
  8767  000D74  6FA4               	movwf	___fladd@b& (0+255),b
  8768  000D76  0E00               	movlw	0
  8769  000D78  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8770  000D7A  0E00               	movlw	0
  8771  000D7C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8772  000D7E  0E00               	movlw	0
  8773  000D80  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8774  000D82  0100               	movlb	0	; () banked
  8775  000D84  51B6               	movf	___fladd@bexp& (0+255),w,b
  8776  000D86  0100               	movlb	0	; () banked
  8777  000D88  A4D8               	btfss	status,2,c
  8778  000D8A  D003               	goto	l4482
  8779                           
  8780                           ; BSR set to: 0
  8781  000D8C  0E00               	movlw	0
  8782  000D8E  0100               	movlb	0	; () banked
  8783  000D90  6FB4               	movwf	___fladd@signs& (0+255),b
  8784  000D92                     l4482:
  8785                           
  8786                           ; BSR set to: 0
  8787  000D92  0100               	movlb	0	; () banked
  8788  000D94  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8789  000D96  D003               	goto	l4486
  8790                           
  8791                           ; BSR set to: 0
  8792  000D98  0100               	movlb	0	; () banked
  8793  000D9A  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8794  000D9C  D002               	goto	l4488
  8795  000D9E                     l4486:
  8796                           
  8797                           ; BSR set to: 0
  8798  000D9E  0100               	movlb	0	; () banked
  8799  000DA0  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8800  000DA2                     l4488:
  8801                           
  8802                           ; BSR set to: 0
  8803  000DA2  0100               	movlb	0	; () banked
  8804  000DA4  90D8               	bcf	status,0,c
  8805  000DA6  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8806  000DA8  0100               	movlb	0	; () banked
  8807  000DAA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8808                           
  8809                           ; BSR set to: 0
  8810  000DAC  0100               	movlb	0	; () banked
  8811  000DAE  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8812  000DB0  D002               	goto	l4494
  8813                           
  8814                           ; BSR set to: 0
  8815  000DB2  0100               	movlb	0	; () banked
  8816  000DB4  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8817  000DB6                     l4494:
  8818                           
  8819                           ; BSR set to: 0
  8820  000DB6  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8821  000DBA  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8822  000DBE  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8823  000DC2  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8824  000DC6  0012               	return	
  8825  000DC8                     __end_of___fladd:
  8826                           	opt stack 0
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           intcon	equ	0xFF2
  8834                           postinc0	equ	0xFEE
  8835                           wreg	equ	0xFE8
  8836                           indf2	equ	0xFDF
  8837                           postinc2	equ	0xFDE
  8838                           fsr2h	equ	0xFDA
  8839                           fsr2l	equ	0xFD9
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function ___flneg *****************
  8843 ;; Defined at:
  8844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  f1              4   24[COMRAM] unsigned char 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  4   24[COMRAM] unsigned char 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8858 ;;      Params:         4       0       0       0
  8859 ;;      Locals:         0       0       0       0
  8860 ;;      Temps:          0       0       0       0
  8861 ;;      Totals:         4       0       0       0
  8862 ;;Total ram usage:        4 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    4
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_sprintf
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text27
  8873  002F0A                     __ptext27:
  8874                           	opt stack 0
  8875  002F0A                     ___flneg:
  8876                           	opt stack 24
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;incstack = 0
  8880  002F0A  503C               	movf	___flneg@f1,w,c
  8881  002F0C  103D               	iorwf	___flneg@f1+1,w,c
  8882  002F0E  103E               	iorwf	___flneg@f1+2,w,c
  8883  002F10  103F               	iorwf	___flneg@f1+3,w,c
  8884  002F12  B4D8               	btfsc	status,2,c
  8885  002F14  D008               	goto	l4950
  8886  002F16  0E00               	movlw	0
  8887  002F18  1A3C               	xorwf	___flneg@f1,f,c
  8888  002F1A  0E00               	movlw	0
  8889  002F1C  1A3D               	xorwf	___flneg@f1+1,f,c
  8890  002F1E  0E00               	movlw	0
  8891  002F20  1A3E               	xorwf	___flneg@f1+2,f,c
  8892  002F22  0E80               	movlw	128
  8893  002F24  1A3F               	xorwf	___flneg@f1+3,f,c
  8894  002F26                     l4950:
  8895  002F26  C03C  F03C         	movff	___flneg@f1,?___flneg
  8896  002F2A  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8897  002F2E  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8898  002F32  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8899  002F36  0012               	return	
  8900  002F38                     __end_of___flneg:
  8901                           	opt stack 0
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           postinc0	equ	0xFEE
  8910                           wreg	equ	0xFE8
  8911                           indf2	equ	0xFDF
  8912                           postinc2	equ	0xFDE
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8
  8916                           
  8917 ;; *************** function ___flge *****************
  8918 ;; Defined at:
  8919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  ff1             4   16[BANK0 ] unsigned char 
  8922 ;;  ff2             4   20[BANK0 ] unsigned char 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;		None               void
  8927 ;; Registers used:
  8928 ;;		wreg, status,2, status,0
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8934 ;;      Params:         0       8       0       0
  8935 ;;      Locals:         0       0       0       0
  8936 ;;      Temps:          4       0       0       0
  8937 ;;      Totals:         4       8       0       0
  8938 ;;Total ram usage:       12 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    4
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_sprintf
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text28
  8949  002364                     __ptext28:
  8950                           	opt stack 0
  8951  002364                     ___flge:
  8952                           	opt stack 24
  8953                           
  8954                           ;incstack = 0
  8955  002364  0E00               	movlw	0
  8956  002366  0100               	movlb	0	; () banked
  8957  002368  1570               	andwf	___flge@ff1& (0+255),w,b
  8958  00236A  6E3C               	movwf	??___flge& (0+255),c
  8959  00236C  0E00               	movlw	0
  8960  00236E  0100               	movlb	0	; () banked
  8961  002370  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  8962  002372  6E3D               	movwf	(??___flge+1)& (0+255),c
  8963  002374  0E80               	movlw	128
  8964  002376  0100               	movlb	0	; () banked
  8965  002378  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  8966  00237A  6E3E               	movwf	(??___flge+2)& (0+255),c
  8967  00237C  0E7F               	movlw	127
  8968  00237E  0100               	movlb	0	; () banked
  8969  002380  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  8970  002382  6E3F               	movwf	(??___flge+3)& (0+255),c
  8971  002384  503C               	movf	??___flge,w,c
  8972  002386  103D               	iorwf	??___flge+1,w,c
  8973  002388  103E               	iorwf	??___flge+2,w,c
  8974  00238A  103F               	iorwf	??___flge+3,w,c
  8975  00238C  A4D8               	btfss	status,2,c
  8976  00238E  D009               	goto	l4928
  8977                           
  8978                           ; BSR set to: 0
  8979  002390  0E00               	movlw	0
  8980  002392  0100               	movlb	0	; () banked
  8981  002394  6F70               	movwf	___flge@ff1& (0+255),b
  8982  002396  0E00               	movlw	0
  8983  002398  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8984  00239A  0E00               	movlw	0
  8985  00239C  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8986  00239E  0E00               	movlw	0
  8987  0023A0  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8988  0023A2                     l4928:
  8989                           
  8990                           ; BSR set to: 0
  8991  0023A2  0E00               	movlw	0
  8992  0023A4  0100               	movlb	0	; () banked
  8993  0023A6  1574               	andwf	___flge@ff2& (0+255),w,b
  8994  0023A8  6E3C               	movwf	??___flge& (0+255),c
  8995  0023AA  0E00               	movlw	0
  8996  0023AC  0100               	movlb	0	; () banked
  8997  0023AE  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  8998  0023B0  6E3D               	movwf	(??___flge+1)& (0+255),c
  8999  0023B2  0E80               	movlw	128
  9000  0023B4  0100               	movlb	0	; () banked
  9001  0023B6  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  9002  0023B8  6E3E               	movwf	(??___flge+2)& (0+255),c
  9003  0023BA  0E7F               	movlw	127
  9004  0023BC  0100               	movlb	0	; () banked
  9005  0023BE  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  9006  0023C0  6E3F               	movwf	(??___flge+3)& (0+255),c
  9007  0023C2  503C               	movf	??___flge,w,c
  9008  0023C4  103D               	iorwf	??___flge+1,w,c
  9009  0023C6  103E               	iorwf	??___flge+2,w,c
  9010  0023C8  103F               	iorwf	??___flge+3,w,c
  9011  0023CA  A4D8               	btfss	status,2,c
  9012  0023CC  D009               	goto	l4932
  9013                           
  9014                           ; BSR set to: 0
  9015  0023CE  0E00               	movlw	0
  9016  0023D0  0100               	movlb	0	; () banked
  9017  0023D2  6F74               	movwf	___flge@ff2& (0+255),b
  9018  0023D4  0E00               	movlw	0
  9019  0023D6  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9020  0023D8  0E00               	movlw	0
  9021  0023DA  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9022  0023DC  0E00               	movlw	0
  9023  0023DE  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9024  0023E0                     l4932:
  9025                           
  9026                           ; BSR set to: 0
  9027  0023E0  0100               	movlb	0	; () banked
  9028  0023E2  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  9029  0023E4  D021               	goto	l4936
  9030                           
  9031                           ; BSR set to: 0
  9032  0023E6  C070  F03C         	movff	___flge@ff1,??___flge
  9033  0023EA  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  9034  0023EE  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  9035  0023F2  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  9036  0023F6  1E3C               	comf	??___flge,f,c
  9037  0023F8  1E3D               	comf	??___flge+1,f,c
  9038  0023FA  1E3E               	comf	??___flge+2,f,c
  9039  0023FC  1E3F               	comf	??___flge+3,f,c
  9040  0023FE  2A3C               	incf	??___flge,f,c
  9041  002400  0E00               	movlw	0
  9042  002402  223D               	addwfc	??___flge+1,f,c
  9043  002404  223E               	addwfc	??___flge+2,f,c
  9044  002406  223F               	addwfc	??___flge+3,f,c
  9045  002408  0E00               	movlw	0
  9046  00240A  243C               	addwf	??___flge,w,c
  9047  00240C  0100               	movlb	0	; () banked
  9048  00240E  6F70               	movwf	___flge@ff1& (0+255),b
  9049  002410  0E00               	movlw	0
  9050  002412  203D               	addwfc	??___flge+1,w,c
  9051  002414  0100               	movlb	0	; () banked
  9052  002416  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  9053  002418  0E00               	movlw	0
  9054  00241A  203E               	addwfc	??___flge+2,w,c
  9055  00241C  0100               	movlb	0	; () banked
  9056  00241E  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  9057  002420  0E80               	movlw	128
  9058  002422  203F               	addwfc	??___flge+3,w,c
  9059  002424  0100               	movlb	0	; () banked
  9060  002426  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  9061  002428                     l4936:
  9062                           
  9063                           ; BSR set to: 0
  9064  002428  0100               	movlb	0	; () banked
  9065  00242A  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  9066  00242C  D021               	goto	l687
  9067                           
  9068                           ; BSR set to: 0
  9069  00242E  C074  F03C         	movff	___flge@ff2,??___flge
  9070  002432  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  9071  002436  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  9072  00243A  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  9073  00243E  1E3C               	comf	??___flge,f,c
  9074  002440  1E3D               	comf	??___flge+1,f,c
  9075  002442  1E3E               	comf	??___flge+2,f,c
  9076  002444  1E3F               	comf	??___flge+3,f,c
  9077  002446  2A3C               	incf	??___flge,f,c
  9078  002448  0E00               	movlw	0
  9079  00244A  223D               	addwfc	??___flge+1,f,c
  9080  00244C  223E               	addwfc	??___flge+2,f,c
  9081  00244E  223F               	addwfc	??___flge+3,f,c
  9082  002450  0E00               	movlw	0
  9083  002452  243C               	addwf	??___flge,w,c
  9084  002454  0100               	movlb	0	; () banked
  9085  002456  6F74               	movwf	___flge@ff2& (0+255),b
  9086  002458  0E00               	movlw	0
  9087  00245A  203D               	addwfc	??___flge+1,w,c
  9088  00245C  0100               	movlb	0	; () banked
  9089  00245E  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9090  002460  0E00               	movlw	0
  9091  002462  203E               	addwfc	??___flge+2,w,c
  9092  002464  0100               	movlb	0	; () banked
  9093  002466  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9094  002468  0E80               	movlw	128
  9095  00246A  203F               	addwfc	??___flge+3,w,c
  9096  00246C  0100               	movlb	0	; () banked
  9097  00246E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9098  002470                     l687:
  9099                           
  9100                           ; BSR set to: 0
  9101  002470  0E00               	movlw	0
  9102  002472  0100               	movlb	0	; () banked
  9103  002474  1B70               	xorwf	___flge@ff1& (0+255),f,b
  9104  002476  0E00               	movlw	0
  9105  002478  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9106  00247A  0E00               	movlw	0
  9107  00247C  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9108  00247E  0E80               	movlw	128
  9109  002480  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9110  002482  0E00               	movlw	0
  9111  002484  0100               	movlb	0	; () banked
  9112  002486  1B74               	xorwf	___flge@ff2& (0+255),f,b
  9113  002488  0E00               	movlw	0
  9114  00248A  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9115  00248C  0E00               	movlw	0
  9116  00248E  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9117  002490  0E80               	movlw	128
  9118  002492  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9119  002494  0100               	movlb	0	; () banked
  9120  002496  5174               	movf	___flge@ff2& (0+255),w,b
  9121  002498  0100               	movlb	0	; () banked
  9122  00249A  5D70               	subwf	___flge@ff1& (0+255),w,b
  9123  00249C  0100               	movlb	0	; () banked
  9124  00249E  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  9125  0024A0  0100               	movlb	0	; () banked
  9126  0024A2  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9127  0024A4  0100               	movlb	0	; () banked
  9128  0024A6  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  9129  0024A8  0100               	movlb	0	; () banked
  9130  0024AA  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9131  0024AC  0100               	movlb	0	; () banked
  9132  0024AE  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  9133  0024B0  0100               	movlb	0	; () banked
  9134  0024B2  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9135  0024B4  B0D8               	btfsc	status,0,c
  9136  0024B6  D002               	goto	l4942
  9137                           
  9138                           ; BSR set to: 0
  9139  0024B8  90D8               	bcf	status,0,c
  9140  0024BA  0012               	return	
  9141  0024BC                     l4942:
  9142                           
  9143                           ; BSR set to: 0
  9144  0024BC  80D8               	bsf	status,0,c
  9145                           
  9146                           ; BSR set to: 0
  9147  0024BE  0012               	return	
  9148  0024C0                     __end_of___flge:
  9149                           	opt stack 0
  9150                           tblptru	equ	0xFF8
  9151                           tblptrh	equ	0xFF7
  9152                           tblptrl	equ	0xFF6
  9153                           tablat	equ	0xFF5
  9154                           prodh	equ	0xFF4
  9155                           prodl	equ	0xFF3
  9156                           intcon	equ	0xFF2
  9157                           postinc0	equ	0xFEE
  9158                           wreg	equ	0xFE8
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           fsr2h	equ	0xFDA
  9162                           fsr2l	equ	0xFD9
  9163                           status	equ	0xFD8
  9164                           
  9165 ;; *************** function ___lwdiv *****************
  9166 ;; Defined at:
  9167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  dividend        2   24[COMRAM] unsigned int 
  9170 ;;  divisor         2   26[COMRAM] unsigned int 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  quotient        2   28[COMRAM] unsigned int 
  9173 ;;  counter         1   30[COMRAM] unsigned char 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  2   24[COMRAM] unsigned int 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9183 ;;      Params:         4       0       0       0
  9184 ;;      Locals:         3       0       0       0
  9185 ;;      Temps:          0       0       0       0
  9186 ;;      Totals:         7       0       0       0
  9187 ;;Total ram usage:        7 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    4
  9190 ;; This function calls:
  9191 ;;		Nothing
  9192 ;; This function is called by:
  9193 ;;		_LCD_Handler
  9194 ;;		_utoa
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text29
  9199  002CE2                     __ptext29:
  9200                           	opt stack 0
  9201  002CE2                     ___lwdiv:
  9202                           	opt stack 25
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;incstack = 0
  9206  002CE2  0E00               	movlw	0
  9207  002CE4  6E41               	movwf	___lwdiv@quotient+1,c
  9208  002CE6  0E00               	movlw	0
  9209  002CE8  6E40               	movwf	___lwdiv@quotient,c
  9210  002CEA  503E               	movf	___lwdiv@divisor,w,c
  9211  002CEC  103F               	iorwf	___lwdiv@divisor+1,w,c
  9212  002CEE  B4D8               	btfsc	status,2,c
  9213  002CF0  D01C               	goto	l923
  9214  002CF2  0E01               	movlw	1
  9215  002CF4  6E42               	movwf	___lwdiv@counter,c
  9216  002CF6  D004               	goto	l3868
  9217  002CF8                     l3866:
  9218  002CF8  90D8               	bcf	status,0,c
  9219  002CFA  363E               	rlcf	___lwdiv@divisor,f,c
  9220  002CFC  363F               	rlcf	___lwdiv@divisor+1,f,c
  9221  002CFE  2A42               	incf	___lwdiv@counter,f,c
  9222  002D00                     l3868:
  9223  002D00  AE3F               	btfss	___lwdiv@divisor+1,7,c
  9224  002D02  D7FA               	goto	l3866
  9225  002D04                     l3870:
  9226  002D04  90D8               	bcf	status,0,c
  9227  002D06  3640               	rlcf	___lwdiv@quotient,f,c
  9228  002D08  3641               	rlcf	___lwdiv@quotient+1,f,c
  9229  002D0A  503E               	movf	___lwdiv@divisor,w,c
  9230  002D0C  5C3C               	subwf	___lwdiv@dividend,w,c
  9231  002D0E  503F               	movf	___lwdiv@divisor+1,w,c
  9232  002D10  583D               	subwfb	___lwdiv@dividend+1,w,c
  9233  002D12  A0D8               	btfss	status,0,c
  9234  002D14  D005               	goto	l3878
  9235  002D16  503E               	movf	___lwdiv@divisor,w,c
  9236  002D18  5E3C               	subwf	___lwdiv@dividend,f,c
  9237  002D1A  503F               	movf	___lwdiv@divisor+1,w,c
  9238  002D1C  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  9239  002D1E  8040               	bsf	___lwdiv@quotient,0,c
  9240  002D20                     l3878:
  9241  002D20  90D8               	bcf	status,0,c
  9242  002D22  323F               	rrcf	___lwdiv@divisor+1,f,c
  9243  002D24  323E               	rrcf	___lwdiv@divisor,f,c
  9244  002D26  2E42               	decfsz	___lwdiv@counter,f,c
  9245  002D28  D7ED               	goto	l3870
  9246  002D2A                     l923:
  9247  002D2A  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  9248  002D2E  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9249  002D32  0012               	return		;funcret
  9250  002D34                     __end_of___lwdiv:
  9251                           	opt stack 0
  9252                           tblptru	equ	0xFF8
  9253                           tblptrh	equ	0xFF7
  9254                           tblptrl	equ	0xFF6
  9255                           tablat	equ	0xFF5
  9256                           prodh	equ	0xFF4
  9257                           prodl	equ	0xFF3
  9258                           intcon	equ	0xFF2
  9259                           postinc0	equ	0xFEE
  9260                           wreg	equ	0xFE8
  9261                           indf2	equ	0xFDF
  9262                           postinc2	equ	0xFDE
  9263                           fsr2h	equ	0xFDA
  9264                           fsr2l	equ	0xFD9
  9265                           status	equ	0xFD8
  9266                           
  9267 ;; *************** function _LCD_write_string *****************
  9268 ;; Defined at:
  9269 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  9272 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;		None               void
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9284 ;;      Params:         0       2       0       0
  9285 ;;      Locals:         0       0       0       0
  9286 ;;      Temps:          0       0       0       0
  9287 ;;      Totals:         0       2       0       0
  9288 ;;Total ram usage:        2 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    9
  9291 ;; This function calls:
  9292 ;;		_LCD_write_char
  9293 ;; This function is called by:
  9294 ;;		_LCD_Handler
  9295 ;;		_LCD_write_integer
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text30
  9300  002FE2                     __ptext30:
  9301                           	opt stack 0
  9302  002FE2                     _LCD_write_string:
  9303                           	opt stack 20
  9304                           
  9305                           ;src\LCD_44780.c: 197: while(*buffer){
  9306                           
  9307                           ;incstack = 0
  9308  002FE2  D00A               	goto	l5112
  9309  002FE4                     l5108:
  9310                           
  9311                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9312  002FE4  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9313  002FE8  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9314  002FEC  50DF               	movf	indf2,w,c
  9315  002FEE  EC74  F015         	call	_LCD_write_char
  9316                           
  9317                           ;src\LCD_44780.c: 202: buffer++;
  9318  002FF2  0100               	movlb	0	; () banked
  9319  002FF4  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9320  002FF6  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9321  002FF8                     l5112:
  9322  002FF8  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9323  002FFC  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9324  003000  50DF               	movf	indf2,w,c
  9325  003002  B4D8               	btfsc	status,2,c
  9326  003004  0012               	return	
  9327  003006  D7EE               	goto	l5108
  9328  003008                     __end_of_LCD_write_string:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           intcon	equ	0xFF2
  9337                           postinc0	equ	0xFEE
  9338                           wreg	equ	0xFE8
  9339                           indf2	equ	0xFDF
  9340                           postinc2	equ	0xFDE
  9341                           fsr2h	equ	0xFDA
  9342                           fsr2l	equ	0xFD9
  9343                           status	equ	0xFD8
  9344                           
  9345 ;; *************** function _LCD_write_message *****************
  9346 ;; Defined at:
  9347 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  9350 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9351 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9352 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9364 ;;      Params:         0       2       0       0
  9365 ;;      Locals:         0       0       0       0
  9366 ;;      Temps:          0       0       0       0
  9367 ;;      Totals:         0       2       0       0
  9368 ;;Total ram usage:        2 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    9
  9371 ;; This function calls:
  9372 ;;		_LCD_write_char
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;;		_LCD_Handler
  9376 ;;		_board_initialization
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text31
  9381  002F64                     __ptext31:
  9382                           	opt stack 0
  9383  002F64                     _LCD_write_message:
  9384                           	opt stack 20
  9385                           
  9386                           ;src\LCD_44780.c: 181: while(*buffer) {
  9387                           
  9388                           ;incstack = 0
  9389  002F64  D00B               	goto	l5104
  9390  002F66                     l5100:
  9391                           
  9392                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9393  002F66  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9394  002F6A  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9395  002F6E                     	if	0	;tblptru may be non-zero
  9396  002F6E                     	endif
  9397  002F6E                     	if	0	;tblptru may be non-zero
  9398  002F6E                     	endif
  9399  002F6E  0008               	tblrd		*
  9400  002F70  50F5               	movf	tablat,w,c
  9401  002F72  EC74  F015         	call	_LCD_write_char
  9402                           
  9403                           ;src\LCD_44780.c: 186: buffer++;
  9404  002F76  0100               	movlb	0	; () banked
  9405  002F78  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9406  002F7A  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9407  002F7C                     l5104:
  9408  002F7C  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9409  002F80  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9410  002F84                     	if	0	;tblptru may be non-zero
  9411  002F84                     	endif
  9412  002F84                     	if	0	;tblptru may be non-zero
  9413  002F84                     	endif
  9414  002F84  0008               	tblrd		*
  9415  002F86  50F5               	movf	tablat,w,c
  9416  002F88  0900               	iorlw	0
  9417  002F8A  B4D8               	btfsc	status,2,c
  9418  002F8C  0012               	return	
  9419  002F8E  D7EB               	goto	l5100
  9420  002F90                     __end_of_LCD_write_message:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           postinc0	equ	0xFEE
  9430                           wreg	equ	0xFE8
  9431                           indf2	equ	0xFDF
  9432                           postinc2	equ	0xFDE
  9433                           fsr2h	equ	0xFDA
  9434                           fsr2l	equ	0xFD9
  9435                           status	equ	0xFD8
  9436                           
  9437 ;; *************** function _LCD_write_char *****************
  9438 ;; Defined at:
  9439 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  value           1    wreg     unsigned char 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  value           1   25[BANK0 ] unsigned char 
  9444 ;;  D0              1   24[BANK0 ] unsigned char 
  9445 ;;  D1              1   23[BANK0 ] unsigned char 
  9446 ;;  D2              1   22[BANK0 ] unsigned char 
  9447 ;;  D3              1   21[BANK0 ] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;		None               void
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9457 ;;      Params:         0       0       0       0
  9458 ;;      Locals:         0       5       0       0
  9459 ;;      Temps:          0       0       0       0
  9460 ;;      Totals:         0       5       0       0
  9461 ;;Total ram usage:        5 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    8
  9464 ;; This function calls:
  9465 ;;		_LCD_send_command
  9466 ;; This function is called by:
  9467 ;;		_LCD_write_message
  9468 ;;		_LCD_write_string
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text32
  9473  002AE8                     __ptext32:
  9474                           	opt stack 0
  9475  002AE8                     _LCD_write_char:
  9476                           	opt stack 20
  9477                           
  9478                           ;incstack = 0
  9479                           ;LCD_write_char@value stored from wreg
  9480  002AE8  0100               	movlb	0	; () banked
  9481  002AEA  6F79               	movwf	LCD_write_char@value& (0+255),b
  9482                           
  9483                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9484                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  9485  002AEC  828A               	bsf	3978,1,c	;volatile
  9486                           
  9487                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9488  002AEE  0100               	movlb	0	; () banked
  9489  002AF0  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9490  002AF2  0B01               	andlw	1
  9491  002AF4  0100               	movlb	0	; () banked
  9492  002AF6  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9493                           
  9494                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9495  002AF8  0100               	movlb	0	; () banked
  9496  002AFA  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9497  002AFC  46E8               	rlncf	wreg,f,c
  9498  002AFE  0B03               	andlw	3
  9499  002B00  0B01               	andlw	1
  9500  002B02  0100               	movlb	0	; () banked
  9501  002B04  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9502                           
  9503                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9504  002B06  0100               	movlb	0	; () banked
  9505  002B08  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9506  002B0A  42E8               	rrncf	wreg,f,c
  9507  002B0C  0B07               	andlw	7
  9508  002B0E  0B01               	andlw	1
  9509  002B10  0100               	movlb	0	; () banked
  9510  002B12  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9511                           
  9512                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9513  002B14  0100               	movlb	0	; () banked
  9514  002B16  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9515  002B18  0B0F               	andlw	15
  9516  002B1A  0B01               	andlw	1
  9517  002B1C  0100               	movlb	0	; () banked
  9518  002B1E  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9522  002B20  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9523  002B24  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9524  002B28  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9525  002B2C  0100               	movlb	0	; () banked
  9526  002B2E  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9527  002B30  EC05  F017         	call	_LCD_send_command
  9528                           
  9529                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9530  002B34  0100               	movlb	0	; () banked
  9531  002B36  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9532  002B38  46E8               	rlncf	wreg,f,c
  9533  002B3A  0B1F               	andlw	31
  9534  002B3C  0B01               	andlw	1
  9535  002B3E  0100               	movlb	0	; () banked
  9536  002B40  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9540  002B42  0100               	movlb	0	; () banked
  9541  002B44  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9542  002B46  42E8               	rrncf	wreg,f,c
  9543  002B48  0B3F               	andlw	63
  9544  002B4A  0B01               	andlw	1
  9545  002B4C  0100               	movlb	0	; () banked
  9546  002B4E  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9550  002B50  0100               	movlb	0	; () banked
  9551  002B52  90D8               	bcf	status,0,c
  9552  002B54  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9553  002B56  0B01               	andlw	1
  9554  002B58  0100               	movlb	0	; () banked
  9555  002B5A  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9559  002B5C  0100               	movlb	0	; () banked
  9560  002B5E  5179               	movf	LCD_write_char@value& (0+255),w,b
  9561  002B60  0B01               	andlw	1
  9562  002B62  0100               	movlb	0	; () banked
  9563  002B64  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9567  002B66  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9568  002B6A  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9569  002B6E  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9570  002B72  0100               	movlb	0	; () banked
  9571  002B74  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9572  002B76  EC05  F017         	call	_LCD_send_command
  9573                           
  9574                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  9575  002B7A  928A               	bcf	3978,1,c	;volatile
  9576  002B7C  0012               	return		;funcret
  9577  002B7E                     __end_of_LCD_write_char:
  9578                           	opt stack 0
  9579                           tblptru	equ	0xFF8
  9580                           tblptrh	equ	0xFF7
  9581                           tblptrl	equ	0xFF6
  9582                           tablat	equ	0xFF5
  9583                           prodh	equ	0xFF4
  9584                           prodl	equ	0xFF3
  9585                           intcon	equ	0xFF2
  9586                           postinc0	equ	0xFEE
  9587                           wreg	equ	0xFE8
  9588                           indf2	equ	0xFDF
  9589                           postinc2	equ	0xFDE
  9590                           fsr2h	equ	0xFDA
  9591                           fsr2l	equ	0xFD9
  9592                           status	equ	0xFD8
  9593                           
  9594 ;; *************** function _LCD_goto_line *****************
  9595 ;; Defined at:
  9596 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  line            1    wreg     unsigned char 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  line            1   21[BANK0 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;		None               void
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9610 ;;      Params:         0       0       0       0
  9611 ;;      Locals:         0       1       0       0
  9612 ;;      Temps:          0       0       0       0
  9613 ;;      Totals:         0       1       0       0
  9614 ;;Total ram usage:        1 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    8
  9617 ;; This function calls:
  9618 ;;		_LCD_send_command
  9619 ;; This function is called by:
  9620 ;;		_main
  9621 ;;		_LCD_Handler
  9622 ;;		_board_initialization
  9623 ;;		_LCD_goto_xy
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text33
  9628  0026E2                     __ptext33:
  9629                           	opt stack 0
  9630  0026E2                     _LCD_goto_line:
  9631                           	opt stack 21
  9632                           
  9633                           ;incstack = 0
  9634                           ;LCD_goto_line@line stored from wreg
  9635  0026E2  0100               	movlb	0	; () banked
  9636  0026E4  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9637                           
  9638                           ;src\LCD_44780.c: 113: switch(line) {
  9639  0026E6  D064               	goto	l5096
  9640  0026E8                     l5088:
  9641  0026E8  0E00               	movlw	0
  9642  0026EA  0100               	movlb	0	; () banked
  9643  0026EC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9644  0026EE  0E00               	movlw	0
  9645  0026F0  0100               	movlb	0	; () banked
  9646  0026F2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9647  0026F4  0E00               	movlw	0
  9648  0026F6  0100               	movlb	0	; () banked
  9649  0026F8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9650  0026FA  0E01               	movlw	1
  9651  0026FC  EC05  F017         	call	_LCD_send_command
  9652                           
  9653                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9654  002700  0E00               	movlw	0
  9655  002702  0100               	movlb	0	; () banked
  9656  002704  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9657  002706  0E00               	movlw	0
  9658  002708  0100               	movlb	0	; () banked
  9659  00270A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9660  00270C  0E00               	movlw	0
  9661  00270E  0100               	movlb	0	; () banked
  9662  002710  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9663  002712  0E00               	movlw	0
  9664  002714  EC05  F017         	call	_LCD_send_command
  9665                           
  9666                           ;src\LCD_44780.c: 117: break;
  9667  002718  0012               	return	
  9668  00271A                     l5090:
  9669  00271A  0E01               	movlw	1
  9670  00271C  0100               	movlb	0	; () banked
  9671  00271E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9672  002720  0E00               	movlw	0
  9673  002722  0100               	movlb	0	; () banked
  9674  002724  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9675  002726  0E00               	movlw	0
  9676  002728  0100               	movlb	0	; () banked
  9677  00272A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9678  00272C  0E01               	movlw	1
  9679  00272E  EC05  F017         	call	_LCD_send_command
  9680                           
  9681                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9682  002732  0E00               	movlw	0
  9683  002734  0100               	movlb	0	; () banked
  9684  002736  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9685  002738  0E00               	movlw	0
  9686  00273A  0100               	movlb	0	; () banked
  9687  00273C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9688  00273E  0E00               	movlw	0
  9689  002740  0100               	movlb	0	; () banked
  9690  002742  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9691  002744  0E00               	movlw	0
  9692  002746  EC05  F017         	call	_LCD_send_command
  9693                           
  9694                           ;src\LCD_44780.c: 121: break;
  9695  00274A  0012               	return	
  9696  00274C                     l5092:
  9697  00274C  0E00               	movlw	0
  9698  00274E  0100               	movlb	0	; () banked
  9699  002750  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9700  002752  0E00               	movlw	0
  9701  002754  0100               	movlb	0	; () banked
  9702  002756  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9703  002758  0E01               	movlw	1
  9704  00275A  0100               	movlb	0	; () banked
  9705  00275C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9706  00275E  0E01               	movlw	1
  9707  002760  EC05  F017         	call	_LCD_send_command
  9708                           
  9709                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9710  002764  0E01               	movlw	1
  9711  002766  0100               	movlb	0	; () banked
  9712  002768  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9713  00276A  0E00               	movlw	0
  9714  00276C  0100               	movlb	0	; () banked
  9715  00276E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9716  002770  0E00               	movlw	0
  9717  002772  0100               	movlb	0	; () banked
  9718  002774  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9719  002776  0E00               	movlw	0
  9720  002778  EC05  F017         	call	_LCD_send_command
  9721                           
  9722                           ;src\LCD_44780.c: 125: break;
  9723  00277C  0012               	return	
  9724  00277E                     l5094:
  9725  00277E  0E01               	movlw	1
  9726  002780  0100               	movlb	0	; () banked
  9727  002782  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9728  002784  0E00               	movlw	0
  9729  002786  0100               	movlb	0	; () banked
  9730  002788  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9731  00278A  0E01               	movlw	1
  9732  00278C  0100               	movlb	0	; () banked
  9733  00278E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9734  002790  0E01               	movlw	1
  9735  002792  EC05  F017         	call	_LCD_send_command
  9736                           
  9737                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9738  002796  0E01               	movlw	1
  9739  002798  0100               	movlb	0	; () banked
  9740  00279A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9741  00279C  0E00               	movlw	0
  9742  00279E  0100               	movlb	0	; () banked
  9743  0027A0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9744  0027A2  0E00               	movlw	0
  9745  0027A4  0100               	movlb	0	; () banked
  9746  0027A6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9747  0027A8  0E00               	movlw	0
  9748  0027AA  EC05  F017         	call	_LCD_send_command
  9749                           
  9750                           ;src\LCD_44780.c: 129: }
  9751  0027AE  0012               	return	
  9752  0027B0                     l5096:
  9753  0027B0  0100               	movlb	0	; () banked
  9754  0027B2  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9755                           
  9756                           ; Switch size 1, requested type "space"
  9757                           ; Number of cases is 4, Range of values is 1 to 4
  9758                           ; switch strategies available:
  9759                           ; Name         Instructions Cycles
  9760                           ; simple_byte           13     7 (average)
  9761                           ;	Chosen strategy is simple_byte
  9762  0027B4  0A01               	xorlw	1	; case 1
  9763  0027B6  B4D8               	btfsc	status,2,c
  9764  0027B8  D797               	goto	l5088
  9765  0027BA  0A03               	xorlw	3	; case 2
  9766  0027BC  B4D8               	btfsc	status,2,c
  9767  0027BE  D7AD               	goto	l5090
  9768  0027C0  0A01               	xorlw	1	; case 3
  9769  0027C2  B4D8               	btfsc	status,2,c
  9770  0027C4  D7C3               	goto	l5092
  9771  0027C6  0A07               	xorlw	7	; case 4
  9772  0027C8  A4D8               	btfss	status,2,c
  9773  0027CA  0012               	return	
  9774  0027CC  D7D8               	goto	l5094
  9775  0027CE                     __end_of_LCD_goto_line:
  9776                           	opt stack 0
  9777                           tblptru	equ	0xFF8
  9778                           tblptrh	equ	0xFF7
  9779                           tblptrl	equ	0xFF6
  9780                           tablat	equ	0xFF5
  9781                           prodh	equ	0xFF4
  9782                           prodl	equ	0xFF3
  9783                           intcon	equ	0xFF2
  9784                           postinc0	equ	0xFEE
  9785                           wreg	equ	0xFE8
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           fsr2h	equ	0xFDA
  9789                           fsr2l	equ	0xFD9
  9790                           status	equ	0xFD8
  9791                           
  9792 ;; *************** function _LCD_clear *****************
  9793 ;; Defined at:
  9794 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;		None               void
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9808 ;;      Params:         0       0       0       0
  9809 ;;      Locals:         0       0       0       0
  9810 ;;      Temps:          0       0       0       0
  9811 ;;      Totals:         0       0       0       0
  9812 ;;Total ram usage:        0 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    8
  9815 ;; This function calls:
  9816 ;;		_LCD_send_command
  9817 ;; This function is called by:
  9818 ;;		_LCD_initialize
  9819 ;;		_main
  9820 ;;		_LCD_Handler
  9821 ;;		_board_initialization
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text34
  9826  002EA6                     __ptext34:
  9827                           	opt stack 0
  9828  002EA6                     _LCD_clear:
  9829                           	opt stack 20
  9830                           
  9831                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9832                           
  9833                           ;incstack = 0
  9834  002EA6  0E00               	movlw	0
  9835  002EA8  0100               	movlb	0	; () banked
  9836  002EAA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9837  002EAC  0E00               	movlw	0
  9838  002EAE  0100               	movlb	0	; () banked
  9839  002EB0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9840  002EB2  0E00               	movlw	0
  9841  002EB4  0100               	movlb	0	; () banked
  9842  002EB6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9843  002EB8  0E00               	movlw	0
  9844  002EBA  EC05  F017         	call	_LCD_send_command
  9845                           
  9846                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9847  002EBE  0E00               	movlw	0
  9848  002EC0  0100               	movlb	0	; () banked
  9849  002EC2  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9850  002EC4  0E00               	movlw	0
  9851  002EC6  0100               	movlb	0	; () banked
  9852  002EC8  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9853  002ECA  0E01               	movlw	1
  9854  002ECC  0100               	movlb	0	; () banked
  9855  002ECE  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9856  002ED0  0E00               	movlw	0
  9857  002ED2  EC05  F017         	call	_LCD_send_command
  9858  002ED6  0012               	return		;funcret
  9859  002ED8                     __end_of_LCD_clear:
  9860                           	opt stack 0
  9861                           tblptru	equ	0xFF8
  9862                           tblptrh	equ	0xFF7
  9863                           tblptrl	equ	0xFF6
  9864                           tablat	equ	0xFF5
  9865                           prodh	equ	0xFF4
  9866                           prodl	equ	0xFF3
  9867                           intcon	equ	0xFF2
  9868                           postinc0	equ	0xFEE
  9869                           wreg	equ	0xFE8
  9870                           indf2	equ	0xFDF
  9871                           postinc2	equ	0xFDE
  9872                           fsr2h	equ	0xFDA
  9873                           fsr2l	equ	0xFD9
  9874                           status	equ	0xFD8
  9875                           
  9876 ;; *************** function _LCD_send_command *****************
  9877 ;; Defined at:
  9878 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  D3              1    wreg     unsigned char 
  9881 ;;  D2              1   18[BANK0 ] unsigned char 
  9882 ;;  D1              1   19[BANK0 ] unsigned char 
  9883 ;;  D0              1   20[BANK0 ] unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  D3              1   30[COMRAM] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;		None               void
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9895 ;;      Params:         0       3       0       0
  9896 ;;      Locals:         1       0       0       0
  9897 ;;      Temps:          0       0       0       0
  9898 ;;      Totals:         1       3       0       0
  9899 ;;Total ram usage:        4 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    7
  9902 ;; This function calls:
  9903 ;;		_LCD_enable_pulse
  9904 ;; This function is called by:
  9905 ;;		_LCD_goto_line
  9906 ;;		_LCD_write_char
  9907 ;;		_LCD_clear
  9908 ;;		_LCD_cursor
  9909 ;;		_LCD_initialize
  9910 ;;		_LCD_home
  9911 ;;		_LCD_shift
  9912 ;;		_LCD_shift_cursor
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text35
  9917  002E0A                     __ptext35:
  9918                           	opt stack 0
  9919  002E0A                     _LCD_send_command:
  9920                           	opt stack 20
  9921                           
  9922                           ;incstack = 0
  9923                           ;LCD_send_command@D3 stored from wreg
  9924  002E0A  6E42               	movwf	LCD_send_command@D3,c
  9925                           
  9926                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  9927  002E0C  0100               	movlb	0	; () banked
  9928  002E0E  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
  9929  002E10  D002               	bra	u4625
  9930  002E12  988A               	bcf	3978,4,c	;volatile
  9931  002E14  D001               	bra	u4626
  9932  002E16                     u4625:
  9933  002E16  888A               	bsf	3978,4,c	;volatile
  9934  002E18                     u4626:
  9935                           
  9936                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  9937  002E18  0100               	movlb	0	; () banked
  9938  002E1A  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
  9939  002E1C  D002               	bra	u4635
  9940  002E1E  9A8A               	bcf	3978,5,c	;volatile
  9941  002E20  D001               	bra	u4636
  9942  002E22                     u4635:
  9943  002E22  8A8A               	bsf	3978,5,c	;volatile
  9944  002E24                     u4636:
  9945                           
  9946                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  9947  002E24  0100               	movlb	0	; () banked
  9948  002E26  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
  9949  002E28  D002               	bra	u4645
  9950  002E2A  9C8A               	bcf	3978,6,c	;volatile
  9951  002E2C  D001               	bra	u4646
  9952  002E2E                     u4645:
  9953  002E2E  8C8A               	bsf	3978,6,c	;volatile
  9954  002E30                     u4646:
  9955                           
  9956                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  9957  002E30  B042               	btfsc	LCD_send_command@D3,0,c
  9958  002E32  D002               	bra	u4655
  9959  002E34  9E8A               	bcf	3978,7,c	;volatile
  9960  002E36  D001               	bra	u4656
  9961  002E38                     u4655:
  9962  002E38  8E8A               	bsf	3978,7,c	;volatile
  9963  002E3A                     u4656:
  9964                           
  9965                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  9966  002E3A  EC17  F018         	call	_LCD_enable_pulse	;wreg free
  9967  002E3E  0012               	return		;funcret
  9968  002E40                     __end_of_LCD_send_command:
  9969                           	opt stack 0
  9970                           tblptru	equ	0xFF8
  9971                           tblptrh	equ	0xFF7
  9972                           tblptrl	equ	0xFF6
  9973                           tablat	equ	0xFF5
  9974                           prodh	equ	0xFF4
  9975                           prodl	equ	0xFF3
  9976                           intcon	equ	0xFF2
  9977                           postinc0	equ	0xFEE
  9978                           wreg	equ	0xFE8
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           fsr2h	equ	0xFDA
  9982                           fsr2l	equ	0xFD9
  9983                           status	equ	0xFD8
  9984                           
  9985 ;; *************** function _LCD_enable_pulse *****************
  9986 ;; Defined at:
  9987 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;		None               void
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10001 ;;      Params:         0       0       0       0
 10002 ;;      Locals:         0       0       0       0
 10003 ;;      Temps:          0       0       0       0
 10004 ;;      Totals:         0       0       0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    6
 10008 ;; This function calls:
 10009 ;;		_delay_ms
 10010 ;; This function is called by:
 10011 ;;		_LCD_send_command
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text36
 10016  00302E                     __ptext36:
 10017                           	opt stack 0
 10018  00302E                     _LCD_enable_pulse:
 10019                           	opt stack 20
 10020                           
 10021                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 10022                           
 10023                           ;incstack = 0
 10024  00302E  868A               	bsf	3978,3,c	;volatile
 10025                           
 10026                           ;src\LCD_44780.c: 52: delay_ms (1);
 10027  003030  0E00               	movlw	0
 10028  003032  0100               	movlb	0	; () banked
 10029  003034  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10030  003036  0E01               	movlw	1
 10031  003038  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10032  00303A  EC6C  F017         	call	_delay_ms	;wreg free
 10033                           
 10034                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 10035  00303E  968A               	bcf	3978,3,c	;volatile
 10036                           
 10037                           ;src\LCD_44780.c: 54: delay_ms (1);
 10038  003040  0E00               	movlw	0
 10039  003042  0100               	movlb	0	; () banked
 10040  003044  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10041  003046  0E01               	movlw	1
 10042  003048  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10043  00304A  EC6C  F017         	call	_delay_ms	;wreg free
 10044  00304E  0012               	return		;funcret
 10045  003050                     __end_of_LCD_enable_pulse:
 10046                           	opt stack 0
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           intcon	equ	0xFF2
 10054                           postinc0	equ	0xFEE
 10055                           wreg	equ	0xFE8
 10056                           indf2	equ	0xFDF
 10057                           postinc2	equ	0xFDE
 10058                           fsr2h	equ	0xFDA
 10059                           fsr2l	equ	0xFD9
 10060                           status	equ	0xFD8
 10061                           
 10062 ;; *************** function _delay_ms *****************
 10063 ;; Defined at:
 10064 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  value_ms        2   16[BANK0 ] unsigned int 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;		None               void
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10078 ;;      Params:         0       2       0       0
 10079 ;;      Locals:         0       0       0       0
 10080 ;;      Temps:          0       0       0       0
 10081 ;;      Totals:         0       2       0       0
 10082 ;;Total ram usage:        2 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    5
 10085 ;; This function calls:
 10086 ;;		___wmul
 10087 ;; This function is called by:
 10088 ;;		_delay_s
 10089 ;;		_LCD_enable_pulse
 10090 ;;		_LCD_initialize
 10091 ;;		_main
 10092 ;;		_board_initialization
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text37
 10097  002ED8                     __ptext37:
 10098                           	opt stack 0
 10099  002ED8                     _delay_ms:
 10100                           	opt stack 25
 10101                           
 10102                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10103                           
 10104                           ;incstack = 0
 10105  002ED8  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10106  002EDC  6A3D               	clrf	___wmul@multiplier+1,c
 10107  002EDE  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
 10108  002EE2  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10109  002EE6  EC04  F018         	call	___wmul	;wreg free
 10110  002EEA  C03C  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10111  002EEE  C03D  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10112                           
 10113                           ;src\delay.c: 75: while (clock_counter_reference) {
 10114  002EF2  D006               	goto	l95
 10115  002EF4                     l4280:
 10116                           
 10117                           ;src\delay.c: 85: _delay(240);
 10118  002EF4  0E50               	movlw	80
 10119  002EF6                     u6587:
 10120  002EF6  2EE8               	decfsz	wreg,f,c
 10121  002EF8  D7FE               	goto	u6587
 10122                           
 10123                           ;src\delay.c: 88: clock_counter_reference--;
 10124  002EFA  0644               	decf	_clock_counter_reference,f,c	;volatile
 10125  002EFC  A0D8               	btfss	status,0,c
 10126  002EFE  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10127  002F00                     l95:
 10128  002F00  5044               	movf	_clock_counter_reference,w,c	;volatile
 10129  002F02  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10130  002F04  B4D8               	btfsc	status,2,c
 10131  002F06  0012               	return	
 10132  002F08  D7F5               	goto	l4280
 10133  002F0A                     __end_of_delay_ms:
 10134                           	opt stack 0
 10135                           tblptru	equ	0xFF8
 10136                           tblptrh	equ	0xFF7
 10137                           tblptrl	equ	0xFF6
 10138                           tablat	equ	0xFF5
 10139                           prodh	equ	0xFF4
 10140                           prodl	equ	0xFF3
 10141                           intcon	equ	0xFF2
 10142                           postinc0	equ	0xFEE
 10143                           wreg	equ	0xFE8
 10144                           indf2	equ	0xFDF
 10145                           postinc2	equ	0xFDE
 10146                           fsr2h	equ	0xFDA
 10147                           fsr2l	equ	0xFD9
 10148                           status	equ	0xFD8
 10149                           
 10150 ;; *************** function ___wmul *****************
 10151 ;; Defined at:
 10152 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  multiplier      2   24[COMRAM] unsigned int 
 10155 ;;  multiplicand    2   26[COMRAM] unsigned int 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  product         2   28[COMRAM] unsigned int 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  2   24[COMRAM] unsigned int 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0, prodl, prodh
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10167 ;;      Params:         4       0       0       0
 10168 ;;      Locals:         2       0       0       0
 10169 ;;      Temps:          0       0       0       0
 10170 ;;      Totals:         6       0       0       0
 10171 ;;Total ram usage:        6 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    4
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_delay_ms
 10178 ;;		_sprintf
 10179 ;; This function uses a non-reentrant model
 10180 ;;
 10181                           
 10182                           	psect	text38
 10183  003008                     __ptext38:
 10184                           	opt stack 0
 10185  003008                     ___wmul:
 10186                           	opt stack 25
 10187                           
 10188                           ;incstack = 0
 10189  003008  503C               	movf	___wmul@multiplier,w,c
 10190  00300A  023E               	mulwf	___wmul@multiplicand,c
 10191  00300C  CFF3 F040          	movff	prodl,___wmul@product
 10192  003010  CFF4 F041          	movff	prodh,___wmul@product+1
 10193  003014  503C               	movf	___wmul@multiplier,w,c
 10194  003016  023F               	mulwf	___wmul@multiplicand+1,c
 10195  003018  50F3               	movf	prodl,w,c
 10196  00301A  2641               	addwf	___wmul@product+1,f,c
 10197  00301C  503D               	movf	___wmul@multiplier+1,w,c
 10198  00301E  023E               	mulwf	___wmul@multiplicand,c
 10199  003020  50F3               	movf	prodl,w,c
 10200  003022  2641               	addwf	___wmul@product+1,f,c
 10201  003024  C040  F03C         	movff	___wmul@product,?___wmul
 10202  003028  C041  F03D         	movff	___wmul@product+1,?___wmul+1
 10203  00302C  0012               	return	
 10204  00302E                     __end_of___wmul:
 10205                           	opt stack 0
 10206                           tblptru	equ	0xFF8
 10207                           tblptrh	equ	0xFF7
 10208                           tblptrl	equ	0xFF6
 10209                           tablat	equ	0xFF5
 10210                           prodh	equ	0xFF4
 10211                           prodl	equ	0xFF3
 10212                           intcon	equ	0xFF2
 10213                           postinc0	equ	0xFEE
 10214                           wreg	equ	0xFE8
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           fsr2h	equ	0xFDA
 10218                           fsr2l	equ	0xFD9
 10219                           status	equ	0xFD8
 10220                           
 10221 ;; *************** function _Joystick_Polling *****************
 10222 ;; Defined at:
 10223 ;;		line 215 in file "telecomando.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;		None
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10237 ;;      Params:         0       0       0       0
 10238 ;;      Locals:         0       0       0       0
 10239 ;;      Temps:          1       0       0       0
 10240 ;;      Totals:         1       0       0       0
 10241 ;;Total ram usage:        1 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    4
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_main
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text39
 10252  002D7C                     __ptext39:
 10253                           	opt stack 0
 10254  002D7C                     _Joystick_Polling:
 10255                           	opt stack 26
 10256                           
 10257                           ;telecomando.c: 216: for (i = 0; i < 2; i++) {
 10258                           
 10259                           ;incstack = 0
 10260  002D7C  0E00               	movlw	0
 10261  002D7E  6E15               	movwf	_i,c	;volatile
 10262  002D80                     l4006:
 10263  002D80  0E01               	movlw	1
 10264  002D82  6415               	cpfsgt	_i,c	;volatile
 10265  002D84  D001               	goto	l271
 10266  002D86  0012               	return	
 10267  002D88                     l271:
 10268                           
 10269                           ;telecomando.c: 217: ADCON0bits.GO = 1;
 10270  002D88  82C2               	bsf	4034,1,c	;volatile
 10271  002D8A                     l273:
 10272  002D8A  B2C2               	btfsc	4034,1,c	;volatile
 10273  002D8C  D7FE               	goto	l273
 10274                           
 10275                           ;telecomando.c: 219: JoystickValues[i] = ADRESH - 128;
 10276  002D8E  5015               	movf	_i,w,c	;volatile
 10277  002D90  0D01               	mullw	1
 10278  002D92  0E22               	movlw	low _JoystickValues
 10279  002D94  24F3               	addwf	prodl,w,c
 10280  002D96  6ED9               	movwf	fsr2l,c
 10281  002D98  0E00               	movlw	high _JoystickValues
 10282  002D9A  20F4               	addwfc	prodh,w,c
 10283  002D9C  6EDA               	movwf	fsr2h,c
 10284  002D9E  50C4               	movf	4036,w,c	;volatile
 10285  002DA0  0F80               	addlw	128
 10286  002DA2  6EDF               	movwf	indf2,c
 10287                           
 10288                           ;telecomando.c: 220: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10289  002DA4  A4C2               	btfss	4034,2,c	;volatile
 10290  002DA6  D002               	goto	u4200
 10291  002DA8  0E01               	movlw	1
 10292  002DAA  D001               	goto	u4206
 10293  002DAC                     u4200:
 10294  002DAC  0E00               	movlw	0
 10295  002DAE                     u4206:
 10296  002DAE  0AFF               	xorlw	255
 10297  002DB0  6E3C               	movwf	??_Joystick_Polling& (0+255),c
 10298  002DB2  463C               	rlncf	??_Joystick_Polling,f,c
 10299  002DB4  463C               	rlncf	??_Joystick_Polling,f,c
 10300  002DB6  50C2               	movf	4034,w,c	;volatile
 10301  002DB8  183C               	xorwf	??_Joystick_Polling,w,c
 10302  002DBA  0BFB               	andlw	-5
 10303  002DBC  183C               	xorwf	??_Joystick_Polling,w,c
 10304  002DBE  6EC2               	movwf	4034,c	;volatile
 10305  002DC0  2A15               	incf	_i,f,c	;volatile
 10306  002DC2  D7DE               	goto	l4006
 10307  002DC4                     __end_of_Joystick_Polling:
 10308                           	opt stack 0
 10309                           tblptru	equ	0xFF8
 10310                           tblptrh	equ	0xFF7
 10311                           tblptrl	equ	0xFF6
 10312                           tablat	equ	0xFF5
 10313                           prodh	equ	0xFF4
 10314                           prodl	equ	0xFF3
 10315                           intcon	equ	0xFF2
 10316                           postinc0	equ	0xFEE
 10317                           wreg	equ	0xFE8
 10318                           indf2	equ	0xFDF
 10319                           postinc2	equ	0xFDE
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8
 10323                           
 10324 ;; *************** function _ISR_bassa *****************
 10325 ;; Defined at:
 10326 ;;		line 109 in file "telecomando.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;		None               void
 10333 ;; Registers used:
 10334 ;;		wreg, status,2, status,0
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10340 ;;      Params:         0       0       0       0
 10341 ;;      Locals:         0       0       0       0
 10342 ;;      Temps:         17       0       0       0
 10343 ;;      Totals:        17       0       0       0
 10344 ;;Total ram usage:       17 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    3
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		Interrupt level 1
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           	psect	intcodelo
 10355  000018                     __pintcodelo:
 10356                           	opt stack 0
 10357  000018                     _ISR_bassa:
 10358                           	opt stack 20
 10359                           
 10360                           ;incstack = 0
 10361  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10362  00001A  CFD8 F024          	movff	status,??_ISR_bassa
 10363  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
 10364  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
 10365  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
 10366  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
 10367  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
 10368  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
 10369  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
 10370  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
 10371  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
 10372  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
 10373  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
 10374  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
 10375  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
 10376  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
 10377  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
 10378  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
 10379                           
 10380                           ;telecomando.c: 110: if (PIR2bits.TMR3IF) {
 10381  00005E  A2A1               	btfss	4001,1,c	;volatile
 10382  000060  D00B               	goto	i1l243
 10383                           
 10384                           ;telecomando.c: 111: time_counter++;
 10385  000062  0E01               	movlw	1
 10386  000064  2609               	addwf	_time_counter,f,c	;volatile
 10387  000066  0E00               	movlw	0
 10388  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10389  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10390  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10391                           
 10392                           ;telecomando.c: 112: TMR3H = 0x63;
 10393  00006E  0E63               	movlw	99
 10394  000070  6EB3               	movwf	4019,c	;volatile
 10395                           
 10396                           ;telecomando.c: 113: TMR3L = 0xC0;
 10397  000072  0EC0               	movlw	192
 10398  000074  6EB2               	movwf	4018,c	;volatile
 10399                           
 10400                           ;telecomando.c: 114: PIR2bits.TMR3IF = 0;
 10401  000076  92A1               	bcf	4001,1,c	;volatile
 10402  000078                     i1l243:
 10403  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10404  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10405  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10406  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10407  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10408  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10409  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10410  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10411  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10412  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10413  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10414  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10415  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10416  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10417  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10418  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10419  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10420  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10421  0000BE  0010               	retfie	
 10422  0000C0                     __end_of_ISR_bassa:
 10423                           	opt stack 0
 10424                           pclatu	equ	0xFFB
 10425                           pclath	equ	0xFFA
 10426                           tblptru	equ	0xFF8
 10427                           tblptrh	equ	0xFF7
 10428                           tblptrl	equ	0xFF6
 10429                           tablat	equ	0xFF5
 10430                           prodh	equ	0xFF4
 10431                           prodl	equ	0xFF3
 10432                           intcon	equ	0xFF2
 10433                           postinc0	equ	0xFEE
 10434                           fsr0h	equ	0xFEA
 10435                           fsr0l	equ	0xFE9
 10436                           wreg	equ	0xFE8
 10437                           fsr1h	equ	0xFE2
 10438                           fsr1l	equ	0xFE1
 10439                           bsr	equ	0xFE0
 10440                           indf2	equ	0xFDF
 10441                           postinc2	equ	0xFDE
 10442                           fsr2h	equ	0xFDA
 10443                           fsr2l	equ	0xFD9
 10444                           status	equ	0xFD8
 10445                           
 10446 ;; *************** function _ISR_alta *****************
 10447 ;; Defined at:
 10448 ;;		line 94 in file "telecomando.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;		None
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;		None               void
 10455 ;; Registers used:
 10456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10462 ;;      Params:         0       0       0       0
 10463 ;;      Locals:         1       0       0       0
 10464 ;;      Temps:          0      16       0       0
 10465 ;;      Totals:         1      16       0       0
 10466 ;;Total ram usage:       17 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:    2
 10469 ;; This function calls:
 10470 ;;		_getsUSART
 10471 ;; This function is called by:
 10472 ;;		Interrupt level 2
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	intcode
 10477  000008                     __pintcode:
 10478                           	opt stack 0
 10479  000008                     _ISR_alta:
 10480                           	opt stack 20
 10481                           
 10482                           ;incstack = 0
 10483  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10484  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10485  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10486  000012  EDE7  F013         	call	int_func,f	;refresh shadow registers
 10487                           pclatu	equ	0xFFB
 10488                           pclath	equ	0xFFA
 10489                           tblptru	equ	0xFF8
 10490                           tblptrh	equ	0xFF7
 10491                           tblptrl	equ	0xFF6
 10492                           tablat	equ	0xFF5
 10493                           prodh	equ	0xFF4
 10494                           prodl	equ	0xFF3
 10495                           intcon	equ	0xFF2
 10496                           postinc0	equ	0xFEE
 10497                           fsr0h	equ	0xFEA
 10498                           fsr0l	equ	0xFE9
 10499                           wreg	equ	0xFE8
 10500                           fsr1h	equ	0xFE2
 10501                           fsr1l	equ	0xFE1
 10502                           bsr	equ	0xFE0
 10503                           indf2	equ	0xFDF
 10504                           postinc2	equ	0xFDE
 10505                           fsr2h	equ	0xFDA
 10506                           fsr2l	equ	0xFD9
 10507                           status	equ	0xFD8
 10508                           
 10509                           	psect	intcode_body
 10510  0027CE                     __pintcode_body:
 10511                           	opt stack 20
 10512  0027CE                     int_func:
 10513                           	opt stack 20
 10514  0027CE  0006               	pop		; remove dummy address from shadow register refresh
 10515  0027D0  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10516  0027D4  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10517  0027D8  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10518  0027DC  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10519  0027E0  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10520  0027E4  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10521  0027E8  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10522  0027EC  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10523  0027F0  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10524  0027F4  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10525  0027F8  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10526  0027FC  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10527                           
 10528                           ;telecomando.c: 95: if (PIR1bits.RCIF == 1) {
 10529  002800  AA9E               	btfss	3998,5,c	;volatile
 10530  002802  D036               	goto	i2l239
 10531                           
 10532                           ;telecomando.c: 96: getsUSART((char*) USART_Rx, 7);
 10533  002804  0EDA               	movlw	low _USART_Rx
 10534  002806  6E36               	movwf	getsUSART@buffer,c
 10535  002808  0E00               	movlw	high _USART_Rx
 10536  00280A  6E37               	movwf	getsUSART@buffer+1,c
 10537  00280C  0E07               	movlw	7
 10538  00280E  6E38               	movwf	getsUSART@len,c
 10539  002810  ECC8  F017         	call	_getsUSART	;wreg free
 10540                           
 10541                           ;telecomando.c: 97: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10542  002814  0EAA               	movlw	170
 10543  002816  0100               	movlb	0	; () banked
 10544  002818  19DA               	xorwf	_USART_Rx& (0+255),w,b
 10545  00281A  A4D8               	btfss	status,2,c
 10546  00281C  D028               	goto	i2l5558
 10547                           
 10548                           ; BSR set to: 0
 10549  00281E  0EAA               	movlw	170
 10550  002820  0100               	movlb	0	; () banked
 10551  002822  19E0               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10552  002824  A4D8               	btfss	status,2,c
 10553  002826  D023               	goto	i2l5558
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;telecomando.c: 98: actual_dir = USART_Rx[1];
 10557  002828  0100               	movlb	0	; () banked
 10558  00282A  A1DB               	btfss	(_USART_Rx+1)& (0+255),0,b
 10559  00282C  D002               	goto	i2u639_40
 10560  00282E  8043               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10561  002830  D001               	goto	i2u640_45
 10562  002832                     i2u639_40:
 10563  002832  9043               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10564  002834                     i2u640_45:
 10565                           
 10566                           ;telecomando.c: 99: actual_speed_pk1 = USART_Rx[2];
 10567  002834  C0DC  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10568                           
 10569                           ;telecomando.c: 100: actual_speed_pk0 = USART_Rx[3];
 10570  002838  C0DD  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10571                           
 10572                           ;telecomando.c: 101: ECU_Check = USART_Rx[4];
 10573  00283C  C0DE  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10574                           
 10575                           ;telecomando.c: 102: Battery_Check = USART_Rx[5];
 10576  002840  C0DF  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10577                           
 10578                           ;telecomando.c: 103: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10579  002844  0E01               	movlw	1
 10580  002846  6E3B               	movwf	_ISR_alta$1195,c
 10581  002848  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10582  00284A  0100               	movlb	0	; () banked
 10583  00284C  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10584  00284E  6B60               	clrf	??_ISR_alta& (0+255),b
 10585  002850  0100               	movlb	0	; () banked
 10586  002852  5160               	movf	??_ISR_alta& (0+255),w,b
 10587  002854  0100               	movlb	0	; () banked
 10588  002856  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10589  002858  A4D8               	btfss	status,2,c
 10590  00285A  D005               	goto	i2l5556
 10591                           
 10592                           ; BSR set to: 0
 10593  00285C  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10594  00285E  A4D8               	btfss	status,2,c
 10595  002860  D002               	goto	i2l5556
 10596                           
 10597                           ; BSR set to: 0
 10598  002862  0E00               	movlw	0
 10599  002864  6E3B               	movwf	_ISR_alta$1195,c
 10600  002866                     i2l5556:
 10601                           
 10602                           ; BSR set to: 0
 10603  002866  C03B  F0D8         	movff	_ISR_alta$1195,_actual_speed	;volatile
 10604  00286A  0100               	movlb	0	; () banked
 10605  00286C  6BD9               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10606  00286E                     i2l5558:
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;telecomando.c: 104: }
 10610                           ;telecomando.c: 105: PIR1bits.RCIF = 0;
 10611  00286E  9A9E               	bcf	3998,5,c	;volatile
 10612  002870                     i2l239:
 10613  002870  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10614  002874  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10615  002878  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10616  00287C  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10617  002880  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10618  002884  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10619  002888  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10620  00288C  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10621  002890  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10622  002894  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10623  002898  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10624  00289C  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10625  0028A0  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10626  0028A4  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10627  0028A8  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10628  0028AA  0011               	retfie		f
 10629  0028AC                     __end_of_ISR_alta:
 10630                           	opt stack 0
 10631                           pclatu	equ	0xFFB
 10632                           pclath	equ	0xFFA
 10633                           tblptru	equ	0xFF8
 10634                           tblptrh	equ	0xFF7
 10635                           tblptrl	equ	0xFF6
 10636                           tablat	equ	0xFF5
 10637                           prodh	equ	0xFF4
 10638                           prodl	equ	0xFF3
 10639                           intcon	equ	0xFF2
 10640                           postinc0	equ	0xFEE
 10641                           fsr0h	equ	0xFEA
 10642                           fsr0l	equ	0xFE9
 10643                           wreg	equ	0xFE8
 10644                           fsr1h	equ	0xFE2
 10645                           fsr1l	equ	0xFE1
 10646                           bsr	equ	0xFE0
 10647                           indf2	equ	0xFDF
 10648                           postinc2	equ	0xFDE
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function _getsUSART *****************
 10654 ;; Defined at:
 10655 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10658 ;;		 -> USART_Rx(8), 
 10659 ;;  len             1   20[COMRAM] unsigned char 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;  i               1   22[COMRAM] unsigned char 
 10662 ;;  data            1   21[COMRAM] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;		None               void
 10665 ;; Registers used:
 10666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10672 ;;      Params:         3       0       0       0
 10673 ;;      Locals:         2       0       0       0
 10674 ;;      Temps:          0       0       0       0
 10675 ;;      Totals:         5       0       0       0
 10676 ;;Total ram usage:        5 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    1
 10679 ;; This function calls:
 10680 ;;		_ReadUSART
 10681 ;; This function is called by:
 10682 ;;		_ISR_alta
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text42
 10687  002F90                     __ptext42:
 10688                           	opt stack 0
 10689  002F90                     _getsUSART:
 10690                           	opt stack 20
 10691                           
 10692                           ;incstack = 0
 10693  002F90  0E00               	movlw	0
 10694  002F92  6E3A               	movwf	getsUSART@i,c
 10695  002F94  D00E               	goto	i2l3900
 10696  002F96                     i2l394:
 10697  002F96  AA9E               	btfss	3998,5,c	;volatile
 10698  002F98  D7FE               	goto	i2l394
 10699  002F9A  EC37  F018         	call	_ReadUSART	;wreg free
 10700  002F9E  6E39               	movwf	getsUSART@data,c
 10701  002FA0  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10702  002FA4  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10703  002FA8  C039  FFDF         	movff	getsUSART@data,indf2
 10704  002FAC  4A36               	infsnz	getsUSART@buffer,f,c
 10705  002FAE  2A37               	incf	getsUSART@buffer+1,f,c
 10706  002FB0  2A3A               	incf	getsUSART@i,f,c
 10707  002FB2                     i2l3900:
 10708  002FB2  5038               	movf	getsUSART@len,w,c
 10709  002FB4  5C3A               	subwf	getsUSART@i,w,c
 10710  002FB6  B0D8               	btfsc	status,0,c
 10711  002FB8  0012               	return	
 10712  002FBA  D7ED               	goto	i2l394
 10713  002FBC                     __end_of_getsUSART:
 10714                           	opt stack 0
 10715                           pclatu	equ	0xFFB
 10716                           pclath	equ	0xFFA
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           postinc0	equ	0xFEE
 10725                           fsr0h	equ	0xFEA
 10726                           fsr0l	equ	0xFE9
 10727                           wreg	equ	0xFE8
 10728                           fsr1h	equ	0xFE2
 10729                           fsr1l	equ	0xFE1
 10730                           bsr	equ	0xFE0
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           fsr2h	equ	0xFDA
 10734                           fsr2l	equ	0xFD9
 10735                           status	equ	0xFD8
 10736                           
 10737 ;; *************** function _ReadUSART *****************
 10738 ;; Defined at:
 10739 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;		None
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;  data            1   17[COMRAM] unsigned char 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      unsigned char 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10753 ;;      Params:         0       0       0       0
 10754 ;;      Locals:         1       0       0       0
 10755 ;;      Temps:          0       0       0       0
 10756 ;;      Totals:         1       0       0       0
 10757 ;;Total ram usage:        1 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_getsUSART
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text43
 10767  00306E                     __ptext43:
 10768                           	opt stack 0
 10769  00306E                     _ReadUSART:
 10770                           	opt stack 20
 10771                           
 10772                           ;incstack = 0
 10773  00306E  0EF2               	movlw	242
 10774  003070  1611               	andwf	_USART_Status,f,c
 10775  003072  ACAB               	btfss	4011,6,c	;volatile
 10776  003074  D003               	goto	i2l452
 10777  003076  9011               	bcf	_USART_Status,0,c
 10778  003078  B0AB               	btfsc	4011,0,c	;volatile
 10779  00307A  8011               	bsf	_USART_Status,0,c
 10780  00307C                     i2l452:
 10781  00307C  B4AB               	btfsc	4011,2,c	;volatile
 10782  00307E  8411               	bsf	_USART_Status,2,c
 10783  003080  B2AB               	btfsc	4011,1,c	;volatile
 10784  003082  8611               	bsf	_USART_Status,3,c
 10785  003084  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10786  003088  5035               	movf	ReadUSART@data,w,c
 10787  00308A  0012               	return	
 10788  00308C                     __end_of_ReadUSART:
 10789                           	opt stack 0
 10790                           pclatu	equ	0xFFB
 10791                           pclath	equ	0xFFA
 10792                           tblptru	equ	0xFF8
 10793                           tblptrh	equ	0xFF7
 10794                           tblptrl	equ	0xFF6
 10795                           tablat	equ	0xFF5
 10796                           prodh	equ	0xFF4
 10797                           prodl	equ	0xFF3
 10798                           intcon	equ	0xFF2
 10799                           postinc0	equ	0xFEE
 10800                           fsr0h	equ	0xFEA
 10801                           fsr0l	equ	0xFE9
 10802                           wreg	equ	0xFE8
 10803                           fsr1h	equ	0xFE2
 10804                           fsr1l	equ	0xFE1
 10805                           bsr	equ	0xFE0
 10806                           indf2	equ	0xFDF
 10807                           postinc2	equ	0xFDE
 10808                           fsr2h	equ	0xFDA
 10809                           fsr2l	equ	0xFD9
 10810                           status	equ	0xFD8
 10811                           pclatu	equ	0xFFB
 10812                           pclath	equ	0xFFA
 10813                           tblptru	equ	0xFF8
 10814                           tblptrh	equ	0xFF7
 10815                           tblptrl	equ	0xFF6
 10816                           tablat	equ	0xFF5
 10817                           prodh	equ	0xFF4
 10818                           prodl	equ	0xFF3
 10819                           intcon	equ	0xFF2
 10820                           postinc0	equ	0xFEE
 10821                           fsr0h	equ	0xFEA
 10822                           fsr0l	equ	0xFE9
 10823                           wreg	equ	0xFE8
 10824                           fsr1h	equ	0xFE2
 10825                           fsr1l	equ	0xFE1
 10826                           bsr	equ	0xFE0
 10827                           indf2	equ	0xFDF
 10828                           postinc2	equ	0xFDE
 10829                           fsr2h	equ	0xFDA
 10830                           fsr2l	equ	0xFD9
 10831                           status	equ	0xFD8
 10832                           
 10833                           	psect	rparam
 10834  0000                     pclatu	equ	0xFFB
 10835                           pclath	equ	0xFFA
 10836                           tblptru	equ	0xFF8
 10837                           tblptrh	equ	0xFF7
 10838                           tblptrl	equ	0xFF6
 10839                           tablat	equ	0xFF5
 10840                           prodh	equ	0xFF4
 10841                           prodl	equ	0xFF3
 10842                           intcon	equ	0xFF2
 10843                           postinc0	equ	0xFEE
 10844                           fsr0h	equ	0xFEA
 10845                           fsr0l	equ	0xFE9
 10846                           wreg	equ	0xFE8
 10847                           fsr1h	equ	0xFE2
 10848                           fsr1l	equ	0xFE1
 10849                           bsr	equ	0xFE0
 10850                           indf2	equ	0xFDF
 10851                           postinc2	equ	0xFDE
 10852                           fsr2h	equ	0xFDA
 10853                           fsr2l	equ	0xFD9
 10854                           status	equ	0xFD8
 10855                           
 10856                           	psect	temp
 10857  000047                     btemp:
 10858                           	opt stack 0
 10859  000047                     	ds	1
 10860  0000                     int$flags	set	btemp
 10861                           pclatu	equ	0xFFB
 10862                           pclath	equ	0xFFA
 10863                           tblptru	equ	0xFF8
 10864                           tblptrh	equ	0xFF7
 10865                           tblptrl	equ	0xFF6
 10866                           tablat	equ	0xFF5
 10867                           prodh	equ	0xFF4
 10868                           prodl	equ	0xFF3
 10869                           intcon	equ	0xFF2
 10870                           postinc0	equ	0xFEE
 10871                           fsr0h	equ	0xFEA
 10872                           fsr0l	equ	0xFE9
 10873                           wreg	equ	0xFE8
 10874                           fsr1h	equ	0xFE2
 10875                           fsr1l	equ	0xFE1
 10876                           bsr	equ	0xFE0
 10877                           indf2	equ	0xFDF
 10878                           postinc2	equ	0xFDE
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         79
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    106     138
    BANK1           256     33      45
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Rx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  176051
                                             25 BANK1      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   59964
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1486
                                             18 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           0     0      0     130
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   79920
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10443
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     21      2D       6       17.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6A      8A       4       86.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD       9        0.0%
DATA                 0      0      FD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 20 13:56:16 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l95 2F00                    ___awdiv@sign 0075              delay_s@repeat_loop 0073  
                            bsr 000FE0             ___wmul@multiplicand 003E                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000  
                           l422 2CA4                             l271 2D88                             l247 175A  
                           l256 188A                             l273 2D8A                             l257 189C  
                           l249 1748                             l370 0690                             l426 2CB8  
                           l427 2CBA                             l428 2CC4                             l429 2CC6  
                           l439 2FBC                             l279 2E62                             l923 2D2A  
                           l677 2352                             l781 2086                             l870 2AD6  
                           l774 1FC2                             l687 2470                             l775 2006  
                           l880 2C00                             l964 0B00                             l981 0C74  
                           l965 0AF4                             l990 0D08                             l966 0AC0  
                  getsUSART@len 0038                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 0075                             _dir 0219                             _str 0121  
                  ___awmod@sign 0041                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 008B                    ___flmul@bexp 0090                    ___flmul@sign 008A  
                  ___flmul@temp 0095                    ___flmul@prod 0091                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A9                    __CFG_WDT$OFF 000000  
                          l1050 0E7C                            l1072 1D82                            l1057 1118  
                          l1067 122A                            l1059 1186                            l1086 1E8A  
                          l1087 1EA2                            l1079 1E2E                            l4006 2D80  
                          l5100 2F66                            l5004 2A62                            l4302 093E  
                          l5006 2A70                            l3342 3098                            l5104 2F7C  
                          l5112 2FF8                            l4320 0998                            l4312 096C  
                          l5016 2AC6                            l5008 2A76                            l5032 2BF0  
                          l5024 2B98                            l4410 0B62                            l4402 0B24  
                          l5026 2BA6                            l5050 1DC2                            l5042 1D92  
                          l5108 2FE4                            l4412 0B68                            l4420 0B84  
                          l4332 09D0                            l4308 0962                            l5028 2BAC  
                          l5060 1E6C                            l5052 1DD2                            l5300 0672  
                          l5220 029C                            l5204 021A                            l4430 0C54  
                          l4326 09AC                            l5062 1E7C                            l5054 1E10  
                          l4510 0E0A                            l4280 2EF4                            l4416 0B72  
                          l4344 0A04                            l4336 09DA                            l5048 1DBA  
                          l4512 0E10                            l4504 0DE6                            l5312 06C4  
                          l5304 0694                            l5232 0352                            l5080 2F44  
                          l5090 271A                            l5074 1EF4                            l4610 11FC  
                          l4530 0E6A                            l4522 0E40                            l4514 0E22  
                          l5234 0368                            l5092 274C                            l4444 0CBC  
                          l4700 2C6A                            l4620 124A                            l4612 1210  
                          l5316 0726                            l5244 040C                            l5236 03A4  
                          l5228 0320                            l5172 0120                            l5164 00EE  
                          l3812 2CA6                            l3804 2C98                            l5084 2F56  
                          l5094 277E                            l4438 0CA6                            l4454 0CDC  
                          l4374 0A40                            l4622 1254                            l4606 11D6  
                          l4534 0E90                            l5350 08C2                            l5342 086A  
                          l5334 0836                            l5326 080E                            l5262 0520  
                          l5238 03BA                            l5182 0182                            l5158 00D4  
                          l5088 26E8                            l5096 27B0                            l4464 0D02  
                          l4448 0CC8                            l4456 0CE2                            l4392 0AE4  
                          l4704 2C78                            l4528 0E64                            l5328 081C  
                          l5280 0598                            l5264 0526                            l5248 043E  
                          l5336 0844                            l5176 015C                            l4482 0D92  
                          l4474 0D5E                            l4386 0AD4                            l4650 29D6  
                          l4642 29AC                            l4538 0EA4                            l5354 08EE  
                          l5346 0892                            l5282 05A0                            l5290 0636  
                          l5258 04A8                            l5194 01C8                            l5186 0188  
                          l5178 0172                            l4388 0ADA                            l4660 2A0C  
                          l4652 29DC                            l4636 2996                            l4580 1102  
                          l4740 1C06                            l5292 0644                            l5276 056C  
                          l5188 01AE                            l5356 08F4                            l5604 1868  
                          l3870 2D04                            l4494 0DB6                            l4486 0D9E  
                          l4478 0D70                            l4814 1F6E                            l5358 0912  
                          l5630 1976                            l5606 1876                            l4488 0DA2  
                          l4904 2316                            l4808 1F3A                            l4648 29CA  
                          l4664 2A1A                            l4680 2C26                            l5480 2566  
                          l5608 187C                            l3866 2CF8                            l4914 2340  
                          l4690 2C48                            l4586 112C                            l4762 13DC  
                          l5298 065E                            l5634 198A                            l5618 1896  
                          l3868 2D00                            l4932 23E0                            l4916 234C  
                          l4908 2326                            l4844 203C                            l4668 2A2E  
                          l4692 2C4C                            l4684 2C32                            l4596 1180  
                          l4748 1CE6                            l4780 1622                            l4772 14C2  
                          l5476 2544                            l5644 1A08                            l3878 2D20  
                          l4942 24BC                            l4950 2F26                            l4870 224A  
                          l4854 206C                            l5478 2556                            l5638 1994  
                          l5574 1740                            l4936 2428                            l4928 23A2  
                          l4960 25FC                            l4864 2228                            l4856 207C  
                          l4848 2050                            l4696 2C60                            l4688 2C40  
                          l4768 1496                            l4786 16DC                            l5586 1776  
                          l4980 267E                            l4892 22E4                            l4884 2294  
                          l4990 26B4                            l4798 3066                            l4976 266A  
                          l4994 26D0                            l4986 269A                            l4988 26AA  
                 getsUSART@data 0039                            STR_1 3FBA                            STR_2 3F90  
                          STR_3 3F7B                            STR_4 3FBA                            STR_5 3FA5  
                          STR_6 3FCF                            STR_7 3FF9                            STR_8 3FEF  
                          STR_9 3FFD                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          u4200 2DAC                            u4206 2DAE                            _PIE1 000F9D  
                          u5210 11EA                            u5130 10A4                            u5135 1098  
                          u3625 30A8                            u3626 30AA                            u6150 0688  
                          u4625 2E16                            u4626 2E18                            u4635 2E22  
                          u5451 1F18                            u4636 2E24                            u6500 184E  
                          u4645 2E2E                            u4646 2E30                            u4750 0A8A  
                          u4655 2E38                            u5471 1F4C                            u4656 2E3A  
                          u4760 0AA2                            u4770 0AA4                            u6506 1850  
                          u6460 1756                            u5680 261C                            u6570 1A6C  
                          u6490 1836                            u6475 1758                            u5685 2610  
                          u6587 2EF6                            _main 1708       __size_of_LCD_send_command 0036  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0047                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00C0  
                 __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032                    _sprintf$2394 0100  
                delay_s@value_s 0072                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 3050                   _LCD_backlight 309E         __size_of_LCD_initialize 016E  
                 ___fltol@sign1 00A8                 __end_of___fladd 0DC8                           ?_main 0024  
               __end_of___awdiv 2A38                 __end_of___flneg 2F38                           STR_10 3FDB  
                         STR_11 3FF4                           STR_12 3FBA                           STR_13 3FE7  
               __end_of___awmod 2C82                 __end_of___flmul 126E                 __end_of___flsub 2D7C  
               __end_of___fltol 26E2                 __end_of___lldiv 2AE8                 ___awdiv@divisor 0072  
               __end_of___llmod 2C12                           _T3CON 000FB1                 __end_of___lwdiv 2D34  
                         i1l243 0078                           i2l239 2870                           i2l452 307C  
                         i2l394 2F96                 ___awdiv@counter 0074                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR3H 000FB3                           _TMR3L 000FB2  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
               __end_of_delay_s 2F64                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 28AC                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 3F7B                           _scale 126E                 __end_of_isdigit 306E  
                __pbitbssCOMRAM 0218                           tablat 000FF5                           status 000FD8  
               __end_of_sprintf 0920                  __CFG_PBADEN$ON 000000                     ?_USART_Send 0024  
           __size_of_LCD_cursor 0032                  WriteUSART@data 003C                 __initialization 2DC4  
                ?_LCD_backlight 0024                    __end_of_main 1A82   __size_of_board_initialization 00CE  
                 _LCD_goto_line 26E2               ?_Joystick_Polling 0024              ??_Joystick_Polling 003C  
             ?_LCD_write_string 007A                          ??_main 0119                   __activetblptr 000002  
                _JoystickValues 0022              ??_LCD_write_string 0043            __size_of__tdiv_to_l_ 0192  
             __end_of_LCD_clear 2ED8          LCD_write_string@buffer 007A                          _ADCON1 000FC1  
              ___llmod@dividend 0070                          ?_scale 0097                          _ADRESH 000FC4  
              ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000                 getsUSART@buffer 0036  
                        i2l3900 2FB2                          i2l5556 2866                          i2l5558 286E  
            __size_of_ReadUSART 001E                          _SPBRGH 000FB0                __end_of___xxtofl 1F06  
               _switch_position 0019                __end_of_delay_ms 2F0A                  __CFG_XINST$OFF 000000  
             __end_of_ISR_bassa 00C0                __end_of__powers_ 3F53              __size_of_OpenUSART 0060  
                ?_LCD_goto_line 0024                          ___flge 2364                       ??___fladd 00AC  
              _delay_set_quartz 30AC                          ___wmul 3008                       ??___awdiv 0042  
                     ??___flneg 0040                  __CFG_STVREN$ON 000000                       ??___awmod 0040  
                     ??___flmul 0086                       ??___flsub 0043                       ??___fltol 00A4  
                     ??___lldiv 003C                       ??___llmod 003C                       ??___lwdiv 0040  
       __size_of_LCD_write_char 0096                          _fround 1A82  LCD_initialize@quartz_frequency 0077  
                        clear_0 2DCA                          clear_1 2DD6                          clear_2 2DE4  
              ___awdiv@quotient 0076                 ___awmod@divisor 003E                       ??_delay_s 0042  
          __size_of_LCD_Handler 0116                 ___awmod@counter 0040                 __CFG_BOREN$BOHW 000000  
             _JoystickConstants 001A                    __pdataCOMRAM 0046                       ??_isdigit 003C  
                  __mediumconst 3EEA                          tblptrh 000FF7                  _analogic_brake 0014  
                        tblptrl 000FF6                          tblptru 000FF8             __size_of_USART_Send 0034  
                     ??_sprintf 00C8                      ___flge@ff1 0070                      ___flge@ff2 0074  
                  ___xxtofl@arg 007A                    ___xxtofl@exp 0079                    ___xxtofl@val 0070  
                    __accesstop 0060         __end_of__initialization 2DFC                      ___flneg@f1 003C  
              _LCD_send_command 2E0A                   ___rparam_used 000001                      ___fltol@f1 00A0  
               ??_LCD_backlight 003C                      _WriteUSART 308C                  __pcstackCOMRAM 0024  
                     ?_ISR_alta 0024                   __end_of_scale 1708                  _LCD_initialize 2098  
             _LCD_write_message 2F64               __end_of_ReadUSART 308C              ?_LCD_write_message 007A  
                    __div_to_l_ 2206                    ??_LCD_cursor 0043                    _actual_speed 00D8  
            __size_of_getsUSART 002C                   ReadUSART@data 0035               __end_of_OpenUSART 2CE2  
               __div_to_l_@exp1 0041             ??_LCD_write_message 0043                 __div_to_l_@cntr 0040  
                       ??_scale 0043                 __div_to_l_@quot 003C                      __pbssBANK0 00CA  
                    __pbssBANK1 0121                      __pnvCOMRAM 0044                      _actual_dir 0218  
                 __div_to_l_@f1 0070                   __div_to_l_@f2 0074                 ??_LCD_goto_line 0043  
            __end_of_LCD_cursor 2EA6          __end_of_LCD_initialize 2206                         ?___flge 0070  
                       ?___wmul 003C                      ??_ISR_alta 0060       __end_of_LCD_write_message 2F90  
             ?_LCD_enable_pulse 0024                   putsUSART@data 003D                         ?_fround 0097  
            ??_LCD_enable_pulse 0042                       ?___xxtofl 0070                LCD_cursor@active 0076  
                     ?_delay_ms 0070              __size_of_putsUSART 0026                    ??_USART_Send 003F  
             __end_of__npowers_ 3F1F                         __Hparam 0000                      _scale$2393 009B  
                       __Lparam 0000                delay_ms@value_ms 0070               __end_of_getsUSART 2FBC  
                   ?_WriteUSART 0024                 ?_LCD_initialize 0024                 __size_of___flge 015C  
                       ___fladd 0920                         ___awdiv 297A                         ___flneg 2F0A  
                       ___awmod 2C12                         ___flmul 0DC8                         ___flsub 2D34  
                       ___fltol 25D6                         ___lldiv 2A38                 __size_of___wmul 0026  
                _LCD_write_char 2AE8                         ___llmod 2B7E                         ___lwdiv 2CE2  
                       __pcinit 2DC4                 __size_of_fround 02B6                         _delay_s 2F38  
                       __ramtop 0300             LCD_write_char@value 0079                         __ptext0 1708  
                       __ptext1 28AC                         __ptext2 2F38                         __ptext3 2C82  
                       __ptext4 2098                         __ptext5 30AC                         __ptext6 2E74  
                       __ptext7 309E                         __ptext8 2E40                         __ptext9 2FBC  
                     _ECU_Check 0010                     ?__div_to_l_ 0070                LCD_write_char@D0 0078  
              LCD_write_char@D1 0077                LCD_write_char@D2 0076                LCD_write_char@D3 0075  
                       _dpowers 3F53                         _isdigit 3050                      ??___xxtofl 0074  
              ___awmod@dividend 003C                      ??_delay_ms 0042    __end_of_board_initialization 297A  
     __size_of_Joystick_Polling 0048              __end_of_USART_Send 2E74        __end_of_delay_set_quartz 30B4  
                       _sprintf 00C4                  __pintcode_body 27CE                       _LCD_clear 2EA6  
          end_of_initialization 2DFC       __size_of_LCD_write_string 0026                   __Lmediumconst 3EEA  
                       int_func 27CE                   _Battery_Check 000F             LCD_backlight@active 003C  
               ___lldiv@divisor 0074              LCD_cursor@blinking 0075                 ___lldiv@counter 0040  
        __end_of_LCD_write_char 2B7E                       _RCSTAbits 000FAB                         postinc0 000FEE  
                       postinc2 000FDE               __end_of_putsUSART 2FE2      __size_of_LCD_write_message 002C  
                __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074                       _ISR_bassa 0018  
                 ??__tdiv_to_l_ 003C                       _PORTAbits 000F80                       _PORTBbits 000F81  
                     _PORTDbits 000F83        __end_of_LCD_send_command 2E40                     ___fladd@grs 00B7  
                 ___xxtofl@sign 0078                       _TRISCbits 000F94                      getsUSART@i 003A  
           __size_of_WriteUSART 0012                      ?_LCD_clear 0024         _clock_counter_reference 0044  
                   ___flmul@grs 008C                       _TXSTAbits 000FAC             __size_of__div_to_l_ 015E  
       LCD_write_integer@F17027 00CA                 ?_LCD_write_char 0024                   ??_LCD_Handler 0043  
                __end_of___flge 24C0                      ?_ISR_bassa 0024                  __end_of___wmul 302E  
                 __pidataCOMRAM 30B4               __size_of_ISR_alta 28A4                  __end_of_fround 1D38  
           start_initialization 2DC4                       _ReadUSART 306E             __end_of__tdiv_to_l_ 2098  
                     _OpenUSART 2C82                 ___llmod@divisor 0074                 ___llmod@counter 003C  
         __end_of_LCD_backlight 30AC                        ??___flge 003C            _board_initialization 28AC  
                      ??___wmul 0040                __CFG_LPT1OSC$OFF 000000                        ??_fround 0043  
                 sprintf@tmpval 010E                       ___fladd@a 00A8                       ___fladd@b 00A4  
                    fround@prec 00A3             __end_of_LCD_Handler 25D6                       ___flmul@a 0082  
                     ___flmul@b 007E                     __pbssCOMRAM 0001                       ___flsub@a 00BC  
                     ___flsub@b 00B8                      ?_ReadUSART 0024                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 2D7C               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$2000 003D               __size_of_delay_ms 0032  
                   ??_LCD_clear 0043         LCD_write_message@buffer 007A                   _ISR_alta$1195 003B  
              _LCD_write_string 2FE2                      ?_OpenUSART 003C                     sprintf@flag 0106  
                   sprintf@fval 0114                     sprintf@prec 0112                ??_LCD_initialize 0043  
     delay_set_quartz@frequency 003C                ___lwdiv@dividend 003C              LCD_send_command@D0 0074  
            LCD_send_command@D1 0073              LCD_send_command@D2 0072              LCD_send_command@D3 0042  
                  ??_WriteUSART 003C           __end_of_LCD_goto_line 27CE           ?_board_initialization 0024  
                     __pintcode 0008                   __pmediumconst 3EEA                        ?___fladd 00A4  
                      ?___awdiv 0070                        ?___flneg 003C                        ?___awmod 003C  
                      ?___flmul 007E                        ?___flsub 00B8                        ?___fltol 00A0  
                      ?___lldiv 0070                        ?___llmod 0070                       __npowers_ 3EEB  
                      ?___lwdiv 003C                     ??_ISR_bassa 0024                       _getsUSART 2F90  
                   __pintcodelo 0018                        ?_delay_s 0024                     __tdiv_to_l_ 1F06  
                  ??__div_to_l_ 003C                        ?_isdigit 0024                ___lwdiv@quotient 0040  
                      ?_sprintf 00C0                  __size_of_scale 049A              __end_of_WriteUSART 309E  
             ?_delay_set_quartz 0024              ??_delay_set_quartz 003C                  ___wmul@product 0040  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 0046                        _PIE1bits 000F9D  
                      _PIE2bits 000FA0                        _PIR1bits 000F9E              __end_of__div_to_l_ 2364  
                      _PIR2bits 000FA1                        i2u640_45 2834                        i2u639_40 2832  
                     _pr_time_1 0001                       _pr_time_2 0005                       _pr_time_3 00D4  
                     _set_speed 000D                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _ISR_alta 0008                     _LCD_Handler 24C0                      ?_getsUSART 0036  
                      _USART_Rx 00DA                        _USART_Tx 00E2                      _ADCON0bits 000FC2  
                     _putsUSART 2FBC                      _ADCON2bits 000FC0               ___wmul@multiplier 003C  
             ?_LCD_send_command 0072                _actual_speed_pk0 0012                _actual_speed_pk1 0013  
              _actual_speed_kmh 00D0                     ??_ReadUSART 0035              ??_LCD_send_command 0042  
                 _set_speed_pk0 0016                   _set_speed_pk1 0017                     ??_OpenUSART 003E  
              ??_LCD_write_char 0043                 OpenUSART@config 003E               LCD_goto_line@line 0075  
                      __Hrparam 0000          ??_board_initialization 0043                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 002E  
              __size_of___awmod 0070                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00B0                __size_of___llmod 0094  
              __size_of___lwdiv 0052                     _fround$2391 009F                     _fround$2392 009B  
                    ?_putsUSART 003D                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1D38                __size_of_isdigit 001E  
                      _delay_ms 2ED8                 ___lwdiv@divisor 003E                 ___lwdiv@counter 0042  
              _LCD_enable_pulse 302E                        __ptext10 308C                        __ptext11 24C0  
                      __ptext20 2206                        __ptext12 00C4                        __ptext21 1D38  
                      __ptext13 126E                        __ptext30 2FE2                        __ptext22 2B7E  
                      __ptext14 3050                        __ptext31 2F64                        __ptext23 2A38  
                      __ptext15 1A82                        __ptext32 2AE8                        __ptext24 25D6  
                      __ptext16 0DC8                        __ptext33 26E2                        __ptext25 2D34  
                      __ptext17 2C12                        __ptext42 2F90                        __ptext34 2EA6  
                      __ptext26 0920                        __ptext18 297A                        __ptext43 306E  
                      __ptext35 2E0A                        __ptext27 2F0A                        __ptext19 1F06  
                      __ptext36 302E                        __ptext28 2364                        __ptext37 2ED8  
                      __ptext29 2CE2                        __ptext38 3008                        __ptext39 2D7C  
                      __powers_ 3F1F                __size_of_sprintf 085C                   __size_of_main 037A  
                      _wait_low 021B        __end_of_Joystick_Polling 2DC4                        int$flags 0047  
                   ??_getsUSART 0039        __end_of_LCD_write_string 3008                      _LCD_cursor 2E74  
                    _INTCONbits 000FF2                    _set_steering 0018                  OpenUSART@spbrg 003C  
                      isdigit@c 003E                        scale@scl 009F                    _time_counter 0009  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007D                       sprintf@sp 00C0                __tdiv_to_l_@cntr 007C  
              __tdiv_to_l_@quot 0078                ___lldiv@dividend 0070                    ?__tdiv_to_l_ 0070  
                   ??_putsUSART 003F                        sprintf@c 0118                        sprintf@f 00C2  
              ___lldiv@quotient 003C          __size_of_LCD_backlight 000E                   ___fladd@signs 00B4  
                  ___fladd@aexp 00B5                    ___fladd@bexp 00B6                    _USART_Status 0011  
                    _USART_Send 2E40                    _power_switch 021A  
