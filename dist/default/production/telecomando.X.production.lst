

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 22:37:46 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0034C8                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  0034C8  10                 	db	16
    73                           
    74                           	psect	mediumconst
    75  003EEA                     __pmediumconst:
    76                           	opt stack 0
    77  003EEA  00                 	db	0
    78  003EEB                     __npowers_:
    79                           	opt stack 0
    80  003EEB  0000               	dw	0
    81  003EED  3F80               	dw	16256
    82  003EEF  CCCD               	dw	52429
    83  003EF1  3DCC               	dw	15820
    84  003EF3  D70A               	dw	55050
    85  003EF5  3C23               	dw	15395
    86  003EF7  126F               	dw	4719
    87  003EF9  3A83               	dw	14979
    88  003EFB  B717               	dw	46871
    89  003EFD  38D1               	dw	14545
    90  003EFF  C5AC               	dw	50604
    91  003F01  3727               	dw	14119
    92  003F03  37BD               	dw	14269
    93  003F05  3586               	dw	13702
    94  003F07  BF95               	dw	49045
    95  003F09  33D6               	dw	13270
    96  003F0B  CC77               	dw	52343
    97  003F0D  322B               	dw	12843
    98  003F0F  705F               	dw	28767
    99  003F11  3089               	dw	12425
   100  003F13  E6FF               	dw	59135
   101  003F15  2EDB               	dw	11995
   102  003F17  E508               	dw	58632
   103  003F19  1E3C               	dw	7740
   104  003F1B  4260               	dw	16992
   105  003F1D  0DA2               	dw	3490
   106  003F1F                     __end_of__npowers_:
   107                           	opt stack 0
   108  003F1F                     __powers_:
   109                           	opt stack 0
   110  003F1F  0000               	dw	0
   111  003F21  3F80               	dw	16256
   112  003F23  0000               	dw	0
   113  003F25  4120               	dw	16672
   114  003F27  0000               	dw	0
   115  003F29  42C8               	dw	17096
   116  003F2B  0000               	dw	0
   117  003F2D  447A               	dw	17530
   118  003F2F  4000               	dw	16384
   119  003F31  461C               	dw	17948
   120  003F33  5000               	dw	20480
   121  003F35  47C3               	dw	18371
   122  003F37  2400               	dw	9216
   123  003F39  4974               	dw	18804
   124  003F3B  9680               	dw	38528
   125  003F3D  4B18               	dw	19224
   126  003F3F  BC20               	dw	48160
   127  003F41  4CBE               	dw	19646
   128  003F43  6B28               	dw	27432
   129  003F45  4E6E               	dw	20078
   130  003F47  02F9               	dw	761
   131  003F49  5015               	dw	20501
   132  003F4B  78EC               	dw	30956
   133  003F4D  60AD               	dw	24749
   134  003F4F  F2CA               	dw	62154
   135  003F51  7149               	dw	29001
   136  003F53                     __end_of__powers_:
   137                           	opt stack 0
   138  003F53                     _dpowers:
   139                           	opt stack 0
   140  003F53  0001               	dw	1
   141  003F55  0000               	dw	0
   142  003F57  000A               	dw	10
   143  003F59  0000               	dw	0
   144  003F5B  0064               	dw	100
   145  003F5D  0000               	dw	0
   146  003F5F  03E8               	dw	1000
   147  003F61  0000               	dw	0
   148  003F63  2710               	dw	10000
   149  003F65  0000               	dw	0
   150  003F67  86A0               	dw	34464
   151  003F69  0001               	dw	1
   152  003F6B  4240               	dw	16960
   153  003F6D  000F               	dw	15
   154  003F6F  9680               	dw	38528
   155  003F71  0098               	dw	152
   156  003F73  E100               	dw	57600
   157  003F75  05F5               	dw	1525
   158  003F77  CA00               	dw	51712
   159  003F79  3B9A               	dw	15258
   160  003F7B                     __end_of_dpowers:
   161                           	opt stack 0
   162  003F7B                     STR_3:
   163  003F7B  54                 	db	84	;'T'
   164  003F7C  75                 	db	117	;'u'
   165  003F7D  72                 	db	114	;'r'
   166  003F7E  6E                 	db	110	;'n'
   167  003F7F  20                 	db	32
   168  003F80  74                 	db	116	;'t'
   169  003F81  68                 	db	104	;'h'
   170  003F82  65                 	db	101	;'e'
   171  003F83  20                 	db	32
   172  003F84  73                 	db	115	;'s'
   173  003F85  77                 	db	119	;'w'
   174  003F86  69                 	db	105	;'i'
   175  003F87  74                 	db	116	;'t'
   176  003F88  63                 	db	99	;'c'
   177  003F89  68                 	db	104	;'h'
   178  003F8A  20                 	db	32
   179  003F8B  4F                 	db	79	;'O'
   180  003F8C  4E                 	db	78	;'N'
   181  003F8D  21                 	db	33
   182  003F8E  20                 	db	32
   183  003F8F  00                 	db	0
   184  003F90                     STR_2:
   185  003F90  3D                 	db	61	;'='
   186  003F91  3D                 	db	61	;'='
   187  003F92  3E                 	db	62	;'>'
   188  003F93  20                 	db	32
   189  003F94  56                 	db	86	;'V'
   190  003F95  45                 	db	69	;'E'
   191  003F96  48                 	db	72	;'H'
   192  003F97  49                 	db	73	;'I'
   193  003F98  43                 	db	67	;'C'
   194  003F99  4C                 	db	76	;'L'
   195  003F9A  45                 	db	69	;'E'
   196  003F9B  20                 	db	32
   197  003F9C  20                 	db	32
   198  003F9D  4F                 	db	79	;'O'
   199  003F9E  46                 	db	70	;'F'
   200  003F9F  46                 	db	70	;'F'
   201  003FA0  20                 	db	32
   202  003FA1  3C                 	db	60	;'<'
   203  003FA2  3D                 	db	61	;'='
   204  003FA3  3D                 	db	61	;'='
   205  003FA4  00                 	db	0
   206  003FA5                     STR_5:
   207  003FA5  3D                 	db	61	;'='
   208  003FA6  3D                 	db	61	;'='
   209  003FA7  3D                 	db	61	;'='
   210  003FA8  20                 	db	32
   211  003FA9  56                 	db	86	;'V'
   212  003FAA  45                 	db	69	;'E'
   213  003FAB  48                 	db	72	;'H'
   214  003FAC  49                 	db	73	;'I'
   215  003FAD  43                 	db	67	;'C'
   216  003FAE  4C                 	db	76	;'L'
   217  003FAF  45                 	db	69	;'E'
   218  003FB0  20                 	db	32
   219  003FB1  44                 	db	68	;'D'
   220  003FB2  41                 	db	65	;'A'
   221  003FB3  54                 	db	84	;'T'
   222  003FB4  41                 	db	65	;'A'
   223  003FB5  20                 	db	32
   224  003FB6  3D                 	db	61	;'='
   225  003FB7  3D                 	db	61	;'='
   226  003FB8  3D                 	db	61	;'='
   227  003FB9  00                 	db	0
   228  003FBA                     STR_1:
   229  003FBA  3D                 	db	61	;'='
   230  003FBB  3D                 	db	61	;'='
   231  003FBC  3D                 	db	61	;'='
   232  003FBD  3D                 	db	61	;'='
   233  003FBE  3D                 	db	61	;'='
   234  003FBF  3D                 	db	61	;'='
   235  003FC0  3D                 	db	61	;'='
   236  003FC1  3D                 	db	61	;'='
   237  003FC2  3D                 	db	61	;'='
   238  003FC3  3D                 	db	61	;'='
   239  003FC4  3D                 	db	61	;'='
   240  003FC5  3D                 	db	61	;'='
   241  003FC6  3D                 	db	61	;'='
   242  003FC7  3D                 	db	61	;'='
   243  003FC8  3D                 	db	61	;'='
   244  003FC9  3D                 	db	61	;'='
   245  003FCA  3D                 	db	61	;'='
   246  003FCB  3D                 	db	61	;'='
   247  003FCC  3D                 	db	61	;'='
   248  003FCD  3D                 	db	61	;'='
   249  003FCE  00                 	db	0
   250  003FCF                     STR_6:
   251  003FCF  44                 	db	68	;'D'
   252  003FD0  69                 	db	105	;'i'
   253  003FD1  72                 	db	114	;'r'
   254  003FD2  65                 	db	101	;'e'
   255  003FD3  63                 	db	99	;'c'
   256  003FD4  74                 	db	116	;'t'
   257  003FD5  69                 	db	105	;'i'
   258  003FD6  6F                 	db	111	;'o'
   259  003FD7  6E                 	db	110	;'n'
   260  003FD8  3A                 	db	58	;':'
   261  003FD9  20                 	db	32
   262  003FDA  00                 	db	0
   263  003FDB                     STR_10:
   264  003FDB  53                 	db	83	;'S'
   265  003FDC  70                 	db	112	;'p'
   266  003FDD  65                 	db	101	;'e'
   267  003FDE  65                 	db	101	;'e'
   268  003FDF  64                 	db	100	;'d'
   269  003FE0  3A                 	db	58	;':'
   270  003FE1  20                 	db	32
   271  003FE2  25                 	db	37
   272  003FE3  2E                 	db	46
   273  003FE4  33                 	db	51	;'3'
   274  003FE5  66                 	db	102	;'f'
   275  003FE6  00                 	db	0
   276  003FE7                     STR_13:
   277  003FE7  57                 	db	87	;'W'
   278  003FE8  61                 	db	97	;'a'
   279  003FE9  69                 	db	105	;'i'
   280  003FEA  74                 	db	116	;'t'
   281  003FEB  2E                 	db	46
   282  003FEC  2E                 	db	46
   283  003FED  2E                 	db	46
   284  003FEE  00                 	db	0
   285  003FEF                     STR_8:
   286  003FEF  42                 	db	66	;'B'
   287  003FF0  4B                 	db	75	;'K'
   288  003FF1  57                 	db	87	;'W'
   289  003FF2  44                 	db	68	;'D'
   290  003FF3  00                 	db	0
   291  003FF4                     STR_11:
   292  003FF4  4B                 	db	75	;'K'
   293  003FF5  6D                 	db	109	;'m'
   294  003FF6  2F                 	db	47
   295  003FF7  68                 	db	104	;'h'
   296  003FF8  00                 	db	0
   297  003FF9                     STR_7:
   298  003FF9  46                 	db	70	;'F'
   299  003FFA  57                 	db	87	;'W'
   300  003FFB  44                 	db	68	;'D'
   301  003FFC  00                 	db	0
   302  003FFD                     STR_9:
   303  003FFD  50                 	db	80	;'P'
   304  003FFE  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  003FFF  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	nvBANK0
   310  0000F5                     __pnvBANK0:
   311                           	opt stack 0
   312  0000F5                     _clock_counter_reference:
   313                           	opt stack 0
   314  0000F5                     	ds	2
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2bits	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _INTCONbits	set	4082
   320  0000                     _IPR1bits	set	3999
   321  0000                     _IPR2bits	set	4002
   322  0000                     _LATA	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _LATD	set	3980
   327  0000                     _LATDbits	set	3980
   328  0000                     _LATE	set	3981
   329  0000                     _LATEbits	set	3981
   330  0000                     _PIE1	set	3997
   331  0000                     _PIE1bits	set	3997
   332  0000                     _PIE2bits	set	4000
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PIR2bits	set	4001
   335  0000                     _PORTAbits	set	3968
   336  0000                     _PORTBbits	set	3969
   337  0000                     _PORTDbits	set	3971
   338  0000                     _RCONbits	set	4048
   339  0000                     _RCREG	set	4014
   340  0000                     _RCSTA	set	4011
   341  0000                     _RCSTAbits	set	4011
   342  0000                     _SPBRG	set	4015
   343  0000                     _SPBRGH	set	4016
   344  0000                     _T3CON	set	4017
   345  0000                     _TMR3H	set	4019
   346  0000                     _TMR3L	set	4018
   347  0000                     _TRISA	set	3986
   348  0000                     _TRISB	set	3987
   349  0000                     _TRISC	set	3988
   350  0000                     _TRISCbits	set	3988
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISE	set	3990
   353  0000                     _TXREG	set	4013
   354  0000                     _TXSTA	set	4012
   355  0000                     _TXSTAbits	set	4012
   356                           
   357                           	psect	cinit
   358  0031FE                     __pcinit:
   359                           	opt stack 0
   360  0031FE                     start_initialization:
   361                           	opt stack 0
   362  0031FE                     __initialization:
   363                           	opt stack 0
   364                           
   365                           ; Clear objects allocated to BANK1 (12 bytes)
   366  0031FE  EE01  F019         	lfsr	0,__pbssBANK1
   367  003202  0E0C               	movlw	12
   368  003204                     clear_0:
   369  003204  6AEE               	clrf	postinc0,c
   370  003206  06E8               	decf	wreg,f,c
   371  003208  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (44 bytes)
   374  00320A  EE00  F0C9         	lfsr	0,__pbssBANK0
   375  00320E  0E2C               	movlw	44
   376  003210                     clear_1:
   377  003210  6AEE               	clrf	postinc0,c
   378  003212  06E8               	decf	wreg,f,c
   379  003214  E1FD               	bnz	clear_1
   380                           
   381                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   382  003216  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   383                           
   384                           ; Clear objects allocated to COMRAM (33 bytes)
   385  003218  EE00  F023         	lfsr	0,__pbssCOMRAM
   386  00321C  0E21               	movlw	33
   387  00321E                     clear_2:
   388  00321E  6AEE               	clrf	postinc0,c
   389  003220  06E8               	decf	wreg,f,c
   390  003222  E1FD               	bnz	clear_2
   391                           
   392                           ; Initialize objects allocated to COMRAM (1 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  003224  0EC8               	movlw	low __pidataCOMRAM
   395  003226  6EF6               	movwf	tblptrl,c
   396  003228  0E34               	movlw	high __pidataCOMRAM
   397  00322A  6EF7               	movwf	tblptrh,c
   398  00322C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  00322E  6EF8               	movwf	tblptru,c
   400  003230  0009               	tblrd		*+	;fetch initializer
   401  003232  CFF5 F045          	movff	tablat,__pdataCOMRAM
   402  003236                     end_of_initialization:
   403                           	opt stack 0
   404  003236                     __end_of__initialization:
   405                           	opt stack 0
   406  003236  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   407  003238  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   408  00323A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   409  00323C  6EF8               	movwf	tblptru,c
   410  00323E  0100               	movlb	0
   411  003240  EFA6  F00B         	goto	_main	;jump to C main() function
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419                           	psect	bitbssCOMRAM
   420  000220                     __pbitbssCOMRAM:
   421                           	opt stack 0
   422  000220                     _actual_dir:
   423                           	opt stack 0
   424  000220                     	ds	1
   425  000221                     _power_switch:
   426                           	opt stack 0
   427  000221                     	ds	1
   428  000222                     _wait_low:
   429                           	opt stack 0
   430  000222                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	bssCOMRAM
   439  000023                     __pbssCOMRAM:
   440                           	opt stack 0
   441  000023                     _JoystickConstants:
   442                           	opt stack 0
   443  000023                     	ds	8
   444  00002B                     _pr_time_1:
   445                           	opt stack 0
   446  00002B                     	ds	4
   447  00002F                     _time_counter:
   448                           	opt stack 0
   449  00002F                     	ds	4
   450  000033                     _JoystickValues:
   451                           	opt stack 0
   452  000033                     	ds	2
   453  000035                     _set_speed:
   454                           	opt stack 0
   455  000035                     	ds	2
   456  000037                     _Battery_Check:
   457                           	opt stack 0
   458  000037                     	ds	1
   459  000038                     _ECU_Check:
   460                           	opt stack 0
   461  000038                     	ds	1
   462  000039                     _USART_Status:
   463                           	opt stack 0
   464  000039                     	ds	1
   465  00003A                     _actual_speed_pk0:
   466                           	opt stack 0
   467  00003A                     	ds	1
   468  00003B                     _actual_speed_pk1:
   469                           	opt stack 0
   470  00003B                     	ds	1
   471  00003C                     _analogic_brake:
   472                           	opt stack 0
   473  00003C                     	ds	1
   474  00003D                     _dir:
   475                           	opt stack 0
   476  00003D                     	ds	1
   477  00003E                     _i:
   478                           	opt stack 0
   479  00003E                     	ds	1
   480  00003F                     _set_speed_pk0:
   481                           	opt stack 0
   482  00003F                     	ds	1
   483  000040                     _set_speed_pk1:
   484                           	opt stack 0
   485  000040                     	ds	1
   486  000041                     _set_steering:
   487                           	opt stack 0
   488  000041                     	ds	1
   489  000042                     _spam_counter:
   490                           	opt stack 0
   491  000042                     	ds	1
   492  000043                     _switch_position:
   493                           	opt stack 0
   494  000043                     	ds	1
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	dataCOMRAM
   503  000045                     __pdataCOMRAM:
   504                           	opt stack 0
   505  000045                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  000045                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515                           	psect	bssBANK0
   516  0000C9                     __pbssBANK0:
   517                           	opt stack 0
   518  0000C9                     _USART_Rx:
   519                           	opt stack 0
   520  0000C9                     	ds	8
   521  0000D1                     _USART_Tx_Old:
   522                           	opt stack 0
   523  0000D1                     	ds	8
   524  0000D9                     LCD_write_integer@F17027:
   525                           	opt stack 0
   526  0000D9                     	ds	6
   527  0000DF                     _actual_speed_kmh:
   528                           	opt stack 0
   529  0000DF                     	ds	4
   530  0000E3                     _pr_time_2:
   531                           	opt stack 0
   532  0000E3                     	ds	4
   533  0000E7                     _pr_time_3:
   534                           	opt stack 0
   535  0000E7                     	ds	4
   536  0000EB                     _actual_speed:
   537                           	opt stack 0
   538  0000EB                     	ds	2
   539  0000ED                     _USART_Tx:
   540                           	opt stack 0
   541  0000ED                     	ds	8
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           
   549                           	psect	bssBANK1
   550  000119                     __pbssBANK1:
   551                           	opt stack 0
   552  000119                     _str:
   553                           	opt stack 0
   554  000119                     	ds	12
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           
   562                           	psect	cstackBANK1
   563  000100                     __pcstackBANK1:
   564                           	opt stack 0
   565  000100                     _sprintf$2399:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x0
   569  000100                     	ds	4
   570  000104                     sprintf@ap:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  000104                     	ds	2
   575  000106                     sprintf@flag:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x6
   579  000106                     	ds	2
   580  000108                     sprintf@val:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x8
   584  000108                     	ds	4
   585  00010C                     sprintf@exp:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589  00010C                     	ds	2
   590  00010E                     sprintf@tmpval:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0xE
   594  00010E                     	ds	4
   595  000112                     sprintf@prec:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     sprintf@fval:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x14
   604  000114                     	ds	4
   605  000118                     sprintf@c:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x18
   609  000118                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           	psect	cstackBANK0
   618  000060                     __pcstackBANK0:
   619                           	opt stack 0
   620  000060                     ??_USART_RX:
   621  000060                     ??_Joystick_Polling:
   622  000060                     ??_isdigit:
   623  000060                     ?___wmul:
   624                           	opt stack 0
   625  000060                     ?___awmod:
   626                           	opt stack 0
   627  000060                     ?___lwdiv:
   628                           	opt stack 0
   629  000060                     ?__tdiv_to_l_:
   630                           	opt stack 0
   631  000060                     ?__div_to_l_:
   632                           	opt stack 0
   633  000060                     ?___flneg:
   634                           	opt stack 0
   635  000060                     ?___lldiv:
   636                           	opt stack 0
   637  000060                     ?___llmod:
   638                           	opt stack 0
   639  000060                     delay_set_quartz@frequency:
   640                           	opt stack 0
   641  000060                     LCD_backlight@active:
   642                           	opt stack 0
   643  000060                     WriteUSART@data:
   644                           	opt stack 0
   645  000060                     OpenUSART@spbrg:
   646                           	opt stack 0
   647  000060                     ___wmul@multiplier:
   648                           	opt stack 0
   649  000060                     ___awmod@dividend:
   650                           	opt stack 0
   651  000060                     ___lwdiv@dividend:
   652                           	opt stack 0
   653  000060                     __div_to_l_@f1:
   654                           	opt stack 0
   655  000060                     ___flge@ff1:
   656                           	opt stack 0
   657  000060                     ___flneg@f1:
   658                           	opt stack 0
   659  000060                     __tdiv_to_l_@f1:
   660                           	opt stack 0
   661  000060                     ___lldiv@dividend:
   662                           	opt stack 0
   663  000060                     ___llmod@dividend:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x0
   667  000060                     	ds	1
   668  000061                     _isdigit$2005:
   669                           	opt stack 0
   670  000061                     putsUSART@data:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x1
   674  000061                     	ds	1
   675  000062                     USART_RX@i:
   676                           	opt stack 0
   677  000062                     OpenUSART@config:
   678                           	opt stack 0
   679  000062                     isdigit@c:
   680                           	opt stack 0
   681  000062                     ___wmul@multiplicand:
   682                           	opt stack 0
   683  000062                     ___awmod@divisor:
   684                           	opt stack 0
   685  000062                     ___lwdiv@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x2
   689  000062                     	ds	1
   690  000063                     
   691                           ; 0 bytes @ 0x3
   692  000063                     	ds	1
   693  000064                     ___awmod@counter:
   694                           	opt stack 0
   695  000064                     ___lwdiv@counter:
   696                           	opt stack 0
   697  000064                     ___wmul@product:
   698                           	opt stack 0
   699  000064                     __div_to_l_@f2:
   700                           	opt stack 0
   701  000064                     ___flge@ff2:
   702                           	opt stack 0
   703  000064                     __tdiv_to_l_@f2:
   704                           	opt stack 0
   705  000064                     ___lldiv@divisor:
   706                           	opt stack 0
   707  000064                     ___llmod@divisor:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x4
   711  000064                     	ds	1
   712  000065                     ___awmod@sign:
   713                           	opt stack 0
   714  000065                     ___lwdiv@quotient:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x5
   718  000065                     	ds	1
   719  000066                     ?___awdiv:
   720                           	opt stack 0
   721  000066                     delay_ms@value_ms:
   722                           	opt stack 0
   723  000066                     ___awdiv@dividend:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x6
   727  000066                     	ds	1
   728  000067                     ?___xxtofl:
   729                           	opt stack 0
   730  000067                     ___xxtofl@val:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x7
   734  000067                     	ds	1
   735  000068                     ??_USART_Send:
   736  000068                     ??__tdiv_to_l_:
   737  000068                     ??___flge:
   738  000068                     delay_s@value_s:
   739                           	opt stack 0
   740  000068                     LCD_send_command@D2:
   741                           	opt stack 0
   742  000068                     ___llmod@counter:
   743                           	opt stack 0
   744  000068                     ___awdiv@divisor:
   745                           	opt stack 0
   746  000068                     __div_to_l_@quot:
   747                           	opt stack 0
   748  000068                     ___lldiv@quotient:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x8
   752  000068                     	ds	1
   753  000069                     delay_s@repeat_loop:
   754                           	opt stack 0
   755  000069                     LCD_send_command@D1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x9
   759  000069                     	ds	1
   760  00006A                     LCD_send_command@D0:
   761                           	opt stack 0
   762  00006A                     USART_Send@i:
   763                           	opt stack 0
   764  00006A                     ___awdiv@counter:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0xA
   768  00006A                     	ds	1
   769  00006B                     ??___xxtofl:
   770  00006B                     LCD_send_command@D3:
   771                           	opt stack 0
   772  00006B                     USART_Send@i_1320:
   773                           	opt stack 0
   774  00006B                     ___awdiv@sign:
   775                           	opt stack 0
   776  00006B                     __tdiv_to_l_@quot:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0xB
   780  00006B                     	ds	1
   781  00006C                     LCD_goto_line@line:
   782                           	opt stack 0
   783  00006C                     LCD_write_char@D3:
   784                           	opt stack 0
   785  00006C                     LCD_cursor@blinking:
   786                           	opt stack 0
   787  00006C                     USART_Send@i_1329:
   788                           	opt stack 0
   789  00006C                     __div_to_l_@cntr:
   790                           	opt stack 0
   791  00006C                     ___lldiv@counter:
   792                           	opt stack 0
   793  00006C                     ___awdiv@quotient:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0xC
   797  00006C                     	ds	1
   798  00006D                     LCD_write_char@D2:
   799                           	opt stack 0
   800  00006D                     LCD_cursor@active:
   801                           	opt stack 0
   802  00006D                     __div_to_l_@exp1:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806  00006D                     	ds	1
   807  00006E                     LCD_write_char@D1:
   808                           	opt stack 0
   809  00006E                     LCD_initialize@quartz_frequency:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0xE
   813  00006E                     	ds	1
   814  00006F                     LCD_write_char@D0:
   815                           	opt stack 0
   816  00006F                     __tdiv_to_l_@cntr:
   817                           	opt stack 0
   818  00006F                     ___xxtofl@sign:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0xF
   822  00006F                     	ds	1
   823  000070                     LCD_write_char@value:
   824                           	opt stack 0
   825  000070                     __tdiv_to_l_@exp1:
   826                           	opt stack 0
   827  000070                     ___xxtofl@exp:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x10
   831  000070                     	ds	1
   832  000071                     LCD_write_message@buffer:
   833                           	opt stack 0
   834  000071                     LCD_write_string@buffer:
   835                           	opt stack 0
   836  000071                     ___xxtofl@arg:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x11
   840  000071                     	ds	2
   841  000073                     
   842                           ; 0 bytes @ 0x13
   843  000073                     	ds	2
   844  000075                     ?___flmul:
   845                           	opt stack 0
   846  000075                     ___flmul@b:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x15
   850  000075                     	ds	4
   851  000079                     ___flmul@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x19
   855  000079                     	ds	4
   856  00007D                     ??___flmul:
   857                           
   858                           ; 0 bytes @ 0x1D
   859  00007D                     	ds	4
   860  000081                     ___flmul@sign:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x21
   864  000081                     	ds	1
   865  000082                     ___flmul@aexp:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x22
   869  000082                     	ds	1
   870  000083                     ___flmul@grs:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x23
   874  000083                     	ds	4
   875  000087                     ___flmul@bexp:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x27
   879  000087                     	ds	1
   880  000088                     ___flmul@prod:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x28
   884  000088                     	ds	4
   885  00008C                     ___flmul@temp:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x2C
   889  00008C                     	ds	2
   890  00008E                     ?_fround:
   891                           	opt stack 0
   892  00008E                     ?_scale:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x2E
   896  00008E                     	ds	4
   897  000092                     _fround$2397:
   898                           	opt stack 0
   899  000092                     _scale$2398:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x32
   903  000092                     	ds	4
   904  000096                     scale@scl:
   905                           	opt stack 0
   906  000096                     _fround$2396:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x36
   910  000096                     	ds	1
   911  000097                     ?___fltol:
   912                           	opt stack 0
   913  000097                     ___fltol@f1:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x37
   917  000097                     	ds	3
   918  00009A                     fround@prec:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x3A
   922  00009A                     	ds	1
   923  00009B                     ??___fltol:
   924  00009B                     ?___fladd:
   925                           	opt stack 0
   926  00009B                     ___fladd@b:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x3B
   930  00009B                     	ds	4
   931  00009F                     ___fltol@sign1:
   932                           	opt stack 0
   933  00009F                     ___fladd@a:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x3F
   937  00009F                     	ds	1
   938  0000A0                     ___fltol@exp1:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x40
   942  0000A0                     	ds	3
   943  0000A3                     ??___fladd:
   944                           
   945                           ; 0 bytes @ 0x43
   946  0000A3                     	ds	8
   947  0000AB                     ___fladd@signs:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x4B
   951  0000AB                     	ds	1
   952  0000AC                     ___fladd@aexp:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x4C
   956  0000AC                     	ds	1
   957  0000AD                     ___fladd@bexp:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x4D
   961  0000AD                     	ds	1
   962  0000AE                     ___fladd@grs:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x4E
   966  0000AE                     	ds	1
   967  0000AF                     ?___flsub:
   968                           	opt stack 0
   969  0000AF                     ___flsub@b:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x4F
   973  0000AF                     	ds	4
   974  0000B3                     ___flsub@a:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x53
   978  0000B3                     	ds	4
   979  0000B7                     ?_sprintf:
   980                           	opt stack 0
   981  0000B7                     sprintf@sp:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x57
   985  0000B7                     	ds	2
   986  0000B9                     sprintf@f:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x59
   990  0000B9                     	ds	6
   991  0000BF                     ??_sprintf:
   992                           
   993                           ; 0 bytes @ 0x5F
   994  0000BF                     	ds	2
   995  0000C1                     ??_main:
   996                           
   997                           ; 0 bytes @ 0x61
   998  0000C1                     	ds	8
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           
  1006                           	psect	cstackCOMRAM
  1007  000001                     __pcstackCOMRAM:
  1008                           	opt stack 0
  1009  000001                     ??_ISR_bassa:
  1010  000001                     
  1011                           ; 0 bytes @ 0x0
  1012  000001                     	ds	17
  1013  000012                     ??i2_USART_RX:
  1014                           
  1015                           ; 0 bytes @ 0x11
  1016  000012                     	ds	2
  1017  000014                     i2USART_RX@i:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x13
  1021  000014                     	ds	1
  1022  000015                     ??_ISR_alta:
  1023                           
  1024                           ; 0 bytes @ 0x14
  1025  000015                     	ds	14
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 117 in file "telecomando.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1052 ;;      Params:         0       0       0       0
  1053 ;;      Locals:         0       0       0       0
  1054 ;;      Temps:          0       8       0       0
  1055 ;;      Totals:         0       8       0       0
  1056 ;;Total ram usage:        8 bytes
  1057 ;; Hardware stack levels required when called:   10
  1058 ;; This function calls:
  1059 ;;		_Joystick_Polling
  1060 ;;		_LCD_Handler
  1061 ;;		_LCD_clear
  1062 ;;		_LCD_goto_line
  1063 ;;		_LCD_write_message
  1064 ;;		_PWR_Button_Polling
  1065 ;;		_USART_RX
  1066 ;;		_USART_Send
  1067 ;;		___flmul
  1068 ;;		___fltol
  1069 ;;		___xxtofl
  1070 ;;		_board_initialization
  1071 ;;		_delay_ms
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text0
  1078  00174C                     __ptext0:
  1079                           	opt stack 0
  1080  00174C                     _main:
  1081                           	opt stack 21
  1082                           
  1083                           ;telecomando.c: 118: board_initialization();
  1084                           
  1085                           ;incstack = 0
  1086  00174C  EC4A  F015         	call	_board_initialization	;wreg free
  1087                           
  1088                           ;telecomando.c: 120: PORTDbits.RD7 = 0;
  1089  001750  9E83               	bcf	3971,7,c	;volatile
  1090                           
  1091                           ;telecomando.c: 123: USART_Tx[0] = 0xAA;
  1092  001752  0EAA               	movlw	170
  1093  001754  0100               	movlb	0	; () banked
  1094  001756  6FED               	movwf	_USART_Tx& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;telecomando.c: 124: USART_Tx[1] = 0x01;
  1098  001758  0E01               	movlw	1
  1099  00175A  0100               	movlb	0	; () banked
  1100  00175C  6FEE               	movwf	(_USART_Tx+1)& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;telecomando.c: 125: USART_Tx[2] = 0x01;
  1104  00175E  0E01               	movlw	1
  1105  001760  0100               	movlb	0	; () banked
  1106  001762  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;telecomando.c: 126: USART_Tx[3] = 0x01;
  1110  001764  0E01               	movlw	1
  1111  001766  0100               	movlb	0	; () banked
  1112  001768  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;telecomando.c: 127: USART_Tx[4] = 0x01;
  1116  00176A  0E01               	movlw	1
  1117  00176C  0100               	movlb	0	; () banked
  1118  00176E  6FF1               	movwf	(_USART_Tx+4)& (0+255),b
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;telecomando.c: 128: USART_Tx[5] = 0x01;
  1122  001770  0E01               	movlw	1
  1123  001772  0100               	movlb	0	; () banked
  1124  001774  6FF2               	movwf	(_USART_Tx+5)& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;telecomando.c: 129: USART_Tx[6] = 0xAA;
  1128  001776  0EAA               	movlw	170
  1129  001778  0100               	movlb	0	; () banked
  1130  00177A  6FF3               	movwf	(_USART_Tx+6)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;telecomando.c: 130: USART_Tx[7] = '\0';
  1134  00177C  0E00               	movlw	0
  1135  00177E  0100               	movlb	0	; () banked
  1136  001780  6FF4               	movwf	(_USART_Tx+7)& (0+255),b
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;telecomando.c: 131: JoystickConstants[0] = 0.703;
  1140  001782  0ECF               	movlw	207
  1141  001784  6E23               	movwf	_JoystickConstants,c	;volatile
  1142  001786  0EF7               	movlw	247
  1143  001788  6E24               	movwf	_JoystickConstants+1,c	;volatile
  1144  00178A  0E33               	movlw	51
  1145  00178C  6E25               	movwf	_JoystickConstants+2,c	;volatile
  1146  00178E  0E3F               	movlw	63
  1147  001790  6E26               	movwf	_JoystickConstants+3,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;telecomando.c: 132: JoystickConstants[1] = 35;
  1151  001792  0E00               	movlw	0
  1152  001794  6E27               	movwf	_JoystickConstants+4,c	;volatile
  1153  001796  0E00               	movlw	0
  1154  001798  6E28               	movwf	_JoystickConstants+5,c	;volatile
  1155  00179A  0E0C               	movlw	12
  1156  00179C  6E29               	movwf	_JoystickConstants+6,c	;volatile
  1157  00179E  0E42               	movlw	66
  1158  0017A0  6E2A               	movwf	_JoystickConstants+7,c	;volatile
  1159  0017A2                     l6079:
  1160                           
  1161                           ;telecomando.c: 138: USART_RX();
  1162  0017A2  EC77  F016         	call	_USART_RX	;wreg free
  1163                           
  1164                           ;telecomando.c: 139: PWR_Button_Polling();
  1165  0017A6  EC3E  F01A         	call	_PWR_Button_Polling	;wreg free
  1166                           
  1167                           ;telecomando.c: 141: if (power_switch == 0) {
  1168  0017AA  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1169  0017AC  D094               	goto	l6113
  1170                           
  1171                           ;telecomando.c: 142: dir = 2;
  1172  0017AE  0E02               	movlw	2
  1173  0017B0  6E3D               	movwf	_dir,c	;volatile
  1174                           
  1175                           ;telecomando.c: 143: set_speed = 0;
  1176  0017B2  0E00               	movlw	0
  1177  0017B4  6E36               	movwf	_set_speed+1,c	;volatile
  1178  0017B6  0E00               	movlw	0
  1179  0017B8  6E35               	movwf	_set_speed,c	;volatile
  1180                           
  1181                           ;telecomando.c: 144: set_steering = 90;
  1182  0017BA  0E5A               	movlw	90
  1183  0017BC  6E41               	movwf	_set_steering,c	;volatile
  1184                           
  1185                           ;telecomando.c: 145: analogic_brake = 0;
  1186  0017BE  0E00               	movlw	0
  1187  0017C0  6E3C               	movwf	_analogic_brake,c	;volatile
  1188  0017C2                     l254:
  1189  0017C2  A2AC               	btfss	4012,1,c	;volatile
  1190  0017C4  D7FE               	goto	l254
  1191                           
  1192                           ;telecomando.c: 147: };
  1193                           ;telecomando.c: 148: USART_Send();
  1194  0017C6  EC4E  F012         	call	_USART_Send	;wreg free
  1195                           
  1196                           ;telecomando.c: 149: while (power_switch == 0) {
  1197  0017CA  D082               	goto	l6111
  1198  0017CC                     l6089:
  1199                           
  1200                           ;telecomando.c: 150: LCD_clear();
  1201  0017CC  ECAC  F019         	call	_LCD_clear	;wreg free
  1202                           
  1203                           ;telecomando.c: 151: LCD_goto_line(1);
  1204  0017D0  0E01               	movlw	1
  1205  0017D2  ECD4  F014         	call	_LCD_goto_line
  1206                           
  1207                           ;telecomando.c: 152: LCD_write_message("====================");
  1208  0017D6  0EBA               	movlw	low STR_1
  1209  0017D8  0100               	movlb	0	; () banked
  1210  0017DA  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1211  0017DC  0E3F               	movlw	high STR_1
  1212  0017DE  0100               	movlb	0	; () banked
  1213  0017E0  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1214  0017E2  ECDB  F019         	call	_LCD_write_message	;wreg free
  1215                           
  1216                           ;telecomando.c: 153: LCD_goto_line(2);
  1217  0017E6  0E02               	movlw	2
  1218  0017E8  ECD4  F014         	call	_LCD_goto_line
  1219                           
  1220                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1221  0017EC  0E90               	movlw	low STR_2
  1222  0017EE  0100               	movlb	0	; () banked
  1223  0017F0  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1224  0017F2  0E3F               	movlw	high STR_2
  1225  0017F4  0100               	movlb	0	; () banked
  1226  0017F6  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1227  0017F8  ECDB  F019         	call	_LCD_write_message	;wreg free
  1228                           
  1229                           ;telecomando.c: 155: LCD_goto_line(3);
  1230  0017FC  0E03               	movlw	3
  1231  0017FE  ECD4  F014         	call	_LCD_goto_line
  1232                           
  1233                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1234  001802  0E7B               	movlw	low STR_3
  1235  001804  0100               	movlb	0	; () banked
  1236  001806  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1237  001808  0E3F               	movlw	high STR_3
  1238  00180A  0100               	movlb	0	; () banked
  1239  00180C  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1240  00180E  ECDB  F019         	call	_LCD_write_message	;wreg free
  1241                           
  1242                           ;telecomando.c: 157: LCD_goto_line(4);
  1243  001812  0E04               	movlw	4
  1244  001814  ECD4  F014         	call	_LCD_goto_line
  1245                           
  1246                           ;telecomando.c: 158: LCD_write_message("====================");
  1247  001818  0EBA               	movlw	low STR_1
  1248  00181A  0100               	movlb	0	; () banked
  1249  00181C  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1250  00181E  0E3F               	movlw	high STR_1
  1251  001820  0100               	movlb	0	; () banked
  1252  001822  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1253  001824  ECDB  F019         	call	_LCD_write_message	;wreg free
  1254                           
  1255                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 50) {
  1256  001828  C02B  F0C1         	movff	_pr_time_1,??_main	;volatile
  1257  00182C  C02C  F0C2         	movff	_pr_time_1+1,??_main+1	;volatile
  1258  001830  C02D  F0C3         	movff	_pr_time_1+2,??_main+2	;volatile
  1259  001834  C02E  F0C4         	movff	_pr_time_1+3,??_main+3	;volatile
  1260  001838  0100               	movlb	0	; () banked
  1261  00183A  1FC1               	comf	??_main& (0+255),f,b
  1262  00183C  1FC2               	comf	(??_main+1)& (0+255),f,b
  1263  00183E  1FC3               	comf	(??_main+2)& (0+255),f,b
  1264  001840  1FC4               	comf	(??_main+3)& (0+255),f,b
  1265  001842  2BC1               	incf	??_main& (0+255),f,b
  1266  001844  0E00               	movlw	0
  1267  001846  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1268  001848  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1269  00184A  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1270  00184C  502F               	movf	_time_counter,w,c	;volatile
  1271  00184E  0100               	movlb	0	; () banked
  1272  001850  25C1               	addwf	??_main& (0+255),w,b
  1273  001852  0100               	movlb	0	; () banked
  1274  001854  6FC5               	movwf	(??_main+4)& (0+255),b
  1275  001856  5030               	movf	_time_counter+1,w,c	;volatile
  1276  001858  0100               	movlb	0	; () banked
  1277  00185A  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1278  00185C  0100               	movlb	0	; () banked
  1279  00185E  6FC6               	movwf	(??_main+5)& (0+255),b
  1280  001860  5031               	movf	_time_counter+2,w,c	;volatile
  1281  001862  0100               	movlb	0	; () banked
  1282  001864  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1283  001866  0100               	movlb	0	; () banked
  1284  001868  6FC7               	movwf	(??_main+6)& (0+255),b
  1285  00186A  5032               	movf	_time_counter+3,w,c	;volatile
  1286  00186C  0100               	movlb	0	; () banked
  1287  00186E  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1288  001870  0100               	movlb	0	; () banked
  1289  001872  6FC8               	movwf	(??_main+7)& (0+255),b
  1290  001874  0100               	movlb	0	; () banked
  1291  001876  51C8               	movf	(??_main+7)& (0+255),w,b
  1292  001878  0100               	movlb	0	; () banked
  1293  00187A  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1294  00187C  0100               	movlb	0	; () banked
  1295  00187E  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1296  001880  E105               	bnz	u7360
  1297  001882  0E32               	movlw	50
  1298  001884  0100               	movlb	0	; () banked
  1299  001886  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1300  001888  A0D8               	btfss	status,0,c
  1301  00188A  D019               	goto	l6107
  1302  00188C                     u7360:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1306  00188C  C02F  F02B         	movff	_time_counter,_pr_time_1	;volatile
  1307  001890  C030  F02C         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1308  001894  C031  F02D         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1309  001898  C032  F02E         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1313  00189C  AE83               	btfss	3971,7,c	;volatile
  1314  00189E  D002               	goto	u7370
  1315  0018A0  0E01               	movlw	1
  1316  0018A2  D001               	goto	u7376
  1317  0018A4                     u7370:
  1318  0018A4  0E00               	movlw	0
  1319  0018A6                     u7376:
  1320  0018A6  0AFF               	xorlw	255
  1321  0018A8  0100               	movlb	0	; () banked
  1322  0018AA  6FC1               	movwf	??_main& (0+255),b
  1323  0018AC  0100               	movlb	0	; () banked
  1324  0018AE  33C1               	rrcf	??_main& (0+255),f,b
  1325  0018B0  33C1               	rrcf	??_main& (0+255),f,b
  1326  0018B2  5083               	movf	3971,w,c	;volatile
  1327  0018B4  0100               	movlb	0	; () banked
  1328  0018B6  19C1               	xorwf	??_main& (0+255),w,b
  1329  0018B8  0B7F               	andlw	-129
  1330  0018BA  19C1               	xorwf	??_main& (0+255),w,b
  1331  0018BC  6E83               	movwf	3971,c	;volatile
  1332  0018BE                     l6107:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;telecomando.c: 162: }
  1336                           ;telecomando.c: 163: PWR_Button_Polling();
  1337  0018BE  EC3E  F01A         	call	_PWR_Button_Polling	;wreg free
  1338                           
  1339                           ;telecomando.c: 164: delay_ms(300);
  1340  0018C2  0E01               	movlw	1
  1341  0018C4  0100               	movlb	0	; () banked
  1342  0018C6  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1343  0018C8  0E2C               	movlw	44
  1344  0018CA  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1345  0018CC  EC3F  F019         	call	_delay_ms	;wreg free
  1346  0018D0                     l6111:
  1347  0018D0  A244               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1348  0018D2  D77C               	goto	l6089
  1349                           
  1350                           ;telecomando.c: 165: }
  1351                           ;telecomando.c: 166: PORTDbits.RD7 = 0;
  1352  0018D4  9E83               	bcf	3971,7,c	;volatile
  1353  0018D6                     l6113:
  1354                           
  1355                           ;telecomando.c: 167: }
  1356                           ;telecomando.c: 169: Joystick_Polling();
  1357  0018D6  ECB5  F018         	call	_Joystick_Polling	;wreg free
  1358                           
  1359                           ;telecomando.c: 172: if (PORTAbits.RA2 == 1) {
  1360  0018DA  A480               	btfss	3968,2,c	;volatile
  1361  0018DC  D003               	goto	l261
  1362                           
  1363                           ;telecomando.c: 173: switch_position = 0;
  1364  0018DE  0E00               	movlw	0
  1365  0018E0  6E43               	movwf	_switch_position,c	;volatile
  1366                           
  1367                           ;telecomando.c: 174: } else {
  1368  0018E2  D00A               	goto	l6123
  1369  0018E4                     l261:
  1370                           
  1371                           ;telecomando.c: 175: if (PORTAbits.RA3 == 0) {
  1372  0018E4  B680               	btfsc	3968,3,c	;volatile
  1373  0018E6  D004               	goto	l6121
  1374                           
  1375                           ;telecomando.c: 176: switch_position = 1;
  1376  0018E8  0E01               	movlw	1
  1377  0018EA  6E43               	movwf	_switch_position,c	;volatile
  1378                           
  1379                           ;telecomando.c: 177: dir = 2;
  1380  0018EC  0E02               	movlw	2
  1381  0018EE  D003               	goto	L1
  1382  0018F0                     l6121:
  1383                           
  1384                           ;telecomando.c: 179: switch_position = 2;
  1385  0018F0  0E02               	movlw	2
  1386  0018F2  6E43               	movwf	_switch_position,c	;volatile
  1387                           
  1388                           ;telecomando.c: 180: dir = 1;
  1389  0018F4  0E01               	movlw	1
  1390  0018F6                     L1:
  1391  0018F6  6E3D               	movwf	_dir,c	;volatile
  1392  0018F8                     l6123:
  1393                           
  1394                           ;telecomando.c: 181: }
  1395                           ;telecomando.c: 182: }
  1396                           ;telecomando.c: 184: set_steering = (JoystickValues[0])*(JoystickConstants[0]);
  1397  0018F8  C023  F079         	movff	_JoystickConstants,___flmul@a	;volatile
  1398  0018FC  C024  F07A         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1399  001900  C025  F07B         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1400  001904  C026  F07C         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1401  001908  5033               	movf	_JoystickValues,w,c	;volatile
  1402  00190A  0100               	movlb	0	; () banked
  1403  00190C  6F67               	movwf	___xxtofl@val& (0+255),b
  1404  00190E  6B68               	clrf	(___xxtofl@val+1)& (0+255),b
  1405  001910  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1406  001912  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1407  001914  0E00               	movlw	0
  1408  001916  EC0C  F00F         	call	___xxtofl
  1409  00191A  C067  F075         	movff	?___xxtofl,___flmul@b
  1410  00191E  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1411  001922  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1412  001926  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1413  00192A  EC53  F009         	call	___flmul	;wreg free
  1414  00192E  C075  F097         	movff	?___flmul,___fltol@f1
  1415  001932  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1416  001936  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1417  00193A  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1418  00193E  EC4E  F014         	call	___fltol	;wreg free
  1419  001942  0100               	movlb	0	; () banked
  1420  001944  5197               	movf	?___fltol& (0+255),w,b
  1421  001946  6E41               	movwf	_set_steering,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;telecomando.c: 185: if (switch_position != 0) {
  1425  001948  5043               	movf	_switch_position,w,c	;volatile
  1426  00194A  B4D8               	btfsc	status,2,c
  1427  00194C  D083               	goto	l6137
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;telecomando.c: 186: if (JoystickValues[1] > 132) {
  1431  00194E  0E84               	movlw	132
  1432  001950  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  1433  001952  D041               	goto	l6133
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;telecomando.c: 187: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1437  001954  C027  F079         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1438  001958  C028  F07A         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1439  00195C  C029  F07B         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1440  001960  C02A  F07C         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1441  001964  0E7E               	movlw	126
  1442  001966  0100               	movlb	0	; () banked
  1443  001968  6FC1               	movwf	??_main& (0+255),b
  1444  00196A  0EFF               	movlw	255
  1445  00196C  0100               	movlb	0	; () banked
  1446  00196E  6FC2               	movwf	(??_main+1)& (0+255),b
  1447  001970  5034               	movf	_JoystickValues+1,w,c	;volatile
  1448  001972  0100               	movlb	0	; () banked
  1449  001974  6FC3               	movwf	(??_main+2)& (0+255),b
  1450  001976  6BC4               	clrf	(??_main+3)& (0+255),b
  1451  001978  0100               	movlb	0	; () banked
  1452  00197A  51C1               	movf	??_main& (0+255),w,b
  1453  00197C  0100               	movlb	0	; () banked
  1454  00197E  27C3               	addwf	(??_main+2)& (0+255),f,b
  1455  001980  0100               	movlb	0	; () banked
  1456  001982  51C2               	movf	(??_main+1)& (0+255),w,b
  1457  001984  0100               	movlb	0	; () banked
  1458  001986  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1459  001988  C0C3  F067         	movff	??_main+2,___xxtofl@val
  1460  00198C  C0C4  F068         	movff	??_main+3,___xxtofl@val+1
  1461  001990  0100               	movlb	0	; () banked
  1462  001992  0E00               	movlw	0
  1463  001994  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1464  001996  0EFF               	movlw	-1
  1465  001998  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1466  00199A  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1467  00199C  0E01               	movlw	1
  1468  00199E  EC0C  F00F         	call	___xxtofl
  1469  0019A2  C067  F075         	movff	?___xxtofl,___flmul@b
  1470  0019A6  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1471  0019AA  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1472  0019AE  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1473  0019B2  EC53  F009         	call	___flmul	;wreg free
  1474  0019B6  C075  F097         	movff	?___flmul,___fltol@f1
  1475  0019BA  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1476  0019BE  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1477  0019C2  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1478  0019C6  EC4E  F014         	call	___fltol	;wreg free
  1479  0019CA  C097  F035         	movff	?___fltol,_set_speed	;volatile
  1480  0019CE  C098  F036         	movff	?___fltol+1,_set_speed+1	;volatile
  1481                           
  1482                           ;telecomando.c: 188: analogic_brake = 0;
  1483  0019D2  0E00               	movlw	0
  1484  0019D4  D03E               	goto	L2
  1485  0019D6                     l6133:
  1486                           
  1487                           ;telecomando.c: 190: set_speed = 0;
  1488  0019D6  0E00               	movlw	0
  1489  0019D8  6E36               	movwf	_set_speed+1,c	;volatile
  1490  0019DA  0E00               	movlw	0
  1491  0019DC  6E35               	movwf	_set_speed,c	;volatile
  1492                           
  1493                           ;telecomando.c: 191: analogic_brake = ((130 - JoystickValues[1]))*(1.9);
  1494  0019DE  0E33               	movlw	51
  1495  0019E0  0100               	movlb	0	; () banked
  1496  0019E2  6F79               	movwf	___flmul@a& (0+255),b
  1497  0019E4  0E33               	movlw	51
  1498  0019E6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  1499  0019E8  0EF3               	movlw	243
  1500  0019EA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  1501  0019EC  0E3F               	movlw	63
  1502  0019EE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  1503  0019F0  5034               	movf	_JoystickValues+1,w,c	;volatile
  1504  0019F2  0100               	movlb	0	; () banked
  1505  0019F4  6FC1               	movwf	??_main& (0+255),b
  1506  0019F6  6BC2               	clrf	(??_main+1)& (0+255),b
  1507  0019F8  0100               	movlb	0	; () banked
  1508  0019FA  1FC1               	comf	??_main& (0+255),f,b
  1509  0019FC  1FC2               	comf	(??_main+1)& (0+255),f,b
  1510  0019FE  4BC1               	infsnz	??_main& (0+255),f,b
  1511  001A00  2BC2               	incf	(??_main+1)& (0+255),f,b
  1512  001A02  0E82               	movlw	130
  1513  001A04  0100               	movlb	0	; () banked
  1514  001A06  27C1               	addwf	??_main& (0+255),f,b
  1515  001A08  0E00               	movlw	0
  1516  001A0A  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1517  001A0C  C0C1  F067         	movff	??_main,___xxtofl@val
  1518  001A10  C0C2  F068         	movff	??_main+1,___xxtofl@val+1
  1519  001A14  0100               	movlb	0	; () banked
  1520  001A16  0E00               	movlw	0
  1521  001A18  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1522  001A1A  0EFF               	movlw	-1
  1523  001A1C  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1524  001A1E  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1525  001A20  0E01               	movlw	1
  1526  001A22  EC0C  F00F         	call	___xxtofl
  1527  001A26  C067  F075         	movff	?___xxtofl,___flmul@b
  1528  001A2A  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1529  001A2E  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1530  001A32  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1531  001A36  EC53  F009         	call	___flmul	;wreg free
  1532  001A3A  C075  F097         	movff	?___flmul,___fltol@f1
  1533  001A3E  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1534  001A42  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1535  001A46  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1536  001A4A  EC4E  F014         	call	___fltol	;wreg free
  1537  001A4E  0100               	movlb	0	; () banked
  1538  001A50  5197               	movf	?___fltol& (0+255),w,b
  1539  001A52                     L2:
  1540  001A52  6E3C               	movwf	_analogic_brake,c	;volatile
  1541  001A54                     l6137:
  1542                           
  1543                           ;telecomando.c: 192: }
  1544                           ;telecomando.c: 193: }
  1545                           ;telecomando.c: 195: if ((time_counter - pr_time_2) >= 2) {
  1546  001A54  C0E3  F0C1         	movff	_pr_time_2,??_main	;volatile
  1547  001A58  C0E4  F0C2         	movff	_pr_time_2+1,??_main+1	;volatile
  1548  001A5C  C0E5  F0C3         	movff	_pr_time_2+2,??_main+2	;volatile
  1549  001A60  C0E6  F0C4         	movff	_pr_time_2+3,??_main+3	;volatile
  1550  001A64  0100               	movlb	0	; () banked
  1551  001A66  1FC1               	comf	??_main& (0+255),f,b
  1552  001A68  1FC2               	comf	(??_main+1)& (0+255),f,b
  1553  001A6A  1FC3               	comf	(??_main+2)& (0+255),f,b
  1554  001A6C  1FC4               	comf	(??_main+3)& (0+255),f,b
  1555  001A6E  2BC1               	incf	??_main& (0+255),f,b
  1556  001A70  0E00               	movlw	0
  1557  001A72  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1558  001A74  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1559  001A76  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1560  001A78  502F               	movf	_time_counter,w,c	;volatile
  1561  001A7A  0100               	movlb	0	; () banked
  1562  001A7C  25C1               	addwf	??_main& (0+255),w,b
  1563  001A7E  0100               	movlb	0	; () banked
  1564  001A80  6FC5               	movwf	(??_main+4)& (0+255),b
  1565  001A82  5030               	movf	_time_counter+1,w,c	;volatile
  1566  001A84  0100               	movlb	0	; () banked
  1567  001A86  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1568  001A88  0100               	movlb	0	; () banked
  1569  001A8A  6FC6               	movwf	(??_main+5)& (0+255),b
  1570  001A8C  5031               	movf	_time_counter+2,w,c	;volatile
  1571  001A8E  0100               	movlb	0	; () banked
  1572  001A90  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1573  001A92  0100               	movlb	0	; () banked
  1574  001A94  6FC7               	movwf	(??_main+6)& (0+255),b
  1575  001A96  5032               	movf	_time_counter+3,w,c	;volatile
  1576  001A98  0100               	movlb	0	; () banked
  1577  001A9A  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1578  001A9C  0100               	movlb	0	; () banked
  1579  001A9E  6FC8               	movwf	(??_main+7)& (0+255),b
  1580  001AA0  0100               	movlb	0	; () banked
  1581  001AA2  51C8               	movf	(??_main+7)& (0+255),w,b
  1582  001AA4  0100               	movlb	0	; () banked
  1583  001AA6  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1584  001AA8  0100               	movlb	0	; () banked
  1585  001AAA  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1586  001AAC  E105               	bnz	u7430
  1587  001AAE  0E02               	movlw	2
  1588  001AB0  0100               	movlb	0	; () banked
  1589  001AB2  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1590  001AB4  A0D8               	btfss	status,0,c
  1591  001AB6  D00A               	goto	l6143
  1592  001AB8                     u7430:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;telecomando.c: 196: pr_time_2 = time_counter;
  1596  001AB8  C02F  F0E3         	movff	_time_counter,_pr_time_2	;volatile
  1597  001ABC  C030  F0E4         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1598  001AC0  C031  F0E5         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1599  001AC4  C032  F0E6         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;telecomando.c: 197: USART_Send();
  1603  001AC8  EC4E  F012         	call	_USART_Send	;wreg free
  1604  001ACC                     l6143:
  1605                           
  1606                           ;telecomando.c: 198: }
  1607                           ;telecomando.c: 200: if ((time_counter - pr_time_3) >= 50) {
  1608  001ACC  C0E7  F0C1         	movff	_pr_time_3,??_main	;volatile
  1609  001AD0  C0E8  F0C2         	movff	_pr_time_3+1,??_main+1	;volatile
  1610  001AD4  C0E9  F0C3         	movff	_pr_time_3+2,??_main+2	;volatile
  1611  001AD8  C0EA  F0C4         	movff	_pr_time_3+3,??_main+3	;volatile
  1612  001ADC  0100               	movlb	0	; () banked
  1613  001ADE  1FC1               	comf	??_main& (0+255),f,b
  1614  001AE0  1FC2               	comf	(??_main+1)& (0+255),f,b
  1615  001AE2  1FC3               	comf	(??_main+2)& (0+255),f,b
  1616  001AE4  1FC4               	comf	(??_main+3)& (0+255),f,b
  1617  001AE6  2BC1               	incf	??_main& (0+255),f,b
  1618  001AE8  0E00               	movlw	0
  1619  001AEA  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1620  001AEC  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1621  001AEE  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1622  001AF0  502F               	movf	_time_counter,w,c	;volatile
  1623  001AF2  0100               	movlb	0	; () banked
  1624  001AF4  25C1               	addwf	??_main& (0+255),w,b
  1625  001AF6  0100               	movlb	0	; () banked
  1626  001AF8  6FC5               	movwf	(??_main+4)& (0+255),b
  1627  001AFA  5030               	movf	_time_counter+1,w,c	;volatile
  1628  001AFC  0100               	movlb	0	; () banked
  1629  001AFE  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1630  001B00  0100               	movlb	0	; () banked
  1631  001B02  6FC6               	movwf	(??_main+5)& (0+255),b
  1632  001B04  5031               	movf	_time_counter+2,w,c	;volatile
  1633  001B06  0100               	movlb	0	; () banked
  1634  001B08  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1635  001B0A  0100               	movlb	0	; () banked
  1636  001B0C  6FC7               	movwf	(??_main+6)& (0+255),b
  1637  001B0E  5032               	movf	_time_counter+3,w,c	;volatile
  1638  001B10  0100               	movlb	0	; () banked
  1639  001B12  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1640  001B14  0100               	movlb	0	; () banked
  1641  001B16  6FC8               	movwf	(??_main+7)& (0+255),b
  1642  001B18  0100               	movlb	0	; () banked
  1643  001B1A  51C8               	movf	(??_main+7)& (0+255),w,b
  1644  001B1C  0100               	movlb	0	; () banked
  1645  001B1E  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1646  001B20  0100               	movlb	0	; () banked
  1647  001B22  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1648  001B24  E105               	bnz	u7440
  1649  001B26  0E32               	movlw	50
  1650  001B28  0100               	movlb	0	; () banked
  1651  001B2A  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1652  001B2C  A0D8               	btfss	status,0,c
  1653  001B2E  D639               	goto	l6079
  1654  001B30                     u7440:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;telecomando.c: 201: pr_time_3 = time_counter;
  1658  001B30  C02F  F0E7         	movff	_time_counter,_pr_time_3	;volatile
  1659  001B34  C030  F0E8         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1660  001B38  C031  F0E9         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1661  001B3C  C032  F0EA         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;telecomando.c: 202: LCD_Handler();
  1665  001B40  ECBE  F013         	call	_LCD_Handler	;wreg free
  1666  001B44  D62E               	goto	l6079
  1667  001B46                     __end_of_main:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _board_initialization *****************
  1678 ;; Defined at:
  1679 ;;		line 354 in file "telecomando.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1693 ;;      Params:         0       0       0       0
  1694 ;;      Locals:         0       0       0       0
  1695 ;;      Temps:          0       0       0       0
  1696 ;;      Totals:         0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    9
  1700 ;; This function calls:
  1701 ;;		_LCD_backlight
  1702 ;;		_LCD_clear
  1703 ;;		_LCD_goto_line
  1704 ;;		_LCD_initialize
  1705 ;;		_LCD_write_message
  1706 ;;		_OpenUSART
  1707 ;;		_delay_ms
  1708 ;;		_delay_s
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715  002A94                     __ptext1:
  1716                           	opt stack 0
  1717  002A94                     _board_initialization:
  1718                           	opt stack 21
  1719                           
  1720                           ;telecomando.c: 356: LATA = 0x00;
  1721                           
  1722                           ;incstack = 0
  1723  002A94  0E00               	movlw	0
  1724  002A96  6E89               	movwf	3977,c	;volatile
  1725                           
  1726                           ;telecomando.c: 357: TRISA = 0b00001111;
  1727  002A98  0E0F               	movlw	15
  1728  002A9A  6E92               	movwf	3986,c	;volatile
  1729                           
  1730                           ;telecomando.c: 358: LATB = 0x00;
  1731  002A9C  0E00               	movlw	0
  1732  002A9E  6E8A               	movwf	3978,c	;volatile
  1733                           
  1734                           ;telecomando.c: 359: TRISB = 0xFF;
  1735  002AA0  6893               	setf	3987,c	;volatile
  1736                           
  1737                           ;telecomando.c: 360: LATC = 0x00;
  1738  002AA2  0E00               	movlw	0
  1739  002AA4  6E8B               	movwf	3979,c	;volatile
  1740                           
  1741                           ;telecomando.c: 361: TRISC = 0b10110000;
  1742  002AA6  0EB0               	movlw	176
  1743  002AA8  6E94               	movwf	3988,c	;volatile
  1744                           
  1745                           ;telecomando.c: 362: LATD = 0x00;
  1746  002AAA  0E00               	movlw	0
  1747  002AAC  6E8C               	movwf	3980,c	;volatile
  1748                           
  1749                           ;telecomando.c: 363: TRISD = 0x00;
  1750  002AAE  0E00               	movlw	0
  1751  002AB0  6E95               	movwf	3989,c	;volatile
  1752                           
  1753                           ;telecomando.c: 364: LATE = 0x00;
  1754  002AB2  0E00               	movlw	0
  1755  002AB4  6E8D               	movwf	3981,c	;volatile
  1756                           
  1757                           ;telecomando.c: 365: TRISE = 0x00;
  1758  002AB6  0E00               	movlw	0
  1759  002AB8  6E96               	movwf	3990,c	;volatile
  1760                           
  1761                           ;telecomando.c: 368: PIR1bits.RCIF = 0;
  1762  002ABA  9A9E               	bcf	3998,5,c	;volatile
  1763                           
  1764                           ;telecomando.c: 369: PIR2bits.TMR3IF = 0;
  1765  002ABC  92A1               	bcf	4001,1,c	;volatile
  1766                           
  1767                           ;telecomando.c: 372: RCONbits.IPEN = 1;
  1768  002ABE  8ED0               	bsf	4048,7,c	;volatile
  1769                           
  1770                           ;telecomando.c: 373: IPR1bits.RCIP = 1;
  1771  002AC0  8A9F               	bsf	3999,5,c	;volatile
  1772                           
  1773                           ;telecomando.c: 374: IPR2bits.TMR3IP = 0;
  1774  002AC2  92A2               	bcf	4002,1,c	;volatile
  1775                           
  1776                           ;telecomando.c: 377: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1777  002AC4  0E4F               	movlw	79
  1778  002AC6  16AB               	andwf	4011,f,c	;volatile
  1779  002AC8  9AAC               	bcf	4012,5,c	;volatile
  1780  002ACA  0ECF               	movlw	207
  1781  002ACC  169D               	andwf	3997,f,c	;volatile
  1782                           
  1783                           ;telecomando.c: 378: delay_ms(10);
  1784  002ACE  0E00               	movlw	0
  1785  002AD0  0100               	movlb	0	; () banked
  1786  002AD2  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1787  002AD4  0E0A               	movlw	10
  1788  002AD6  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1789  002AD8  EC3F  F019         	call	_delay_ms	;wreg free
  1790                           
  1791                           ;telecomando.c: 379: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1792                           ;telecomando.c: 380: & 0b11111101 & 0b11111111 & 0b11111111, 25);
  1793  002ADC  0E00               	movlw	0
  1794  002ADE  0100               	movlb	0	; () banked
  1795  002AE0  6F61               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1796  002AE2  0E19               	movlw	25
  1797  002AE4  6F60               	movwf	OpenUSART@spbrg& (0+255),b
  1798  002AE6  0E7C               	movlw	124
  1799  002AE8  EC42  F018         	call	_OpenUSART
  1800                           
  1801                           ;telecomando.c: 383: ADCON1 = 0b00001101;
  1802  002AEC  0E0D               	movlw	13
  1803  002AEE  6EC1               	movwf	4033,c	;volatile
  1804                           
  1805                           ;telecomando.c: 384: ADCON0bits.CHS2 = 0;
  1806  002AF0  98C2               	bcf	4034,4,c	;volatile
  1807                           
  1808                           ;telecomando.c: 385: ADCON0bits.CHS1 = 0;
  1809  002AF2  96C2               	bcf	4034,3,c	;volatile
  1810                           
  1811                           ;telecomando.c: 386: ADCON0bits.CHS0 = 0;
  1812  002AF4  94C2               	bcf	4034,2,c	;volatile
  1813                           
  1814                           ;telecomando.c: 387: ADCON2bits.ACQT2 = 1;
  1815  002AF6  8AC0               	bsf	4032,5,c	;volatile
  1816                           
  1817                           ;telecomando.c: 388: ADCON2bits.ACQT1 = 1;
  1818  002AF8  88C0               	bsf	4032,4,c	;volatile
  1819                           
  1820                           ;telecomando.c: 389: ADCON2bits.ACQT0 = 0;
  1821  002AFA  96C0               	bcf	4032,3,c	;volatile
  1822                           
  1823                           ;telecomando.c: 390: ADCON2bits.ADCS2 = 1;
  1824  002AFC  84C0               	bsf	4032,2,c	;volatile
  1825                           
  1826                           ;telecomando.c: 391: ADCON2bits.ADCS1 = 0;
  1827  002AFE  92C0               	bcf	4032,1,c	;volatile
  1828                           
  1829                           ;telecomando.c: 392: ADCON2bits.ADCS0 = 1;
  1830  002B00  80C0               	bsf	4032,0,c	;volatile
  1831                           
  1832                           ;telecomando.c: 393: ADCON2bits.ADFM = 0;
  1833  002B02  9EC0               	bcf	4032,7,c	;volatile
  1834                           
  1835                           ;telecomando.c: 394: ADCON0bits.ADON = 1;
  1836  002B04  80C2               	bsf	4034,0,c	;volatile
  1837                           
  1838                           ;telecomando.c: 396: PORTDbits.RD2 = 1;
  1839  002B06  8483               	bsf	3971,2,c	;volatile
  1840                           
  1841                           ;telecomando.c: 397: delay_ms(10);
  1842  002B08  0E00               	movlw	0
  1843  002B0A  0100               	movlb	0	; () banked
  1844  002B0C  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1845  002B0E  0E0A               	movlw	10
  1846  002B10  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1847  002B12  EC3F  F019         	call	_delay_ms	;wreg free
  1848                           
  1849                           ;telecomando.c: 398: PORTDbits.RD3 = 1;
  1850  002B16  8683               	bsf	3971,3,c	;volatile
  1851                           
  1852                           ;telecomando.c: 399: delay_s(1);
  1853  002B18  0E01               	movlw	1
  1854  002B1A  ECC5  F019         	call	_delay_s
  1855                           
  1856                           ;telecomando.c: 401: LCD_initialize(16);
  1857  002B1E  0E10               	movlw	16
  1858  002B20  EC07  F013         	call	_LCD_initialize
  1859                           
  1860                           ;telecomando.c: 402: LCD_backlight(0);
  1861  002B24  0E00               	movlw	0
  1862  002B26  EC56  F01A         	call	_LCD_backlight
  1863                           
  1864                           ;telecomando.c: 403: LCD_clear();
  1865  002B2A  ECAC  F019         	call	_LCD_clear	;wreg free
  1866                           
  1867                           ;telecomando.c: 404: LCD_goto_line(1);
  1868  002B2E  0E01               	movlw	1
  1869  002B30  ECD4  F014         	call	_LCD_goto_line
  1870                           
  1871                           ;telecomando.c: 406: LCD_write_message("Wait...");
  1872  002B34  0EE7               	movlw	low STR_13
  1873  002B36  0100               	movlb	0	; () banked
  1874  002B38  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1875  002B3A  0E3F               	movlw	high STR_13
  1876  002B3C  0100               	movlb	0	; () banked
  1877  002B3E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1878  002B40  ECDB  F019         	call	_LCD_write_message	;wreg free
  1879                           
  1880                           ;telecomando.c: 407: delay_ms(300);
  1881  002B44  0E01               	movlw	1
  1882  002B46  0100               	movlb	0	; () banked
  1883  002B48  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1884  002B4A  0E2C               	movlw	44
  1885  002B4C  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1886  002B4E  EC3F  F019         	call	_delay_ms	;wreg free
  1887                           
  1888                           ;telecomando.c: 409: PORTDbits.RD2 = 0;
  1889  002B52  9483               	bcf	3971,2,c	;volatile
  1890                           
  1891                           ;telecomando.c: 410: PORTDbits.RD3 = 0;
  1892  002B54  9683               	bcf	3971,3,c	;volatile
  1893                           
  1894                           ;telecomando.c: 413: TMR3H = 0x63;
  1895  002B56  0E63               	movlw	99
  1896  002B58  6EB3               	movwf	4019,c	;volatile
  1897                           
  1898                           ;telecomando.c: 414: TMR3L = 0xC0;
  1899  002B5A  0EC0               	movlw	192
  1900  002B5C  6EB2               	movwf	4018,c	;volatile
  1901                           
  1902                           ;telecomando.c: 417: PIE1bits.RCIE = 1;
  1903  002B5E  8A9D               	bsf	3997,5,c	;volatile
  1904                           
  1905                           ;telecomando.c: 418: PIE2bits.TMR3IE = 1;
  1906  002B60  82A0               	bsf	4000,1,c	;volatile
  1907                           
  1908                           ;telecomando.c: 421: RCSTAbits.SPEN = 1;
  1909  002B62  8EAB               	bsf	4011,7,c	;volatile
  1910                           
  1911                           ;telecomando.c: 422: T3CON = 0x01;
  1912  002B64  0E01               	movlw	1
  1913  002B66  6EB1               	movwf	4017,c	;volatile
  1914                           
  1915                           ;telecomando.c: 423: LCD_clear();
  1916  002B68  ECAC  F019         	call	_LCD_clear	;wreg free
  1917                           
  1918                           ;telecomando.c: 428: PIR1bits.RCIF = 0;
  1919  002B6C  9A9E               	bcf	3998,5,c	;volatile
  1920                           
  1921                           ;telecomando.c: 429: INTCONbits.GIEH = 1;
  1922  002B6E  8EF2               	bsf	intcon,7,c	;volatile
  1923                           
  1924                           ;telecomando.c: 430: INTCONbits.GIEL = 1;
  1925  002B70  8CF2               	bsf	intcon,6,c	;volatile
  1926  002B72  0012               	return		;funcret
  1927  002B74                     __end_of_board_initialization:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           intcon	equ	0xFF2
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _delay_s *****************
  1939 ;; Defined at:
  1940 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  value_s         1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  value_s         1    8[BANK0 ] unsigned char 
  1945 ;;  repeat_loop     1    9[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1955 ;;      Params:         0       0       0       0
  1956 ;;      Locals:         0       2       0       0
  1957 ;;      Temps:          0       0       0       0
  1958 ;;      Totals:         0       2       0       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    5
  1962 ;; This function calls:
  1963 ;;		_delay_ms
  1964 ;; This function is called by:
  1965 ;;		_board_initialization
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text2
  1970  00338A                     __ptext2:
  1971                           	opt stack 0
  1972  00338A                     _delay_s:
  1973                           	opt stack 24
  1974                           
  1975                           ;incstack = 0
  1976                           ;delay_s@value_s stored from wreg
  1977  00338A  0100               	movlb	0	; () banked
  1978  00338C  6F68               	movwf	delay_s@value_s& (0+255),b
  1979                           
  1980                           ;src\delay.c: 104: unsigned char repeat_loop;
  1981                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1982  00338E  0E00               	movlw	0
  1983  003390  0100               	movlb	0	; () banked
  1984  003392  6F69               	movwf	delay_s@repeat_loop& (0+255),b
  1985  003394  D009               	goto	l5359
  1986  003396                     l5355:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;src\delay.c: 107: delay_ms (1000);
  1990  003396  0E03               	movlw	3
  1991  003398  0100               	movlb	0	; () banked
  1992  00339A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1993  00339C  0EE8               	movlw	232
  1994  00339E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1995  0033A0  EC3F  F019         	call	_delay_ms	;wreg free
  1996  0033A4  0100               	movlb	0	; () banked
  1997  0033A6  2B69               	incf	delay_s@repeat_loop& (0+255),f,b
  1998  0033A8                     l5359:
  1999                           
  2000                           ; BSR set to: 0
  2001  0033A8  0100               	movlb	0	; () banked
  2002  0033AA  5168               	movf	delay_s@value_s& (0+255),w,b
  2003  0033AC  0100               	movlb	0	; () banked
  2004  0033AE  5D69               	subwf	delay_s@repeat_loop& (0+255),w,b
  2005  0033B0  B0D8               	btfsc	status,0,c
  2006  0033B2  0012               	return	
  2007  0033B4  D7F0               	goto	l5355
  2008  0033B6                     __end_of_delay_s:
  2009                           	opt stack 0
  2010                           tblptru	equ	0xFF8
  2011                           tblptrh	equ	0xFF7
  2012                           tblptrl	equ	0xFF6
  2013                           tablat	equ	0xFF5
  2014                           intcon	equ	0xFF2
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _OpenUSART *****************
  2020 ;; Defined at:
  2021 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  config          1    wreg     unsigned char 
  2024 ;;  spbrg           2    0[BANK0 ] unsigned int 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  config          1    2[BANK0 ] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;		None               void
  2029 ;; Registers used:
  2030 ;;		wreg, status,2
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2036 ;;      Params:         0       2       0       0
  2037 ;;      Locals:         0       1       0       0
  2038 ;;      Temps:          0       0       0       0
  2039 ;;      Totals:         0       3       0       0
  2040 ;;Total ram usage:        3 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    3
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_board_initialization
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text3
  2051  003084                     __ptext3:
  2052                           	opt stack 0
  2053  003084                     _OpenUSART:
  2054                           	opt stack 26
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;incstack = 0
  2058                           ;OpenUSART@config stored from wreg
  2059  003084  0100               	movlb	0	; () banked
  2060  003086  6F62               	movwf	OpenUSART@config& (0+255),b
  2061  003088  0E00               	movlw	0
  2062  00308A  6EAC               	movwf	4012,c	;volatile
  2063  00308C  0E00               	movlw	0
  2064  00308E  6EAB               	movwf	4011,c	;volatile
  2065  003090  0100               	movlb	0	; () banked
  2066  003092  B162               	btfsc	OpenUSART@config& (0+255),0,b
  2067                           
  2068                           ; BSR set to: 0
  2069  003094  88AC               	bsf	4012,4,c	;volatile
  2070                           
  2071                           ; BSR set to: 0
  2072                           
  2073                           ; BSR set to: 0
  2074  003096  0100               	movlb	0	; () banked
  2075  003098  A362               	btfss	OpenUSART@config& (0+255),1,b
  2076  00309A  D002               	goto	l5653
  2077                           
  2078                           ; BSR set to: 0
  2079  00309C  8CAC               	bsf	4012,6,c	;volatile
  2080  00309E  8CAB               	bsf	4011,6,c	;volatile
  2081  0030A0                     l5653:
  2082                           
  2083                           ; BSR set to: 0
  2084  0030A0  0100               	movlb	0	; () banked
  2085  0030A2  B562               	btfsc	OpenUSART@config& (0+255),2,b
  2086                           
  2087                           ; BSR set to: 0
  2088  0030A4  8EAC               	bsf	4012,7,c	;volatile
  2089                           
  2090                           ; BSR set to: 0
  2091                           
  2092                           ; BSR set to: 0
  2093  0030A6  0100               	movlb	0	; () banked
  2094  0030A8  A762               	btfss	OpenUSART@config& (0+255),3,b
  2095  0030AA  D002               	goto	l448
  2096                           
  2097                           ; BSR set to: 0
  2098  0030AC  88AB               	bsf	4011,4,c	;volatile
  2099  0030AE  D001               	goto	l5661
  2100  0030B0                     l448:
  2101                           
  2102                           ; BSR set to: 0
  2103  0030B0  8AAB               	bsf	4011,5,c	;volatile
  2104  0030B2                     l5661:
  2105                           
  2106                           ; BSR set to: 0
  2107  0030B2  0100               	movlb	0	; () banked
  2108  0030B4  B962               	btfsc	OpenUSART@config& (0+255),4,b
  2109                           
  2110                           ; BSR set to: 0
  2111  0030B6  84AC               	bsf	4012,2,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  0030B8  989E               	bcf	3998,4,c	;volatile
  2115                           
  2116                           ; BSR set to: 0
  2117  0030BA  0100               	movlb	0	; () banked
  2118  0030BC  BB62               	btfsc	OpenUSART@config& (0+255),5,b
  2119                           
  2120                           ; BSR set to: 0
  2121  0030BE  86AB               	bsf	4011,3,c	;volatile
  2122                           
  2123                           ; BSR set to: 0
  2124                           
  2125                           ; BSR set to: 0
  2126  0030C0  0100               	movlb	0	; () banked
  2127  0030C2  AD62               	btfss	OpenUSART@config& (0+255),6,b
  2128  0030C4  D002               	goto	l452
  2129                           
  2130                           ; BSR set to: 0
  2131  0030C6  8A9D               	bsf	3997,5,c	;volatile
  2132  0030C8  D001               	goto	l453
  2133  0030CA                     l452:
  2134                           
  2135                           ; BSR set to: 0
  2136  0030CA  9A9D               	bcf	3997,5,c	;volatile
  2137  0030CC                     l453:
  2138                           
  2139                           ; BSR set to: 0
  2140  0030CC  9A9E               	bcf	3998,5,c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143  0030CE  0100               	movlb	0	; () banked
  2144  0030D0  AF62               	btfss	OpenUSART@config& (0+255),7,b
  2145  0030D2  D002               	goto	l454
  2146                           
  2147                           ; BSR set to: 0
  2148  0030D4  889D               	bsf	3997,4,c	;volatile
  2149  0030D6  D001               	goto	l455
  2150  0030D8                     l454:
  2151                           
  2152                           ; BSR set to: 0
  2153  0030D8  989D               	bcf	3997,4,c	;volatile
  2154  0030DA                     l455:
  2155                           
  2156                           ; BSR set to: 0
  2157  0030DA  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2158                           
  2159                           ; BSR set to: 0
  2160  0030DE  0100               	movlb	0	; () banked
  2161  0030E0  5161               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  2162  0030E2  6EB0               	movwf	4016,c	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165  0030E4  8AAC               	bsf	4012,5,c	;volatile
  2166                           
  2167                           ; BSR set to: 0
  2168  0030E6  8EAB               	bsf	4011,7,c	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171  0030E8  9C94               	bcf	3988,6,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174  0030EA  8E94               	bsf	3988,7,c	;volatile
  2175                           
  2176                           ; BSR set to: 0
  2177  0030EC  A8AC               	btfss	4012,4,c	;volatile
  2178  0030EE  0012               	return	
  2179                           
  2180                           ; BSR set to: 0
  2181  0030F0  BEAC               	btfsc	4012,7,c	;volatile
  2182  0030F2  0012               	return	
  2183                           
  2184                           ; BSR set to: 0
  2185  0030F4  8C94               	bsf	3988,6,c	;volatile
  2186  0030F6  0012               	return	
  2187  0030F8                     __end_of_OpenUSART:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           intcon	equ	0xFF2
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _LCD_initialize *****************
  2199 ;; Defined at:
  2200 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  quartz_frequ    1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  quartz_frequ    1   14[BANK0 ] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;		None               void
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2214 ;;      Params:         0       0       0       0
  2215 ;;      Locals:         0       1       0       0
  2216 ;;      Temps:          0       0       0       0
  2217 ;;      Totals:         0       1       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    8
  2221 ;; This function calls:
  2222 ;;		_LCD_clear
  2223 ;;		_LCD_cursor
  2224 ;;		_LCD_send_command
  2225 ;;		_delay_ms
  2226 ;;		_delay_set_quartz
  2227 ;; This function is called by:
  2228 ;;		_board_initialization
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text4
  2233  00260E                     __ptext4:
  2234                           	opt stack 0
  2235  00260E                     _LCD_initialize:
  2236                           	opt stack 21
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;incstack = 0
  2240                           ;LCD_initialize@quartz_frequency stored from wreg
  2241  00260E  0100               	movlb	0	; () banked
  2242  002610  6F6E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2243                           
  2244                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2245  002612  0100               	movlb	0	; () banked
  2246  002614  516E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2247  002616  EC5F  F01A         	call	_delay_set_quartz
  2248                           
  2249                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2250  00261A  948D               	bcf	3981,2,c	;volatile
  2251                           
  2252                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2253  00261C  928B               	bcf	3979,1,c	;volatile
  2254                           
  2255                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2256  00261E  908B               	bcf	3979,0,c	;volatile
  2257                           
  2258                           ;src\LCD_44780.c: 291: delay_ms (100);
  2259  002620  0E00               	movlw	0
  2260  002622  0100               	movlb	0	; () banked
  2261  002624  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2262  002626  0E64               	movlw	100
  2263  002628  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2264  00262A  EC3F  F019         	call	_delay_ms	;wreg free
  2265                           
  2266                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2267  00262E  0E00               	movlw	0
  2268  002630  0100               	movlb	0	; () banked
  2269  002632  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2270  002634  0E01               	movlw	1
  2271  002636  0100               	movlb	0	; () banked
  2272  002638  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2273  00263A  0E01               	movlw	1
  2274  00263C  0100               	movlb	0	; () banked
  2275  00263E  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2276  002640  0E00               	movlw	0
  2277  002642  EC22  F019         	call	_LCD_send_command
  2278                           
  2279                           ;src\LCD_44780.c: 293: delay_ms (100);
  2280  002646  0E00               	movlw	0
  2281  002648  0100               	movlb	0	; () banked
  2282  00264A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2283  00264C  0E64               	movlw	100
  2284  00264E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2285  002650  EC3F  F019         	call	_delay_ms	;wreg free
  2286                           
  2287                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2288  002654  0E00               	movlw	0
  2289  002656  0100               	movlb	0	; () banked
  2290  002658  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2291  00265A  0E01               	movlw	1
  2292  00265C  0100               	movlb	0	; () banked
  2293  00265E  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2294  002660  0E01               	movlw	1
  2295  002662  0100               	movlb	0	; () banked
  2296  002664  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2297  002666  0E00               	movlw	0
  2298  002668  EC22  F019         	call	_LCD_send_command
  2299                           
  2300                           ;src\LCD_44780.c: 295: delay_ms (10);
  2301  00266C  0E00               	movlw	0
  2302  00266E  0100               	movlb	0	; () banked
  2303  002670  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2304  002672  0E0A               	movlw	10
  2305  002674  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2306  002676  EC3F  F019         	call	_delay_ms	;wreg free
  2307                           
  2308                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2309  00267A  0E00               	movlw	0
  2310  00267C  0100               	movlb	0	; () banked
  2311  00267E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2312  002680  0E01               	movlw	1
  2313  002682  0100               	movlb	0	; () banked
  2314  002684  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2315  002686  0E01               	movlw	1
  2316  002688  0100               	movlb	0	; () banked
  2317  00268A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2318  00268C  0E00               	movlw	0
  2319  00268E  EC22  F019         	call	_LCD_send_command
  2320                           
  2321                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2322  002692  0E00               	movlw	0
  2323  002694  0100               	movlb	0	; () banked
  2324  002696  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2325  002698  0E01               	movlw	1
  2326  00269A  0100               	movlb	0	; () banked
  2327  00269C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2328  00269E  0E00               	movlw	0
  2329  0026A0  0100               	movlb	0	; () banked
  2330  0026A2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2331  0026A4  0E00               	movlw	0
  2332  0026A6  EC22  F019         	call	_LCD_send_command
  2333                           
  2334                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2335  0026AA  0E00               	movlw	0
  2336  0026AC  0100               	movlb	0	; () banked
  2337  0026AE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2338  0026B0  0E01               	movlw	1
  2339  0026B2  0100               	movlb	0	; () banked
  2340  0026B4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2341  0026B6  0E00               	movlw	0
  2342  0026B8  0100               	movlb	0	; () banked
  2343  0026BA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2344  0026BC  0E00               	movlw	0
  2345  0026BE  EC22  F019         	call	_LCD_send_command
  2346                           
  2347                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2348  0026C2  0E00               	movlw	0
  2349  0026C4  0100               	movlb	0	; () banked
  2350  0026C6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2351  0026C8  0E00               	movlw	0
  2352  0026CA  0100               	movlb	0	; () banked
  2353  0026CC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2354  0026CE  0E00               	movlw	0
  2355  0026D0  0100               	movlb	0	; () banked
  2356  0026D2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2357  0026D4  0E01               	movlw	1
  2358  0026D6  EC22  F019         	call	_LCD_send_command
  2359                           
  2360                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2361  0026DA  0E00               	movlw	0
  2362  0026DC  0100               	movlb	0	; () banked
  2363  0026DE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2364  0026E0  0E00               	movlw	0
  2365  0026E2  0100               	movlb	0	; () banked
  2366  0026E4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2367  0026E6  0E00               	movlw	0
  2368  0026E8  0100               	movlb	0	; () banked
  2369  0026EA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2370  0026EC  0E00               	movlw	0
  2371  0026EE  EC22  F019         	call	_LCD_send_command
  2372                           
  2373                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2374  0026F2  0E00               	movlw	0
  2375  0026F4  0100               	movlb	0	; () banked
  2376  0026F6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2377  0026F8  0E00               	movlw	0
  2378  0026FA  0100               	movlb	0	; () banked
  2379  0026FC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2380  0026FE  0E00               	movlw	0
  2381  002700  0100               	movlb	0	; () banked
  2382  002702  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2383  002704  0E01               	movlw	1
  2384  002706  EC22  F019         	call	_LCD_send_command
  2385                           
  2386                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2387  00270A  0E00               	movlw	0
  2388  00270C  0100               	movlb	0	; () banked
  2389  00270E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2390  002710  0E00               	movlw	0
  2391  002712  0100               	movlb	0	; () banked
  2392  002714  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2393  002716  0E00               	movlw	0
  2394  002718  0100               	movlb	0	; () banked
  2395  00271A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2396  00271C  0E00               	movlw	0
  2397  00271E  EC22  F019         	call	_LCD_send_command
  2398                           
  2399                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2400  002722  0E00               	movlw	0
  2401  002724  0100               	movlb	0	; () banked
  2402  002726  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2403  002728  0E00               	movlw	0
  2404  00272A  0100               	movlb	0	; () banked
  2405  00272C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2406  00272E  0E01               	movlw	1
  2407  002730  0100               	movlb	0	; () banked
  2408  002732  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2409  002734  0E00               	movlw	0
  2410  002736  EC22  F019         	call	_LCD_send_command
  2411                           
  2412                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2413  00273A  0E00               	movlw	0
  2414  00273C  0100               	movlb	0	; () banked
  2415  00273E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2416  002740  0E00               	movlw	0
  2417  002742  0100               	movlb	0	; () banked
  2418  002744  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2419  002746  0E00               	movlw	0
  2420  002748  0100               	movlb	0	; () banked
  2421  00274A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2422  00274C  0E00               	movlw	0
  2423  00274E  EC22  F019         	call	_LCD_send_command
  2424                           
  2425                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2426  002752  0E01               	movlw	1
  2427  002754  0100               	movlb	0	; () banked
  2428  002756  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2429  002758  0E01               	movlw	1
  2430  00275A  0100               	movlb	0	; () banked
  2431  00275C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2432  00275E  0E00               	movlw	0
  2433  002760  0100               	movlb	0	; () banked
  2434  002762  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2435  002764  0E00               	movlw	0
  2436  002766  EC22  F019         	call	_LCD_send_command
  2437                           
  2438                           ;src\LCD_44780.c: 312: LCD_clear ();
  2439  00276A  ECAC  F019         	call	_LCD_clear	;wreg free
  2440                           
  2441                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2442  00276E  0E00               	movlw	0
  2443  002770  0100               	movlb	0	; () banked
  2444  002772  6F6C               	movwf	LCD_cursor@blinking& (0+255),b
  2445  002774  0E00               	movlw	0
  2446  002776  EC93  F019         	call	_LCD_cursor
  2447  00277A  0012               	return		;funcret
  2448  00277C                     __end_of_LCD_initialize:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _delay_set_quartz *****************
  2460 ;; Defined at:
  2461 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  frequency       1    wreg     unsigned char 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  frequency       1    0[BANK0 ] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2475 ;;      Params:         0       0       0       0
  2476 ;;      Locals:         0       1       0       0
  2477 ;;      Temps:          0       0       0       0
  2478 ;;      Totals:         0       1       0       0
  2479 ;;Total ram usage:        1 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_LCD_initialize
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text5
  2490  0034BE                     __ptext5:
  2491                           	opt stack 0
  2492  0034BE                     _delay_set_quartz:
  2493                           	opt stack 25
  2494                           
  2495                           ;incstack = 0
  2496                           ;delay_set_quartz@frequency stored from wreg
  2497  0034BE  0100               	movlb	0	; () banked
  2498  0034C0  6F60               	movwf	delay_set_quartz@frequency& (0+255),b
  2499                           
  2500                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2501  0034C2  C060  F045         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2502  0034C6  0012               	return		;funcret
  2503  0034C8                     __end_of_delay_set_quartz:
  2504                           	opt stack 0
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _LCD_cursor *****************
  2515 ;; Defined at:
  2516 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  active          1    wreg     unsigned char 
  2519 ;;  blinking        1   12[BANK0 ] unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  active          1   13[BANK0 ] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2531 ;;      Params:         0       1       0       0
  2532 ;;      Locals:         0       1       0       0
  2533 ;;      Temps:          0       0       0       0
  2534 ;;      Totals:         0       2       0       0
  2535 ;;Total ram usage:        2 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    7
  2538 ;; This function calls:
  2539 ;;		_LCD_send_command
  2540 ;; This function is called by:
  2541 ;;		_LCD_initialize
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text6
  2546  003326                     __ptext6:
  2547                           	opt stack 0
  2548  003326                     _LCD_cursor:
  2549                           	opt stack 21
  2550                           
  2551                           ;incstack = 0
  2552                           ;LCD_cursor@active stored from wreg
  2553  003326  0100               	movlb	0	; () banked
  2554  003328  6F6D               	movwf	LCD_cursor@active& (0+255),b
  2555                           
  2556                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2557  00332A  0E00               	movlw	0
  2558  00332C  0100               	movlb	0	; () banked
  2559  00332E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2560  003330  0E00               	movlw	0
  2561  003332  0100               	movlb	0	; () banked
  2562  003334  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2563  003336  0E00               	movlw	0
  2564  003338  0100               	movlb	0	; () banked
  2565  00333A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2566  00333C  0E00               	movlw	0
  2567  00333E  EC22  F019         	call	_LCD_send_command
  2568                           
  2569                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2570  003342  0E01               	movlw	1
  2571  003344  0100               	movlb	0	; () banked
  2572  003346  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2573  003348  C06D  F069         	movff	LCD_cursor@active,LCD_send_command@D1
  2574  00334C  C06C  F06A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2575  003350  0E01               	movlw	1
  2576  003352  EC22  F019         	call	_LCD_send_command
  2577  003356  0012               	return		;funcret
  2578  003358                     __end_of_LCD_cursor:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           intcon	equ	0xFF2
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _LCD_backlight *****************
  2590 ;; Defined at:
  2591 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  active          1    wreg     unsigned char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  active          1    0[BANK0 ] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2605 ;;      Params:         0       0       0       0
  2606 ;;      Locals:         0       1       0       0
  2607 ;;      Temps:          0       0       0       0
  2608 ;;      Totals:         0       1       0       0
  2609 ;;Total ram usage:        1 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    3
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_board_initialization
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text7
  2620  0034AC                     __ptext7:
  2621                           	opt stack 0
  2622  0034AC                     _LCD_backlight:
  2623                           	opt stack 26
  2624                           
  2625                           ;incstack = 0
  2626                           ;LCD_backlight@active stored from wreg
  2627  0034AC  0100               	movlb	0	; () banked
  2628  0034AE  6F60               	movwf	LCD_backlight@active& (0+255),b
  2629                           
  2630                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2631  0034B0  0100               	movlb	0	; () banked
  2632  0034B2  B160               	btfsc	LCD_backlight@active& (0+255),0,b
  2633  0034B4  D002               	bra	u6395
  2634  0034B6  988B               	bcf	3979,4,c	;volatile
  2635  0034B8  D001               	bra	u6396
  2636  0034BA                     u6395:
  2637  0034BA  888B               	bsf	3979,4,c	;volatile
  2638  0034BC                     u6396:
  2639  0034BC  0012               	return		;funcret
  2640  0034BE                     __end_of_LCD_backlight:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           intcon	equ	0xFF2
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _USART_Send *****************
  2652 ;; Defined at:
  2653 ;;		line 230 in file "telecomando.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  i               1   12[BANK0 ] unsigned char 
  2658 ;;  i               1   11[BANK0 ] unsigned char 
  2659 ;;  i               1   10[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;		None               void
  2662 ;; Registers used:
  2663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2669 ;;      Params:         0       0       0       0
  2670 ;;      Locals:         0       3       0       0
  2671 ;;      Temps:          0       2       0       0
  2672 ;;      Totals:         0       5       0       0
  2673 ;;Total ram usage:        5 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    5
  2676 ;; This function calls:
  2677 ;;		_delay_ms
  2678 ;;		_putsUSART
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text8
  2685  00249C                     __ptext8:
  2686                           	opt stack 0
  2687  00249C                     _USART_Send:
  2688                           	opt stack 25
  2689                           
  2690                           ;telecomando.c: 231: if (switch_position == 2) {
  2691                           
  2692                           ;incstack = 0
  2693  00249C  0E02               	movlw	2
  2694  00249E  1843               	xorwf	_switch_position,w,c	;volatile
  2695  0024A0  A4D8               	btfss	status,2,c
  2696  0024A2  D010               	goto	l5871
  2697                           
  2698                           ;telecomando.c: 232: set_speed = set_speed / 4;
  2699  0024A4  C035  F068         	movff	_set_speed,??_USART_Send	;volatile
  2700  0024A8  C036  F069         	movff	_set_speed+1,??_USART_Send+1	;volatile
  2701  0024AC  0100               	movlb	0	; () banked
  2702  0024AE  90D8               	bcf	status,0,c
  2703  0024B0  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2704  0024B2  3368               	rrcf	??_USART_Send& (0+255),f,b
  2705  0024B4  0100               	movlb	0	; () banked
  2706  0024B6  90D8               	bcf	status,0,c
  2707  0024B8  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2708  0024BA  3368               	rrcf	??_USART_Send& (0+255),f,b
  2709  0024BC  C068  F035         	movff	??_USART_Send,_set_speed	;volatile
  2710  0024C0  C069  F036         	movff	??_USART_Send+1,_set_speed+1	;volatile
  2711  0024C4                     l5871:
  2712                           
  2713                           ;telecomando.c: 233: }
  2714                           ;telecomando.c: 234: set_speed_pk1 = set_speed >> 8;
  2715  0024C4  5036               	movf	_set_speed+1,w,c	;volatile
  2716  0024C6  6E40               	movwf	_set_speed_pk1,c	;volatile
  2717                           
  2718                           ;telecomando.c: 235: if (set_speed_pk1 == 0x00) {
  2719  0024C8  5040               	movf	_set_speed_pk1,w,c	;volatile
  2720  0024CA  A4D8               	btfss	status,2,c
  2721  0024CC  D002               	goto	l5877
  2722                           
  2723                           ;telecomando.c: 236: set_speed_pk1 = 0b10000000;
  2724  0024CE  0E80               	movlw	128
  2725  0024D0  6E40               	movwf	_set_speed_pk1,c	;volatile
  2726  0024D2                     l5877:
  2727                           
  2728                           ;telecomando.c: 237: }
  2729                           ;telecomando.c: 238: set_speed_pk0 = set_speed;
  2730  0024D2  C035  F03F         	movff	_set_speed,_set_speed_pk0	;volatile
  2731                           
  2732                           ;telecomando.c: 239: USART_Tx[1] = dir;
  2733  0024D6  C03D  F0EE         	movff	_dir,_USART_Tx+1	;volatile
  2734                           
  2735                           ;telecomando.c: 240: USART_Tx[2] = set_speed_pk1;
  2736  0024DA  C040  F0EF         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2737                           
  2738                           ;telecomando.c: 241: USART_Tx[3] = set_speed_pk0;
  2739  0024DE  C03F  F0F0         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2740                           
  2741                           ;telecomando.c: 243: if ((switch_position == 0) || ((JoystickValues[1] >= 128)&&(Joystic
      +                          kValues[1] <= 132))) {
  2742  0024E2  5043               	movf	_switch_position,w,c	;volatile
  2743  0024E4  B4D8               	btfsc	status,2,c
  2744  0024E6  D006               	goto	l5889
  2745  0024E8  0E7F               	movlw	127
  2746  0024EA  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  2747  0024EC  D009               	goto	l5891
  2748  0024EE  0E85               	movlw	133
  2749  0024F0  6034               	cpfslt	_JoystickValues+1,c	;volatile
  2750  0024F2  D006               	goto	l5891
  2751  0024F4                     l5889:
  2752                           
  2753                           ;telecomando.c: 244: USART_Tx[2] = 0b10000000;
  2754  0024F4  0E80               	movlw	128
  2755  0024F6  0100               	movlb	0	; () banked
  2756  0024F8  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  2757                           
  2758                           ;telecomando.c: 245: USART_Tx[3] = 0b00000001;
  2759  0024FA  0E01               	movlw	1
  2760  0024FC  0100               	movlb	0	; () banked
  2761  0024FE  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  2762  002500                     l5891:
  2763                           
  2764                           ;telecomando.c: 246: }
  2765                           ;telecomando.c: 247: USART_Tx[4] = set_steering;
  2766  002500  C041  F0F1         	movff	_set_steering,_USART_Tx+4	;volatile
  2767                           
  2768                           ;telecomando.c: 248: USART_Tx[5] = analogic_brake;
  2769  002504  C03C  F0F2         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2770                           
  2771                           ;telecomando.c: 251: for (char i = 0; i < 6; i++) {
  2772  002508  0E00               	movlw	0
  2773  00250A  0100               	movlb	0	; () banked
  2774  00250C  6F6A               	movwf	USART_Send@i& (0+255),b
  2775  00250E                     l5895:
  2776                           
  2777                           ; BSR set to: 0
  2778  00250E  0E05               	movlw	5
  2779  002510  0100               	movlb	0	; () banked
  2780  002512  656A               	cpfsgt	USART_Send@i& (0+255),b
  2781  002514  D001               	goto	l5899
  2782  002516  D01A               	goto	l5907
  2783  002518                     l5899:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;telecomando.c: 252: if (USART_Tx[i] == 0) {
  2787  002518  0100               	movlb	0	; () banked
  2788  00251A  516A               	movf	USART_Send@i& (0+255),w,b
  2789  00251C  0D01               	mullw	1
  2790  00251E  0EED               	movlw	low _USART_Tx
  2791  002520  24F3               	addwf	prodl,w,c
  2792  002522  6ED9               	movwf	fsr2l,c
  2793  002524  0E00               	movlw	high _USART_Tx
  2794  002526  20F4               	addwfc	prodh,w,c
  2795  002528  6EDA               	movwf	fsr2h,c
  2796  00252A  50DF               	movf	indf2,w,c
  2797  00252C  A4D8               	btfss	status,2,c
  2798  00252E  D00B               	goto	l5903
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;telecomando.c: 253: USART_Tx[i] = 1;
  2802  002530  0100               	movlb	0	; () banked
  2803  002532  516A               	movf	USART_Send@i& (0+255),w,b
  2804  002534  0D01               	mullw	1
  2805  002536  0EED               	movlw	low _USART_Tx
  2806  002538  24F3               	addwf	prodl,w,c
  2807  00253A  6ED9               	movwf	fsr2l,c
  2808  00253C  0E00               	movlw	high _USART_Tx
  2809  00253E  20F4               	addwfc	prodh,w,c
  2810  002540  6EDA               	movwf	fsr2h,c
  2811  002542  0E01               	movlw	1
  2812  002544  6EDF               	movwf	indf2,c
  2813  002546                     l5903:
  2814                           
  2815                           ; BSR set to: 0
  2816  002546  0100               	movlb	0	; () banked
  2817  002548  2B6A               	incf	USART_Send@i& (0+255),f,b
  2818  00254A  D7E1               	goto	l5895
  2819  00254C                     l5907:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;telecomando.c: 254: }
  2823                           ;telecomando.c: 256: }
  2824                           ;telecomando.c: 259: spam_counter = 0;
  2825  00254C  0E00               	movlw	0
  2826  00254E  6E42               	movwf	_spam_counter,c	;volatile
  2827                           
  2828                           ;telecomando.c: 260: for (char i = 1; i < 6; i++) {
  2829  002550  0E01               	movlw	1
  2830  002552  0100               	movlb	0	; () banked
  2831  002554  6F6B               	movwf	USART_Send@i_1320& (0+255),b
  2832  002556                     l5909:
  2833                           
  2834                           ; BSR set to: 0
  2835  002556  0E05               	movlw	5
  2836  002558  0100               	movlb	0	; () banked
  2837  00255A  656B               	cpfsgt	USART_Send@i_1320& (0+255),b
  2838  00255C  D001               	goto	l5913
  2839  00255E  D019               	goto	l299
  2840  002560                     l5913:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;telecomando.c: 261: if (USART_Tx[i] == USART_Tx_Old[i]) {
  2844  002560  0100               	movlb	0	; () banked
  2845  002562  516B               	movf	USART_Send@i_1320& (0+255),w,b
  2846  002564  0D01               	mullw	1
  2847  002566  0ED1               	movlw	low _USART_Tx_Old
  2848  002568  24F3               	addwf	prodl,w,c
  2849  00256A  6ED9               	movwf	fsr2l,c
  2850  00256C  0E00               	movlw	high _USART_Tx_Old
  2851  00256E  20F4               	addwfc	prodh,w,c
  2852  002570  6EDA               	movwf	fsr2h,c
  2853  002572  0100               	movlb	0	; () banked
  2854  002574  516B               	movf	USART_Send@i_1320& (0+255),w,b
  2855  002576  0D01               	mullw	1
  2856  002578  0EED               	movlw	low _USART_Tx
  2857  00257A  24F3               	addwf	prodl,w,c
  2858  00257C  6EE1               	movwf	fsr1l,c
  2859  00257E  0E00               	movlw	high _USART_Tx
  2860  002580  20F4               	addwfc	prodh,w,c
  2861  002582  6EE2               	movwf	fsr1h,c
  2862  002584  50DE               	movf	postinc2,w,c
  2863  002586  18E6               	xorwf	postinc1,w,c
  2864  002588  B4D8               	btfsc	status,2,c
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;telecomando.c: 262: spam_counter++;
  2868  00258A  2A42               	incf	_spam_counter,f,c	;volatile
  2869                           
  2870                           ; BSR set to: 0
  2871  00258C  0100               	movlb	0	; () banked
  2872  00258E  2B6B               	incf	USART_Send@i_1320& (0+255),f,b
  2873  002590  D7E2               	goto	l5909
  2874  002592                     l299:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;telecomando.c: 263: }
  2878                           ;telecomando.c: 264: }
  2879                           ;telecomando.c: 265: if ((((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) || (switch_posi
      +                          tion == 0)) {
  2880  002592  A2AC               	btfss	4012,1,c	;volatile
  2881  002594  D004               	goto	l5921
  2882                           
  2883                           ; BSR set to: 0
  2884  002596  0E05               	movlw	5
  2885  002598  1842               	xorwf	_spam_counter,w,c	;volatile
  2886  00259A  A4D8               	btfss	status,2,c
  2887  00259C  D003               	goto	l5923
  2888  00259E                     l5921:
  2889                           
  2890                           ; BSR set to: 0
  2891  00259E  5043               	movf	_switch_position,w,c	;volatile
  2892  0025A0  A4D8               	btfss	status,2,c
  2893  0025A2  0012               	return	
  2894  0025A4                     l5923:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;telecomando.c: 267: if (switch_position == 0) {
  2898  0025A4  5043               	movf	_switch_position,w,c	;volatile
  2899  0025A6  A4D8               	btfss	status,2,c
  2900  0025A8  D007               	goto	l5927
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;telecomando.c: 268: delay_ms(100);
  2904  0025AA  0E00               	movlw	0
  2905  0025AC  0100               	movlb	0	; () banked
  2906  0025AE  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2907  0025B0  0E64               	movlw	100
  2908  0025B2  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2909  0025B4  EC3F  F019         	call	_delay_ms	;wreg free
  2910  0025B8                     l5927:
  2911                           
  2912                           ;telecomando.c: 269: }
  2913                           ;telecomando.c: 270: INTCONbits.GIEH = 0;
  2914  0025B8  9EF2               	bcf	intcon,7,c	;volatile
  2915                           
  2916                           ;telecomando.c: 271: INTCONbits.GIEL = 0;
  2917  0025BA  9CF2               	bcf	intcon,6,c	;volatile
  2918                           
  2919                           ;telecomando.c: 272: putsUSART(USART_Tx);
  2920  0025BC  0EED               	movlw	low _USART_Tx
  2921  0025BE  0100               	movlb	0	; () banked
  2922  0025C0  6F61               	movwf	putsUSART@data& (0+255),b
  2923  0025C2  0E00               	movlw	high _USART_Tx
  2924  0025C4  0100               	movlb	0	; () banked
  2925  0025C6  6F62               	movwf	(putsUSART@data+1)& (0+255),b
  2926  0025C8  EC06  F01A         	call	_putsUSART	;wreg free
  2927                           
  2928                           ;telecomando.c: 274: INTCONbits.GIEH = 1;
  2929  0025CC  8EF2               	bsf	intcon,7,c	;volatile
  2930                           
  2931                           ;telecomando.c: 275: INTCONbits.GIEL = 1;
  2932  0025CE  8CF2               	bsf	intcon,6,c	;volatile
  2933                           
  2934                           ;telecomando.c: 276: for (char i = 0; i < 6; i++) {
  2935  0025D0  0E00               	movlw	0
  2936  0025D2  0100               	movlb	0	; () banked
  2937  0025D4  6F6C               	movwf	USART_Send@i_1329& (0+255),b
  2938  0025D6                     l5939:
  2939                           
  2940                           ; BSR set to: 0
  2941  0025D6  0E05               	movlw	5
  2942  0025D8  0100               	movlb	0	; () banked
  2943  0025DA  656C               	cpfsgt	USART_Send@i_1329& (0+255),b
  2944  0025DC  D001               	goto	l5943
  2945  0025DE  0012               	return	
  2946  0025E0                     l5943:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;telecomando.c: 278: USART_Tx_Old[i] = USART_Tx[i];
  2950  0025E0  0100               	movlb	0	; () banked
  2951  0025E2  516C               	movf	USART_Send@i_1329& (0+255),w,b
  2952  0025E4  0D01               	mullw	1
  2953  0025E6  0EED               	movlw	low _USART_Tx
  2954  0025E8  24F3               	addwf	prodl,w,c
  2955  0025EA  6ED9               	movwf	fsr2l,c
  2956  0025EC  0E00               	movlw	high _USART_Tx
  2957  0025EE  20F4               	addwfc	prodh,w,c
  2958  0025F0  6EDA               	movwf	fsr2h,c
  2959  0025F2  0100               	movlb	0	; () banked
  2960  0025F4  516C               	movf	USART_Send@i_1329& (0+255),w,b
  2961  0025F6  0D01               	mullw	1
  2962  0025F8  0ED1               	movlw	low _USART_Tx_Old
  2963  0025FA  24F3               	addwf	prodl,w,c
  2964  0025FC  6EE1               	movwf	fsr1l,c
  2965  0025FE  0E00               	movlw	high _USART_Tx_Old
  2966  002600  20F4               	addwfc	prodh,w,c
  2967  002602  6EE2               	movwf	fsr1h,c
  2968  002604  CFDF FFE7          	movff	indf2,indf1
  2969                           
  2970                           ; BSR set to: 0
  2971  002608  0100               	movlb	0	; () banked
  2972  00260A  2B6C               	incf	USART_Send@i_1329& (0+255),f,b
  2973  00260C  D7E4               	goto	l5939
  2974  00260E                     __end_of_USART_Send:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           postinc0	equ	0xFEE
  2984                           wreg	equ	0xFE8
  2985                           indf1	equ	0xFE7
  2986                           postinc1	equ	0xFE6
  2987                           fsr1h	equ	0xFE2
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _putsUSART *****************
  2996 ;; Defined at:
  2997 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  data            2    1[BANK0 ] PTR unsigned char 
  3000 ;;		 -> USART_Tx(8), 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3012 ;;      Params:         0       2       0       0
  3013 ;;      Locals:         0       0       0       0
  3014 ;;      Temps:          0       0       0       0
  3015 ;;      Totals:         0       2       0       0
  3016 ;;Total ram usage:        2 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    4
  3019 ;; This function calls:
  3020 ;;		_WriteUSART
  3021 ;; This function is called by:
  3022 ;;		_USART_Send
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text9
  3027  00340C                     __ptext9:
  3028                           	opt stack 0
  3029  00340C                     _putsUSART:
  3030                           	opt stack 25
  3031  00340C                     l465:
  3032  00340C  A2AC               	btfss	4012,1,c	;volatile
  3033  00340E  D7FE               	goto	l465
  3034  003410  C061  FFD9         	movff	putsUSART@data,fsr2l
  3035  003414  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3036  003418  50DF               	movf	indf2,w,c
  3037  00341A  EC4C  F01A         	call	_WriteUSART
  3038  00341E  C061  FFD9         	movff	putsUSART@data,fsr2l
  3039  003422  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3040  003426  0100               	movlb	0	; () banked
  3041  003428  4B61               	infsnz	putsUSART@data& (0+255),f,b
  3042  00342A  2B62               	incf	(putsUSART@data+1)& (0+255),f,b
  3043  00342C  50DF               	movf	indf2,w,c
  3044  00342E  B4D8               	btfsc	status,2,c
  3045  003430  0012               	return	
  3046  003432  D7EC               	goto	l465
  3047  003434                     __end_of_putsUSART:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           intcon	equ	0xFF2
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           indf1	equ	0xFE7
  3059                           postinc1	equ	0xFE6
  3060                           fsr1h	equ	0xFE2
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           postinc2	equ	0xFDE
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _WriteUSART *****************
  3069 ;; Defined at:
  3070 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  data            1    wreg     unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  data            1    0[BANK0 ] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3084 ;;      Params:         0       0       0       0
  3085 ;;      Locals:         0       1       0       0
  3086 ;;      Temps:          0       0       0       0
  3087 ;;      Totals:         0       1       0       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    3
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_putsUSART
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text10
  3099  003498                     __ptext10:
  3100                           	opt stack 0
  3101  003498                     _WriteUSART:
  3102                           	opt stack 25
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;incstack = 0
  3106                           ;WriteUSART@data stored from wreg
  3107  003498  0100               	movlb	0	; () banked
  3108  00349A  6F60               	movwf	WriteUSART@data& (0+255),b
  3109  00349C  ACAC               	btfss	4012,6,c	;volatile
  3110  00349E  D003               	goto	l5191
  3111  0034A0  90AC               	bcf	4012,0,c	;volatile
  3112  0034A2  B239               	btfsc	_USART_Status,1,c
  3113  0034A4  80AC               	bsf	4012,0,c	;volatile
  3114  0034A6                     l5191:
  3115  0034A6  C060  FFAD         	movff	WriteUSART@data,4013	;volatile
  3116  0034AA  0012               	return		;funcret
  3117  0034AC                     __end_of_WriteUSART:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon	equ	0xFF2
  3126                           postinc0	equ	0xFEE
  3127                           wreg	equ	0xFE8
  3128                           indf1	equ	0xFE7
  3129                           postinc1	equ	0xFE6
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _USART_RX *****************
  3139 ;; Defined at:
  3140 ;;		line 283 in file "telecomando.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  i               1    2[BANK0 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3154 ;;      Params:         0       0       0       0
  3155 ;;      Locals:         0       1       0       0
  3156 ;;      Temps:          0       2       0       0
  3157 ;;      Totals:         0       3       0       0
  3158 ;;Total ram usage:        3 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    3
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text11
  3169  002CEE                     __ptext11:
  3170                           	opt stack 0
  3171  002CEE                     _USART_RX:
  3172                           	opt stack 27
  3173                           
  3174                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
  3175                           
  3176                           ;incstack = 0
  3177  002CEE  AA9E               	btfss	3998,5,c	;volatile
  3178  002CF0  D052               	goto	l5765
  3179                           
  3180                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
  3181  002CF2  9EF2               	bcf	intcon,7,c	;volatile
  3182                           
  3183                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
  3184  002CF4  9CF2               	bcf	intcon,6,c	;volatile
  3185                           
  3186                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
  3187  002CF6  92A0               	bcf	4000,1,c	;volatile
  3188                           
  3189                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
  3190  002CF8  9A9D               	bcf	3997,5,c	;volatile
  3191                           
  3192                           ;telecomando.c: 290: if (RCREG == 0xAA) {
  3193  002CFA  0EAA               	movlw	170
  3194  002CFC  18AE               	xorwf	4014,w,c	;volatile
  3195  002CFE  A4D8               	btfss	status,2,c
  3196  002D00  D01D               	goto	l5743
  3197                           
  3198                           ;telecomando.c: 291: USART_Rx[0] = 0xAA;
  3199  002D02  0EAA               	movlw	170
  3200  002D04  0100               	movlb	0	; () banked
  3201  002D06  6FC9               	movwf	_USART_Rx& (0+255),b
  3202                           
  3203                           ;telecomando.c: 292: for (unsigned char i = 1; i < 7; i++) {
  3204  002D08  0E01               	movlw	1
  3205  002D0A  0100               	movlb	0	; () banked
  3206  002D0C  6F62               	movwf	USART_RX@i& (0+255),b
  3207  002D0E                     l5731:
  3208                           
  3209                           ; BSR set to: 0
  3210  002D0E  0E06               	movlw	6
  3211  002D10  0100               	movlb	0	; () banked
  3212  002D12  6562               	cpfsgt	USART_RX@i& (0+255),b
  3213  002D14  D001               	goto	l314
  3214  002D16  D012               	goto	l5743
  3215  002D18                     l314:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
  3219  002D18  8E83               	bsf	3971,7,c	;volatile
  3220  002D1A                     l316:
  3221  002D1A  AA9E               	btfss	3998,5,c	;volatile
  3222  002D1C  D7FE               	goto	l316
  3223                           
  3224                           ;telecomando.c: 295: }
  3225                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
  3226  002D1E  0100               	movlb	0	; () banked
  3227  002D20  5162               	movf	USART_RX@i& (0+255),w,b
  3228  002D22  0D01               	mullw	1
  3229  002D24  0EC9               	movlw	low _USART_Rx
  3230  002D26  24F3               	addwf	prodl,w,c
  3231  002D28  6ED9               	movwf	fsr2l,c
  3232  002D2A  0E00               	movlw	high _USART_Rx
  3233  002D2C  20F4               	addwfc	prodh,w,c
  3234  002D2E  6EDA               	movwf	fsr2h,c
  3235  002D30  CFAE FFDF          	movff	4014,indf2	;volatile
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
  3239  002D34  9A9E               	bcf	3998,5,c	;volatile
  3240                           
  3241                           ; BSR set to: 0
  3242  002D36  0100               	movlb	0	; () banked
  3243  002D38  2B62               	incf	USART_RX@i& (0+255),f,b
  3244  002D3A  D7E9               	goto	l5731
  3245  002D3C                     l5743:
  3246                           
  3247                           ;telecomando.c: 299: }
  3248                           ;telecomando.c: 301: }
  3249                           ;telecomando.c: 302: if (USART_Rx[6] == 0xAA) {
  3250  002D3C  0EAA               	movlw	170
  3251  002D3E  0100               	movlb	0	; () banked
  3252  002D40  19CF               	xorwf	(_USART_Rx+6)& (0+255),w,b
  3253  002D42  A4D8               	btfss	status,2,c
  3254  002D44  D025               	goto	l5759
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
  3258  002D46  0100               	movlb	0	; () banked
  3259  002D48  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
  3260  002D4A  D002               	goto	u6940
  3261  002D4C  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3262  002D4E  D001               	goto	u6955
  3263  002D50                     u6940:
  3264  002D50  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3265  002D52                     u6955:
  3266                           
  3267                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
  3268  002D52  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
  3269                           
  3270                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
  3271  002D56  0E80               	movlw	128
  3272  002D58  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
  3273  002D5A  A4D8               	btfss	status,2,c
  3274  002D5C  D002               	goto	l5751
  3275                           
  3276                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
  3277  002D5E  0E00               	movlw	0
  3278  002D60  6E3B               	movwf	_actual_speed_pk1,c	;volatile
  3279  002D62                     l5751:
  3280                           
  3281                           ;telecomando.c: 308: }
  3282                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
  3283  002D62  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
  3284                           
  3285                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
  3286  002D66  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
  3287                           
  3288                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
  3289  002D6A  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
  3290                           
  3291                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
  3292  002D6E  503A               	movf	_actual_speed_pk0,w,c	;volatile
  3293  002D70  C03B  F060         	movff	_actual_speed_pk1,??_USART_RX	;volatile
  3294  002D74  0100               	movlb	0	; () banked
  3295  002D76  6B61               	clrf	(??_USART_RX+1)& (0+255),b
  3296  002D78  C060  F061         	movff	??_USART_RX,??_USART_RX+1
  3297  002D7C  0100               	movlb	0	; () banked
  3298  002D7E  6B60               	clrf	??_USART_RX& (0+255),b
  3299  002D80  0100               	movlb	0	; () banked
  3300  002D82  1160               	iorwf	??_USART_RX& (0+255),w,b
  3301  002D84  0100               	movlb	0	; () banked
  3302  002D86  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
  3303  002D88  0100               	movlb	0	; () banked
  3304  002D8A  5161               	movf	(??_USART_RX+1)& (0+255),w,b
  3305  002D8C  0100               	movlb	0	; () banked
  3306  002D8E  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
  3307  002D90                     l5759:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;telecomando.c: 313: }
  3311                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
  3312  002D90  9A9E               	bcf	3998,5,c	;volatile
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
  3316  002D92  8A9D               	bsf	3997,5,c	;volatile
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
  3320  002D94  82A0               	bsf	4000,1,c	;volatile
  3321  002D96                     l5765:
  3322                           
  3323                           ;telecomando.c: 317: }
  3324                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
  3325  002D96  8EF2               	bsf	intcon,7,c	;volatile
  3326                           
  3327                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
  3328  002D98  8CF2               	bsf	intcon,6,c	;volatile
  3329  002D9A  0012               	return		;funcret
  3330  002D9C                     __end_of_USART_RX:
  3331                           	opt stack 0
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           prodh	equ	0xFF4
  3337                           prodl	equ	0xFF3
  3338                           intcon	equ	0xFF2
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           indf1	equ	0xFE7
  3342                           postinc1	equ	0xFE6
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           indf2	equ	0xFDF
  3346                           postinc2	equ	0xFDE
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _PWR_Button_Polling *****************
  3352 ;; Defined at:
  3353 ;;		line 211 in file "telecomando.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		None
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3367 ;;      Params:         0       0       0       0
  3368 ;;      Locals:         0       0       0       0
  3369 ;;      Temps:          0       0       0       0
  3370 ;;      Totals:         0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    3
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text12
  3382  00347C                     __ptext12:
  3383                           	opt stack 0
  3384  00347C                     _PWR_Button_Polling:
  3385                           	opt stack 27
  3386                           
  3387                           ;telecomando.c: 212: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  3388                           
  3389                           ;incstack = 0
  3390  00347C  A681               	btfss	3969,3,c	;volatile
  3391  00347E  D002               	goto	l277
  3392  003480  B444               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3393  003482  0012               	return	
  3394  003484                     l277:
  3395                           
  3396                           ;telecomando.c: 213: wait_low = 0;
  3397  003484  9444               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3398                           
  3399                           ;telecomando.c: 214: if (PORTBbits.RB3 == 1) {
  3400  003486  A681               	btfss	3969,3,c	;volatile
  3401  003488  0012               	return	
  3402                           
  3403                           ;telecomando.c: 215: power_switch = ~power_switch;
  3404  00348A  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3405  00348C  D002               	goto	u7000
  3406  00348E  8244               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3407  003490  D001               	goto	u7015
  3408  003492                     u7000:
  3409  003492  9244               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3410  003494                     u7015:
  3411                           
  3412                           ;telecomando.c: 216: wait_low = 1;
  3413  003494  8444               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3414  003496  0012               	return	
  3415  003498                     __end_of_PWR_Button_Polling:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon	equ	0xFF2
  3424                           postinc0	equ	0xFEE
  3425                           wreg	equ	0xFE8
  3426                           indf1	equ	0xFE7
  3427                           postinc1	equ	0xFE6
  3428                           fsr1h	equ	0xFE2
  3429                           fsr1l	equ	0xFE1
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _LCD_Handler *****************
  3437 ;; Defined at:
  3438 ;;		line 322 in file "telecomando.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;		None               void
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3452 ;;      Params:         0       0       0       0
  3453 ;;      Locals:         0       0       0       0
  3454 ;;      Temps:          0       0       0       0
  3455 ;;      Totals:         0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    9
  3459 ;; This function calls:
  3460 ;;		_LCD_clear
  3461 ;;		_LCD_goto_line
  3462 ;;		_LCD_write_message
  3463 ;;		_LCD_write_string
  3464 ;;		___lwdiv
  3465 ;;		___xxtofl
  3466 ;;		_sprintf
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text13
  3473  00277C                     __ptext13:
  3474                           	opt stack 0
  3475  00277C                     _LCD_Handler:
  3476                           	opt stack 21
  3477                           
  3478                           ;telecomando.c: 323: actual_speed_kmh = actual_speed / 278;
  3479                           
  3480                           ;incstack = 0
  3481  00277C  0E01               	movlw	1
  3482  00277E  0100               	movlb	0	; () banked
  3483  002780  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3484  002782  0E16               	movlw	22
  3485  002784  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3486  002786  C0EB  F060         	movff	_actual_speed,___lwdiv@dividend	;volatile
  3487  00278A  C0EC  F061         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  3488  00278E  EC06  F018         	call	___lwdiv	;wreg free
  3489  002792  0100               	movlb	0	; () banked
  3490  002794  C060  F067         	movff	?___lwdiv,___xxtofl@val
  3491  002798  0100               	movlb	0	; () banked
  3492  00279A  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  3493  00279E  0100               	movlb	0	; () banked
  3494  0027A0  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  3495  0027A2  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  3496  0027A4  0E00               	movlw	0
  3497  0027A6  EC0C  F00F         	call	___xxtofl
  3498  0027AA  C067  F0DF         	movff	?___xxtofl,_actual_speed_kmh
  3499  0027AE  C068  F0E0         	movff	?___xxtofl+1,_actual_speed_kmh+1
  3500  0027B2  C069  F0E1         	movff	?___xxtofl+2,_actual_speed_kmh+2
  3501  0027B6  C06A  F0E2         	movff	?___xxtofl+3,_actual_speed_kmh+3
  3502                           
  3503                           ;telecomando.c: 325: LCD_clear();
  3504  0027BA  ECAC  F019         	call	_LCD_clear	;wreg free
  3505                           
  3506                           ;telecomando.c: 326: LCD_goto_line(1);
  3507  0027BE  0E01               	movlw	1
  3508  0027C0  ECD4  F014         	call	_LCD_goto_line
  3509                           
  3510                           ;telecomando.c: 327: LCD_write_message("=== VEHICLE DATA ===");
  3511  0027C4  0EA5               	movlw	low STR_5
  3512  0027C6  0100               	movlb	0	; () banked
  3513  0027C8  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3514  0027CA  0E3F               	movlw	high STR_5
  3515  0027CC  0100               	movlb	0	; () banked
  3516  0027CE  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3517  0027D0  ECDB  F019         	call	_LCD_write_message	;wreg free
  3518                           
  3519                           ;telecomando.c: 329: LCD_goto_line(2);
  3520  0027D4  0E02               	movlw	2
  3521  0027D6  ECD4  F014         	call	_LCD_goto_line
  3522                           
  3523                           ;telecomando.c: 330: LCD_write_message("Direction: ");
  3524  0027DA  0ECF               	movlw	low STR_6
  3525  0027DC  0100               	movlb	0	; () banked
  3526  0027DE  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3527  0027E0  0E3F               	movlw	high STR_6
  3528  0027E2  0100               	movlb	0	; () banked
  3529  0027E4  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3530  0027E6  ECDB  F019         	call	_LCD_write_message	;wreg free
  3531                           
  3532                           ;telecomando.c: 331: if (switch_position != 0) {
  3533  0027EA  5043               	movf	_switch_position,w,c	;volatile
  3534  0027EC  B4D8               	btfsc	status,2,c
  3535  0027EE  D016               	goto	l5983
  3536                           
  3537                           ;telecomando.c: 332: if (dir == 2) {
  3538  0027F0  0E02               	movlw	2
  3539  0027F2  183D               	xorwf	_dir,w,c	;volatile
  3540  0027F4  A4D8               	btfss	status,2,c
  3541  0027F6  D009               	goto	l5981
  3542                           
  3543                           ;telecomando.c: 333: LCD_write_message("FWD");
  3544  0027F8  0EF9               	movlw	low STR_7
  3545  0027FA  0100               	movlb	0	; () banked
  3546  0027FC  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3547  0027FE  0E3F               	movlw	high STR_7
  3548  002800  0100               	movlb	0	; () banked
  3549  002802  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3550  002804  ECDB  F019         	call	_LCD_write_message	;wreg free
  3551                           
  3552                           ;telecomando.c: 334: } else {
  3553  002808  D011               	goto	l5985
  3554  00280A                     l5981:
  3555                           
  3556                           ;telecomando.c: 335: LCD_write_message("BKWD");
  3557  00280A  0EEF               	movlw	low STR_8
  3558  00280C  0100               	movlb	0	; () banked
  3559  00280E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3560  002810  0E3F               	movlw	high STR_8
  3561  002812  0100               	movlb	0	; () banked
  3562  002814  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3563  002816  ECDB  F019         	call	_LCD_write_message	;wreg free
  3564                           
  3565                           ;telecomando.c: 336: }
  3566                           ;telecomando.c: 337: } else {
  3567  00281A  D008               	goto	l5985
  3568  00281C                     l5983:
  3569                           
  3570                           ;telecomando.c: 339: LCD_write_message("P");
  3571  00281C  0EFD               	movlw	low STR_9
  3572  00281E  0100               	movlb	0	; () banked
  3573  002820  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3574  002822  0E3F               	movlw	high STR_9
  3575  002824  0100               	movlb	0	; () banked
  3576  002826  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3577  002828  ECDB  F019         	call	_LCD_write_message	;wreg free
  3578  00282C                     l5985:
  3579                           
  3580                           ;telecomando.c: 340: }
  3581                           ;telecomando.c: 342: LCD_goto_line(3);
  3582  00282C  0E03               	movlw	3
  3583  00282E  ECD4  F014         	call	_LCD_goto_line
  3584                           
  3585                           ;telecomando.c: 343: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  3586  002832  0E19               	movlw	low _str
  3587  002834  0100               	movlb	0	; () banked
  3588  002836  6FB7               	movwf	sprintf@sp& (0+255),b
  3589  002838  0E01               	movlw	high _str
  3590  00283A  0100               	movlb	0	; () banked
  3591  00283C  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  3592  00283E  0EDB               	movlw	low STR_10
  3593  002840  0100               	movlb	0	; () banked
  3594  002842  6FB9               	movwf	sprintf@f& (0+255),b
  3595  002844  0E3F               	movlw	high STR_10
  3596  002846  0100               	movlb	0	; () banked
  3597  002848  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  3598  00284A  C0DF  F0BB         	movff	_actual_speed_kmh,?_sprintf+4
  3599  00284E  C0E0  F0BC         	movff	_actual_speed_kmh+1,?_sprintf+5
  3600  002852  C0E1  F0BD         	movff	_actual_speed_kmh+2,?_sprintf+6
  3601  002856  C0E2  F0BE         	movff	_actual_speed_kmh+3,?_sprintf+7
  3602  00285A  EC62  F000         	call	_sprintf	;wreg free
  3603                           
  3604                           ;telecomando.c: 344: str[11] = '\0';
  3605  00285E  0E00               	movlw	0
  3606  002860  0101               	movlb	1	; () banked
  3607  002862  6F24               	movwf	(_str+11)& (0+255),b
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;telecomando.c: 345: LCD_write_string(str);
  3611  002864  0E19               	movlw	low _str
  3612  002866  0100               	movlb	0	; () banked
  3613  002868  6F71               	movwf	LCD_write_string@buffer& (0+255),b
  3614  00286A  0E01               	movlw	high _str
  3615  00286C  0100               	movlb	0	; () banked
  3616  00286E  6F72               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3617  002870  EC1A  F01A         	call	_LCD_write_string	;wreg free
  3618                           
  3619                           ;telecomando.c: 346: LCD_write_message("Km/h");
  3620  002874  0EF4               	movlw	low STR_11
  3621  002876  0100               	movlb	0	; () banked
  3622  002878  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3623  00287A  0E3F               	movlw	high STR_11
  3624  00287C  0100               	movlb	0	; () banked
  3625  00287E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3626  002880  ECDB  F019         	call	_LCD_write_message	;wreg free
  3627                           
  3628                           ;telecomando.c: 350: LCD_goto_line(4);
  3629  002884  0E04               	movlw	4
  3630  002886  ECD4  F014         	call	_LCD_goto_line
  3631                           
  3632                           ;telecomando.c: 351: LCD_write_message("====================");
  3633  00288A  0EBA               	movlw	low STR_1
  3634  00288C  0100               	movlb	0	; () banked
  3635  00288E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3636  002890  0E3F               	movlw	high STR_1
  3637  002892  0100               	movlb	0	; () banked
  3638  002894  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3639  002896  ECDB  F019         	call	_LCD_write_message	;wreg free
  3640  00289A  0012               	return		;funcret
  3641  00289C                     __end_of_LCD_Handler:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           intcon	equ	0xFF2
  3650                           postinc0	equ	0xFEE
  3651                           wreg	equ	0xFE8
  3652                           indf1	equ	0xFE7
  3653                           postinc1	equ	0xFE6
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           indf2	equ	0xFDF
  3657                           postinc2	equ	0xFDE
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function _sprintf *****************
  3663 ;; Defined at:
  3664 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  3667 ;;		 -> str(12), 
  3668 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  3669 ;;		 -> STR_10(12), 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  3672 ;;  tmpval          4   14[BANK1 ] struct .
  3673 ;;  val             4    8[BANK1 ] unsigned long 
  3674 ;;  cp              3    0        PTR const unsigned char 
  3675 ;;  prec            2   18[BANK1 ] int 
  3676 ;;  exp             2   12[BANK1 ] int 
  3677 ;;  flag            2    6[BANK1 ] unsigned short 
  3678 ;;  ap              2    4[BANK1 ] PTR void [1]
  3679 ;;		 -> ?_sprintf(2), 
  3680 ;;  len             2    0        unsigned int 
  3681 ;;  width           2    0        int 
  3682 ;;  c               1   24[BANK1 ] char 
  3683 ;;  d               1    0        unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2   87[BANK0 ] int 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3693 ;;      Params:         0       8       0       0
  3694 ;;      Locals:         0       0      25       0
  3695 ;;      Temps:          0       2       0       0
  3696 ;;      Totals:         0      10      25       0
  3697 ;;Total ram usage:       35 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    5
  3700 ;; This function calls:
  3701 ;;		___awdiv
  3702 ;;		___fladd
  3703 ;;		___flge
  3704 ;;		___flmul
  3705 ;;		___flneg
  3706 ;;		___flsub
  3707 ;;		___fltol
  3708 ;;		___lldiv
  3709 ;;		___llmod
  3710 ;;		___wmul
  3711 ;;		___xxtofl
  3712 ;;		__div_to_l_
  3713 ;;		__tdiv_to_l_
  3714 ;;		_fround
  3715 ;;		_isdigit
  3716 ;;		_scale
  3717 ;; This function is called by:
  3718 ;;		_LCD_Handler
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text14
  3723  0000C4                     __ptext14:
  3724                           	opt stack 0
  3725  0000C4                     _sprintf:
  3726                           	opt stack 24
  3727                           
  3728                           ;doprnt.c: 494: va_list ap;
  3729                           ;doprnt.c: 499: signed char c;
  3730                           ;doprnt.c: 501: int width;
  3731                           ;doprnt.c: 504: int prec;
  3732                           ;doprnt.c: 508: unsigned short flag;
  3733                           ;doprnt.c: 515: char d;
  3734                           ;doprnt.c: 516: double fval;
  3735                           ;doprnt.c: 517: int exp;
  3736                           ;doprnt.c: 523: union {
  3737                           ;doprnt.c: 524: unsigned long vd;
  3738                           ;doprnt.c: 525: double integ;
  3739                           ;doprnt.c: 526: } tmpval;
  3740                           ;doprnt.c: 528: unsigned long val;
  3741                           ;doprnt.c: 529: unsigned len;
  3742                           ;doprnt.c: 530: const char * cp;
  3743                           ;doprnt.c: 533: *ap = __va_start();
  3744                           
  3745                           ;incstack = 0
  3746  0000C4  0EBB               	movlw	low (?_sprintf+4)
  3747  0000C6  0101               	movlb	1	; () banked
  3748  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3749  0000CA  0E00               	movlw	high (?_sprintf+4)
  3750  0000CC  0101               	movlb	1	; () banked
  3751  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3752                           
  3753                           ;doprnt.c: 536: while(c = *f++) {
  3754  0000D0  EF80  F004         	goto	l5637
  3755  0000D4                     l5439:
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;doprnt.c: 538: if(c != '%')
  3759  0000D4  0E25               	movlw	37
  3760  0000D6  0101               	movlb	1	; () banked
  3761  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3762  0000DA  B4D8               	btfsc	status,2,c
  3763  0000DC  D008               	goto	l5445
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;doprnt.c: 540: {
  3767                           ;doprnt.c: 541: ((*sp++ = (c)));
  3768  0000DE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3769  0000E2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3770  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3771  0000EA  EF7D  F004         	goto	l5635
  3772  0000EE                     l5445:
  3773                           
  3774                           ;doprnt.c: 543: }
  3775                           ;doprnt.c: 548: flag = 0;
  3776  0000EE  0E00               	movlw	0
  3777  0000F0  0101               	movlb	1	; () banked
  3778  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3779  0000F4  0E00               	movlw	0
  3780  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;doprnt.c: 611: if(*f == '.') {
  3784  0000F8  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3785  0000FC  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3786  000100                     	if	0	;tblptru may be non-zero
  3787  000100                     	endif
  3788  000100                     	if	0	;tblptru may be non-zero
  3789  000100                     	endif
  3790  000100  0008               	tblrd		*
  3791  000102  50F5               	movf	tablat,w,c
  3792  000104  0A2E               	xorlw	46
  3793  000106  A4D8               	btfss	status,2,c
  3794  000108  D039               	goto	l5459
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;doprnt.c: 612: flag |= 0x4000;
  3798  00010A  0101               	movlb	1	; () banked
  3799  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3800                           
  3801                           ;doprnt.c: 613: f++;
  3802  00010E  0100               	movlb	0	; () banked
  3803  000110  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3804  000112  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;doprnt.c: 620: {
  3808                           ;doprnt.c: 621: prec = 0;
  3809  000114  0E00               	movlw	0
  3810  000116  0101               	movlb	1	; () banked
  3811  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3812  00011A  0E00               	movlw	0
  3813  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3814                           
  3815                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3816  00011E  D023               	goto	l5457
  3817  000120                     l5453:
  3818                           
  3819                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3820  000120  C112  F060         	movff	sprintf@prec,___wmul@multiplier
  3821  000124  C113  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  3822  000128  0E00               	movlw	0
  3823  00012A  0100               	movlb	0	; () banked
  3824  00012C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3825  00012E  0E0A               	movlw	10
  3826  000130  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3827  000132  EC78  F019         	call	___wmul	;wreg free
  3828  000136  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3829  00013A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3830  00013E                     	if	0	;tblptru may be non-zero
  3831  00013E                     	endif
  3832  00013E                     	if	0	;tblptru may be non-zero
  3833  00013E                     	endif
  3834  00013E  0008               	tblrd		*
  3835  000140  50F5               	movf	tablat,w,c
  3836  000142  0100               	movlb	0	; () banked
  3837  000144  2760               	addwf	?___wmul& (0+255),f,b
  3838  000146  0E00               	movlw	0
  3839  000148  0100               	movlb	0	; () banked
  3840  00014A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  3841  00014C  0ED0               	movlw	208
  3842  00014E  0100               	movlb	0	; () banked
  3843  000150  2560               	addwf	?___wmul& (0+255),w,b
  3844  000152  0101               	movlb	1	; () banked
  3845  000154  6F12               	movwf	sprintf@prec& (0+255),b
  3846  000156  0EFF               	movlw	255
  3847  000158  0100               	movlb	0	; () banked
  3848  00015A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3849  00015C  0101               	movlb	1	; () banked
  3850  00015E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3851                           
  3852                           ; BSR set to: 1
  3853  000160  0100               	movlb	0	; () banked
  3854  000162  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3855  000164  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3856  000166                     l5457:
  3857  000166  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3858  00016A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3859  00016E                     	if	0	;tblptru may be non-zero
  3860  00016E                     	endif
  3861  00016E                     	if	0	;tblptru may be non-zero
  3862  00016E                     	endif
  3863  00016E  0008               	tblrd		*
  3864  000170  50F5               	movf	tablat,w,c
  3865  000172  ECF1  F019         	call	_isdigit
  3866  000176  A0D8               	btfss	status,0,c
  3867  000178  D00C               	goto	l5467
  3868  00017A  D7D2               	goto	l5453
  3869  00017C                     l5459:
  3870                           
  3871                           ;doprnt.c: 626: prec = 0;
  3872  00017C  0E00               	movlw	0
  3873  00017E  0101               	movlb	1	; () banked
  3874  000180  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3875  000182  0E00               	movlw	0
  3876  000184  6F12               	movwf	sprintf@prec& (0+255),b
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;doprnt.c: 628: flag |= 0x1000;
  3880  000186  0101               	movlb	1	; () banked
  3881  000188  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;doprnt.c: 630: }
  3885                           ;doprnt.c: 635: switch(c = *f++) {
  3886  00018A  D003               	goto	l5467
  3887  00018C                     l5463:
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;doprnt.c: 663: flag |= 0x400;
  3891  00018C  0101               	movlb	1	; () banked
  3892  00018E  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3893                           
  3894                           ;doprnt.c: 664: break;
  3895  000190  D013               	goto	l5469
  3896  000192                     l5467:
  3897  000192  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3898  000196  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3899  00019A  0100               	movlb	0	; () banked
  3900  00019C  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3901  00019E  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3902  0001A0                     	if	0	;tblptru may be non-zero
  3903  0001A0                     	endif
  3904  0001A0                     	if	0	;tblptru may be non-zero
  3905  0001A0                     	endif
  3906  0001A0  0008               	tblrd		*
  3907  0001A2  CFF5 F118          	movff	tablat,sprintf@c
  3908  0001A6  0101               	movlb	1	; () banked
  3909  0001A8  5118               	movf	sprintf@c& (0+255),w,b
  3910                           
  3911                           ; Switch size 1, requested type "space"
  3912                           ; Number of cases is 2, Range of values is 0 to 102
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte            7     4 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917  0001AA  0A00               	xorlw	0	; case 0
  3918  0001AC  B4D8               	btfsc	status,2,c
  3919  0001AE  D3B7               	goto	l5639
  3920  0001B0  0A66               	xorlw	102	; case 102
  3921  0001B2  B4D8               	btfsc	status,2,c
  3922  0001B4  D7EB               	goto	l5463
  3923  0001B6  D3A4               	goto	l5637
  3924  0001B8                     l5469:
  3925                           
  3926                           ; BSR set to: 1
  3927                           ;doprnt.c: 825: if(flag & (0x700)) {
  3928  0001B8  0E07               	movlw	7
  3929  0001BA  0101               	movlb	1	; () banked
  3930  0001BC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3931  0001BE  B4D8               	btfsc	status,2,c
  3932  0001C0  D347               	goto	l5617
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;doprnt.c: 827: if(flag & 0x1000)
  3936  0001C2  0101               	movlb	1	; () banked
  3937  0001C4  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3938  0001C6  D005               	goto	l5475
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;doprnt.c: 829: prec = 6;
  3942  0001C8  0E00               	movlw	0
  3943  0001CA  0101               	movlb	1	; () banked
  3944  0001CC  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3945  0001CE  0E06               	movlw	6
  3946  0001D0  6F12               	movwf	sprintf@prec& (0+255),b
  3947  0001D2                     l5475:
  3948                           
  3949                           ; BSR set to: 1
  3950                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3951  0001D2  C104  FFD9         	movff	sprintf@ap,fsr2l
  3952  0001D6  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3953  0001DA  CFDE F114          	movff	postinc2,sprintf@fval
  3954  0001DE  CFDE F115          	movff	postinc2,sprintf@fval+1
  3955  0001E2  CFDE F116          	movff	postinc2,sprintf@fval+2
  3956  0001E6  CFDE F117          	movff	postinc2,sprintf@fval+3
  3957                           
  3958                           ; BSR set to: 1
  3959  0001EA  0E04               	movlw	4
  3960  0001EC  0101               	movlb	1	; () banked
  3961  0001EE  2704               	addwf	sprintf@ap& (0+255),f,b
  3962  0001F0  0E00               	movlw	0
  3963  0001F2  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;doprnt.c: 831: if(fval < 0.0) {
  3967  0001F4  0101               	movlb	1	; () banked
  3968  0001F6  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3969  0001F8  D015               	goto	l5485
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;doprnt.c: 832: fval = -fval;
  3973  0001FA  C114  F060         	movff	sprintf@fval,___flneg@f1
  3974  0001FE  C115  F061         	movff	sprintf@fval+1,___flneg@f1+1
  3975  000202  C116  F062         	movff	sprintf@fval+2,___flneg@f1+2
  3976  000206  C117  F063         	movff	sprintf@fval+3,___flneg@f1+3
  3977  00020A  EC5C  F019         	call	___flneg	;wreg free
  3978  00020E  C060  F114         	movff	?___flneg,sprintf@fval
  3979  000212  C061  F115         	movff	?___flneg+1,sprintf@fval+1
  3980  000216  C062  F116         	movff	?___flneg+2,sprintf@fval+2
  3981  00021A  C063  F117         	movff	?___flneg+3,sprintf@fval+3
  3982                           
  3983                           ;doprnt.c: 833: flag |= 0x03;
  3984  00021E  0E03               	movlw	3
  3985  000220  0101               	movlb	1	; () banked
  3986  000222  1306               	iorwf	sprintf@flag& (0+255),f,b
  3987  000224                     l5485:
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;doprnt.c: 834: }
  3991                           ;doprnt.c: 835: exp = 0;
  3992  000224  0E00               	movlw	0
  3993  000226  0101               	movlb	1	; () banked
  3994  000228  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3995  00022A  0E00               	movlw	0
  3996  00022C  6F0C               	movwf	sprintf@exp& (0+255),b
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;doprnt.c: 836: if( fval!=0) {
  4000  00022E  0101               	movlb	1	; () banked
  4001  000230  5114               	movf	sprintf@fval& (0+255),w,b
  4002  000232  0101               	movlb	1	; () banked
  4003  000234  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4004  000236  0101               	movlb	1	; () banked
  4005  000238  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4006  00023A  0101               	movlb	1	; () banked
  4007  00023C  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4008  00023E  B4D8               	btfsc	status,2,c
  4009  000240  D08E               	goto	l5513
  4010                           
  4011                           ; BSR set to: 1
  4012                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4013  000242  0101               	movlb	1	; () banked
  4014  000244  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4015  000246  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4016  000248  0F82               	addlw	130
  4017  00024A  0101               	movlb	1	; () banked
  4018  00024C  6F0C               	movwf	sprintf@exp& (0+255),b
  4019  00024E  0101               	movlb	1	; () banked
  4020  000250  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  4021  000252  0EFF               	movlw	255
  4022  000254  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;doprnt.c: 838: exp--;
  4026  000256  0101               	movlb	1	; () banked
  4027  000258  070C               	decf	sprintf@exp& (0+255),f,b
  4028  00025A  A0D8               	btfss	status,0,c
  4029  00025C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;doprnt.c: 839: exp *= 3;
  4033  00025E  C10C  F060         	movff	sprintf@exp,___wmul@multiplier
  4034  000262  C10D  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  4035  000266  0E00               	movlw	0
  4036  000268  0100               	movlb	0	; () banked
  4037  00026A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4038  00026C  0E03               	movlw	3
  4039  00026E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4040  000270  EC78  F019         	call	___wmul	;wreg free
  4041  000274  C060  F10C         	movff	?___wmul,sprintf@exp
  4042  000278  C061  F10D         	movff	?___wmul+1,sprintf@exp+1
  4043                           
  4044                           ;doprnt.c: 840: exp /= 10;
  4045  00027C  C10C  F066         	movff	sprintf@exp,___awdiv@dividend
  4046  000280  C10D  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  4047  000284  0E00               	movlw	0
  4048  000286  0100               	movlb	0	; () banked
  4049  000288  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4050  00028A  0E0A               	movlw	10
  4051  00028C  6F68               	movwf	___awdiv@divisor& (0+255),b
  4052  00028E  ECBA  F015         	call	___awdiv	;wreg free
  4053  000292  C066  F10C         	movff	?___awdiv,sprintf@exp
  4054  000296  C067  F10D         	movff	?___awdiv+1,sprintf@exp+1
  4055                           
  4056                           ;doprnt.c: 841: if(exp < 0)
  4057  00029A  0101               	movlb	1	; () banked
  4058  00029C  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  4059  00029E  D004               	goto	l5501
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;doprnt.c: 842: exp--;
  4063  0002A0  0101               	movlb	1	; () banked
  4064  0002A2  070C               	decf	sprintf@exp& (0+255),f,b
  4065  0002A4  A0D8               	btfss	status,0,c
  4066  0002A6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4067  0002A8                     l5501:
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4071  0002A8  0101               	movlb	1	; () banked
  4072  0002AA  510C               	movf	sprintf@exp& (0+255),w,b
  4073  0002AC  0800               	sublw	0
  4074  0002AE  EC96  F004         	call	_scale
  4075  0002B2  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4076  0002B6  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4077  0002BA  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4078  0002BE  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4079                           
  4080                           ;doprnt.c: 847: tmpval.integ *= fval;
  4081  0002C2  C10E  F075         	movff	sprintf@tmpval,___flmul@b
  4082  0002C6  C10F  F076         	movff	sprintf@tmpval+1,___flmul@b+1
  4083  0002CA  C110  F077         	movff	sprintf@tmpval+2,___flmul@b+2
  4084  0002CE  C111  F078         	movff	sprintf@tmpval+3,___flmul@b+3
  4085  0002D2  C114  F079         	movff	sprintf@fval,___flmul@a
  4086  0002D6  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4087  0002DA  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4088  0002DE  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4089  0002E2  EC53  F009         	call	___flmul	;wreg free
  4090  0002E6  C075  F10E         	movff	?___flmul,sprintf@tmpval
  4091  0002EA  C076  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  4092  0002EE  C077  F110         	movff	?___flmul+2,sprintf@tmpval+2
  4093  0002F2  C078  F111         	movff	?___flmul+3,sprintf@tmpval+3
  4094                           
  4095                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4096  0002F6  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4097  0002FA  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4098  0002FE  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4099  000302  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4100  000306  0E00               	movlw	0
  4101  000308  0100               	movlb	0	; () banked
  4102  00030A  6F64               	movwf	___flge@ff2& (0+255),b
  4103  00030C  0E00               	movlw	0
  4104  00030E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4105  000310  0E80               	movlw	128
  4106  000312  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4107  000314  0E3F               	movlw	63
  4108  000316  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4109  000318  ECC2  F010         	call	___flge	;wreg free
  4110  00031C  0100               	movlb	0	; () banked
  4111  00031E  B0D8               	btfsc	status,0,c
  4112  000320  D005               	goto	l5509
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;doprnt.c: 849: exp--;
  4116  000322  0101               	movlb	1	; () banked
  4117  000324  070C               	decf	sprintf@exp& (0+255),f,b
  4118  000326  A0D8               	btfss	status,0,c
  4119  000328  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4120  00032A  D019               	goto	l5513
  4121  00032C                     l5509:
  4122                           
  4123                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4124  00032C  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4125  000330  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4126  000334  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4127  000338  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4128  00033C  0E00               	movlw	0
  4129  00033E  0100               	movlb	0	; () banked
  4130  000340  6F64               	movwf	___flge@ff2& (0+255),b
  4131  000342  0E00               	movlw	0
  4132  000344  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4133  000346  0E20               	movlw	32
  4134  000348  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4135  00034A  0E41               	movlw	65
  4136  00034C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4137  00034E  ECC2  F010         	call	___flge	;wreg free
  4138  000352  0100               	movlb	0	; () banked
  4139  000354  A0D8               	btfss	status,0,c
  4140  000356  D003               	goto	l5513
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;doprnt.c: 851: exp++;
  4144  000358  0101               	movlb	1	; () banked
  4145  00035A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  4146  00035C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  4147  00035E                     l5513:
  4148                           
  4149                           ;doprnt.c: 852: }
  4150                           ;doprnt.c: 1112: if(prec <= 12)
  4151  00035E  0101               	movlb	1	; () banked
  4152  000360  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4153  000362  D008               	goto	l5515
  4154  000364  0101               	movlb	1	; () banked
  4155  000366  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4156  000368  E123               	bnz	l5517
  4157  00036A  0E0D               	movlw	13
  4158  00036C  0101               	movlb	1	; () banked
  4159  00036E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4160  000370  B0D8               	btfsc	status,0,c
  4161  000372  D01E               	goto	l5517
  4162  000374                     l5515:
  4163                           
  4164                           ; BSR set to: 1
  4165                           ;doprnt.c: 1113: fval += fround(prec);
  4166  000374  C114  F09B         	movff	sprintf@fval,___fladd@b
  4167  000378  C115  F09C         	movff	sprintf@fval+1,___fladd@b+1
  4168  00037C  C116  F09D         	movff	sprintf@fval+2,___fladd@b+2
  4169  000380  C117  F09E         	movff	sprintf@fval+3,___fladd@b+3
  4170  000384  0101               	movlb	1	; () banked
  4171  000386  5112               	movf	sprintf@prec& (0+255),w,b
  4172  000388  ECA3  F00D         	call	_fround
  4173  00038C  C08E  F09F         	movff	?_fround,___fladd@a
  4174  000390  C08F  F0A0         	movff	?_fround+1,___fladd@a+1
  4175  000394  C090  F0A1         	movff	?_fround+2,___fladd@a+2
  4176  000398  C091  F0A2         	movff	?_fround+3,___fladd@a+3
  4177  00039C  ECFF  F006         	call	___fladd	;wreg free
  4178  0003A0  C09B  F114         	movff	?___fladd,sprintf@fval
  4179  0003A4  C09C  F115         	movff	?___fladd+1,sprintf@fval+1
  4180  0003A8  C09D  F116         	movff	?___fladd+2,sprintf@fval+2
  4181  0003AC  C09E  F117         	movff	?___fladd+3,sprintf@fval+3
  4182  0003B0                     l5517:
  4183                           
  4184                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4185  0003B0  0101               	movlb	1	; () banked
  4186  0003B2  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4187  0003B4  D008               	goto	l5519
  4188  0003B6  0101               	movlb	1	; () banked
  4189  0003B8  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4190  0003BA  E12E               	bnz	l5525
  4191  0003BC  0E0A               	movlw	10
  4192  0003BE  0101               	movlb	1	; () banked
  4193  0003C0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4194  0003C2  B0D8               	btfsc	status,0,c
  4195  0003C4  D029               	goto	l5525
  4196  0003C6                     l5519:
  4197                           
  4198                           ; BSR set to: 1
  4199  0003C6  0101               	movlb	1	; () banked
  4200  0003C8  5114               	movf	sprintf@fval& (0+255),w,b
  4201  0003CA  0101               	movlb	1	; () banked
  4202  0003CC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4203  0003CE  0101               	movlb	1	; () banked
  4204  0003D0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4205  0003D2  0101               	movlb	1	; () banked
  4206  0003D4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4207  0003D6  B4D8               	btfsc	status,2,c
  4208  0003D8  D06D               	goto	l5539
  4209                           
  4210                           ; BSR set to: 1
  4211  0003DA  C114  F097         	movff	sprintf@fval,___fltol@f1
  4212  0003DE  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4213  0003E2  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4214  0003E6  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4215  0003EA  EC4E  F014         	call	___fltol	;wreg free
  4216  0003EE  0100               	movlb	0	; () banked
  4217  0003F0  5197               	movf	?___fltol& (0+255),w,b
  4218  0003F2  0100               	movlb	0	; () banked
  4219  0003F4  1198               	iorwf	(?___fltol+1)& (0+255),w,b
  4220  0003F6  0100               	movlb	0	; () banked
  4221  0003F8  1199               	iorwf	(?___fltol+2)& (0+255),w,b
  4222  0003FA  0100               	movlb	0	; () banked
  4223  0003FC  119A               	iorwf	(?___fltol+3)& (0+255),w,b
  4224  0003FE  A4D8               	btfss	status,2,c
  4225  000400  D059               	goto	l5539
  4226                           
  4227                           ; BSR set to: 0
  4228  000402  0101               	movlb	1	; () banked
  4229  000404  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4230  000406  D056               	goto	l5539
  4231  000408  0101               	movlb	1	; () banked
  4232  00040A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4233  00040C  E105               	bnz	l5525
  4234  00040E  0E02               	movlw	2
  4235  000410  0101               	movlb	1	; () banked
  4236  000412  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4237  000414  A0D8               	btfss	status,0,c
  4238  000416  D04E               	goto	l5539
  4239  000418                     l5525:
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4243  000418  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4244  00041C  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4245  000420  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4246  000424  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4247  000428  0E5F               	movlw	95
  4248  00042A  0100               	movlb	0	; () banked
  4249  00042C  6F64               	movwf	___flge@ff2& (0+255),b
  4250  00042E  0E70               	movlw	112
  4251  000430  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4252  000432  0E89               	movlw	137
  4253  000434  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4254  000436  0E40               	movlw	64
  4255  000438  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4256  00043A  ECC2  F010         	call	___flge	;wreg free
  4257  00043E  0100               	movlb	0	; () banked
  4258  000440  B0D8               	btfsc	status,0,c
  4259  000442  D003               	goto	l5529
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4263  000444  0101               	movlb	1	; () banked
  4264  000446  0EF7               	movlw	247
  4265  000448  D002               	goto	L3
  4266  00044A                     l5529:
  4267                           
  4268                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4269  00044A  0101               	movlb	1	; () banked
  4270  00044C  0EF8               	movlw	248
  4271  00044E                     L3:
  4272  00044E  270C               	addwf	sprintf@exp& (0+255),f,b
  4273  000450  0EFF               	movlw	255
  4274  000452  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4278                           
  4279                           ; BSR set to: 1
  4280  000454  0101               	movlb	1	; () banked
  4281  000456  510C               	movf	sprintf@exp& (0+255),w,b
  4282  000458  EC96  F004         	call	_scale
  4283  00045C  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4284  000460  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4285  000464  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4286  000468  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4287  00046C  C114  F060         	movff	sprintf@fval,__div_to_l_@f1
  4288  000470  C115  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4289  000474  C116  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4290  000478  C117  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  4291  00047C  C10E  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  4292  000480  C10F  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  4293  000484  C110  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  4294  000488  C111  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  4295  00048C  EC8A  F011         	call	__div_to_l_	;wreg free
  4296  000490  C060  F108         	movff	?__div_to_l_,sprintf@val
  4297  000494  C061  F109         	movff	?__div_to_l_+1,sprintf@val+1
  4298  000498  C062  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  4299  00049C  C063  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  4300                           
  4301                           ;doprnt.c: 1129: fval = 0.0;
  4302  0004A0  0E00               	movlw	0
  4303  0004A2  0101               	movlb	1	; () banked
  4304  0004A4  6F14               	movwf	sprintf@fval& (0+255),b
  4305  0004A6  0E00               	movlw	0
  4306  0004A8  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  4307  0004AA  0E00               	movlw	0
  4308  0004AC  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  4309  0004AE  0E00               	movlw	0
  4310  0004B0  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  4311                           
  4312                           ;doprnt.c: 1130: } else {
  4313  0004B2  D03C               	goto	l5543
  4314  0004B4                     l5539:
  4315                           
  4316                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4317  0004B4  C114  F097         	movff	sprintf@fval,___fltol@f1
  4318  0004B8  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4319  0004BC  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4320  0004C0  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4321  0004C4  EC4E  F014         	call	___fltol	;wreg free
  4322  0004C8  C097  F108         	movff	?___fltol,sprintf@val
  4323  0004CC  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4324  0004D0  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4325  0004D4  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4326                           
  4327                           ;doprnt.c: 1132: fval -= (double)val;
  4328  0004D8  C114  F0AF         	movff	sprintf@fval,___flsub@b
  4329  0004DC  C115  F0B0         	movff	sprintf@fval+1,___flsub@b+1
  4330  0004E0  C116  F0B1         	movff	sprintf@fval+2,___flsub@b+2
  4331  0004E4  C117  F0B2         	movff	sprintf@fval+3,___flsub@b+3
  4332  0004E8  C108  F067         	movff	sprintf@val,___xxtofl@val
  4333  0004EC  C109  F068         	movff	sprintf@val+1,___xxtofl@val+1
  4334  0004F0  C10A  F069         	movff	sprintf@val+2,___xxtofl@val+2
  4335  0004F4  C10B  F06A         	movff	sprintf@val+3,___xxtofl@val+3
  4336  0004F8  0E00               	movlw	0
  4337  0004FA  EC0C  F00F         	call	___xxtofl
  4338  0004FE  C067  F0B3         	movff	?___xxtofl,___flsub@a
  4339  000502  C068  F0B4         	movff	?___xxtofl+1,___flsub@a+1
  4340  000506  C069  F0B5         	movff	?___xxtofl+2,___flsub@a+2
  4341  00050A  C06A  F0B6         	movff	?___xxtofl+3,___flsub@a+3
  4342  00050E  ECDB  F018         	call	___flsub	;wreg free
  4343  000512  C0AF  F114         	movff	?___flsub,sprintf@fval
  4344  000516  C0B0  F115         	movff	?___flsub+1,sprintf@fval+1
  4345  00051A  C0B1  F116         	movff	?___flsub+2,sprintf@fval+2
  4346  00051E  C0B2  F117         	movff	?___flsub+3,sprintf@fval+3
  4347                           
  4348                           ;doprnt.c: 1133: exp = 0;
  4349  000522  0E00               	movlw	0
  4350  000524  0101               	movlb	1	; () banked
  4351  000526  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  4352  000528  0E00               	movlw	0
  4353  00052A  6F0C               	movwf	sprintf@exp& (0+255),b
  4354  00052C                     l5543:
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;doprnt.c: 1134: }
  4358                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4359  00052C  0E01               	movlw	1
  4360  00052E  0101               	movlb	1	; () banked
  4361  000530  6F18               	movwf	sprintf@c& (0+255),b
  4362  000532                     l5545:
  4363                           
  4364                           ; BSR set to: 1
  4365  000532  0E0A               	movlw	10
  4366  000534  0101               	movlb	1	; () banked
  4367  000536  1918               	xorwf	sprintf@c& (0+255),w,b
  4368  000538  B4D8               	btfsc	status,2,c
  4369  00053A  D01E               	goto	l5557
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;doprnt.c: 1137: if(val < dpowers[c])
  4373                           
  4374                           ; BSR set to: 1
  4375                           
  4376                           ; BSR set to: 1
  4377  00053C  0101               	movlb	1	; () banked
  4378  00053E  5118               	movf	sprintf@c& (0+255),w,b
  4379  000540  0D04               	mullw	4
  4380  000542  0E53               	movlw	low _dpowers
  4381  000544  24F3               	addwf	prodl,w,c
  4382  000546  6EF6               	movwf	tblptrl,c
  4383  000548  0E3F               	movlw	high _dpowers
  4384  00054A  20F4               	addwfc	prodh,w,c
  4385  00054C  6EF7               	movwf	tblptrh,c
  4386  00054E                     	if	0	;There are less than 3 active tblptr bytes
  4387  00054E                     	endif
  4388  00054E  0009               	tblrd		*+
  4389  000550  50F5               	movf	tablat,w,c
  4390  000552  0101               	movlb	1	; () banked
  4391  000554  5D08               	subwf	sprintf@val& (0+255),w,b
  4392  000556  0009               	tblrd		*+
  4393  000558  50F5               	movf	tablat,w,c
  4394  00055A  0101               	movlb	1	; () banked
  4395  00055C  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  4396  00055E  0009               	tblrd		*+
  4397  000560  50F5               	movf	tablat,w,c
  4398  000562  0101               	movlb	1	; () banked
  4399  000564  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  4400  000566  0009               	tblrd		*+
  4401  000568  50F5               	movf	tablat,w,c
  4402  00056A  0101               	movlb	1	; () banked
  4403  00056C  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  4404  00056E  A0D8               	btfss	status,0,c
  4405  000570  D003               	goto	l5557
  4406                           
  4407                           ; BSR set to: 1
  4408                           
  4409                           ; BSR set to: 1
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;doprnt.c: 1138: break;
  4413  000572  0101               	movlb	1	; () banked
  4414  000574  2B18               	incf	sprintf@c& (0+255),f,b
  4415  000576  D7DD               	goto	l5545
  4416  000578                     l5557:
  4417                           
  4418                           ; BSR set to: 1
  4419                           ;doprnt.c: 1175: {
  4420                           ;doprnt.c: 1188: if(flag & 0x03)
  4421  000578  0E03               	movlw	3
  4422  00057A  0101               	movlb	1	; () banked
  4423  00057C  1506               	andwf	sprintf@flag& (0+255),w,b
  4424  00057E  0100               	movlb	0	; () banked
  4425  000580  6FBF               	movwf	??_sprintf& (0+255),b
  4426  000582  0E00               	movlw	0
  4427  000584  0101               	movlb	1	; () banked
  4428  000586  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4429  000588  0100               	movlb	0	; () banked
  4430  00058A  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4431  00058C  0100               	movlb	0	; () banked
  4432  00058E  51BF               	movf	??_sprintf& (0+255),w,b
  4433  000590  0100               	movlb	0	; () banked
  4434  000592  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4435  000594  B4D8               	btfsc	status,2,c
  4436  000596  D055               	goto	l5571
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4440  000598  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4441  00059C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4442  0005A0  0E2D               	movlw	45
  4443  0005A2  D04D               	goto	L4
  4444  0005A4                     l5561:
  4445                           
  4446                           ; BSR set to: 0
  4447  0005A4  0100               	movlb	0	; () banked
  4448  0005A6  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4449  0005A8  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;doprnt.c: 1195: }
  4453                           ;doprnt.c: 1196: while(c--) {
  4454  0005AA  D04B               	goto	l5571
  4455  0005AC                     l5563:
  4456                           
  4457                           ;doprnt.c: 1200: {
  4458                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4459  0005AC  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4460  0005B0  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4461  0005B4  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4462  0005B8  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4463  0005BC  0101               	movlb	1	; () banked
  4464  0005BE  5118               	movf	sprintf@c& (0+255),w,b
  4465  0005C0  0D04               	mullw	4
  4466  0005C2  0E53               	movlw	low _dpowers
  4467  0005C4  24F3               	addwf	prodl,w,c
  4468  0005C6  6EF6               	movwf	tblptrl,c
  4469  0005C8  0E3F               	movlw	high _dpowers
  4470  0005CA  20F4               	addwfc	prodh,w,c
  4471  0005CC  6EF7               	movwf	tblptrh,c
  4472  0005CE                     	if	0	;There are less than 3 active tblptr bytes
  4473  0005CE                     	endif
  4474  0005CE  0009               	tblrd		*+
  4475  0005D0  CFF5 F064          	movff	tablat,___lldiv@divisor
  4476  0005D4  0009               	tblrd		*+
  4477  0005D6  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4478  0005DA  0009               	tblrd		*+
  4479  0005DC  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4480  0005E0  000A               	tblrd		*-
  4481  0005E2  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4482  0005E6  EC19  F016         	call	___lldiv	;wreg free
  4483  0005EA  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4484  0005EE  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4485  0005F2  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4486  0005F6  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4487                           
  4488                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4489  0005FA  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4490  0005FE  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4491  000602  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4492  000606  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4493  00060A  0E0A               	movlw	10
  4494  00060C  0100               	movlb	0	; () banked
  4495  00060E  6F64               	movwf	___llmod@divisor& (0+255),b
  4496  000610  0E00               	movlw	0
  4497  000612  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4498  000614  0E00               	movlw	0
  4499  000616  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4500  000618  0E00               	movlw	0
  4501  00061A  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4502  00061C  EC6E  F017         	call	___llmod	;wreg free
  4503  000620  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4504  000624  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4505  000628  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4506  00062C  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4507                           
  4508                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4509  000630  0101               	movlb	1	; () banked
  4510  000632  510E               	movf	sprintf@tmpval& (0+255),w,b
  4511  000634  0F30               	addlw	48
  4512  000636  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4513  00063A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4514  00063E                     L4:
  4515  00063E  6EDF               	movwf	indf2,c
  4516  000640  D7B1               	goto	l5561
  4517  000642                     l5571:
  4518                           
  4519                           ; BSR set to: 0
  4520  000642  0101               	movlb	1	; () banked
  4521  000644  0718               	decf	sprintf@c& (0+255),f,b
  4522  000646  0101               	movlb	1	; () banked
  4523  000648  2918               	incf	sprintf@c& (0+255),w,b
  4524  00064A  B4D8               	btfsc	status,2,c
  4525  00064C  D00E               	goto	l5579
  4526  00064E  D7AE               	goto	l5563
  4527  000650                     l5573:
  4528                           
  4529                           ; BSR set to: 1
  4530                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4531  000650  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4532  000654  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4533  000658  0E30               	movlw	48
  4534  00065A  6EDF               	movwf	indf2,c
  4535                           
  4536                           ; BSR set to: 1
  4537  00065C  0100               	movlb	0	; () banked
  4538  00065E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4539  000660  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;doprnt.c: 1209: exp--;
  4543  000662  0101               	movlb	1	; () banked
  4544  000664  070C               	decf	sprintf@exp& (0+255),f,b
  4545  000666  A0D8               	btfss	status,0,c
  4546  000668  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4547  00066A                     l5579:
  4548                           
  4549                           ; BSR set to: 1
  4550  00066A  0101               	movlb	1	; () banked
  4551  00066C  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4552  00066E  D007               	goto	l5581
  4553  000670  0101               	movlb	1	; () banked
  4554  000672  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4555  000674  E1ED               	bnz	l5573
  4556  000676  0101               	movlb	1	; () banked
  4557  000678  050C               	decf	sprintf@exp& (0+255),w,b
  4558  00067A  B0D8               	btfsc	status,0,c
  4559  00067C  D7E9               	goto	l5573
  4560  00067E                     l5581:
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;doprnt.c: 1210: }
  4564                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4565  00067E  0101               	movlb	1	; () banked
  4566  000680  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4567  000682  D00C               	goto	l409
  4568  000684  0101               	movlb	1	; () banked
  4569  000686  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4570  000688  E105               	bnz	u6640
  4571  00068A  0E09               	movlw	9
  4572  00068C  0101               	movlb	1	; () banked
  4573  00068E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4574  000690  A0D8               	btfss	status,0,c
  4575  000692  D004               	goto	l409
  4576  000694                     u6640:
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4580  000694  0E08               	movlw	8
  4581  000696  0101               	movlb	1	; () banked
  4582  000698  6F18               	movwf	sprintf@c& (0+255),b
  4583  00069A  D002               	goto	l5585
  4584  00069C                     l409:
  4585                           
  4586                           ; BSR set to: 1
  4587                           ;doprnt.c: 1213: else
  4588                           ;doprnt.c: 1214: c = prec;
  4589  00069C  C112  F118         	movff	sprintf@prec,sprintf@c
  4590  0006A0                     l5585:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;doprnt.c: 1215: prec -= c;
  4594  0006A0  0101               	movlb	1	; () banked
  4595  0006A2  5118               	movf	sprintf@c& (0+255),w,b
  4596  0006A4  0101               	movlb	1	; () banked
  4597  0006A6  5F12               	subwf	sprintf@prec& (0+255),f,b
  4598  0006A8  0E00               	movlw	0
  4599  0006AA  0101               	movlb	1	; () banked
  4600  0006AC  BF18               	btfsc	sprintf@c& (0+255),7,b
  4601  0006AE  0EFF               	movlw	255
  4602  0006B0  0101               	movlb	1	; () banked
  4603  0006B2  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;doprnt.c: 1219: if(c)
  4607  0006B4  0101               	movlb	1	; () banked
  4608  0006B6  5118               	movf	sprintf@c& (0+255),w,b
  4609  0006B8  0101               	movlb	1	; () banked
  4610  0006BA  B4D8               	btfsc	status,2,c
  4611  0006BC  D009               	goto	l5593
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4615  0006BE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4616  0006C2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4617  0006C6  0E2E               	movlw	46
  4618  0006C8  6EDF               	movwf	indf2,c
  4619                           
  4620                           ; BSR set to: 1
  4621  0006CA  0100               	movlb	0	; () banked
  4622  0006CC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4623  0006CE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4624  0006D0                     l5593:
  4625                           
  4626                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4627  0006D0  0101               	movlb	1	; () banked
  4628  0006D2  5118               	movf	sprintf@c& (0+255),w,b
  4629  0006D4  EC96  F004         	call	_scale
  4630  0006D8  C08E  F100         	movff	?_scale,_sprintf$2399
  4631  0006DC  C08F  F101         	movff	?_scale+1,_sprintf$2399+1
  4632  0006E0  C090  F102         	movff	?_scale+2,_sprintf$2399+2
  4633  0006E4  C091  F103         	movff	?_scale+3,_sprintf$2399+3
  4634                           
  4635                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4636  0006E8  C114  F079         	movff	sprintf@fval,___flmul@a
  4637  0006EC  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4638  0006F0  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4639  0006F4  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4640  0006F8  C100  F075         	movff	_sprintf$2399,___flmul@b
  4641  0006FC  C101  F076         	movff	_sprintf$2399+1,___flmul@b+1
  4642  000700  C102  F077         	movff	_sprintf$2399+2,___flmul@b+2
  4643  000704  C103  F078         	movff	_sprintf$2399+3,___flmul@b+3
  4644  000708  EC53  F009         	call	___flmul	;wreg free
  4645  00070C  C075  F097         	movff	?___flmul,___fltol@f1
  4646  000710  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  4647  000714  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  4648  000718  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  4649  00071C  EC4E  F014         	call	___fltol	;wreg free
  4650  000720  C097  F108         	movff	?___fltol,sprintf@val
  4651  000724  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4652  000728  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4653  00072C  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4654                           
  4655                           ;doprnt.c: 1228: while(c--) {
  4656  000730  D074               	goto	l5607
  4657  000732                     l5597:
  4658                           
  4659                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4660  000732  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4661  000736  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4662  00073A  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4663  00073E  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4664  000742  0101               	movlb	1	; () banked
  4665  000744  5118               	movf	sprintf@c& (0+255),w,b
  4666  000746  0D04               	mullw	4
  4667  000748  0E53               	movlw	low _dpowers
  4668  00074A  24F3               	addwf	prodl,w,c
  4669  00074C  6EF6               	movwf	tblptrl,c
  4670  00074E  0E3F               	movlw	high _dpowers
  4671  000750  20F4               	addwfc	prodh,w,c
  4672  000752  6EF7               	movwf	tblptrh,c
  4673  000754                     	if	0	;There are less than 3 active tblptr bytes
  4674  000754                     	endif
  4675  000754  0009               	tblrd		*+
  4676  000756  CFF5 F064          	movff	tablat,___lldiv@divisor
  4677  00075A  0009               	tblrd		*+
  4678  00075C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4679  000760  0009               	tblrd		*+
  4680  000762  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4681  000766  000A               	tblrd		*-
  4682  000768  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4683  00076C  EC19  F016         	call	___lldiv	;wreg free
  4684  000770  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4685  000774  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4686  000778  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4687  00077C  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4688                           
  4689                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4690  000780  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4691  000784  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4692  000788  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4693  00078C  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4694  000790  0E0A               	movlw	10
  4695  000792  0100               	movlb	0	; () banked
  4696  000794  6F64               	movwf	___llmod@divisor& (0+255),b
  4697  000796  0E00               	movlw	0
  4698  000798  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4699  00079A  0E00               	movlw	0
  4700  00079C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4701  00079E  0E00               	movlw	0
  4702  0007A0  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4703  0007A2  EC6E  F017         	call	___llmod	;wreg free
  4704  0007A6  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4705  0007AA  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4706  0007AE  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4707  0007B2  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4708                           
  4709                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4710  0007B6  0101               	movlb	1	; () banked
  4711  0007B8  510E               	movf	sprintf@tmpval& (0+255),w,b
  4712  0007BA  0F30               	addlw	48
  4713  0007BC  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4714  0007C0  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4715  0007C4  6EDF               	movwf	indf2,c
  4716                           
  4717                           ; BSR set to: 1
  4718  0007C6  0100               	movlb	0	; () banked
  4719  0007C8  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4720  0007CA  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;doprnt.c: 1232: val %= dpowers[c];
  4724  0007CC  C108  F060         	movff	sprintf@val,___llmod@dividend
  4725  0007D0  C109  F061         	movff	sprintf@val+1,___llmod@dividend+1
  4726  0007D4  C10A  F062         	movff	sprintf@val+2,___llmod@dividend+2
  4727  0007D8  C10B  F063         	movff	sprintf@val+3,___llmod@dividend+3
  4728  0007DC  0101               	movlb	1	; () banked
  4729  0007DE  5118               	movf	sprintf@c& (0+255),w,b
  4730  0007E0  0D04               	mullw	4
  4731  0007E2  0E53               	movlw	low _dpowers
  4732  0007E4  24F3               	addwf	prodl,w,c
  4733  0007E6  6EF6               	movwf	tblptrl,c
  4734  0007E8  0E3F               	movlw	high _dpowers
  4735  0007EA  20F4               	addwfc	prodh,w,c
  4736  0007EC  6EF7               	movwf	tblptrh,c
  4737  0007EE                     	if	0	;There are less than 3 active tblptr bytes
  4738  0007EE                     	endif
  4739  0007EE  0009               	tblrd		*+
  4740  0007F0  CFF5 F064          	movff	tablat,___llmod@divisor
  4741  0007F4  0009               	tblrd		*+
  4742  0007F6  CFF5 F065          	movff	tablat,___llmod@divisor+1
  4743  0007FA  0009               	tblrd		*+
  4744  0007FC  CFF5 F066          	movff	tablat,___llmod@divisor+2
  4745  000800  000A               	tblrd		*-
  4746  000802  CFF5 F067          	movff	tablat,___llmod@divisor+3
  4747  000806  EC6E  F017         	call	___llmod	;wreg free
  4748  00080A  C060  F108         	movff	?___llmod,sprintf@val
  4749  00080E  C061  F109         	movff	?___llmod+1,sprintf@val+1
  4750  000812  C062  F10A         	movff	?___llmod+2,sprintf@val+2
  4751  000816  C063  F10B         	movff	?___llmod+3,sprintf@val+3
  4752  00081A                     l5607:
  4753  00081A  0101               	movlb	1	; () banked
  4754  00081C  0718               	decf	sprintf@c& (0+255),f,b
  4755  00081E  0101               	movlb	1	; () banked
  4756  000820  2918               	incf	sprintf@c& (0+255),w,b
  4757  000822  B4D8               	btfsc	status,2,c
  4758  000824  D00E               	goto	l5615
  4759  000826  D785               	goto	l5597
  4760  000828                     l5609:
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4764  000828  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4765  00082C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4766  000830  0E30               	movlw	48
  4767  000832  6EDF               	movwf	indf2,c
  4768                           
  4769                           ; BSR set to: 1
  4770  000834  0100               	movlb	0	; () banked
  4771  000836  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4772  000838  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;doprnt.c: 1237: prec--;
  4776  00083A  0101               	movlb	1	; () banked
  4777  00083C  0712               	decf	sprintf@prec& (0+255),f,b
  4778  00083E  A0D8               	btfss	status,0,c
  4779  000840  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4780  000842                     l5615:
  4781                           
  4782                           ; BSR set to: 1
  4783  000842  0101               	movlb	1	; () banked
  4784  000844  5112               	movf	sprintf@prec& (0+255),w,b
  4785  000846  0101               	movlb	1	; () banked
  4786  000848  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4787  00084A  B4D8               	btfsc	status,2,c
  4788  00084C  D059               	goto	l5637
  4789  00084E  D7EC               	goto	l5609
  4790  000850                     l5617:
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;doprnt.c: 1246: }
  4794                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4795  000850  0101               	movlb	1	; () banked
  4796  000852  5112               	movf	sprintf@prec& (0+255),w,b
  4797  000854  0101               	movlb	1	; () banked
  4798  000856  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4799  000858  A4D8               	btfss	status,2,c
  4800  00085A  D00D               	goto	l5623
  4801                           
  4802                           ; BSR set to: 1
  4803  00085C  0101               	movlb	1	; () banked
  4804  00085E  5108               	movf	sprintf@val& (0+255),w,b
  4805  000860  0101               	movlb	1	; () banked
  4806  000862  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4807  000864  0101               	movlb	1	; () banked
  4808  000866  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4809  000868  0101               	movlb	1	; () banked
  4810  00086A  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4811  00086C  A4D8               	btfss	status,2,c
  4812  00086E  D003               	goto	l5623
  4813                           
  4814                           ; BSR set to: 1
  4815                           ;doprnt.c: 1291: prec++;
  4816  000870  0101               	movlb	1	; () banked
  4817  000872  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4818  000874  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4819  000876                     l5623:
  4820                           
  4821                           ; BSR set to: 1
  4822                           ;doprnt.c: 1339: if(c < prec)
  4823  000876  0E80               	movlw	128
  4824  000878  0101               	movlb	1	; () banked
  4825  00087A  BF18               	btfsc	sprintf@c& (0+255),7,b
  4826  00087C  0E7F               	movlw	127
  4827  00087E  0100               	movlb	0	; () banked
  4828  000880  6FBF               	movwf	??_sprintf& (0+255),b
  4829  000882  0101               	movlb	1	; () banked
  4830  000884  5112               	movf	sprintf@prec& (0+255),w,b
  4831  000886  0101               	movlb	1	; () banked
  4832  000888  5D18               	subwf	sprintf@c& (0+255),w,b
  4833  00088A  0101               	movlb	1	; () banked
  4834  00088C  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4835  00088E  0A80               	xorlw	128
  4836  000890  0100               	movlb	0	; () banked
  4837  000892  59BF               	subwfb	??_sprintf& (0+255),w,b
  4838  000894  B0D8               	btfsc	status,0,c
  4839  000896  D003               	goto	l5627
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;doprnt.c: 1340: c = prec;
  4843  000898  C112  F118         	movff	sprintf@prec,sprintf@c
  4844  00089C  D018               	goto	l5631
  4845  00089E                     l5627:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;doprnt.c: 1341: else if(prec < c)
  4849  00089E  0101               	movlb	1	; () banked
  4850  0008A0  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4851  0008A2  0A80               	xorlw	128
  4852  0008A4  0100               	movlb	0	; () banked
  4853  0008A6  6FBF               	movwf	??_sprintf& (0+255),b
  4854  0008A8  0101               	movlb	1	; () banked
  4855  0008AA  5118               	movf	sprintf@c& (0+255),w,b
  4856  0008AC  0101               	movlb	1	; () banked
  4857  0008AE  5D12               	subwf	sprintf@prec& (0+255),w,b
  4858  0008B0  0E80               	movlw	128
  4859  0008B2  0101               	movlb	1	; () banked
  4860  0008B4  BF18               	btfsc	sprintf@c& (0+255),7,b
  4861  0008B6  0E7F               	movlw	127
  4862  0008B8  0100               	movlb	0	; () banked
  4863  0008BA  59BF               	subwfb	??_sprintf& (0+255),w,b
  4864  0008BC  B0D8               	btfsc	status,0,c
  4865  0008BE  D007               	goto	l5631
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;doprnt.c: 1342: prec = c;
  4869  0008C0  0101               	movlb	1	; () banked
  4870  0008C2  5118               	movf	sprintf@c& (0+255),w,b
  4871  0008C4  0101               	movlb	1	; () banked
  4872  0008C6  6F12               	movwf	sprintf@prec& (0+255),b
  4873  0008C8  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4874  0008CA  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4875  0008CC  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4876  0008CE                     l5631:
  4877                           
  4878                           ;doprnt.c: 1422: {
  4879                           ;doprnt.c: 1438: if(flag & 0x03)
  4880  0008CE  0E03               	movlw	3
  4881  0008D0  0101               	movlb	1	; () banked
  4882  0008D2  1506               	andwf	sprintf@flag& (0+255),w,b
  4883  0008D4  0100               	movlb	0	; () banked
  4884  0008D6  6FBF               	movwf	??_sprintf& (0+255),b
  4885  0008D8  0E00               	movlw	0
  4886  0008DA  0101               	movlb	1	; () banked
  4887  0008DC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4888  0008DE  0100               	movlb	0	; () banked
  4889  0008E0  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4890  0008E2  0100               	movlb	0	; () banked
  4891  0008E4  51BF               	movf	??_sprintf& (0+255),w,b
  4892  0008E6  0100               	movlb	0	; () banked
  4893  0008E8  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4894  0008EA  B4D8               	btfsc	status,2,c
  4895  0008EC  D009               	goto	l5637
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4899  0008EE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4900  0008F2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4901  0008F6  0E2D               	movlw	45
  4902  0008F8  6EDF               	movwf	indf2,c
  4903  0008FA                     l5635:
  4904                           
  4905                           ; BSR set to: 0
  4906  0008FA  0100               	movlb	0	; () banked
  4907  0008FC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4908  0008FE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4909  000900                     l5637:
  4910  000900  C0B9  FFF6         	movff	sprintf@f,tblptrl
  4911  000904  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  4912  000908  0100               	movlb	0	; () banked
  4913  00090A  4BB9               	infsnz	sprintf@f& (0+255),f,b
  4914  00090C  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  4915  00090E                     	if	0	;tblptru may be non-zero
  4916  00090E                     	endif
  4917  00090E                     	if	0	;tblptru may be non-zero
  4918  00090E                     	endif
  4919  00090E  0008               	tblrd		*
  4920  000910  CFF5 F118          	movff	tablat,sprintf@c
  4921  000914  0101               	movlb	1	; () banked
  4922  000916  5118               	movf	sprintf@c& (0+255),w,b
  4923  000918  A4D8               	btfss	status,2,c
  4924  00091A  EF6A  F000         	goto	l5439
  4925  00091E                     l5639:
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;doprnt.c: 1538: *sp = 0;
  4929  00091E  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4930  000922  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4931  000926  0E00               	movlw	0
  4932  000928  6EDF               	movwf	indf2,c
  4933  00092A  0012               	return	
  4934  00092C                     __end_of_sprintf:
  4935                           	opt stack 0
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           indf1	equ	0xFE7
  4946                           postinc1	equ	0xFE6
  4947                           fsr1h	equ	0xFE2
  4948                           fsr1l	equ	0xFE1
  4949                           indf2	equ	0xFDF
  4950                           postinc2	equ	0xFDE
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _scale *****************
  4956 ;; Defined at:
  4957 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  scl             1    wreg     char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  scl             1   54[BANK0 ] char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  4   46[BANK0 ] char 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4971 ;;      Params:         0       4       0       0
  4972 ;;      Locals:         0       5       0       0
  4973 ;;      Temps:          0       0       0       0
  4974 ;;      Totals:         0       9       0       0
  4975 ;;Total ram usage:        9 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    4
  4978 ;; This function calls:
  4979 ;;		___awdiv
  4980 ;;		___awmod
  4981 ;;		___flmul
  4982 ;; This function is called by:
  4983 ;;		_sprintf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text15
  4988  00092C                     __ptext15:
  4989                           	opt stack 0
  4990  00092C                     _scale:
  4991                           	opt stack 24
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;incstack = 0
  4995                           ;scale@scl stored from wreg
  4996  00092C  0100               	movlb	0	; () banked
  4997  00092E  6F96               	movwf	scale@scl& (0+255),b
  4998                           
  4999                           ;doprnt.c: 428: if(scl < 0) {
  5000  000930  0100               	movlb	0	; () banked
  5001  000932  AF96               	btfss	scale@scl& (0+255),7,b
  5002  000934  D133               	goto	l5039
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;doprnt.c: 429: scl = -scl;
  5006  000936  0100               	movlb	0	; () banked
  5007  000938  6D96               	negf	scale@scl& (0+255),b
  5008                           
  5009                           ;doprnt.c: 430: if(scl>=110)
  5010  00093A  0100               	movlb	0	; () banked
  5011  00093C  5196               	movf	scale@scl& (0+255),w,b
  5012  00093E  0A80               	xorlw	128
  5013  000940  0F12               	addlw	-238
  5014  000942  A0D8               	btfss	status,0,c
  5015  000944  D0B2               	goto	l5029
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5019  000946  0E00               	movlw	0
  5020  000948  0100               	movlb	0	; () banked
  5021  00094A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5022  00094C  0E0A               	movlw	10
  5023  00094E  6F68               	movwf	___awdiv@divisor& (0+255),b
  5024  000950  0E00               	movlw	0
  5025  000952  0100               	movlb	0	; () banked
  5026  000954  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5027  000956  0E64               	movlw	100
  5028  000958  6F62               	movwf	___awmod@divisor& (0+255),b
  5029  00095A  0100               	movlb	0	; () banked
  5030  00095C  5196               	movf	scale@scl& (0+255),w,b
  5031  00095E  0100               	movlb	0	; () banked
  5032  000960  6F60               	movwf	___awmod@dividend& (0+255),b
  5033  000962  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5034  000964  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5035  000966  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5036  000968  ECCE  F016         	call	___awmod	;wreg free
  5037  00096C  C060  F066         	movff	?___awmod,___awdiv@dividend
  5038  000970  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5039  000974  ECBA  F015         	call	___awdiv	;wreg free
  5040  000978  0100               	movlb	0	; () banked
  5041  00097A  90D8               	bcf	status,0,c
  5042  00097C  3766               	rlcf	?___awdiv& (0+255),f,b
  5043  00097E  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5044  000980  0100               	movlb	0	; () banked
  5045  000982  90D8               	bcf	status,0,c
  5046  000984  3766               	rlcf	?___awdiv& (0+255),f,b
  5047  000986  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5048  000988  0E24               	movlw	36
  5049  00098A  0100               	movlb	0	; () banked
  5050  00098C  2766               	addwf	?___awdiv& (0+255),f,b
  5051  00098E  0E00               	movlw	0
  5052  000990  0100               	movlb	0	; () banked
  5053  000992  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5054  000994  0EEB               	movlw	low __npowers_
  5055  000996  0100               	movlb	0	; () banked
  5056  000998  2566               	addwf	?___awdiv& (0+255),w,b
  5057  00099A  6EF6               	movwf	tblptrl,c
  5058  00099C  0E3E               	movlw	high __npowers_
  5059  00099E  0100               	movlb	0	; () banked
  5060  0009A0  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5061  0009A2  6EF7               	movwf	tblptrh,c
  5062  0009A4                     	if	0	;There are less than 3 active tblptr bytes
  5063  0009A4                     	endif
  5064  0009A4  0009               	tblrd		*+
  5065  0009A6  CFF5 F079          	movff	tablat,___flmul@a
  5066  0009AA  0009               	tblrd		*+
  5067  0009AC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5068  0009B0  0009               	tblrd		*+
  5069  0009B2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5070  0009B6  000A               	tblrd		*-
  5071  0009B8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5072  0009BC  0E00               	movlw	0
  5073  0009BE  0100               	movlb	0	; () banked
  5074  0009C0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5075  0009C2  0E64               	movlw	100
  5076  0009C4  6F68               	movwf	___awdiv@divisor& (0+255),b
  5077  0009C6  0100               	movlb	0	; () banked
  5078  0009C8  5196               	movf	scale@scl& (0+255),w,b
  5079  0009CA  0100               	movlb	0	; () banked
  5080  0009CC  6F66               	movwf	___awdiv@dividend& (0+255),b
  5081  0009CE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5082  0009D0  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5083  0009D2  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5084  0009D4  ECBA  F015         	call	___awdiv	;wreg free
  5085  0009D8  0100               	movlb	0	; () banked
  5086  0009DA  90D8               	bcf	status,0,c
  5087  0009DC  3766               	rlcf	?___awdiv& (0+255),f,b
  5088  0009DE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5089  0009E0  0100               	movlb	0	; () banked
  5090  0009E2  90D8               	bcf	status,0,c
  5091  0009E4  3766               	rlcf	?___awdiv& (0+255),f,b
  5092  0009E6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5093  0009E8  0E48               	movlw	72
  5094  0009EA  0100               	movlb	0	; () banked
  5095  0009EC  2766               	addwf	?___awdiv& (0+255),f,b
  5096  0009EE  0E00               	movlw	0
  5097  0009F0  0100               	movlb	0	; () banked
  5098  0009F2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5099  0009F4  0EEB               	movlw	low __npowers_
  5100  0009F6  0100               	movlb	0	; () banked
  5101  0009F8  2566               	addwf	?___awdiv& (0+255),w,b
  5102  0009FA  6EF6               	movwf	tblptrl,c
  5103  0009FC  0E3E               	movlw	high __npowers_
  5104  0009FE  0100               	movlb	0	; () banked
  5105  000A00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5106  000A02  6EF7               	movwf	tblptrh,c
  5107  000A04                     	if	0	;There are less than 3 active tblptr bytes
  5108  000A04                     	endif
  5109  000A04  0009               	tblrd		*+
  5110  000A06  CFF5 F075          	movff	tablat,___flmul@b
  5111  000A0A  0009               	tblrd		*+
  5112  000A0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5113  000A10  0009               	tblrd		*+
  5114  000A12  CFF5 F077          	movff	tablat,___flmul@b+2
  5115  000A16  000A               	tblrd		*-
  5116  000A18  CFF5 F078          	movff	tablat,___flmul@b+3
  5117  000A1C  EC53  F009         	call	___flmul	;wreg free
  5118  000A20  C075  F092         	movff	?___flmul,_scale$2398
  5119  000A24  C076  F093         	movff	?___flmul+1,_scale$2398+1
  5120  000A28  C077  F094         	movff	?___flmul+2,_scale$2398+2
  5121  000A2C  C078  F095         	movff	?___flmul+3,_scale$2398+3
  5122                           
  5123                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5124  000A30  C092  F075         	movff	_scale$2398,___flmul@b
  5125  000A34  C093  F076         	movff	_scale$2398+1,___flmul@b+1
  5126  000A38  C094  F077         	movff	_scale$2398+2,___flmul@b+2
  5127  000A3C  C095  F078         	movff	_scale$2398+3,___flmul@b+3
  5128  000A40  0E00               	movlw	0
  5129  000A42  0100               	movlb	0	; () banked
  5130  000A44  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5131  000A46  0E0A               	movlw	10
  5132  000A48  6F62               	movwf	___awmod@divisor& (0+255),b
  5133  000A4A  0100               	movlb	0	; () banked
  5134  000A4C  5196               	movf	scale@scl& (0+255),w,b
  5135  000A4E  0100               	movlb	0	; () banked
  5136  000A50  6F60               	movwf	___awmod@dividend& (0+255),b
  5137  000A52  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5138  000A54  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5139  000A56  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5140  000A58  ECCE  F016         	call	___awmod	;wreg free
  5141  000A5C  0100               	movlb	0	; () banked
  5142  000A5E  90D8               	bcf	status,0,c
  5143  000A60  3760               	rlcf	?___awmod& (0+255),f,b
  5144  000A62  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5145  000A64  0100               	movlb	0	; () banked
  5146  000A66  90D8               	bcf	status,0,c
  5147  000A68  3760               	rlcf	?___awmod& (0+255),f,b
  5148  000A6A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5149  000A6C  0EEB               	movlw	low __npowers_
  5150  000A6E  0100               	movlb	0	; () banked
  5151  000A70  2560               	addwf	?___awmod& (0+255),w,b
  5152  000A72  6EF6               	movwf	tblptrl,c
  5153  000A74  0E3E               	movlw	high __npowers_
  5154  000A76  0100               	movlb	0	; () banked
  5155  000A78  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5156  000A7A  6EF7               	movwf	tblptrh,c
  5157  000A7C                     	if	0	;There are less than 3 active tblptr bytes
  5158  000A7C                     	endif
  5159  000A7C  0009               	tblrd		*+
  5160  000A7E  CFF5 F079          	movff	tablat,___flmul@a
  5161  000A82  0009               	tblrd		*+
  5162  000A84  CFF5 F07A          	movff	tablat,___flmul@a+1
  5163  000A88  0009               	tblrd		*+
  5164  000A8A  CFF5 F07B          	movff	tablat,___flmul@a+2
  5165  000A8E  000A               	tblrd		*-
  5166  000A90  CFF5 F07C          	movff	tablat,___flmul@a+3
  5167  000A94  EC53  F009         	call	___flmul	;wreg free
  5168  000A98  C075  F08E         	movff	?___flmul,?_scale
  5169  000A9C  C076  F08F         	movff	?___flmul+1,?_scale+1
  5170  000AA0  C077  F090         	movff	?___flmul+2,?_scale+2
  5171  000AA4  C078  F091         	movff	?___flmul+3,?_scale+3
  5172  000AA8  0012               	return	
  5173  000AAA                     l5029:
  5174                           
  5175                           ;doprnt.c: 432: else if(scl > 10)
  5176  000AAA  0100               	movlb	0	; () banked
  5177  000AAC  5196               	movf	scale@scl& (0+255),w,b
  5178  000AAE  0A80               	xorlw	128
  5179  000AB0  0F75               	addlw	-139
  5180  000AB2  A0D8               	btfss	status,0,c
  5181  000AB4  D05D               	goto	l5035
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5185  000AB6  0E00               	movlw	0
  5186  000AB8  0100               	movlb	0	; () banked
  5187  000ABA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5188  000ABC  0E0A               	movlw	10
  5189  000ABE  6F68               	movwf	___awdiv@divisor& (0+255),b
  5190  000AC0  0100               	movlb	0	; () banked
  5191  000AC2  5196               	movf	scale@scl& (0+255),w,b
  5192  000AC4  0100               	movlb	0	; () banked
  5193  000AC6  6F66               	movwf	___awdiv@dividend& (0+255),b
  5194  000AC8  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5195  000ACA  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5196  000ACC  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5197  000ACE  ECBA  F015         	call	___awdiv	;wreg free
  5198  000AD2  0100               	movlb	0	; () banked
  5199  000AD4  90D8               	bcf	status,0,c
  5200  000AD6  3766               	rlcf	?___awdiv& (0+255),f,b
  5201  000AD8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5202  000ADA  0100               	movlb	0	; () banked
  5203  000ADC  90D8               	bcf	status,0,c
  5204  000ADE  3766               	rlcf	?___awdiv& (0+255),f,b
  5205  000AE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5206  000AE2  0E24               	movlw	36
  5207  000AE4  0100               	movlb	0	; () banked
  5208  000AE6  2766               	addwf	?___awdiv& (0+255),f,b
  5209  000AE8  0E00               	movlw	0
  5210  000AEA  0100               	movlb	0	; () banked
  5211  000AEC  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5212  000AEE  0EEB               	movlw	low __npowers_
  5213  000AF0  0100               	movlb	0	; () banked
  5214  000AF2  2566               	addwf	?___awdiv& (0+255),w,b
  5215  000AF4  6EF6               	movwf	tblptrl,c
  5216  000AF6  0E3E               	movlw	high __npowers_
  5217  000AF8  0100               	movlb	0	; () banked
  5218  000AFA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5219  000AFC  6EF7               	movwf	tblptrh,c
  5220  000AFE                     	if	0	;There are less than 3 active tblptr bytes
  5221  000AFE                     	endif
  5222  000AFE  0009               	tblrd		*+
  5223  000B00  CFF5 F075          	movff	tablat,___flmul@b
  5224  000B04  0009               	tblrd		*+
  5225  000B06  CFF5 F076          	movff	tablat,___flmul@b+1
  5226  000B0A  0009               	tblrd		*+
  5227  000B0C  CFF5 F077          	movff	tablat,___flmul@b+2
  5228  000B10  000A               	tblrd		*-
  5229  000B12  CFF5 F078          	movff	tablat,___flmul@b+3
  5230  000B16  0E00               	movlw	0
  5231  000B18  0100               	movlb	0	; () banked
  5232  000B1A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5233  000B1C  0E0A               	movlw	10
  5234  000B1E  6F62               	movwf	___awmod@divisor& (0+255),b
  5235  000B20  0100               	movlb	0	; () banked
  5236  000B22  5196               	movf	scale@scl& (0+255),w,b
  5237  000B24  0100               	movlb	0	; () banked
  5238  000B26  6F60               	movwf	___awmod@dividend& (0+255),b
  5239  000B28  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5240  000B2A  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5241  000B2C  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5242  000B2E  ECCE  F016         	call	___awmod	;wreg free
  5243  000B32  0100               	movlb	0	; () banked
  5244  000B34  90D8               	bcf	status,0,c
  5245  000B36  3760               	rlcf	?___awmod& (0+255),f,b
  5246  000B38  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5247  000B3A  0100               	movlb	0	; () banked
  5248  000B3C  90D8               	bcf	status,0,c
  5249  000B3E  3760               	rlcf	?___awmod& (0+255),f,b
  5250  000B40  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5251  000B42  0EEB               	movlw	low __npowers_
  5252  000B44  0100               	movlb	0	; () banked
  5253  000B46  2560               	addwf	?___awmod& (0+255),w,b
  5254  000B48  6EF6               	movwf	tblptrl,c
  5255  000B4A  0E3E               	movlw	high __npowers_
  5256  000B4C  0100               	movlb	0	; () banked
  5257  000B4E  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5258  000B50  6EF7               	movwf	tblptrh,c
  5259  000B52                     	if	0	;There are less than 3 active tblptr bytes
  5260  000B52                     	endif
  5261  000B52  0009               	tblrd		*+
  5262  000B54  CFF5 F079          	movff	tablat,___flmul@a
  5263  000B58  0009               	tblrd		*+
  5264  000B5A  CFF5 F07A          	movff	tablat,___flmul@a+1
  5265  000B5E  0009               	tblrd		*+
  5266  000B60  CFF5 F07B          	movff	tablat,___flmul@a+2
  5267  000B64  000A               	tblrd		*-
  5268  000B66  CFF5 F07C          	movff	tablat,___flmul@a+3
  5269  000B6A  EC53  F009         	call	___flmul	;wreg free
  5270  000B6E  D794               	goto	L5
  5271  000B70                     l5035:
  5272                           
  5273                           ;doprnt.c: 434: return _npowers_[scl];
  5274  000B70  0100               	movlb	0	; () banked
  5275  000B72  5196               	movf	scale@scl& (0+255),w,b
  5276  000B74  0D04               	mullw	4
  5277  000B76  0EEB               	movlw	low __npowers_
  5278  000B78  24F3               	addwf	prodl,w,c
  5279  000B7A  6EF6               	movwf	tblptrl,c
  5280  000B7C  0E3E               	movlw	high __npowers_
  5281  000B7E  20F4               	addwfc	prodh,w,c
  5282  000B80  6EF7               	movwf	tblptrh,c
  5283  000B82                     	if	0	;There are less than 3 active tblptr bytes
  5284  000B82                     	endif
  5285  000B82  0009               	tblrd		*+
  5286  000B84  CFF5 F08E          	movff	tablat,?_scale
  5287  000B88  0009               	tblrd		*+
  5288  000B8A  CFF5 F08F          	movff	tablat,?_scale+1
  5289  000B8E  0009               	tblrd		*+
  5290  000B90  CFF5 F090          	movff	tablat,?_scale+2
  5291  000B94  000A               	tblrd		*-
  5292  000B96  CFF5 F091          	movff	tablat,?_scale+3
  5293                           
  5294                           ; BSR set to: 0
  5295  000B9A  0012               	return	
  5296  000B9C                     l5039:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;doprnt.c: 435: }
  5300                           ;doprnt.c: 436: if(scl>=110)
  5301  000B9C  0100               	movlb	0	; () banked
  5302  000B9E  5196               	movf	scale@scl& (0+255),w,b
  5303  000BA0  0A80               	xorlw	128
  5304  000BA2  0F12               	addlw	-238
  5305  000BA4  A0D8               	btfss	status,0,c
  5306  000BA6  D0B2               	goto	l5047
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5310  000BA8  0E00               	movlw	0
  5311  000BAA  0100               	movlb	0	; () banked
  5312  000BAC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5313  000BAE  0E0A               	movlw	10
  5314  000BB0  6F68               	movwf	___awdiv@divisor& (0+255),b
  5315  000BB2  0E00               	movlw	0
  5316  000BB4  0100               	movlb	0	; () banked
  5317  000BB6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5318  000BB8  0E64               	movlw	100
  5319  000BBA  6F62               	movwf	___awmod@divisor& (0+255),b
  5320  000BBC  0100               	movlb	0	; () banked
  5321  000BBE  5196               	movf	scale@scl& (0+255),w,b
  5322  000BC0  0100               	movlb	0	; () banked
  5323  000BC2  6F60               	movwf	___awmod@dividend& (0+255),b
  5324  000BC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5325  000BC6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5326  000BC8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5327  000BCA  ECCE  F016         	call	___awmod	;wreg free
  5328  000BCE  C060  F066         	movff	?___awmod,___awdiv@dividend
  5329  000BD2  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5330  000BD6  ECBA  F015         	call	___awdiv	;wreg free
  5331  000BDA  0100               	movlb	0	; () banked
  5332  000BDC  90D8               	bcf	status,0,c
  5333  000BDE  3766               	rlcf	?___awdiv& (0+255),f,b
  5334  000BE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5335  000BE2  0100               	movlb	0	; () banked
  5336  000BE4  90D8               	bcf	status,0,c
  5337  000BE6  3766               	rlcf	?___awdiv& (0+255),f,b
  5338  000BE8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5339  000BEA  0E24               	movlw	36
  5340  000BEC  0100               	movlb	0	; () banked
  5341  000BEE  2766               	addwf	?___awdiv& (0+255),f,b
  5342  000BF0  0E00               	movlw	0
  5343  000BF2  0100               	movlb	0	; () banked
  5344  000BF4  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5345  000BF6  0E1F               	movlw	low __powers_
  5346  000BF8  0100               	movlb	0	; () banked
  5347  000BFA  2566               	addwf	?___awdiv& (0+255),w,b
  5348  000BFC  6EF6               	movwf	tblptrl,c
  5349  000BFE  0E3F               	movlw	high __powers_
  5350  000C00  0100               	movlb	0	; () banked
  5351  000C02  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5352  000C04  6EF7               	movwf	tblptrh,c
  5353  000C06                     	if	0	;There are less than 3 active tblptr bytes
  5354  000C06                     	endif
  5355  000C06  0009               	tblrd		*+
  5356  000C08  CFF5 F079          	movff	tablat,___flmul@a
  5357  000C0C  0009               	tblrd		*+
  5358  000C0E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5359  000C12  0009               	tblrd		*+
  5360  000C14  CFF5 F07B          	movff	tablat,___flmul@a+2
  5361  000C18  000A               	tblrd		*-
  5362  000C1A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5363  000C1E  0E00               	movlw	0
  5364  000C20  0100               	movlb	0	; () banked
  5365  000C22  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5366  000C24  0E64               	movlw	100
  5367  000C26  6F68               	movwf	___awdiv@divisor& (0+255),b
  5368  000C28  0100               	movlb	0	; () banked
  5369  000C2A  5196               	movf	scale@scl& (0+255),w,b
  5370  000C2C  0100               	movlb	0	; () banked
  5371  000C2E  6F66               	movwf	___awdiv@dividend& (0+255),b
  5372  000C30  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5373  000C32  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5374  000C34  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5375  000C36  ECBA  F015         	call	___awdiv	;wreg free
  5376  000C3A  0100               	movlb	0	; () banked
  5377  000C3C  90D8               	bcf	status,0,c
  5378  000C3E  3766               	rlcf	?___awdiv& (0+255),f,b
  5379  000C40  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5380  000C42  0100               	movlb	0	; () banked
  5381  000C44  90D8               	bcf	status,0,c
  5382  000C46  3766               	rlcf	?___awdiv& (0+255),f,b
  5383  000C48  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5384  000C4A  0E48               	movlw	72
  5385  000C4C  0100               	movlb	0	; () banked
  5386  000C4E  2766               	addwf	?___awdiv& (0+255),f,b
  5387  000C50  0E00               	movlw	0
  5388  000C52  0100               	movlb	0	; () banked
  5389  000C54  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5390  000C56  0E1F               	movlw	low __powers_
  5391  000C58  0100               	movlb	0	; () banked
  5392  000C5A  2566               	addwf	?___awdiv& (0+255),w,b
  5393  000C5C  6EF6               	movwf	tblptrl,c
  5394  000C5E  0E3F               	movlw	high __powers_
  5395  000C60  0100               	movlb	0	; () banked
  5396  000C62  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5397  000C64  6EF7               	movwf	tblptrh,c
  5398  000C66                     	if	0	;There are less than 3 active tblptr bytes
  5399  000C66                     	endif
  5400  000C66  0009               	tblrd		*+
  5401  000C68  CFF5 F075          	movff	tablat,___flmul@b
  5402  000C6C  0009               	tblrd		*+
  5403  000C6E  CFF5 F076          	movff	tablat,___flmul@b+1
  5404  000C72  0009               	tblrd		*+
  5405  000C74  CFF5 F077          	movff	tablat,___flmul@b+2
  5406  000C78  000A               	tblrd		*-
  5407  000C7A  CFF5 F078          	movff	tablat,___flmul@b+3
  5408  000C7E  EC53  F009         	call	___flmul	;wreg free
  5409  000C82  C075  F092         	movff	?___flmul,_scale$2398
  5410  000C86  C076  F093         	movff	?___flmul+1,_scale$2398+1
  5411  000C8A  C077  F094         	movff	?___flmul+2,_scale$2398+2
  5412  000C8E  C078  F095         	movff	?___flmul+3,_scale$2398+3
  5413                           
  5414                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5415  000C92  C092  F075         	movff	_scale$2398,___flmul@b
  5416  000C96  C093  F076         	movff	_scale$2398+1,___flmul@b+1
  5417  000C9A  C094  F077         	movff	_scale$2398+2,___flmul@b+2
  5418  000C9E  C095  F078         	movff	_scale$2398+3,___flmul@b+3
  5419  000CA2  0E00               	movlw	0
  5420  000CA4  0100               	movlb	0	; () banked
  5421  000CA6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5422  000CA8  0E0A               	movlw	10
  5423  000CAA  6F62               	movwf	___awmod@divisor& (0+255),b
  5424  000CAC  0100               	movlb	0	; () banked
  5425  000CAE  5196               	movf	scale@scl& (0+255),w,b
  5426  000CB0  0100               	movlb	0	; () banked
  5427  000CB2  6F60               	movwf	___awmod@dividend& (0+255),b
  5428  000CB4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5429  000CB6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5430  000CB8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5431  000CBA  ECCE  F016         	call	___awmod	;wreg free
  5432  000CBE  0100               	movlb	0	; () banked
  5433  000CC0  90D8               	bcf	status,0,c
  5434  000CC2  3760               	rlcf	?___awmod& (0+255),f,b
  5435  000CC4  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5436  000CC6  0100               	movlb	0	; () banked
  5437  000CC8  90D8               	bcf	status,0,c
  5438  000CCA  3760               	rlcf	?___awmod& (0+255),f,b
  5439  000CCC  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5440  000CCE  0E1F               	movlw	low __powers_
  5441  000CD0  0100               	movlb	0	; () banked
  5442  000CD2  2560               	addwf	?___awmod& (0+255),w,b
  5443  000CD4  6EF6               	movwf	tblptrl,c
  5444  000CD6  0E3F               	movlw	high __powers_
  5445  000CD8  0100               	movlb	0	; () banked
  5446  000CDA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5447  000CDC  6EF7               	movwf	tblptrh,c
  5448  000CDE                     	if	0	;There are less than 3 active tblptr bytes
  5449  000CDE                     	endif
  5450  000CDE  0009               	tblrd		*+
  5451  000CE0  CFF5 F079          	movff	tablat,___flmul@a
  5452  000CE4  0009               	tblrd		*+
  5453  000CE6  CFF5 F07A          	movff	tablat,___flmul@a+1
  5454  000CEA  0009               	tblrd		*+
  5455  000CEC  CFF5 F07B          	movff	tablat,___flmul@a+2
  5456  000CF0  000A               	tblrd		*-
  5457  000CF2  CFF5 F07C          	movff	tablat,___flmul@a+3
  5458  000CF6  EC53  F009         	call	___flmul	;wreg free
  5459  000CFA  C075  F08E         	movff	?___flmul,?_scale
  5460  000CFE  C076  F08F         	movff	?___flmul+1,?_scale+1
  5461  000D02  C077  F090         	movff	?___flmul+2,?_scale+2
  5462  000D06  C078  F091         	movff	?___flmul+3,?_scale+3
  5463  000D0A  0012               	return	
  5464  000D0C                     l5047:
  5465                           
  5466                           ;doprnt.c: 438: else if(scl > 10)
  5467  000D0C  0100               	movlb	0	; () banked
  5468  000D0E  5196               	movf	scale@scl& (0+255),w,b
  5469  000D10  0A80               	xorlw	128
  5470  000D12  0F75               	addlw	-139
  5471  000D14  A0D8               	btfss	status,0,c
  5472  000D16  D05D               	goto	l5053
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5476  000D18  0E00               	movlw	0
  5477  000D1A  0100               	movlb	0	; () banked
  5478  000D1C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5479  000D1E  0E0A               	movlw	10
  5480  000D20  6F68               	movwf	___awdiv@divisor& (0+255),b
  5481  000D22  0100               	movlb	0	; () banked
  5482  000D24  5196               	movf	scale@scl& (0+255),w,b
  5483  000D26  0100               	movlb	0	; () banked
  5484  000D28  6F66               	movwf	___awdiv@dividend& (0+255),b
  5485  000D2A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5486  000D2C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5487  000D2E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5488  000D30  ECBA  F015         	call	___awdiv	;wreg free
  5489  000D34  0100               	movlb	0	; () banked
  5490  000D36  90D8               	bcf	status,0,c
  5491  000D38  3766               	rlcf	?___awdiv& (0+255),f,b
  5492  000D3A  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5493  000D3C  0100               	movlb	0	; () banked
  5494  000D3E  90D8               	bcf	status,0,c
  5495  000D40  3766               	rlcf	?___awdiv& (0+255),f,b
  5496  000D42  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5497  000D44  0E24               	movlw	36
  5498  000D46  0100               	movlb	0	; () banked
  5499  000D48  2766               	addwf	?___awdiv& (0+255),f,b
  5500  000D4A  0E00               	movlw	0
  5501  000D4C  0100               	movlb	0	; () banked
  5502  000D4E  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5503  000D50  0E1F               	movlw	low __powers_
  5504  000D52  0100               	movlb	0	; () banked
  5505  000D54  2566               	addwf	?___awdiv& (0+255),w,b
  5506  000D56  6EF6               	movwf	tblptrl,c
  5507  000D58  0E3F               	movlw	high __powers_
  5508  000D5A  0100               	movlb	0	; () banked
  5509  000D5C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5510  000D5E  6EF7               	movwf	tblptrh,c
  5511  000D60                     	if	0	;There are less than 3 active tblptr bytes
  5512  000D60                     	endif
  5513  000D60  0009               	tblrd		*+
  5514  000D62  CFF5 F075          	movff	tablat,___flmul@b
  5515  000D66  0009               	tblrd		*+
  5516  000D68  CFF5 F076          	movff	tablat,___flmul@b+1
  5517  000D6C  0009               	tblrd		*+
  5518  000D6E  CFF5 F077          	movff	tablat,___flmul@b+2
  5519  000D72  000A               	tblrd		*-
  5520  000D74  CFF5 F078          	movff	tablat,___flmul@b+3
  5521  000D78  0E00               	movlw	0
  5522  000D7A  0100               	movlb	0	; () banked
  5523  000D7C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5524  000D7E  0E0A               	movlw	10
  5525  000D80  6F62               	movwf	___awmod@divisor& (0+255),b
  5526  000D82  0100               	movlb	0	; () banked
  5527  000D84  5196               	movf	scale@scl& (0+255),w,b
  5528  000D86  0100               	movlb	0	; () banked
  5529  000D88  6F60               	movwf	___awmod@dividend& (0+255),b
  5530  000D8A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5531  000D8C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5532  000D8E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5533  000D90  ECCE  F016         	call	___awmod	;wreg free
  5534  000D94  0100               	movlb	0	; () banked
  5535  000D96  90D8               	bcf	status,0,c
  5536  000D98  3760               	rlcf	?___awmod& (0+255),f,b
  5537  000D9A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5538  000D9C  0100               	movlb	0	; () banked
  5539  000D9E  90D8               	bcf	status,0,c
  5540  000DA0  3760               	rlcf	?___awmod& (0+255),f,b
  5541  000DA2  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5542  000DA4  0E1F               	movlw	low __powers_
  5543  000DA6  0100               	movlb	0	; () banked
  5544  000DA8  2560               	addwf	?___awmod& (0+255),w,b
  5545  000DAA  6EF6               	movwf	tblptrl,c
  5546  000DAC  0E3F               	movlw	high __powers_
  5547  000DAE  0100               	movlb	0	; () banked
  5548  000DB0  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5549  000DB2  6EF7               	movwf	tblptrh,c
  5550  000DB4                     	if	0	;There are less than 3 active tblptr bytes
  5551  000DB4                     	endif
  5552  000DB4  0009               	tblrd		*+
  5553  000DB6  CFF5 F079          	movff	tablat,___flmul@a
  5554  000DBA  0009               	tblrd		*+
  5555  000DBC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5556  000DC0  0009               	tblrd		*+
  5557  000DC2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5558  000DC6  000A               	tblrd		*-
  5559  000DC8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5560  000DCC  EC53  F009         	call	___flmul	;wreg free
  5561  000DD0  D794               	goto	L6
  5562  000DD2                     l5053:
  5563                           
  5564                           ;doprnt.c: 440: return _powers_[scl];
  5565  000DD2  0100               	movlb	0	; () banked
  5566  000DD4  5196               	movf	scale@scl& (0+255),w,b
  5567  000DD6  0D04               	mullw	4
  5568  000DD8  0E1F               	movlw	low __powers_
  5569  000DDA  24F3               	addwf	prodl,w,c
  5570  000DDC  6EF6               	movwf	tblptrl,c
  5571  000DDE  0E3F               	movlw	high __powers_
  5572  000DE0  20F4               	addwfc	prodh,w,c
  5573  000DE2  6EF7               	movwf	tblptrh,c
  5574  000DE4                     	if	0	;There are less than 3 active tblptr bytes
  5575  000DE4                     	endif
  5576  000DE4  0009               	tblrd		*+
  5577  000DE6  CFF5 F08E          	movff	tablat,?_scale
  5578  000DEA  0009               	tblrd		*+
  5579  000DEC  CFF5 F08F          	movff	tablat,?_scale+1
  5580  000DF0  0009               	tblrd		*+
  5581  000DF2  CFF5 F090          	movff	tablat,?_scale+2
  5582  000DF6  000A               	tblrd		*-
  5583  000DF8  CFF5 F091          	movff	tablat,?_scale+3
  5584  000DFC  0012               	return	
  5585  000DFE                     __end_of_scale:
  5586                           	opt stack 0
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           postinc1	equ	0xFE6
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function _isdigit *****************
  5607 ;; Defined at:
  5608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  c               1    wreg     unsigned char 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  c               1    2[BANK0 ] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;		None               void
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5622 ;;      Params:         0       0       0       0
  5623 ;;      Locals:         0       2       0       0
  5624 ;;      Temps:          0       1       0       0
  5625 ;;      Totals:         0       3       0       0
  5626 ;;Total ram usage:        3 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    3
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_sprintf
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text16
  5637  0033E2                     __ptext16:
  5638                           	opt stack 0
  5639  0033E2                     _isdigit:
  5640                           	opt stack 25
  5641                           
  5642                           ;incstack = 0
  5643                           ;isdigit@c stored from wreg
  5644  0033E2  0100               	movlb	0	; () banked
  5645  0033E4  6F62               	movwf	isdigit@c& (0+255),b
  5646  0033E6  0E00               	movlw	0
  5647  0033E8  0100               	movlb	0	; () banked
  5648  0033EA  6F61               	movwf	_isdigit$2005& (0+255),b
  5649                           
  5650                           ; BSR set to: 0
  5651  0033EC  0E3A               	movlw	58
  5652  0033EE  0100               	movlb	0	; () banked
  5653  0033F0  6162               	cpfslt	isdigit@c& (0+255),b
  5654  0033F2  D007               	goto	l5065
  5655                           
  5656                           ; BSR set to: 0
  5657  0033F4  0E2F               	movlw	47
  5658  0033F6  0100               	movlb	0	; () banked
  5659  0033F8  6562               	cpfsgt	isdigit@c& (0+255),b
  5660  0033FA  D003               	goto	l5065
  5661                           
  5662                           ; BSR set to: 0
  5663  0033FC  0E01               	movlw	1
  5664  0033FE  0100               	movlb	0	; () banked
  5665  003400  6F61               	movwf	_isdigit$2005& (0+255),b
  5666  003402                     l5065:
  5667                           
  5668                           ; BSR set to: 0
  5669  003402  C061  F060         	movff	_isdigit$2005,??_isdigit
  5670  003406  0100               	movlb	0	; () banked
  5671  003408  3160               	rrcf	??_isdigit& (0+255),w,b
  5672  00340A  0012               	return	
  5673  00340C                     __end_of_isdigit:
  5674                           	opt stack 0
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           indf1	equ	0xFE7
  5685                           postinc1	equ	0xFE6
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _fround *****************
  5695 ;; Defined at:
  5696 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  prec            1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  prec            1   58[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  4   46[BANK0 ] unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5710 ;;      Params:         0       4       0       0
  5711 ;;      Locals:         0       9       0       0
  5712 ;;      Temps:          0       0       0       0
  5713 ;;      Totals:         0      13       0       0
  5714 ;;Total ram usage:       13 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    4
  5717 ;; This function calls:
  5718 ;;		___awdiv
  5719 ;;		___awmod
  5720 ;;		___flmul
  5721 ;; This function is called by:
  5722 ;;		_sprintf
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text17
  5727  001B46                     __ptext17:
  5728                           	opt stack 0
  5729  001B46                     _fround:
  5730                           	opt stack 24
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;incstack = 0
  5734                           ;fround@prec stored from wreg
  5735  001B46  0100               	movlb	0	; () banked
  5736  001B48  6F9A               	movwf	fround@prec& (0+255),b
  5737                           
  5738                           ;doprnt.c: 413: if(prec>=110)
  5739  001B4A  0E6D               	movlw	109
  5740  001B4C  0100               	movlb	0	; () banked
  5741  001B4E  659A               	cpfsgt	fround@prec& (0+255),b
  5742  001B50  D0C4               	goto	l5007
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5746  001B52  0E00               	movlw	0
  5747  001B54  0100               	movlb	0	; () banked
  5748  001B56  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5749  001B58  0E0A               	movlw	10
  5750  001B5A  6F68               	movwf	___awdiv@divisor& (0+255),b
  5751  001B5C  0E00               	movlw	0
  5752  001B5E  0100               	movlb	0	; () banked
  5753  001B60  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5754  001B62  0E64               	movlw	100
  5755  001B64  6F62               	movwf	___awmod@divisor& (0+255),b
  5756  001B66  C09A  F060         	movff	fround@prec,___awmod@dividend
  5757  001B6A  0100               	movlb	0	; () banked
  5758  001B6C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5759  001B6E  ECCE  F016         	call	___awmod	;wreg free
  5760  001B72  C060  F066         	movff	?___awmod,___awdiv@dividend
  5761  001B76  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5762  001B7A  ECBA  F015         	call	___awdiv	;wreg free
  5763  001B7E  0100               	movlb	0	; () banked
  5764  001B80  90D8               	bcf	status,0,c
  5765  001B82  3766               	rlcf	?___awdiv& (0+255),f,b
  5766  001B84  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5767  001B86  0100               	movlb	0	; () banked
  5768  001B88  90D8               	bcf	status,0,c
  5769  001B8A  3766               	rlcf	?___awdiv& (0+255),f,b
  5770  001B8C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5771  001B8E  0E24               	movlw	36
  5772  001B90  0100               	movlb	0	; () banked
  5773  001B92  2766               	addwf	?___awdiv& (0+255),f,b
  5774  001B94  0E00               	movlw	0
  5775  001B96  0100               	movlb	0	; () banked
  5776  001B98  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5777  001B9A  0EEB               	movlw	low __npowers_
  5778  001B9C  0100               	movlb	0	; () banked
  5779  001B9E  2566               	addwf	?___awdiv& (0+255),w,b
  5780  001BA0  6EF6               	movwf	tblptrl,c
  5781  001BA2  0E3E               	movlw	high __npowers_
  5782  001BA4  0100               	movlb	0	; () banked
  5783  001BA6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5784  001BA8  6EF7               	movwf	tblptrh,c
  5785  001BAA                     	if	0	;There are less than 3 active tblptr bytes
  5786  001BAA                     	endif
  5787  001BAA  0009               	tblrd		*+
  5788  001BAC  CFF5 F079          	movff	tablat,___flmul@a
  5789  001BB0  0009               	tblrd		*+
  5790  001BB2  CFF5 F07A          	movff	tablat,___flmul@a+1
  5791  001BB6  0009               	tblrd		*+
  5792  001BB8  CFF5 F07B          	movff	tablat,___flmul@a+2
  5793  001BBC  000A               	tblrd		*-
  5794  001BBE  CFF5 F07C          	movff	tablat,___flmul@a+3
  5795  001BC2  0E00               	movlw	0
  5796  001BC4  0100               	movlb	0	; () banked
  5797  001BC6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5798  001BC8  0E64               	movlw	100
  5799  001BCA  6F68               	movwf	___awdiv@divisor& (0+255),b
  5800  001BCC  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5801  001BD0  0100               	movlb	0	; () banked
  5802  001BD2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5803  001BD4  ECBA  F015         	call	___awdiv	;wreg free
  5804  001BD8  0100               	movlb	0	; () banked
  5805  001BDA  90D8               	bcf	status,0,c
  5806  001BDC  3766               	rlcf	?___awdiv& (0+255),f,b
  5807  001BDE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5808  001BE0  0100               	movlb	0	; () banked
  5809  001BE2  90D8               	bcf	status,0,c
  5810  001BE4  3766               	rlcf	?___awdiv& (0+255),f,b
  5811  001BE6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5812  001BE8  0E48               	movlw	72
  5813  001BEA  0100               	movlb	0	; () banked
  5814  001BEC  2766               	addwf	?___awdiv& (0+255),f,b
  5815  001BEE  0E00               	movlw	0
  5816  001BF0  0100               	movlb	0	; () banked
  5817  001BF2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5818  001BF4  0EEB               	movlw	low __npowers_
  5819  001BF6  0100               	movlb	0	; () banked
  5820  001BF8  2566               	addwf	?___awdiv& (0+255),w,b
  5821  001BFA  6EF6               	movwf	tblptrl,c
  5822  001BFC  0E3E               	movlw	high __npowers_
  5823  001BFE  0100               	movlb	0	; () banked
  5824  001C00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5825  001C02  6EF7               	movwf	tblptrh,c
  5826  001C04                     	if	0	;There are less than 3 active tblptr bytes
  5827  001C04                     	endif
  5828  001C04  0009               	tblrd		*+
  5829  001C06  CFF5 F075          	movff	tablat,___flmul@b
  5830  001C0A  0009               	tblrd		*+
  5831  001C0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5832  001C10  0009               	tblrd		*+
  5833  001C12  CFF5 F077          	movff	tablat,___flmul@b+2
  5834  001C16  000A               	tblrd		*-
  5835  001C18  CFF5 F078          	movff	tablat,___flmul@b+3
  5836  001C1C  EC53  F009         	call	___flmul	;wreg free
  5837  001C20  C075  F096         	movff	?___flmul,_fround$2396
  5838  001C24  C076  F097         	movff	?___flmul+1,_fround$2396+1
  5839  001C28  C077  F098         	movff	?___flmul+2,_fround$2396+2
  5840  001C2C  C078  F099         	movff	?___flmul+3,_fround$2396+3
  5841                           
  5842                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5843  001C30  0E00               	movlw	0
  5844  001C32  0100               	movlb	0	; () banked
  5845  001C34  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5846  001C36  0E0A               	movlw	10
  5847  001C38  6F62               	movwf	___awmod@divisor& (0+255),b
  5848  001C3A  C09A  F060         	movff	fround@prec,___awmod@dividend
  5849  001C3E  0100               	movlb	0	; () banked
  5850  001C40  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5851  001C42  ECCE  F016         	call	___awmod	;wreg free
  5852  001C46  0100               	movlb	0	; () banked
  5853  001C48  90D8               	bcf	status,0,c
  5854  001C4A  3760               	rlcf	?___awmod& (0+255),f,b
  5855  001C4C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5856  001C4E  0100               	movlb	0	; () banked
  5857  001C50  90D8               	bcf	status,0,c
  5858  001C52  3760               	rlcf	?___awmod& (0+255),f,b
  5859  001C54  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5860  001C56  0EEB               	movlw	low __npowers_
  5861  001C58  0100               	movlb	0	; () banked
  5862  001C5A  2560               	addwf	?___awmod& (0+255),w,b
  5863  001C5C  6EF6               	movwf	tblptrl,c
  5864  001C5E  0E3E               	movlw	high __npowers_
  5865  001C60  0100               	movlb	0	; () banked
  5866  001C62  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5867  001C64  6EF7               	movwf	tblptrh,c
  5868  001C66                     	if	0	;There are less than 3 active tblptr bytes
  5869  001C66                     	endif
  5870  001C66  0009               	tblrd		*+
  5871  001C68  CFF5 F079          	movff	tablat,___flmul@a
  5872  001C6C  0009               	tblrd		*+
  5873  001C6E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5874  001C72  0009               	tblrd		*+
  5875  001C74  CFF5 F07B          	movff	tablat,___flmul@a+2
  5876  001C78  000A               	tblrd		*-
  5877  001C7A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5878  001C7E  C096  F075         	movff	_fround$2396,___flmul@b
  5879  001C82  C097  F076         	movff	_fround$2396+1,___flmul@b+1
  5880  001C86  C098  F077         	movff	_fround$2396+2,___flmul@b+2
  5881  001C8A  C099  F078         	movff	_fround$2396+3,___flmul@b+3
  5882  001C8E  EC53  F009         	call	___flmul	;wreg free
  5883  001C92  C075  F092         	movff	?___flmul,_fround$2397
  5884  001C96  C076  F093         	movff	?___flmul+1,_fround$2397+1
  5885  001C9A  C077  F094         	movff	?___flmul+2,_fround$2397+2
  5886  001C9E  C078  F095         	movff	?___flmul+3,_fround$2397+3
  5887                           
  5888                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5889  001CA2  C092  F075         	movff	_fround$2397,___flmul@b
  5890  001CA6  C093  F076         	movff	_fround$2397+1,___flmul@b+1
  5891  001CAA  C094  F077         	movff	_fround$2397+2,___flmul@b+2
  5892  001CAE  C095  F078         	movff	_fround$2397+3,___flmul@b+3
  5893  001CB2  0E00               	movlw	0
  5894  001CB4  0100               	movlb	0	; () banked
  5895  001CB6  6F79               	movwf	___flmul@a& (0+255),b
  5896  001CB8  0E00               	movlw	0
  5897  001CBA  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5898  001CBC  0E00               	movlw	0
  5899  001CBE  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5900  001CC0  0E3F               	movlw	63
  5901  001CC2  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5902  001CC4  EC53  F009         	call	___flmul	;wreg free
  5903  001CC8  C075  F08E         	movff	?___flmul,?_fround
  5904  001CCC  C076  F08F         	movff	?___flmul+1,?_fround+1
  5905  001CD0  C077  F090         	movff	?___flmul+2,?_fround+2
  5906  001CD4  C078  F091         	movff	?___flmul+3,?_fround+3
  5907  001CD8  0012               	return	
  5908  001CDA                     l5007:
  5909                           
  5910                           ;doprnt.c: 415: else if(prec > 10)
  5911  001CDA  0E0A               	movlw	10
  5912  001CDC  0100               	movlb	0	; () banked
  5913  001CDE  659A               	cpfsgt	fround@prec& (0+255),b
  5914  001CE0  D072               	goto	l5015
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5918  001CE2  0E00               	movlw	0
  5919  001CE4  0100               	movlb	0	; () banked
  5920  001CE6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5921  001CE8  0E0A               	movlw	10
  5922  001CEA  6F62               	movwf	___awmod@divisor& (0+255),b
  5923  001CEC  C09A  F060         	movff	fround@prec,___awmod@dividend
  5924  001CF0  0100               	movlb	0	; () banked
  5925  001CF2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5926  001CF4  ECCE  F016         	call	___awmod	;wreg free
  5927  001CF8  0100               	movlb	0	; () banked
  5928  001CFA  90D8               	bcf	status,0,c
  5929  001CFC  3760               	rlcf	?___awmod& (0+255),f,b
  5930  001CFE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5931  001D00  0100               	movlb	0	; () banked
  5932  001D02  90D8               	bcf	status,0,c
  5933  001D04  3760               	rlcf	?___awmod& (0+255),f,b
  5934  001D06  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5935  001D08  0EEB               	movlw	low __npowers_
  5936  001D0A  0100               	movlb	0	; () banked
  5937  001D0C  2560               	addwf	?___awmod& (0+255),w,b
  5938  001D0E  6EF6               	movwf	tblptrl,c
  5939  001D10  0E3E               	movlw	high __npowers_
  5940  001D12  0100               	movlb	0	; () banked
  5941  001D14  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5942  001D16  6EF7               	movwf	tblptrh,c
  5943  001D18                     	if	0	;There are less than 3 active tblptr bytes
  5944  001D18                     	endif
  5945  001D18  0009               	tblrd		*+
  5946  001D1A  CFF5 F079          	movff	tablat,___flmul@a
  5947  001D1E  0009               	tblrd		*+
  5948  001D20  CFF5 F07A          	movff	tablat,___flmul@a+1
  5949  001D24  0009               	tblrd		*+
  5950  001D26  CFF5 F07B          	movff	tablat,___flmul@a+2
  5951  001D2A  000A               	tblrd		*-
  5952  001D2C  CFF5 F07C          	movff	tablat,___flmul@a+3
  5953  001D30  0E00               	movlw	0
  5954  001D32  0100               	movlb	0	; () banked
  5955  001D34  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5956  001D36  0E0A               	movlw	10
  5957  001D38  6F68               	movwf	___awdiv@divisor& (0+255),b
  5958  001D3A  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5959  001D3E  0100               	movlb	0	; () banked
  5960  001D40  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5961  001D42  ECBA  F015         	call	___awdiv	;wreg free
  5962  001D46  0100               	movlb	0	; () banked
  5963  001D48  90D8               	bcf	status,0,c
  5964  001D4A  3766               	rlcf	?___awdiv& (0+255),f,b
  5965  001D4C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5966  001D4E  0100               	movlb	0	; () banked
  5967  001D50  90D8               	bcf	status,0,c
  5968  001D52  3766               	rlcf	?___awdiv& (0+255),f,b
  5969  001D54  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5970  001D56  0E24               	movlw	36
  5971  001D58  0100               	movlb	0	; () banked
  5972  001D5A  2766               	addwf	?___awdiv& (0+255),f,b
  5973  001D5C  0E00               	movlw	0
  5974  001D5E  0100               	movlb	0	; () banked
  5975  001D60  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5976  001D62  0EEB               	movlw	low __npowers_
  5977  001D64  0100               	movlb	0	; () banked
  5978  001D66  2566               	addwf	?___awdiv& (0+255),w,b
  5979  001D68  6EF6               	movwf	tblptrl,c
  5980  001D6A  0E3E               	movlw	high __npowers_
  5981  001D6C  0100               	movlb	0	; () banked
  5982  001D6E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5983  001D70  6EF7               	movwf	tblptrh,c
  5984  001D72                     	if	0	;There are less than 3 active tblptr bytes
  5985  001D72                     	endif
  5986  001D72  0009               	tblrd		*+
  5987  001D74  CFF5 F075          	movff	tablat,___flmul@b
  5988  001D78  0009               	tblrd		*+
  5989  001D7A  CFF5 F076          	movff	tablat,___flmul@b+1
  5990  001D7E  0009               	tblrd		*+
  5991  001D80  CFF5 F077          	movff	tablat,___flmul@b+2
  5992  001D84  000A               	tblrd		*-
  5993  001D86  CFF5 F078          	movff	tablat,___flmul@b+3
  5994  001D8A  EC53  F009         	call	___flmul	;wreg free
  5995  001D8E  C075  F096         	movff	?___flmul,_fround$2396
  5996  001D92  C076  F097         	movff	?___flmul+1,_fround$2396+1
  5997  001D96  C077  F098         	movff	?___flmul+2,_fround$2396+2
  5998  001D9A  C078  F099         	movff	?___flmul+3,_fround$2396+3
  5999                           
  6000                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6001  001D9E  C096  F075         	movff	_fround$2396,___flmul@b
  6002  001DA2  C097  F076         	movff	_fround$2396+1,___flmul@b+1
  6003  001DA6  C098  F077         	movff	_fround$2396+2,___flmul@b+2
  6004  001DAA  C099  F078         	movff	_fround$2396+3,___flmul@b+3
  6005  001DAE  0E00               	movlw	0
  6006  001DB0  0100               	movlb	0	; () banked
  6007  001DB2  6F79               	movwf	___flmul@a& (0+255),b
  6008  001DB4  0E00               	movlw	0
  6009  001DB6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6010  001DB8  0E00               	movlw	0
  6011  001DBA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6012  001DBC  0E3F               	movlw	63
  6013  001DBE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6014  001DC0  EC53  F009         	call	___flmul	;wreg free
  6015  001DC4  D781               	goto	L7
  6016  001DC6                     l5015:
  6017                           
  6018                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6019  001DC6  0100               	movlb	0	; () banked
  6020  001DC8  519A               	movf	fround@prec& (0+255),w,b
  6021  001DCA  0D04               	mullw	4
  6022  001DCC  0EEB               	movlw	low __npowers_
  6023  001DCE  24F3               	addwf	prodl,w,c
  6024  001DD0  6EF6               	movwf	tblptrl,c
  6025  001DD2  0E3E               	movlw	high __npowers_
  6026  001DD4  20F4               	addwfc	prodh,w,c
  6027  001DD6  6EF7               	movwf	tblptrh,c
  6028  001DD8                     	if	0	;There are less than 3 active tblptr bytes
  6029  001DD8                     	endif
  6030  001DD8  0009               	tblrd		*+
  6031  001DDA  CFF5 F075          	movff	tablat,___flmul@b
  6032  001DDE  0009               	tblrd		*+
  6033  001DE0  CFF5 F076          	movff	tablat,___flmul@b+1
  6034  001DE4  0009               	tblrd		*+
  6035  001DE6  CFF5 F077          	movff	tablat,___flmul@b+2
  6036  001DEA  000A               	tblrd		*-
  6037  001DEC  CFF5 F078          	movff	tablat,___flmul@b+3
  6038  001DF0  0E00               	movlw	0
  6039  001DF2  0100               	movlb	0	; () banked
  6040  001DF4  6F79               	movwf	___flmul@a& (0+255),b
  6041  001DF6  0E00               	movlw	0
  6042  001DF8  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6043  001DFA  0E00               	movlw	0
  6044  001DFC  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6045  001DFE  0E3F               	movlw	63
  6046  001E00  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6047  001E02  EC53  F009         	call	___flmul	;wreg free
  6048  001E06  C075  F08E         	movff	?___flmul,?_fround
  6049  001E0A  C076  F08F         	movff	?___flmul+1,?_fround+1
  6050  001E0E  C077  F090         	movff	?___flmul+2,?_fround+2
  6051  001E12  C078  F091         	movff	?___flmul+3,?_fround+3
  6052  001E16  0012               	return	
  6053  001E18                     __end_of_fround:
  6054                           	opt stack 0
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           postinc0	equ	0xFEE
  6063                           wreg	equ	0xFE8
  6064                           indf1	equ	0xFE7
  6065                           postinc1	equ	0xFE6
  6066                           fsr1h	equ	0xFE2
  6067                           fsr1l	equ	0xFE1
  6068                           indf2	equ	0xFDF
  6069                           postinc2	equ	0xFDE
  6070                           fsr2h	equ	0xFDA
  6071                           fsr2l	equ	0xFD9
  6072                           status	equ	0xFD8
  6073                           
  6074 ;; *************** function ___flmul *****************
  6075 ;; Defined at:
  6076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  b               4   21[BANK0 ] unsigned char 
  6079 ;;  a               4   25[BANK0 ] unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  prod            4   40[BANK0 ] struct .
  6082 ;;  grs             4   35[BANK0 ] unsigned long 
  6083 ;;  temp            2   44[BANK0 ] struct .
  6084 ;;  bexp            1   39[BANK0 ] unsigned char 
  6085 ;;  aexp            1   34[BANK0 ] unsigned char 
  6086 ;;  sign            1   33[BANK0 ] unsigned char 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  4   21[BANK0 ] unsigned char 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, prodl, prodh
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6096 ;;      Params:         0       8       0       0
  6097 ;;      Locals:         0      13       0       0
  6098 ;;      Temps:          0       4       0       0
  6099 ;;      Totals:         0      25       0       0
  6100 ;;Total ram usage:       25 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    3
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_main
  6107 ;;		_fround
  6108 ;;		_scale
  6109 ;;		_sprintf
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text18
  6114  0012A6                     __ptext18:
  6115                           	opt stack 0
  6116  0012A6                     ___flmul:
  6117                           	opt stack 27
  6118                           
  6119                           ;incstack = 0
  6120  0012A6  0100               	movlb	0	; () banked
  6121  0012A8  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6122  0012AA  0B80               	andlw	128
  6123  0012AC  0100               	movlb	0	; () banked
  6124  0012AE  6F81               	movwf	___flmul@sign& (0+255),b
  6125  0012B0  0100               	movlb	0	; () banked
  6126  0012B2  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6127  0012B4  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  6128  0012B6  0100               	movlb	0	; () banked
  6129  0012B8  6F87               	movwf	___flmul@bexp& (0+255),b
  6130                           
  6131                           ; BSR set to: 0
  6132  0012BA  0100               	movlb	0	; () banked
  6133  0012BC  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  6134  0012BE  D002               	goto	l4769
  6135                           
  6136                           ; BSR set to: 0
  6137  0012C0  0100               	movlb	0	; () banked
  6138  0012C2  8187               	bsf	___flmul@bexp& (0+255),0,b
  6139  0012C4                     l4769:
  6140                           
  6141                           ; BSR set to: 0
  6142  0012C4  0100               	movlb	0	; () banked
  6143  0012C6  5187               	movf	___flmul@bexp& (0+255),w,b
  6144  0012C8  0100               	movlb	0	; () banked
  6145  0012CA  B4D8               	btfsc	status,2,c
  6146  0012CC  D010               	goto	l4777
  6147                           
  6148                           ; BSR set to: 0
  6149  0012CE  0100               	movlb	0	; () banked
  6150  0012D0  2987               	incf	___flmul@bexp& (0+255),w,b
  6151  0012D2  A4D8               	btfss	status,2,c
  6152  0012D4  D009               	goto	l4775
  6153                           
  6154                           ; BSR set to: 0
  6155  0012D6  0E00               	movlw	0
  6156  0012D8  0100               	movlb	0	; () banked
  6157  0012DA  6F75               	movwf	___flmul@b& (0+255),b
  6158  0012DC  0E00               	movlw	0
  6159  0012DE  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6160  0012E0  0E00               	movlw	0
  6161  0012E2  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6162  0012E4  0E00               	movlw	0
  6163  0012E6  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6164  0012E8                     l4775:
  6165                           
  6166                           ; BSR set to: 0
  6167  0012E8  0100               	movlb	0	; () banked
  6168  0012EA  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  6169  0012EC  D009               	goto	l4779
  6170  0012EE                     l4777:
  6171                           
  6172                           ; BSR set to: 0
  6173  0012EE  0E00               	movlw	0
  6174  0012F0  0100               	movlb	0	; () banked
  6175  0012F2  6F75               	movwf	___flmul@b& (0+255),b
  6176  0012F4  0E00               	movlw	0
  6177  0012F6  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6178  0012F8  0E00               	movlw	0
  6179  0012FA  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6180  0012FC  0E00               	movlw	0
  6181  0012FE  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6182  001300                     l4779:
  6183                           
  6184                           ; BSR set to: 0
  6185  001300  0100               	movlb	0	; () banked
  6186  001302  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6187  001304  0B80               	andlw	128
  6188  001306  0100               	movlb	0	; () banked
  6189  001308  1B81               	xorwf	___flmul@sign& (0+255),f,b
  6190                           
  6191                           ; BSR set to: 0
  6192  00130A  0100               	movlb	0	; () banked
  6193  00130C  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6194  00130E  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  6195  001310  0100               	movlb	0	; () banked
  6196  001312  6F82               	movwf	___flmul@aexp& (0+255),b
  6197                           
  6198                           ; BSR set to: 0
  6199  001314  0100               	movlb	0	; () banked
  6200  001316  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  6201  001318  D002               	goto	l4787
  6202                           
  6203                           ; BSR set to: 0
  6204  00131A  0100               	movlb	0	; () banked
  6205  00131C  8182               	bsf	___flmul@aexp& (0+255),0,b
  6206  00131E                     l4787:
  6207                           
  6208                           ; BSR set to: 0
  6209  00131E  0100               	movlb	0	; () banked
  6210  001320  5182               	movf	___flmul@aexp& (0+255),w,b
  6211  001322  0100               	movlb	0	; () banked
  6212  001324  B4D8               	btfsc	status,2,c
  6213  001326  D010               	goto	l4795
  6214                           
  6215                           ; BSR set to: 0
  6216  001328  0100               	movlb	0	; () banked
  6217  00132A  2982               	incf	___flmul@aexp& (0+255),w,b
  6218  00132C  A4D8               	btfss	status,2,c
  6219  00132E  D009               	goto	l4793
  6220                           
  6221                           ; BSR set to: 0
  6222  001330  0E00               	movlw	0
  6223  001332  0100               	movlb	0	; () banked
  6224  001334  6F79               	movwf	___flmul@a& (0+255),b
  6225  001336  0E00               	movlw	0
  6226  001338  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6227  00133A  0E00               	movlw	0
  6228  00133C  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6229  00133E  0E00               	movlw	0
  6230  001340  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6231  001342                     l4793:
  6232                           
  6233                           ; BSR set to: 0
  6234  001342  0100               	movlb	0	; () banked
  6235  001344  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  6236  001346  D009               	goto	l1063
  6237  001348                     l4795:
  6238                           
  6239                           ; BSR set to: 0
  6240  001348  0E00               	movlw	0
  6241  00134A  0100               	movlb	0	; () banked
  6242  00134C  6F79               	movwf	___flmul@a& (0+255),b
  6243  00134E  0E00               	movlw	0
  6244  001350  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6245  001352  0E00               	movlw	0
  6246  001354  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6247  001356  0E00               	movlw	0
  6248  001358  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6249  00135A                     l1063:
  6250                           
  6251                           ; BSR set to: 0
  6252  00135A  0100               	movlb	0	; () banked
  6253  00135C  5182               	movf	___flmul@aexp& (0+255),w,b
  6254  00135E  0100               	movlb	0	; () banked
  6255  001360  B4D8               	btfsc	status,2,c
  6256  001362  D005               	goto	l4799
  6257                           
  6258                           ; BSR set to: 0
  6259  001364  0100               	movlb	0	; () banked
  6260  001366  5187               	movf	___flmul@bexp& (0+255),w,b
  6261  001368  0100               	movlb	0	; () banked
  6262  00136A  A4D8               	btfss	status,2,c
  6263  00136C  D00A               	goto	l4803
  6264  00136E                     l4799:
  6265                           
  6266                           ; BSR set to: 0
  6267  00136E  0E00               	movlw	0
  6268  001370  0100               	movlb	0	; () banked
  6269  001372  6F75               	movwf	?___flmul& (0+255),b
  6270  001374  0E00               	movlw	0
  6271  001376  6F76               	movwf	(?___flmul+1)& (0+255),b
  6272  001378  0E00               	movlw	0
  6273  00137A  6F77               	movwf	(?___flmul+2)& (0+255),b
  6274  00137C  0E00               	movlw	0
  6275  00137E  6F78               	movwf	(?___flmul+3)& (0+255),b
  6276                           
  6277                           ; BSR set to: 0
  6278  001380  0012               	return	
  6279  001382                     l4803:
  6280                           
  6281                           ; BSR set to: 0
  6282  001382  0100               	movlb	0	; () banked
  6283  001384  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6284  001386  0100               	movlb	0	; () banked
  6285  001388  0375               	mulwf	___flmul@b& (0+255),b
  6286  00138A  CFF3 F08C          	movff	prodl,___flmul@temp
  6287  00138E  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6288                           
  6289                           ; BSR set to: 0
  6290  001392  0100               	movlb	0	; () banked
  6291  001394  518C               	movf	___flmul@temp& (0+255),w,b
  6292  001396  0100               	movlb	0	; () banked
  6293  001398  6F83               	movwf	___flmul@grs& (0+255),b
  6294  00139A  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  6295  00139C  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  6296  00139E  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  6297                           
  6298                           ; BSR set to: 0
  6299  0013A0  0100               	movlb	0	; () banked
  6300  0013A2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6301  0013A4  0100               	movlb	0	; () banked
  6302  0013A6  6F88               	movwf	___flmul@prod& (0+255),b
  6303  0013A8  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  6304  0013AA  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  6305  0013AC  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  6306  0013AE  0100               	movlb	0	; () banked
  6307  0013B0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6308  0013B2  0100               	movlb	0	; () banked
  6309  0013B4  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6310  0013B6  CFF3 F08C          	movff	prodl,___flmul@temp
  6311  0013BA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6312                           
  6313                           ; BSR set to: 0
  6314  0013BE  0100               	movlb	0	; () banked
  6315  0013C0  518C               	movf	___flmul@temp& (0+255),w,b
  6316  0013C2  0100               	movlb	0	; () banked
  6317  0013C4  2783               	addwf	___flmul@grs& (0+255),f,b
  6318  0013C6  0E00               	movlw	0
  6319  0013C8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6320  0013CA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6321  0013CC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6322                           
  6323                           ; BSR set to: 0
  6324  0013CE  0100               	movlb	0	; () banked
  6325  0013D0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6326  0013D2  0100               	movlb	0	; () banked
  6327  0013D4  2788               	addwf	___flmul@prod& (0+255),f,b
  6328  0013D6  0E00               	movlw	0
  6329  0013D8  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6330  0013DA  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6331  0013DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6332  0013DE  0100               	movlb	0	; () banked
  6333  0013E0  5179               	movf	___flmul@a& (0+255),w,b
  6334  0013E2  0100               	movlb	0	; () banked
  6335  0013E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6336  0013E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6337  0013EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6338                           
  6339                           ; BSR set to: 0
  6340  0013EE  0100               	movlb	0	; () banked
  6341  0013F0  518C               	movf	___flmul@temp& (0+255),w,b
  6342  0013F2  0100               	movlb	0	; () banked
  6343  0013F4  2783               	addwf	___flmul@grs& (0+255),f,b
  6344  0013F6  0E00               	movlw	0
  6345  0013F8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6346  0013FA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6347  0013FC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6348                           
  6349                           ; BSR set to: 0
  6350  0013FE  0100               	movlb	0	; () banked
  6351  001400  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6352  001402  0100               	movlb	0	; () banked
  6353  001404  2788               	addwf	___flmul@prod& (0+255),f,b
  6354  001406  0E00               	movlw	0
  6355  001408  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6356  00140A  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6357  00140C  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6358                           
  6359                           ; BSR set to: 0
  6360  00140E  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6361  001412  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6362  001416  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6363  00141A  0100               	movlb	0	; () banked
  6364  00141C  6B83               	clrf	___flmul@grs& (0+255),b
  6365                           
  6366                           ; BSR set to: 0
  6367  00141E  0100               	movlb	0	; () banked
  6368  001420  5179               	movf	___flmul@a& (0+255),w,b
  6369  001422  0100               	movlb	0	; () banked
  6370  001424  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6371  001426  CFF3 F08C          	movff	prodl,___flmul@temp
  6372  00142A  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6373                           
  6374                           ; BSR set to: 0
  6375  00142E  0100               	movlb	0	; () banked
  6376  001430  518C               	movf	___flmul@temp& (0+255),w,b
  6377  001432  0100               	movlb	0	; () banked
  6378  001434  2783               	addwf	___flmul@grs& (0+255),f,b
  6379  001436  0100               	movlb	0	; () banked
  6380  001438  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6381  00143A  0100               	movlb	0	; () banked
  6382  00143C  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6383  00143E  0E00               	movlw	0
  6384  001440  0100               	movlb	0	; () banked
  6385  001442  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6386  001444  0E00               	movlw	0
  6387  001446  0100               	movlb	0	; () banked
  6388  001448  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6389                           
  6390                           ; BSR set to: 0
  6391  00144A  0100               	movlb	0	; () banked
  6392  00144C  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6393  00144E  0100               	movlb	0	; () banked
  6394  001450  0375               	mulwf	___flmul@b& (0+255),b
  6395  001452  CFF3 F08C          	movff	prodl,___flmul@temp
  6396  001456  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6397                           
  6398                           ; BSR set to: 0
  6399  00145A  0100               	movlb	0	; () banked
  6400  00145C  518C               	movf	___flmul@temp& (0+255),w,b
  6401  00145E  0100               	movlb	0	; () banked
  6402  001460  2783               	addwf	___flmul@grs& (0+255),f,b
  6403  001462  0100               	movlb	0	; () banked
  6404  001464  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6405  001466  0100               	movlb	0	; () banked
  6406  001468  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6407  00146A  0E00               	movlw	0
  6408  00146C  0100               	movlb	0	; () banked
  6409  00146E  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6410  001470  0E00               	movlw	0
  6411  001472  0100               	movlb	0	; () banked
  6412  001474  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6413                           
  6414                           ; BSR set to: 0
  6415  001476  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6416  00147A  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6417  00147E  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6418  001482  0100               	movlb	0	; () banked
  6419  001484  6B83               	clrf	___flmul@grs& (0+255),b
  6420  001486  0100               	movlb	0	; () banked
  6421  001488  5179               	movf	___flmul@a& (0+255),w,b
  6422  00148A  0100               	movlb	0	; () banked
  6423  00148C  0375               	mulwf	___flmul@b& (0+255),b
  6424  00148E  CFF3 F08C          	movff	prodl,___flmul@temp
  6425  001492  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6426                           
  6427                           ; BSR set to: 0
  6428  001496  0100               	movlb	0	; () banked
  6429  001498  518C               	movf	___flmul@temp& (0+255),w,b
  6430  00149A  0100               	movlb	0	; () banked
  6431  00149C  2783               	addwf	___flmul@grs& (0+255),f,b
  6432  00149E  0100               	movlb	0	; () banked
  6433  0014A0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6434  0014A2  0100               	movlb	0	; () banked
  6435  0014A4  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6436  0014A6  0E00               	movlw	0
  6437  0014A8  0100               	movlb	0	; () banked
  6438  0014AA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6439  0014AC  0E00               	movlw	0
  6440  0014AE  0100               	movlb	0	; () banked
  6441  0014B0  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6442                           
  6443                           ; BSR set to: 0
  6444  0014B2  0100               	movlb	0	; () banked
  6445  0014B4  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6446  0014B6  0100               	movlb	0	; () banked
  6447  0014B8  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6448  0014BA  CFF3 F08C          	movff	prodl,___flmul@temp
  6449  0014BE  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6450  0014C2  0100               	movlb	0	; () banked
  6451  0014C4  518C               	movf	___flmul@temp& (0+255),w,b
  6452  0014C6  0100               	movlb	0	; () banked
  6453  0014C8  2788               	addwf	___flmul@prod& (0+255),f,b
  6454  0014CA  0100               	movlb	0	; () banked
  6455  0014CC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6456  0014CE  0100               	movlb	0	; () banked
  6457  0014D0  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6458  0014D2  0E00               	movlw	0
  6459  0014D4  0100               	movlb	0	; () banked
  6460  0014D6  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6461  0014D8  0E00               	movlw	0
  6462  0014DA  0100               	movlb	0	; () banked
  6463  0014DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6464                           
  6465                           ; BSR set to: 0
  6466  0014DE  0100               	movlb	0	; () banked
  6467  0014E0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6468  0014E2  0100               	movlb	0	; () banked
  6469  0014E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6470  0014E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6471  0014EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6472                           
  6473                           ; BSR set to: 0
  6474  0014EE  0100               	movlb	0	; () banked
  6475  0014F0  518C               	movf	___flmul@temp& (0+255),w,b
  6476  0014F2  0100               	movlb	0	; () banked
  6477  0014F4  2788               	addwf	___flmul@prod& (0+255),f,b
  6478  0014F6  0100               	movlb	0	; () banked
  6479  0014F8  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6480  0014FA  0100               	movlb	0	; () banked
  6481  0014FC  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6482  0014FE  0E00               	movlw	0
  6483  001500  0100               	movlb	0	; () banked
  6484  001502  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6485  001504  0E00               	movlw	0
  6486  001506  0100               	movlb	0	; () banked
  6487  001508  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6488  00150A  0100               	movlb	0	; () banked
  6489  00150C  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6490  00150E  0100               	movlb	0	; () banked
  6491  001510  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6492  001512  CFF3 F08C          	movff	prodl,___flmul@temp
  6493  001516  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6494                           
  6495                           ; BSR set to: 0
  6496  00151A  0100               	movlb	0	; () banked
  6497  00151C  518C               	movf	___flmul@temp& (0+255),w,b
  6498  00151E  0100               	movlb	0	; () banked
  6499  001520  6F7D               	movwf	??___flmul& (0+255),b
  6500  001522  0100               	movlb	0	; () banked
  6501  001524  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6502  001526  0100               	movlb	0	; () banked
  6503  001528  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6504  00152A  0100               	movlb	0	; () banked
  6505  00152C  6B7F               	clrf	(??___flmul+2)& (0+255),b
  6506  00152E  0100               	movlb	0	; () banked
  6507  001530  6B80               	clrf	(??___flmul+3)& (0+255),b
  6508  001532  C07F  F080         	movff	??___flmul+2,??___flmul+3
  6509  001536  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  6510  00153A  C07D  F07E         	movff	??___flmul,??___flmul+1
  6511  00153E  0100               	movlb	0	; () banked
  6512  001540  6B7D               	clrf	??___flmul& (0+255),b
  6513  001542  0100               	movlb	0	; () banked
  6514  001544  517D               	movf	??___flmul& (0+255),w,b
  6515  001546  0100               	movlb	0	; () banked
  6516  001548  2788               	addwf	___flmul@prod& (0+255),f,b
  6517  00154A  0100               	movlb	0	; () banked
  6518  00154C  517E               	movf	(??___flmul+1)& (0+255),w,b
  6519  00154E  0100               	movlb	0	; () banked
  6520  001550  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6521  001552  0100               	movlb	0	; () banked
  6522  001554  517F               	movf	(??___flmul+2)& (0+255),w,b
  6523  001556  0100               	movlb	0	; () banked
  6524  001558  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6525  00155A  0100               	movlb	0	; () banked
  6526  00155C  5180               	movf	(??___flmul+3)& (0+255),w,b
  6527  00155E  0100               	movlb	0	; () banked
  6528  001560  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6529                           
  6530                           ; BSR set to: 0
  6531  001562  C083  F07D         	movff	___flmul@grs,??___flmul
  6532  001566  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  6533  00156A  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  6534  00156E  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  6535  001572  0E19               	movlw	25
  6536  001574  D006               	goto	u5570
  6537  001576                     u5575:
  6538  001576  0100               	movlb	0	; () banked
  6539  001578  90D8               	bcf	status,0,c
  6540  00157A  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6541  00157C  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6542  00157E  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6543  001580  337D               	rrcf	??___flmul& (0+255),f,b
  6544  001582                     u5570:
  6545  001582  2EE8               	decfsz	wreg,f,c
  6546  001584  D7F8               	goto	u5575
  6547  001586  0100               	movlb	0	; () banked
  6548  001588  517D               	movf	??___flmul& (0+255),w,b
  6549  00158A  0100               	movlb	0	; () banked
  6550  00158C  2788               	addwf	___flmul@prod& (0+255),f,b
  6551  00158E  0100               	movlb	0	; () banked
  6552  001590  517E               	movf	(??___flmul+1)& (0+255),w,b
  6553  001592  0100               	movlb	0	; () banked
  6554  001594  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6555  001596  0100               	movlb	0	; () banked
  6556  001598  517F               	movf	(??___flmul+2)& (0+255),w,b
  6557  00159A  0100               	movlb	0	; () banked
  6558  00159C  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6559  00159E  0100               	movlb	0	; () banked
  6560  0015A0  5180               	movf	(??___flmul+3)& (0+255),w,b
  6561  0015A2  0100               	movlb	0	; () banked
  6562  0015A4  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6563                           
  6564                           ; BSR set to: 0
  6565  0015A6  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6566  0015AA  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6567  0015AE  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6568  0015B2  0100               	movlb	0	; () banked
  6569  0015B4  6B83               	clrf	___flmul@grs& (0+255),b
  6570                           
  6571                           ; BSR set to: 0
  6572  0015B6  0100               	movlb	0	; () banked
  6573  0015B8  5182               	movf	___flmul@aexp& (0+255),w,b
  6574  0015BA  C087  F07D         	movff	___flmul@bexp,??___flmul
  6575  0015BE  0100               	movlb	0	; () banked
  6576  0015C0  6B7E               	clrf	(??___flmul+1)& (0+255),b
  6577  0015C2  0100               	movlb	0	; () banked
  6578  0015C4  277D               	addwf	??___flmul& (0+255),f,b
  6579  0015C6  0E00               	movlw	0
  6580  0015C8  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  6581  0015CA  0E82               	movlw	130
  6582  0015CC  0100               	movlb	0	; () banked
  6583  0015CE  257D               	addwf	??___flmul& (0+255),w,b
  6584  0015D0  0100               	movlb	0	; () banked
  6585  0015D2  6F8C               	movwf	___flmul@temp& (0+255),b
  6586  0015D4  0EFF               	movlw	255
  6587  0015D6  0100               	movlb	0	; () banked
  6588  0015D8  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  6589  0015DA  0100               	movlb	0	; () banked
  6590  0015DC  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  6591  0015DE  D015               	goto	l4851
  6592  0015E0                     l4845:
  6593                           
  6594                           ; BSR set to: 0
  6595  0015E0  0100               	movlb	0	; () banked
  6596  0015E2  90D8               	bcf	status,0,c
  6597  0015E4  3788               	rlcf	___flmul@prod& (0+255),f,b
  6598  0015E6  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6599  0015E8  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6600  0015EA  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6601                           
  6602                           ; BSR set to: 0
  6603  0015EC  0100               	movlb	0	; () banked
  6604  0015EE  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6605  0015F0  D002               	goto	l1070
  6606                           
  6607                           ; BSR set to: 0
  6608  0015F2  0100               	movlb	0	; () banked
  6609  0015F4  8188               	bsf	___flmul@prod& (0+255),0,b
  6610  0015F6                     l1070:
  6611                           
  6612                           ; BSR set to: 0
  6613  0015F6  0100               	movlb	0	; () banked
  6614  0015F8  90D8               	bcf	status,0,c
  6615  0015FA  3783               	rlcf	___flmul@grs& (0+255),f,b
  6616  0015FC  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6617  0015FE  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6618  001600  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6619  001602  0100               	movlb	0	; () banked
  6620  001604  078C               	decf	___flmul@temp& (0+255),f,b
  6621  001606  A0D8               	btfss	status,0,c
  6622  001608  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  6623  00160A                     l4851:
  6624                           
  6625                           ; BSR set to: 0
  6626  00160A  0100               	movlb	0	; () banked
  6627  00160C  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  6628  00160E  D7E8               	goto	l4845
  6629                           
  6630                           ; BSR set to: 0
  6631                           
  6632                           ; BSR set to: 0
  6633  001610  0E00               	movlw	0
  6634  001612  0100               	movlb	0	; () banked
  6635  001614  6F82               	movwf	___flmul@aexp& (0+255),b
  6636                           
  6637                           ; BSR set to: 0
  6638  001616  0100               	movlb	0	; () banked
  6639  001618  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6640  00161A  D024               	goto	l1072
  6641                           
  6642                           ; BSR set to: 0
  6643  00161C  0EFF               	movlw	255
  6644  00161E  0100               	movlb	0	; () banked
  6645  001620  1583               	andwf	___flmul@grs& (0+255),w,b
  6646  001622  0100               	movlb	0	; () banked
  6647  001624  6F7D               	movwf	??___flmul& (0+255),b
  6648  001626  0EFF               	movlw	255
  6649  001628  0100               	movlb	0	; () banked
  6650  00162A  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  6651  00162C  0100               	movlb	0	; () banked
  6652  00162E  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6653  001630  0EFF               	movlw	255
  6654  001632  0100               	movlb	0	; () banked
  6655  001634  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  6656  001636  0100               	movlb	0	; () banked
  6657  001638  6F7F               	movwf	(??___flmul+2)& (0+255),b
  6658  00163A  0E7F               	movlw	127
  6659  00163C  0100               	movlb	0	; () banked
  6660  00163E  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  6661  001640  0100               	movlb	0	; () banked
  6662  001642  6F80               	movwf	(??___flmul+3)& (0+255),b
  6663  001644  0100               	movlb	0	; () banked
  6664  001646  517D               	movf	??___flmul& (0+255),w,b
  6665  001648  0100               	movlb	0	; () banked
  6666  00164A  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  6667  00164C  0100               	movlb	0	; () banked
  6668  00164E  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  6669  001650  0100               	movlb	0	; () banked
  6670  001652  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  6671  001654  A4D8               	btfss	status,2,c
  6672  001656  D003               	goto	l4861
  6673                           
  6674                           ; BSR set to: 0
  6675                           
  6676                           ; BSR set to: 0
  6677  001658  0100               	movlb	0	; () banked
  6678  00165A  A188               	btfss	___flmul@prod& (0+255),0,b
  6679  00165C  D003               	goto	l1072
  6680  00165E                     l4861:
  6681                           
  6682                           ; BSR set to: 0
  6683  00165E  0E01               	movlw	1
  6684  001660  0100               	movlb	0	; () banked
  6685  001662  6F82               	movwf	___flmul@aexp& (0+255),b
  6686  001664                     l1072:
  6687                           
  6688                           ; BSR set to: 0
  6689  001664  0100               	movlb	0	; () banked
  6690  001666  5182               	movf	___flmul@aexp& (0+255),w,b
  6691  001668  0100               	movlb	0	; () banked
  6692  00166A  B4D8               	btfsc	status,2,c
  6693  00166C  D023               	goto	l4871
  6694                           
  6695                           ; BSR set to: 0
  6696  00166E  0E01               	movlw	1
  6697  001670  0100               	movlb	0	; () banked
  6698  001672  2788               	addwf	___flmul@prod& (0+255),f,b
  6699  001674  0E00               	movlw	0
  6700  001676  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6701  001678  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6702  00167A  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6703                           
  6704                           ; BSR set to: 0
  6705  00167C  0100               	movlb	0	; () banked
  6706  00167E  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  6707  001680  D019               	goto	l4871
  6708                           
  6709                           ; BSR set to: 0
  6710  001682  C088  F07D         	movff	___flmul@prod,??___flmul
  6711  001686  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  6712  00168A  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  6713  00168E  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  6714  001692  0100               	movlb	0	; () banked
  6715  001694  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  6716  001696  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6717  001698  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6718  00169A  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6719  00169C  337D               	rrcf	??___flmul& (0+255),f,b
  6720  00169E  C07D  F088         	movff	??___flmul,___flmul@prod
  6721  0016A2  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  6722  0016A6  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  6723  0016AA  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  6724                           
  6725                           ; BSR set to: 0
  6726  0016AE  0100               	movlb	0	; () banked
  6727  0016B0  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  6728  0016B2  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  6729  0016B4                     l4871:
  6730                           
  6731                           ; BSR set to: 0
  6732  0016B4  0100               	movlb	0	; () banked
  6733  0016B6  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6734  0016B8  D010               	goto	l4875
  6735  0016BA  0100               	movlb	0	; () banked
  6736  0016BC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6737  0016BE  E104               	bnz	u5650
  6738  0016C0  0100               	movlb	0	; () banked
  6739  0016C2  298C               	incf	___flmul@temp& (0+255),w,b
  6740  0016C4  A0D8               	btfss	status,0,c
  6741  0016C6  D009               	goto	l4875
  6742  0016C8                     u5650:
  6743                           
  6744                           ; BSR set to: 0
  6745  0016C8  0E00               	movlw	0
  6746  0016CA  0100               	movlb	0	; () banked
  6747  0016CC  6F88               	movwf	___flmul@prod& (0+255),b
  6748  0016CE  0E00               	movlw	0
  6749  0016D0  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6750  0016D2  0E80               	movlw	128
  6751  0016D4  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6752  0016D6  0E7F               	movlw	127
  6753  0016D8  D02B               	goto	L8
  6754  0016DA                     l4875:
  6755                           
  6756                           ; BSR set to: 0
  6757  0016DA  0100               	movlb	0	; () banked
  6758  0016DC  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6759  0016DE  D007               	goto	l4877
  6760  0016E0  0100               	movlb	0	; () banked
  6761  0016E2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6762  0016E4  E111               	bnz	l1080
  6763  0016E6  0100               	movlb	0	; () banked
  6764  0016E8  058C               	decf	___flmul@temp& (0+255),w,b
  6765  0016EA  B0D8               	btfsc	status,0,c
  6766  0016EC  D00D               	goto	l1080
  6767  0016EE                     l4877:
  6768                           
  6769                           ; BSR set to: 0
  6770  0016EE  0E00               	movlw	0
  6771  0016F0  0100               	movlb	0	; () banked
  6772  0016F2  6F88               	movwf	___flmul@prod& (0+255),b
  6773  0016F4  0E00               	movlw	0
  6774  0016F6  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6775  0016F8  0E00               	movlw	0
  6776  0016FA  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6777  0016FC  0E00               	movlw	0
  6778  0016FE  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6779  001700  0E00               	movlw	0
  6780  001702  0100               	movlb	0	; () banked
  6781  001704  6F81               	movwf	___flmul@sign& (0+255),b
  6782  001706  D015               	goto	l4887
  6783  001708                     l1080:
  6784                           
  6785                           ; BSR set to: 0
  6786  001708  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  6787                           
  6788                           ; BSR set to: 0
  6789  00170C  0EFF               	movlw	255
  6790  00170E  0100               	movlb	0	; () banked
  6791  001710  1788               	andwf	___flmul@prod& (0+255),f,b
  6792  001712  0EFF               	movlw	255
  6793  001714  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  6794  001716  0E7F               	movlw	127
  6795  001718  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  6796  00171A  0E00               	movlw	0
  6797  00171C  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800  00171E  0100               	movlb	0	; () banked
  6801  001720  A187               	btfss	___flmul@bexp& (0+255),0,b
  6802  001722  D002               	goto	l4885
  6803                           
  6804                           ; BSR set to: 0
  6805  001724  0100               	movlb	0	; () banked
  6806  001726  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  6807  001728                     l4885:
  6808                           
  6809                           ; BSR set to: 0
  6810  001728  0100               	movlb	0	; () banked
  6811  00172A  90D8               	bcf	status,0,c
  6812  00172C  3187               	rrcf	___flmul@bexp& (0+255),w,b
  6813  00172E  0100               	movlb	0	; () banked
  6814  001730                     L8:
  6815  001730  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6816  001732                     l4887:
  6817                           
  6818                           ; BSR set to: 0
  6819  001732  0100               	movlb	0	; () banked
  6820  001734  5181               	movf	___flmul@sign& (0+255),w,b
  6821  001736  0100               	movlb	0	; () banked
  6822  001738  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6823                           
  6824                           ; BSR set to: 0
  6825  00173A  C088  F075         	movff	___flmul@prod,?___flmul
  6826  00173E  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  6827  001742  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  6828  001746  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  6829  00174A  0012               	return	
  6830  00174C                     __end_of___flmul:
  6831                           	opt stack 0
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           postinc0	equ	0xFEE
  6840                           wreg	equ	0xFE8
  6841                           indf1	equ	0xFE7
  6842                           postinc1	equ	0xFE6
  6843                           fsr1h	equ	0xFE2
  6844                           fsr1l	equ	0xFE1
  6845                           indf2	equ	0xFDF
  6846                           postinc2	equ	0xFDE
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function ___awmod *****************
  6852 ;; Defined at:
  6853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  dividend        2    0[BANK0 ] int 
  6856 ;;  divisor         2    2[BANK0 ] int 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  sign            1    5[BANK0 ] unsigned char 
  6859 ;;  counter         1    4[BANK0 ] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  2    0[BANK0 ] int 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6869 ;;      Params:         0       4       0       0
  6870 ;;      Locals:         0       2       0       0
  6871 ;;      Temps:          0       0       0       0
  6872 ;;      Totals:         0       6       0       0
  6873 ;;Total ram usage:        6 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    3
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		_fround
  6880 ;;		_scale
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text19
  6885  002D9C                     __ptext19:
  6886                           	opt stack 0
  6887  002D9C                     ___awmod:
  6888                           	opt stack 24
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;incstack = 0
  6892  002D9C  0E00               	movlw	0
  6893  002D9E  0100               	movlb	0	; () banked
  6894  002DA0  6F65               	movwf	___awmod@sign& (0+255),b
  6895                           
  6896                           ; BSR set to: 0
  6897  002DA2  0100               	movlb	0	; () banked
  6898  002DA4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6899  002DA6  D008               	goto	l4945
  6900                           
  6901                           ; BSR set to: 0
  6902  002DA8  0100               	movlb	0	; () banked
  6903  002DAA  6D60               	negf	___awmod@dividend& (0+255),b
  6904  002DAC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6905  002DAE  B0D8               	btfsc	status,0,c
  6906  002DB0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6907                           
  6908                           ; BSR set to: 0
  6909  002DB2  0E01               	movlw	1
  6910  002DB4  0100               	movlb	0	; () banked
  6911  002DB6  6F65               	movwf	___awmod@sign& (0+255),b
  6912  002DB8                     l4945:
  6913                           
  6914                           ; BSR set to: 0
  6915  002DB8  0100               	movlb	0	; () banked
  6916  002DBA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6917  002DBC  D005               	goto	l4949
  6918                           
  6919                           ; BSR set to: 0
  6920  002DBE  0100               	movlb	0	; () banked
  6921  002DC0  6D62               	negf	___awmod@divisor& (0+255),b
  6922  002DC2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6923  002DC4  B0D8               	btfsc	status,0,c
  6924  002DC6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6925  002DC8                     l4949:
  6926                           
  6927                           ; BSR set to: 0
  6928  002DC8  0100               	movlb	0	; () banked
  6929  002DCA  5162               	movf	___awmod@divisor& (0+255),w,b
  6930  002DCC  0100               	movlb	0	; () banked
  6931  002DCE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6932  002DD0  B4D8               	btfsc	status,2,c
  6933  002DD2  D026               	goto	l4965
  6934                           
  6935                           ; BSR set to: 0
  6936  002DD4  0E01               	movlw	1
  6937  002DD6  0100               	movlb	0	; () banked
  6938  002DD8  6F64               	movwf	___awmod@counter& (0+255),b
  6939  002DDA  D006               	goto	l4955
  6940  002DDC                     l4953:
  6941                           
  6942                           ; BSR set to: 0
  6943  002DDC  0100               	movlb	0	; () banked
  6944  002DDE  90D8               	bcf	status,0,c
  6945  002DE0  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6946  002DE2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6947  002DE4  0100               	movlb	0	; () banked
  6948  002DE6  2B64               	incf	___awmod@counter& (0+255),f,b
  6949  002DE8                     l4955:
  6950                           
  6951                           ; BSR set to: 0
  6952  002DE8  0100               	movlb	0	; () banked
  6953  002DEA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6954  002DEC  D7F7               	goto	l4953
  6955  002DEE                     l4957:
  6956                           
  6957                           ; BSR set to: 0
  6958  002DEE  0100               	movlb	0	; () banked
  6959  002DF0  5162               	movf	___awmod@divisor& (0+255),w,b
  6960  002DF2  0100               	movlb	0	; () banked
  6961  002DF4  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6962  002DF6  0100               	movlb	0	; () banked
  6963  002DF8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6964  002DFA  0100               	movlb	0	; () banked
  6965  002DFC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6966  002DFE  A0D8               	btfss	status,0,c
  6967  002E00  D008               	goto	l4961
  6968                           
  6969                           ; BSR set to: 0
  6970  002E02  0100               	movlb	0	; () banked
  6971  002E04  5162               	movf	___awmod@divisor& (0+255),w,b
  6972  002E06  0100               	movlb	0	; () banked
  6973  002E08  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6974  002E0A  0100               	movlb	0	; () banked
  6975  002E0C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6976  002E0E  0100               	movlb	0	; () banked
  6977  002E10  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6978  002E12                     l4961:
  6979                           
  6980                           ; BSR set to: 0
  6981  002E12  0100               	movlb	0	; () banked
  6982  002E14  90D8               	bcf	status,0,c
  6983  002E16  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6984  002E18  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6985                           
  6986                           ; BSR set to: 0
  6987  002E1A  0100               	movlb	0	; () banked
  6988  002E1C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6989  002E1E  D7E7               	goto	l4957
  6990  002E20                     l4965:
  6991                           
  6992                           ; BSR set to: 0
  6993  002E20  0100               	movlb	0	; () banked
  6994  002E22  5165               	movf	___awmod@sign& (0+255),w,b
  6995  002E24  0100               	movlb	0	; () banked
  6996  002E26  B4D8               	btfsc	status,2,c
  6997  002E28  D005               	goto	l4969
  6998                           
  6999                           ; BSR set to: 0
  7000  002E2A  0100               	movlb	0	; () banked
  7001  002E2C  6D60               	negf	___awmod@dividend& (0+255),b
  7002  002E2E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7003  002E30  B0D8               	btfsc	status,0,c
  7004  002E32  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7005  002E34                     l4969:
  7006                           
  7007                           ; BSR set to: 0
  7008  002E34  C060  F060         	movff	___awmod@dividend,?___awmod
  7009  002E38  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7010  002E3C  0012               	return	
  7011  002E3E                     __end_of___awmod:
  7012                           	opt stack 0
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           postinc0	equ	0xFEE
  7021                           wreg	equ	0xFE8
  7022                           indf1	equ	0xFE7
  7023                           postinc1	equ	0xFE6
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           indf2	equ	0xFDF
  7027                           postinc2	equ	0xFDE
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function ___awdiv *****************
  7033 ;; Defined at:
  7034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  dividend        2    6[BANK0 ] int 
  7037 ;;  divisor         2    8[BANK0 ] int 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  quotient        2   12[BANK0 ] int 
  7040 ;;  sign            1   11[BANK0 ] unsigned char 
  7041 ;;  counter         1   10[BANK0 ] unsigned char 
  7042 ;; Return value:  Size  Location     Type
  7043 ;;                  2    6[BANK0 ] int 
  7044 ;; Registers used:
  7045 ;;		wreg, status,2, status,0
  7046 ;; Tracked objects:
  7047 ;;		On entry : 0/0
  7048 ;;		On exit  : 0/0
  7049 ;;		Unchanged: 0/0
  7050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7051 ;;      Params:         0       4       0       0
  7052 ;;      Locals:         0       4       0       0
  7053 ;;      Temps:          0       0       0       0
  7054 ;;      Totals:         0       8       0       0
  7055 ;;Total ram usage:        8 bytes
  7056 ;; Hardware stack levels used:    1
  7057 ;; Hardware stack levels required when called:    3
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_fround
  7062 ;;		_scale
  7063 ;;		_sprintf
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text20
  7068  002B74                     __ptext20:
  7069                           	opt stack 0
  7070  002B74                     ___awdiv:
  7071                           	opt stack 24
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;incstack = 0
  7075  002B74  0E00               	movlw	0
  7076  002B76  0100               	movlb	0	; () banked
  7077  002B78  6F6B               	movwf	___awdiv@sign& (0+255),b
  7078                           
  7079                           ; BSR set to: 0
  7080  002B7A  0100               	movlb	0	; () banked
  7081  002B7C  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7082  002B7E  D008               	goto	l4901
  7083                           
  7084                           ; BSR set to: 0
  7085  002B80  0100               	movlb	0	; () banked
  7086  002B82  6D68               	negf	___awdiv@divisor& (0+255),b
  7087  002B84  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7088  002B86  B0D8               	btfsc	status,0,c
  7089  002B88  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7090                           
  7091                           ; BSR set to: 0
  7092  002B8A  0E01               	movlw	1
  7093  002B8C  0100               	movlb	0	; () banked
  7094  002B8E  6F6B               	movwf	___awdiv@sign& (0+255),b
  7095  002B90                     l4901:
  7096                           
  7097                           ; BSR set to: 0
  7098  002B90  0100               	movlb	0	; () banked
  7099  002B92  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7100  002B94  D008               	goto	l4907
  7101                           
  7102                           ; BSR set to: 0
  7103  002B96  0100               	movlb	0	; () banked
  7104  002B98  6D66               	negf	___awdiv@dividend& (0+255),b
  7105  002B9A  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7106  002B9C  B0D8               	btfsc	status,0,c
  7107  002B9E  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7108                           
  7109                           ; BSR set to: 0
  7110  002BA0  0E01               	movlw	1
  7111  002BA2  0100               	movlb	0	; () banked
  7112  002BA4  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  7113  002BA6                     l4907:
  7114                           
  7115                           ; BSR set to: 0
  7116  002BA6  0E00               	movlw	0
  7117  002BA8  0100               	movlb	0	; () banked
  7118  002BAA  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  7119  002BAC  0E00               	movlw	0
  7120  002BAE  6F6C               	movwf	___awdiv@quotient& (0+255),b
  7121                           
  7122                           ; BSR set to: 0
  7123  002BB0  0100               	movlb	0	; () banked
  7124  002BB2  5168               	movf	___awdiv@divisor& (0+255),w,b
  7125  002BB4  0100               	movlb	0	; () banked
  7126  002BB6  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7127  002BB8  B4D8               	btfsc	status,2,c
  7128  002BBA  D02C               	goto	l4929
  7129                           
  7130                           ; BSR set to: 0
  7131  002BBC  0E01               	movlw	1
  7132  002BBE  0100               	movlb	0	; () banked
  7133  002BC0  6F6A               	movwf	___awdiv@counter& (0+255),b
  7134  002BC2  D006               	goto	l4915
  7135  002BC4                     l4913:
  7136                           
  7137                           ; BSR set to: 0
  7138  002BC4  0100               	movlb	0	; () banked
  7139  002BC6  90D8               	bcf	status,0,c
  7140  002BC8  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  7141  002BCA  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7142  002BCC  0100               	movlb	0	; () banked
  7143  002BCE  2B6A               	incf	___awdiv@counter& (0+255),f,b
  7144  002BD0                     l4915:
  7145                           
  7146                           ; BSR set to: 0
  7147  002BD0  0100               	movlb	0	; () banked
  7148  002BD2  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7149  002BD4  D7F7               	goto	l4913
  7150  002BD6                     l4917:
  7151                           
  7152                           ; BSR set to: 0
  7153  002BD6  0100               	movlb	0	; () banked
  7154  002BD8  90D8               	bcf	status,0,c
  7155  002BDA  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  7156  002BDC  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7157                           
  7158                           ; BSR set to: 0
  7159  002BDE  0100               	movlb	0	; () banked
  7160  002BE0  5168               	movf	___awdiv@divisor& (0+255),w,b
  7161  002BE2  0100               	movlb	0	; () banked
  7162  002BE4  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  7163  002BE6  0100               	movlb	0	; () banked
  7164  002BE8  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7165  002BEA  0100               	movlb	0	; () banked
  7166  002BEC  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7167  002BEE  A0D8               	btfss	status,0,c
  7168  002BF0  D00A               	goto	l4925
  7169                           
  7170                           ; BSR set to: 0
  7171  002BF2  0100               	movlb	0	; () banked
  7172  002BF4  5168               	movf	___awdiv@divisor& (0+255),w,b
  7173  002BF6  0100               	movlb	0	; () banked
  7174  002BF8  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  7175  002BFA  0100               	movlb	0	; () banked
  7176  002BFC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7177  002BFE  0100               	movlb	0	; () banked
  7178  002C00  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7179                           
  7180                           ; BSR set to: 0
  7181  002C02  0100               	movlb	0	; () banked
  7182  002C04  816C               	bsf	___awdiv@quotient& (0+255),0,b
  7183  002C06                     l4925:
  7184                           
  7185                           ; BSR set to: 0
  7186  002C06  0100               	movlb	0	; () banked
  7187  002C08  90D8               	bcf	status,0,c
  7188  002C0A  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7189  002C0C  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  7190                           
  7191                           ; BSR set to: 0
  7192  002C0E  0100               	movlb	0	; () banked
  7193  002C10  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  7194  002C12  D7E1               	goto	l4917
  7195  002C14                     l4929:
  7196                           
  7197                           ; BSR set to: 0
  7198  002C14  0100               	movlb	0	; () banked
  7199  002C16  516B               	movf	___awdiv@sign& (0+255),w,b
  7200  002C18  0100               	movlb	0	; () banked
  7201  002C1A  B4D8               	btfsc	status,2,c
  7202  002C1C  D005               	goto	l4933
  7203                           
  7204                           ; BSR set to: 0
  7205  002C1E  0100               	movlb	0	; () banked
  7206  002C20  6D6C               	negf	___awdiv@quotient& (0+255),b
  7207  002C22  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7208  002C24  B0D8               	btfsc	status,0,c
  7209  002C26  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7210  002C28                     l4933:
  7211                           
  7212                           ; BSR set to: 0
  7213  002C28  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  7214  002C2C  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  7215  002C30  0012               	return	
  7216  002C32                     __end_of___awdiv:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           postinc0	equ	0xFEE
  7226                           wreg	equ	0xFE8
  7227                           indf1	equ	0xFE7
  7228                           postinc1	equ	0xFE6
  7229                           fsr1h	equ	0xFE2
  7230                           fsr1l	equ	0xFE1
  7231                           indf2	equ	0xFDF
  7232                           postinc2	equ	0xFDE
  7233                           fsr2h	equ	0xFDA
  7234                           fsr2l	equ	0xFD9
  7235                           status	equ	0xFD8
  7236                           
  7237 ;; *************** function __tdiv_to_l_ *****************
  7238 ;; Defined at:
  7239 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  f1              4    0[BANK0 ] float 
  7242 ;;  f2              4    4[BANK0 ] float 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  quot            4   11[BANK0 ] unsigned long 
  7245 ;;  exp1            1   16[BANK0 ] unsigned char 
  7246 ;;  cntr            1   15[BANK0 ] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  4    0[BANK0 ] unsigned long 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7256 ;;      Params:         0       8       0       0
  7257 ;;      Locals:         0       6       0       0
  7258 ;;      Temps:          0       3       0       0
  7259 ;;      Totals:         0      17       0       0
  7260 ;;Total ram usage:       17 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    3
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_sprintf
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text21
  7271  001FE6                     __ptext21:
  7272                           	opt stack 0
  7273  001FE6                     __tdiv_to_l_:
  7274                           	opt stack 25
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;incstack = 0
  7278  001FE6  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7279  001FEA  0100               	movlb	0	; () banked
  7280  001FEC  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7281  001FEE  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7282  001FF0  0100               	movlb	0	; () banked
  7283  001FF2  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7284  001FF4  0100               	movlb	0	; () banked
  7285  001FF6  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7286  001FF8  E301               	bnc	u5891
  7287  001FFA  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7288  001FFC                     u5891:
  7289  001FFC  0100               	movlb	0	; () banked
  7290  001FFE  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7291  002000  0100               	movlb	0	; () banked
  7292  002002  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7293  002004  0100               	movlb	0	; () banked
  7294  002006  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7295  002008  A4D8               	btfss	status,2,c
  7296  00200A  D00A               	goto	l5075
  7297                           
  7298                           ; BSR set to: 0
  7299  00200C  0E00               	movlw	0
  7300  00200E  0100               	movlb	0	; () banked
  7301  002010  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7302  002012  0E00               	movlw	0
  7303  002014  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7304  002016  0E00               	movlw	0
  7305  002018  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7306  00201A  0E00               	movlw	0
  7307  00201C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7308                           
  7309                           ; BSR set to: 0
  7310  00201E  0012               	return	
  7311  002020                     l5075:
  7312                           
  7313                           ; BSR set to: 0
  7314  002020  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7315  002024  0100               	movlb	0	; () banked
  7316  002026  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7317  002028  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7318  00202A  0100               	movlb	0	; () banked
  7319  00202C  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7320  00202E  0100               	movlb	0	; () banked
  7321  002030  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7322  002032  E301               	bnc	u5911
  7323  002034  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7324  002036                     u5911:
  7325  002036  0100               	movlb	0	; () banked
  7326  002038  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7327  00203A  0100               	movlb	0	; () banked
  7328  00203C  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7329  00203E  0100               	movlb	0	; () banked
  7330  002040  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7331  002042  A4D8               	btfss	status,2,c
  7332  002044  D00A               	goto	l5081
  7333                           
  7334                           ; BSR set to: 0
  7335  002046  0E00               	movlw	0
  7336  002048  0100               	movlb	0	; () banked
  7337  00204A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7338  00204C  0E00               	movlw	0
  7339  00204E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7340  002050  0E00               	movlw	0
  7341  002052  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7342  002054  0E00               	movlw	0
  7343  002056  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7344                           
  7345                           ; BSR set to: 0
  7346  002058  0012               	return	
  7347  00205A                     l5081:
  7348                           
  7349                           ; BSR set to: 0
  7350  00205A  0100               	movlb	0	; () banked
  7351  00205C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7352                           
  7353                           ; BSR set to: 0
  7354  00205E  0EFF               	movlw	255
  7355  002060  0100               	movlb	0	; () banked
  7356  002062  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7357  002064  0EFF               	movlw	255
  7358  002066  0100               	movlb	0	; () banked
  7359  002068  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7360  00206A  0E00               	movlw	0
  7361  00206C  0100               	movlb	0	; () banked
  7362  00206E  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7363  002070  0100               	movlb	0	; () banked
  7364  002072  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7365                           
  7366                           ; BSR set to: 0
  7367  002074  0EFF               	movlw	255
  7368  002076  0100               	movlb	0	; () banked
  7369  002078  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7370  00207A  0EFF               	movlw	255
  7371  00207C  0100               	movlb	0	; () banked
  7372  00207E  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7373  002080  0E00               	movlw	0
  7374  002082  0100               	movlb	0	; () banked
  7375  002084  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7376                           
  7377                           ; BSR set to: 0
  7378  002086  0E00               	movlw	0
  7379  002088  0100               	movlb	0	; () banked
  7380  00208A  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  7381  00208C  0E00               	movlw	0
  7382  00208E  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7383  002090  0E00               	movlw	0
  7384  002092  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7385  002094  0E00               	movlw	0
  7386  002096  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389  002098  0E7F               	movlw	127
  7390  00209A  0100               	movlb	0	; () banked
  7391  00209C  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7392                           
  7393                           ; BSR set to: 0
  7394  00209E  0100               	movlb	0	; () banked
  7395  0020A0  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7396  0020A2  0F98               	addlw	152
  7397  0020A4  0100               	movlb	0	; () banked
  7398  0020A6  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7399                           
  7400                           ; BSR set to: 0
  7401  0020A8  0E18               	movlw	24
  7402  0020AA  0100               	movlb	0	; () banked
  7403  0020AC  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7404  0020AE                     l787:
  7405                           
  7406                           ; BSR set to: 0
  7407  0020AE  0100               	movlb	0	; () banked
  7408  0020B0  90D8               	bcf	status,0,c
  7409  0020B2  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7410  0020B4  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7411  0020B6  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7412  0020B8  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7413                           
  7414                           ; BSR set to: 0
  7415  0020BA  0100               	movlb	0	; () banked
  7416  0020BC  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7417  0020BE  0100               	movlb	0	; () banked
  7418  0020C0  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7419  0020C2  0100               	movlb	0	; () banked
  7420  0020C4  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7421  0020C6  0100               	movlb	0	; () banked
  7422  0020C8  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7423  0020CA  0100               	movlb	0	; () banked
  7424  0020CC  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7425  0020CE  0100               	movlb	0	; () banked
  7426  0020D0  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7427  0020D2  A0D8               	btfss	status,0,c
  7428  0020D4  D00E               	goto	l788
  7429                           
  7430                           ; BSR set to: 0
  7431  0020D6  0100               	movlb	0	; () banked
  7432  0020D8  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7433  0020DA  0100               	movlb	0	; () banked
  7434  0020DC  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7435  0020DE  0100               	movlb	0	; () banked
  7436  0020E0  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7437  0020E2  0100               	movlb	0	; () banked
  7438  0020E4  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7439  0020E6  0100               	movlb	0	; () banked
  7440  0020E8  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7441  0020EA  0100               	movlb	0	; () banked
  7442  0020EC  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7443                           
  7444                           ; BSR set to: 0
  7445  0020EE  0100               	movlb	0	; () banked
  7446  0020F0  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7447  0020F2                     l788:
  7448                           
  7449                           ; BSR set to: 0
  7450  0020F2  0100               	movlb	0	; () banked
  7451  0020F4  90D8               	bcf	status,0,c
  7452  0020F6  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7453  0020F8  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7454  0020FA  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7455                           
  7456                           ; BSR set to: 0
  7457  0020FC  0100               	movlb	0	; () banked
  7458  0020FE  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7459  002100  D7D6               	goto	l787
  7460                           
  7461                           ; BSR set to: 0
  7462                           
  7463                           ; BSR set to: 0
  7464  002102  0100               	movlb	0	; () banked
  7465  002104  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7466  002106  D01A               	goto	l5115
  7467                           
  7468                           ; BSR set to: 0
  7469  002108  0100               	movlb	0	; () banked
  7470  00210A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7471  00210C  0A80               	xorlw	128
  7472  00210E  0F97               	addlw	151
  7473  002110  B0D8               	btfsc	status,0,c
  7474  002112  D00A               	goto	l5111
  7475                           
  7476                           ; BSR set to: 0
  7477  002114  0E00               	movlw	0
  7478  002116  0100               	movlb	0	; () banked
  7479  002118  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7480  00211A  0E00               	movlw	0
  7481  00211C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7482  00211E  0E00               	movlw	0
  7483  002120  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7484  002122  0E00               	movlw	0
  7485  002124  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7486                           
  7487                           ; BSR set to: 0
  7488  002126  0012               	return	
  7489  002128                     l5111:
  7490                           
  7491                           ; BSR set to: 0
  7492  002128  0100               	movlb	0	; () banked
  7493  00212A  90D8               	bcf	status,0,c
  7494  00212C  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7495  00212E  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7496  002130  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7497  002132  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7498                           
  7499                           ; BSR set to: 0
  7500  002134  0100               	movlb	0	; () banked
  7501  002136  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7502  002138  D7F7               	goto	l5111
  7503                           
  7504                           ; BSR set to: 0
  7505  00213A  D01B               	goto	l794
  7506  00213C                     l5115:
  7507                           
  7508                           ; BSR set to: 0
  7509  00213C  0E17               	movlw	23
  7510  00213E  0100               	movlb	0	; () banked
  7511  002140  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7512  002142  D012               	goto	l5123
  7513                           
  7514                           ; BSR set to: 0
  7515  002144  0E00               	movlw	0
  7516  002146  0100               	movlb	0	; () banked
  7517  002148  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7518  00214A  0E00               	movlw	0
  7519  00214C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7520  00214E  0E00               	movlw	0
  7521  002150  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7522  002152  0E00               	movlw	0
  7523  002154  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7524                           
  7525                           ; BSR set to: 0
  7526  002156  0012               	return	
  7527  002158                     l5121:
  7528                           
  7529                           ; BSR set to: 0
  7530  002158  0100               	movlb	0	; () banked
  7531  00215A  90D8               	bcf	status,0,c
  7532  00215C  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7533  00215E  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7534  002160  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7535  002162  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7536  002164  0100               	movlb	0	; () banked
  7537  002166  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7538  002168                     l5123:
  7539                           
  7540                           ; BSR set to: 0
  7541  002168  0100               	movlb	0	; () banked
  7542  00216A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7543  00216C  0100               	movlb	0	; () banked
  7544  00216E  A4D8               	btfss	status,2,c
  7545  002170  D7F3               	goto	l5121
  7546  002172                     l794:
  7547                           
  7548                           ; BSR set to: 0
  7549  002172  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7550  002176  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7551  00217A  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7552  00217E  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7553                           
  7554                           ; BSR set to: 0
  7555  002182  0012               	return		;funcret
  7556  002184                     __end_of__tdiv_to_l_:
  7557                           	opt stack 0
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           postinc0	equ	0xFEE
  7566                           wreg	equ	0xFE8
  7567                           indf1	equ	0xFE7
  7568                           postinc1	equ	0xFE6
  7569                           fsr1h	equ	0xFE2
  7570                           fsr1l	equ	0xFE1
  7571                           indf2	equ	0xFDF
  7572                           postinc2	equ	0xFDE
  7573                           fsr2h	equ	0xFDA
  7574                           fsr2l	equ	0xFD9
  7575                           status	equ	0xFD8
  7576                           
  7577 ;; *************** function __div_to_l_ *****************
  7578 ;; Defined at:
  7579 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  f1              4    0[BANK0 ] unsigned long 
  7582 ;;  f2              4    4[BANK0 ] unsigned long 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  quot            4    8[BANK0 ] unsigned long 
  7585 ;;  exp1            1   13[BANK0 ] unsigned char 
  7586 ;;  cntr            1   12[BANK0 ] unsigned char 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  4    0[BANK0 ] unsigned long 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2, status,0
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7596 ;;      Params:         0       8       0       0
  7597 ;;      Locals:         0       6       0       0
  7598 ;;      Temps:          0       0       0       0
  7599 ;;      Totals:         0      14       0       0
  7600 ;;Total ram usage:       14 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    3
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_sprintf
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text22
  7611  002314                     __ptext22:
  7612                           	opt stack 0
  7613  002314                     __div_to_l_:
  7614                           	opt stack 25
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;incstack = 0
  7618  002314  0100               	movlb	0	; () banked
  7619  002316  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7620  002318  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7621  00231A  0100               	movlb	0	; () banked
  7622  00231C  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  7623  00231E  0100               	movlb	0	; () banked
  7624  002320  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7625  002322  A4D8               	btfss	status,2,c
  7626  002324  D00A               	goto	l5131
  7627                           
  7628                           ; BSR set to: 0
  7629  002326  0E00               	movlw	0
  7630  002328  0100               	movlb	0	; () banked
  7631  00232A  6F60               	movwf	?__div_to_l_& (0+255),b
  7632  00232C  0E00               	movlw	0
  7633  00232E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7634  002330  0E00               	movlw	0
  7635  002332  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7636  002334  0E00               	movlw	0
  7637  002336  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7638                           
  7639                           ; BSR set to: 0
  7640  002338  0012               	return	
  7641  00233A                     l5131:
  7642                           
  7643                           ; BSR set to: 0
  7644  00233A  0100               	movlb	0	; () banked
  7645  00233C  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7646  00233E  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7647  002340  0100               	movlb	0	; () banked
  7648  002342  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7649  002344  0100               	movlb	0	; () banked
  7650  002346  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7651  002348  A4D8               	btfss	status,2,c
  7652  00234A  D00A               	goto	l5137
  7653                           
  7654                           ; BSR set to: 0
  7655  00234C  0E00               	movlw	0
  7656  00234E  0100               	movlb	0	; () banked
  7657  002350  6F60               	movwf	?__div_to_l_& (0+255),b
  7658  002352  0E00               	movlw	0
  7659  002354  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7660  002356  0E00               	movlw	0
  7661  002358  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7662  00235A  0E00               	movlw	0
  7663  00235C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7664                           
  7665                           ; BSR set to: 0
  7666  00235E  0012               	return	
  7667  002360                     l5137:
  7668                           
  7669                           ; BSR set to: 0
  7670  002360  0100               	movlb	0	; () banked
  7671  002362  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7672                           
  7673                           ; BSR set to: 0
  7674  002364  0EFF               	movlw	255
  7675  002366  0100               	movlb	0	; () banked
  7676  002368  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  7677  00236A  0EFF               	movlw	255
  7678  00236C  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7679  00236E  0EFF               	movlw	255
  7680  002370  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7681  002372  0E00               	movlw	0
  7682  002374  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7683                           
  7684                           ; BSR set to: 0
  7685  002376  0100               	movlb	0	; () banked
  7686  002378  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7687  00237A  0EFF               	movlw	255
  7688  00237C  0100               	movlb	0	; () banked
  7689  00237E  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  7690  002380  0EFF               	movlw	255
  7691  002382  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7692  002384  0EFF               	movlw	255
  7693  002386  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7694  002388  0E00               	movlw	0
  7695  00238A  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7696                           
  7697                           ; BSR set to: 0
  7698  00238C  0E00               	movlw	0
  7699  00238E  0100               	movlb	0	; () banked
  7700  002390  6F68               	movwf	__div_to_l_@quot& (0+255),b
  7701  002392  0E00               	movlw	0
  7702  002394  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7703  002396  0E00               	movlw	0
  7704  002398  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7705  00239A  0E00               	movlw	0
  7706  00239C  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7707                           
  7708                           ; BSR set to: 0
  7709  00239E  0E7F               	movlw	127
  7710  0023A0  0100               	movlb	0	; () banked
  7711  0023A2  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7712                           
  7713                           ; BSR set to: 0
  7714  0023A4  0100               	movlb	0	; () banked
  7715  0023A6  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7716  0023A8  0FA0               	addlw	160
  7717  0023AA  0100               	movlb	0	; () banked
  7718  0023AC  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7719                           
  7720                           ; BSR set to: 0
  7721  0023AE  0E20               	movlw	32
  7722  0023B0  0100               	movlb	0	; () banked
  7723  0023B2  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7724  0023B4                     l5151:
  7725                           
  7726                           ; BSR set to: 0
  7727  0023B4  0100               	movlb	0	; () banked
  7728  0023B6  90D8               	bcf	status,0,c
  7729  0023B8  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7730  0023BA  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7731  0023BC  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7732  0023BE  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7733                           
  7734                           ; BSR set to: 0
  7735  0023C0  0100               	movlb	0	; () banked
  7736  0023C2  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7737  0023C4  0100               	movlb	0	; () banked
  7738  0023C6  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  7739  0023C8  0100               	movlb	0	; () banked
  7740  0023CA  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7741  0023CC  0100               	movlb	0	; () banked
  7742  0023CE  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7743  0023D0  0100               	movlb	0	; () banked
  7744  0023D2  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7745  0023D4  0100               	movlb	0	; () banked
  7746  0023D6  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7747  0023D8  0100               	movlb	0	; () banked
  7748  0023DA  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7749  0023DC  0100               	movlb	0	; () banked
  7750  0023DE  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7751  0023E0  A0D8               	btfss	status,0,c
  7752  0023E2  D012               	goto	l5159
  7753                           
  7754                           ; BSR set to: 0
  7755  0023E4  0100               	movlb	0	; () banked
  7756  0023E6  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7757  0023E8  0100               	movlb	0	; () banked
  7758  0023EA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  7759  0023EC  0100               	movlb	0	; () banked
  7760  0023EE  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7761  0023F0  0100               	movlb	0	; () banked
  7762  0023F2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7763  0023F4  0100               	movlb	0	; () banked
  7764  0023F6  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7765  0023F8  0100               	movlb	0	; () banked
  7766  0023FA  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7767  0023FC  0100               	movlb	0	; () banked
  7768  0023FE  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7769  002400  0100               	movlb	0	; () banked
  7770  002402  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7771                           
  7772                           ; BSR set to: 0
  7773  002404  0100               	movlb	0	; () banked
  7774  002406  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  7775  002408                     l5159:
  7776                           
  7777                           ; BSR set to: 0
  7778  002408  0100               	movlb	0	; () banked
  7779  00240A  90D8               	bcf	status,0,c
  7780  00240C  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  7781  00240E  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7782  002410  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7783  002412  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7784                           
  7785                           ; BSR set to: 0
  7786  002414  0100               	movlb	0	; () banked
  7787  002416  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7788  002418  D7CD               	goto	l5151
  7789                           
  7790                           ; BSR set to: 0
  7791                           
  7792                           ; BSR set to: 0
  7793  00241A  0100               	movlb	0	; () banked
  7794  00241C  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  7795  00241E  D01A               	goto	l5175
  7796                           
  7797                           ; BSR set to: 0
  7798  002420  0100               	movlb	0	; () banked
  7799  002422  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7800  002424  0A80               	xorlw	128
  7801  002426  0F9F               	addlw	159
  7802  002428  B0D8               	btfsc	status,0,c
  7803  00242A  D00A               	goto	l5171
  7804                           
  7805                           ; BSR set to: 0
  7806  00242C  0E00               	movlw	0
  7807  00242E  0100               	movlb	0	; () banked
  7808  002430  6F60               	movwf	?__div_to_l_& (0+255),b
  7809  002432  0E00               	movlw	0
  7810  002434  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7811  002436  0E00               	movlw	0
  7812  002438  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7813  00243A  0E00               	movlw	0
  7814  00243C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7815                           
  7816                           ; BSR set to: 0
  7817  00243E  0012               	return	
  7818  002440                     l5171:
  7819                           
  7820                           ; BSR set to: 0
  7821  002440  0100               	movlb	0	; () banked
  7822  002442  90D8               	bcf	status,0,c
  7823  002444  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7824  002446  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7825  002448  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7826  00244A  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 0
  7829  00244C  0100               	movlb	0	; () banked
  7830  00244E  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7831  002450  D7F7               	goto	l5171
  7832                           
  7833                           ; BSR set to: 0
  7834  002452  D01B               	goto	l690
  7835  002454                     l5175:
  7836                           
  7837                           ; BSR set to: 0
  7838  002454  0E1F               	movlw	31
  7839  002456  0100               	movlb	0	; () banked
  7840  002458  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7841  00245A  D012               	goto	l5183
  7842                           
  7843                           ; BSR set to: 0
  7844  00245C  0E00               	movlw	0
  7845  00245E  0100               	movlb	0	; () banked
  7846  002460  6F60               	movwf	?__div_to_l_& (0+255),b
  7847  002462  0E00               	movlw	0
  7848  002464  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7849  002466  0E00               	movlw	0
  7850  002468  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7851  00246A  0E00               	movlw	0
  7852  00246C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7853                           
  7854                           ; BSR set to: 0
  7855  00246E  0012               	return	
  7856  002470                     l5181:
  7857                           
  7858                           ; BSR set to: 0
  7859  002470  0100               	movlb	0	; () banked
  7860  002472  90D8               	bcf	status,0,c
  7861  002474  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7862  002476  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7863  002478  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7864  00247A  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7865  00247C  0100               	movlb	0	; () banked
  7866  00247E  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  7867  002480                     l5183:
  7868                           
  7869                           ; BSR set to: 0
  7870  002480  0100               	movlb	0	; () banked
  7871  002482  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7872  002484  0100               	movlb	0	; () banked
  7873  002486  A4D8               	btfss	status,2,c
  7874  002488  D7F3               	goto	l5181
  7875  00248A                     l690:
  7876                           
  7877                           ; BSR set to: 0
  7878  00248A  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  7879  00248E  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7880  002492  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7881  002496  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7882                           
  7883                           ; BSR set to: 0
  7884  00249A  0012               	return		;funcret
  7885  00249C                     __end_of__div_to_l_:
  7886                           	opt stack 0
  7887                           tblptru	equ	0xFF8
  7888                           tblptrh	equ	0xFF7
  7889                           tblptrl	equ	0xFF6
  7890                           tablat	equ	0xFF5
  7891                           prodh	equ	0xFF4
  7892                           prodl	equ	0xFF3
  7893                           intcon	equ	0xFF2
  7894                           postinc0	equ	0xFEE
  7895                           wreg	equ	0xFE8
  7896                           indf1	equ	0xFE7
  7897                           postinc1	equ	0xFE6
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           indf2	equ	0xFDF
  7901                           postinc2	equ	0xFDE
  7902                           fsr2h	equ	0xFDA
  7903                           fsr2l	equ	0xFD9
  7904                           status	equ	0xFD8
  7905                           
  7906 ;; *************** function ___xxtofl *****************
  7907 ;; Defined at:
  7908 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  sign            1    wreg     unsigned char 
  7911 ;;  val             4    7[BANK0 ] long 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  sign            1   15[BANK0 ] unsigned char 
  7914 ;;  arg             4   17[BANK0 ] unsigned long 
  7915 ;;  exp             1   16[BANK0 ] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  4    7[BANK0 ] unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7925 ;;      Params:         0       4       0       0
  7926 ;;      Locals:         0       6       0       0
  7927 ;;      Temps:          0       4       0       0
  7928 ;;      Totals:         0      14       0       0
  7929 ;;Total ram usage:       14 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    3
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_main
  7936 ;;		_LCD_Handler
  7937 ;;		_sprintf
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text23
  7942  001E18                     __ptext23:
  7943                           	opt stack 0
  7944  001E18                     ___xxtofl:
  7945                           	opt stack 27
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;incstack = 0
  7949                           ;___xxtofl@sign stored from wreg
  7950  001E18  0100               	movlb	0	; () banked
  7951  001E1A  6F6F               	movwf	___xxtofl@sign& (0+255),b
  7952  001E1C  0100               	movlb	0	; () banked
  7953  001E1E  516F               	movf	___xxtofl@sign& (0+255),w,b
  7954  001E20  0100               	movlb	0	; () banked
  7955  001E22  B4D8               	btfsc	status,2,c
  7956  001E24  D01E               	goto	l1085
  7957                           
  7958                           ; BSR set to: 0
  7959  001E26  0100               	movlb	0	; () banked
  7960  001E28  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7961  001E2A  D01B               	goto	l1085
  7962                           
  7963                           ; BSR set to: 0
  7964  001E2C  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  7965  001E30  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  7966  001E34  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  7967  001E38  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  7968  001E3C  0100               	movlb	0	; () banked
  7969  001E3E  1F6B               	comf	??___xxtofl& (0+255),f,b
  7970  001E40  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  7971  001E42  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  7972  001E44  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  7973  001E46  2B6B               	incf	??___xxtofl& (0+255),f,b
  7974  001E48  0E00               	movlw	0
  7975  001E4A  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7976  001E4C  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7977  001E4E  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7978  001E50  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  7979  001E54  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  7980  001E58  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  7981  001E5C  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  7982  001E60  D008               	goto	l5317
  7983  001E62                     l1085:
  7984                           
  7985                           ; BSR set to: 0
  7986  001E62  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  7987  001E66  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7988  001E6A  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7989  001E6E  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7990  001E72                     l5317:
  7991                           
  7992                           ; BSR set to: 0
  7993  001E72  0100               	movlb	0	; () banked
  7994  001E74  5167               	movf	___xxtofl@val& (0+255),w,b
  7995  001E76  0100               	movlb	0	; () banked
  7996  001E78  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7997  001E7A  0100               	movlb	0	; () banked
  7998  001E7C  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7999  001E7E  0100               	movlb	0	; () banked
  8000  001E80  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8001  001E82  A4D8               	btfss	status,2,c
  8002  001E84  D00A               	goto	l5323
  8003                           
  8004                           ; BSR set to: 0
  8005  001E86  0E00               	movlw	0
  8006  001E88  0100               	movlb	0	; () banked
  8007  001E8A  6F67               	movwf	?___xxtofl& (0+255),b
  8008  001E8C  0E00               	movlw	0
  8009  001E8E  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  8010  001E90  0E00               	movlw	0
  8011  001E92  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  8012  001E94  0E00               	movlw	0
  8013  001E96  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  8014                           
  8015                           ; BSR set to: 0
  8016  001E98  0012               	return	
  8017  001E9A                     l5323:
  8018                           
  8019                           ; BSR set to: 0
  8020  001E9A  0E96               	movlw	150
  8021  001E9C  0100               	movlb	0	; () banked
  8022  001E9E  6F70               	movwf	___xxtofl@exp& (0+255),b
  8023  001EA0  D008               	goto	l5327
  8024  001EA2                     l5325:
  8025                           
  8026                           ; BSR set to: 0
  8027  001EA2  0100               	movlb	0	; () banked
  8028  001EA4  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8029  001EA6  0100               	movlb	0	; () banked
  8030  001EA8  90D8               	bcf	status,0,c
  8031  001EAA  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8032  001EAC  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8033  001EAE  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8034  001EB0  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8035  001EB2                     l5327:
  8036                           
  8037                           ; BSR set to: 0
  8038  001EB2  0E00               	movlw	0
  8039  001EB4  0100               	movlb	0	; () banked
  8040  001EB6  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8041  001EB8  0100               	movlb	0	; () banked
  8042  001EBA  6F6B               	movwf	??___xxtofl& (0+255),b
  8043  001EBC  0E00               	movlw	0
  8044  001EBE  0100               	movlb	0	; () banked
  8045  001EC0  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8046  001EC2  0100               	movlb	0	; () banked
  8047  001EC4  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8048  001EC6  0E00               	movlw	0
  8049  001EC8  0100               	movlb	0	; () banked
  8050  001ECA  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8051  001ECC  0100               	movlb	0	; () banked
  8052  001ECE  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8053  001ED0  0EFE               	movlw	254
  8054  001ED2  0100               	movlb	0	; () banked
  8055  001ED4  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8056  001ED6  0100               	movlb	0	; () banked
  8057  001ED8  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8058  001EDA  0100               	movlb	0	; () banked
  8059  001EDC  516B               	movf	??___xxtofl& (0+255),w,b
  8060  001EDE  0100               	movlb	0	; () banked
  8061  001EE0  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8062  001EE2  0100               	movlb	0	; () banked
  8063  001EE4  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8064  001EE6  0100               	movlb	0	; () banked
  8065  001EE8  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8066  001EEA  B4D8               	btfsc	status,2,c
  8067  001EEC  D010               	goto	l1092
  8068  001EEE  D7D9               	goto	l5325
  8069  001EF0                     l5329:
  8070                           
  8071                           ; BSR set to: 0
  8072  001EF0  0100               	movlb	0	; () banked
  8073  001EF2  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8074                           
  8075                           ; BSR set to: 0
  8076  001EF4  0E01               	movlw	1
  8077  001EF6  0100               	movlb	0	; () banked
  8078  001EF8  2771               	addwf	___xxtofl@arg& (0+255),f,b
  8079  001EFA  0E00               	movlw	0
  8080  001EFC  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8081  001EFE  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8082  001F00  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8083                           
  8084                           ; BSR set to: 0
  8085  001F02  0100               	movlb	0	; () banked
  8086  001F04  90D8               	bcf	status,0,c
  8087  001F06  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8088  001F08  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8089  001F0A  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8090  001F0C  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8091  001F0E                     l1092:
  8092                           
  8093                           ; BSR set to: 0
  8094  001F0E  0E00               	movlw	0
  8095  001F10  0100               	movlb	0	; () banked
  8096  001F12  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8097  001F14  0100               	movlb	0	; () banked
  8098  001F16  6F6B               	movwf	??___xxtofl& (0+255),b
  8099  001F18  0E00               	movlw	0
  8100  001F1A  0100               	movlb	0	; () banked
  8101  001F1C  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8102  001F1E  0100               	movlb	0	; () banked
  8103  001F20  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8104  001F22  0E00               	movlw	0
  8105  001F24  0100               	movlb	0	; () banked
  8106  001F26  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8107  001F28  0100               	movlb	0	; () banked
  8108  001F2A  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8109  001F2C  0EFF               	movlw	255
  8110  001F2E  0100               	movlb	0	; () banked
  8111  001F30  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8112  001F32  0100               	movlb	0	; () banked
  8113  001F34  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8114  001F36  0100               	movlb	0	; () banked
  8115  001F38  516B               	movf	??___xxtofl& (0+255),w,b
  8116  001F3A  0100               	movlb	0	; () banked
  8117  001F3C  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8118  001F3E  0100               	movlb	0	; () banked
  8119  001F40  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8120  001F42  0100               	movlb	0	; () banked
  8121  001F44  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8122  001F46  B4D8               	btfsc	status,2,c
  8123  001F48  D009               	goto	l5337
  8124  001F4A  D7D2               	goto	l5329
  8125  001F4C                     l5335:
  8126                           
  8127                           ; BSR set to: 0
  8128  001F4C  0100               	movlb	0	; () banked
  8129  001F4E  0770               	decf	___xxtofl@exp& (0+255),f,b
  8130  001F50  0100               	movlb	0	; () banked
  8131  001F52  90D8               	bcf	status,0,c
  8132  001F54  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  8133  001F56  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8134  001F58  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8135  001F5A  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8136  001F5C                     l5337:
  8137                           
  8138                           ; BSR set to: 0
  8139  001F5C  0100               	movlb	0	; () banked
  8140  001F5E  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8141  001F60  D004               	goto	l1099
  8142                           
  8143                           ; BSR set to: 0
  8144  001F62  0E02               	movlw	2
  8145  001F64  0100               	movlb	0	; () banked
  8146  001F66  6170               	cpfslt	___xxtofl@exp& (0+255),b
  8147  001F68  D7F1               	goto	l5335
  8148  001F6A                     l1099:
  8149                           
  8150                           ; BSR set to: 0
  8151  001F6A  0100               	movlb	0	; () banked
  8152  001F6C  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  8153  001F6E  D009               	goto	l1100
  8154                           
  8155                           ; BSR set to: 0
  8156  001F70  0EFF               	movlw	255
  8157  001F72  0100               	movlb	0	; () banked
  8158  001F74  1771               	andwf	___xxtofl@arg& (0+255),f,b
  8159  001F76  0EFF               	movlw	255
  8160  001F78  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8161  001F7A  0E7F               	movlw	127
  8162  001F7C  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8163  001F7E  0EFF               	movlw	255
  8164  001F80  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8165  001F82                     l1100:
  8166                           
  8167                           ; BSR set to: 0
  8168  001F82  0100               	movlb	0	; () banked
  8169  001F84  90D8               	bcf	status,0,c
  8170  001F86  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  8171  001F88  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  8172  001F8C  0100               	movlb	0	; () banked
  8173  001F8E  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8174  001F90  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8175  001F92  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  8176  001F94  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  8177  001F98  0100               	movlb	0	; () banked
  8178  001F9A  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8179  001F9C  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8180  001F9E  6B6B               	clrf	??___xxtofl& (0+255),b
  8181  001FA0  0100               	movlb	0	; () banked
  8182  001FA2  516B               	movf	??___xxtofl& (0+255),w,b
  8183  001FA4  0100               	movlb	0	; () banked
  8184  001FA6  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  8185  001FA8  0100               	movlb	0	; () banked
  8186  001FAA  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  8187  001FAC  0100               	movlb	0	; () banked
  8188  001FAE  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8189  001FB0  0100               	movlb	0	; () banked
  8190  001FB2  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  8191  001FB4  0100               	movlb	0	; () banked
  8192  001FB6  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8193  001FB8  0100               	movlb	0	; () banked
  8194  001FBA  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  8195  001FBC  0100               	movlb	0	; () banked
  8196  001FBE  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8197                           
  8198                           ; BSR set to: 0
  8199  001FC0  0100               	movlb	0	; () banked
  8200  001FC2  516F               	movf	___xxtofl@sign& (0+255),w,b
  8201  001FC4  0100               	movlb	0	; () banked
  8202  001FC6  B4D8               	btfsc	status,2,c
  8203  001FC8  D005               	goto	l5349
  8204                           
  8205                           ; BSR set to: 0
  8206  001FCA  0100               	movlb	0	; () banked
  8207  001FCC  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8208  001FCE  D002               	goto	l5349
  8209                           
  8210                           ; BSR set to: 0
  8211  001FD0  0100               	movlb	0	; () banked
  8212  001FD2  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8213  001FD4                     l5349:
  8214                           
  8215                           ; BSR set to: 0
  8216  001FD4  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  8217  001FD8  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  8218  001FDC  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  8219  001FE0  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8220  001FE4  0012               	return	
  8221  001FE6                     __end_of___xxtofl:
  8222                           	opt stack 0
  8223                           tblptru	equ	0xFF8
  8224                           tblptrh	equ	0xFF7
  8225                           tblptrl	equ	0xFF6
  8226                           tablat	equ	0xFF5
  8227                           prodh	equ	0xFF4
  8228                           prodl	equ	0xFF3
  8229                           intcon	equ	0xFF2
  8230                           postinc0	equ	0xFEE
  8231                           wreg	equ	0xFE8
  8232                           indf1	equ	0xFE7
  8233                           postinc1	equ	0xFE6
  8234                           fsr1h	equ	0xFE2
  8235                           fsr1l	equ	0xFE1
  8236                           indf2	equ	0xFDF
  8237                           postinc2	equ	0xFDE
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function ___llmod *****************
  8243 ;; Defined at:
  8244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  dividend        4    0[BANK0 ] unsigned long 
  8247 ;;  divisor         4    4[BANK0 ] unsigned long 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  counter         1    8[BANK0 ] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  4    0[BANK0 ] unsigned long 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8259 ;;      Params:         0       8       0       0
  8260 ;;      Locals:         0       1       0       0
  8261 ;;      Temps:          0       0       0       0
  8262 ;;      Totals:         0       9       0       0
  8263 ;;Total ram usage:        9 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    3
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_sprintf
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text24
  8274  002EDC                     __ptext24:
  8275                           	opt stack 0
  8276  002EDC                     ___llmod:
  8277                           	opt stack 25
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;incstack = 0
  8281  002EDC  0100               	movlb	0	; () banked
  8282  002EDE  5164               	movf	___llmod@divisor& (0+255),w,b
  8283  002EE0  0100               	movlb	0	; () banked
  8284  002EE2  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8285  002EE4  0100               	movlb	0	; () banked
  8286  002EE6  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8287  002EE8  0100               	movlb	0	; () banked
  8288  002EEA  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8289  002EEC  B4D8               	btfsc	status,2,c
  8290  002EEE  D03A               	goto	l893
  8291                           
  8292                           ; BSR set to: 0
  8293  002EF0  0E01               	movlw	1
  8294  002EF2  0100               	movlb	0	; () banked
  8295  002EF4  6F68               	movwf	___llmod@counter& (0+255),b
  8296  002EF6  D008               	goto	l5301
  8297  002EF8                     l5299:
  8298                           
  8299                           ; BSR set to: 0
  8300  002EF8  0100               	movlb	0	; () banked
  8301  002EFA  90D8               	bcf	status,0,c
  8302  002EFC  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8303  002EFE  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8304  002F00  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8305  002F02  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8306  002F04  0100               	movlb	0	; () banked
  8307  002F06  2B68               	incf	___llmod@counter& (0+255),f,b
  8308  002F08                     l5301:
  8309                           
  8310                           ; BSR set to: 0
  8311  002F08  0100               	movlb	0	; () banked
  8312  002F0A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8313  002F0C  D7F5               	goto	l5299
  8314  002F0E                     l5303:
  8315                           
  8316                           ; BSR set to: 0
  8317  002F0E  0100               	movlb	0	; () banked
  8318  002F10  5164               	movf	___llmod@divisor& (0+255),w,b
  8319  002F12  0100               	movlb	0	; () banked
  8320  002F14  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8321  002F16  0100               	movlb	0	; () banked
  8322  002F18  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8323  002F1A  0100               	movlb	0	; () banked
  8324  002F1C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8325  002F1E  0100               	movlb	0	; () banked
  8326  002F20  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8327  002F22  0100               	movlb	0	; () banked
  8328  002F24  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8329  002F26  0100               	movlb	0	; () banked
  8330  002F28  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8331  002F2A  0100               	movlb	0	; () banked
  8332  002F2C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8333  002F2E  A0D8               	btfss	status,0,c
  8334  002F30  D010               	goto	l5307
  8335                           
  8336                           ; BSR set to: 0
  8337  002F32  0100               	movlb	0	; () banked
  8338  002F34  5164               	movf	___llmod@divisor& (0+255),w,b
  8339  002F36  0100               	movlb	0	; () banked
  8340  002F38  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8341  002F3A  0100               	movlb	0	; () banked
  8342  002F3C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8343  002F3E  0100               	movlb	0	; () banked
  8344  002F40  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8345  002F42  0100               	movlb	0	; () banked
  8346  002F44  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8347  002F46  0100               	movlb	0	; () banked
  8348  002F48  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8349  002F4A  0100               	movlb	0	; () banked
  8350  002F4C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8351  002F4E  0100               	movlb	0	; () banked
  8352  002F50  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8353  002F52                     l5307:
  8354                           
  8355                           ; BSR set to: 0
  8356  002F52  0100               	movlb	0	; () banked
  8357  002F54  90D8               	bcf	status,0,c
  8358  002F56  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8359  002F58  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8360  002F5A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8361  002F5C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8362                           
  8363                           ; BSR set to: 0
  8364  002F5E  0100               	movlb	0	; () banked
  8365  002F60  2F68               	decfsz	___llmod@counter& (0+255),f,b
  8366  002F62  D7D5               	goto	l5303
  8367  002F64                     l893:
  8368                           
  8369                           ; BSR set to: 0
  8370  002F64  C060  F060         	movff	___llmod@dividend,?___llmod
  8371  002F68  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8372  002F6C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8373  002F70  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8374                           
  8375                           ; BSR set to: 0
  8376  002F74  0012               	return		;funcret
  8377  002F76                     __end_of___llmod:
  8378                           	opt stack 0
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postinc1	equ	0xFE6
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           fsr2h	equ	0xFDA
  8395                           fsr2l	equ	0xFD9
  8396                           status	equ	0xFD8
  8397                           
  8398 ;; *************** function ___lldiv *****************
  8399 ;; Defined at:
  8400 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  dividend        4    0[BANK0 ] unsigned long 
  8403 ;;  divisor         4    4[BANK0 ] unsigned long 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  quotient        4    8[BANK0 ] unsigned long 
  8406 ;;  counter         1   12[BANK0 ] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  4    0[BANK0 ] unsigned long 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8416 ;;      Params:         0       8       0       0
  8417 ;;      Locals:         0       5       0       0
  8418 ;;      Temps:          0       0       0       0
  8419 ;;      Totals:         0      13       0       0
  8420 ;;Total ram usage:       13 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    3
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_sprintf
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text25
  8431  002C32                     __ptext25:
  8432                           	opt stack 0
  8433  002C32                     ___lldiv:
  8434                           	opt stack 25
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;incstack = 0
  8438  002C32  0E00               	movlw	0
  8439  002C34  0100               	movlb	0	; () banked
  8440  002C36  6F68               	movwf	___lldiv@quotient& (0+255),b
  8441  002C38  0E00               	movlw	0
  8442  002C3A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8443  002C3C  0E00               	movlw	0
  8444  002C3E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8445  002C40  0E00               	movlw	0
  8446  002C42  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8447                           
  8448                           ; BSR set to: 0
  8449  002C44  0100               	movlb	0	; () banked
  8450  002C46  5164               	movf	___lldiv@divisor& (0+255),w,b
  8451  002C48  0100               	movlb	0	; () banked
  8452  002C4A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8453  002C4C  0100               	movlb	0	; () banked
  8454  002C4E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8455  002C50  0100               	movlb	0	; () banked
  8456  002C52  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8457  002C54  B4D8               	btfsc	status,2,c
  8458  002C56  D042               	goto	l883
  8459                           
  8460                           ; BSR set to: 0
  8461  002C58  0E01               	movlw	1
  8462  002C5A  0100               	movlb	0	; () banked
  8463  002C5C  6F6C               	movwf	___lldiv@counter& (0+255),b
  8464  002C5E  D008               	goto	l5281
  8465  002C60                     l5279:
  8466                           
  8467                           ; BSR set to: 0
  8468  002C60  0100               	movlb	0	; () banked
  8469  002C62  90D8               	bcf	status,0,c
  8470  002C64  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8471  002C66  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8472  002C68  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8473  002C6A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8474  002C6C  0100               	movlb	0	; () banked
  8475  002C6E  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8476  002C70                     l5281:
  8477                           
  8478                           ; BSR set to: 0
  8479  002C70  0100               	movlb	0	; () banked
  8480  002C72  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8481  002C74  D7F5               	goto	l5279
  8482  002C76                     l5283:
  8483                           
  8484                           ; BSR set to: 0
  8485  002C76  0100               	movlb	0	; () banked
  8486  002C78  90D8               	bcf	status,0,c
  8487  002C7A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8488  002C7C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8489  002C7E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8490  002C80  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8491                           
  8492                           ; BSR set to: 0
  8493  002C82  0100               	movlb	0	; () banked
  8494  002C84  5164               	movf	___lldiv@divisor& (0+255),w,b
  8495  002C86  0100               	movlb	0	; () banked
  8496  002C88  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8497  002C8A  0100               	movlb	0	; () banked
  8498  002C8C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8499  002C8E  0100               	movlb	0	; () banked
  8500  002C90  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8501  002C92  0100               	movlb	0	; () banked
  8502  002C94  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8503  002C96  0100               	movlb	0	; () banked
  8504  002C98  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8505  002C9A  0100               	movlb	0	; () banked
  8506  002C9C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8507  002C9E  0100               	movlb	0	; () banked
  8508  002CA0  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8509  002CA2  A0D8               	btfss	status,0,c
  8510  002CA4  D012               	goto	l5291
  8511                           
  8512                           ; BSR set to: 0
  8513  002CA6  0100               	movlb	0	; () banked
  8514  002CA8  5164               	movf	___lldiv@divisor& (0+255),w,b
  8515  002CAA  0100               	movlb	0	; () banked
  8516  002CAC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8517  002CAE  0100               	movlb	0	; () banked
  8518  002CB0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8519  002CB2  0100               	movlb	0	; () banked
  8520  002CB4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8521  002CB6  0100               	movlb	0	; () banked
  8522  002CB8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8523  002CBA  0100               	movlb	0	; () banked
  8524  002CBC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8525  002CBE  0100               	movlb	0	; () banked
  8526  002CC0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8527  002CC2  0100               	movlb	0	; () banked
  8528  002CC4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8529                           
  8530                           ; BSR set to: 0
  8531  002CC6  0100               	movlb	0	; () banked
  8532  002CC8  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8533  002CCA                     l5291:
  8534                           
  8535                           ; BSR set to: 0
  8536  002CCA  0100               	movlb	0	; () banked
  8537  002CCC  90D8               	bcf	status,0,c
  8538  002CCE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8539  002CD0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8540  002CD2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8541  002CD4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8542                           
  8543                           ; BSR set to: 0
  8544  002CD6  0100               	movlb	0	; () banked
  8545  002CD8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8546  002CDA  D7CD               	goto	l5283
  8547  002CDC                     l883:
  8548                           
  8549                           ; BSR set to: 0
  8550  002CDC  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8551  002CE0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8552  002CE4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8553  002CE8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8554                           
  8555                           ; BSR set to: 0
  8556  002CEC  0012               	return		;funcret
  8557  002CEE                     __end_of___lldiv:
  8558                           	opt stack 0
  8559                           tblptru	equ	0xFF8
  8560                           tblptrh	equ	0xFF7
  8561                           tblptrl	equ	0xFF6
  8562                           tablat	equ	0xFF5
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           postinc0	equ	0xFEE
  8567                           wreg	equ	0xFE8
  8568                           indf1	equ	0xFE7
  8569                           postinc1	equ	0xFE6
  8570                           fsr1h	equ	0xFE2
  8571                           fsr1l	equ	0xFE1
  8572                           indf2	equ	0xFDF
  8573                           postinc2	equ	0xFDE
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578 ;; *************** function ___fltol *****************
  8579 ;; Defined at:
  8580 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  f1              4   55[BANK0 ] unsigned long 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  exp1            1   64[BANK0 ] unsigned char 
  8585 ;;  sign1           1   63[BANK0 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  4   55[BANK0 ] long 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8595 ;;      Params:         0       4       0       0
  8596 ;;      Locals:         0       2       0       0
  8597 ;;      Temps:          0       4       0       0
  8598 ;;      Totals:         0      10       0       0
  8599 ;;Total ram usage:       10 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    3
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;;		_sprintf
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text26
  8611  00289C                     __ptext26:
  8612                           	opt stack 0
  8613  00289C                     ___fltol:
  8614                           	opt stack 27
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;incstack = 0
  8618  00289C  0100               	movlb	0	; () banked
  8619  00289E  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8620  0028A0  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8621  0028A2  0100               	movlb	0	; () banked
  8622  0028A4  6FA0               	movwf	___fltol@exp1& (0+255),b
  8623  0028A6  0100               	movlb	0	; () banked
  8624  0028A8  51A0               	movf	___fltol@exp1& (0+255),w,b
  8625  0028AA  A4D8               	btfss	status,2,c
  8626  0028AC  D00A               	goto	l5235
  8627                           
  8628                           ; BSR set to: 0
  8629  0028AE  0E00               	movlw	0
  8630  0028B0  0100               	movlb	0	; () banked
  8631  0028B2  6F97               	movwf	?___fltol& (0+255),b
  8632  0028B4  0E00               	movlw	0
  8633  0028B6  6F98               	movwf	(?___fltol+1)& (0+255),b
  8634  0028B8  0E00               	movlw	0
  8635  0028BA  6F99               	movwf	(?___fltol+2)& (0+255),b
  8636  0028BC  0E00               	movlw	0
  8637  0028BE  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8638                           
  8639                           ; BSR set to: 0
  8640  0028C0  0012               	return	
  8641  0028C2                     l5235:
  8642                           
  8643                           ; BSR set to: 0
  8644  0028C2  C097  F09B         	movff	___fltol@f1,??___fltol
  8645  0028C6  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  8646  0028CA  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  8647  0028CE  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  8648  0028D2  0E20               	movlw	32
  8649  0028D4  D006               	goto	u6140
  8650  0028D6                     u6145:
  8651  0028D6  0100               	movlb	0	; () banked
  8652  0028D8  90D8               	bcf	status,0,c
  8653  0028DA  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  8654  0028DC  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  8655  0028DE  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  8656  0028E0  339B               	rrcf	??___fltol& (0+255),f,b
  8657  0028E2                     u6140:
  8658  0028E2  2EE8               	decfsz	wreg,f,c
  8659  0028E4  D7F8               	goto	u6145
  8660  0028E6  0100               	movlb	0	; () banked
  8661  0028E8  519B               	movf	??___fltol& (0+255),w,b
  8662  0028EA  0100               	movlb	0	; () banked
  8663  0028EC  6F9F               	movwf	___fltol@sign1& (0+255),b
  8664                           
  8665                           ; BSR set to: 0
  8666  0028EE  0100               	movlb	0	; () banked
  8667  0028F0  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  8668                           
  8669                           ; BSR set to: 0
  8670  0028F2  0EFF               	movlw	255
  8671  0028F4  0100               	movlb	0	; () banked
  8672  0028F6  1797               	andwf	___fltol@f1& (0+255),f,b
  8673  0028F8  0EFF               	movlw	255
  8674  0028FA  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  8675  0028FC  0EFF               	movlw	255
  8676  0028FE  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  8677  002900  0E00               	movlw	0
  8678  002902  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8679                           
  8680                           ; BSR set to: 0
  8681  002904  0E96               	movlw	150
  8682  002906  0100               	movlb	0	; () banked
  8683  002908  5FA0               	subwf	___fltol@exp1& (0+255),f,b
  8684                           
  8685                           ; BSR set to: 0
  8686  00290A  0100               	movlb	0	; () banked
  8687  00290C  AFA0               	btfss	___fltol@exp1& (0+255),7,b
  8688  00290E  D01A               	goto	l5255
  8689                           
  8690                           ; BSR set to: 0
  8691  002910  0100               	movlb	0	; () banked
  8692  002912  51A0               	movf	___fltol@exp1& (0+255),w,b
  8693  002914  0A80               	xorlw	128
  8694  002916  0F97               	addlw	151
  8695  002918  B0D8               	btfsc	status,0,c
  8696  00291A  D00A               	goto	l5251
  8697                           
  8698                           ; BSR set to: 0
  8699  00291C  0E00               	movlw	0
  8700  00291E  0100               	movlb	0	; () banked
  8701  002920  6F97               	movwf	?___fltol& (0+255),b
  8702  002922  0E00               	movlw	0
  8703  002924  6F98               	movwf	(?___fltol+1)& (0+255),b
  8704  002926  0E00               	movlw	0
  8705  002928  6F99               	movwf	(?___fltol+2)& (0+255),b
  8706  00292A  0E00               	movlw	0
  8707  00292C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8708                           
  8709                           ; BSR set to: 0
  8710  00292E  0012               	return	
  8711  002930                     l5251:
  8712                           
  8713                           ; BSR set to: 0
  8714  002930  0100               	movlb	0	; () banked
  8715  002932  90D8               	bcf	status,0,c
  8716  002934  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8717  002936  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8718  002938  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8719  00293A  3397               	rrcf	___fltol@f1& (0+255),f,b
  8720                           
  8721                           ; BSR set to: 0
  8722  00293C  0100               	movlb	0	; () banked
  8723  00293E  3FA0               	incfsz	___fltol@exp1& (0+255),f,b
  8724  002940  D7F7               	goto	l5251
  8725                           
  8726                           ; BSR set to: 0
  8727  002942  D01B               	goto	l5265
  8728  002944                     l5255:
  8729                           
  8730                           ; BSR set to: 0
  8731  002944  0E1F               	movlw	31
  8732  002946  0100               	movlb	0	; () banked
  8733  002948  65A0               	cpfsgt	___fltol@exp1& (0+255),b
  8734  00294A  D012               	goto	l5263
  8735                           
  8736                           ; BSR set to: 0
  8737  00294C  0E00               	movlw	0
  8738  00294E  0100               	movlb	0	; () banked
  8739  002950  6F97               	movwf	?___fltol& (0+255),b
  8740  002952  0E00               	movlw	0
  8741  002954  6F98               	movwf	(?___fltol+1)& (0+255),b
  8742  002956  0E00               	movlw	0
  8743  002958  6F99               	movwf	(?___fltol+2)& (0+255),b
  8744  00295A  0E00               	movlw	0
  8745  00295C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8746                           
  8747                           ; BSR set to: 0
  8748  00295E  0012               	return	
  8749  002960                     l5261:
  8750                           
  8751                           ; BSR set to: 0
  8752  002960  0100               	movlb	0	; () banked
  8753  002962  90D8               	bcf	status,0,c
  8754  002964  3797               	rlcf	___fltol@f1& (0+255),f,b
  8755  002966  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8756  002968  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8757  00296A  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8758  00296C  0100               	movlb	0	; () banked
  8759  00296E  07A0               	decf	___fltol@exp1& (0+255),f,b
  8760  002970                     l5263:
  8761                           
  8762                           ; BSR set to: 0
  8763  002970  0100               	movlb	0	; () banked
  8764  002972  51A0               	movf	___fltol@exp1& (0+255),w,b
  8765  002974  0100               	movlb	0	; () banked
  8766  002976  A4D8               	btfss	status,2,c
  8767  002978  D7F3               	goto	l5261
  8768  00297A                     l5265:
  8769                           
  8770                           ; BSR set to: 0
  8771  00297A  0100               	movlb	0	; () banked
  8772  00297C  519F               	movf	___fltol@sign1& (0+255),w,b
  8773  00297E  0100               	movlb	0	; () banked
  8774  002980  B4D8               	btfsc	status,2,c
  8775  002982  D009               	goto	l5269
  8776                           
  8777                           ; BSR set to: 0
  8778  002984  0100               	movlb	0	; () banked
  8779  002986  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  8780  002988  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  8781  00298A  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  8782  00298C  6D97               	negf	___fltol@f1& (0+255),b
  8783  00298E  0E00               	movlw	0
  8784  002990  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8785  002992  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8786  002994  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8787  002996                     l5269:
  8788                           
  8789                           ; BSR set to: 0
  8790  002996  C097  F097         	movff	___fltol@f1,?___fltol
  8791  00299A  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  8792  00299E  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  8793  0029A2  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  8794  0029A6  0012               	return	
  8795  0029A8                     __end_of___fltol:
  8796                           	opt stack 0
  8797                           tblptru	equ	0xFF8
  8798                           tblptrh	equ	0xFF7
  8799                           tblptrl	equ	0xFF6
  8800                           tablat	equ	0xFF5
  8801                           prodh	equ	0xFF4
  8802                           prodl	equ	0xFF3
  8803                           intcon	equ	0xFF2
  8804                           postinc0	equ	0xFEE
  8805                           wreg	equ	0xFE8
  8806                           indf1	equ	0xFE7
  8807                           postinc1	equ	0xFE6
  8808                           fsr1h	equ	0xFE2
  8809                           fsr1l	equ	0xFE1
  8810                           indf2	equ	0xFDF
  8811                           postinc2	equ	0xFDE
  8812                           fsr2h	equ	0xFDA
  8813                           fsr2l	equ	0xFD9
  8814                           status	equ	0xFD8
  8815                           
  8816 ;; *************** function ___flsub *****************
  8817 ;; Defined at:
  8818 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  b               4   79[BANK0 ] long 
  8821 ;;  a               4   83[BANK0 ] long 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  4   79[BANK0 ] long 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8833 ;;      Params:         0       8       0       0
  8834 ;;      Locals:         0       0       0       0
  8835 ;;      Temps:          0       0       0       0
  8836 ;;      Totals:         0       8       0       0
  8837 ;;Total ram usage:        8 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    4
  8840 ;; This function calls:
  8841 ;;		___fladd
  8842 ;; This function is called by:
  8843 ;;		_sprintf
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text27
  8848  0031B6                     __ptext27:
  8849                           	opt stack 0
  8850  0031B6                     ___flsub:
  8851                           	opt stack 24
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;incstack = 0
  8855  0031B6  0E00               	movlw	0
  8856  0031B8  0100               	movlb	0	; () banked
  8857  0031BA  1BB3               	xorwf	___flsub@a& (0+255),f,b
  8858  0031BC  0E00               	movlw	0
  8859  0031BE  1BB4               	xorwf	(___flsub@a+1)& (0+255),f,b
  8860  0031C0  0E00               	movlw	0
  8861  0031C2  1BB5               	xorwf	(___flsub@a+2)& (0+255),f,b
  8862  0031C4  0E80               	movlw	128
  8863  0031C6  1BB6               	xorwf	(___flsub@a+3)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 0
  8866  0031C8  C0AF  F09B         	movff	___flsub@b,___fladd@b
  8867  0031CC  C0B0  F09C         	movff	___flsub@b+1,___fladd@b+1
  8868  0031D0  C0B1  F09D         	movff	___flsub@b+2,___fladd@b+2
  8869  0031D4  C0B2  F09E         	movff	___flsub@b+3,___fladd@b+3
  8870  0031D8  C0B3  F09F         	movff	___flsub@a,___fladd@a
  8871  0031DC  C0B4  F0A0         	movff	___flsub@a+1,___fladd@a+1
  8872  0031E0  C0B5  F0A1         	movff	___flsub@a+2,___fladd@a+2
  8873  0031E4  C0B6  F0A2         	movff	___flsub@a+3,___fladd@a+3
  8874  0031E8  ECFF  F006         	call	___fladd	;wreg free
  8875  0031EC  C09B  F0AF         	movff	?___fladd,?___flsub
  8876  0031F0  C09C  F0B0         	movff	?___fladd+1,?___flsub+1
  8877  0031F4  C09D  F0B1         	movff	?___fladd+2,?___flsub+2
  8878  0031F8  C09E  F0B2         	movff	?___fladd+3,?___flsub+3
  8879  0031FC  0012               	return	
  8880  0031FE                     __end_of___flsub:
  8881                           	opt stack 0
  8882                           tblptru	equ	0xFF8
  8883                           tblptrh	equ	0xFF7
  8884                           tblptrl	equ	0xFF6
  8885                           tablat	equ	0xFF5
  8886                           prodh	equ	0xFF4
  8887                           prodl	equ	0xFF3
  8888                           intcon	equ	0xFF2
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           indf1	equ	0xFE7
  8892                           postinc1	equ	0xFE6
  8893                           fsr1h	equ	0xFE2
  8894                           fsr1l	equ	0xFE1
  8895                           indf2	equ	0xFDF
  8896                           postinc2	equ	0xFDE
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function ___fladd *****************
  8902 ;; Defined at:
  8903 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  b               4   59[BANK0 ] long 
  8906 ;;  a               4   63[BANK0 ] long 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  grs             1   78[BANK0 ] unsigned char 
  8909 ;;  bexp            1   77[BANK0 ] unsigned char 
  8910 ;;  aexp            1   76[BANK0 ] unsigned char 
  8911 ;;  signs           1   75[BANK0 ] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  4   59[BANK0 ] unsigned char 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8921 ;;      Params:         0       8       0       0
  8922 ;;      Locals:         0       4       0       0
  8923 ;;      Temps:          0       8       0       0
  8924 ;;      Totals:         0      20       0       0
  8925 ;;Total ram usage:       20 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    3
  8928 ;; This function calls:
  8929 ;;		Nothing
  8930 ;; This function is called by:
  8931 ;;		_sprintf
  8932 ;;		___flsub
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text28
  8937  000DFE                     __ptext28:
  8938                           	opt stack 0
  8939  000DFE                     ___fladd:
  8940                           	opt stack 24
  8941                           
  8942                           ;incstack = 0
  8943  000DFE  0100               	movlb	0	; () banked
  8944  000E00  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8945  000E02  0B80               	andlw	128
  8946  000E04  0100               	movlb	0	; () banked
  8947  000E06  6FAB               	movwf	___fladd@signs& (0+255),b
  8948  000E08  0100               	movlb	0	; () banked
  8949  000E0A  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8950  000E0C  259E               	addwf	(___fladd@b+3)& (0+255),w,b
  8951  000E0E  0100               	movlb	0	; () banked
  8952  000E10  6FAD               	movwf	___fladd@bexp& (0+255),b
  8953                           
  8954                           ; BSR set to: 0
  8955  000E12  0100               	movlb	0	; () banked
  8956  000E14  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  8957  000E16  D002               	goto	l4567
  8958                           
  8959                           ; BSR set to: 0
  8960  000E18  0100               	movlb	0	; () banked
  8961  000E1A  81AD               	bsf	___fladd@bexp& (0+255),0,b
  8962  000E1C                     l4567:
  8963                           
  8964                           ; BSR set to: 0
  8965  000E1C  0100               	movlb	0	; () banked
  8966  000E1E  51AD               	movf	___fladd@bexp& (0+255),w,b
  8967  000E20  0100               	movlb	0	; () banked
  8968  000E22  B4D8               	btfsc	status,2,c
  8969  000E24  D012               	goto	l4577
  8970                           
  8971                           ; BSR set to: 0
  8972  000E26  0100               	movlb	0	; () banked
  8973  000E28  29AD               	incf	___fladd@bexp& (0+255),w,b
  8974  000E2A  A4D8               	btfss	status,2,c
  8975  000E2C  D009               	goto	l4573
  8976                           
  8977                           ; BSR set to: 0
  8978  000E2E  0E00               	movlw	0
  8979  000E30  0100               	movlb	0	; () banked
  8980  000E32  6F9B               	movwf	___fladd@b& (0+255),b
  8981  000E34  0E00               	movlw	0
  8982  000E36  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  8983  000E38  0E00               	movlw	0
  8984  000E3A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  8985  000E3C  0E00               	movlw	0
  8986  000E3E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  8987  000E40                     l4573:
  8988                           
  8989                           ; BSR set to: 0
  8990  000E40  0100               	movlb	0	; () banked
  8991  000E42  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  8992                           
  8993                           ; BSR set to: 0
  8994  000E44  0E00               	movlw	0
  8995  000E46  0100               	movlb	0	; () banked
  8996  000E48  D008               	goto	L9
  8997  000E4A                     l4577:
  8998                           
  8999                           ; BSR set to: 0
  9000  000E4A  0E00               	movlw	0
  9001  000E4C  0100               	movlb	0	; () banked
  9002  000E4E  6F9B               	movwf	___fladd@b& (0+255),b
  9003  000E50  0E00               	movlw	0
  9004  000E52  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9005  000E54  0E00               	movlw	0
  9006  000E56  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9007  000E58  0E00               	movlw	0
  9008  000E5A                     L9:
  9009  000E5A  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           
  9013                           ; BSR set to: 0
  9014  000E5C  0100               	movlb	0	; () banked
  9015  000E5E  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9016  000E60  0B80               	andlw	128
  9017  000E62  0100               	movlb	0	; () banked
  9018  000E64  6FAC               	movwf	___fladd@aexp& (0+255),b
  9019                           
  9020                           ; BSR set to: 0
  9021  000E66  0100               	movlb	0	; () banked
  9022  000E68  51AB               	movf	___fladd@signs& (0+255),w,b
  9023  000E6A  0100               	movlb	0	; () banked
  9024  000E6C  19AC               	xorwf	___fladd@aexp& (0+255),w,b
  9025  000E6E  B4D8               	btfsc	status,2,c
  9026  000E70  D002               	goto	l4585
  9027                           
  9028                           ; BSR set to: 0
  9029  000E72  0100               	movlb	0	; () banked
  9030  000E74  8DAB               	bsf	___fladd@signs& (0+255),6,b
  9031  000E76                     l4585:
  9032                           
  9033                           ; BSR set to: 0
  9034  000E76  0100               	movlb	0	; () banked
  9035  000E78  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9036  000E7A  25A2               	addwf	(___fladd@a+3)& (0+255),w,b
  9037  000E7C  0100               	movlb	0	; () banked
  9038  000E7E  6FAC               	movwf	___fladd@aexp& (0+255),b
  9039                           
  9040                           ; BSR set to: 0
  9041  000E80  0100               	movlb	0	; () banked
  9042  000E82  AFA1               	btfss	(___fladd@a+2)& (0+255),7,b
  9043  000E84  D002               	goto	l4591
  9044                           
  9045                           ; BSR set to: 0
  9046  000E86  0100               	movlb	0	; () banked
  9047  000E88  81AC               	bsf	___fladd@aexp& (0+255),0,b
  9048  000E8A                     l4591:
  9049                           
  9050                           ; BSR set to: 0
  9051  000E8A  0100               	movlb	0	; () banked
  9052  000E8C  51AC               	movf	___fladd@aexp& (0+255),w,b
  9053  000E8E  0100               	movlb	0	; () banked
  9054  000E90  B4D8               	btfsc	status,2,c
  9055  000E92  D012               	goto	l4601
  9056                           
  9057                           ; BSR set to: 0
  9058  000E94  0100               	movlb	0	; () banked
  9059  000E96  29AC               	incf	___fladd@aexp& (0+255),w,b
  9060  000E98  A4D8               	btfss	status,2,c
  9061  000E9A  D009               	goto	l4597
  9062                           
  9063                           ; BSR set to: 0
  9064  000E9C  0E00               	movlw	0
  9065  000E9E  0100               	movlb	0	; () banked
  9066  000EA0  6F9F               	movwf	___fladd@a& (0+255),b
  9067  000EA2  0E00               	movlw	0
  9068  000EA4  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9069  000EA6  0E00               	movlw	0
  9070  000EA8  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9071  000EAA  0E00               	movlw	0
  9072  000EAC  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9073  000EAE                     l4597:
  9074                           
  9075                           ; BSR set to: 0
  9076  000EAE  0100               	movlb	0	; () banked
  9077  000EB0  8FA1               	bsf	(___fladd@a+2)& (0+255),7,b
  9078                           
  9079                           ; BSR set to: 0
  9080  000EB2  0E00               	movlw	0
  9081  000EB4  0100               	movlb	0	; () banked
  9082  000EB6  D008               	goto	L10
  9083  000EB8                     l4601:
  9084                           
  9085                           ; BSR set to: 0
  9086  000EB8  0E00               	movlw	0
  9087  000EBA  0100               	movlb	0	; () banked
  9088  000EBC  6F9F               	movwf	___fladd@a& (0+255),b
  9089  000EBE  0E00               	movlw	0
  9090  000EC0  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9091  000EC2  0E00               	movlw	0
  9092  000EC4  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9093  000EC6  0E00               	movlw	0
  9094  000EC8                     L10:
  9095  000EC8  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9096                           
  9097                           ; BSR set to: 0
  9098                           
  9099                           ; BSR set to: 0
  9100  000ECA  0100               	movlb	0	; () banked
  9101  000ECC  51AD               	movf	___fladd@bexp& (0+255),w,b
  9102  000ECE  0100               	movlb	0	; () banked
  9103  000ED0  5DAC               	subwf	___fladd@aexp& (0+255),w,b
  9104  000ED2  B0D8               	btfsc	status,0,c
  9105  000ED4  D024               	goto	l4639
  9106                           
  9107                           ; BSR set to: 0
  9108  000ED6  0100               	movlb	0	; () banked
  9109  000ED8  ADAB               	btfss	___fladd@signs& (0+255),6,b
  9110  000EDA  D003               	goto	l4609
  9111                           
  9112                           ; BSR set to: 0
  9113  000EDC  0E80               	movlw	128
  9114  000EDE  0100               	movlb	0	; () banked
  9115  000EE0  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9116  000EE2                     l4609:
  9117                           
  9118                           ; BSR set to: 0
  9119  000EE2  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
  9120                           
  9121                           ; BSR set to: 0
  9122  000EE6  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9123                           
  9124                           ; BSR set to: 0
  9125  000EEA  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
  9126                           
  9127                           ; BSR set to: 0
  9128  000EEE  C09B  F0AE         	movff	___fladd@b,___fladd@grs
  9129                           
  9130                           ; BSR set to: 0
  9131  000EF2  C09F  F09B         	movff	___fladd@a,___fladd@b
  9132                           
  9133                           ; BSR set to: 0
  9134  000EF6  C0AE  F09F         	movff	___fladd@grs,___fladd@a
  9135                           
  9136                           ; BSR set to: 0
  9137  000EFA  C09C  F0AE         	movff	___fladd@b+1,___fladd@grs
  9138                           
  9139                           ; BSR set to: 0
  9140  000EFE  C0A0  F09C         	movff	___fladd@a+1,___fladd@b+1
  9141                           
  9142                           ; BSR set to: 0
  9143  000F02  C0AE  F0A0         	movff	___fladd@grs,___fladd@a+1
  9144                           
  9145                           ; BSR set to: 0
  9146  000F06  C09D  F0AE         	movff	___fladd@b+2,___fladd@grs
  9147                           
  9148                           ; BSR set to: 0
  9149  000F0A  C0A1  F09D         	movff	___fladd@a+2,___fladd@b+2
  9150                           
  9151                           ; BSR set to: 0
  9152  000F0E  C0AE  F0A1         	movff	___fladd@grs,___fladd@a+2
  9153                           
  9154                           ; BSR set to: 0
  9155  000F12  C09E  F0AE         	movff	___fladd@b+3,___fladd@grs
  9156                           
  9157                           ; BSR set to: 0
  9158  000F16  C0A2  F09E         	movff	___fladd@a+3,___fladd@b+3
  9159                           
  9160                           ; BSR set to: 0
  9161  000F1A  C0AE  F0A2         	movff	___fladd@grs,___fladd@a+3
  9162  000F1E                     l4639:
  9163                           
  9164                           ; BSR set to: 0
  9165  000F1E  0E00               	movlw	0
  9166  000F20  0100               	movlb	0	; () banked
  9167  000F22  6FAE               	movwf	___fladd@grs& (0+255),b
  9168                           
  9169                           ; BSR set to: 0
  9170  000F24  0100               	movlb	0	; () banked
  9171  000F26  51AD               	movf	___fladd@bexp& (0+255),w,b
  9172  000F28  0100               	movlb	0	; () banked
  9173  000F2A  6FA3               	movwf	??___fladd& (0+255),b
  9174  000F2C  6BA4               	clrf	(??___fladd+1)& (0+255),b
  9175  000F2E  0100               	movlb	0	; () banked
  9176  000F30  1FA3               	comf	??___fladd& (0+255),f,b
  9177  000F32  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9178  000F34  4BA3               	infsnz	??___fladd& (0+255),f,b
  9179  000F36  2BA4               	incf	(??___fladd+1)& (0+255),f,b
  9180  000F38  0100               	movlb	0	; () banked
  9181  000F3A  51AC               	movf	___fladd@aexp& (0+255),w,b
  9182  000F3C  0100               	movlb	0	; () banked
  9183  000F3E  6FA5               	movwf	(??___fladd+2)& (0+255),b
  9184  000F40  6BA6               	clrf	(??___fladd+3)& (0+255),b
  9185  000F42  0100               	movlb	0	; () banked
  9186  000F44  51A3               	movf	??___fladd& (0+255),w,b
  9187  000F46  0100               	movlb	0	; () banked
  9188  000F48  27A5               	addwf	(??___fladd+2)& (0+255),f,b
  9189  000F4A  0100               	movlb	0	; () banked
  9190  000F4C  51A4               	movf	(??___fladd+1)& (0+255),w,b
  9191  000F4E  0100               	movlb	0	; () banked
  9192  000F50  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9193  000F52  0100               	movlb	0	; () banked
  9194  000F54  BFA6               	btfsc	(??___fladd+3)& (0+255),7,b
  9195  000F56  D03D               	goto	l978
  9196  000F58  0100               	movlb	0	; () banked
  9197  000F5A  51A6               	movf	(??___fladd+3)& (0+255),w,b
  9198  000F5C  E105               	bnz	u5190
  9199  000F5E  0E1A               	movlw	26
  9200  000F60  0100               	movlb	0	; () banked
  9201  000F62  5DA5               	subwf	(??___fladd+2)& (0+255),w,b
  9202  000F64  A0D8               	btfss	status,0,c
  9203  000F66  D035               	goto	l978
  9204  000F68                     u5190:
  9205                           
  9206                           ; BSR set to: 0
  9207  000F68  0100               	movlb	0	; () banked
  9208  000F6A  519B               	movf	___fladd@b& (0+255),w,b
  9209  000F6C  0100               	movlb	0	; () banked
  9210  000F6E  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9211  000F70  0100               	movlb	0	; () banked
  9212  000F72  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9213  000F74  0100               	movlb	0	; () banked
  9214  000F76  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9215  000F78  B4D8               	btfsc	status,2,c
  9216  000F7A  D002               	goto	u5200
  9217  000F7C  0E01               	movlw	1
  9218  000F7E  D001               	goto	u5210
  9219  000F80                     u5200:
  9220  000F80  0E00               	movlw	0
  9221  000F82                     u5210:
  9222  000F82  0100               	movlb	0	; () banked
  9223  000F84  6FAE               	movwf	___fladd@grs& (0+255),b
  9224                           
  9225                           ; BSR set to: 0
  9226  000F86  0E00               	movlw	0
  9227  000F88  0100               	movlb	0	; () banked
  9228  000F8A  6F9B               	movwf	___fladd@b& (0+255),b
  9229  000F8C  0E00               	movlw	0
  9230  000F8E  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9231  000F90  0E00               	movlw	0
  9232  000F92  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9233  000F94  0E00               	movlw	0
  9234  000F96  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9235                           
  9236                           ; BSR set to: 0
  9237  000F98  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9238  000F9C  D020               	goto	l977
  9239  000F9E                     l979:
  9240                           
  9241                           ; BSR set to: 0
  9242  000F9E  0100               	movlb	0	; () banked
  9243  000FA0  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9244  000FA2  D007               	goto	l4651
  9245                           
  9246                           ; BSR set to: 0
  9247  000FA4  0100               	movlb	0	; () banked
  9248  000FA6  90D8               	bcf	status,0,c
  9249  000FA8  31AE               	rrcf	___fladd@grs& (0+255),w,b
  9250  000FAA  0901               	iorlw	1
  9251  000FAC  0100               	movlb	0	; () banked
  9252  000FAE  6FAE               	movwf	___fladd@grs& (0+255),b
  9253  000FB0  D003               	goto	l4653
  9254  000FB2                     l4651:
  9255                           
  9256                           ; BSR set to: 0
  9257  000FB2  0100               	movlb	0	; () banked
  9258  000FB4  90D8               	bcf	status,0,c
  9259  000FB6  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9260  000FB8                     l4653:
  9261                           
  9262                           ; BSR set to: 0
  9263  000FB8  0100               	movlb	0	; () banked
  9264  000FBA  A19B               	btfss	___fladd@b& (0+255),0,b
  9265  000FBC  D002               	goto	l4657
  9266                           
  9267                           ; BSR set to: 0
  9268  000FBE  0100               	movlb	0	; () banked
  9269  000FC0  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9270  000FC2                     l4657:
  9271                           
  9272                           ; BSR set to: 0
  9273  000FC2  0100               	movlb	0	; () banked
  9274  000FC4  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9275  000FC6  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9276  000FC8  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9277  000FCA  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9278  000FCC  339B               	rrcf	___fladd@b& (0+255),f,b
  9279                           
  9280                           ; BSR set to: 0
  9281  000FCE  0100               	movlb	0	; () banked
  9282  000FD0  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9283  000FD2                     l978:
  9284                           
  9285                           ; BSR set to: 0
  9286  000FD2  0100               	movlb	0	; () banked
  9287  000FD4  51AC               	movf	___fladd@aexp& (0+255),w,b
  9288  000FD6  0100               	movlb	0	; () banked
  9289  000FD8  5DAD               	subwf	___fladd@bexp& (0+255),w,b
  9290  000FDA  A0D8               	btfss	status,0,c
  9291  000FDC  D7E0               	goto	l979
  9292  000FDE                     l977:
  9293                           
  9294                           ; BSR set to: 0
  9295  000FDE  0100               	movlb	0	; () banked
  9296  000FE0  BDAB               	btfsc	___fladd@signs& (0+255),6,b
  9297  000FE2  D03F               	goto	l4685
  9298                           
  9299                           ; BSR set to: 0
  9300  000FE4  0100               	movlb	0	; () banked
  9301  000FE6  51AD               	movf	___fladd@bexp& (0+255),w,b
  9302  000FE8  0100               	movlb	0	; () banked
  9303  000FEA  A4D8               	btfss	status,2,c
  9304  000FEC  D00A               	goto	l4667
  9305                           
  9306                           ; BSR set to: 0
  9307  000FEE  0E00               	movlw	0
  9308  000FF0  0100               	movlb	0	; () banked
  9309  000FF2  6F9B               	movwf	?___fladd& (0+255),b
  9310  000FF4  0E00               	movlw	0
  9311  000FF6  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9312  000FF8  0E00               	movlw	0
  9313  000FFA  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9314  000FFC  0E00               	movlw	0
  9315  000FFE  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318  001000  0012               	return	
  9319  001002                     l4667:
  9320                           
  9321                           ; BSR set to: 0
  9322  001002  0100               	movlb	0	; () banked
  9323  001004  519F               	movf	___fladd@a& (0+255),w,b
  9324  001006  0100               	movlb	0	; () banked
  9325  001008  279B               	addwf	___fladd@b& (0+255),f,b
  9326  00100A  0100               	movlb	0	; () banked
  9327  00100C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9328  00100E  0100               	movlb	0	; () banked
  9329  001010  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9330  001012  0100               	movlb	0	; () banked
  9331  001014  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9332  001016  0100               	movlb	0	; () banked
  9333  001018  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9334  00101A  0100               	movlb	0	; () banked
  9335  00101C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9336  00101E  0100               	movlb	0	; () banked
  9337  001020  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9338                           
  9339                           ; BSR set to: 0
  9340  001022  0100               	movlb	0	; () banked
  9341  001024  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9342  001026  D0CC               	goto	l4721
  9343                           
  9344                           ; BSR set to: 0
  9345  001028  0100               	movlb	0	; () banked
  9346  00102A  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9347  00102C  D009               	goto	l4675
  9348                           
  9349                           ; BSR set to: 0
  9350  00102E  0100               	movlb	0	; () banked
  9351  001030  90D8               	bcf	status,0,c
  9352  001032  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9353  001034  0100               	movlb	0	; () banked
  9354  001036  51AE               	movf	___fladd@grs& (0+255),w,b
  9355  001038  0901               	iorlw	1
  9356  00103A  0100               	movlb	0	; () banked
  9357  00103C  6FAE               	movwf	___fladd@grs& (0+255),b
  9358  00103E  D003               	goto	l4677
  9359  001040                     l4675:
  9360                           
  9361                           ; BSR set to: 0
  9362  001040  0100               	movlb	0	; () banked
  9363  001042  90D8               	bcf	status,0,c
  9364  001044  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9365  001046                     l4677:
  9366                           
  9367                           ; BSR set to: 0
  9368  001046  0100               	movlb	0	; () banked
  9369  001048  A19B               	btfss	___fladd@b& (0+255),0,b
  9370  00104A  D002               	goto	l4681
  9371                           
  9372                           ; BSR set to: 0
  9373  00104C  0100               	movlb	0	; () banked
  9374  00104E  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9375  001050                     l4681:
  9376                           
  9377                           ; BSR set to: 0
  9378  001050  0100               	movlb	0	; () banked
  9379  001052  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9380  001054  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9381  001056  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9382  001058  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9383  00105A  339B               	rrcf	___fladd@b& (0+255),f,b
  9384                           
  9385                           ; BSR set to: 0
  9386  00105C  0100               	movlb	0	; () banked
  9387  00105E  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390  001060  D0AF               	goto	l4721
  9391  001062                     l4685:
  9392                           
  9393                           ; BSR set to: 0
  9394  001062  0100               	movlb	0	; () banked
  9395  001064  519F               	movf	___fladd@a& (0+255),w,b
  9396  001066  0100               	movlb	0	; () banked
  9397  001068  5D9B               	subwf	___fladd@b& (0+255),w,b
  9398  00106A  0100               	movlb	0	; () banked
  9399  00106C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9400  00106E  0100               	movlb	0	; () banked
  9401  001070  599C               	subwfb	(___fladd@b+1)& (0+255),w,b
  9402  001072  0100               	movlb	0	; () banked
  9403  001074  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9404  001076  0100               	movlb	0	; () banked
  9405  001078  599D               	subwfb	(___fladd@b+2)& (0+255),w,b
  9406  00107A  0100               	movlb	0	; () banked
  9407  00107C  519E               	movf	(___fladd@b+3)& (0+255),w,b
  9408  00107E  0A80               	xorlw	128
  9409  001080  0100               	movlb	0	; () banked
  9410  001082  6FA3               	movwf	??___fladd& (0+255),b
  9411  001084  0100               	movlb	0	; () banked
  9412  001086  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9413  001088  0A80               	xorlw	128
  9414  00108A  0100               	movlb	0	; () banked
  9415  00108C  59A3               	subwfb	??___fladd& (0+255),w,b
  9416  00108E  B0D8               	btfsc	status,0,c
  9417  001090  D050               	goto	l4695
  9418                           
  9419                           ; BSR set to: 0
  9420  001092  C09B  F0A3         	movff	___fladd@b,??___fladd
  9421  001096  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9422  00109A  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9423  00109E  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9424  0010A2  0100               	movlb	0	; () banked
  9425  0010A4  1FA3               	comf	??___fladd& (0+255),f,b
  9426  0010A6  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9427  0010A8  1FA5               	comf	(??___fladd+2)& (0+255),f,b
  9428  0010AA  1FA6               	comf	(??___fladd+3)& (0+255),f,b
  9429  0010AC  2BA3               	incf	??___fladd& (0+255),f,b
  9430  0010AE  0E00               	movlw	0
  9431  0010B0  23A4               	addwfc	(??___fladd+1)& (0+255),f,b
  9432  0010B2  23A5               	addwfc	(??___fladd+2)& (0+255),f,b
  9433  0010B4  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9434  0010B6  0100               	movlb	0	; () banked
  9435  0010B8  519F               	movf	___fladd@a& (0+255),w,b
  9436  0010BA  0100               	movlb	0	; () banked
  9437  0010BC  25A3               	addwf	??___fladd& (0+255),w,b
  9438  0010BE  0100               	movlb	0	; () banked
  9439  0010C0  6FA7               	movwf	(??___fladd+4)& (0+255),b
  9440  0010C2  0100               	movlb	0	; () banked
  9441  0010C4  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9442  0010C6  0100               	movlb	0	; () banked
  9443  0010C8  21A4               	addwfc	(??___fladd+1)& (0+255),w,b
  9444  0010CA  0100               	movlb	0	; () banked
  9445  0010CC  6FA8               	movwf	(??___fladd+5)& (0+255),b
  9446  0010CE  0100               	movlb	0	; () banked
  9447  0010D0  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9448  0010D2  0100               	movlb	0	; () banked
  9449  0010D4  21A5               	addwfc	(??___fladd+2)& (0+255),w,b
  9450  0010D6  0100               	movlb	0	; () banked
  9451  0010D8  6FA9               	movwf	(??___fladd+6)& (0+255),b
  9452  0010DA  0100               	movlb	0	; () banked
  9453  0010DC  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9454  0010DE  0100               	movlb	0	; () banked
  9455  0010E0  21A6               	addwfc	(??___fladd+3)& (0+255),w,b
  9456  0010E2  0100               	movlb	0	; () banked
  9457  0010E4  6FAA               	movwf	(??___fladd+7)& (0+255),b
  9458  0010E6  0EFF               	movlw	255
  9459  0010E8  0100               	movlb	0	; () banked
  9460  0010EA  25A7               	addwf	(??___fladd+4)& (0+255),w,b
  9461  0010EC  0100               	movlb	0	; () banked
  9462  0010EE  6F9B               	movwf	___fladd@b& (0+255),b
  9463  0010F0  0EFF               	movlw	255
  9464  0010F2  0100               	movlb	0	; () banked
  9465  0010F4  21A8               	addwfc	(??___fladd+5)& (0+255),w,b
  9466  0010F6  0100               	movlb	0	; () banked
  9467  0010F8  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9468  0010FA  0EFF               	movlw	255
  9469  0010FC  0100               	movlb	0	; () banked
  9470  0010FE  21A9               	addwfc	(??___fladd+6)& (0+255),w,b
  9471  001100  0100               	movlb	0	; () banked
  9472  001102  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9473  001104  0EFF               	movlw	255
  9474  001106  0100               	movlb	0	; () banked
  9475  001108  21AA               	addwfc	(??___fladd+7)& (0+255),w,b
  9476  00110A  0100               	movlb	0	; () banked
  9477  00110C  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9478  00110E  0E80               	movlw	128
  9479  001110  0100               	movlb	0	; () banked
  9480  001112  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9481                           
  9482                           ; BSR set to: 0
  9483  001114  0100               	movlb	0	; () banked
  9484  001116  6DAE               	negf	___fladd@grs& (0+255),b
  9485                           
  9486                           ; BSR set to: 0
  9487  001118  0100               	movlb	0	; () banked
  9488  00111A  51AE               	movf	___fladd@grs& (0+255),w,b
  9489  00111C  0100               	movlb	0	; () banked
  9490  00111E  A4D8               	btfss	status,2,c
  9491  001120  D018               	goto	l994
  9492                           
  9493                           ; BSR set to: 0
  9494  001122  0E01               	movlw	1
  9495  001124  0100               	movlb	0	; () banked
  9496  001126  279B               	addwf	___fladd@b& (0+255),f,b
  9497  001128  0E00               	movlw	0
  9498  00112A  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9499  00112C  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9500  00112E  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9501                           
  9502                           ; BSR set to: 0
  9503  001130  D010               	goto	l994
  9504  001132                     l4695:
  9505                           
  9506                           ; BSR set to: 0
  9507  001132  0100               	movlb	0	; () banked
  9508  001134  519F               	movf	___fladd@a& (0+255),w,b
  9509  001136  0100               	movlb	0	; () banked
  9510  001138  5F9B               	subwf	___fladd@b& (0+255),f,b
  9511  00113A  0100               	movlb	0	; () banked
  9512  00113C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9513  00113E  0100               	movlb	0	; () banked
  9514  001140  5B9C               	subwfb	(___fladd@b+1)& (0+255),f,b
  9515  001142  0100               	movlb	0	; () banked
  9516  001144  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9517  001146  0100               	movlb	0	; () banked
  9518  001148  5B9D               	subwfb	(___fladd@b+2)& (0+255),f,b
  9519  00114A  0100               	movlb	0	; () banked
  9520  00114C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9521  00114E  0100               	movlb	0	; () banked
  9522  001150  5B9E               	subwfb	(___fladd@b+3)& (0+255),f,b
  9523  001152                     l994:
  9524                           
  9525                           ; BSR set to: 0
  9526  001152  0100               	movlb	0	; () banked
  9527  001154  519B               	movf	___fladd@b& (0+255),w,b
  9528  001156  0100               	movlb	0	; () banked
  9529  001158  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9530  00115A  0100               	movlb	0	; () banked
  9531  00115C  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9532  00115E  0100               	movlb	0	; () banked
  9533  001160  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9534  001162  A4D8               	btfss	status,2,c
  9535  001164  D02A               	goto	l4719
  9536                           
  9537                           ; BSR set to: 0
  9538  001166  0100               	movlb	0	; () banked
  9539  001168  51AE               	movf	___fladd@grs& (0+255),w,b
  9540  00116A  0100               	movlb	0	; () banked
  9541  00116C  A4D8               	btfss	status,2,c
  9542  00116E  D025               	goto	l4719
  9543                           
  9544                           ; BSR set to: 0
  9545  001170  0E00               	movlw	0
  9546  001172  0100               	movlb	0	; () banked
  9547  001174  6F9B               	movwf	?___fladd& (0+255),b
  9548  001176  0E00               	movlw	0
  9549  001178  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9550  00117A  0E00               	movlw	0
  9551  00117C  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9552  00117E  0E00               	movlw	0
  9553  001180  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9554                           
  9555                           ; BSR set to: 0
  9556  001182  0012               	return	
  9557  001184                     l4703:
  9558                           
  9559                           ; BSR set to: 0
  9560  001184  0100               	movlb	0	; () banked
  9561  001186  90D8               	bcf	status,0,c
  9562  001188  379B               	rlcf	___fladd@b& (0+255),f,b
  9563  00118A  379C               	rlcf	(___fladd@b+1)& (0+255),f,b
  9564  00118C  379D               	rlcf	(___fladd@b+2)& (0+255),f,b
  9565  00118E  379E               	rlcf	(___fladd@b+3)& (0+255),f,b
  9566                           
  9567                           ; BSR set to: 0
  9568  001190  0100               	movlb	0	; () banked
  9569  001192  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9570  001194  D002               	goto	l4709
  9571                           
  9572                           ; BSR set to: 0
  9573  001196  0100               	movlb	0	; () banked
  9574  001198  819B               	bsf	___fladd@b& (0+255),0,b
  9575  00119A                     l4709:
  9576                           
  9577                           ; BSR set to: 0
  9578  00119A  0100               	movlb	0	; () banked
  9579  00119C  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9580  00119E  D003               	goto	l4713
  9581                           
  9582                           ; BSR set to: 0
  9583  0011A0  80D8               	bsf	status,0,c
  9584  0011A2  0100               	movlb	0	; () banked
  9585  0011A4  D002               	goto	L11
  9586  0011A6                     l4713:
  9587                           
  9588                           ; BSR set to: 0
  9589  0011A6  0100               	movlb	0	; () banked
  9590  0011A8  90D8               	bcf	status,0,c
  9591  0011AA                     L11:
  9592  0011AA  37AE               	rlcf	___fladd@grs& (0+255),f,b
  9593                           
  9594                           ; BSR set to: 0
  9595                           
  9596                           ; BSR set to: 0
  9597  0011AC  0100               	movlb	0	; () banked
  9598  0011AE  51AD               	movf	___fladd@bexp& (0+255),w,b
  9599  0011B0  0100               	movlb	0	; () banked
  9600  0011B2  B4D8               	btfsc	status,2,c
  9601  0011B4  D002               	goto	l4719
  9602                           
  9603                           ; BSR set to: 0
  9604  0011B6  0100               	movlb	0	; () banked
  9605  0011B8  07AD               	decf	___fladd@bexp& (0+255),f,b
  9606  0011BA                     l4719:
  9607                           
  9608                           ; BSR set to: 0
  9609  0011BA  0100               	movlb	0	; () banked
  9610  0011BC  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  9611  0011BE  D7E2               	goto	l4703
  9612  0011C0                     l4721:
  9613                           
  9614                           ; BSR set to: 0
  9615  0011C0  0E00               	movlw	0
  9616  0011C2  0100               	movlb	0	; () banked
  9617  0011C4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9618                           
  9619                           ; BSR set to: 0
  9620  0011C6  0100               	movlb	0	; () banked
  9621  0011C8  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9622  0011CA  D00D               	goto	l1003
  9623                           
  9624                           ; BSR set to: 0
  9625  0011CC  C0AE  F0A3         	movff	___fladd@grs,??___fladd
  9626  0011D0  0E7F               	movlw	127
  9627  0011D2  0100               	movlb	0	; () banked
  9628  0011D4  17A3               	andwf	??___fladd& (0+255),f,b
  9629  0011D6  A4D8               	btfss	status,2,c
  9630  0011D8  D003               	goto	l4729
  9631                           
  9632                           ; BSR set to: 0
  9633                           
  9634                           ; BSR set to: 0
  9635  0011DA  0100               	movlb	0	; () banked
  9636  0011DC  A19B               	btfss	___fladd@b& (0+255),0,b
  9637  0011DE  D003               	goto	l1003
  9638  0011E0                     l4729:
  9639                           
  9640                           ; BSR set to: 0
  9641  0011E0  0E01               	movlw	1
  9642  0011E2  0100               	movlb	0	; () banked
  9643  0011E4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9644  0011E6                     l1003:
  9645                           
  9646                           ; BSR set to: 0
  9647  0011E6  0100               	movlb	0	; () banked
  9648  0011E8  51AC               	movf	___fladd@aexp& (0+255),w,b
  9649  0011EA  0100               	movlb	0	; () banked
  9650  0011EC  B4D8               	btfsc	status,2,c
  9651  0011EE  D026               	goto	l4739
  9652                           
  9653                           ; BSR set to: 0
  9654  0011F0  0E01               	movlw	1
  9655  0011F2  0100               	movlb	0	; () banked
  9656  0011F4  279B               	addwf	___fladd@b& (0+255),f,b
  9657  0011F6  0E00               	movlw	0
  9658  0011F8  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9659  0011FA  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9660  0011FC  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9661                           
  9662                           ; BSR set to: 0
  9663  0011FE  0100               	movlb	0	; () banked
  9664  001200  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9665  001202  D01C               	goto	l4739
  9666                           
  9667                           ; BSR set to: 0
  9668  001204  C09B  F0A3         	movff	___fladd@b,??___fladd
  9669  001208  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9670  00120C  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9671  001210  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9672  001214  0100               	movlb	0	; () banked
  9673  001216  35A6               	rlcf	(??___fladd+3)& (0+255),w,b
  9674  001218  33A6               	rrcf	(??___fladd+3)& (0+255),f,b
  9675  00121A  33A5               	rrcf	(??___fladd+2)& (0+255),f,b
  9676  00121C  33A4               	rrcf	(??___fladd+1)& (0+255),f,b
  9677  00121E  33A3               	rrcf	??___fladd& (0+255),f,b
  9678  001220  C0A3  F09B         	movff	??___fladd,___fladd@b
  9679  001224  C0A4  F09C         	movff	??___fladd+1,___fladd@b+1
  9680  001228  C0A5  F09D         	movff	??___fladd+2,___fladd@b+2
  9681  00122C  C0A6  F09E         	movff	??___fladd+3,___fladd@b+3
  9682  001230  0100               	movlb	0	; () banked
  9683  001232  29AD               	incf	___fladd@bexp& (0+255),w,b
  9684  001234  B4D8               	btfsc	status,2,c
  9685  001236  D002               	goto	l4739
  9686                           
  9687                           ; BSR set to: 0
  9688  001238  0100               	movlb	0	; () banked
  9689  00123A  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9690  00123C                     l4739:
  9691                           
  9692                           ; BSR set to: 0
  9693  00123C  0100               	movlb	0	; () banked
  9694  00123E  29AD               	incf	___fladd@bexp& (0+255),w,b
  9695  001240  B4D8               	btfsc	status,2,c
  9696  001242  D005               	goto	l4743
  9697                           
  9698                           ; BSR set to: 0
  9699  001244  0100               	movlb	0	; () banked
  9700  001246  51AD               	movf	___fladd@bexp& (0+255),w,b
  9701  001248  0100               	movlb	0	; () banked
  9702  00124A  A4D8               	btfss	status,2,c
  9703  00124C  D011               	goto	l4747
  9704  00124E                     l4743:
  9705                           
  9706                           ; BSR set to: 0
  9707  00124E  0E00               	movlw	0
  9708  001250  0100               	movlb	0	; () banked
  9709  001252  6F9B               	movwf	___fladd@b& (0+255),b
  9710  001254  0E00               	movlw	0
  9711  001256  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9712  001258  0E00               	movlw	0
  9713  00125A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9714  00125C  0E00               	movlw	0
  9715  00125E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9716  001260  0100               	movlb	0	; () banked
  9717  001262  51AD               	movf	___fladd@bexp& (0+255),w,b
  9718  001264  0100               	movlb	0	; () banked
  9719  001266  A4D8               	btfss	status,2,c
  9720  001268  D003               	goto	l4747
  9721                           
  9722                           ; BSR set to: 0
  9723  00126A  0E00               	movlw	0
  9724  00126C  0100               	movlb	0	; () banked
  9725  00126E  6FAB               	movwf	___fladd@signs& (0+255),b
  9726  001270                     l4747:
  9727                           
  9728                           ; BSR set to: 0
  9729  001270  0100               	movlb	0	; () banked
  9730  001272  A1AD               	btfss	___fladd@bexp& (0+255),0,b
  9731  001274  D003               	goto	l4751
  9732                           
  9733                           ; BSR set to: 0
  9734  001276  0100               	movlb	0	; () banked
  9735  001278  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  9736  00127A  D002               	goto	l4753
  9737  00127C                     l4751:
  9738                           
  9739                           ; BSR set to: 0
  9740  00127C  0100               	movlb	0	; () banked
  9741  00127E  9F9D               	bcf	(___fladd@b+2)& (0+255),7,b
  9742  001280                     l4753:
  9743                           
  9744                           ; BSR set to: 0
  9745  001280  0100               	movlb	0	; () banked
  9746  001282  90D8               	bcf	status,0,c
  9747  001284  31AD               	rrcf	___fladd@bexp& (0+255),w,b
  9748  001286  0100               	movlb	0	; () banked
  9749  001288  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752  00128A  0100               	movlb	0	; () banked
  9753  00128C  AFAB               	btfss	___fladd@signs& (0+255),7,b
  9754  00128E  D002               	goto	l4759
  9755                           
  9756                           ; BSR set to: 0
  9757  001290  0100               	movlb	0	; () banked
  9758  001292  8F9E               	bsf	(___fladd@b+3)& (0+255),7,b
  9759  001294                     l4759:
  9760                           
  9761                           ; BSR set to: 0
  9762  001294  C09B  F09B         	movff	___fladd@b,?___fladd
  9763  001298  C09C  F09C         	movff	___fladd@b+1,?___fladd+1
  9764  00129C  C09D  F09D         	movff	___fladd@b+2,?___fladd+2
  9765  0012A0  C09E  F09E         	movff	___fladd@b+3,?___fladd+3
  9766  0012A4  0012               	return	
  9767  0012A6                     __end_of___fladd:
  9768                           	opt stack 0
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           postinc0	equ	0xFEE
  9777                           wreg	equ	0xFE8
  9778                           indf1	equ	0xFE7
  9779                           postinc1	equ	0xFE6
  9780                           fsr1h	equ	0xFE2
  9781                           fsr1l	equ	0xFE1
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           fsr2h	equ	0xFDA
  9785                           fsr2l	equ	0xFD9
  9786                           status	equ	0xFD8
  9787                           
  9788 ;; *************** function ___flneg *****************
  9789 ;; Defined at:
  9790 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  f1              4    0[BANK0 ] unsigned char 
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;		None
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  4    0[BANK0 ] unsigned char 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9804 ;;      Params:         0       4       0       0
  9805 ;;      Locals:         0       0       0       0
  9806 ;;      Temps:          0       0       0       0
  9807 ;;      Totals:         0       4       0       0
  9808 ;;Total ram usage:        4 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:    3
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_sprintf
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text29
  9819  0032B8                     __ptext29:
  9820                           	opt stack 0
  9821  0032B8                     ___flneg:
  9822                           	opt stack 25
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;incstack = 0
  9826  0032B8  0100               	movlb	0	; () banked
  9827  0032BA  5160               	movf	___flneg@f1& (0+255),w,b
  9828  0032BC  0100               	movlb	0	; () banked
  9829  0032BE  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9830  0032C0  0100               	movlb	0	; () banked
  9831  0032C2  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9832  0032C4  0100               	movlb	0	; () banked
  9833  0032C6  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9834  0032C8  B4D8               	btfsc	status,2,c
  9835  0032CA  D009               	goto	l5225
  9836                           
  9837                           ; BSR set to: 0
  9838  0032CC  0E00               	movlw	0
  9839  0032CE  0100               	movlb	0	; () banked
  9840  0032D0  1B60               	xorwf	___flneg@f1& (0+255),f,b
  9841  0032D2  0E00               	movlw	0
  9842  0032D4  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9843  0032D6  0E00               	movlw	0
  9844  0032D8  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9845  0032DA  0E80               	movlw	128
  9846  0032DC  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9847  0032DE                     l5225:
  9848                           
  9849                           ; BSR set to: 0
  9850  0032DE  C060  F060         	movff	___flneg@f1,?___flneg
  9851  0032E2  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  9852  0032E6  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  9853  0032EA  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  9854  0032EE  0012               	return	
  9855  0032F0                     __end_of___flneg:
  9856                           	opt stack 0
  9857                           tblptru	equ	0xFF8
  9858                           tblptrh	equ	0xFF7
  9859                           tblptrl	equ	0xFF6
  9860                           tablat	equ	0xFF5
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           postinc0	equ	0xFEE
  9865                           wreg	equ	0xFE8
  9866                           indf1	equ	0xFE7
  9867                           postinc1	equ	0xFE6
  9868                           fsr1h	equ	0xFE2
  9869                           fsr1l	equ	0xFE1
  9870                           indf2	equ	0xFDF
  9871                           postinc2	equ	0xFDE
  9872                           fsr2h	equ	0xFDA
  9873                           fsr2l	equ	0xFD9
  9874                           status	equ	0xFD8
  9875                           
  9876 ;; *************** function ___flge *****************
  9877 ;; Defined at:
  9878 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  ff1             4    0[BANK0 ] unsigned char 
  9881 ;;  ff2             4    4[BANK0 ] unsigned char 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;		None
  9884 ;; Return value:  Size  Location     Type
  9885 ;;		None               void
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9893 ;;      Params:         0       8       0       0
  9894 ;;      Locals:         0       0       0       0
  9895 ;;      Temps:          0       4       0       0
  9896 ;;      Totals:         0      12       0       0
  9897 ;;Total ram usage:       12 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    3
  9900 ;; This function calls:
  9901 ;;		Nothing
  9902 ;; This function is called by:
  9903 ;;		_sprintf
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           	psect	text30
  9908  002184                     __ptext30:
  9909                           	opt stack 0
  9910  002184                     ___flge:
  9911                           	opt stack 25
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;incstack = 0
  9915  002184  0E00               	movlw	0
  9916  002186  0100               	movlb	0	; () banked
  9917  002188  1560               	andwf	___flge@ff1& (0+255),w,b
  9918  00218A  0100               	movlb	0	; () banked
  9919  00218C  6F68               	movwf	??___flge& (0+255),b
  9920  00218E  0E00               	movlw	0
  9921  002190  0100               	movlb	0	; () banked
  9922  002192  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  9923  002194  0100               	movlb	0	; () banked
  9924  002196  6F69               	movwf	(??___flge+1)& (0+255),b
  9925  002198  0E80               	movlw	128
  9926  00219A  0100               	movlb	0	; () banked
  9927  00219C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  9928  00219E  0100               	movlb	0	; () banked
  9929  0021A0  6F6A               	movwf	(??___flge+2)& (0+255),b
  9930  0021A2  0E7F               	movlw	127
  9931  0021A4  0100               	movlb	0	; () banked
  9932  0021A6  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  9933  0021A8  0100               	movlb	0	; () banked
  9934  0021AA  6F6B               	movwf	(??___flge+3)& (0+255),b
  9935  0021AC  0100               	movlb	0	; () banked
  9936  0021AE  5168               	movf	??___flge& (0+255),w,b
  9937  0021B0  0100               	movlb	0	; () banked
  9938  0021B2  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9939  0021B4  0100               	movlb	0	; () banked
  9940  0021B6  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9941  0021B8  0100               	movlb	0	; () banked
  9942  0021BA  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9943  0021BC  A4D8               	btfss	status,2,c
  9944  0021BE  D009               	goto	l5203
  9945                           
  9946                           ; BSR set to: 0
  9947  0021C0  0E00               	movlw	0
  9948  0021C2  0100               	movlb	0	; () banked
  9949  0021C4  6F60               	movwf	___flge@ff1& (0+255),b
  9950  0021C6  0E00               	movlw	0
  9951  0021C8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  9952  0021CA  0E00               	movlw	0
  9953  0021CC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  9954  0021CE  0E00               	movlw	0
  9955  0021D0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  9956  0021D2                     l5203:
  9957                           
  9958                           ; BSR set to: 0
  9959  0021D2  0E00               	movlw	0
  9960  0021D4  0100               	movlb	0	; () banked
  9961  0021D6  1564               	andwf	___flge@ff2& (0+255),w,b
  9962  0021D8  0100               	movlb	0	; () banked
  9963  0021DA  6F68               	movwf	??___flge& (0+255),b
  9964  0021DC  0E00               	movlw	0
  9965  0021DE  0100               	movlb	0	; () banked
  9966  0021E0  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  9967  0021E2  0100               	movlb	0	; () banked
  9968  0021E4  6F69               	movwf	(??___flge+1)& (0+255),b
  9969  0021E6  0E80               	movlw	128
  9970  0021E8  0100               	movlb	0	; () banked
  9971  0021EA  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  9972  0021EC  0100               	movlb	0	; () banked
  9973  0021EE  6F6A               	movwf	(??___flge+2)& (0+255),b
  9974  0021F0  0E7F               	movlw	127
  9975  0021F2  0100               	movlb	0	; () banked
  9976  0021F4  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  9977  0021F6  0100               	movlb	0	; () banked
  9978  0021F8  6F6B               	movwf	(??___flge+3)& (0+255),b
  9979  0021FA  0100               	movlb	0	; () banked
  9980  0021FC  5168               	movf	??___flge& (0+255),w,b
  9981  0021FE  0100               	movlb	0	; () banked
  9982  002200  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9983  002202  0100               	movlb	0	; () banked
  9984  002204  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9985  002206  0100               	movlb	0	; () banked
  9986  002208  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9987  00220A  A4D8               	btfss	status,2,c
  9988  00220C  D009               	goto	l5207
  9989                           
  9990                           ; BSR set to: 0
  9991  00220E  0E00               	movlw	0
  9992  002210  0100               	movlb	0	; () banked
  9993  002212  6F64               	movwf	___flge@ff2& (0+255),b
  9994  002214  0E00               	movlw	0
  9995  002216  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9996  002218  0E00               	movlw	0
  9997  00221A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9998  00221C  0E00               	movlw	0
  9999  00221E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10000  002220                     l5207:
 10001                           
 10002                           ; BSR set to: 0
 10003  002220  0100               	movlb	0	; () banked
 10004  002222  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 10005  002224  D026               	goto	l5211
 10006                           
 10007                           ; BSR set to: 0
 10008  002226  C060  F068         	movff	___flge@ff1,??___flge
 10009  00222A  C061  F069         	movff	___flge@ff1+1,??___flge+1
 10010  00222E  C062  F06A         	movff	___flge@ff1+2,??___flge+2
 10011  002232  C063  F06B         	movff	___flge@ff1+3,??___flge+3
 10012  002236  0100               	movlb	0	; () banked
 10013  002238  1F68               	comf	??___flge& (0+255),f,b
 10014  00223A  1F69               	comf	(??___flge+1)& (0+255),f,b
 10015  00223C  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10016  00223E  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10017  002240  2B68               	incf	??___flge& (0+255),f,b
 10018  002242  0E00               	movlw	0
 10019  002244  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10020  002246  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10021  002248  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10022  00224A  0E00               	movlw	0
 10023  00224C  0100               	movlb	0	; () banked
 10024  00224E  2568               	addwf	??___flge& (0+255),w,b
 10025  002250  0100               	movlb	0	; () banked
 10026  002252  6F60               	movwf	___flge@ff1& (0+255),b
 10027  002254  0E00               	movlw	0
 10028  002256  0100               	movlb	0	; () banked
 10029  002258  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10030  00225A  0100               	movlb	0	; () banked
 10031  00225C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 10032  00225E  0E00               	movlw	0
 10033  002260  0100               	movlb	0	; () banked
 10034  002262  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10035  002264  0100               	movlb	0	; () banked
 10036  002266  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 10037  002268  0E80               	movlw	128
 10038  00226A  0100               	movlb	0	; () banked
 10039  00226C  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10040  00226E  0100               	movlb	0	; () banked
 10041  002270  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 10042  002272                     l5211:
 10043                           
 10044                           ; BSR set to: 0
 10045  002272  0100               	movlb	0	; () banked
 10046  002274  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 10047  002276  D026               	goto	l700
 10048                           
 10049                           ; BSR set to: 0
 10050  002278  C064  F068         	movff	___flge@ff2,??___flge
 10051  00227C  C065  F069         	movff	___flge@ff2+1,??___flge+1
 10052  002280  C066  F06A         	movff	___flge@ff2+2,??___flge+2
 10053  002284  C067  F06B         	movff	___flge@ff2+3,??___flge+3
 10054  002288  0100               	movlb	0	; () banked
 10055  00228A  1F68               	comf	??___flge& (0+255),f,b
 10056  00228C  1F69               	comf	(??___flge+1)& (0+255),f,b
 10057  00228E  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10058  002290  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10059  002292  2B68               	incf	??___flge& (0+255),f,b
 10060  002294  0E00               	movlw	0
 10061  002296  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10062  002298  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10063  00229A  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10064  00229C  0E00               	movlw	0
 10065  00229E  0100               	movlb	0	; () banked
 10066  0022A0  2568               	addwf	??___flge& (0+255),w,b
 10067  0022A2  0100               	movlb	0	; () banked
 10068  0022A4  6F64               	movwf	___flge@ff2& (0+255),b
 10069  0022A6  0E00               	movlw	0
 10070  0022A8  0100               	movlb	0	; () banked
 10071  0022AA  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10072  0022AC  0100               	movlb	0	; () banked
 10073  0022AE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 10074  0022B0  0E00               	movlw	0
 10075  0022B2  0100               	movlb	0	; () banked
 10076  0022B4  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10077  0022B6  0100               	movlb	0	; () banked
 10078  0022B8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 10079  0022BA  0E80               	movlw	128
 10080  0022BC  0100               	movlb	0	; () banked
 10081  0022BE  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10082  0022C0  0100               	movlb	0	; () banked
 10083  0022C2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10084  0022C4                     l700:
 10085                           
 10086                           ; BSR set to: 0
 10087  0022C4  0E00               	movlw	0
 10088  0022C6  0100               	movlb	0	; () banked
 10089  0022C8  1B60               	xorwf	___flge@ff1& (0+255),f,b
 10090  0022CA  0E00               	movlw	0
 10091  0022CC  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10092  0022CE  0E00               	movlw	0
 10093  0022D0  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10094  0022D2  0E80               	movlw	128
 10095  0022D4  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10096  0022D6  0E00               	movlw	0
 10097  0022D8  0100               	movlb	0	; () banked
 10098  0022DA  1B64               	xorwf	___flge@ff2& (0+255),f,b
 10099  0022DC  0E00               	movlw	0
 10100  0022DE  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10101  0022E0  0E00               	movlw	0
 10102  0022E2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10103  0022E4  0E80               	movlw	128
 10104  0022E6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10105  0022E8  0100               	movlb	0	; () banked
 10106  0022EA  5164               	movf	___flge@ff2& (0+255),w,b
 10107  0022EC  0100               	movlb	0	; () banked
 10108  0022EE  5D60               	subwf	___flge@ff1& (0+255),w,b
 10109  0022F0  0100               	movlb	0	; () banked
 10110  0022F2  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 10111  0022F4  0100               	movlb	0	; () banked
 10112  0022F6  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10113  0022F8  0100               	movlb	0	; () banked
 10114  0022FA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 10115  0022FC  0100               	movlb	0	; () banked
 10116  0022FE  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10117  002300  0100               	movlb	0	; () banked
 10118  002302  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 10119  002304  0100               	movlb	0	; () banked
 10120  002306  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10121  002308  B0D8               	btfsc	status,0,c
 10122  00230A  D002               	goto	l5217
 10123                           
 10124                           ; BSR set to: 0
 10125  00230C  90D8               	bcf	status,0,c
 10126  00230E  0012               	return	
 10127  002310                     l5217:
 10128                           
 10129                           ; BSR set to: 0
 10130  002310  80D8               	bsf	status,0,c
 10131                           
 10132                           ; BSR set to: 0
 10133  002312  0012               	return	
 10134  002314                     __end_of___flge:
 10135                           	opt stack 0
 10136                           tblptru	equ	0xFF8
 10137                           tblptrh	equ	0xFF7
 10138                           tblptrl	equ	0xFF6
 10139                           tablat	equ	0xFF5
 10140                           prodh	equ	0xFF4
 10141                           prodl	equ	0xFF3
 10142                           intcon	equ	0xFF2
 10143                           postinc0	equ	0xFEE
 10144                           wreg	equ	0xFE8
 10145                           indf1	equ	0xFE7
 10146                           postinc1	equ	0xFE6
 10147                           fsr1h	equ	0xFE2
 10148                           fsr1l	equ	0xFE1
 10149                           indf2	equ	0xFDF
 10150                           postinc2	equ	0xFDE
 10151                           fsr2h	equ	0xFDA
 10152                           fsr2l	equ	0xFD9
 10153                           status	equ	0xFD8
 10154                           
 10155 ;; *************** function ___lwdiv *****************
 10156 ;; Defined at:
 10157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  dividend        2    0[BANK0 ] unsigned int 
 10160 ;;  divisor         2    2[BANK0 ] unsigned int 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  quotient        2    5[BANK0 ] unsigned int 
 10163 ;;  counter         1    4[BANK0 ] unsigned char 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  2    0[BANK0 ] unsigned int 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10173 ;;      Params:         0       4       0       0
 10174 ;;      Locals:         0       3       0       0
 10175 ;;      Temps:          0       0       0       0
 10176 ;;      Totals:         0       7       0       0
 10177 ;;Total ram usage:        7 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    3
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_LCD_Handler
 10184 ;;		_utoa
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text31
 10189  00300C                     __ptext31:
 10190                           	opt stack 0
 10191  00300C                     ___lwdiv:
 10192                           	opt stack 26
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;incstack = 0
 10196  00300C  0E00               	movlw	0
 10197  00300E  0100               	movlb	0	; () banked
 10198  003010  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10199  003012  0E00               	movlw	0
 10200  003014  6F65               	movwf	___lwdiv@quotient& (0+255),b
 10201                           
 10202                           ; BSR set to: 0
 10203  003016  0100               	movlb	0	; () banked
 10204  003018  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10205  00301A  0100               	movlb	0	; () banked
 10206  00301C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10207  00301E  B4D8               	btfsc	status,2,c
 10208  003020  D02C               	goto	l936
 10209                           
 10210                           ; BSR set to: 0
 10211  003022  0E01               	movlw	1
 10212  003024  0100               	movlb	0	; () banked
 10213  003026  6F64               	movwf	___lwdiv@counter& (0+255),b
 10214  003028  D006               	goto	l5701
 10215  00302A                     l5699:
 10216                           
 10217                           ; BSR set to: 0
 10218  00302A  0100               	movlb	0	; () banked
 10219  00302C  90D8               	bcf	status,0,c
 10220  00302E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 10221  003030  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10222  003032  0100               	movlb	0	; () banked
 10223  003034  2B64               	incf	___lwdiv@counter& (0+255),f,b
 10224  003036                     l5701:
 10225                           
 10226                           ; BSR set to: 0
 10227  003036  0100               	movlb	0	; () banked
 10228  003038  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10229  00303A  D7F7               	goto	l5699
 10230  00303C                     l5703:
 10231                           
 10232                           ; BSR set to: 0
 10233  00303C  0100               	movlb	0	; () banked
 10234  00303E  90D8               	bcf	status,0,c
 10235  003040  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 10236  003042  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10237                           
 10238                           ; BSR set to: 0
 10239  003044  0100               	movlb	0	; () banked
 10240  003046  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10241  003048  0100               	movlb	0	; () banked
 10242  00304A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 10243  00304C  0100               	movlb	0	; () banked
 10244  00304E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10245  003050  0100               	movlb	0	; () banked
 10246  003052  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10247  003054  A0D8               	btfss	status,0,c
 10248  003056  D00A               	goto	l5711
 10249                           
 10250                           ; BSR set to: 0
 10251  003058  0100               	movlb	0	; () banked
 10252  00305A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10253  00305C  0100               	movlb	0	; () banked
 10254  00305E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 10255  003060  0100               	movlb	0	; () banked
 10256  003062  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10257  003064  0100               	movlb	0	; () banked
 10258  003066  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10259                           
 10260                           ; BSR set to: 0
 10261  003068  0100               	movlb	0	; () banked
 10262  00306A  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 10263  00306C                     l5711:
 10264                           
 10265                           ; BSR set to: 0
 10266  00306C  0100               	movlb	0	; () banked
 10267  00306E  90D8               	bcf	status,0,c
 10268  003070  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10269  003072  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 10270                           
 10271                           ; BSR set to: 0
 10272  003074  0100               	movlb	0	; () banked
 10273  003076  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 10274  003078  D7E1               	goto	l5703
 10275  00307A                     l936:
 10276                           
 10277                           ; BSR set to: 0
 10278  00307A  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 10279  00307E  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10280                           
 10281                           ; BSR set to: 0
 10282  003082  0012               	return		;funcret
 10283  003084                     __end_of___lwdiv:
 10284                           	opt stack 0
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           postinc0	equ	0xFEE
 10293                           wreg	equ	0xFE8
 10294                           indf1	equ	0xFE7
 10295                           postinc1	equ	0xFE6
 10296                           fsr1h	equ	0xFE2
 10297                           fsr1l	equ	0xFE1
 10298                           indf2	equ	0xFDF
 10299                           postinc2	equ	0xFDE
 10300                           fsr2h	equ	0xFDA
 10301                           fsr2l	equ	0xFD9
 10302                           status	equ	0xFD8
 10303                           
 10304 ;; *************** function _LCD_write_string *****************
 10305 ;; Defined at:
 10306 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  buffer          2   17[BANK0 ] PTR unsigned char 
 10309 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;		None               void
 10314 ;; Registers used:
 10315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10321 ;;      Params:         0       2       0       0
 10322 ;;      Locals:         0       0       0       0
 10323 ;;      Temps:          0       0       0       0
 10324 ;;      Totals:         0       2       0       0
 10325 ;;Total ram usage:        2 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    8
 10328 ;; This function calls:
 10329 ;;		_LCD_write_char
 10330 ;; This function is called by:
 10331 ;;		_LCD_Handler
 10332 ;;		_LCD_write_integer
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text32
 10337  003434                     __ptext32:
 10338                           	opt stack 0
 10339  003434                     _LCD_write_string:
 10340                           	opt stack 21
 10341                           
 10342                           ;src\LCD_44780.c: 197: while(*buffer){
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;incstack = 0
 10346  003434  D00A               	goto	l5387
 10347  003436                     l5383:
 10348                           
 10349                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10350  003436  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10351  00343A  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10352  00343E  50DF               	movf	indf2,w,c
 10353  003440  ECBB  F017         	call	_LCD_write_char
 10354                           
 10355                           ;src\LCD_44780.c: 202: buffer++;
 10356  003444  0100               	movlb	0	; () banked
 10357  003446  4B71               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10358  003448  2B72               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10359  00344A                     l5387:
 10360  00344A  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10361  00344E  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10362  003452  50DF               	movf	indf2,w,c
 10363  003454  B4D8               	btfsc	status,2,c
 10364  003456  0012               	return	
 10365  003458  D7EE               	goto	l5383
 10366  00345A                     __end_of_LCD_write_string:
 10367                           	opt stack 0
 10368                           tblptru	equ	0xFF8
 10369                           tblptrh	equ	0xFF7
 10370                           tblptrl	equ	0xFF6
 10371                           tablat	equ	0xFF5
 10372                           prodh	equ	0xFF4
 10373                           prodl	equ	0xFF3
 10374                           intcon	equ	0xFF2
 10375                           postinc0	equ	0xFEE
 10376                           wreg	equ	0xFE8
 10377                           indf1	equ	0xFE7
 10378                           postinc1	equ	0xFE6
 10379                           fsr1h	equ	0xFE2
 10380                           fsr1l	equ	0xFE1
 10381                           indf2	equ	0xFDF
 10382                           postinc2	equ	0xFDE
 10383                           fsr2h	equ	0xFDA
 10384                           fsr2l	equ	0xFD9
 10385                           status	equ	0xFD8
 10386                           
 10387 ;; *************** function _LCD_write_message *****************
 10388 ;; Defined at:
 10389 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  buffer          2   17[BANK0 ] PTR const unsigned char 
 10392 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
 10393 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
 10394 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;		None               void
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10406 ;;      Params:         0       2       0       0
 10407 ;;      Locals:         0       0       0       0
 10408 ;;      Temps:          0       0       0       0
 10409 ;;      Totals:         0       2       0       0
 10410 ;;Total ram usage:        2 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:    8
 10413 ;; This function calls:
 10414 ;;		_LCD_write_char
 10415 ;; This function is called by:
 10416 ;;		_main
 10417 ;;		_LCD_Handler
 10418 ;;		_board_initialization
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text33
 10423  0033B6                     __ptext33:
 10424                           	opt stack 0
 10425  0033B6                     _LCD_write_message:
 10426                           	opt stack 21
 10427                           
 10428                           ;src\LCD_44780.c: 181: while(*buffer) {
 10429                           
 10430                           ;incstack = 0
 10431  0033B6  D00B               	goto	l5379
 10432  0033B8                     l5375:
 10433                           
 10434                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 10435  0033B8  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10436  0033BC  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10437  0033C0                     	if	0	;tblptru may be non-zero
 10438  0033C0                     	endif
 10439  0033C0                     	if	0	;tblptru may be non-zero
 10440  0033C0                     	endif
 10441  0033C0  0008               	tblrd		*
 10442  0033C2  50F5               	movf	tablat,w,c
 10443  0033C4  ECBB  F017         	call	_LCD_write_char
 10444                           
 10445                           ;src\LCD_44780.c: 186: buffer++;
 10446  0033C8  0100               	movlb	0	; () banked
 10447  0033CA  4B71               	infsnz	LCD_write_message@buffer& (0+255),f,b
 10448  0033CC  2B72               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 10449  0033CE                     l5379:
 10450  0033CE  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10451  0033D2  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10452  0033D6                     	if	0	;tblptru may be non-zero
 10453  0033D6                     	endif
 10454  0033D6                     	if	0	;tblptru may be non-zero
 10455  0033D6                     	endif
 10456  0033D6  0008               	tblrd		*
 10457  0033D8  50F5               	movf	tablat,w,c
 10458  0033DA  0900               	iorlw	0
 10459  0033DC  B4D8               	btfsc	status,2,c
 10460  0033DE  0012               	return	
 10461  0033E0  D7EB               	goto	l5375
 10462  0033E2                     __end_of_LCD_write_message:
 10463                           	opt stack 0
 10464                           tblptru	equ	0xFF8
 10465                           tblptrh	equ	0xFF7
 10466                           tblptrl	equ	0xFF6
 10467                           tablat	equ	0xFF5
 10468                           prodh	equ	0xFF4
 10469                           prodl	equ	0xFF3
 10470                           intcon	equ	0xFF2
 10471                           postinc0	equ	0xFEE
 10472                           wreg	equ	0xFE8
 10473                           indf1	equ	0xFE7
 10474                           postinc1	equ	0xFE6
 10475                           fsr1h	equ	0xFE2
 10476                           fsr1l	equ	0xFE1
 10477                           indf2	equ	0xFDF
 10478                           postinc2	equ	0xFDE
 10479                           fsr2h	equ	0xFDA
 10480                           fsr2l	equ	0xFD9
 10481                           status	equ	0xFD8
 10482                           
 10483 ;; *************** function _LCD_write_char *****************
 10484 ;; Defined at:
 10485 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  value           1    wreg     unsigned char 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  value           1   16[BANK0 ] unsigned char 
 10490 ;;  D0              1   15[BANK0 ] unsigned char 
 10491 ;;  D1              1   14[BANK0 ] unsigned char 
 10492 ;;  D2              1   13[BANK0 ] unsigned char 
 10493 ;;  D3              1   12[BANK0 ] unsigned char 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;		None               void
 10496 ;; Registers used:
 10497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10503 ;;      Params:         0       0       0       0
 10504 ;;      Locals:         0       5       0       0
 10505 ;;      Temps:          0       0       0       0
 10506 ;;      Totals:         0       5       0       0
 10507 ;;Total ram usage:        5 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    7
 10510 ;; This function calls:
 10511 ;;		_LCD_send_command
 10512 ;; This function is called by:
 10513 ;;		_LCD_write_message
 10514 ;;		_LCD_write_string
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text34
 10519  002F76                     __ptext34:
 10520                           	opt stack 0
 10521  002F76                     _LCD_write_char:
 10522                           	opt stack 21
 10523                           
 10524                           ;incstack = 0
 10525                           ;LCD_write_char@value stored from wreg
 10526  002F76  0100               	movlb	0	; () banked
 10527  002F78  6F70               	movwf	LCD_write_char@value& (0+255),b
 10528                           
 10529                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 10530                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 10531  002F7A  848D               	bsf	3981,2,c	;volatile
 10532                           
 10533                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10534  002F7C  0100               	movlb	0	; () banked
 10535  002F7E  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10536  002F80  0B01               	andlw	1
 10537  002F82  0100               	movlb	0	; () banked
 10538  002F84  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10539                           
 10540                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 10541  002F86  0100               	movlb	0	; () banked
 10542  002F88  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10543  002F8A  46E8               	rlncf	wreg,f,c
 10544  002F8C  0B03               	andlw	3
 10545  002F8E  0B01               	andlw	1
 10546  002F90  0100               	movlb	0	; () banked
 10547  002F92  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10548                           
 10549                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 10550  002F94  0100               	movlb	0	; () banked
 10551  002F96  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10552  002F98  42E8               	rrncf	wreg,f,c
 10553  002F9A  0B07               	andlw	7
 10554  002F9C  0B01               	andlw	1
 10555  002F9E  0100               	movlb	0	; () banked
 10556  002FA0  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10557                           
 10558                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 10559  002FA2  0100               	movlb	0	; () banked
 10560  002FA4  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10561  002FA6  0B0F               	andlw	15
 10562  002FA8  0B01               	andlw	1
 10563  002FAA  0100               	movlb	0	; () banked
 10564  002FAC  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 10568  002FAE  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10569  002FB2  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10570  002FB6  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10571  002FBA  0100               	movlb	0	; () banked
 10572  002FBC  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10573  002FBE  EC22  F019         	call	_LCD_send_command
 10574                           
 10575                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 10576  002FC2  0100               	movlb	0	; () banked
 10577  002FC4  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10578  002FC6  46E8               	rlncf	wreg,f,c
 10579  002FC8  0B1F               	andlw	31
 10580  002FCA  0B01               	andlw	1
 10581  002FCC  0100               	movlb	0	; () banked
 10582  002FCE  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 10586  002FD0  0100               	movlb	0	; () banked
 10587  002FD2  4170               	rrncf	LCD_write_char@value& (0+255),w,b
 10588  002FD4  42E8               	rrncf	wreg,f,c
 10589  002FD6  0B3F               	andlw	63
 10590  002FD8  0B01               	andlw	1
 10591  002FDA  0100               	movlb	0	; () banked
 10592  002FDC  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 10596  002FDE  0100               	movlb	0	; () banked
 10597  002FE0  90D8               	bcf	status,0,c
 10598  002FE2  3170               	rrcf	LCD_write_char@value& (0+255),w,b
 10599  002FE4  0B01               	andlw	1
 10600  002FE6  0100               	movlb	0	; () banked
 10601  002FE8  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 10605  002FEA  0100               	movlb	0	; () banked
 10606  002FEC  5170               	movf	LCD_write_char@value& (0+255),w,b
 10607  002FEE  0B01               	andlw	1
 10608  002FF0  0100               	movlb	0	; () banked
 10609  002FF2  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 10613  002FF4  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10614  002FF8  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10615  002FFC  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10616  003000  0100               	movlb	0	; () banked
 10617  003002  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10618  003004  EC22  F019         	call	_LCD_send_command
 10619                           
 10620                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 10621  003008  948D               	bcf	3981,2,c	;volatile
 10622  00300A  0012               	return		;funcret
 10623  00300C                     __end_of_LCD_write_char:
 10624                           	opt stack 0
 10625                           tblptru	equ	0xFF8
 10626                           tblptrh	equ	0xFF7
 10627                           tblptrl	equ	0xFF6
 10628                           tablat	equ	0xFF5
 10629                           prodh	equ	0xFF4
 10630                           prodl	equ	0xFF3
 10631                           intcon	equ	0xFF2
 10632                           postinc0	equ	0xFEE
 10633                           wreg	equ	0xFE8
 10634                           indf1	equ	0xFE7
 10635                           postinc1	equ	0xFE6
 10636                           fsr1h	equ	0xFE2
 10637                           fsr1l	equ	0xFE1
 10638                           indf2	equ	0xFDF
 10639                           postinc2	equ	0xFDE
 10640                           fsr2h	equ	0xFDA
 10641                           fsr2l	equ	0xFD9
 10642                           status	equ	0xFD8
 10643                           
 10644 ;; *************** function _LCD_goto_line *****************
 10645 ;; Defined at:
 10646 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  line            1    wreg     unsigned char 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;  line            1   12[BANK0 ] unsigned char 
 10651 ;; Return value:  Size  Location     Type
 10652 ;;		None               void
 10653 ;; Registers used:
 10654 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10660 ;;      Params:         0       0       0       0
 10661 ;;      Locals:         0       1       0       0
 10662 ;;      Temps:          0       0       0       0
 10663 ;;      Totals:         0       1       0       0
 10664 ;;Total ram usage:        1 bytes
 10665 ;; Hardware stack levels used:    1
 10666 ;; Hardware stack levels required when called:    7
 10667 ;; This function calls:
 10668 ;;		_LCD_send_command
 10669 ;; This function is called by:
 10670 ;;		_main
 10671 ;;		_LCD_Handler
 10672 ;;		_board_initialization
 10673 ;;		_LCD_goto_xy
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           	psect	text35
 10678  0029A8                     __ptext35:
 10679                           	opt stack 0
 10680  0029A8                     _LCD_goto_line:
 10681                           	opt stack 22
 10682                           
 10683                           ;incstack = 0
 10684                           ;LCD_goto_line@line stored from wreg
 10685  0029A8  0100               	movlb	0	; () banked
 10686  0029AA  6F6C               	movwf	LCD_goto_line@line& (0+255),b
 10687                           
 10688                           ;src\LCD_44780.c: 113: switch(line) {
 10689  0029AC  D064               	goto	l5371
 10690  0029AE                     l5363:
 10691  0029AE  0E00               	movlw	0
 10692  0029B0  0100               	movlb	0	; () banked
 10693  0029B2  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10694  0029B4  0E00               	movlw	0
 10695  0029B6  0100               	movlb	0	; () banked
 10696  0029B8  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10697  0029BA  0E00               	movlw	0
 10698  0029BC  0100               	movlb	0	; () banked
 10699  0029BE  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10700  0029C0  0E01               	movlw	1
 10701  0029C2  EC22  F019         	call	_LCD_send_command
 10702                           
 10703                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10704  0029C6  0E00               	movlw	0
 10705  0029C8  0100               	movlb	0	; () banked
 10706  0029CA  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10707  0029CC  0E00               	movlw	0
 10708  0029CE  0100               	movlb	0	; () banked
 10709  0029D0  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10710  0029D2  0E00               	movlw	0
 10711  0029D4  0100               	movlb	0	; () banked
 10712  0029D6  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10713  0029D8  0E00               	movlw	0
 10714  0029DA  EC22  F019         	call	_LCD_send_command
 10715                           
 10716                           ;src\LCD_44780.c: 117: break;
 10717  0029DE  0012               	return	
 10718  0029E0                     l5365:
 10719  0029E0  0E01               	movlw	1
 10720  0029E2  0100               	movlb	0	; () banked
 10721  0029E4  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10722  0029E6  0E00               	movlw	0
 10723  0029E8  0100               	movlb	0	; () banked
 10724  0029EA  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10725  0029EC  0E00               	movlw	0
 10726  0029EE  0100               	movlb	0	; () banked
 10727  0029F0  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10728  0029F2  0E01               	movlw	1
 10729  0029F4  EC22  F019         	call	_LCD_send_command
 10730                           
 10731                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10732  0029F8  0E00               	movlw	0
 10733  0029FA  0100               	movlb	0	; () banked
 10734  0029FC  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10735  0029FE  0E00               	movlw	0
 10736  002A00  0100               	movlb	0	; () banked
 10737  002A02  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10738  002A04  0E00               	movlw	0
 10739  002A06  0100               	movlb	0	; () banked
 10740  002A08  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10741  002A0A  0E00               	movlw	0
 10742  002A0C  EC22  F019         	call	_LCD_send_command
 10743                           
 10744                           ;src\LCD_44780.c: 121: break;
 10745  002A10  0012               	return	
 10746  002A12                     l5367:
 10747  002A12  0E00               	movlw	0
 10748  002A14  0100               	movlb	0	; () banked
 10749  002A16  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10750  002A18  0E00               	movlw	0
 10751  002A1A  0100               	movlb	0	; () banked
 10752  002A1C  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10753  002A1E  0E01               	movlw	1
 10754  002A20  0100               	movlb	0	; () banked
 10755  002A22  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10756  002A24  0E01               	movlw	1
 10757  002A26  EC22  F019         	call	_LCD_send_command
 10758                           
 10759                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10760  002A2A  0E01               	movlw	1
 10761  002A2C  0100               	movlb	0	; () banked
 10762  002A2E  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10763  002A30  0E00               	movlw	0
 10764  002A32  0100               	movlb	0	; () banked
 10765  002A34  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10766  002A36  0E00               	movlw	0
 10767  002A38  0100               	movlb	0	; () banked
 10768  002A3A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10769  002A3C  0E00               	movlw	0
 10770  002A3E  EC22  F019         	call	_LCD_send_command
 10771                           
 10772                           ;src\LCD_44780.c: 125: break;
 10773  002A42  0012               	return	
 10774  002A44                     l5369:
 10775  002A44  0E01               	movlw	1
 10776  002A46  0100               	movlb	0	; () banked
 10777  002A48  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10778  002A4A  0E00               	movlw	0
 10779  002A4C  0100               	movlb	0	; () banked
 10780  002A4E  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10781  002A50  0E01               	movlw	1
 10782  002A52  0100               	movlb	0	; () banked
 10783  002A54  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10784  002A56  0E01               	movlw	1
 10785  002A58  EC22  F019         	call	_LCD_send_command
 10786                           
 10787                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10788  002A5C  0E01               	movlw	1
 10789  002A5E  0100               	movlb	0	; () banked
 10790  002A60  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10791  002A62  0E00               	movlw	0
 10792  002A64  0100               	movlb	0	; () banked
 10793  002A66  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10794  002A68  0E00               	movlw	0
 10795  002A6A  0100               	movlb	0	; () banked
 10796  002A6C  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10797  002A6E  0E00               	movlw	0
 10798  002A70  EC22  F019         	call	_LCD_send_command
 10799                           
 10800                           ;src\LCD_44780.c: 129: }
 10801  002A74  0012               	return	
 10802  002A76                     l5371:
 10803  002A76  0100               	movlb	0	; () banked
 10804  002A78  516C               	movf	LCD_goto_line@line& (0+255),w,b
 10805                           
 10806                           ; Switch size 1, requested type "space"
 10807                           ; Number of cases is 4, Range of values is 1 to 4
 10808                           ; switch strategies available:
 10809                           ; Name         Instructions Cycles
 10810                           ; simple_byte           13     7 (average)
 10811                           ;	Chosen strategy is simple_byte
 10812  002A7A  0A01               	xorlw	1	; case 1
 10813  002A7C  B4D8               	btfsc	status,2,c
 10814  002A7E  D797               	goto	l5363
 10815  002A80  0A03               	xorlw	3	; case 2
 10816  002A82  B4D8               	btfsc	status,2,c
 10817  002A84  D7AD               	goto	l5365
 10818  002A86  0A01               	xorlw	1	; case 3
 10819  002A88  B4D8               	btfsc	status,2,c
 10820  002A8A  D7C3               	goto	l5367
 10821  002A8C  0A07               	xorlw	7	; case 4
 10822  002A8E  A4D8               	btfss	status,2,c
 10823  002A90  0012               	return	
 10824  002A92  D7D8               	goto	l5369
 10825  002A94                     __end_of_LCD_goto_line:
 10826                           	opt stack 0
 10827                           tblptru	equ	0xFF8
 10828                           tblptrh	equ	0xFF7
 10829                           tblptrl	equ	0xFF6
 10830                           tablat	equ	0xFF5
 10831                           prodh	equ	0xFF4
 10832                           prodl	equ	0xFF3
 10833                           intcon	equ	0xFF2
 10834                           postinc0	equ	0xFEE
 10835                           wreg	equ	0xFE8
 10836                           indf1	equ	0xFE7
 10837                           postinc1	equ	0xFE6
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           fsr2h	equ	0xFDA
 10843                           fsr2l	equ	0xFD9
 10844                           status	equ	0xFD8
 10845                           
 10846 ;; *************** function _LCD_clear *****************
 10847 ;; Defined at:
 10848 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;		None               void
 10855 ;; Registers used:
 10856 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10862 ;;      Params:         0       0       0       0
 10863 ;;      Locals:         0       0       0       0
 10864 ;;      Temps:          0       0       0       0
 10865 ;;      Totals:         0       0       0       0
 10866 ;;Total ram usage:        0 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    7
 10869 ;; This function calls:
 10870 ;;		_LCD_send_command
 10871 ;; This function is called by:
 10872 ;;		_LCD_initialize
 10873 ;;		_main
 10874 ;;		_LCD_Handler
 10875 ;;		_board_initialization
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text36
 10880  003358                     __ptext36:
 10881                           	opt stack 0
 10882  003358                     _LCD_clear:
 10883                           	opt stack 21
 10884                           
 10885                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10886                           
 10887                           ;incstack = 0
 10888  003358  0E00               	movlw	0
 10889  00335A  0100               	movlb	0	; () banked
 10890  00335C  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10891  00335E  0E00               	movlw	0
 10892  003360  0100               	movlb	0	; () banked
 10893  003362  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10894  003364  0E00               	movlw	0
 10895  003366  0100               	movlb	0	; () banked
 10896  003368  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10897  00336A  0E00               	movlw	0
 10898  00336C  EC22  F019         	call	_LCD_send_command
 10899                           
 10900                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10901  003370  0E00               	movlw	0
 10902  003372  0100               	movlb	0	; () banked
 10903  003374  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10904  003376  0E00               	movlw	0
 10905  003378  0100               	movlb	0	; () banked
 10906  00337A  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10907  00337C  0E01               	movlw	1
 10908  00337E  0100               	movlb	0	; () banked
 10909  003380  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10910  003382  0E00               	movlw	0
 10911  003384  EC22  F019         	call	_LCD_send_command
 10912  003388  0012               	return		;funcret
 10913  00338A                     __end_of_LCD_clear:
 10914                           	opt stack 0
 10915                           tblptru	equ	0xFF8
 10916                           tblptrh	equ	0xFF7
 10917                           tblptrl	equ	0xFF6
 10918                           tablat	equ	0xFF5
 10919                           prodh	equ	0xFF4
 10920                           prodl	equ	0xFF3
 10921                           intcon	equ	0xFF2
 10922                           postinc0	equ	0xFEE
 10923                           wreg	equ	0xFE8
 10924                           indf1	equ	0xFE7
 10925                           postinc1	equ	0xFE6
 10926                           fsr1h	equ	0xFE2
 10927                           fsr1l	equ	0xFE1
 10928                           indf2	equ	0xFDF
 10929                           postinc2	equ	0xFDE
 10930                           fsr2h	equ	0xFDA
 10931                           fsr2l	equ	0xFD9
 10932                           status	equ	0xFD8
 10933                           
 10934 ;; *************** function _LCD_send_command *****************
 10935 ;; Defined at:
 10936 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;  D3              1    wreg     unsigned char 
 10939 ;;  D2              1    8[BANK0 ] unsigned char 
 10940 ;;  D1              1    9[BANK0 ] unsigned char 
 10941 ;;  D0              1   10[BANK0 ] unsigned char 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  D3              1   11[BANK0 ] unsigned char 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;		None               void
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10953 ;;      Params:         0       3       0       0
 10954 ;;      Locals:         0       1       0       0
 10955 ;;      Temps:          0       0       0       0
 10956 ;;      Totals:         0       4       0       0
 10957 ;;Total ram usage:        4 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    6
 10960 ;; This function calls:
 10961 ;;		_LCD_enable_pulse
 10962 ;; This function is called by:
 10963 ;;		_LCD_goto_line
 10964 ;;		_LCD_write_char
 10965 ;;		_LCD_clear
 10966 ;;		_LCD_cursor
 10967 ;;		_LCD_initialize
 10968 ;;		_LCD_home
 10969 ;;		_LCD_shift
 10970 ;;		_LCD_shift_cursor
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text37
 10975  003244                     __ptext37:
 10976                           	opt stack 0
 10977  003244                     _LCD_send_command:
 10978                           	opt stack 21
 10979                           
 10980                           ;incstack = 0
 10981                           ;LCD_send_command@D3 stored from wreg
 10982  003244  0100               	movlb	0	; () banked
 10983  003246  6F6B               	movwf	LCD_send_command@D3& (0+255),b
 10984                           
 10985                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 10986  003248  0100               	movlb	0	; () banked
 10987  00324A  B16A               	btfsc	LCD_send_command@D0& (0+255),0,b
 10988  00324C  D002               	bra	u5065
 10989  00324E  948B               	bcf	3979,2,c	;volatile
 10990  003250  D001               	bra	u5066
 10991  003252                     u5065:
 10992  003252  848B               	bsf	3979,2,c	;volatile
 10993  003254                     u5066:
 10994                           
 10995                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 10996  003254  0100               	movlb	0	; () banked
 10997  003256  B169               	btfsc	LCD_send_command@D1& (0+255),0,b
 10998  003258  D002               	bra	u5075
 10999  00325A  968B               	bcf	3979,3,c	;volatile
 11000  00325C  D001               	bra	u5076
 11001  00325E                     u5075:
 11002  00325E  868B               	bsf	3979,3,c	;volatile
 11003  003260                     u5076:
 11004                           
 11005                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 11006  003260  0100               	movlb	0	; () banked
 11007  003262  B168               	btfsc	LCD_send_command@D2& (0+255),0,b
 11008  003264  D002               	bra	u5085
 11009  003266  908C               	bcf	3980,0,c	;volatile
 11010  003268  D001               	bra	u5086
 11011  00326A                     u5085:
 11012  00326A  808C               	bsf	3980,0,c	;volatile
 11013  00326C                     u5086:
 11014                           
 11015                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 11016  00326C  0100               	movlb	0	; () banked
 11017  00326E  B16B               	btfsc	LCD_send_command@D3& (0+255),0,b
 11018  003270  D002               	bra	u5095
 11019  003272  928C               	bcf	3980,1,c	;volatile
 11020  003274  D001               	bra	u5096
 11021  003276                     u5095:
 11022  003276  828C               	bsf	3980,1,c	;volatile
 11023  003278                     u5096:
 11024                           
 11025                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11026  003278  EC2D  F01A         	call	_LCD_enable_pulse	;wreg free
 11027  00327C  0012               	return		;funcret
 11028  00327E                     __end_of_LCD_send_command:
 11029                           	opt stack 0
 11030                           tblptru	equ	0xFF8
 11031                           tblptrh	equ	0xFF7
 11032                           tblptrl	equ	0xFF6
 11033                           tablat	equ	0xFF5
 11034                           prodh	equ	0xFF4
 11035                           prodl	equ	0xFF3
 11036                           intcon	equ	0xFF2
 11037                           postinc0	equ	0xFEE
 11038                           wreg	equ	0xFE8
 11039                           indf1	equ	0xFE7
 11040                           postinc1	equ	0xFE6
 11041                           fsr1h	equ	0xFE2
 11042                           fsr1l	equ	0xFE1
 11043                           indf2	equ	0xFDF
 11044                           postinc2	equ	0xFDE
 11045                           fsr2h	equ	0xFDA
 11046                           fsr2l	equ	0xFD9
 11047                           status	equ	0xFD8
 11048                           
 11049 ;; *************** function _LCD_enable_pulse *****************
 11050 ;; Defined at:
 11051 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;		None
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;		None               void
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11065 ;;      Params:         0       0       0       0
 11066 ;;      Locals:         0       0       0       0
 11067 ;;      Temps:          0       0       0       0
 11068 ;;      Totals:         0       0       0       0
 11069 ;;Total ram usage:        0 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    5
 11072 ;; This function calls:
 11073 ;;		_delay_ms
 11074 ;; This function is called by:
 11075 ;;		_LCD_send_command
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text38
 11080  00345A                     __ptext38:
 11081                           	opt stack 0
 11082  00345A                     _LCD_enable_pulse:
 11083                           	opt stack 21
 11084                           
 11085                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 11086                           
 11087                           ;incstack = 0
 11088  00345A  828B               	bsf	3979,1,c	;volatile
 11089                           
 11090                           ;src\LCD_44780.c: 52: delay_ms (1);
 11091  00345C  0E00               	movlw	0
 11092  00345E  0100               	movlb	0	; () banked
 11093  003460  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11094  003462  0E01               	movlw	1
 11095  003464  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11096  003466  EC3F  F019         	call	_delay_ms	;wreg free
 11097                           
 11098                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 11099  00346A  928B               	bcf	3979,1,c	;volatile
 11100                           
 11101                           ;src\LCD_44780.c: 54: delay_ms (1);
 11102  00346C  0E00               	movlw	0
 11103  00346E  0100               	movlb	0	; () banked
 11104  003470  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11105  003472  0E01               	movlw	1
 11106  003474  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11107  003476  EC3F  F019         	call	_delay_ms	;wreg free
 11108  00347A  0012               	return		;funcret
 11109  00347C                     __end_of_LCD_enable_pulse:
 11110                           	opt stack 0
 11111                           tblptru	equ	0xFF8
 11112                           tblptrh	equ	0xFF7
 11113                           tblptrl	equ	0xFF6
 11114                           tablat	equ	0xFF5
 11115                           prodh	equ	0xFF4
 11116                           prodl	equ	0xFF3
 11117                           intcon	equ	0xFF2
 11118                           postinc0	equ	0xFEE
 11119                           wreg	equ	0xFE8
 11120                           indf1	equ	0xFE7
 11121                           postinc1	equ	0xFE6
 11122                           fsr1h	equ	0xFE2
 11123                           fsr1l	equ	0xFE1
 11124                           indf2	equ	0xFDF
 11125                           postinc2	equ	0xFDE
 11126                           fsr2h	equ	0xFDA
 11127                           fsr2l	equ	0xFD9
 11128                           status	equ	0xFD8
 11129                           
 11130 ;; *************** function _delay_ms *****************
 11131 ;; Defined at:
 11132 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;  value_ms        2    6[BANK0 ] unsigned int 
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;		None               void
 11139 ;; Registers used:
 11140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11146 ;;      Params:         0       2       0       0
 11147 ;;      Locals:         0       0       0       0
 11148 ;;      Temps:          0       0       0       0
 11149 ;;      Totals:         0       2       0       0
 11150 ;;Total ram usage:        2 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:    4
 11153 ;; This function calls:
 11154 ;;		___wmul
 11155 ;; This function is called by:
 11156 ;;		_delay_s
 11157 ;;		_LCD_enable_pulse
 11158 ;;		_LCD_initialize
 11159 ;;		_main
 11160 ;;		_USART_Send
 11161 ;;		_board_initialization
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text39
 11166  00327E                     __ptext39:
 11167                           	opt stack 0
 11168  00327E                     _delay_ms:
 11169                           	opt stack 26
 11170                           
 11171                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11172                           
 11173                           ;incstack = 0
 11174  00327E  C045  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11175  003282  0100               	movlb	0	; () banked
 11176  003284  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 11177  003286  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 11178  00328A  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11179  00328E  EC78  F019         	call	___wmul	;wreg free
 11180  003292  C060  F0F5         	movff	?___wmul,_clock_counter_reference	;volatile
 11181  003296  C061  F0F6         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11182                           
 11183                           ;src\delay.c: 75: while (clock_counter_reference) {
 11184  00329A  D007               	goto	l101
 11185  00329C                     l4545:
 11186                           
 11187                           ;src\delay.c: 85: _delay(240);
 11188  00329C  0E50               	movlw	80
 11189  00329E                     u7487:
 11190  00329E  2EE8               	decfsz	wreg,f,c
 11191  0032A0  D7FE               	goto	u7487
 11192                           
 11193                           ;src\delay.c: 88: clock_counter_reference--;
 11194  0032A2  0100               	movlb	0	; () banked
 11195  0032A4  07F5               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11196  0032A6  A0D8               	btfss	status,0,c
 11197  0032A8  07F6               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11198  0032AA                     l101:
 11199  0032AA  0100               	movlb	0	; () banked
 11200  0032AC  51F5               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11201  0032AE  0100               	movlb	0	; () banked
 11202  0032B0  11F6               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11203  0032B2  B4D8               	btfsc	status,2,c
 11204  0032B4  0012               	return	
 11205  0032B6  D7F2               	goto	l4545
 11206  0032B8                     __end_of_delay_ms:
 11207                           	opt stack 0
 11208                           tblptru	equ	0xFF8
 11209                           tblptrh	equ	0xFF7
 11210                           tblptrl	equ	0xFF6
 11211                           tablat	equ	0xFF5
 11212                           prodh	equ	0xFF4
 11213                           prodl	equ	0xFF3
 11214                           intcon	equ	0xFF2
 11215                           postinc0	equ	0xFEE
 11216                           wreg	equ	0xFE8
 11217                           indf1	equ	0xFE7
 11218                           postinc1	equ	0xFE6
 11219                           fsr1h	equ	0xFE2
 11220                           fsr1l	equ	0xFE1
 11221                           indf2	equ	0xFDF
 11222                           postinc2	equ	0xFDE
 11223                           fsr2h	equ	0xFDA
 11224                           fsr2l	equ	0xFD9
 11225                           status	equ	0xFD8
 11226                           
 11227 ;; *************** function ___wmul *****************
 11228 ;; Defined at:
 11229 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11232 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  product         2    4[BANK0 ] unsigned int 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  2    0[BANK0 ] unsigned int 
 11237 ;; Registers used:
 11238 ;;		wreg, status,2, status,0, prodl, prodh
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11244 ;;      Params:         0       4       0       0
 11245 ;;      Locals:         0       2       0       0
 11246 ;;      Temps:          0       0       0       0
 11247 ;;      Totals:         0       6       0       0
 11248 ;;Total ram usage:        6 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    3
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_delay_ms
 11255 ;;		_sprintf
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text40
 11260  0032F0                     __ptext40:
 11261                           	opt stack 0
 11262  0032F0                     ___wmul:
 11263                           	opt stack 26
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;incstack = 0
 11267  0032F0  0100               	movlb	0	; () banked
 11268  0032F2  5160               	movf	___wmul@multiplier& (0+255),w,b
 11269  0032F4  0100               	movlb	0	; () banked
 11270  0032F6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11271  0032F8  CFF3 F064          	movff	prodl,___wmul@product
 11272  0032FC  CFF4 F065          	movff	prodh,___wmul@product+1
 11273  003300  0100               	movlb	0	; () banked
 11274  003302  5160               	movf	___wmul@multiplier& (0+255),w,b
 11275  003304  0100               	movlb	0	; () banked
 11276  003306  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11277  003308  50F3               	movf	prodl,w,c
 11278  00330A  0100               	movlb	0	; () banked
 11279  00330C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11280  00330E  0100               	movlb	0	; () banked
 11281  003310  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11282  003312  0100               	movlb	0	; () banked
 11283  003314  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11284  003316  50F3               	movf	prodl,w,c
 11285  003318  0100               	movlb	0	; () banked
 11286  00331A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11287                           
 11288                           ; BSR set to: 0
 11289  00331C  C064  F060         	movff	___wmul@product,?___wmul
 11290  003320  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11291  003324  0012               	return	
 11292  003326                     __end_of___wmul:
 11293                           	opt stack 0
 11294                           tblptru	equ	0xFF8
 11295                           tblptrh	equ	0xFF7
 11296                           tblptrl	equ	0xFF6
 11297                           tablat	equ	0xFF5
 11298                           prodh	equ	0xFF4
 11299                           prodl	equ	0xFF3
 11300                           intcon	equ	0xFF2
 11301                           postinc0	equ	0xFEE
 11302                           wreg	equ	0xFE8
 11303                           indf1	equ	0xFE7
 11304                           postinc1	equ	0xFE6
 11305                           fsr1h	equ	0xFE2
 11306                           fsr1l	equ	0xFE1
 11307                           indf2	equ	0xFDF
 11308                           postinc2	equ	0xFDE
 11309                           fsr2h	equ	0xFDA
 11310                           fsr2l	equ	0xFD9
 11311                           status	equ	0xFD8
 11312                           
 11313 ;; *************** function _Joystick_Polling *****************
 11314 ;; Defined at:
 11315 ;;		line 221 in file "telecomando.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;		None
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;		None               void
 11322 ;; Registers used:
 11323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11329 ;;      Params:         0       0       0       0
 11330 ;;      Locals:         0       0       0       0
 11331 ;;      Temps:          0       1       0       0
 11332 ;;      Totals:         0       1       0       0
 11333 ;;Total ram usage:        1 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; Hardware stack levels required when called:    3
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_main
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text41
 11344  00316A                     __ptext41:
 11345                           	opt stack 0
 11346  00316A                     _Joystick_Polling:
 11347                           	opt stack 27
 11348                           
 11349                           ;telecomando.c: 222: for (i = 0; i < 2; i++) {
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;incstack = 0
 11353  00316A  0E00               	movlw	0
 11354  00316C  6E3E               	movwf	_i,c	;volatile
 11355  00316E                     l5951:
 11356  00316E  0E01               	movlw	1
 11357  003170  643E               	cpfsgt	_i,c	;volatile
 11358  003172  D001               	goto	l282
 11359  003174  0012               	return	
 11360  003176                     l282:
 11361                           
 11362                           ;telecomando.c: 223: ADCON0bits.GO = 1;
 11363  003176  82C2               	bsf	4034,1,c	;volatile
 11364  003178                     l284:
 11365  003178  B2C2               	btfsc	4034,1,c	;volatile
 11366  00317A  D7FE               	goto	l284
 11367                           
 11368                           ;telecomando.c: 225: JoystickValues[i] = ADRESH;
 11369  00317C  503E               	movf	_i,w,c	;volatile
 11370  00317E  0D01               	mullw	1
 11371  003180  0E33               	movlw	low _JoystickValues
 11372  003182  24F3               	addwf	prodl,w,c
 11373  003184  6ED9               	movwf	fsr2l,c
 11374  003186  0E00               	movlw	high _JoystickValues
 11375  003188  20F4               	addwfc	prodh,w,c
 11376  00318A  6EDA               	movwf	fsr2h,c
 11377  00318C  CFC4 FFDF          	movff	4036,indf2	;volatile
 11378                           
 11379                           ;telecomando.c: 226: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 11380  003190  A4C2               	btfss	4034,2,c	;volatile
 11381  003192  D002               	goto	u7210
 11382  003194  0E01               	movlw	1
 11383  003196  D001               	goto	u7216
 11384  003198                     u7210:
 11385  003198  0E00               	movlw	0
 11386  00319A                     u7216:
 11387  00319A  0AFF               	xorlw	255
 11388  00319C  0100               	movlb	0	; () banked
 11389  00319E  6F60               	movwf	??_Joystick_Polling& (0+255),b
 11390  0031A0  0100               	movlb	0	; () banked
 11391  0031A2  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11392  0031A4  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11393  0031A6  50C2               	movf	4034,w,c	;volatile
 11394  0031A8  0100               	movlb	0	; () banked
 11395  0031AA  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11396  0031AC  0BFB               	andlw	-5
 11397  0031AE  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11398  0031B0  6EC2               	movwf	4034,c	;volatile
 11399                           
 11400                           ; BSR set to: 0
 11401  0031B2  2A3E               	incf	_i,f,c	;volatile
 11402  0031B4  D7DC               	goto	l5951
 11403  0031B6                     __end_of_Joystick_Polling:
 11404                           	opt stack 0
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           postinc0	equ	0xFEE
 11413                           wreg	equ	0xFE8
 11414                           indf1	equ	0xFE7
 11415                           postinc1	equ	0xFE6
 11416                           fsr1h	equ	0xFE2
 11417                           fsr1l	equ	0xFE1
 11418                           indf2	equ	0xFDF
 11419                           postinc2	equ	0xFDE
 11420                           fsr2h	equ	0xFDA
 11421                           fsr2l	equ	0xFD9
 11422                           status	equ	0xFD8
 11423                           
 11424 ;; *************** function _ISR_bassa *****************
 11425 ;; Defined at:
 11426 ;;		line 104 in file "telecomando.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;		None
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;		None               void
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11440 ;;      Params:         0       0       0       0
 11441 ;;      Locals:         0       0       0       0
 11442 ;;      Temps:         17       0       0       0
 11443 ;;      Totals:        17       0       0       0
 11444 ;;Total ram usage:       17 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:    2
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		Interrupt level 1
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	intcodelo
 11455  000018                     __pintcodelo:
 11456                           	opt stack 0
 11457  000018                     _ISR_bassa:
 11458                           	opt stack 21
 11459                           
 11460                           ;incstack = 0
 11461  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11462  00001A  CFD8 F001          	movff	status,??_ISR_bassa
 11463  00001E  CFE8 F002          	movff	wreg,??_ISR_bassa+1
 11464  000022  CFE0 F003          	movff	bsr,??_ISR_bassa+2
 11465  000026  CFFA F004          	movff	pclath,??_ISR_bassa+3
 11466  00002A  CFFB F005          	movff	pclatu,??_ISR_bassa+4
 11467  00002E  CFE9 F006          	movff	fsr0l,??_ISR_bassa+5
 11468  000032  CFEA F007          	movff	fsr0h,??_ISR_bassa+6
 11469  000036  CFE1 F008          	movff	fsr1l,??_ISR_bassa+7
 11470  00003A  CFE2 F009          	movff	fsr1h,??_ISR_bassa+8
 11471  00003E  CFD9 F00A          	movff	fsr2l,??_ISR_bassa+9
 11472  000042  CFDA F00B          	movff	fsr2h,??_ISR_bassa+10
 11473  000046  CFF3 F00C          	movff	prodl,??_ISR_bassa+11
 11474  00004A  CFF4 F00D          	movff	prodh,??_ISR_bassa+12
 11475  00004E  CFF6 F00E          	movff	tblptrl,??_ISR_bassa+13
 11476  000052  CFF7 F00F          	movff	tblptrh,??_ISR_bassa+14
 11477  000056  CFF8 F010          	movff	tblptru,??_ISR_bassa+15
 11478  00005A  CFF5 F011          	movff	tablat,??_ISR_bassa+16
 11479                           
 11480                           ;telecomando.c: 105: if (PIR2bits.TMR3IF) {
 11481  00005E  A2A1               	btfss	4001,1,c	;volatile
 11482  000060  D00B               	goto	i1l249
 11483                           
 11484                           ;telecomando.c: 106: time_counter++;
 11485  000062  0E01               	movlw	1
 11486  000064  262F               	addwf	_time_counter,f,c	;volatile
 11487  000066  0E00               	movlw	0
 11488  000068  2230               	addwfc	_time_counter+1,f,c	;volatile
 11489  00006A  2231               	addwfc	_time_counter+2,f,c	;volatile
 11490  00006C  2232               	addwfc	_time_counter+3,f,c	;volatile
 11491                           
 11492                           ;telecomando.c: 107: TMR3H = 0x63;
 11493  00006E  0E63               	movlw	99
 11494  000070  6EB3               	movwf	4019,c	;volatile
 11495                           
 11496                           ;telecomando.c: 108: TMR3L = 0xC0;
 11497  000072  0EC0               	movlw	192
 11498  000074  6EB2               	movwf	4018,c	;volatile
 11499                           
 11500                           ;telecomando.c: 109: PIR2bits.TMR3IF = 0;
 11501  000076  92A1               	bcf	4001,1,c	;volatile
 11502  000078                     i1l249:
 11503  000078  C011  FFF5         	movff	??_ISR_bassa+16,tablat
 11504  00007C  C010  FFF8         	movff	??_ISR_bassa+15,tblptru
 11505  000080  C00F  FFF7         	movff	??_ISR_bassa+14,tblptrh
 11506  000084  C00E  FFF6         	movff	??_ISR_bassa+13,tblptrl
 11507  000088  C00D  FFF4         	movff	??_ISR_bassa+12,prodh
 11508  00008C  C00C  FFF3         	movff	??_ISR_bassa+11,prodl
 11509  000090  C00B  FFDA         	movff	??_ISR_bassa+10,fsr2h
 11510  000094  C00A  FFD9         	movff	??_ISR_bassa+9,fsr2l
 11511  000098  C009  FFE2         	movff	??_ISR_bassa+8,fsr1h
 11512  00009C  C008  FFE1         	movff	??_ISR_bassa+7,fsr1l
 11513  0000A0  C007  FFEA         	movff	??_ISR_bassa+6,fsr0h
 11514  0000A4  C006  FFE9         	movff	??_ISR_bassa+5,fsr0l
 11515  0000A8  C005  FFFB         	movff	??_ISR_bassa+4,pclatu
 11516  0000AC  C004  FFFA         	movff	??_ISR_bassa+3,pclath
 11517  0000B0  C003  FFE0         	movff	??_ISR_bassa+2,bsr
 11518  0000B4  C002  FFE8         	movff	??_ISR_bassa+1,wreg
 11519  0000B8  C001  FFD8         	movff	??_ISR_bassa,status
 11520  0000BC  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11521  0000BE  0010               	retfie	
 11522  0000C0                     __end_of_ISR_bassa:
 11523                           	opt stack 0
 11524                           pclatu	equ	0xFFB
 11525                           pclath	equ	0xFFA
 11526                           tblptru	equ	0xFF8
 11527                           tblptrh	equ	0xFF7
 11528                           tblptrl	equ	0xFF6
 11529                           tablat	equ	0xFF5
 11530                           prodh	equ	0xFF4
 11531                           prodl	equ	0xFF3
 11532                           intcon	equ	0xFF2
 11533                           postinc0	equ	0xFEE
 11534                           fsr0h	equ	0xFEA
 11535                           fsr0l	equ	0xFE9
 11536                           wreg	equ	0xFE8
 11537                           indf1	equ	0xFE7
 11538                           postinc1	equ	0xFE6
 11539                           fsr1h	equ	0xFE2
 11540                           fsr1l	equ	0xFE1
 11541                           bsr	equ	0xFE0
 11542                           indf2	equ	0xFDF
 11543                           postinc2	equ	0xFDE
 11544                           fsr2h	equ	0xFDA
 11545                           fsr2l	equ	0xFD9
 11546                           status	equ	0xFD8
 11547                           
 11548 ;; *************** function _ISR_alta *****************
 11549 ;; Defined at:
 11550 ;;		line 99 in file "telecomando.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;		None
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;		None
 11555 ;; Return value:  Size  Location     Type
 11556 ;;		None               void
 11557 ;; Registers used:
 11558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11564 ;;      Params:         0       0       0       0
 11565 ;;      Locals:         0       0       0       0
 11566 ;;      Temps:         14       0       0       0
 11567 ;;      Totals:        14       0       0       0
 11568 ;;Total ram usage:       14 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:    1
 11571 ;; This function calls:
 11572 ;;		i2_USART_RX
 11573 ;; This function is called by:
 11574 ;;		Interrupt level 2
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           	psect	intcode
 11579  000008                     __pintcode:
 11580                           	opt stack 0
 11581  000008                     _ISR_alta:
 11582                           	opt stack 21
 11583                           
 11584                           ;incstack = 0
 11585  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11586  00000A  CFFA F015          	movff	pclath,??_ISR_alta
 11587  00000E  CFFB F016          	movff	pclatu,??_ISR_alta+1
 11588  000012  ED7C  F018         	call	int_func,f	;refresh shadow registers
 11589                           pclatu	equ	0xFFB
 11590                           pclath	equ	0xFFA
 11591                           tblptru	equ	0xFF8
 11592                           tblptrh	equ	0xFF7
 11593                           tblptrl	equ	0xFF6
 11594                           tablat	equ	0xFF5
 11595                           prodh	equ	0xFF4
 11596                           prodl	equ	0xFF3
 11597                           intcon	equ	0xFF2
 11598                           postinc0	equ	0xFEE
 11599                           fsr0h	equ	0xFEA
 11600                           fsr0l	equ	0xFE9
 11601                           wreg	equ	0xFE8
 11602                           indf1	equ	0xFE7
 11603                           postinc1	equ	0xFE6
 11604                           fsr1h	equ	0xFE2
 11605                           fsr1l	equ	0xFE1
 11606                           bsr	equ	0xFE0
 11607                           indf2	equ	0xFDF
 11608                           postinc2	equ	0xFDE
 11609                           fsr2h	equ	0xFDA
 11610                           fsr2l	equ	0xFD9
 11611                           status	equ	0xFD8
 11612                           
 11613                           	psect	intcode_body
 11614  0030F8                     __pintcode_body:
 11615                           	opt stack 21
 11616  0030F8                     int_func:
 11617                           	opt stack 21
 11618  0030F8  0006               	pop		; remove dummy address from shadow register refresh
 11619  0030FA  CFE9 F017          	movff	fsr0l,??_ISR_alta+2
 11620  0030FE  CFEA F018          	movff	fsr0h,??_ISR_alta+3
 11621  003102  CFE1 F019          	movff	fsr1l,??_ISR_alta+4
 11622  003106  CFE2 F01A          	movff	fsr1h,??_ISR_alta+5
 11623  00310A  CFD9 F01B          	movff	fsr2l,??_ISR_alta+6
 11624  00310E  CFDA F01C          	movff	fsr2h,??_ISR_alta+7
 11625  003112  CFF3 F01D          	movff	prodl,??_ISR_alta+8
 11626  003116  CFF4 F01E          	movff	prodh,??_ISR_alta+9
 11627  00311A  CFF6 F01F          	movff	tblptrl,??_ISR_alta+10
 11628  00311E  CFF7 F020          	movff	tblptrh,??_ISR_alta+11
 11629  003122  CFF8 F021          	movff	tblptru,??_ISR_alta+12
 11630  003126  CFF5 F022          	movff	tablat,??_ISR_alta+13
 11631                           
 11632                           ;telecomando.c: 100: USART_RX();
 11633  00312A  EC1F  F017         	call	i2_USART_RX	;wreg free
 11634  00312E  C022  FFF5         	movff	??_ISR_alta+13,tablat
 11635  003132  C021  FFF8         	movff	??_ISR_alta+12,tblptru
 11636  003136  C020  FFF7         	movff	??_ISR_alta+11,tblptrh
 11637  00313A  C01F  FFF6         	movff	??_ISR_alta+10,tblptrl
 11638  00313E  C01E  FFF4         	movff	??_ISR_alta+9,prodh
 11639  003142  C01D  FFF3         	movff	??_ISR_alta+8,prodl
 11640  003146  C01C  FFDA         	movff	??_ISR_alta+7,fsr2h
 11641  00314A  C01B  FFD9         	movff	??_ISR_alta+6,fsr2l
 11642  00314E  C01A  FFE2         	movff	??_ISR_alta+5,fsr1h
 11643  003152  C019  FFE1         	movff	??_ISR_alta+4,fsr1l
 11644  003156  C018  FFEA         	movff	??_ISR_alta+3,fsr0h
 11645  00315A  C017  FFE9         	movff	??_ISR_alta+2,fsr0l
 11646  00315E  C016  FFFB         	movff	??_ISR_alta+1,pclatu
 11647  003162  C015  FFFA         	movff	??_ISR_alta,pclath
 11648  003166  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11649  003168  0011               	retfie		f
 11650  00316A                     __end_of_ISR_alta:
 11651                           	opt stack 0
 11652                           pclatu	equ	0xFFB
 11653                           pclath	equ	0xFFA
 11654                           tblptru	equ	0xFF8
 11655                           tblptrh	equ	0xFF7
 11656                           tblptrl	equ	0xFF6
 11657                           tablat	equ	0xFF5
 11658                           prodh	equ	0xFF4
 11659                           prodl	equ	0xFF3
 11660                           intcon	equ	0xFF2
 11661                           postinc0	equ	0xFEE
 11662                           fsr0h	equ	0xFEA
 11663                           fsr0l	equ	0xFE9
 11664                           wreg	equ	0xFE8
 11665                           indf1	equ	0xFE7
 11666                           postinc1	equ	0xFE6
 11667                           fsr1h	equ	0xFE2
 11668                           fsr1l	equ	0xFE1
 11669                           bsr	equ	0xFE0
 11670                           indf2	equ	0xFDF
 11671                           postinc2	equ	0xFDE
 11672                           fsr2h	equ	0xFDA
 11673                           fsr2l	equ	0xFD9
 11674                           status	equ	0xFD8
 11675                           
 11676 ;; *************** function i2_USART_RX *****************
 11677 ;; Defined at:
 11678 ;;		line 283 in file "telecomando.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  USART_RX        1   19[COMRAM] unsigned char 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;		None               void
 11685 ;; Registers used:
 11686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11692 ;;      Params:         0       0       0       0
 11693 ;;      Locals:         1       0       0       0
 11694 ;;      Temps:          2       0       0       0
 11695 ;;      Totals:         3       0       0       0
 11696 ;;Total ram usage:        3 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_ISR_alta
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text44
 11706  002E3E                     __ptext44:
 11707                           	opt stack 0
 11708  002E3E                     i2_USART_RX:
 11709                           	opt stack 21
 11710                           
 11711                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
 11712                           
 11713                           ;incstack = 0
 11714  002E3E  AA9E               	btfss	3998,5,c	;volatile
 11715  002E40  D04A               	goto	i2l4331
 11716                           
 11717                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
 11718  002E42  9EF2               	bcf	intcon,7,c	;volatile
 11719                           
 11720                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
 11721  002E44  9CF2               	bcf	intcon,6,c	;volatile
 11722                           
 11723                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
 11724  002E46  92A0               	bcf	4000,1,c	;volatile
 11725                           
 11726                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
 11727  002E48  9A9D               	bcf	3997,5,c	;volatile
 11728                           
 11729                           ;telecomando.c: 290: if (RCREG == 0xAA) {
 11730  002E4A  0EAA               	movlw	170
 11731  002E4C  18AE               	xorwf	4014,w,c	;volatile
 11732  002E4E  A4D8               	btfss	status,2,c
 11733  002E50  D019               	goto	i2l4309
 11734                           
 11735                           ;telecomando.c: 291: USART_Rx[0] = 0xAA;
 11736  002E52  0EAA               	movlw	170
 11737  002E54  0100               	movlb	0	; () banked
 11738  002E56  6FC9               	movwf	_USART_Rx& (0+255),b
 11739                           
 11740                           ;telecomando.c: 292: for (unsigned char i = 1; i < 7; i++) {
 11741  002E58  0E01               	movlw	1
 11742  002E5A  6E14               	movwf	i2USART_RX@i,c
 11743  002E5C                     i2l4297:
 11744                           
 11745                           ; BSR set to: 0
 11746  002E5C  0E06               	movlw	6
 11747  002E5E  6414               	cpfsgt	i2USART_RX@i,c
 11748  002E60  D001               	goto	i2l314
 11749  002E62  D010               	goto	i2l4309
 11750  002E64                     i2l314:
 11751                           
 11752                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
 11753  002E64  8E83               	bsf	3971,7,c	;volatile
 11754  002E66                     i2l316:
 11755  002E66  AA9E               	btfss	3998,5,c	;volatile
 11756  002E68  D7FE               	goto	i2l316
 11757                           
 11758                           ;telecomando.c: 295: }
 11759                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
 11760  002E6A  5014               	movf	i2USART_RX@i,w,c
 11761  002E6C  0D01               	mullw	1
 11762  002E6E  0EC9               	movlw	low _USART_Rx
 11763  002E70  24F3               	addwf	prodl,w,c
 11764  002E72  6ED9               	movwf	fsr2l,c
 11765  002E74  0E00               	movlw	high _USART_Rx
 11766  002E76  20F4               	addwfc	prodh,w,c
 11767  002E78  6EDA               	movwf	fsr2h,c
 11768  002E7A  CFAE FFDF          	movff	4014,indf2	;volatile
 11769                           
 11770                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
 11771  002E7E  9A9E               	bcf	3998,5,c	;volatile
 11772  002E80  2A14               	incf	i2USART_RX@i,f,c
 11773  002E82  D7EC               	goto	i2l4297
 11774  002E84                     i2l4309:
 11775                           
 11776                           ;telecomando.c: 299: }
 11777                           ;telecomando.c: 301: }
 11778                           ;telecomando.c: 302: if (USART_Rx[6] == 0xAA) {
 11779  002E84  0EAA               	movlw	170
 11780  002E86  0100               	movlb	0	; () banked
 11781  002E88  19CF               	xorwf	(_USART_Rx+6)& (0+255),w,b
 11782  002E8A  A4D8               	btfss	status,2,c
 11783  002E8C  D021               	goto	i2l4325
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
 11787  002E8E  0100               	movlb	0	; () banked
 11788  002E90  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
 11789  002E92  D002               	goto	i2u476_40
 11790  002E94  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11791  002E96  D001               	goto	i2u477_45
 11792  002E98                     i2u476_40:
 11793  002E98  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11794  002E9A                     i2u477_45:
 11795                           
 11796                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
 11797  002E9A  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 11798                           
 11799                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
 11800  002E9E  0E80               	movlw	128
 11801  002EA0  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
 11802  002EA2  A4D8               	btfss	status,2,c
 11803  002EA4  D002               	goto	i2l4317
 11804                           
 11805                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
 11806  002EA6  0E00               	movlw	0
 11807  002EA8  6E3B               	movwf	_actual_speed_pk1,c	;volatile
 11808  002EAA                     i2l4317:
 11809                           
 11810                           ;telecomando.c: 308: }
 11811                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
 11812  002EAA  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 11813                           
 11814                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
 11815  002EAE  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
 11816                           
 11817                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
 11818  002EB2  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
 11819                           
 11820                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
 11821  002EB6  503A               	movf	_actual_speed_pk0,w,c	;volatile
 11822  002EB8  C03B  F012         	movff	_actual_speed_pk1,??i2_USART_RX	;volatile
 11823  002EBC  6A13               	clrf	(??i2_USART_RX+1)& (0+255),c
 11824  002EBE  C012  F013         	movff	??i2_USART_RX,??i2_USART_RX+1
 11825  002EC2  6A12               	clrf	??i2_USART_RX,c
 11826  002EC4  1012               	iorwf	??i2_USART_RX,w,c
 11827  002EC6  0100               	movlb	0	; () banked
 11828  002EC8  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
 11829  002ECA  5013               	movf	??i2_USART_RX+1,w,c
 11830  002ECC  0100               	movlb	0	; () banked
 11831  002ECE  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
 11832  002ED0                     i2l4325:
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;telecomando.c: 313: }
 11836                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
 11837  002ED0  9A9E               	bcf	3998,5,c	;volatile
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
 11841  002ED2  8A9D               	bsf	3997,5,c	;volatile
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
 11845  002ED4  82A0               	bsf	4000,1,c	;volatile
 11846  002ED6                     i2l4331:
 11847                           
 11848                           ;telecomando.c: 317: }
 11849                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
 11850  002ED6  8EF2               	bsf	intcon,7,c	;volatile
 11851                           
 11852                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
 11853  002ED8  8CF2               	bsf	intcon,6,c	;volatile
 11854  002EDA  0012               	return		;funcret
 11855  002EDC                     __end_ofi2_USART_RX:
 11856                           	opt stack 0
 11857                           pclatu	equ	0xFFB
 11858                           pclath	equ	0xFFA
 11859                           tblptru	equ	0xFF8
 11860                           tblptrh	equ	0xFF7
 11861                           tblptrl	equ	0xFF6
 11862                           tablat	equ	0xFF5
 11863                           prodh	equ	0xFF4
 11864                           prodl	equ	0xFF3
 11865                           intcon	equ	0xFF2
 11866                           postinc0	equ	0xFEE
 11867                           fsr0h	equ	0xFEA
 11868                           fsr0l	equ	0xFE9
 11869                           wreg	equ	0xFE8
 11870                           indf1	equ	0xFE7
 11871                           postinc1	equ	0xFE6
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           bsr	equ	0xFE0
 11875                           indf2	equ	0xFDF
 11876                           postinc2	equ	0xFDE
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           pclatu	equ	0xFFB
 11881                           pclath	equ	0xFFA
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           intcon	equ	0xFF2
 11889                           postinc0	equ	0xFEE
 11890                           fsr0h	equ	0xFEA
 11891                           fsr0l	equ	0xFE9
 11892                           wreg	equ	0xFE8
 11893                           indf1	equ	0xFE7
 11894                           postinc1	equ	0xFE6
 11895                           fsr1h	equ	0xFE2
 11896                           fsr1l	equ	0xFE1
 11897                           bsr	equ	0xFE0
 11898                           indf2	equ	0xFDF
 11899                           postinc2	equ	0xFDE
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904                           	psect	rparam
 11905  0000                     pclatu	equ	0xFFB
 11906                           pclath	equ	0xFFA
 11907                           tblptru	equ	0xFF8
 11908                           tblptrh	equ	0xFF7
 11909                           tblptrl	equ	0xFF6
 11910                           tablat	equ	0xFF5
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           intcon	equ	0xFF2
 11914                           postinc0	equ	0xFEE
 11915                           fsr0h	equ	0xFEA
 11916                           fsr0l	equ	0xFE9
 11917                           wreg	equ	0xFE8
 11918                           indf1	equ	0xFE7
 11919                           postinc1	equ	0xFE6
 11920                           fsr1h	equ	0xFE2
 11921                           fsr1l	equ	0xFE1
 11922                           bsr	equ	0xFE0
 11923                           indf2	equ	0xFDF
 11924                           postinc2	equ	0xFDE
 11925                           fsr2h	equ	0xFDA
 11926                           fsr2l	equ	0xFD9
 11927                           status	equ	0xFD8
 11928                           
 11929                           	psect	temp
 11930  000046                     btemp:
 11931                           	opt stack 0
 11932  000046                     	ds	1
 11933  0000                     int$flags	set	btemp
 11934                           pclatu	equ	0xFFB
 11935                           pclath	equ	0xFFA
 11936                           tblptru	equ	0xFF8
 11937                           tblptrh	equ	0xFF7
 11938                           tblptrl	equ	0xFF6
 11939                           tablat	equ	0xFF5
 11940                           prodh	equ	0xFF4
 11941                           prodl	equ	0xFF3
 11942                           intcon	equ	0xFF2
 11943                           postinc0	equ	0xFEE
 11944                           fsr0h	equ	0xFEA
 11945                           fsr0l	equ	0xFE9
 11946                           wreg	equ	0xFE8
 11947                           indf1	equ	0xFE7
 11948                           postinc1	equ	0xFE6
 11949                           fsr1h	equ	0xFE2
 11950                           fsr1l	equ	0xFE1
 11951                           bsr	equ	0xFE0
 11952                           indf2	equ	0xFDF
 11953                           postinc2	equ	0xFDE
 11954                           fsr2h	equ	0xFDA
 11955                           fsr2l	equ	0xFD9
 11956                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         89
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      69
    BANK0           160    105     151
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_USART_RX

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _USART_Send->_delay_ms
    _putsUSART->_WriteUSART
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  182033
                                             97 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                           _USART_RX
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   61471
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1640
                                              8 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                             14 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                             12 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           5     5      0    2132
                                              8 BANK0      5     5      0
                           _delay_ms
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     170
                                              1 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX                                             3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   81370
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             87 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             21 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             79 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             59 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     639
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9827
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                             12 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                             12 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                              8 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1572
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            14    14      0      68
                                             20 COMRAM    14    14      0
                         i2_USART_RX
 ---------------------------------------------------------------------------------
 (10) i2_USART_RX                                          3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   _USART_RX
   _USART_Send
     _delay_ms
       ___wmul
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   i2_USART_RX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     69      97       4       94.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      45       1       73.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101       9        0.0%
DATA                 0      0     101      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 22:37:46 2016

                             _i 003E       __size_of_delay_set_quartz 000A                    ?_LCD_Handler 0001  
                  ___awdiv@sign 006B              delay_s@repeat_loop 0069                              bsr 000FE0  
           ___wmul@multiplicand 0062                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                             l101 32AA  
                           l314 2D18                             l316 2D1A                             l261 18E4  
                           l254 17C2                             l409 069C                             l282 3176  
                           l284 3178                             l700 22C4                             l452 30CA  
                           l277 3484                             l453 30CC                             l454 30D8  
                           l455 30DA                             l448 30B0                             l465 340C  
                           l299 2592                             l690 248A                             l936 307A  
                           l794 2172                             l883 2CDC                             l787 20AE  
                           l788 20F2                             l893 2F64                             l977 0FDE  
                           l994 1152                             l978 0FD2                             l979 0F9E  
          ??_PWR_Button_Polling 0060                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 006C                             _dir 003D                             _str 0119  
                  ___awmod@sign 0065                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0082                    ___flmul@bexp 0087                    ___flmul@sign 0081  
                  ___flmul@temp 008C                    ___flmul@prod 0088                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A0                    __CFG_WDT$OFF 000000  
                          l1003 11E6                            l1100 1F82                            l1070 15F6  
                          l1063 135A                            l1080 1708                            l1072 1664  
                          l1092 1F0E                            l1085 1E62                            l1099 1F6A  
                          l5111 2128                            l5015 1DC6                            l5007 1CDA  
                          l5121 2158                            l5211 2272                            l5203 21D2  
                          l5131 233A                            l5123 2168                            l5115 213C  
                          l5035 0B70                            l5301 2F08                            l5053 0DD2  
                          l5029 0AAA                            l5207 2220                            l5303 2F0E  
                          l5151 23B4                            l5047 0D0C                            l5039 0B9C  
                          l6111 18D0                            l5217 2310                            l5225 32DE  
                          l4601 0EB8                            l5137 2360                            l5081 205A  
                          l5065 3402                            l6121 18F0                            l6113 18D6  
                          l5251 2930                            l5235 28C2                            l5307 2F52  
                          l5323 1E9A                            l5171 2440                            l5075 2020  
                          l6123 18F8                            l6107 18BE                            l5261 2960  
                          l5325 1EA2                            l5317 1E72                            l5181 2470  
                          l5501 02A8                            l6133 19D6                            l4703 1184  
                          l5263 2970                            l5255 2944                            l5335 1F4C  
                          l5327 1EB2                            l5183 2480                            l5175 2454  
                          l5159 2408                            l5191 34A6                            l6143 1ACC  
                          l4545 329C                            l4713 11A6                            l4721 11C0  
                          l4609 0EE2                            l5265 297A                            l5281 2C70  
                          l5337 1F5C                            l5329 1EF0                            l5513 035E  
                          l6137 1A54                            l5363 29AE                            l5371 2A76  
                          l4651 0FB2                            l5291 2CCA                            l5283 2C76  
                          l4803 1382                            l5515 0374                            l5355 3396  
                          l5365 29E0                            l5701 3036                            l4709 119A  
                          l4653 0FB8                            l4573 0E40                            l5269 2996  
                          l5349 1FD4                            l4901 2B90                            l5525 0418  
                          l5517 03B0                            l5509 032C                            l5453 0120  
                          l5445 00EE                            l5367 2A12                            l5375 33B8  
                          l5383 3436                            l5711 306C                            l5703 303C  
                          l4751 127C                            l4743 124E                            l4719 11BA  
                          l4639 0F1E                            l4591 0E8A                            l4567 0E1C  
                          l5279 2C60                            l5631 08CE                            l5623 0876  
                          l5615 0842                            l5607 081A                            l5543 052C  
                          l5519 03C6                            l5463 018C                            l5439 00D4  
                          l5359 33A8                            l6079 17A2                            l5369 2A44  
                          l4753 1280                            l4729 11E0                            l4681 1050  
                          l4657 0FC2                            l4585 0E76                            l4577 0E4A  
                          l4913 2BC4                            l5609 0828                            l5561 05A4  
                          l5545 0532                            l5529 044A                            l5617 0850  
                          l5457 0166                            l6089 17CC                            l5379 33CE  
                          l5387 344A                            l4747 1270                            l4739 123C  
                          l4675 1040                            l4667 1002                            l5299 2EF8  
                          l4915 2BD0                            l4907 2BA6                            l4851 160A  
                          l5635 08FA                            l5627 089E                            l5563 05AC  
                          l5571 0642                            l5539 04B4                            l5475 01D2  
                          l5467 0192                            l5459 017C                            l5731 2D0E  
                          l4677 1046                            l4685 1062                            l4597 0EAE  
                          l4933 2C28                            l4925 2C06                            l4917 2BD6  
                          l4861 165E                            l4845 15E0                            l5581 067E  
                          l5573 0650                            l5557 0578                            l5485 0224  
                          l5469 01B8                            l5637 0900                            l5661 30B2  
                          l5653 30A0                            l4759 1294                            l4695 1132  
                          l4871 16B4                            l4775 12E8                            l5639 091E  
                          l5751 2D62                            l5743 2D3C                            l5903 2546  
                          l4929 2C14                            l4961 2E12                            l4953 2DDC  
                          l4945 2DB8                            l4793 1342                            l4777 12EE  
                          l4769 12C4                            l5593 06D0                            l5585 06A0  
                          l5921 259E                            l5913 2560                            l4955 2DE8  
                          l4875 16DA                            l4795 1348                            l4787 131E  
                          l4779 1300                            l5579 066A                            l5923 25A4  
                          l5907 254C                            l4957 2DEE                            l4965 2E20  
                          l4949 2DC8                            l4885 1728                            l4877 16EE  
                          l5597 0732                            l5765 2D96                            l5909 2556  
                          l5951 316E                            l4887 1732                            l4799 136E  
                          l5759 2D90                            l5943 25E0                            l5927 25B8  
                          l5871 24C4                            l4969 2E34                            l5699 302A  
                          l5939 25D6                            l5891 2500                            l5981 280A  
                          l5877 24D2                            l5983 281C                            l5895 250E  
                          l5985 282C                            l5889 24F4                            l5899 2518  
                          STR_1 3FBA                            STR_2 3F90                            STR_3 3F7B  
                          STR_4 3FBA                            STR_5 3FA5                            STR_6 3FCF  
                          STR_7 3FF9                            STR_8 3FEF                            STR_9 3FFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            _PIE1 000F9D  
                          u5200 0F80                            u5210 0F82                            u7000 3492  
                          u5065 3252                            u5066 3254                            u5075 325E  
                          u5076 3260                            u6140 28E2                            u5085 326A  
                          u5086 326C                            u5190 0F68                            u5095 3276  
                          u7015 3494                            u5096 3278                            u6145 28D6  
                          u7210 3198                            u7216 319A                            u5650 16C8  
                          u5570 1582                            u7430 1AB8                            u5911 2036  
                          u5575 1576                            u6640 0694                            u7440 1B30  
                          u7360 188C                            u7370 18A4                            u6395 34BA  
                          u6396 34BC                            u7376 18A6                            u5891 1FFC  
                          u6940 2D50                            u7487 329E                            u6955 2D52  
                          _main 174C       __size_of_LCD_send_command 003A                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0046                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00C0  
                 __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032                    _sprintf$2399 0100  
                delay_s@value_s 0068                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 347C                   _LCD_backlight 34AC         __size_of_LCD_initialize 016E  
                   ?i2_USART_RX 0001                   ___fltol@sign1 009F                 __end_of___fladd 12A6  
                         ?_main 0001                 __end_of___awdiv 2C32                 __end_of___flneg 32F0  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2E3E                 __end_of___flmul 174C  
               __end_of___flsub 31FE                 __end_of___fltol 29A8                 __end_of___lldiv 2CEE  
               ___awdiv@divisor 0068                 __end_of___llmod 2F76                           _T3CON 000FB1  
               __end_of___lwdiv 3084                           i1l249 0078                           i2l314 2E64  
                         i2l316 2E66                 ___awdiv@counter 006A                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR3H 000FB3                           _TMR3L 000FB2  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
               __end_of_delay_s 33B6                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 316A                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 3F7B                           _scale 092C                 __end_of_isdigit 340C  
              __end_of_USART_RX 2D9C                  __pbitbssCOMRAM 0220                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 092C                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0001             __size_of_LCD_cursor 0032                  WriteUSART@data 0060  
               __initialization 31FE                  ?_LCD_backlight 0001                    __end_of_main 1B46  
 __size_of_board_initialization 00E0                   _LCD_goto_line 29A8               ?_Joystick_Polling 0001  
            ??_Joystick_Polling 0060               ?_LCD_write_string 0071                          ??_main 00C1  
                 __activetblptr 000002                  _JoystickValues 0033              ??_LCD_write_string 0073  
          __size_of__tdiv_to_l_ 019E               __end_of_LCD_clear 338A          LCD_write_string@buffer 0071  
                        _ADCON1 000FC1                ___llmod@dividend 0060                          ?_scale 008E  
                        _ADRESH 000FC4                ___awdiv@dividend 0066                 __CFG_BBSIZ$1024 000000  
                        i2l4331 2ED6                          i2l4317 2EAA                          i2l4325 2ED0  
                        i2l4309 2E84                          i2l4297 2E5C                          _SPBRGH 000FB0  
           __size_ofi2_USART_RX 009E                __end_of___xxtofl 1FE6                 _switch_position 0043  
              __end_of_delay_ms 32B8                  __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0  
              __end_of__powers_ 3F53              __size_of_OpenUSART 0074                  ?_LCD_goto_line 0001  
                        ___flge 2184                       ??___fladd 00A3                _delay_set_quartz 34BE  
                        ___wmul 32F0                       ??___awdiv 006A                       ??___flneg 0064  
                __CFG_STVREN$ON 000000                       ??___awmod 0064                       ??___flmul 007D  
                     ??___flsub 00B7                       ??___fltol 009B                       ??___lldiv 0068  
                     ??___llmod 0068                       ??___lwdiv 0064         __size_of_LCD_write_char 0096  
                        _fround 1B46  LCD_initialize@quartz_frequency 006E                          clear_0 3204  
                        clear_1 3210                          clear_2 321E                ___awdiv@quotient 006C  
               ___awmod@divisor 0062                       ??_delay_s 0068            __size_of_LCD_Handler 0120  
               ___awmod@counter 0064                 __CFG_BOREN$BOHW 000000               _JoystickConstants 0023  
                  __pdataCOMRAM 0045                       ??_isdigit 0060                    __mediumconst 3EEA  
                        tblptrh 000FF7                  _analogic_brake 003C                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0172                       ??_sprintf 00BF  
                    ___flge@ff1 0060                      ___flge@ff2 0064                    ___xxtofl@arg 0071  
                  ___xxtofl@exp 0070                    ___xxtofl@val 0067                      __accesstop 0060  
       __end_of__initialization 3236                      ___flneg@f1 0060                _LCD_send_command 3244  
                 ___rparam_used 000001                      ___fltol@f1 0097                 ??_LCD_backlight 0060  
                    _WriteUSART 3498                  __pcstackCOMRAM 0001                       ?_ISR_alta 0001  
                 __end_of_scale 0DFE                  _LCD_initialize 260E               _LCD_write_message 33B6  
                     ?_USART_RX 0001              ?_LCD_write_message 0071                      __div_to_l_ 2314  
                  ??_LCD_cursor 006D                    _actual_speed 00EB               __end_of_OpenUSART 30F8  
               __div_to_l_@exp1 006D             ??_LCD_write_message 0073                 __div_to_l_@cntr 006C  
                       ??_scale 0092                 __div_to_l_@quot 0068                      __pbssBANK0 00C9  
                    __pbssBANK1 0119                      _actual_dir 0220                   __div_to_l_@f1 0060  
                 __div_to_l_@f2 0064                 ??_LCD_goto_line 006C              __end_of_LCD_cursor 3358  
        __end_of_LCD_initialize 277C                         ?___flge 0060                         ?___wmul 0060  
                    ??_ISR_alta 0015       __end_of_LCD_write_message 33E2               ?_LCD_enable_pulse 0001  
                 putsUSART@data 0061                         ?_fround 008E                    ??i2_USART_RX 0012  
                    ??_USART_RX 0060              ??_LCD_enable_pulse 0068     __size_of_PWR_Button_Polling 001C  
                     ?___xxtofl 0067                LCD_cursor@active 006D                       ?_delay_ms 0066  
            __size_of_putsUSART 0028                       USART_RX@i 0062              __end_ofi2_USART_RX 2EDC  
                  ??_USART_Send 0068               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2398 0092                         __Lparam 0000                delay_ms@value_ms 0066  
                   ?_WriteUSART 0001                 ?_LCD_initialize 0001                 __size_of___flge 0190  
                       ___fladd 0DFE                         ___awdiv 2B74                         ___flneg 32B8  
                       ___awmod 2D9C                         ___flmul 12A6                         ___flsub 31B6  
                       ___fltol 289C                         ___lldiv 2C32                 __size_of___wmul 0036  
                _LCD_write_char 2F76                         ___llmod 2EDC                         ___lwdiv 300C  
                       __pcinit 31FE                 __size_of_fround 02D2                         _delay_s 338A  
                       __ramtop 0300             LCD_write_char@value 0070                         __ptext0 174C  
                       __ptext1 2A94                         __ptext2 338A                         __ptext3 3084  
                       __ptext4 260E                         __ptext5 34BE                         __ptext6 3326  
                       __ptext7 34AC                         __ptext8 249C                         __ptext9 340C  
                     _ECU_Check 0038                     ?__div_to_l_ 0060                LCD_write_char@D0 006F  
              LCD_write_char@D1 006E                LCD_write_char@D2 006D                LCD_write_char@D3 006C  
                       _dpowers 3F53                         _isdigit 33E2                      ??___xxtofl 006B  
              ___awmod@dividend 0060                      ??_delay_ms 0068    __end_of_board_initialization 2B74  
     __size_of_Joystick_Polling 004C              __end_of_USART_Send 260E        __end_of_delay_set_quartz 34C8  
                       _sprintf 00C4                  __pintcode_body 30F8                       _LCD_clear 3358  
          end_of_initialization 3236       __size_of_LCD_write_string 0026                   __Lmediumconst 3EEA  
                       int_func 30F8                   _Battery_Check 0037             LCD_backlight@active 0060  
               ___lldiv@divisor 0064              LCD_cursor@blinking 006C                 ___lldiv@counter 006C  
        __end_of_LCD_write_char 300C                       _RCSTAbits 000FAB                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE               __end_of_putsUSART 3434  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0060                  __tdiv_to_l_@f2 0064  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 0068                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 327E  
                   ___fladd@grs 00AE                   ___xxtofl@sign 006F                       _TRISCbits 000F94  
           __size_of_WriteUSART 0014                      ?_LCD_clear 0001         _clock_counter_reference 00F5  
                   ___flmul@grs 0083                       _TXSTAbits 000FAC             __size_of__div_to_l_ 0188  
       LCD_write_integer@F17027 00D9                 ?_LCD_write_char 0001                   ??_LCD_Handler 00C1  
                __end_of___flge 2314                      ?_ISR_bassa 0001                  __end_of___wmul 3326  
                 __pidataCOMRAM 34C8               __size_of_ISR_alta 3162                  __end_of_fround 1E18  
                   USART_Send@i 006A               __size_of_USART_RX 00AE             start_initialization 31FE  
           __end_of__tdiv_to_l_ 2184                       _OpenUSART 3084                 ___llmod@divisor 0064  
               ___llmod@counter 0068           __end_of_LCD_backlight 34BE                        ??___flge 0068  
          _board_initialization 2A94                        ??___wmul 0064                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0092                   sprintf@tmpval 010E                       ___fladd@a 009F  
                     ___fladd@b 009B                      fround@prec 009A             __end_of_LCD_Handler 289C  
                     ___flmul@a 0079                       ___flmul@b 0075                     __pbssCOMRAM 0023  
                     ___flsub@a 00B3                       ___flsub@b 00AF                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 316A               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$2005 0061               __size_of_delay_ms 003A  
                   ??_LCD_clear 006C         LCD_write_message@buffer 0071                _LCD_write_string 3434  
                    ?_OpenUSART 0060                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 006E                       __pnvBANK0 00F5  
     delay_set_quartz@frequency 0060                ___lwdiv@dividend 0060              LCD_send_command@D0 006A  
            LCD_send_command@D1 0069              LCD_send_command@D2 0068              LCD_send_command@D3 006B  
                  ??_WriteUSART 0060           __end_of_LCD_goto_line 2A94           ?_board_initialization 0001  
                     __pintcode 0008                   __pmediumconst 3EEA                        ?___fladd 009B  
                      ?___awdiv 0066                        ?___flneg 0060                        ?___awmod 0060  
                      ?___flmul 0075                        ?___flsub 00AF                        ?___fltol 0097  
                      ?___lldiv 0060                        ?___llmod 0060                       __npowers_ 3EEB  
                      ?___lwdiv 0060                     ??_ISR_bassa 0001                     __pintcodelo 0018  
    __end_of_PWR_Button_Polling 3498                        ?_delay_s 0001                     __tdiv_to_l_ 1FE6  
                  ??__div_to_l_ 0068                        ?_isdigit 0001                ___lwdiv@quotient 0065  
                      ?_sprintf 00B7                  __size_of_scale 04D2              __end_of_WriteUSART 34AC  
             ?_delay_set_quartz 0001              ??_delay_set_quartz 0060                  ___wmul@product 0064  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2    _delay_quartz_frequency_value 0045  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 249C                        _PIR2bits 000FA1                        i2u476_40 2E98  
                      i2u477_45 2E9A                       _pr_time_1 002B                       _pr_time_2 00E3  
                     _pr_time_3 00E7                       _set_speed 0035                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _ISR_alta 0008                     _LCD_Handler 277C  
                      _USART_RX 2CEE                        _USART_Rx 00C9                        _USART_Tx 00ED  
                    _ADCON0bits 000FC2                       _putsUSART 340C                      _ADCON2bits 000FC0  
             ___wmul@multiplier 0060               ?_LCD_send_command 0068                USART_Send@i_1320 006B  
              USART_Send@i_1329 006C                _actual_speed_pk0 003A                _actual_speed_pk1 003B  
              _actual_speed_kmh 00DF              ??_LCD_send_command 006B                   _set_speed_pk0 003F  
                 _set_speed_pk1 0040                     ??_OpenUSART 0062                ??_LCD_write_char 006C  
                   i2USART_RX@i 0014                 OpenUSART@config 0062               LCD_goto_line@line 006C  
                      __Hrparam 0000          ??_board_initialization 0073                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 0038  
              __size_of___awmod 00A2                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00BC                __size_of___llmod 009A  
              __size_of___lwdiv 0078                     _fround$2396 0096                     _fround$2397 0092  
                    ?_putsUSART 0061                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1E18                __size_of_isdigit 002A  
                      _delay_ms 327E                 ___lwdiv@divisor 0062                 ___lwdiv@counter 0064  
              _LCD_enable_pulse 345A                        __ptext10 3498                        __ptext11 2CEE  
                      __ptext20 2B74                        __ptext12 347C                        __ptext21 1FE6  
                      __ptext13 277C                        __ptext30 2184                        __ptext22 2314  
                      __ptext14 00C4                        __ptext31 300C                        __ptext23 1E18  
                      __ptext15 092C                        __ptext40 32F0                        __ptext32 3434  
                      __ptext24 2EDC                        __ptext16 33E2                        __ptext41 316A  
                      __ptext33 33B6                        __ptext25 2C32                        __ptext17 1B46  
                      __ptext34 2F76                        __ptext26 289C                        __ptext18 12A6  
                      __ptext35 29A8                        __ptext27 31B6                        __ptext19 2D9C  
                      __ptext44 2E3E                        __ptext36 3358                        __ptext28 0DFE  
                      __ptext37 3244                        __ptext29 32B8                        __ptext38 345A  
                      __ptext39 327E                        __powers_ 3F1F                __size_of_sprintf 0868  
                 __size_of_main 03FA                        _wait_low 0222        __end_of_Joystick_Polling 31B6  
                      int$flags 0046        __end_of_LCD_write_string 345A                      _LCD_cursor 3326  
                    _INTCONbits 000FF2                    _set_steering 0041                  OpenUSART@spbrg 0060  
                      isdigit@c 0062                        scale@scl 0096                    _time_counter 002F  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 0070                       sprintf@sp 00B7                __tdiv_to_l_@cntr 006F  
              __tdiv_to_l_@quot 006B                ___lldiv@dividend 0060                    _spam_counter 0042  
                    i2_USART_RX 2E3E                    ?__tdiv_to_l_ 0060                     ??_putsUSART 0063  
                      sprintf@c 0118                        sprintf@f 00B9                ___lldiv@quotient 0068  
        __size_of_LCD_backlight 0012                   ___fladd@signs 00AB              _PWR_Button_Polling 347C  
                  ___fladd@aexp 00AC                    ___fladd@bexp 00AD             ?_PWR_Button_Polling 0001  
                  _USART_Tx_Old 00D1                    _USART_Status 0039                      _USART_Send 249C  
                  _power_switch 0221  
