

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 28 20:52:50 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003240                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  003240  10                 	db	16
    71                           
    72                           	psect	smallconst
    73  000300                     __psmallconst:
    74                           	opt stack 0
    75  000300  00                 	db	0
    76  000301                     __npowers_:
    77                           	opt stack 0
    78  000301  0000               	dw	0
    79  000303  3F80               	dw	16256
    80  000305  CCCD               	dw	52429
    81  000307  3DCC               	dw	15820
    82  000309  D70A               	dw	55050
    83  00030B  3C23               	dw	15395
    84  00030D  126F               	dw	4719
    85  00030F  3A83               	dw	14979
    86  000311  B717               	dw	46871
    87  000313  38D1               	dw	14545
    88  000315  C5AC               	dw	50604
    89  000317  3727               	dw	14119
    90  000319  37BD               	dw	14269
    91  00031B  3586               	dw	13702
    92  00031D  BF95               	dw	49045
    93  00031F  33D6               	dw	13270
    94  000321  CC77               	dw	52343
    95  000323  322B               	dw	12843
    96  000325  705F               	dw	28767
    97  000327  3089               	dw	12425
    98  000329  E6FF               	dw	59135
    99  00032B  2EDB               	dw	11995
   100  00032D  E508               	dw	58632
   101  00032F  1E3C               	dw	7740
   102  000331  4260               	dw	16992
   103  000333  0DA2               	dw	3490
   104  000335                     __end_of__npowers_:
   105                           	opt stack 0
   106  000335                     __powers_:
   107                           	opt stack 0
   108  000335  0000               	dw	0
   109  000337  3F80               	dw	16256
   110  000339  0000               	dw	0
   111  00033B  4120               	dw	16672
   112  00033D  0000               	dw	0
   113  00033F  42C8               	dw	17096
   114  000341  0000               	dw	0
   115  000343  447A               	dw	17530
   116  000345  4000               	dw	16384
   117  000347  461C               	dw	17948
   118  000349  5000               	dw	20480
   119  00034B  47C3               	dw	18371
   120  00034D  2400               	dw	9216
   121  00034F  4974               	dw	18804
   122  000351  9680               	dw	38528
   123  000353  4B18               	dw	19224
   124  000355  BC20               	dw	48160
   125  000357  4CBE               	dw	19646
   126  000359  6B28               	dw	27432
   127  00035B  4E6E               	dw	20078
   128  00035D  02F9               	dw	761
   129  00035F  5015               	dw	20501
   130  000361  78EC               	dw	30956
   131  000363  60AD               	dw	24749
   132  000365  F2CA               	dw	62154
   133  000367  7149               	dw	29001
   134  000369                     __end_of__powers_:
   135                           	opt stack 0
   136  000369                     _dpowers:
   137                           	opt stack 0
   138  000369  0001               	dw	1
   139  00036B  0000               	dw	0
   140  00036D  000A               	dw	10
   141  00036F  0000               	dw	0
   142  000371  0064               	dw	100
   143  000373  0000               	dw	0
   144  000375  03E8               	dw	1000
   145  000377  0000               	dw	0
   146  000379  2710               	dw	10000
   147  00037B  0000               	dw	0
   148  00037D  86A0               	dw	34464
   149  00037F  0001               	dw	1
   150  000381  4240               	dw	16960
   151  000383  000F               	dw	15
   152  000385  9680               	dw	38528
   153  000387  0098               	dw	152
   154  000389  E100               	dw	57600
   155  00038B  05F5               	dw	1525
   156  00038D  CA00               	dw	51712
   157  00038F  3B9A               	dw	15258
   158  000391                     __end_of_dpowers:
   159                           	opt stack 0
   160  000391                     STR_1:
   161  000391  3D                 	db	61	;'='
   162  000392  3D                 	db	61	;'='
   163  000393  3D                 	db	61	;'='
   164  000394  20                 	db	32
   165  000395  56                 	db	86	;'V'
   166  000396  45                 	db	69	;'E'
   167  000397  48                 	db	72	;'H'
   168  000398  49                 	db	73	;'I'
   169  000399  43                 	db	67	;'C'
   170  00039A  4C                 	db	76	;'L'
   171  00039B  45                 	db	69	;'E'
   172  00039C  20                 	db	32
   173  00039D  44                 	db	68	;'D'
   174  00039E  41                 	db	65	;'A'
   175  00039F  54                 	db	84	;'T'
   176  0003A0  41                 	db	65	;'A'
   177  0003A1  20                 	db	32
   178  0003A2  3D                 	db	61	;'='
   179  0003A3  3D                 	db	61	;'='
   180  0003A4  3D                 	db	61	;'='
   181  0003A5  00                 	db	0
   182  0003A6                     STR_8:
   183  0003A6  3D                 	db	61	;'='
   184  0003A7  3D                 	db	61	;'='
   185  0003A8  3D                 	db	61	;'='
   186  0003A9  3D                 	db	61	;'='
   187  0003AA  3D                 	db	61	;'='
   188  0003AB  3D                 	db	61	;'='
   189  0003AC  3D                 	db	61	;'='
   190  0003AD  3D                 	db	61	;'='
   191  0003AE  3D                 	db	61	;'='
   192  0003AF  3D                 	db	61	;'='
   193  0003B0  3D                 	db	61	;'='
   194  0003B1  3D                 	db	61	;'='
   195  0003B2  3D                 	db	61	;'='
   196  0003B3  3D                 	db	61	;'='
   197  0003B4  3D                 	db	61	;'='
   198  0003B5  3D                 	db	61	;'='
   199  0003B6  3D                 	db	61	;'='
   200  0003B7  3D                 	db	61	;'='
   201  0003B8  3D                 	db	61	;'='
   202  0003B9  3D                 	db	61	;'='
   203  0003BA  00                 	db	0
   204  0003BB                     STR_2:
   205  0003BB  44                 	db	68	;'D'
   206  0003BC  69                 	db	105	;'i'
   207  0003BD  72                 	db	114	;'r'
   208  0003BE  65                 	db	101	;'e'
   209  0003BF  63                 	db	99	;'c'
   210  0003C0  74                 	db	116	;'t'
   211  0003C1  69                 	db	105	;'i'
   212  0003C2  6F                 	db	111	;'o'
   213  0003C3  6E                 	db	110	;'n'
   214  0003C4  3A                 	db	58	;':'
   215  0003C5  20                 	db	32
   216  0003C6  00                 	db	0
   217  0003C7                     STR_6:
   218  0003C7  53                 	db	83	;'S'
   219  0003C8  70                 	db	112	;'p'
   220  0003C9  65                 	db	101	;'e'
   221  0003CA  65                 	db	101	;'e'
   222  0003CB  64                 	db	100	;'d'
   223  0003CC  3A                 	db	58	;':'
   224  0003CD  20                 	db	32
   225  0003CE  25                 	db	37
   226  0003CF  2E                 	db	46
   227  0003D0  33                 	db	51	;'3'
   228  0003D1  66                 	db	102	;'f'
   229  0003D2  00                 	db	0
   230  0003D3                     STR_9:
   231  0003D3  57                 	db	87	;'W'
   232  0003D4  61                 	db	97	;'a'
   233  0003D5  69                 	db	105	;'i'
   234  0003D6  74                 	db	116	;'t'
   235  0003D7  2E                 	db	46
   236  0003D8  2E                 	db	46
   237  0003D9  2E                 	db	46
   238  0003DA  00                 	db	0
   239  0003DB                     STR_4:
   240  0003DB  42                 	db	66	;'B'
   241  0003DC  4B                 	db	75	;'K'
   242  0003DD  57                 	db	87	;'W'
   243  0003DE  44                 	db	68	;'D'
   244  0003DF  00                 	db	0
   245  0003E0                     STR_7:
   246  0003E0  4B                 	db	75	;'K'
   247  0003E1  6D                 	db	109	;'m'
   248  0003E2  2F                 	db	47
   249  0003E3  68                 	db	104	;'h'
   250  0003E4  00                 	db	0
   251  0003E5                     STR_3:
   252  0003E5  46                 	db	70	;'F'
   253  0003E6  57                 	db	87	;'W'
   254  0003E7  44                 	db	68	;'D'
   255  0003E8  00                 	db	0
   256  0003E9                     STR_5:
   257  0003E9  50                 	db	80	;'P'
   258  0003EA  00                 	db	0
   259                           
   260                           ; #config settings
   261  0003EB  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	nvCOMRAM
   264  000043                     __pnvCOMRAM:
   265                           	opt stack 0
   266  000043                     _clock_counter_reference:
   267                           	opt stack 0
   268  000043                     	ds	2
   269  0000                     _ADCON0bits	set	4034
   270  0000                     _ADCON1	set	4033
   271  0000                     _ADCON2bits	set	4032
   272  0000                     _ADRESH	set	4036
   273  0000                     _INTCONbits	set	4082
   274  0000                     _IPR1bits	set	3999
   275  0000                     _IPR2bits	set	4002
   276  0000                     _LATA	set	3977
   277  0000                     _LATAbits	set	3977
   278  0000                     _LATB	set	3978
   279  0000                     _LATC	set	3979
   280  0000                     _LATCbits	set	3979
   281  0000                     _LATD	set	3980
   282  0000                     _LATDbits	set	3980
   283  0000                     _LATE	set	3981
   284  0000                     _PIE1	set	3997
   285  0000                     _PIE1bits	set	3997
   286  0000                     _PIE2bits	set	4000
   287  0000                     _PIR1bits	set	3998
   288  0000                     _PIR2bits	set	4001
   289  0000                     _PORTAbits	set	3968
   290  0000                     _RCONbits	set	4048
   291  0000                     _RCREG	set	4014
   292  0000                     _RCSTA	set	4011
   293  0000                     _RCSTAbits	set	4011
   294  0000                     _SPBRG	set	4015
   295  0000                     _SPBRGH	set	4016
   296  0000                     _T3CON	set	4017
   297  0000                     _TMR3H	set	4019
   298  0000                     _TMR3L	set	4018
   299  0000                     _TRISA	set	3986
   300  0000                     _TRISB	set	3987
   301  0000                     _TRISC	set	3988
   302  0000                     _TRISCbits	set	3988
   303  0000                     _TRISD	set	3989
   304  0000                     _TRISE	set	3990
   305  0000                     _TXREG	set	4013
   306  0000                     _TXSTA	set	4012
   307  0000                     _TXSTAbits	set	4012
   308                           
   309                           	psect	cinit
   310  002F80                     __pcinit:
   311                           	opt stack 0
   312  002F80                     start_initialization:
   313                           	opt stack 0
   314  002F80                     __initialization:
   315                           	opt stack 0
   316                           
   317                           ; Clear objects allocated to BANK1 (12 bytes)
   318  002F80  EE01  F019         	lfsr	0,__pbssBANK1
   319  002F84  0E0C               	movlw	12
   320  002F86                     clear_0:
   321  002F86  6AEE               	clrf	postinc0,c
   322  002F88  06E8               	decf	wreg,f,c
   323  002F8A  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to BANK0 (30 bytes)
   326  002F8C  EE00  F0D2         	lfsr	0,__pbssBANK0
   327  002F90  0E1E               	movlw	30
   328  002F92                     clear_1:
   329  002F92  6AEE               	clrf	postinc0,c
   330  002F94  06E8               	decf	wreg,f,c
   331  002F96  E1FD               	bnz	clear_1
   332                           
   333                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   334  002F98  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   335                           
   336                           ; Clear objects allocated to COMRAM (35 bytes)
   337  002F9A  EE00  F001         	lfsr	0,__pbssCOMRAM
   338  002F9E  0E23               	movlw	35
   339  002FA0                     clear_2:
   340  002FA0  6AEE               	clrf	postinc0,c
   341  002FA2  06E8               	decf	wreg,f,c
   342  002FA4  E1FD               	bnz	clear_2
   343                           
   344                           ; Initialize objects allocated to COMRAM (1 bytes)
   345                           ; load TBLPTR registers with __pidataCOMRAM
   346  002FA6  0E40               	movlw	low __pidataCOMRAM
   347  002FA8  6EF6               	movwf	tblptrl,c
   348  002FAA  0E32               	movlw	high __pidataCOMRAM
   349  002FAC  6EF7               	movwf	tblptrh,c
   350  002FAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   351  002FB0  6EF8               	movwf	tblptru,c
   352  002FB2  0009               	tblrd		*+	;fetch initializer
   353  002FB4  CFF5 F046          	movff	tablat,__pdataCOMRAM
   354  002FB8                     end_of_initialization:
   355                           	opt stack 0
   356  002FB8                     __end_of__initialization:
   357                           	opt stack 0
   358  002FB8  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   359  002FBA  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   360  002FBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   361  002FBE  6EF8               	movwf	tblptru,c
   362  002FC0  0100               	movlb	0
   363  002FC2  EF73  F00E         	goto	_main	;jump to C main() function
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	bitbssCOMRAM
   372  000228                     __pbitbssCOMRAM:
   373                           	opt stack 0
   374  000228                     _actual_dir:
   375                           	opt stack 0
   376  000228                     	ds	1
   377  000229                     _dir:
   378                           	opt stack 0
   379  000229                     	ds	1
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           
   387                           	psect	bssCOMRAM
   388  000001                     __pbssCOMRAM:
   389                           	opt stack 0
   390  000001                     _pr_time_2:
   391                           	opt stack 0
   392  000001                     	ds	4
   393  000005                     _pr_time_3:
   394                           	opt stack 0
   395  000005                     	ds	4
   396  000009                     _time_counter:
   397                           	opt stack 0
   398  000009                     	ds	4
   399  00000D                     _set_speed:
   400                           	opt stack 0
   401  00000D                     	ds	2
   402  00000F                     _Battery_Check:
   403                           	opt stack 0
   404  00000F                     	ds	1
   405  000010                     _ECU_Check:
   406                           	opt stack 0
   407  000010                     	ds	1
   408  000011                     _USART_Status:
   409                           	opt stack 0
   410  000011                     	ds	1
   411  000012                     _actual_speed_pk0:
   412                           	opt stack 0
   413  000012                     	ds	1
   414  000013                     _actual_speed_pk1:
   415                           	opt stack 0
   416  000013                     	ds	1
   417  000014                     _analogic_brake:
   418                           	opt stack 0
   419  000014                     	ds	1
   420  000015                     _i:
   421                           	opt stack 0
   422  000015                     	ds	1
   423  000016                     _set_speed_pk0:
   424                           	opt stack 0
   425  000016                     	ds	1
   426  000017                     _set_speed_pk1:
   427                           	opt stack 0
   428  000017                     	ds	1
   429  000018                     _set_steering:
   430                           	opt stack 0
   431  000018                     	ds	1
   432  000019                     _switch_position:
   433                           	opt stack 0
   434  000019                     	ds	1
   435  00001A                     _JoystickConstants:
   436                           	opt stack 0
   437  00001A                     	ds	8
   438  000022                     _JoystickValues:
   439                           	opt stack 0
   440  000022                     	ds	2
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           
   448                           	psect	dataCOMRAM
   449  000046                     __pdataCOMRAM:
   450                           	opt stack 0
   451  000046                     _delay_quartz_frequency_value:
   452                           	opt stack 0
   453  000046                     	ds	1
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	bssBANK0
   462  0000D2                     __pbssBANK0:
   463                           	opt stack 0
   464  0000D2                     LCD_write_integer@F17027:
   465                           	opt stack 0
   466  0000D2                     	ds	6
   467  0000D8                     _actual_speed_kmh:
   468                           	opt stack 0
   469  0000D8                     	ds	4
   470  0000DC                     _pr_time_1:
   471                           	opt stack 0
   472  0000DC                     	ds	4
   473  0000E0                     _actual_speed:
   474                           	opt stack 0
   475  0000E0                     	ds	2
   476  0000E2                     _USART_Rx:
   477                           	opt stack 0
   478  0000E2                     	ds	7
   479  0000E9                     _USART_Tx:
   480                           	opt stack 0
   481  0000E9                     	ds	7
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           
   489                           	psect	bssBANK1
   490  000119                     __pbssBANK1:
   491                           	opt stack 0
   492  000119                     _str:
   493                           	opt stack 0
   494  000119                     	ds	12
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	cstackBANK1
   503  000100                     __pcstackBANK1:
   504                           	opt stack 0
   505  000100                     _sprintf$2311:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0x0
   509  000100                     	ds	4
   510  000104                     sprintf@ap:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x4
   514  000104                     	ds	2
   515  000106                     sprintf@flag:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x6
   519  000106                     	ds	2
   520  000108                     sprintf@val:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x8
   524  000108                     	ds	4
   525  00010C                     sprintf@exp:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0xC
   529  00010C                     	ds	2
   530  00010E                     sprintf@tmpval:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0xE
   534  00010E                     	ds	4
   535  000112                     sprintf@prec:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x12
   539  000112                     	ds	2
   540  000114                     sprintf@fval:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x14
   544  000114                     	ds	4
   545  000118                     sprintf@c:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x18
   549  000118                     	ds	1
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           
   557                           	psect	cstackBANK0
   558  000060                     __pcstackBANK0:
   559                           	opt stack 0
   560  000060                     ??_ISR_alta:
   561                           
   562                           ; 0 bytes @ 0x0
   563  000060                     	ds	16
   564  000070                     ?___awdiv:
   565                           	opt stack 0
   566  000070                     ?__tdiv_to_l_:
   567                           	opt stack 0
   568  000070                     ?__div_to_l_:
   569                           	opt stack 0
   570  000070                     ?___lldiv:
   571                           	opt stack 0
   572  000070                     ?___llmod:
   573                           	opt stack 0
   574  000070                     ?___xxtofl:
   575                           	opt stack 0
   576  000070                     delay_ms@value_ms:
   577                           	opt stack 0
   578  000070                     ___awdiv@dividend:
   579                           	opt stack 0
   580  000070                     __div_to_l_@f1:
   581                           	opt stack 0
   582  000070                     ___flge@ff1:
   583                           	opt stack 0
   584  000070                     __tdiv_to_l_@f1:
   585                           	opt stack 0
   586  000070                     ___lldiv@dividend:
   587                           	opt stack 0
   588  000070                     ___llmod@dividend:
   589                           	opt stack 0
   590  000070                     ___xxtofl@val:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x10
   594  000070                     	ds	2
   595  000072                     LCD_send_command@D2:
   596                           	opt stack 0
   597  000072                     ___awdiv@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x12
   601  000072                     	ds	1
   602  000073                     LCD_send_command@D1:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x13
   606  000073                     	ds	1
   607  000074                     ??___xxtofl:
   608  000074                     LCD_send_command@D0:
   609                           	opt stack 0
   610  000074                     ___awdiv@counter:
   611                           	opt stack 0
   612  000074                     __div_to_l_@f2:
   613                           	opt stack 0
   614  000074                     ___flge@ff2:
   615                           	opt stack 0
   616  000074                     __tdiv_to_l_@f2:
   617                           	opt stack 0
   618  000074                     ___lldiv@divisor:
   619                           	opt stack 0
   620  000074                     ___llmod@divisor:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x14
   624  000074                     	ds	1
   625  000075                     LCD_goto_line@line:
   626                           	opt stack 0
   627  000075                     LCD_write_char@D3:
   628                           	opt stack 0
   629  000075                     LCD_cursor@blinking:
   630                           	opt stack 0
   631  000075                     ___awdiv@sign:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x15
   635  000075                     	ds	1
   636  000076                     LCD_write_char@D2:
   637                           	opt stack 0
   638  000076                     LCD_cursor@active:
   639                           	opt stack 0
   640  000076                     ___awdiv@quotient:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x16
   644  000076                     	ds	1
   645  000077                     LCD_write_char@D1:
   646                           	opt stack 0
   647  000077                     LCD_initialize@quartz_frequency:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x17
   651  000077                     	ds	1
   652  000078                     LCD_write_char@D0:
   653                           	opt stack 0
   654  000078                     ___xxtofl@sign:
   655                           	opt stack 0
   656  000078                     __tdiv_to_l_@quot:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x18
   660  000078                     	ds	1
   661  000079                     LCD_write_char@value:
   662                           	opt stack 0
   663  000079                     ___xxtofl@exp:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x19
   667  000079                     	ds	1
   668  00007A                     LCD_write_message@buffer:
   669                           	opt stack 0
   670  00007A                     LCD_write_string@buffer:
   671                           	opt stack 0
   672  00007A                     ___xxtofl@arg:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x1A
   676  00007A                     	ds	2
   677  00007C                     __tdiv_to_l_@cntr:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x1C
   681  00007C                     	ds	1
   682  00007D                     __tdiv_to_l_@exp1:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x1D
   686  00007D                     	ds	1
   687  00007E                     ?___flmul:
   688                           	opt stack 0
   689  00007E                     ___flmul@b:
   690                           	opt stack 0
   691                           
   692                           ; 4 bytes @ 0x1E
   693  00007E                     	ds	4
   694  000082                     ___flmul@a:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x22
   698  000082                     	ds	4
   699  000086                     ??___flmul:
   700                           
   701                           ; 0 bytes @ 0x26
   702  000086                     	ds	4
   703  00008A                     ___flmul@sign:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x2A
   707  00008A                     	ds	1
   708  00008B                     ___flmul@aexp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x2B
   712  00008B                     	ds	1
   713  00008C                     ___flmul@grs:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0x2C
   717  00008C                     	ds	4
   718  000090                     ___flmul@bexp:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x30
   722  000090                     	ds	1
   723  000091                     ___flmul@prod:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x31
   727  000091                     	ds	4
   728  000095                     ___flmul@temp:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x35
   732  000095                     	ds	2
   733  000097                     ?_fround:
   734                           	opt stack 0
   735  000097                     ?_scale:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x37
   739  000097                     	ds	4
   740  00009B                     _fround$2309:
   741                           	opt stack 0
   742  00009B                     _scale$2310:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x3B
   746  00009B                     	ds	4
   747  00009F                     scale@scl:
   748                           	opt stack 0
   749  00009F                     _fround$2308:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x3F
   753  00009F                     	ds	1
   754  0000A0                     ?___fltol:
   755                           	opt stack 0
   756  0000A0                     ___fltol@f1:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x40
   760  0000A0                     	ds	3
   761  0000A3                     fround@prec:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x43
   765  0000A3                     	ds	1
   766  0000A4                     ??___fltol:
   767  0000A4                     ?___fladd:
   768                           	opt stack 0
   769  0000A4                     ___fladd@b:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x44
   773  0000A4                     	ds	4
   774  0000A8                     ___fltol@sign1:
   775                           	opt stack 0
   776  0000A8                     ___fladd@a:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x48
   780  0000A8                     	ds	1
   781  0000A9                     ___fltol@exp1:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x49
   785  0000A9                     	ds	3
   786  0000AC                     ??___fladd:
   787                           
   788                           ; 0 bytes @ 0x4C
   789  0000AC                     	ds	8
   790  0000B4                     ___fladd@signs:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x54
   794  0000B4                     	ds	1
   795  0000B5                     ___fladd@aexp:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x55
   799  0000B5                     	ds	1
   800  0000B6                     ___fladd@bexp:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x56
   804  0000B6                     	ds	1
   805  0000B7                     ___fladd@grs:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x57
   809  0000B7                     	ds	1
   810  0000B8                     ?___flsub:
   811                           	opt stack 0
   812  0000B8                     ___flsub@b:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x58
   816  0000B8                     	ds	4
   817  0000BC                     ___flsub@a:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x5C
   821  0000BC                     	ds	4
   822  0000C0                     ?_sprintf:
   823                           	opt stack 0
   824  0000C0                     sprintf@sp:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x60
   828  0000C0                     	ds	2
   829  0000C2                     sprintf@f:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x62
   833  0000C2                     	ds	6
   834  0000C8                     ??_sprintf:
   835                           
   836                           ; 0 bytes @ 0x68
   837  0000C8                     	ds	2
   838  0000CA                     ??_main:
   839                           
   840                           ; 0 bytes @ 0x6A
   841  0000CA                     	ds	8
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           
   849                           	psect	cstackCOMRAM
   850  000024                     __pcstackCOMRAM:
   851                           	opt stack 0
   852  000024                     ??_ISR_bassa:
   853  000024                     
   854                           ; 1 bytes @ 0x0
   855  000024                     	ds	17
   856  000035                     ReadUSART@data:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x11
   860  000035                     	ds	1
   861  000036                     getsUSART@buffer:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x12
   865  000036                     	ds	2
   866  000038                     getsUSART@len:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x14
   870  000038                     	ds	1
   871  000039                     getsUSART@data:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x15
   875  000039                     	ds	1
   876  00003A                     getsUSART@i:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x16
   880  00003A                     	ds	1
   881  00003B                     _ISR_alta$1132:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x17
   885  00003B                     	ds	1
   886  00003C                     ??_Joystick_Polling:
   887  00003C                     ??_isdigit:
   888  00003C                     ??__tdiv_to_l_:
   889  00003C                     ??___flge:
   890  00003C                     ?___wmul:
   891                           	opt stack 0
   892  00003C                     ?___awmod:
   893                           	opt stack 0
   894  00003C                     ?___lwdiv:
   895                           	opt stack 0
   896  00003C                     ?___flneg:
   897                           	opt stack 0
   898  00003C                     delay_set_quartz@frequency:
   899                           	opt stack 0
   900  00003C                     LCD_backlight@active:
   901                           	opt stack 0
   902  00003C                     WriteUSART@data:
   903                           	opt stack 0
   904  00003C                     ___llmod@counter:
   905                           	opt stack 0
   906  00003C                     OpenUSART@spbrg:
   907                           	opt stack 0
   908  00003C                     ___wmul@multiplier:
   909                           	opt stack 0
   910  00003C                     ___awmod@dividend:
   911                           	opt stack 0
   912  00003C                     ___lwdiv@dividend:
   913                           	opt stack 0
   914  00003C                     __div_to_l_@quot:
   915                           	opt stack 0
   916  00003C                     ___flneg@f1:
   917                           	opt stack 0
   918  00003C                     ___lldiv@quotient:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0x18
   922  00003C                     	ds	1
   923  00003D                     _isdigit$1916:
   924                           	opt stack 0
   925  00003D                     putsUSART@data:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x19
   929  00003D                     	ds	1
   930  00003E                     OpenUSART@config:
   931                           	opt stack 0
   932  00003E                     isdigit@c:
   933                           	opt stack 0
   934  00003E                     ___wmul@multiplicand:
   935                           	opt stack 0
   936  00003E                     ___awmod@divisor:
   937                           	opt stack 0
   938  00003E                     ___lwdiv@divisor:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x1A
   942  00003E                     	ds	1
   943  00003F                     
   944                           ; 0 bytes @ 0x1B
   945  00003F                     	ds	1
   946  000040                     ___awmod@counter:
   947                           	opt stack 0
   948  000040                     __div_to_l_@cntr:
   949                           	opt stack 0
   950  000040                     ___lldiv@counter:
   951                           	opt stack 0
   952  000040                     ___wmul@product:
   953                           	opt stack 0
   954  000040                     ___lwdiv@quotient:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x1C
   958  000040                     	ds	1
   959  000041                     ___awmod@sign:
   960                           	opt stack 0
   961  000041                     __div_to_l_@exp1:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x1D
   965  000041                     	ds	1
   966  000042                     LCD_send_command@D3:
   967                           	opt stack 0
   968  000042                     ___lwdiv@counter:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x1E
   972  000042                     	ds	1
   973  000043                     tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           
   980                           ; 0 bytes @ 0x1F
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 118 in file "telecomando.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1000 ;;      Params:         0       0       0       0
  1001 ;;      Locals:         0       0       0       0
  1002 ;;      Temps:          0       8       0       0
  1003 ;;      Totals:         0       8       0       0
  1004 ;;Total ram usage:        8 bytes
  1005 ;; Hardware stack levels required when called:   11
  1006 ;; This function calls:
  1007 ;;		_Joystick_Polling
  1008 ;;		_LCD_Handler
  1009 ;;		_USART_Send
  1010 ;;		___flmul
  1011 ;;		___fltol
  1012 ;;		___xxtofl
  1013 ;;		_board_initialization
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text0
  1020  001CE6                     __ptext0:
  1021                           	opt stack 0
  1022  001CE6                     _main:
  1023                           	opt stack 20
  1024                           
  1025                           ;telecomando.c: 119: board_initialization();
  1026                           
  1027                           ;incstack = 0
  1028  001CE6  ECFF  F015         	call	_board_initialization	;wreg free
  1029                           
  1030                           ;telecomando.c: 122: USART_Tx[0] = 0xAA;
  1031  001CEA  0EAA               	movlw	170
  1032  001CEC  0100               	movlb	0	; () banked
  1033  001CEE  6FE9               	movwf	_USART_Tx& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;telecomando.c: 123: USART_Tx[6] = 0xAA;
  1037  001CF0  0EAA               	movlw	170
  1038  001CF2  0100               	movlb	0	; () banked
  1039  001CF4  6FEF               	movwf	(_USART_Tx+6)& (0+255),b
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;telecomando.c: 124: JoystickConstants[0] = 0.703;
  1043  001CF6  0ECF               	movlw	207
  1044  001CF8  6E1A               	movwf	_JoystickConstants,c	;volatile
  1045  001CFA  0EF7               	movlw	247
  1046  001CFC  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1047  001CFE  0E33               	movlw	51
  1048  001D00  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1049  001D02  0E3F               	movlw	63
  1050  001D04  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;telecomando.c: 125: JoystickConstants[1] = 34;
  1054  001D06  0E00               	movlw	0
  1055  001D08  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1056  001D0A  0E00               	movlw	0
  1057  001D0C  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1058  001D0E  0E08               	movlw	8
  1059  001D10  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1060  001D12  0E42               	movlw	66
  1061  001D14  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1062  001D16                     l5434:
  1063                           
  1064                           ;telecomando.c: 151: Joystick_Polling();
  1065  001D16  EC9C  F017         	call	_Joystick_Polling	;wreg free
  1066                           
  1067                           ;telecomando.c: 154: if (PORTAbits.RA2 == 1) {
  1068  001D1A  A480               	btfss	3968,2,c	;volatile
  1069  001D1C  D003               	goto	l241
  1070                           
  1071                           ;telecomando.c: 155: switch_position = 0;
  1072  001D1E  0E00               	movlw	0
  1073  001D20  6E19               	movwf	_switch_position,c	;volatile
  1074                           
  1075                           ;telecomando.c: 156: } else {
  1076  001D22  D009               	goto	l242
  1077  001D24                     l241:
  1078                           
  1079                           ;telecomando.c: 157: if (PORTAbits.RA3 == 0) {
  1080  001D24  B680               	btfsc	3968,3,c	;volatile
  1081  001D26  D004               	goto	l5444
  1082                           
  1083                           ;telecomando.c: 158: switch_position = 1;
  1084  001D28  0E01               	movlw	1
  1085  001D2A  6E19               	movwf	_switch_position,c	;volatile
  1086                           
  1087                           ;telecomando.c: 159: dir = 1;
  1088  001D2C  8245               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1089                           
  1090                           ;telecomando.c: 160: } else {
  1091  001D2E  D003               	goto	l242
  1092  001D30                     l5444:
  1093                           
  1094                           ;telecomando.c: 161: switch_position = 2;
  1095  001D30  0E02               	movlw	2
  1096  001D32  6E19               	movwf	_switch_position,c	;volatile
  1097                           
  1098                           ;telecomando.c: 162: dir = 0;
  1099  001D34  9245               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1100  001D36                     l242:
  1101                           
  1102                           ;telecomando.c: 163: }
  1103                           ;telecomando.c: 164: }
  1104                           ;telecomando.c: 166: if (switch_position != 0) {
  1105  001D36  5019               	movf	_switch_position,w,c	;volatile
  1106  001D38  B4D8               	btfsc	status,2,c
  1107  001D3A  D074               	goto	l5460
  1108                           
  1109                           ;telecomando.c: 167: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1110  001D3C  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1111  001D40  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1112  001D44  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1113  001D48  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1114  001D4C  C022  F0CA         	movff	_JoystickValues,??_main	;volatile
  1115  001D50  0100               	movlb	0	; () banked
  1116  001D52  6BCB               	clrf	(??_main+1)& (0+255),b
  1117  001D54  BFCA               	btfsc	??_main& (0+255),7,b
  1118  001D56  07CB               	decf	(??_main+1)& (0+255),f,b
  1119  001D58  0E80               	movlw	128
  1120  001D5A  0100               	movlb	0	; () banked
  1121  001D5C  27CA               	addwf	??_main& (0+255),f,b
  1122  001D5E  0E00               	movlw	0
  1123  001D60  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1124  001D62  C0CA  F070         	movff	??_main,___xxtofl@val
  1125  001D66  C0CB  F071         	movff	??_main+1,___xxtofl@val+1
  1126  001D6A  0100               	movlb	0	; () banked
  1127  001D6C  0E00               	movlw	0
  1128  001D6E  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1129  001D70  0EFF               	movlw	-1
  1130  001D72  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1131  001D74  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1132  001D76  0E01               	movlw	1
  1133  001D78  EC8E  F00F         	call	___xxtofl
  1134  001D7C  C070  F07E         	movff	?___xxtofl,___flmul@b
  1135  001D80  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1136  001D84  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1137  001D88  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1138  001D8C  EC78  F008         	call	___flmul	;wreg free
  1139  001D90  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1140  001D94  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1141  001D98  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1142  001D9C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1143  001DA0  ECDD  F013         	call	___fltol	;wreg free
  1144  001DA4  0100               	movlb	0	; () banked
  1145  001DA6  51A0               	movf	?___fltol& (0+255),w,b
  1146  001DA8  6E18               	movwf	_set_steering,c	;volatile
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;telecomando.c: 168: if (JoystickValues[1] > 0) {
  1150  001DAA  5023               	movf	_JoystickValues+1,w,c	;volatile
  1151  001DAC  0A80               	xorlw	128
  1152  001DAE  0F7F               	addlw	-129
  1153  001DB0  A0D8               	btfss	status,0,c
  1154  001DB2  D02E               	goto	l5456
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;telecomando.c: 169: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1158  001DB4  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1159  001DB8  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1160  001DBC  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1161  001DC0  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1162  001DC4  5023               	movf	_JoystickValues+1,w,c	;volatile
  1163  001DC6  0100               	movlb	0	; () banked
  1164  001DC8  6F70               	movwf	___xxtofl@val& (0+255),b
  1165  001DCA  0E00               	movlw	0
  1166  001DCC  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1167  001DCE  0EFF               	movlw	-1
  1168  001DD0  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1169  001DD2  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1170  001DD4  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1171  001DD6  0E01               	movlw	1
  1172  001DD8  EC8E  F00F         	call	___xxtofl
  1173  001DDC  C070  F07E         	movff	?___xxtofl,___flmul@b
  1174  001DE0  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1175  001DE4  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1176  001DE8  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1177  001DEC  EC78  F008         	call	___flmul	;wreg free
  1178  001DF0  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1179  001DF4  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1180  001DF8  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1181  001DFC  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1182  001E00  ECDD  F013         	call	___fltol	;wreg free
  1183  001E04  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1184  001E08  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1185                           
  1186                           ;telecomando.c: 170: analogic_brake = 0;
  1187  001E0C  0E00               	movlw	0
  1188  001E0E  D008               	goto	L1
  1189  001E10                     l5456:
  1190                           
  1191                           ;telecomando.c: 172: set_speed = 0;
  1192  001E10  0E00               	movlw	0
  1193  001E12  6E0E               	movwf	_set_speed+1,c	;volatile
  1194  001E14  0E00               	movlw	0
  1195  001E16  6E0D               	movwf	_set_speed,c	;volatile
  1196                           
  1197                           ;telecomando.c: 173: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1198  001E18  5023               	movf	_JoystickValues+1,w,c	;volatile
  1199  001E1A  0D02               	mullw	2
  1200  001E1C  28F3               	incf	prodl,w,c
  1201  001E1E  0800               	sublw	0
  1202  001E20                     L1:
  1203  001E20  6E14               	movwf	_analogic_brake,c	;volatile
  1204                           
  1205                           ;telecomando.c: 174: }
  1206                           ;telecomando.c: 175: } else {
  1207  001E22  D005               	goto	l5464
  1208  001E24                     l5460:
  1209                           
  1210                           ;telecomando.c: 176: set_speed = 0;
  1211  001E24  0E00               	movlw	0
  1212  001E26  6E0E               	movwf	_set_speed+1,c	;volatile
  1213  001E28  0E00               	movlw	0
  1214  001E2A  6E0D               	movwf	_set_speed,c	;volatile
  1215                           
  1216                           ;telecomando.c: 177: analogic_brake = 255;
  1217  001E2C  6814               	setf	_analogic_brake,c	;volatile
  1218  001E2E                     l5464:
  1219                           
  1220                           ;telecomando.c: 178: }
  1221                           ;telecomando.c: 180: if ((time_counter - pr_time_2) >= 1) {
  1222  001E2E  C001  F0CA         	movff	_pr_time_2,??_main	;volatile
  1223  001E32  C002  F0CB         	movff	_pr_time_2+1,??_main+1	;volatile
  1224  001E36  C003  F0CC         	movff	_pr_time_2+2,??_main+2	;volatile
  1225  001E3A  C004  F0CD         	movff	_pr_time_2+3,??_main+3	;volatile
  1226  001E3E  0100               	movlb	0	; () banked
  1227  001E40  1FCA               	comf	??_main& (0+255),f,b
  1228  001E42  1FCB               	comf	(??_main+1)& (0+255),f,b
  1229  001E44  1FCC               	comf	(??_main+2)& (0+255),f,b
  1230  001E46  1FCD               	comf	(??_main+3)& (0+255),f,b
  1231  001E48  2BCA               	incf	??_main& (0+255),f,b
  1232  001E4A  0E00               	movlw	0
  1233  001E4C  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1234  001E4E  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1235  001E50  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1236  001E52  5009               	movf	_time_counter,w,c	;volatile
  1237  001E54  0100               	movlb	0	; () banked
  1238  001E56  25CA               	addwf	??_main& (0+255),w,b
  1239  001E58  0100               	movlb	0	; () banked
  1240  001E5A  6FCE               	movwf	(??_main+4)& (0+255),b
  1241  001E5C  500A               	movf	_time_counter+1,w,c	;volatile
  1242  001E5E  0100               	movlb	0	; () banked
  1243  001E60  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1244  001E62  0100               	movlb	0	; () banked
  1245  001E64  6FCF               	movwf	(??_main+5)& (0+255),b
  1246  001E66  500B               	movf	_time_counter+2,w,c	;volatile
  1247  001E68  0100               	movlb	0	; () banked
  1248  001E6A  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1249  001E6C  0100               	movlb	0	; () banked
  1250  001E6E  6FD0               	movwf	(??_main+6)& (0+255),b
  1251  001E70  500C               	movf	_time_counter+3,w,c	;volatile
  1252  001E72  0100               	movlb	0	; () banked
  1253  001E74  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1254  001E76  0100               	movlb	0	; () banked
  1255  001E78  6FD1               	movwf	(??_main+7)& (0+255),b
  1256  001E7A  0100               	movlb	0	; () banked
  1257  001E7C  51CE               	movf	(??_main+4)& (0+255),w,b
  1258  001E7E  0100               	movlb	0	; () banked
  1259  001E80  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1260  001E82  0100               	movlb	0	; () banked
  1261  001E84  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1262  001E86  0100               	movlb	0	; () banked
  1263  001E88  11D1               	iorwf	(??_main+7)& (0+255),w,b
  1264  001E8A  B4D8               	btfsc	status,2,c
  1265  001E8C  D00A               	goto	l5470
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;telecomando.c: 181: pr_time_2 = time_counter;
  1269  001E8E  C009  F001         	movff	_time_counter,_pr_time_2	;volatile
  1270  001E92  C00A  F002         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1271  001E96  C00B  F003         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1272  001E9A  C00C  F004         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;telecomando.c: 182: USART_Send();
  1276  001E9E  EC49  F018         	call	_USART_Send	;wreg free
  1277  001EA2                     l5470:
  1278                           
  1279                           ;telecomando.c: 183: }
  1280                           ;telecomando.c: 185: if ((time_counter - pr_time_3) >= 30) {
  1281  001EA2  C005  F0CA         	movff	_pr_time_3,??_main	;volatile
  1282  001EA6  C006  F0CB         	movff	_pr_time_3+1,??_main+1	;volatile
  1283  001EAA  C007  F0CC         	movff	_pr_time_3+2,??_main+2	;volatile
  1284  001EAE  C008  F0CD         	movff	_pr_time_3+3,??_main+3	;volatile
  1285  001EB2  0100               	movlb	0	; () banked
  1286  001EB4  1FCA               	comf	??_main& (0+255),f,b
  1287  001EB6  1FCB               	comf	(??_main+1)& (0+255),f,b
  1288  001EB8  1FCC               	comf	(??_main+2)& (0+255),f,b
  1289  001EBA  1FCD               	comf	(??_main+3)& (0+255),f,b
  1290  001EBC  2BCA               	incf	??_main& (0+255),f,b
  1291  001EBE  0E00               	movlw	0
  1292  001EC0  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1293  001EC2  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1294  001EC4  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1295  001EC6  5009               	movf	_time_counter,w,c	;volatile
  1296  001EC8  0100               	movlb	0	; () banked
  1297  001ECA  25CA               	addwf	??_main& (0+255),w,b
  1298  001ECC  0100               	movlb	0	; () banked
  1299  001ECE  6FCE               	movwf	(??_main+4)& (0+255),b
  1300  001ED0  500A               	movf	_time_counter+1,w,c	;volatile
  1301  001ED2  0100               	movlb	0	; () banked
  1302  001ED4  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1303  001ED6  0100               	movlb	0	; () banked
  1304  001ED8  6FCF               	movwf	(??_main+5)& (0+255),b
  1305  001EDA  500B               	movf	_time_counter+2,w,c	;volatile
  1306  001EDC  0100               	movlb	0	; () banked
  1307  001EDE  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1308  001EE0  0100               	movlb	0	; () banked
  1309  001EE2  6FD0               	movwf	(??_main+6)& (0+255),b
  1310  001EE4  500C               	movf	_time_counter+3,w,c	;volatile
  1311  001EE6  0100               	movlb	0	; () banked
  1312  001EE8  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1313  001EEA  0100               	movlb	0	; () banked
  1314  001EEC  6FD1               	movwf	(??_main+7)& (0+255),b
  1315  001EEE  0100               	movlb	0	; () banked
  1316  001EF0  51D1               	movf	(??_main+7)& (0+255),w,b
  1317  001EF2  0100               	movlb	0	; () banked
  1318  001EF4  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1319  001EF6  0100               	movlb	0	; () banked
  1320  001EF8  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1321  001EFA  E105               	bnz	u6280
  1322  001EFC  0E1E               	movlw	30
  1323  001EFE  0100               	movlb	0	; () banked
  1324  001F00  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1325  001F02  A0D8               	btfss	status,0,c
  1326  001F04  D708               	goto	l5434
  1327  001F06                     u6280:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;telecomando.c: 186: pr_time_3 = time_counter;
  1331  001F06  C009  F005         	movff	_time_counter,_pr_time_3	;volatile
  1332  001F0A  C00A  F006         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1333  001F0E  C00B  F007         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1334  001F12  C00C  F008         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;telecomando.c: 187: LCD_Handler();
  1338  001F16  EC52  F013         	call	_LCD_Handler	;wreg free
  1339  001F1A  D6FD               	goto	l5434
  1340  001F1C                     __end_of_main:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           prodl	equ	0xFF3
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _board_initialization *****************
  1352 ;; Defined at:
  1353 ;;		line 250 in file "telecomando.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;		None               void
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1367 ;;      Params:         0       0       0       0
  1368 ;;      Locals:         0       0       0       0
  1369 ;;      Temps:          0       0       0       0
  1370 ;;      Totals:         0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:   10
  1374 ;; This function calls:
  1375 ;;		_LCD_backlight
  1376 ;;		_LCD_clear
  1377 ;;		_LCD_initialize
  1378 ;;		_LCD_write_message
  1379 ;;		_OpenUSART
  1380 ;;		_delay_ms
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text1
  1387  002BFE                     __ptext1:
  1388                           	opt stack 0
  1389  002BFE                     _board_initialization:
  1390                           	opt stack 20
  1391                           
  1392                           ;telecomando.c: 252: LATA = 0x00;
  1393                           
  1394                           ;incstack = 0
  1395  002BFE  0E00               	movlw	0
  1396  002C00  6E89               	movwf	3977,c	;volatile
  1397                           
  1398                           ;telecomando.c: 253: TRISA = 0b00001111;
  1399  002C02  0E0F               	movlw	15
  1400  002C04  6E92               	movwf	3986,c	;volatile
  1401                           
  1402                           ;telecomando.c: 254: LATB = 0x00;
  1403  002C06  0E00               	movlw	0
  1404  002C08  6E8A               	movwf	3978,c	;volatile
  1405                           
  1406                           ;telecomando.c: 255: TRISB = 0xFF;
  1407  002C0A  6893               	setf	3987,c	;volatile
  1408                           
  1409                           ;telecomando.c: 256: LATC = 0x00;
  1410  002C0C  0E00               	movlw	0
  1411  002C0E  6E8B               	movwf	3979,c	;volatile
  1412                           
  1413                           ;telecomando.c: 257: TRISC = 0b11110000;
  1414  002C10  0EF0               	movlw	240
  1415  002C12  6E94               	movwf	3988,c	;volatile
  1416                           
  1417                           ;telecomando.c: 258: LATD = 0x00;
  1418  002C14  0E00               	movlw	0
  1419  002C16  6E8C               	movwf	3980,c	;volatile
  1420                           
  1421                           ;telecomando.c: 259: TRISD = 0x01111100;
  1422  002C18  0E00               	movlw	0
  1423  002C1A  6E95               	movwf	3989,c	;volatile
  1424                           
  1425                           ;telecomando.c: 260: LATE = 0x00;
  1426  002C1C  0E00               	movlw	0
  1427  002C1E  6E8D               	movwf	3981,c	;volatile
  1428                           
  1429                           ;telecomando.c: 261: TRISE = 0xFF;
  1430  002C20  6896               	setf	3990,c	;volatile
  1431                           
  1432                           ;telecomando.c: 263: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1433  002C22  0E4F               	movlw	79
  1434  002C24  16AB               	andwf	4011,f,c	;volatile
  1435  002C26  9AAC               	bcf	4012,5,c	;volatile
  1436  002C28  0ECF               	movlw	207
  1437  002C2A  169D               	andwf	3997,f,c	;volatile
  1438                           
  1439                           ;telecomando.c: 266: LCD_initialize(16);
  1440  002C2C  0E10               	movlw	16
  1441  002C2E  EC3E  F011         	call	_LCD_initialize
  1442                           
  1443                           ;telecomando.c: 267: LCD_write_message("Wait...");
  1444  002C32  0ED3               	movlw	low STR_9
  1445  002C34  0100               	movlb	0	; () banked
  1446  002C36  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1447  002C38  0E03               	movlw	high STR_9
  1448  002C3A  0100               	movlb	0	; () banked
  1449  002C3C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1450  002C3E  EC78  F018         	call	_LCD_write_message	;wreg free
  1451                           
  1452                           ;telecomando.c: 268: LCD_backlight(0);
  1453  002C42  0E00               	movlw	0
  1454  002C44  EC15  F019         	call	_LCD_backlight
  1455                           
  1456                           ;telecomando.c: 271: PIR1bits.RCIF = 0;
  1457  002C48  9A9E               	bcf	3998,5,c	;volatile
  1458                           
  1459                           ;telecomando.c: 272: PIR2bits.TMR3IF = 0;
  1460  002C4A  92A1               	bcf	4001,1,c	;volatile
  1461                           
  1462                           ;telecomando.c: 275: RCONbits.IPEN = 1;
  1463  002C4C  8ED0               	bsf	4048,7,c	;volatile
  1464                           
  1465                           ;telecomando.c: 276: IPR1bits.RCIP = 1;
  1466  002C4E  8A9F               	bsf	3999,5,c	;volatile
  1467                           
  1468                           ;telecomando.c: 277: IPR2bits.TMR3IP = 0;
  1469  002C50  92A2               	bcf	4002,1,c	;volatile
  1470                           
  1471                           ;telecomando.c: 280: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101
  1472                           ;telecomando.c: 281: & 0b11111111 & 0b11111111, 103);
  1473  002C52  0E00               	movlw	0
  1474  002C54  6E3D               	movwf	OpenUSART@spbrg+1,c
  1475  002C56  0E67               	movlw	103
  1476  002C58  6E3C               	movwf	OpenUSART@spbrg,c
  1477  002C5A  0E7C               	movlw	124
  1478  002C5C  EC1F  F017         	call	_OpenUSART
  1479                           
  1480                           ;telecomando.c: 282: RCSTAbits.SPEN = 1;
  1481  002C60  8EAB               	bsf	4011,7,c	;volatile
  1482                           
  1483                           ;telecomando.c: 285: ADCON1 = 0b00001101;
  1484  002C62  0E0D               	movlw	13
  1485  002C64  6EC1               	movwf	4033,c	;volatile
  1486                           
  1487                           ;telecomando.c: 286: ADCON0bits.CHS2 = 0;
  1488  002C66  98C2               	bcf	4034,4,c	;volatile
  1489                           
  1490                           ;telecomando.c: 287: ADCON0bits.CHS1 = 0;
  1491  002C68  96C2               	bcf	4034,3,c	;volatile
  1492                           
  1493                           ;telecomando.c: 288: ADCON0bits.CHS0 = 0;
  1494  002C6A  94C2               	bcf	4034,2,c	;volatile
  1495                           
  1496                           ;telecomando.c: 289: ADCON2bits.ACQT2 = 1;
  1497  002C6C  8AC0               	bsf	4032,5,c	;volatile
  1498                           
  1499                           ;telecomando.c: 290: ADCON2bits.ACQT1 = 1;
  1500  002C6E  88C0               	bsf	4032,4,c	;volatile
  1501                           
  1502                           ;telecomando.c: 291: ADCON2bits.ACQT0 = 0;
  1503  002C70  96C0               	bcf	4032,3,c	;volatile
  1504                           
  1505                           ;telecomando.c: 292: ADCON2bits.ADCS2 = 1;
  1506  002C72  84C0               	bsf	4032,2,c	;volatile
  1507                           
  1508                           ;telecomando.c: 293: ADCON2bits.ADCS1 = 0;
  1509  002C74  92C0               	bcf	4032,1,c	;volatile
  1510                           
  1511                           ;telecomando.c: 294: ADCON2bits.ADCS0 = 1;
  1512  002C76  80C0               	bsf	4032,0,c	;volatile
  1513                           
  1514                           ;telecomando.c: 295: ADCON2bits.ADFM = 0;
  1515  002C78  9EC0               	bcf	4032,7,c	;volatile
  1516                           
  1517                           ;telecomando.c: 296: ADCON0bits.ADON = 1;
  1518  002C7A  80C2               	bsf	4034,0,c	;volatile
  1519                           
  1520                           ;telecomando.c: 299: TMR3H = 0x63;
  1521  002C7C  0E63               	movlw	99
  1522  002C7E  6EB3               	movwf	4019,c	;volatile
  1523                           
  1524                           ;telecomando.c: 300: TMR3L = 0xC0;
  1525  002C80  0EC0               	movlw	192
  1526  002C82  6EB2               	movwf	4018,c	;volatile
  1527                           
  1528                           ;telecomando.c: 303: PIE1bits.RCIE = 1;
  1529  002C84  8A9D               	bsf	3997,5,c	;volatile
  1530                           
  1531                           ;telecomando.c: 304: PIE2bits.TMR3IE = 1;
  1532  002C86  82A0               	bsf	4000,1,c	;volatile
  1533                           
  1534                           ;telecomando.c: 305: INTCONbits.GIEH = 1;
  1535  002C88  8EF2               	bsf	intcon,7,c	;volatile
  1536                           
  1537                           ;telecomando.c: 306: INTCONbits.GIEL = 1;
  1538  002C8A  8CF2               	bsf	intcon,6,c	;volatile
  1539                           
  1540                           ;telecomando.c: 308: LCD_clear();
  1541  002C8C  EC17  F018         	call	_LCD_clear	;wreg free
  1542                           
  1543                           ;telecomando.c: 309: T3CON = 0x01;
  1544  002C90  0E01               	movlw	1
  1545  002C92  6EB1               	movwf	4017,c	;volatile
  1546                           
  1547                           ;telecomando.c: 310: delay_ms(2);
  1548  002C94  0E00               	movlw	0
  1549  002C96  0100               	movlb	0	; () banked
  1550  002C98  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1551  002C9A  0E02               	movlw	2
  1552  002C9C  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1553  002C9E  EC30  F018         	call	_delay_ms	;wreg free
  1554  002CA2  0012               	return		;funcret
  1555  002CA4                     __end_of_board_initialization:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodl	equ	0xFF3
  1562                           intcon	equ	0xFF2
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _OpenUSART *****************
  1568 ;; Defined at:
  1569 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  config          1    wreg     unsigned char 
  1572 ;;  spbrg           2   24[COMRAM] unsigned int 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  config          1   26[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg, status,2
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1584 ;;      Params:         2       0       0       0
  1585 ;;      Locals:         1       0       0       0
  1586 ;;      Temps:          0       0       0       0
  1587 ;;      Totals:         3       0       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    4
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_board_initialization
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text2
  1599  002E3E                     __ptext2:
  1600                           	opt stack 0
  1601  002E3E                     _OpenUSART:
  1602                           	opt stack 25
  1603                           
  1604                           ;incstack = 0
  1605                           ;OpenUSART@config stored from wreg
  1606  002E3E  6E3E               	movwf	OpenUSART@config,c
  1607  002E40  0E00               	movlw	0
  1608  002E42  6EAC               	movwf	4012,c	;volatile
  1609  002E44  0E00               	movlw	0
  1610  002E46  6EAB               	movwf	4011,c	;volatile
  1611  002E48  B03E               	btfsc	OpenUSART@config,0,c
  1612  002E4A  88AC               	bsf	4012,4,c	;volatile
  1613  002E4C  A23E               	btfss	OpenUSART@config,1,c
  1614  002E4E  D002               	goto	l3726
  1615  002E50  8CAC               	bsf	4012,6,c	;volatile
  1616  002E52  8CAB               	bsf	4011,6,c	;volatile
  1617  002E54                     l3726:
  1618  002E54  B43E               	btfsc	OpenUSART@config,2,c
  1619  002E56  8EAC               	bsf	4012,7,c	;volatile
  1620  002E58  A63E               	btfss	OpenUSART@config,3,c
  1621  002E5A  D002               	goto	l404
  1622  002E5C  88AB               	bsf	4011,4,c	;volatile
  1623  002E5E  D001               	goto	l3734
  1624  002E60                     l404:
  1625  002E60  8AAB               	bsf	4011,5,c	;volatile
  1626  002E62                     l3734:
  1627  002E62  B83E               	btfsc	OpenUSART@config,4,c
  1628  002E64  84AC               	bsf	4012,2,c	;volatile
  1629  002E66  989E               	bcf	3998,4,c	;volatile
  1630  002E68  BA3E               	btfsc	OpenUSART@config,5,c
  1631  002E6A  86AB               	bsf	4011,3,c	;volatile
  1632  002E6C  AC3E               	btfss	OpenUSART@config,6,c
  1633  002E6E  D002               	goto	l408
  1634  002E70  8A9D               	bsf	3997,5,c	;volatile
  1635  002E72  D001               	goto	l409
  1636  002E74                     l408:
  1637  002E74  9A9D               	bcf	3997,5,c	;volatile
  1638  002E76                     l409:
  1639  002E76  9A9E               	bcf	3998,5,c	;volatile
  1640  002E78  AE3E               	btfss	OpenUSART@config,7,c
  1641  002E7A  D002               	goto	l410
  1642  002E7C  889D               	bsf	3997,4,c	;volatile
  1643  002E7E  D001               	goto	l411
  1644  002E80                     l410:
  1645  002E80  989D               	bcf	3997,4,c	;volatile
  1646  002E82                     l411:
  1647  002E82  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1648  002E86  503D               	movf	OpenUSART@spbrg+1,w,c
  1649  002E88  6EB0               	movwf	4016,c	;volatile
  1650  002E8A  8AAC               	bsf	4012,5,c	;volatile
  1651  002E8C  8EAB               	bsf	4011,7,c	;volatile
  1652  002E8E  9C94               	bcf	3988,6,c	;volatile
  1653  002E90  8E94               	bsf	3988,7,c	;volatile
  1654  002E92  A8AC               	btfss	4012,4,c	;volatile
  1655  002E94  0012               	return	
  1656  002E96  BEAC               	btfsc	4012,7,c	;volatile
  1657  002E98  0012               	return	
  1658  002E9A  8C94               	bsf	3988,6,c	;volatile
  1659  002E9C  0012               	return	
  1660  002E9E                     __end_of_OpenUSART:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodl	equ	0xFF3
  1667                           intcon	equ	0xFF2
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _LCD_initialize *****************
  1673 ;; Defined at:
  1674 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  quartz_frequ    1    wreg     unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1688 ;;      Params:         0       0       0       0
  1689 ;;      Locals:         0       1       0       0
  1690 ;;      Temps:          0       0       0       0
  1691 ;;      Totals:         0       1       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    9
  1695 ;; This function calls:
  1696 ;;		_LCD_clear
  1697 ;;		_LCD_cursor
  1698 ;;		_LCD_send_command
  1699 ;;		_delay_ms
  1700 ;;		_delay_set_quartz
  1701 ;; This function is called by:
  1702 ;;		_board_initialization
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text3
  1707  00227C                     __ptext3:
  1708                           	opt stack 0
  1709  00227C                     _LCD_initialize:
  1710                           	opt stack 20
  1711                           
  1712                           ;incstack = 0
  1713                           ;LCD_initialize@quartz_frequency stored from wreg
  1714  00227C  0100               	movlb	0	; () banked
  1715  00227E  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  1716                           
  1717                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  1718  002280  0100               	movlb	0	; () banked
  1719  002282  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  1720  002284  EC1C  F019         	call	_delay_set_quartz
  1721                           
  1722                           ;src\LCD_44780.c: 287: LATAbits.LATA6 = 0x00;
  1723  002288  9C89               	bcf	3977,6,c	;volatile
  1724                           
  1725                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  1726  00228A  928B               	bcf	3979,1,c	;volatile
  1727                           
  1728                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  1729  00228C  908B               	bcf	3979,0,c	;volatile
  1730                           
  1731                           ;src\LCD_44780.c: 291: delay_ms (100);
  1732  00228E  0E00               	movlw	0
  1733  002290  0100               	movlb	0	; () banked
  1734  002292  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1735  002294  0E64               	movlw	100
  1736  002296  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1737  002298  EC30  F018         	call	_delay_ms	;wreg free
  1738                           
  1739                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  1740  00229C  0E00               	movlw	0
  1741  00229E  0100               	movlb	0	; () banked
  1742  0022A0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1743  0022A2  0E01               	movlw	1
  1744  0022A4  0100               	movlb	0	; () banked
  1745  0022A6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1746  0022A8  0E01               	movlw	1
  1747  0022AA  0100               	movlb	0	; () banked
  1748  0022AC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1749  0022AE  0E00               	movlw	0
  1750  0022B0  ECE3  F017         	call	_LCD_send_command
  1751                           
  1752                           ;src\LCD_44780.c: 293: delay_ms (100);
  1753  0022B4  0E00               	movlw	0
  1754  0022B6  0100               	movlb	0	; () banked
  1755  0022B8  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1756  0022BA  0E64               	movlw	100
  1757  0022BC  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1758  0022BE  EC30  F018         	call	_delay_ms	;wreg free
  1759                           
  1760                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  1761  0022C2  0E00               	movlw	0
  1762  0022C4  0100               	movlb	0	; () banked
  1763  0022C6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1764  0022C8  0E01               	movlw	1
  1765  0022CA  0100               	movlb	0	; () banked
  1766  0022CC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1767  0022CE  0E01               	movlw	1
  1768  0022D0  0100               	movlb	0	; () banked
  1769  0022D2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1770  0022D4  0E00               	movlw	0
  1771  0022D6  ECE3  F017         	call	_LCD_send_command
  1772                           
  1773                           ;src\LCD_44780.c: 295: delay_ms (10);
  1774  0022DA  0E00               	movlw	0
  1775  0022DC  0100               	movlb	0	; () banked
  1776  0022DE  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1777  0022E0  0E0A               	movlw	10
  1778  0022E2  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1779  0022E4  EC30  F018         	call	_delay_ms	;wreg free
  1780                           
  1781                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  1782  0022E8  0E00               	movlw	0
  1783  0022EA  0100               	movlb	0	; () banked
  1784  0022EC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1785  0022EE  0E01               	movlw	1
  1786  0022F0  0100               	movlb	0	; () banked
  1787  0022F2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1788  0022F4  0E01               	movlw	1
  1789  0022F6  0100               	movlb	0	; () banked
  1790  0022F8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1791  0022FA  0E00               	movlw	0
  1792  0022FC  ECE3  F017         	call	_LCD_send_command
  1793                           
  1794                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  1795  002300  0E00               	movlw	0
  1796  002302  0100               	movlb	0	; () banked
  1797  002304  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1798  002306  0E01               	movlw	1
  1799  002308  0100               	movlb	0	; () banked
  1800  00230A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1801  00230C  0E00               	movlw	0
  1802  00230E  0100               	movlb	0	; () banked
  1803  002310  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1804  002312  0E00               	movlw	0
  1805  002314  ECE3  F017         	call	_LCD_send_command
  1806                           
  1807                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  1808  002318  0E00               	movlw	0
  1809  00231A  0100               	movlb	0	; () banked
  1810  00231C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1811  00231E  0E01               	movlw	1
  1812  002320  0100               	movlb	0	; () banked
  1813  002322  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1814  002324  0E00               	movlw	0
  1815  002326  0100               	movlb	0	; () banked
  1816  002328  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1817  00232A  0E00               	movlw	0
  1818  00232C  ECE3  F017         	call	_LCD_send_command
  1819                           
  1820                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  1821  002330  0E00               	movlw	0
  1822  002332  0100               	movlb	0	; () banked
  1823  002334  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1824  002336  0E00               	movlw	0
  1825  002338  0100               	movlb	0	; () banked
  1826  00233A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1827  00233C  0E00               	movlw	0
  1828  00233E  0100               	movlb	0	; () banked
  1829  002340  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1830  002342  0E01               	movlw	1
  1831  002344  ECE3  F017         	call	_LCD_send_command
  1832                           
  1833                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  1834  002348  0E00               	movlw	0
  1835  00234A  0100               	movlb	0	; () banked
  1836  00234C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1837  00234E  0E00               	movlw	0
  1838  002350  0100               	movlb	0	; () banked
  1839  002352  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1840  002354  0E00               	movlw	0
  1841  002356  0100               	movlb	0	; () banked
  1842  002358  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1843  00235A  0E00               	movlw	0
  1844  00235C  ECE3  F017         	call	_LCD_send_command
  1845                           
  1846                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  1847  002360  0E00               	movlw	0
  1848  002362  0100               	movlb	0	; () banked
  1849  002364  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1850  002366  0E00               	movlw	0
  1851  002368  0100               	movlb	0	; () banked
  1852  00236A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1853  00236C  0E00               	movlw	0
  1854  00236E  0100               	movlb	0	; () banked
  1855  002370  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1856  002372  0E01               	movlw	1
  1857  002374  ECE3  F017         	call	_LCD_send_command
  1858                           
  1859                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  1860  002378  0E00               	movlw	0
  1861  00237A  0100               	movlb	0	; () banked
  1862  00237C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1863  00237E  0E00               	movlw	0
  1864  002380  0100               	movlb	0	; () banked
  1865  002382  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1866  002384  0E00               	movlw	0
  1867  002386  0100               	movlb	0	; () banked
  1868  002388  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1869  00238A  0E00               	movlw	0
  1870  00238C  ECE3  F017         	call	_LCD_send_command
  1871                           
  1872                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  1873  002390  0E00               	movlw	0
  1874  002392  0100               	movlb	0	; () banked
  1875  002394  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1876  002396  0E00               	movlw	0
  1877  002398  0100               	movlb	0	; () banked
  1878  00239A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1879  00239C  0E01               	movlw	1
  1880  00239E  0100               	movlb	0	; () banked
  1881  0023A0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1882  0023A2  0E00               	movlw	0
  1883  0023A4  ECE3  F017         	call	_LCD_send_command
  1884                           
  1885                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  1886  0023A8  0E00               	movlw	0
  1887  0023AA  0100               	movlb	0	; () banked
  1888  0023AC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1889  0023AE  0E00               	movlw	0
  1890  0023B0  0100               	movlb	0	; () banked
  1891  0023B2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1892  0023B4  0E00               	movlw	0
  1893  0023B6  0100               	movlb	0	; () banked
  1894  0023B8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1895  0023BA  0E00               	movlw	0
  1896  0023BC  ECE3  F017         	call	_LCD_send_command
  1897                           
  1898                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  1899  0023C0  0E01               	movlw	1
  1900  0023C2  0100               	movlb	0	; () banked
  1901  0023C4  6F72               	movwf	LCD_send_command@D2& (0+255),b
  1902  0023C6  0E01               	movlw	1
  1903  0023C8  0100               	movlb	0	; () banked
  1904  0023CA  6F73               	movwf	LCD_send_command@D1& (0+255),b
  1905  0023CC  0E00               	movlw	0
  1906  0023CE  0100               	movlb	0	; () banked
  1907  0023D0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  1908  0023D2  0E00               	movlw	0
  1909  0023D4  ECE3  F017         	call	_LCD_send_command
  1910                           
  1911                           ;src\LCD_44780.c: 312: LCD_clear ();
  1912  0023D8  EC17  F018         	call	_LCD_clear	;wreg free
  1913                           
  1914                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  1915  0023DC  0E00               	movlw	0
  1916  0023DE  0100               	movlb	0	; () banked
  1917  0023E0  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  1918  0023E2  0E00               	movlw	0
  1919  0023E4  ECFE  F017         	call	_LCD_cursor
  1920  0023E8  0012               	return		;funcret
  1921  0023EA                     __end_of_LCD_initialize:
  1922                           	opt stack 0
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           prodl	equ	0xFF3
  1928                           intcon	equ	0xFF2
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           status	equ	0xFD8
  1932                           
  1933 ;; *************** function _delay_set_quartz *****************
  1934 ;; Defined at:
  1935 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  frequency       1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  frequency       1   24[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;		None               void
  1942 ;; Registers used:
  1943 ;;		wreg
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1949 ;;      Params:         0       0       0       0
  1950 ;;      Locals:         1       0       0       0
  1951 ;;      Temps:          0       0       0       0
  1952 ;;      Totals:         1       0       0       0
  1953 ;;Total ram usage:        1 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_LCD_initialize
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text4
  1964  003238                     __ptext4:
  1965                           	opt stack 0
  1966  003238                     _delay_set_quartz:
  1967                           	opt stack 24
  1968                           
  1969                           ;incstack = 0
  1970                           ;delay_set_quartz@frequency stored from wreg
  1971  003238  6E3C               	movwf	delay_set_quartz@frequency,c
  1972                           
  1973                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  1974  00323A  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  1975  00323E  0012               	return		;funcret
  1976  003240                     __end_of_delay_set_quartz:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodl	equ	0xFF3
  1983                           intcon	equ	0xFF2
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           status	equ	0xFD8
  1987                           
  1988 ;; *************** function _LCD_cursor *****************
  1989 ;; Defined at:
  1990 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  active          1    wreg     unsigned char 
  1993 ;;  blinking        1   21[BANK0 ] unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  active          1   22[BANK0 ] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;		None               void
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2005 ;;      Params:         0       1       0       0
  2006 ;;      Locals:         0       1       0       0
  2007 ;;      Temps:          0       0       0       0
  2008 ;;      Totals:         0       2       0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    8
  2012 ;; This function calls:
  2013 ;;		_LCD_send_command
  2014 ;; This function is called by:
  2015 ;;		_LCD_initialize
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text5
  2020  002FFC                     __ptext5:
  2021                           	opt stack 0
  2022  002FFC                     _LCD_cursor:
  2023                           	opt stack 20
  2024                           
  2025                           ;incstack = 0
  2026                           ;LCD_cursor@active stored from wreg
  2027  002FFC  0100               	movlb	0	; () banked
  2028  002FFE  6F76               	movwf	LCD_cursor@active& (0+255),b
  2029                           
  2030                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2031  003000  0E00               	movlw	0
  2032  003002  0100               	movlb	0	; () banked
  2033  003004  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2034  003006  0E00               	movlw	0
  2035  003008  0100               	movlb	0	; () banked
  2036  00300A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2037  00300C  0E00               	movlw	0
  2038  00300E  0100               	movlb	0	; () banked
  2039  003010  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2040  003012  0E00               	movlw	0
  2041  003014  ECE3  F017         	call	_LCD_send_command
  2042                           
  2043                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2044  003018  0E01               	movlw	1
  2045  00301A  0100               	movlb	0	; () banked
  2046  00301C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2047  00301E  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2048  003022  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2049  003026  0E01               	movlw	1
  2050  003028  ECE3  F017         	call	_LCD_send_command
  2051  00302C  0012               	return		;funcret
  2052  00302E                     __end_of_LCD_cursor:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodl	equ	0xFF3
  2059                           intcon	equ	0xFF2
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _LCD_backlight *****************
  2065 ;; Defined at:
  2066 ;;		line 275 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  active          1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  active          1   24[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2080 ;;      Params:         0       0       0       0
  2081 ;;      Locals:         1       0       0       0
  2082 ;;      Temps:          0       0       0       0
  2083 ;;      Totals:         1       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    4
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_board_initialization
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text6
  2095  00322A                     __ptext6:
  2096                           	opt stack 0
  2097  00322A                     _LCD_backlight:
  2098                           	opt stack 25
  2099                           
  2100                           ;incstack = 0
  2101                           ;LCD_backlight@active stored from wreg
  2102  00322A  6E3C               	movwf	LCD_backlight@active,c
  2103                           
  2104                           ;src\LCD_44780.c: 277: LATCbits.LATC1 = active;
  2105  00322C  B03C               	btfsc	LCD_backlight@active,0,c
  2106  00322E  D002               	bra	u3515
  2107  003230  928B               	bcf	3979,1,c	;volatile
  2108  003232  D001               	bra	u3516
  2109  003234                     u3515:
  2110  003234  828B               	bsf	3979,1,c	;volatile
  2111  003236                     u3516:
  2112  003236  0012               	return		;funcret
  2113  003238                     __end_of_LCD_backlight:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodl	equ	0xFF3
  2120                           intcon	equ	0xFF2
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _USART_Send *****************
  2126 ;; Defined at:
  2127 ;;		line 205 in file "telecomando.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2141 ;;      Params:         0       0       0       0
  2142 ;;      Locals:         0       0       0       0
  2143 ;;      Temps:          0       0       0       0
  2144 ;;      Totals:         0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    6
  2148 ;; This function calls:
  2149 ;;		_putsUSART
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text7
  2156  003092                     __ptext7:
  2157                           	opt stack 0
  2158  003092                     _USART_Send:
  2159                           	opt stack 24
  2160                           
  2161                           ;telecomando.c: 206: set_speed_pk1 = set_speed >> 8;
  2162                           
  2163                           ;incstack = 0
  2164  003092  500E               	movf	_set_speed+1,w,c	;volatile
  2165  003094  6E17               	movwf	_set_speed_pk1,c	;volatile
  2166                           
  2167                           ;telecomando.c: 207: set_speed_pk0 = set_speed;
  2168  003096  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2169                           
  2170                           ;telecomando.c: 208: USART_Tx[1] = dir;
  2171  00309A  0E00               	movlw	0
  2172  00309C  B245               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2173  00309E  0E01               	movlw	1
  2174  0030A0  0100               	movlb	0	; () banked
  2175  0030A2  6FEA               	movwf	(_USART_Tx+1)& (0+255),b
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;telecomando.c: 209: USART_Tx[2] = set_speed_pk1;
  2179  0030A4  C017  F0EB         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;telecomando.c: 210: USART_Tx[3] = set_speed_pk0;
  2183  0030A8  C016  F0EC         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;telecomando.c: 211: USART_Tx[4] = set_steering;
  2187  0030AC  C018  F0ED         	movff	_set_steering,_USART_Tx+4	;volatile
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;telecomando.c: 212: USART_Tx[5] = analogic_brake;
  2191  0030B0  C014  F0EE         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;telecomando.c: 214: putsUSART((char *) USART_Tx);
  2195  0030B4  0EE9               	movlw	low _USART_Tx
  2196  0030B6  6E3D               	movwf	putsUSART@data,c
  2197  0030B8  0E00               	movlw	high _USART_Tx
  2198  0030BA  6E3E               	movwf	putsUSART@data+1,c
  2199  0030BC  ECA4  F018         	call	_putsUSART	;wreg free
  2200  0030C0  0012               	return		;funcret
  2201  0030C2                     __end_of_USART_Send:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function _putsUSART *****************
  2214 ;; Defined at:
  2215 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  data            2   25[COMRAM] PTR unsigned char 
  2218 ;;		 -> USART_Tx(7), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2230 ;;      Params:         2       0       0       0
  2231 ;;      Locals:         0       0       0       0
  2232 ;;      Temps:          0       0       0       0
  2233 ;;      Totals:         2       0       0       0
  2234 ;;Total ram usage:        2 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    5
  2237 ;; This function calls:
  2238 ;;		_WriteUSART
  2239 ;; This function is called by:
  2240 ;;		_USART_Send
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text8
  2245  003148                     __ptext8:
  2246                           	opt stack 0
  2247  003148                     _putsUSART:
  2248                           	opt stack 24
  2249  003148                     l421:
  2250  003148  A2AC               	btfss	4012,1,c	;volatile
  2251  00314A  D7FE               	goto	l421
  2252  00314C  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2253  003150  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2254  003154  50DF               	movf	indf2,w,c
  2255  003156  EC0C  F019         	call	_WriteUSART
  2256  00315A  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2257  00315E  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2258  003162  4A3D               	infsnz	putsUSART@data,f,c
  2259  003164  2A3E               	incf	putsUSART@data+1,f,c
  2260  003166  50DF               	movf	indf2,w,c
  2261  003168  B4D8               	btfsc	status,2,c
  2262  00316A  0012               	return	
  2263  00316C  D7ED               	goto	l421
  2264  00316E                     __end_of_putsUSART:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           indf2	equ	0xFDF
  2275                           fsr2h	equ	0xFDA
  2276                           fsr2l	equ	0xFD9
  2277                           status	equ	0xFD8
  2278                           
  2279 ;; *************** function _WriteUSART *****************
  2280 ;; Defined at:
  2281 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  data            1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  data            1   24[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2295 ;;      Params:         0       0       0       0
  2296 ;;      Locals:         1       0       0       0
  2297 ;;      Temps:          0       0       0       0
  2298 ;;      Totals:         1       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    4
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_putsUSART
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text9
  2310  003218                     __ptext9:
  2311                           	opt stack 0
  2312  003218                     _WriteUSART:
  2313                           	opt stack 24
  2314                           
  2315                           ;incstack = 0
  2316                           ;WriteUSART@data stored from wreg
  2317  003218  6E3C               	movwf	WriteUSART@data,c
  2318  00321A  ACAC               	btfss	4012,6,c	;volatile
  2319  00321C  D003               	goto	l3272
  2320  00321E  90AC               	bcf	4012,0,c	;volatile
  2321  003220  B211               	btfsc	_USART_Status,1,c
  2322  003222  80AC               	bsf	4012,0,c	;volatile
  2323  003224                     l3272:
  2324  003224  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2325  003228  0012               	return		;funcret
  2326  00322A                     __end_of_WriteUSART:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _LCD_Handler *****************
  2342 ;; Defined at:
  2343 ;;		line 221 in file "telecomando.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;		None               void
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2357 ;;      Params:         0       0       0       0
  2358 ;;      Locals:         0       0       0       0
  2359 ;;      Temps:          0       0       0       0
  2360 ;;      Totals:         0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:   10
  2364 ;; This function calls:
  2365 ;;		_LCD_clear
  2366 ;;		_LCD_goto_line
  2367 ;;		_LCD_write_message
  2368 ;;		_LCD_write_string
  2369 ;;		___lwdiv
  2370 ;;		___xxtofl
  2371 ;;		_sprintf
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text10
  2378  0026A4                     __ptext10:
  2379                           	opt stack 0
  2380  0026A4                     _LCD_Handler:
  2381                           	opt stack 20
  2382                           
  2383                           ;telecomando.c: 222: actual_speed_kmh = actual_speed / 278;
  2384                           
  2385                           ;incstack = 0
  2386  0026A4  0E01               	movlw	1
  2387  0026A6  6E3F               	movwf	___lwdiv@divisor+1,c
  2388  0026A8  0E16               	movlw	22
  2389  0026AA  6E3E               	movwf	___lwdiv@divisor,c
  2390  0026AC  C0E0  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2391  0026B0  C0E1  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2392  0026B4  EC4F  F017         	call	___lwdiv	;wreg free
  2393  0026B8  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2394  0026BC  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2395  0026C0  0100               	movlb	0	; () banked
  2396  0026C2  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2397  0026C4  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2398  0026C6  0E00               	movlw	0
  2399  0026C8  EC8E  F00F         	call	___xxtofl
  2400  0026CC  C070  F0D8         	movff	?___xxtofl,_actual_speed_kmh
  2401  0026D0  C071  F0D9         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2402  0026D4  C072  F0DA         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2403  0026D8  C073  F0DB         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2404                           
  2405                           ;telecomando.c: 224: LCD_clear();
  2406  0026DC  EC17  F018         	call	_LCD_clear	;wreg free
  2407                           
  2408                           ;telecomando.c: 225: LCD_goto_line(1);
  2409  0026E0  0E01               	movlw	1
  2410  0026E2  EC63  F014         	call	_LCD_goto_line
  2411                           
  2412                           ;telecomando.c: 226: LCD_write_message("=== VEHICLE DATA ===");
  2413  0026E6  0E91               	movlw	low STR_1
  2414  0026E8  0100               	movlb	0	; () banked
  2415  0026EA  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2416  0026EC  0E03               	movlw	high STR_1
  2417  0026EE  0100               	movlb	0	; () banked
  2418  0026F0  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2419  0026F2  EC78  F018         	call	_LCD_write_message	;wreg free
  2420                           
  2421                           ;telecomando.c: 228: LCD_goto_line(2);
  2422  0026F6  0E02               	movlw	2
  2423  0026F8  EC63  F014         	call	_LCD_goto_line
  2424                           
  2425                           ;telecomando.c: 229: LCD_write_message("Direction: ");
  2426  0026FC  0EBB               	movlw	low STR_2
  2427  0026FE  0100               	movlb	0	; () banked
  2428  002700  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2429  002702  0E03               	movlw	high STR_2
  2430  002704  0100               	movlb	0	; () banked
  2431  002706  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2432  002708  EC78  F018         	call	_LCD_write_message	;wreg free
  2433                           
  2434                           ;telecomando.c: 230: if (switch_position != 0) {
  2435  00270C  5019               	movf	_switch_position,w,c	;volatile
  2436  00270E  B4D8               	btfsc	status,2,c
  2437  002710  D014               	goto	l5334
  2438                           
  2439                           ;telecomando.c: 231: if (dir == 1) {
  2440  002712  A245               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2441  002714  D009               	goto	l5332
  2442                           
  2443                           ;telecomando.c: 232: LCD_write_message("FWD");
  2444  002716  0EE5               	movlw	low STR_3
  2445  002718  0100               	movlb	0	; () banked
  2446  00271A  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2447  00271C  0E03               	movlw	high STR_3
  2448  00271E  0100               	movlb	0	; () banked
  2449  002720  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2450  002722  EC78  F018         	call	_LCD_write_message	;wreg free
  2451                           
  2452                           ;telecomando.c: 233: } else {
  2453  002726  D011               	goto	l5336
  2454  002728                     l5332:
  2455                           
  2456                           ;telecomando.c: 234: LCD_write_message("BKWD");
  2457  002728  0EDB               	movlw	low STR_4
  2458  00272A  0100               	movlb	0	; () banked
  2459  00272C  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2460  00272E  0E03               	movlw	high STR_4
  2461  002730  0100               	movlb	0	; () banked
  2462  002732  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2463  002734  EC78  F018         	call	_LCD_write_message	;wreg free
  2464                           
  2465                           ;telecomando.c: 235: }
  2466                           ;telecomando.c: 236: } else {
  2467  002738  D008               	goto	l5336
  2468  00273A                     l5334:
  2469                           
  2470                           ;telecomando.c: 237: LCD_write_message("P");
  2471  00273A  0EE9               	movlw	low STR_5
  2472  00273C  0100               	movlb	0	; () banked
  2473  00273E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2474  002740  0E03               	movlw	high STR_5
  2475  002742  0100               	movlb	0	; () banked
  2476  002744  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2477  002746  EC78  F018         	call	_LCD_write_message	;wreg free
  2478  00274A                     l5336:
  2479                           
  2480                           ;telecomando.c: 238: }
  2481                           ;telecomando.c: 240: LCD_goto_line(3);
  2482  00274A  0E03               	movlw	3
  2483  00274C  EC63  F014         	call	_LCD_goto_line
  2484                           
  2485                           ;telecomando.c: 241: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2486  002750  0E19               	movlw	low _str
  2487  002752  0100               	movlb	0	; () banked
  2488  002754  6FC0               	movwf	sprintf@sp& (0+255),b
  2489  002756  0E01               	movlw	high _str
  2490  002758  0100               	movlb	0	; () banked
  2491  00275A  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2492  00275C  0EC7               	movlw	low STR_6
  2493  00275E  0100               	movlb	0	; () banked
  2494  002760  6FC2               	movwf	sprintf@f& (0+255),b
  2495  002762  0E03               	movlw	high STR_6
  2496  002764  0100               	movlb	0	; () banked
  2497  002766  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2498  002768  C0D8  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2499  00276C  C0D9  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2500  002770  C0DA  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2501  002774  C0DB  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2502  002778  ECF6  F001         	call	_sprintf	;wreg free
  2503                           
  2504                           ;telecomando.c: 242: str[11] = '\0';
  2505  00277C  0E00               	movlw	0
  2506  00277E  0101               	movlb	1	; () banked
  2507  002780  6F24               	movwf	(_str+11)& (0+255),b
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;telecomando.c: 243: LCD_write_string(str);
  2511  002782  0E19               	movlw	low _str
  2512  002784  0100               	movlb	0	; () banked
  2513  002786  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2514  002788  0E01               	movlw	high _str
  2515  00278A  0100               	movlb	0	; () banked
  2516  00278C  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2517  00278E  ECB7  F018         	call	_LCD_write_string	;wreg free
  2518                           
  2519                           ;telecomando.c: 244: LCD_write_message("Km/h");
  2520  002792  0EE0               	movlw	low STR_7
  2521  002794  0100               	movlb	0	; () banked
  2522  002796  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2523  002798  0E03               	movlw	high STR_7
  2524  00279A  0100               	movlb	0	; () banked
  2525  00279C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2526  00279E  EC78  F018         	call	_LCD_write_message	;wreg free
  2527                           
  2528                           ;telecomando.c: 246: LCD_goto_line(4);
  2529  0027A2  0E04               	movlw	4
  2530  0027A4  EC63  F014         	call	_LCD_goto_line
  2531                           
  2532                           ;telecomando.c: 247: LCD_write_message("====================");
  2533  0027A8  0EA6               	movlw	low STR_8
  2534  0027AA  0100               	movlb	0	; () banked
  2535  0027AC  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2536  0027AE  0E03               	movlw	high STR_8
  2537  0027B0  0100               	movlb	0	; () banked
  2538  0027B2  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2539  0027B4  EC78  F018         	call	_LCD_write_message	;wreg free
  2540  0027B8  0012               	return		;funcret
  2541  0027BA                     __end_of_LCD_Handler:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodl	equ	0xFF3
  2548                           intcon	equ	0xFF2
  2549                           postinc0	equ	0xFEE
  2550                           wreg	equ	0xFE8
  2551                           indf2	equ	0xFDF
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _sprintf *****************
  2557 ;; Defined at:
  2558 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  2561 ;;		 -> str(12), 
  2562 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  2563 ;;		 -> STR_6(12), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2566 ;;  tmpval          4   14[BANK1 ] struct .
  2567 ;;  val             4    8[BANK1 ] unsigned long 
  2568 ;;  cp              3    0        PTR const unsigned char 
  2569 ;;  prec            2   18[BANK1 ] int 
  2570 ;;  exp             2   12[BANK1 ] int 
  2571 ;;  flag            2    6[BANK1 ] unsigned short 
  2572 ;;  ap              2    4[BANK1 ] PTR void [1]
  2573 ;;		 -> ?_sprintf(2), 
  2574 ;;  len             2    0        unsigned int 
  2575 ;;  width           2    0        int 
  2576 ;;  c               1   24[BANK1 ] char 
  2577 ;;  d               1    0        unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2   96[BANK0 ] int 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2587 ;;      Params:         0       8       0       0
  2588 ;;      Locals:         0       0      25       0
  2589 ;;      Temps:          0       2       0       0
  2590 ;;      Totals:         0      10      25       0
  2591 ;;Total ram usage:       35 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    6
  2594 ;; This function calls:
  2595 ;;		___awdiv
  2596 ;;		___fladd
  2597 ;;		___flge
  2598 ;;		___flmul
  2599 ;;		___flneg
  2600 ;;		___flsub
  2601 ;;		___fltol
  2602 ;;		___lldiv
  2603 ;;		___llmod
  2604 ;;		___wmul
  2605 ;;		___xxtofl
  2606 ;;		__div_to_l_
  2607 ;;		__tdiv_to_l_
  2608 ;;		_fround
  2609 ;;		_isdigit
  2610 ;;		_scale
  2611 ;; This function is called by:
  2612 ;;		_LCD_Handler
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text11
  2617  0003EC                     __ptext11:
  2618                           	opt stack 0
  2619  0003EC                     _sprintf:
  2620                           	opt stack 23
  2621                           
  2622                           ;doprnt.c: 494: va_list ap;
  2623                           ;doprnt.c: 499: signed char c;
  2624                           ;doprnt.c: 501: int width;
  2625                           ;doprnt.c: 504: int prec;
  2626                           ;doprnt.c: 508: unsigned short flag;
  2627                           ;doprnt.c: 515: char d;
  2628                           ;doprnt.c: 516: double fval;
  2629                           ;doprnt.c: 517: int exp;
  2630                           ;doprnt.c: 523: union {
  2631                           ;doprnt.c: 524: unsigned long vd;
  2632                           ;doprnt.c: 525: double integ;
  2633                           ;doprnt.c: 526: } tmpval;
  2634                           ;doprnt.c: 528: unsigned long val;
  2635                           ;doprnt.c: 529: unsigned len;
  2636                           ;doprnt.c: 530: const char * cp;
  2637                           ;doprnt.c: 533: *ap = __va_start();
  2638                           
  2639                           ;incstack = 0
  2640  0003EC  0EC4               	movlw	low (?_sprintf+4)
  2641  0003EE  0101               	movlb	1	; () banked
  2642  0003F0  6F04               	movwf	sprintf@ap& (0+255),b
  2643  0003F2  0E00               	movlw	high (?_sprintf+4)
  2644  0003F4  0101               	movlb	1	; () banked
  2645  0003F6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  2646                           
  2647                           ;doprnt.c: 536: while(c = *f++) {
  2648  0003F8  EF0E  F006         	goto	l5226
  2649  0003FC                     l5028:
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;doprnt.c: 538: if(c != '%')
  2653  0003FC  0E25               	movlw	37
  2654  0003FE  0101               	movlb	1	; () banked
  2655  000400  1918               	xorwf	sprintf@c& (0+255),w,b
  2656  000402  B4D8               	btfsc	status,2,c
  2657  000404  D008               	goto	l5034
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;doprnt.c: 540: {
  2661                           ;doprnt.c: 541: ((*sp++ = (c)));
  2662  000406  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  2663  00040A  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  2664  00040E  C118  FFDF         	movff	sprintf@c,indf2
  2665  000412  EF0B  F006         	goto	l5224
  2666  000416                     l5034:
  2667                           
  2668                           ;doprnt.c: 543: }
  2669                           ;doprnt.c: 548: flag = 0;
  2670  000416  0E00               	movlw	0
  2671  000418  0101               	movlb	1	; () banked
  2672  00041A  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  2673  00041C  0E00               	movlw	0
  2674  00041E  6F06               	movwf	sprintf@flag& (0+255),b
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;doprnt.c: 611: if(*f == '.') {
  2678  000420  C0C2  FFF6         	movff	sprintf@f,tblptrl
  2679  000424  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  2680  000428                     	if	0	;tblptru may be non-zero
  2681  000428                     	endif
  2682  000428                     	if	0	;tblptru may be non-zero
  2683  000428                     	endif
  2684  000428  0008               	tblrd		*
  2685  00042A  50F5               	movf	tablat,w,c
  2686  00042C  0A2E               	xorlw	46
  2687  00042E  A4D8               	btfss	status,2,c
  2688  000430  D034               	goto	l5048
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;doprnt.c: 612: flag |= 0x4000;
  2692  000432  0101               	movlb	1	; () banked
  2693  000434  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  2694                           
  2695                           ;doprnt.c: 613: f++;
  2696  000436  0100               	movlb	0	; () banked
  2697  000438  4BC2               	infsnz	sprintf@f& (0+255),f,b
  2698  00043A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;doprnt.c: 620: {
  2702                           ;doprnt.c: 621: prec = 0;
  2703  00043C  0E00               	movlw	0
  2704  00043E  0101               	movlb	1	; () banked
  2705  000440  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2706  000442  0E00               	movlw	0
  2707  000444  6F12               	movwf	sprintf@prec& (0+255),b
  2708                           
  2709                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2710  000446  D01E               	goto	l5046
  2711  000448                     l5042:
  2712                           
  2713                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2714  000448  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  2715  00044C  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  2716  000450  0E00               	movlw	0
  2717  000452  6E3F               	movwf	___wmul@multiplicand+1,c
  2718  000454  0E0A               	movlw	10
  2719  000456  6E3E               	movwf	___wmul@multiplicand,c
  2720  000458  ECCA  F018         	call	___wmul	;wreg free
  2721  00045C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  2722  000460  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  2723  000464                     	if	0	;tblptru may be non-zero
  2724  000464                     	endif
  2725  000464                     	if	0	;tblptru may be non-zero
  2726  000464                     	endif
  2727  000464  0008               	tblrd		*
  2728  000466  50F5               	movf	tablat,w,c
  2729  000468  263C               	addwf	?___wmul,f,c
  2730  00046A  0E00               	movlw	0
  2731  00046C  223D               	addwfc	?___wmul+1,f,c
  2732  00046E  0ED0               	movlw	208
  2733  000470  243C               	addwf	?___wmul,w,c
  2734  000472  0101               	movlb	1	; () banked
  2735  000474  6F12               	movwf	sprintf@prec& (0+255),b
  2736  000476  0EFF               	movlw	255
  2737  000478  203D               	addwfc	?___wmul+1,w,c
  2738  00047A  0101               	movlb	1	; () banked
  2739  00047C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2740                           
  2741                           ; BSR set to: 1
  2742  00047E  0100               	movlb	0	; () banked
  2743  000480  4BC2               	infsnz	sprintf@f& (0+255),f,b
  2744  000482  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  2745  000484                     l5046:
  2746  000484  C0C2  FFF6         	movff	sprintf@f,tblptrl
  2747  000488  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  2748  00048C                     	if	0	;tblptru may be non-zero
  2749  00048C                     	endif
  2750  00048C                     	if	0	;tblptru may be non-zero
  2751  00048C                     	endif
  2752  00048C  0008               	tblrd		*
  2753  00048E  50F5               	movf	tablat,w,c
  2754  000490  ECEE  F018         	call	_isdigit
  2755  000494  A0D8               	btfss	status,0,c
  2756  000496  D00C               	goto	l5056
  2757  000498  D7D7               	goto	l5042
  2758  00049A                     l5048:
  2759                           
  2760                           ;doprnt.c: 626: prec = 0;
  2761  00049A  0E00               	movlw	0
  2762  00049C  0101               	movlb	1	; () banked
  2763  00049E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2764  0004A0  0E00               	movlw	0
  2765  0004A2  6F12               	movwf	sprintf@prec& (0+255),b
  2766                           
  2767                           ; BSR set to: 1
  2768                           ;doprnt.c: 628: flag |= 0x1000;
  2769  0004A4  0101               	movlb	1	; () banked
  2770  0004A6  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;doprnt.c: 630: }
  2774                           ;doprnt.c: 635: switch(c = *f++) {
  2775  0004A8  D003               	goto	l5056
  2776  0004AA                     l5052:
  2777                           
  2778                           ; BSR set to: 1
  2779                           ;doprnt.c: 663: flag |= 0x400;
  2780  0004AA  0101               	movlb	1	; () banked
  2781  0004AC  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  2782                           
  2783                           ;doprnt.c: 664: break;
  2784  0004AE  D013               	goto	l5058
  2785  0004B0                     l5056:
  2786  0004B0  C0C2  FFF6         	movff	sprintf@f,tblptrl
  2787  0004B4  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  2788  0004B8  0100               	movlb	0	; () banked
  2789  0004BA  4BC2               	infsnz	sprintf@f& (0+255),f,b
  2790  0004BC  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  2791  0004BE                     	if	0	;tblptru may be non-zero
  2792  0004BE                     	endif
  2793  0004BE                     	if	0	;tblptru may be non-zero
  2794  0004BE                     	endif
  2795  0004BE  0008               	tblrd		*
  2796  0004C0  CFF5 F118          	movff	tablat,sprintf@c
  2797  0004C4  0101               	movlb	1	; () banked
  2798  0004C6  5118               	movf	sprintf@c& (0+255),w,b
  2799                           
  2800                           ; Switch size 1, requested type "space"
  2801                           ; Number of cases is 2, Range of values is 0 to 102
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte            7     4 (average)
  2805                           ;	Chosen strategy is simple_byte
  2806  0004C8  0A00               	xorlw	0	; case 0
  2807  0004CA  B4D8               	btfsc	status,2,c
  2808  0004CC  D3B6               	goto	l5228
  2809  0004CE  0A66               	xorlw	102	; case 102
  2810  0004D0  B4D8               	btfsc	status,2,c
  2811  0004D2  D7EB               	goto	l5052
  2812  0004D4  D3A3               	goto	l5226
  2813  0004D6                     l5058:
  2814                           
  2815                           ; BSR set to: 1
  2816                           ;doprnt.c: 825: if(flag & (0x700)) {
  2817  0004D6  0E07               	movlw	7
  2818  0004D8  0101               	movlb	1	; () banked
  2819  0004DA  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  2820  0004DC  B4D8               	btfsc	status,2,c
  2821  0004DE  D346               	goto	l5206
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;doprnt.c: 827: if(flag & 0x1000)
  2825  0004E0  0101               	movlb	1	; () banked
  2826  0004E2  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  2827  0004E4  D005               	goto	l5064
  2828                           
  2829                           ; BSR set to: 1
  2830                           ;doprnt.c: 829: prec = 6;
  2831  0004E6  0E00               	movlw	0
  2832  0004E8  0101               	movlb	1	; () banked
  2833  0004EA  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2834  0004EC  0E06               	movlw	6
  2835  0004EE  6F12               	movwf	sprintf@prec& (0+255),b
  2836  0004F0                     l5064:
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2840  0004F0  C104  FFD9         	movff	sprintf@ap,fsr2l
  2841  0004F4  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  2842  0004F8  CFDE F114          	movff	postinc2,sprintf@fval
  2843  0004FC  CFDE F115          	movff	postinc2,sprintf@fval+1
  2844  000500  CFDE F116          	movff	postinc2,sprintf@fval+2
  2845  000504  CFDE F117          	movff	postinc2,sprintf@fval+3
  2846                           
  2847                           ; BSR set to: 1
  2848  000508  0E04               	movlw	4
  2849  00050A  0101               	movlb	1	; () banked
  2850  00050C  2704               	addwf	sprintf@ap& (0+255),f,b
  2851  00050E  0E00               	movlw	0
  2852  000510  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;doprnt.c: 831: if(fval < 0.0) {
  2856  000512  0101               	movlb	1	; () banked
  2857  000514  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  2858  000516  D015               	goto	l5074
  2859                           
  2860                           ; BSR set to: 1
  2861                           ;doprnt.c: 832: fval = -fval;
  2862  000518  C114  F03C         	movff	sprintf@fval,___flneg@f1
  2863  00051C  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  2864  000520  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  2865  000524  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  2866  000528  EC61  F018         	call	___flneg	;wreg free
  2867  00052C  C03C  F114         	movff	?___flneg,sprintf@fval
  2868  000530  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  2869  000534  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  2870  000538  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  2871                           
  2872                           ;doprnt.c: 833: flag |= 0x03;
  2873  00053C  0E03               	movlw	3
  2874  00053E  0101               	movlb	1	; () banked
  2875  000540  1306               	iorwf	sprintf@flag& (0+255),f,b
  2876  000542                     l5074:
  2877                           
  2878                           ; BSR set to: 1
  2879                           ;doprnt.c: 834: }
  2880                           ;doprnt.c: 835: exp = 0;
  2881  000542  0E00               	movlw	0
  2882  000544  0101               	movlb	1	; () banked
  2883  000546  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  2884  000548  0E00               	movlw	0
  2885  00054A  6F0C               	movwf	sprintf@exp& (0+255),b
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;doprnt.c: 836: if( fval!=0) {
  2889  00054C  0101               	movlb	1	; () banked
  2890  00054E  5114               	movf	sprintf@fval& (0+255),w,b
  2891  000550  0101               	movlb	1	; () banked
  2892  000552  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2893  000554  0101               	movlb	1	; () banked
  2894  000556  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2895  000558  0101               	movlb	1	; () banked
  2896  00055A  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2897  00055C  B4D8               	btfsc	status,2,c
  2898  00055E  D08D               	goto	l5102
  2899                           
  2900                           ; BSR set to: 1
  2901                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  2902  000560  0101               	movlb	1	; () banked
  2903  000562  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2904  000564  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2905  000566  0F82               	addlw	130
  2906  000568  0101               	movlb	1	; () banked
  2907  00056A  6F0C               	movwf	sprintf@exp& (0+255),b
  2908  00056C  0101               	movlb	1	; () banked
  2909  00056E  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  2910  000570  0EFF               	movlw	255
  2911  000572  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2912                           
  2913                           ; BSR set to: 1
  2914                           ;doprnt.c: 838: exp--;
  2915  000574  0101               	movlb	1	; () banked
  2916  000576  070C               	decf	sprintf@exp& (0+255),f,b
  2917  000578  A0D8               	btfss	status,0,c
  2918  00057A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  2919                           
  2920                           ; BSR set to: 1
  2921                           ;doprnt.c: 839: exp *= 3;
  2922  00057C  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  2923  000580  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  2924  000584  0E00               	movlw	0
  2925  000586  6E3F               	movwf	___wmul@multiplicand+1,c
  2926  000588  0E03               	movlw	3
  2927  00058A  6E3E               	movwf	___wmul@multiplicand,c
  2928  00058C  ECCA  F018         	call	___wmul	;wreg free
  2929  000590  C03C  F10C         	movff	?___wmul,sprintf@exp
  2930  000594  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  2931                           
  2932                           ;doprnt.c: 840: exp /= 10;
  2933  000598  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  2934  00059C  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  2935  0005A0  0E00               	movlw	0
  2936  0005A2  0100               	movlb	0	; () banked
  2937  0005A4  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  2938  0005A6  0E0A               	movlw	10
  2939  0005A8  6F72               	movwf	___awdiv@divisor& (0+255),b
  2940  0005AA  EC48  F015         	call	___awdiv	;wreg free
  2941  0005AE  C070  F10C         	movff	?___awdiv,sprintf@exp
  2942  0005B2  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  2943                           
  2944                           ;doprnt.c: 841: if(exp < 0)
  2945  0005B6  0101               	movlb	1	; () banked
  2946  0005B8  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  2947  0005BA  D004               	goto	l5090
  2948                           
  2949                           ; BSR set to: 1
  2950                           ;doprnt.c: 842: exp--;
  2951  0005BC  0101               	movlb	1	; () banked
  2952  0005BE  070C               	decf	sprintf@exp& (0+255),f,b
  2953  0005C0  A0D8               	btfss	status,0,c
  2954  0005C2  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  2955  0005C4                     l5090:
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2959  0005C4  0101               	movlb	1	; () banked
  2960  0005C6  510C               	movf	sprintf@exp& (0+255),w,b
  2961  0005C8  0800               	sublw	0
  2962  0005CA  ECCB  F00A         	call	_scale
  2963  0005CE  C097  F10E         	movff	?_scale,sprintf@tmpval
  2964  0005D2  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  2965  0005D6  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  2966  0005DA  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  2967                           
  2968                           ;doprnt.c: 847: tmpval.integ *= fval;
  2969  0005DE  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  2970  0005E2  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  2971  0005E6  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  2972  0005EA  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  2973  0005EE  C114  F082         	movff	sprintf@fval,___flmul@a
  2974  0005F2  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  2975  0005F6  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  2976  0005FA  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  2977  0005FE  EC78  F008         	call	___flmul	;wreg free
  2978  000602  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  2979  000606  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  2980  00060A  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  2981  00060E  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  2982                           
  2983                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2984  000612  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  2985  000616  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  2986  00061A  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  2987  00061E  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  2988  000622  0E00               	movlw	0
  2989  000624  0100               	movlb	0	; () banked
  2990  000626  6F74               	movwf	___flge@ff2& (0+255),b
  2991  000628  0E00               	movlw	0
  2992  00062A  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  2993  00062C  0E80               	movlw	128
  2994  00062E  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  2995  000630  0E3F               	movlw	63
  2996  000632  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  2997  000634  ECA4  F012         	call	___flge	;wreg free
  2998  000638  0100               	movlb	0	; () banked
  2999  00063A  B0D8               	btfsc	status,0,c
  3000  00063C  D005               	goto	l5098
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;doprnt.c: 849: exp--;
  3004  00063E  0101               	movlb	1	; () banked
  3005  000640  070C               	decf	sprintf@exp& (0+255),f,b
  3006  000642  A0D8               	btfss	status,0,c
  3007  000644  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3008  000646  D019               	goto	l5102
  3009  000648                     l5098:
  3010                           
  3011                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3012  000648  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3013  00064C  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3014  000650  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3015  000654  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3016  000658  0E00               	movlw	0
  3017  00065A  0100               	movlb	0	; () banked
  3018  00065C  6F74               	movwf	___flge@ff2& (0+255),b
  3019  00065E  0E00               	movlw	0
  3020  000660  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3021  000662  0E20               	movlw	32
  3022  000664  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3023  000666  0E41               	movlw	65
  3024  000668  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3025  00066A  ECA4  F012         	call	___flge	;wreg free
  3026  00066E  0100               	movlb	0	; () banked
  3027  000670  A0D8               	btfss	status,0,c
  3028  000672  D003               	goto	l5102
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;doprnt.c: 851: exp++;
  3032  000674  0101               	movlb	1	; () banked
  3033  000676  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3034  000678  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3035  00067A                     l5102:
  3036                           
  3037                           ;doprnt.c: 852: }
  3038                           ;doprnt.c: 1112: if(prec <= 12)
  3039  00067A  0101               	movlb	1	; () banked
  3040  00067C  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3041  00067E  D008               	goto	l5104
  3042  000680  0101               	movlb	1	; () banked
  3043  000682  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3044  000684  E123               	bnz	l5106
  3045  000686  0E0D               	movlw	13
  3046  000688  0101               	movlb	1	; () banked
  3047  00068A  5D12               	subwf	sprintf@prec& (0+255),w,b
  3048  00068C  B0D8               	btfsc	status,0,c
  3049  00068E  D01E               	goto	l5106
  3050  000690                     l5104:
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;doprnt.c: 1113: fval += fround(prec);
  3054  000690  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3055  000694  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3056  000698  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3057  00069C  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3058  0006A0  0101               	movlb	1	; () banked
  3059  0006A2  5112               	movf	sprintf@prec& (0+255),w,b
  3060  0006A4  EC18  F00D         	call	_fround
  3061  0006A8  C097  F0A8         	movff	?_fround,___fladd@a
  3062  0006AC  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3063  0006B0  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3064  0006B4  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3065  0006B8  EC24  F006         	call	___fladd	;wreg free
  3066  0006BC  C0A4  F114         	movff	?___fladd,sprintf@fval
  3067  0006C0  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3068  0006C4  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3069  0006C8  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3070  0006CC                     l5106:
  3071                           
  3072                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3073  0006CC  0101               	movlb	1	; () banked
  3074  0006CE  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3075  0006D0  D008               	goto	l5108
  3076  0006D2  0101               	movlb	1	; () banked
  3077  0006D4  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3078  0006D6  E12E               	bnz	l5114
  3079  0006D8  0E0A               	movlw	10
  3080  0006DA  0101               	movlb	1	; () banked
  3081  0006DC  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3082  0006DE  B0D8               	btfsc	status,0,c
  3083  0006E0  D029               	goto	l5114
  3084  0006E2                     l5108:
  3085                           
  3086                           ; BSR set to: 1
  3087  0006E2  0101               	movlb	1	; () banked
  3088  0006E4  5114               	movf	sprintf@fval& (0+255),w,b
  3089  0006E6  0101               	movlb	1	; () banked
  3090  0006E8  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3091  0006EA  0101               	movlb	1	; () banked
  3092  0006EC  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3093  0006EE  0101               	movlb	1	; () banked
  3094  0006F0  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3095  0006F2  B4D8               	btfsc	status,2,c
  3096  0006F4  D06D               	goto	l5128
  3097                           
  3098                           ; BSR set to: 1
  3099  0006F6  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3100  0006FA  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3101  0006FE  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3102  000702  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3103  000706  ECDD  F013         	call	___fltol	;wreg free
  3104  00070A  0100               	movlb	0	; () banked
  3105  00070C  51A0               	movf	?___fltol& (0+255),w,b
  3106  00070E  0100               	movlb	0	; () banked
  3107  000710  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3108  000712  0100               	movlb	0	; () banked
  3109  000714  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3110  000716  0100               	movlb	0	; () banked
  3111  000718  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3112  00071A  A4D8               	btfss	status,2,c
  3113  00071C  D059               	goto	l5128
  3114                           
  3115                           ; BSR set to: 0
  3116  00071E  0101               	movlb	1	; () banked
  3117  000720  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3118  000722  D056               	goto	l5128
  3119  000724  0101               	movlb	1	; () banked
  3120  000726  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3121  000728  E105               	bnz	l5114
  3122  00072A  0E02               	movlw	2
  3123  00072C  0101               	movlb	1	; () banked
  3124  00072E  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3125  000730  A0D8               	btfss	status,0,c
  3126  000732  D04E               	goto	l5128
  3127  000734                     l5114:
  3128                           
  3129                           ; BSR set to: 1
  3130                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3131  000734  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3132  000738  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3133  00073C  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3134  000740  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3135  000744  0E5F               	movlw	95
  3136  000746  0100               	movlb	0	; () banked
  3137  000748  6F74               	movwf	___flge@ff2& (0+255),b
  3138  00074A  0E70               	movlw	112
  3139  00074C  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3140  00074E  0E89               	movlw	137
  3141  000750  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3142  000752  0E40               	movlw	64
  3143  000754  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3144  000756  ECA4  F012         	call	___flge	;wreg free
  3145  00075A  0100               	movlb	0	; () banked
  3146  00075C  B0D8               	btfsc	status,0,c
  3147  00075E  D003               	goto	l5118
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3151  000760  0101               	movlb	1	; () banked
  3152  000762  0EF7               	movlw	247
  3153  000764  D002               	goto	L2
  3154  000766                     l5118:
  3155                           
  3156                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3157  000766  0101               	movlb	1	; () banked
  3158  000768  0EF8               	movlw	248
  3159  00076A                     L2:
  3160  00076A  270C               	addwf	sprintf@exp& (0+255),f,b
  3161  00076C  0EFF               	movlw	255
  3162  00076E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3163                           
  3164                           ; BSR set to: 1
  3165                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3166                           
  3167                           ; BSR set to: 1
  3168  000770  0101               	movlb	1	; () banked
  3169  000772  510C               	movf	sprintf@exp& (0+255),w,b
  3170  000774  ECCB  F00A         	call	_scale
  3171  000778  C097  F10E         	movff	?_scale,sprintf@tmpval
  3172  00077C  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3173  000780  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3174  000784  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3175  000788  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3176  00078C  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3177  000790  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3178  000794  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3179  000798  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3180  00079C  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3181  0007A0  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3182  0007A4  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3183  0007A8  ECF5  F011         	call	__div_to_l_	;wreg free
  3184  0007AC  C070  F108         	movff	?__div_to_l_,sprintf@val
  3185  0007B0  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3186  0007B4  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3187  0007B8  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3188                           
  3189                           ;doprnt.c: 1129: fval = 0.0;
  3190  0007BC  0E00               	movlw	0
  3191  0007BE  0101               	movlb	1	; () banked
  3192  0007C0  6F14               	movwf	sprintf@fval& (0+255),b
  3193  0007C2  0E00               	movlw	0
  3194  0007C4  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3195  0007C6  0E00               	movlw	0
  3196  0007C8  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3197  0007CA  0E00               	movlw	0
  3198  0007CC  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3199                           
  3200                           ;doprnt.c: 1130: } else {
  3201  0007CE  D03C               	goto	l5132
  3202  0007D0                     l5128:
  3203                           
  3204                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3205  0007D0  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3206  0007D4  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3207  0007D8  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3208  0007DC  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3209  0007E0  ECDD  F013         	call	___fltol	;wreg free
  3210  0007E4  C0A0  F108         	movff	?___fltol,sprintf@val
  3211  0007E8  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3212  0007EC  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3213  0007F0  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3214                           
  3215                           ;doprnt.c: 1132: fval -= (double)val;
  3216  0007F4  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3217  0007F8  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3218  0007FC  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3219  000800  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3220  000804  C108  F070         	movff	sprintf@val,___xxtofl@val
  3221  000808  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3222  00080C  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3223  000810  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3224  000814  0E00               	movlw	0
  3225  000816  EC8E  F00F         	call	___xxtofl
  3226  00081A  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3227  00081E  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3228  000822  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3229  000826  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3230  00082A  EC78  F017         	call	___flsub	;wreg free
  3231  00082E  C0B8  F114         	movff	?___flsub,sprintf@fval
  3232  000832  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3233  000836  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3234  00083A  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3235                           
  3236                           ;doprnt.c: 1133: exp = 0;
  3237  00083E  0E00               	movlw	0
  3238  000840  0101               	movlb	1	; () banked
  3239  000842  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3240  000844  0E00               	movlw	0
  3241  000846  6F0C               	movwf	sprintf@exp& (0+255),b
  3242  000848                     l5132:
  3243                           
  3244                           ; BSR set to: 1
  3245                           ;doprnt.c: 1134: }
  3246                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3247  000848  0E01               	movlw	1
  3248  00084A  0101               	movlb	1	; () banked
  3249  00084C  6F18               	movwf	sprintf@c& (0+255),b
  3250  00084E                     l5134:
  3251                           
  3252                           ; BSR set to: 1
  3253  00084E  0E0A               	movlw	10
  3254  000850  0101               	movlb	1	; () banked
  3255  000852  1918               	xorwf	sprintf@c& (0+255),w,b
  3256  000854  B4D8               	btfsc	status,2,c
  3257  000856  D01E               	goto	l5146
  3258                           
  3259                           ; BSR set to: 1
  3260                           ;doprnt.c: 1137: if(val < dpowers[c])
  3261                           
  3262                           ; BSR set to: 1
  3263                           
  3264                           ; BSR set to: 1
  3265  000858  0101               	movlb	1	; () banked
  3266  00085A  5118               	movf	sprintf@c& (0+255),w,b
  3267  00085C  0D04               	mullw	4
  3268  00085E  0E69               	movlw	low _dpowers
  3269  000860  24F3               	addwf	prodl,w,c
  3270  000862  6EF6               	movwf	tblptrl,c
  3271  000864  0E03               	movlw	high _dpowers
  3272  000866  20F4               	addwfc	prodh,w,c
  3273  000868  6EF7               	movwf	tblptrh,c
  3274  00086A                     	if	0	;There are less than 3 active tblptr bytes
  3275  00086A                     	endif
  3276  00086A  0009               	tblrd		*+
  3277  00086C  50F5               	movf	tablat,w,c
  3278  00086E  0101               	movlb	1	; () banked
  3279  000870  5D08               	subwf	sprintf@val& (0+255),w,b
  3280  000872  0009               	tblrd		*+
  3281  000874  50F5               	movf	tablat,w,c
  3282  000876  0101               	movlb	1	; () banked
  3283  000878  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3284  00087A  0009               	tblrd		*+
  3285  00087C  50F5               	movf	tablat,w,c
  3286  00087E  0101               	movlb	1	; () banked
  3287  000880  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3288  000882  0009               	tblrd		*+
  3289  000884  50F5               	movf	tablat,w,c
  3290  000886  0101               	movlb	1	; () banked
  3291  000888  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3292  00088A  A0D8               	btfss	status,0,c
  3293  00088C  D003               	goto	l5146
  3294                           
  3295                           ; BSR set to: 1
  3296                           
  3297                           ; BSR set to: 1
  3298                           
  3299                           ; BSR set to: 1
  3300                           ;doprnt.c: 1138: break;
  3301  00088E  0101               	movlb	1	; () banked
  3302  000890  2B18               	incf	sprintf@c& (0+255),f,b
  3303  000892  D7DD               	goto	l5134
  3304  000894                     l5146:
  3305                           
  3306                           ; BSR set to: 1
  3307                           ;doprnt.c: 1175: {
  3308                           ;doprnt.c: 1188: if(flag & 0x03)
  3309  000894  0E03               	movlw	3
  3310  000896  0101               	movlb	1	; () banked
  3311  000898  1506               	andwf	sprintf@flag& (0+255),w,b
  3312  00089A  0100               	movlb	0	; () banked
  3313  00089C  6FC8               	movwf	??_sprintf& (0+255),b
  3314  00089E  0E00               	movlw	0
  3315  0008A0  0101               	movlb	1	; () banked
  3316  0008A2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3317  0008A4  0100               	movlb	0	; () banked
  3318  0008A6  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3319  0008A8  0100               	movlb	0	; () banked
  3320  0008AA  51C8               	movf	??_sprintf& (0+255),w,b
  3321  0008AC  0100               	movlb	0	; () banked
  3322  0008AE  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3323  0008B0  B4D8               	btfsc	status,2,c
  3324  0008B2  D055               	goto	l5160
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3328  0008B4  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3329  0008B8  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3330  0008BC  0E2D               	movlw	45
  3331  0008BE  D04D               	goto	L3
  3332  0008C0                     l5150:
  3333                           
  3334                           ; BSR set to: 0
  3335  0008C0  0100               	movlb	0	; () banked
  3336  0008C2  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3337  0008C4  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;doprnt.c: 1195: }
  3341                           ;doprnt.c: 1196: while(c--) {
  3342  0008C6  D04B               	goto	l5160
  3343  0008C8                     l5152:
  3344                           
  3345                           ;doprnt.c: 1200: {
  3346                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3347  0008C8  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3348  0008CC  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3349  0008D0  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3350  0008D4  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3351  0008D8  0101               	movlb	1	; () banked
  3352  0008DA  5118               	movf	sprintf@c& (0+255),w,b
  3353  0008DC  0D04               	mullw	4
  3354  0008DE  0E69               	movlw	low _dpowers
  3355  0008E0  24F3               	addwf	prodl,w,c
  3356  0008E2  6EF6               	movwf	tblptrl,c
  3357  0008E4  0E03               	movlw	high _dpowers
  3358  0008E6  20F4               	addwfc	prodh,w,c
  3359  0008E8  6EF7               	movwf	tblptrh,c
  3360  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  3361  0008EA                     	endif
  3362  0008EA  0009               	tblrd		*+
  3363  0008EC  CFF5 F074          	movff	tablat,___lldiv@divisor
  3364  0008F0  0009               	tblrd		*+
  3365  0008F2  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3366  0008F6  0009               	tblrd		*+
  3367  0008F8  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3368  0008FC  000A               	tblrd		*-
  3369  0008FE  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3370  000902  ECA7  F015         	call	___lldiv	;wreg free
  3371  000906  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3372  00090A  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3373  00090E  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3374  000912  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3375                           
  3376                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3377  000916  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3378  00091A  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3379  00091E  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3380  000922  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3381  000926  0E0A               	movlw	10
  3382  000928  0100               	movlb	0	; () banked
  3383  00092A  6F74               	movwf	___llmod@divisor& (0+255),b
  3384  00092C  0E00               	movlw	0
  3385  00092E  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3386  000930  0E00               	movlw	0
  3387  000932  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3388  000934  0E00               	movlw	0
  3389  000936  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3390  000938  EC9D  F016         	call	___llmod	;wreg free
  3391  00093C  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3392  000940  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3393  000944  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3394  000948  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3395                           
  3396                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3397  00094C  0101               	movlb	1	; () banked
  3398  00094E  510E               	movf	sprintf@tmpval& (0+255),w,b
  3399  000950  0F30               	addlw	48
  3400  000952  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3401  000956  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3402  00095A                     L3:
  3403  00095A  6EDF               	movwf	indf2,c
  3404  00095C  D7B1               	goto	l5150
  3405  00095E                     l5160:
  3406                           
  3407                           ; BSR set to: 0
  3408  00095E  0101               	movlb	1	; () banked
  3409  000960  0718               	decf	sprintf@c& (0+255),f,b
  3410  000962  0101               	movlb	1	; () banked
  3411  000964  2918               	incf	sprintf@c& (0+255),w,b
  3412  000966  B4D8               	btfsc	status,2,c
  3413  000968  D00E               	goto	l5168
  3414  00096A  D7AE               	goto	l5152
  3415  00096C                     l5162:
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3419  00096C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3420  000970  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3421  000974  0E30               	movlw	48
  3422  000976  6EDF               	movwf	indf2,c
  3423                           
  3424                           ; BSR set to: 1
  3425  000978  0100               	movlb	0	; () banked
  3426  00097A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3427  00097C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;doprnt.c: 1209: exp--;
  3431  00097E  0101               	movlb	1	; () banked
  3432  000980  070C               	decf	sprintf@exp& (0+255),f,b
  3433  000982  A0D8               	btfss	status,0,c
  3434  000984  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3435  000986                     l5168:
  3436                           
  3437                           ; BSR set to: 1
  3438  000986  0101               	movlb	1	; () banked
  3439  000988  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3440  00098A  D007               	goto	l5170
  3441  00098C  0101               	movlb	1	; () banked
  3442  00098E  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3443  000990  E1ED               	bnz	l5162
  3444  000992  0101               	movlb	1	; () banked
  3445  000994  050C               	decf	sprintf@exp& (0+255),w,b
  3446  000996  B0D8               	btfsc	status,0,c
  3447  000998  D7E9               	goto	l5162
  3448  00099A                     l5170:
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;doprnt.c: 1210: }
  3452                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3453  00099A  0101               	movlb	1	; () banked
  3454  00099C  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3455  00099E  D00C               	goto	l352
  3456  0009A0  0101               	movlb	1	; () banked
  3457  0009A2  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3458  0009A4  E105               	bnz	u5940
  3459  0009A6  0E09               	movlw	9
  3460  0009A8  0101               	movlb	1	; () banked
  3461  0009AA  5D12               	subwf	sprintf@prec& (0+255),w,b
  3462  0009AC  A0D8               	btfss	status,0,c
  3463  0009AE  D004               	goto	l352
  3464  0009B0                     u5940:
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3468  0009B0  0E08               	movlw	8
  3469  0009B2  0101               	movlb	1	; () banked
  3470  0009B4  6F18               	movwf	sprintf@c& (0+255),b
  3471  0009B6  D002               	goto	l5174
  3472  0009B8                     l352:
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;doprnt.c: 1213: else
  3476                           ;doprnt.c: 1214: c = prec;
  3477  0009B8  C112  F118         	movff	sprintf@prec,sprintf@c
  3478  0009BC                     l5174:
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;doprnt.c: 1215: prec -= c;
  3482  0009BC  0101               	movlb	1	; () banked
  3483  0009BE  5118               	movf	sprintf@c& (0+255),w,b
  3484  0009C0  0101               	movlb	1	; () banked
  3485  0009C2  5F12               	subwf	sprintf@prec& (0+255),f,b
  3486  0009C4  0E00               	movlw	0
  3487  0009C6  0101               	movlb	1	; () banked
  3488  0009C8  BF18               	btfsc	sprintf@c& (0+255),7,b
  3489  0009CA  0EFF               	movlw	255
  3490  0009CC  0101               	movlb	1	; () banked
  3491  0009CE  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;doprnt.c: 1219: if(c)
  3495  0009D0  0101               	movlb	1	; () banked
  3496  0009D2  5118               	movf	sprintf@c& (0+255),w,b
  3497  0009D4  0101               	movlb	1	; () banked
  3498  0009D6  B4D8               	btfsc	status,2,c
  3499  0009D8  D009               	goto	l5182
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3503  0009DA  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3504  0009DE  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3505  0009E2  0E2E               	movlw	46
  3506  0009E4  6EDF               	movwf	indf2,c
  3507                           
  3508                           ; BSR set to: 1
  3509  0009E6  0100               	movlb	0	; () banked
  3510  0009E8  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3511  0009EA  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3512  0009EC                     l5182:
  3513                           
  3514                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3515  0009EC  0101               	movlb	1	; () banked
  3516  0009EE  5118               	movf	sprintf@c& (0+255),w,b
  3517  0009F0  ECCB  F00A         	call	_scale
  3518  0009F4  C097  F100         	movff	?_scale,_sprintf$2311
  3519  0009F8  C098  F101         	movff	?_scale+1,_sprintf$2311+1
  3520  0009FC  C099  F102         	movff	?_scale+2,_sprintf$2311+2
  3521  000A00  C09A  F103         	movff	?_scale+3,_sprintf$2311+3
  3522                           
  3523                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3524  000A04  C114  F082         	movff	sprintf@fval,___flmul@a
  3525  000A08  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3526  000A0C  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3527  000A10  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3528  000A14  C100  F07E         	movff	_sprintf$2311,___flmul@b
  3529  000A18  C101  F07F         	movff	_sprintf$2311+1,___flmul@b+1
  3530  000A1C  C102  F080         	movff	_sprintf$2311+2,___flmul@b+2
  3531  000A20  C103  F081         	movff	_sprintf$2311+3,___flmul@b+3
  3532  000A24  EC78  F008         	call	___flmul	;wreg free
  3533  000A28  C07E  F0A0         	movff	?___flmul,___fltol@f1
  3534  000A2C  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  3535  000A30  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  3536  000A34  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  3537  000A38  ECDD  F013         	call	___fltol	;wreg free
  3538  000A3C  C0A0  F108         	movff	?___fltol,sprintf@val
  3539  000A40  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3540  000A44  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3541  000A48  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3542                           
  3543                           ;doprnt.c: 1228: while(c--) {
  3544  000A4C  D074               	goto	l5196
  3545  000A4E                     l5186:
  3546                           
  3547                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3548  000A4E  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3549  000A52  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3550  000A56  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3551  000A5A  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3552  000A5E  0101               	movlb	1	; () banked
  3553  000A60  5118               	movf	sprintf@c& (0+255),w,b
  3554  000A62  0D04               	mullw	4
  3555  000A64  0E69               	movlw	low _dpowers
  3556  000A66  24F3               	addwf	prodl,w,c
  3557  000A68  6EF6               	movwf	tblptrl,c
  3558  000A6A  0E03               	movlw	high _dpowers
  3559  000A6C  20F4               	addwfc	prodh,w,c
  3560  000A6E  6EF7               	movwf	tblptrh,c
  3561  000A70                     	if	0	;There are less than 3 active tblptr bytes
  3562  000A70                     	endif
  3563  000A70  0009               	tblrd		*+
  3564  000A72  CFF5 F074          	movff	tablat,___lldiv@divisor
  3565  000A76  0009               	tblrd		*+
  3566  000A78  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3567  000A7C  0009               	tblrd		*+
  3568  000A7E  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3569  000A82  000A               	tblrd		*-
  3570  000A84  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3571  000A88  ECA7  F015         	call	___lldiv	;wreg free
  3572  000A8C  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3573  000A90  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3574  000A94  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3575  000A98  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3576                           
  3577                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3578  000A9C  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3579  000AA0  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3580  000AA4  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3581  000AA8  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3582  000AAC  0E0A               	movlw	10
  3583  000AAE  0100               	movlb	0	; () banked
  3584  000AB0  6F74               	movwf	___llmod@divisor& (0+255),b
  3585  000AB2  0E00               	movlw	0
  3586  000AB4  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3587  000AB6  0E00               	movlw	0
  3588  000AB8  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3589  000ABA  0E00               	movlw	0
  3590  000ABC  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3591  000ABE  EC9D  F016         	call	___llmod	;wreg free
  3592  000AC2  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3593  000AC6  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3594  000ACA  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3595  000ACE  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3596                           
  3597                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3598  000AD2  0101               	movlb	1	; () banked
  3599  000AD4  510E               	movf	sprintf@tmpval& (0+255),w,b
  3600  000AD6  0F30               	addlw	48
  3601  000AD8  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3602  000ADC  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3603  000AE0  6EDF               	movwf	indf2,c
  3604                           
  3605                           ; BSR set to: 1
  3606  000AE2  0100               	movlb	0	; () banked
  3607  000AE4  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3608  000AE6  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;doprnt.c: 1232: val %= dpowers[c];
  3612  000AE8  C108  F070         	movff	sprintf@val,___llmod@dividend
  3613  000AEC  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  3614  000AF0  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  3615  000AF4  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  3616  000AF8  0101               	movlb	1	; () banked
  3617  000AFA  5118               	movf	sprintf@c& (0+255),w,b
  3618  000AFC  0D04               	mullw	4
  3619  000AFE  0E69               	movlw	low _dpowers
  3620  000B00  24F3               	addwf	prodl,w,c
  3621  000B02  6EF6               	movwf	tblptrl,c
  3622  000B04  0E03               	movlw	high _dpowers
  3623  000B06  20F4               	addwfc	prodh,w,c
  3624  000B08  6EF7               	movwf	tblptrh,c
  3625  000B0A                     	if	0	;There are less than 3 active tblptr bytes
  3626  000B0A                     	endif
  3627  000B0A  0009               	tblrd		*+
  3628  000B0C  CFF5 F074          	movff	tablat,___llmod@divisor
  3629  000B10  0009               	tblrd		*+
  3630  000B12  CFF5 F075          	movff	tablat,___llmod@divisor+1
  3631  000B16  0009               	tblrd		*+
  3632  000B18  CFF5 F076          	movff	tablat,___llmod@divisor+2
  3633  000B1C  000A               	tblrd		*-
  3634  000B1E  CFF5 F077          	movff	tablat,___llmod@divisor+3
  3635  000B22  EC9D  F016         	call	___llmod	;wreg free
  3636  000B26  C070  F108         	movff	?___llmod,sprintf@val
  3637  000B2A  C071  F109         	movff	?___llmod+1,sprintf@val+1
  3638  000B2E  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  3639  000B32  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  3640  000B36                     l5196:
  3641  000B36  0101               	movlb	1	; () banked
  3642  000B38  0718               	decf	sprintf@c& (0+255),f,b
  3643  000B3A  0101               	movlb	1	; () banked
  3644  000B3C  2918               	incf	sprintf@c& (0+255),w,b
  3645  000B3E  B4D8               	btfsc	status,2,c
  3646  000B40  D00E               	goto	l5204
  3647  000B42  D785               	goto	l5186
  3648  000B44                     l5198:
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3652  000B44  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3653  000B48  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3654  000B4C  0E30               	movlw	48
  3655  000B4E  6EDF               	movwf	indf2,c
  3656                           
  3657                           ; BSR set to: 1
  3658  000B50  0100               	movlb	0	; () banked
  3659  000B52  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3660  000B54  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;doprnt.c: 1237: prec--;
  3664  000B56  0101               	movlb	1	; () banked
  3665  000B58  0712               	decf	sprintf@prec& (0+255),f,b
  3666  000B5A  A0D8               	btfss	status,0,c
  3667  000B5C  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3668  000B5E                     l5204:
  3669                           
  3670                           ; BSR set to: 1
  3671  000B5E  0101               	movlb	1	; () banked
  3672  000B60  5112               	movf	sprintf@prec& (0+255),w,b
  3673  000B62  0101               	movlb	1	; () banked
  3674  000B64  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3675  000B66  B4D8               	btfsc	status,2,c
  3676  000B68  D059               	goto	l5226
  3677  000B6A  D7EC               	goto	l5198
  3678  000B6C                     l5206:
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;doprnt.c: 1246: }
  3682                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3683  000B6C  0101               	movlb	1	; () banked
  3684  000B6E  5112               	movf	sprintf@prec& (0+255),w,b
  3685  000B70  0101               	movlb	1	; () banked
  3686  000B72  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3687  000B74  A4D8               	btfss	status,2,c
  3688  000B76  D00D               	goto	l5212
  3689                           
  3690                           ; BSR set to: 1
  3691  000B78  0101               	movlb	1	; () banked
  3692  000B7A  5108               	movf	sprintf@val& (0+255),w,b
  3693  000B7C  0101               	movlb	1	; () banked
  3694  000B7E  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  3695  000B80  0101               	movlb	1	; () banked
  3696  000B82  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3697  000B84  0101               	movlb	1	; () banked
  3698  000B86  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3699  000B88  A4D8               	btfss	status,2,c
  3700  000B8A  D003               	goto	l5212
  3701                           
  3702                           ; BSR set to: 1
  3703                           ;doprnt.c: 1291: prec++;
  3704  000B8C  0101               	movlb	1	; () banked
  3705  000B8E  4B12               	infsnz	sprintf@prec& (0+255),f,b
  3706  000B90  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  3707  000B92                     l5212:
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;doprnt.c: 1339: if(c < prec)
  3711  000B92  0E80               	movlw	128
  3712  000B94  0101               	movlb	1	; () banked
  3713  000B96  BF18               	btfsc	sprintf@c& (0+255),7,b
  3714  000B98  0E7F               	movlw	127
  3715  000B9A  0100               	movlb	0	; () banked
  3716  000B9C  6FC8               	movwf	??_sprintf& (0+255),b
  3717  000B9E  0101               	movlb	1	; () banked
  3718  000BA0  5112               	movf	sprintf@prec& (0+255),w,b
  3719  000BA2  0101               	movlb	1	; () banked
  3720  000BA4  5D18               	subwf	sprintf@c& (0+255),w,b
  3721  000BA6  0101               	movlb	1	; () banked
  3722  000BA8  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3723  000BAA  0A80               	xorlw	128
  3724  000BAC  0100               	movlb	0	; () banked
  3725  000BAE  59C8               	subwfb	??_sprintf& (0+255),w,b
  3726  000BB0  B0D8               	btfsc	status,0,c
  3727  000BB2  D003               	goto	l5216
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;doprnt.c: 1340: c = prec;
  3731  000BB4  C112  F118         	movff	sprintf@prec,sprintf@c
  3732  000BB8  D018               	goto	l5220
  3733  000BBA                     l5216:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;doprnt.c: 1341: else if(prec < c)
  3737  000BBA  0101               	movlb	1	; () banked
  3738  000BBC  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3739  000BBE  0A80               	xorlw	128
  3740  000BC0  0100               	movlb	0	; () banked
  3741  000BC2  6FC8               	movwf	??_sprintf& (0+255),b
  3742  000BC4  0101               	movlb	1	; () banked
  3743  000BC6  5118               	movf	sprintf@c& (0+255),w,b
  3744  000BC8  0101               	movlb	1	; () banked
  3745  000BCA  5D12               	subwf	sprintf@prec& (0+255),w,b
  3746  000BCC  0E80               	movlw	128
  3747  000BCE  0101               	movlb	1	; () banked
  3748  000BD0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3749  000BD2  0E7F               	movlw	127
  3750  000BD4  0100               	movlb	0	; () banked
  3751  000BD6  59C8               	subwfb	??_sprintf& (0+255),w,b
  3752  000BD8  B0D8               	btfsc	status,0,c
  3753  000BDA  D007               	goto	l5220
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;doprnt.c: 1342: prec = c;
  3757  000BDC  0101               	movlb	1	; () banked
  3758  000BDE  5118               	movf	sprintf@c& (0+255),w,b
  3759  000BE0  0101               	movlb	1	; () banked
  3760  000BE2  6F12               	movwf	sprintf@prec& (0+255),b
  3761  000BE4  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  3762  000BE6  BF12               	btfsc	sprintf@prec& (0+255),7,b
  3763  000BE8  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3764  000BEA                     l5220:
  3765                           
  3766                           ;doprnt.c: 1422: {
  3767                           ;doprnt.c: 1438: if(flag & 0x03)
  3768  000BEA  0E03               	movlw	3
  3769  000BEC  0101               	movlb	1	; () banked
  3770  000BEE  1506               	andwf	sprintf@flag& (0+255),w,b
  3771  000BF0  0100               	movlb	0	; () banked
  3772  000BF2  6FC8               	movwf	??_sprintf& (0+255),b
  3773  000BF4  0E00               	movlw	0
  3774  000BF6  0101               	movlb	1	; () banked
  3775  000BF8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3776  000BFA  0100               	movlb	0	; () banked
  3777  000BFC  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3778  000BFE  0100               	movlb	0	; () banked
  3779  000C00  51C8               	movf	??_sprintf& (0+255),w,b
  3780  000C02  0100               	movlb	0	; () banked
  3781  000C04  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3782  000C06  B4D8               	btfsc	status,2,c
  3783  000C08  D009               	goto	l5226
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3787  000C0A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3788  000C0E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3789  000C12  0E2D               	movlw	45
  3790  000C14  6EDF               	movwf	indf2,c
  3791  000C16                     l5224:
  3792                           
  3793                           ; BSR set to: 0
  3794  000C16  0100               	movlb	0	; () banked
  3795  000C18  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3796  000C1A  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3797  000C1C                     l5226:
  3798  000C1C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3799  000C20  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3800  000C24  0100               	movlb	0	; () banked
  3801  000C26  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3802  000C28  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3803  000C2A                     	if	0	;tblptru may be non-zero
  3804  000C2A                     	endif
  3805  000C2A                     	if	0	;tblptru may be non-zero
  3806  000C2A                     	endif
  3807  000C2A  0008               	tblrd		*
  3808  000C2C  CFF5 F118          	movff	tablat,sprintf@c
  3809  000C30  0101               	movlb	1	; () banked
  3810  000C32  5118               	movf	sprintf@c& (0+255),w,b
  3811  000C34  A4D8               	btfss	status,2,c
  3812  000C36  EFFE  F001         	goto	l5028
  3813  000C3A                     l5228:
  3814                           
  3815                           ; BSR set to: 1
  3816                           ;doprnt.c: 1538: *sp = 0;
  3817  000C3A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3818  000C3E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3819  000C42  0E00               	movlw	0
  3820  000C44  6EDF               	movwf	indf2,c
  3821  000C46  0012               	return	
  3822  000C48                     __end_of_sprintf:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           prodh	equ	0xFF4
  3829                           prodl	equ	0xFF3
  3830                           intcon	equ	0xFF2
  3831                           postinc0	equ	0xFEE
  3832                           wreg	equ	0xFE8
  3833                           indf2	equ	0xFDF
  3834                           postinc2	equ	0xFDE
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function _scale *****************
  3840 ;; Defined at:
  3841 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  scl             1    wreg     char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  scl             1   63[BANK0 ] char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  4   55[BANK0 ] char 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3855 ;;      Params:         0       4       0       0
  3856 ;;      Locals:         0       5       0       0
  3857 ;;      Temps:          0       0       0       0
  3858 ;;      Totals:         0       9       0       0
  3859 ;;Total ram usage:        9 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    5
  3862 ;; This function calls:
  3863 ;;		___awdiv
  3864 ;;		___awmod
  3865 ;;		___flmul
  3866 ;; This function is called by:
  3867 ;;		_sprintf
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text12
  3872  001596                     __ptext12:
  3873                           	opt stack 0
  3874  001596                     _scale:
  3875                           	opt stack 23
  3876                           
  3877                           ; BSR set to: 1
  3878                           ;incstack = 0
  3879                           ;scale@scl stored from wreg
  3880  001596  0100               	movlb	0	; () banked
  3881  001598  6F9F               	movwf	scale@scl& (0+255),b
  3882                           
  3883                           ;doprnt.c: 428: if(scl < 0) {
  3884  00159A  0100               	movlb	0	; () banked
  3885  00159C  AF9F               	btfss	scale@scl& (0+255),7,b
  3886  00159E  D125               	goto	l4650
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;doprnt.c: 429: scl = -scl;
  3890  0015A0  0100               	movlb	0	; () banked
  3891  0015A2  6D9F               	negf	scale@scl& (0+255),b
  3892                           
  3893                           ;doprnt.c: 430: if(scl>=110)
  3894  0015A4  0100               	movlb	0	; () banked
  3895  0015A6  519F               	movf	scale@scl& (0+255),w,b
  3896  0015A8  0A80               	xorlw	128
  3897  0015AA  0F12               	addlw	-238
  3898  0015AC  A0D8               	btfss	status,0,c
  3899  0015AE  D0AA               	goto	l4640
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3903  0015B0  0E00               	movlw	0
  3904  0015B2  0100               	movlb	0	; () banked
  3905  0015B4  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3906  0015B6  0E0A               	movlw	10
  3907  0015B8  6F72               	movwf	___awdiv@divisor& (0+255),b
  3908  0015BA  0E00               	movlw	0
  3909  0015BC  6E3F               	movwf	___awmod@divisor+1,c
  3910  0015BE  0E64               	movlw	100
  3911  0015C0  6E3E               	movwf	___awmod@divisor,c
  3912  0015C2  0100               	movlb	0	; () banked
  3913  0015C4  519F               	movf	scale@scl& (0+255),w,b
  3914  0015C6  6E3C               	movwf	___awmod@dividend,c
  3915  0015C8  6A3D               	clrf	___awmod@dividend+1,c
  3916  0015CA  BE3C               	btfsc	___awmod@dividend,7,c
  3917  0015CC  063D               	decf	___awmod@dividend+1,f,c
  3918  0015CE  ECE7  F016         	call	___awmod	;wreg free
  3919  0015D2  C03C  F070         	movff	?___awmod,___awdiv@dividend
  3920  0015D6  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  3921  0015DA  EC48  F015         	call	___awdiv	;wreg free
  3922  0015DE  0100               	movlb	0	; () banked
  3923  0015E0  90D8               	bcf	status,0,c
  3924  0015E2  3770               	rlcf	?___awdiv& (0+255),f,b
  3925  0015E4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  3926  0015E6  0100               	movlb	0	; () banked
  3927  0015E8  90D8               	bcf	status,0,c
  3928  0015EA  3770               	rlcf	?___awdiv& (0+255),f,b
  3929  0015EC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  3930  0015EE  0E24               	movlw	36
  3931  0015F0  0100               	movlb	0	; () banked
  3932  0015F2  2770               	addwf	?___awdiv& (0+255),f,b
  3933  0015F4  0E00               	movlw	0
  3934  0015F6  0100               	movlb	0	; () banked
  3935  0015F8  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  3936  0015FA  0E01               	movlw	low __npowers_
  3937  0015FC  0100               	movlb	0	; () banked
  3938  0015FE  2570               	addwf	?___awdiv& (0+255),w,b
  3939  001600  6EF6               	movwf	tblptrl,c
  3940  001602  0E03               	movlw	high __npowers_
  3941  001604  0100               	movlb	0	; () banked
  3942  001606  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  3943  001608  6EF7               	movwf	tblptrh,c
  3944  00160A                     	if	0	;There are less than 3 active tblptr bytes
  3945  00160A                     	endif
  3946  00160A  0009               	tblrd		*+
  3947  00160C  CFF5 F082          	movff	tablat,___flmul@a
  3948  001610  0009               	tblrd		*+
  3949  001612  CFF5 F083          	movff	tablat,___flmul@a+1
  3950  001616  0009               	tblrd		*+
  3951  001618  CFF5 F084          	movff	tablat,___flmul@a+2
  3952  00161C  000A               	tblrd		*-
  3953  00161E  CFF5 F085          	movff	tablat,___flmul@a+3
  3954  001622  0E00               	movlw	0
  3955  001624  0100               	movlb	0	; () banked
  3956  001626  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3957  001628  0E64               	movlw	100
  3958  00162A  6F72               	movwf	___awdiv@divisor& (0+255),b
  3959  00162C  0100               	movlb	0	; () banked
  3960  00162E  519F               	movf	scale@scl& (0+255),w,b
  3961  001630  0100               	movlb	0	; () banked
  3962  001632  6F70               	movwf	___awdiv@dividend& (0+255),b
  3963  001634  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  3964  001636  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  3965  001638  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3966  00163A  EC48  F015         	call	___awdiv	;wreg free
  3967  00163E  0100               	movlb	0	; () banked
  3968  001640  90D8               	bcf	status,0,c
  3969  001642  3770               	rlcf	?___awdiv& (0+255),f,b
  3970  001644  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  3971  001646  0100               	movlb	0	; () banked
  3972  001648  90D8               	bcf	status,0,c
  3973  00164A  3770               	rlcf	?___awdiv& (0+255),f,b
  3974  00164C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  3975  00164E  0E48               	movlw	72
  3976  001650  0100               	movlb	0	; () banked
  3977  001652  2770               	addwf	?___awdiv& (0+255),f,b
  3978  001654  0E00               	movlw	0
  3979  001656  0100               	movlb	0	; () banked
  3980  001658  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  3981  00165A  0E01               	movlw	low __npowers_
  3982  00165C  0100               	movlb	0	; () banked
  3983  00165E  2570               	addwf	?___awdiv& (0+255),w,b
  3984  001660  6EF6               	movwf	tblptrl,c
  3985  001662  0E03               	movlw	high __npowers_
  3986  001664  0100               	movlb	0	; () banked
  3987  001666  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  3988  001668  6EF7               	movwf	tblptrh,c
  3989  00166A                     	if	0	;There are less than 3 active tblptr bytes
  3990  00166A                     	endif
  3991  00166A  0009               	tblrd		*+
  3992  00166C  CFF5 F07E          	movff	tablat,___flmul@b
  3993  001670  0009               	tblrd		*+
  3994  001672  CFF5 F07F          	movff	tablat,___flmul@b+1
  3995  001676  0009               	tblrd		*+
  3996  001678  CFF5 F080          	movff	tablat,___flmul@b+2
  3997  00167C  000A               	tblrd		*-
  3998  00167E  CFF5 F081          	movff	tablat,___flmul@b+3
  3999  001682  EC78  F008         	call	___flmul	;wreg free
  4000  001686  C07E  F09B         	movff	?___flmul,_scale$2310
  4001  00168A  C07F  F09C         	movff	?___flmul+1,_scale$2310+1
  4002  00168E  C080  F09D         	movff	?___flmul+2,_scale$2310+2
  4003  001692  C081  F09E         	movff	?___flmul+3,_scale$2310+3
  4004                           
  4005                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4006  001696  C09B  F07E         	movff	_scale$2310,___flmul@b
  4007  00169A  C09C  F07F         	movff	_scale$2310+1,___flmul@b+1
  4008  00169E  C09D  F080         	movff	_scale$2310+2,___flmul@b+2
  4009  0016A2  C09E  F081         	movff	_scale$2310+3,___flmul@b+3
  4010  0016A6  0E00               	movlw	0
  4011  0016A8  6E3F               	movwf	___awmod@divisor+1,c
  4012  0016AA  0E0A               	movlw	10
  4013  0016AC  6E3E               	movwf	___awmod@divisor,c
  4014  0016AE  0100               	movlb	0	; () banked
  4015  0016B0  519F               	movf	scale@scl& (0+255),w,b
  4016  0016B2  6E3C               	movwf	___awmod@dividend,c
  4017  0016B4  6A3D               	clrf	___awmod@dividend+1,c
  4018  0016B6  BE3C               	btfsc	___awmod@dividend,7,c
  4019  0016B8  063D               	decf	___awmod@dividend+1,f,c
  4020  0016BA  ECE7  F016         	call	___awmod	;wreg free
  4021  0016BE  90D8               	bcf	status,0,c
  4022  0016C0  363C               	rlcf	?___awmod,f,c
  4023  0016C2  363D               	rlcf	?___awmod+1,f,c
  4024  0016C4  90D8               	bcf	status,0,c
  4025  0016C6  363C               	rlcf	?___awmod,f,c
  4026  0016C8  363D               	rlcf	?___awmod+1,f,c
  4027  0016CA  0E01               	movlw	low __npowers_
  4028  0016CC  243C               	addwf	?___awmod,w,c
  4029  0016CE  6EF6               	movwf	tblptrl,c
  4030  0016D0  0E03               	movlw	high __npowers_
  4031  0016D2  203D               	addwfc	?___awmod+1,w,c
  4032  0016D4  6EF7               	movwf	tblptrh,c
  4033  0016D6                     	if	0	;There are less than 3 active tblptr bytes
  4034  0016D6                     	endif
  4035  0016D6  0009               	tblrd		*+
  4036  0016D8  CFF5 F082          	movff	tablat,___flmul@a
  4037  0016DC  0009               	tblrd		*+
  4038  0016DE  CFF5 F083          	movff	tablat,___flmul@a+1
  4039  0016E2  0009               	tblrd		*+
  4040  0016E4  CFF5 F084          	movff	tablat,___flmul@a+2
  4041  0016E8  000A               	tblrd		*-
  4042  0016EA  CFF5 F085          	movff	tablat,___flmul@a+3
  4043  0016EE  EC78  F008         	call	___flmul	;wreg free
  4044  0016F2  C07E  F097         	movff	?___flmul,?_scale
  4045  0016F6  C07F  F098         	movff	?___flmul+1,?_scale+1
  4046  0016FA  C080  F099         	movff	?___flmul+2,?_scale+2
  4047  0016FE  C081  F09A         	movff	?___flmul+3,?_scale+3
  4048  001702  0012               	return	
  4049  001704                     l4640:
  4050                           
  4051                           ;doprnt.c: 432: else if(scl > 10)
  4052  001704  0100               	movlb	0	; () banked
  4053  001706  519F               	movf	scale@scl& (0+255),w,b
  4054  001708  0A80               	xorlw	128
  4055  00170A  0F75               	addlw	-139
  4056  00170C  A0D8               	btfss	status,0,c
  4057  00170E  D057               	goto	l4646
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4061  001710  0E00               	movlw	0
  4062  001712  0100               	movlb	0	; () banked
  4063  001714  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4064  001716  0E0A               	movlw	10
  4065  001718  6F72               	movwf	___awdiv@divisor& (0+255),b
  4066  00171A  0100               	movlb	0	; () banked
  4067  00171C  519F               	movf	scale@scl& (0+255),w,b
  4068  00171E  0100               	movlb	0	; () banked
  4069  001720  6F70               	movwf	___awdiv@dividend& (0+255),b
  4070  001722  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4071  001724  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4072  001726  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4073  001728  EC48  F015         	call	___awdiv	;wreg free
  4074  00172C  0100               	movlb	0	; () banked
  4075  00172E  90D8               	bcf	status,0,c
  4076  001730  3770               	rlcf	?___awdiv& (0+255),f,b
  4077  001732  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4078  001734  0100               	movlb	0	; () banked
  4079  001736  90D8               	bcf	status,0,c
  4080  001738  3770               	rlcf	?___awdiv& (0+255),f,b
  4081  00173A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4082  00173C  0E24               	movlw	36
  4083  00173E  0100               	movlb	0	; () banked
  4084  001740  2770               	addwf	?___awdiv& (0+255),f,b
  4085  001742  0E00               	movlw	0
  4086  001744  0100               	movlb	0	; () banked
  4087  001746  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4088  001748  0E01               	movlw	low __npowers_
  4089  00174A  0100               	movlb	0	; () banked
  4090  00174C  2570               	addwf	?___awdiv& (0+255),w,b
  4091  00174E  6EF6               	movwf	tblptrl,c
  4092  001750  0E03               	movlw	high __npowers_
  4093  001752  0100               	movlb	0	; () banked
  4094  001754  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4095  001756  6EF7               	movwf	tblptrh,c
  4096  001758                     	if	0	;There are less than 3 active tblptr bytes
  4097  001758                     	endif
  4098  001758  0009               	tblrd		*+
  4099  00175A  CFF5 F07E          	movff	tablat,___flmul@b
  4100  00175E  0009               	tblrd		*+
  4101  001760  CFF5 F07F          	movff	tablat,___flmul@b+1
  4102  001764  0009               	tblrd		*+
  4103  001766  CFF5 F080          	movff	tablat,___flmul@b+2
  4104  00176A  000A               	tblrd		*-
  4105  00176C  CFF5 F081          	movff	tablat,___flmul@b+3
  4106  001770  0E00               	movlw	0
  4107  001772  6E3F               	movwf	___awmod@divisor+1,c
  4108  001774  0E0A               	movlw	10
  4109  001776  6E3E               	movwf	___awmod@divisor,c
  4110  001778  0100               	movlb	0	; () banked
  4111  00177A  519F               	movf	scale@scl& (0+255),w,b
  4112  00177C  6E3C               	movwf	___awmod@dividend,c
  4113  00177E  6A3D               	clrf	___awmod@dividend+1,c
  4114  001780  BE3C               	btfsc	___awmod@dividend,7,c
  4115  001782  063D               	decf	___awmod@dividend+1,f,c
  4116  001784  ECE7  F016         	call	___awmod	;wreg free
  4117  001788  90D8               	bcf	status,0,c
  4118  00178A  363C               	rlcf	?___awmod,f,c
  4119  00178C  363D               	rlcf	?___awmod+1,f,c
  4120  00178E  90D8               	bcf	status,0,c
  4121  001790  363C               	rlcf	?___awmod,f,c
  4122  001792  363D               	rlcf	?___awmod+1,f,c
  4123  001794  0E01               	movlw	low __npowers_
  4124  001796  243C               	addwf	?___awmod,w,c
  4125  001798  6EF6               	movwf	tblptrl,c
  4126  00179A  0E03               	movlw	high __npowers_
  4127  00179C  203D               	addwfc	?___awmod+1,w,c
  4128  00179E  6EF7               	movwf	tblptrh,c
  4129  0017A0                     	if	0	;There are less than 3 active tblptr bytes
  4130  0017A0                     	endif
  4131  0017A0  0009               	tblrd		*+
  4132  0017A2  CFF5 F082          	movff	tablat,___flmul@a
  4133  0017A6  0009               	tblrd		*+
  4134  0017A8  CFF5 F083          	movff	tablat,___flmul@a+1
  4135  0017AC  0009               	tblrd		*+
  4136  0017AE  CFF5 F084          	movff	tablat,___flmul@a+2
  4137  0017B2  000A               	tblrd		*-
  4138  0017B4  CFF5 F085          	movff	tablat,___flmul@a+3
  4139  0017B8  EC78  F008         	call	___flmul	;wreg free
  4140  0017BC  D79A               	goto	L4
  4141  0017BE                     l4646:
  4142                           
  4143                           ;doprnt.c: 434: return _npowers_[scl];
  4144  0017BE  0100               	movlb	0	; () banked
  4145  0017C0  519F               	movf	scale@scl& (0+255),w,b
  4146  0017C2  0D04               	mullw	4
  4147  0017C4  0E01               	movlw	low __npowers_
  4148  0017C6  24F3               	addwf	prodl,w,c
  4149  0017C8  6EF6               	movwf	tblptrl,c
  4150  0017CA  0E03               	movlw	high __npowers_
  4151  0017CC  20F4               	addwfc	prodh,w,c
  4152  0017CE  6EF7               	movwf	tblptrh,c
  4153  0017D0                     	if	0	;There are less than 3 active tblptr bytes
  4154  0017D0                     	endif
  4155  0017D0  0009               	tblrd		*+
  4156  0017D2  CFF5 F097          	movff	tablat,?_scale
  4157  0017D6  0009               	tblrd		*+
  4158  0017D8  CFF5 F098          	movff	tablat,?_scale+1
  4159  0017DC  0009               	tblrd		*+
  4160  0017DE  CFF5 F099          	movff	tablat,?_scale+2
  4161  0017E2  000A               	tblrd		*-
  4162  0017E4  CFF5 F09A          	movff	tablat,?_scale+3
  4163                           
  4164                           ; BSR set to: 0
  4165  0017E8  0012               	return	
  4166  0017EA                     l4650:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;doprnt.c: 435: }
  4170                           ;doprnt.c: 436: if(scl>=110)
  4171  0017EA  0100               	movlb	0	; () banked
  4172  0017EC  519F               	movf	scale@scl& (0+255),w,b
  4173  0017EE  0A80               	xorlw	128
  4174  0017F0  0F12               	addlw	-238
  4175  0017F2  A0D8               	btfss	status,0,c
  4176  0017F4  D0AA               	goto	l4658
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4180  0017F6  0E00               	movlw	0
  4181  0017F8  0100               	movlb	0	; () banked
  4182  0017FA  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4183  0017FC  0E0A               	movlw	10
  4184  0017FE  6F72               	movwf	___awdiv@divisor& (0+255),b
  4185  001800  0E00               	movlw	0
  4186  001802  6E3F               	movwf	___awmod@divisor+1,c
  4187  001804  0E64               	movlw	100
  4188  001806  6E3E               	movwf	___awmod@divisor,c
  4189  001808  0100               	movlb	0	; () banked
  4190  00180A  519F               	movf	scale@scl& (0+255),w,b
  4191  00180C  6E3C               	movwf	___awmod@dividend,c
  4192  00180E  6A3D               	clrf	___awmod@dividend+1,c
  4193  001810  BE3C               	btfsc	___awmod@dividend,7,c
  4194  001812  063D               	decf	___awmod@dividend+1,f,c
  4195  001814  ECE7  F016         	call	___awmod	;wreg free
  4196  001818  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4197  00181C  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4198  001820  EC48  F015         	call	___awdiv	;wreg free
  4199  001824  0100               	movlb	0	; () banked
  4200  001826  90D8               	bcf	status,0,c
  4201  001828  3770               	rlcf	?___awdiv& (0+255),f,b
  4202  00182A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4203  00182C  0100               	movlb	0	; () banked
  4204  00182E  90D8               	bcf	status,0,c
  4205  001830  3770               	rlcf	?___awdiv& (0+255),f,b
  4206  001832  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4207  001834  0E24               	movlw	36
  4208  001836  0100               	movlb	0	; () banked
  4209  001838  2770               	addwf	?___awdiv& (0+255),f,b
  4210  00183A  0E00               	movlw	0
  4211  00183C  0100               	movlb	0	; () banked
  4212  00183E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4213  001840  0E35               	movlw	low __powers_
  4214  001842  0100               	movlb	0	; () banked
  4215  001844  2570               	addwf	?___awdiv& (0+255),w,b
  4216  001846  6EF6               	movwf	tblptrl,c
  4217  001848  0E03               	movlw	high __powers_
  4218  00184A  0100               	movlb	0	; () banked
  4219  00184C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4220  00184E  6EF7               	movwf	tblptrh,c
  4221  001850                     	if	0	;There are less than 3 active tblptr bytes
  4222  001850                     	endif
  4223  001850  0009               	tblrd		*+
  4224  001852  CFF5 F082          	movff	tablat,___flmul@a
  4225  001856  0009               	tblrd		*+
  4226  001858  CFF5 F083          	movff	tablat,___flmul@a+1
  4227  00185C  0009               	tblrd		*+
  4228  00185E  CFF5 F084          	movff	tablat,___flmul@a+2
  4229  001862  000A               	tblrd		*-
  4230  001864  CFF5 F085          	movff	tablat,___flmul@a+3
  4231  001868  0E00               	movlw	0
  4232  00186A  0100               	movlb	0	; () banked
  4233  00186C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4234  00186E  0E64               	movlw	100
  4235  001870  6F72               	movwf	___awdiv@divisor& (0+255),b
  4236  001872  0100               	movlb	0	; () banked
  4237  001874  519F               	movf	scale@scl& (0+255),w,b
  4238  001876  0100               	movlb	0	; () banked
  4239  001878  6F70               	movwf	___awdiv@dividend& (0+255),b
  4240  00187A  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4241  00187C  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4242  00187E  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4243  001880  EC48  F015         	call	___awdiv	;wreg free
  4244  001884  0100               	movlb	0	; () banked
  4245  001886  90D8               	bcf	status,0,c
  4246  001888  3770               	rlcf	?___awdiv& (0+255),f,b
  4247  00188A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4248  00188C  0100               	movlb	0	; () banked
  4249  00188E  90D8               	bcf	status,0,c
  4250  001890  3770               	rlcf	?___awdiv& (0+255),f,b
  4251  001892  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4252  001894  0E48               	movlw	72
  4253  001896  0100               	movlb	0	; () banked
  4254  001898  2770               	addwf	?___awdiv& (0+255),f,b
  4255  00189A  0E00               	movlw	0
  4256  00189C  0100               	movlb	0	; () banked
  4257  00189E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4258  0018A0  0E35               	movlw	low __powers_
  4259  0018A2  0100               	movlb	0	; () banked
  4260  0018A4  2570               	addwf	?___awdiv& (0+255),w,b
  4261  0018A6  6EF6               	movwf	tblptrl,c
  4262  0018A8  0E03               	movlw	high __powers_
  4263  0018AA  0100               	movlb	0	; () banked
  4264  0018AC  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4265  0018AE  6EF7               	movwf	tblptrh,c
  4266  0018B0                     	if	0	;There are less than 3 active tblptr bytes
  4267  0018B0                     	endif
  4268  0018B0  0009               	tblrd		*+
  4269  0018B2  CFF5 F07E          	movff	tablat,___flmul@b
  4270  0018B6  0009               	tblrd		*+
  4271  0018B8  CFF5 F07F          	movff	tablat,___flmul@b+1
  4272  0018BC  0009               	tblrd		*+
  4273  0018BE  CFF5 F080          	movff	tablat,___flmul@b+2
  4274  0018C2  000A               	tblrd		*-
  4275  0018C4  CFF5 F081          	movff	tablat,___flmul@b+3
  4276  0018C8  EC78  F008         	call	___flmul	;wreg free
  4277  0018CC  C07E  F09B         	movff	?___flmul,_scale$2310
  4278  0018D0  C07F  F09C         	movff	?___flmul+1,_scale$2310+1
  4279  0018D4  C080  F09D         	movff	?___flmul+2,_scale$2310+2
  4280  0018D8  C081  F09E         	movff	?___flmul+3,_scale$2310+3
  4281                           
  4282                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4283  0018DC  C09B  F07E         	movff	_scale$2310,___flmul@b
  4284  0018E0  C09C  F07F         	movff	_scale$2310+1,___flmul@b+1
  4285  0018E4  C09D  F080         	movff	_scale$2310+2,___flmul@b+2
  4286  0018E8  C09E  F081         	movff	_scale$2310+3,___flmul@b+3
  4287  0018EC  0E00               	movlw	0
  4288  0018EE  6E3F               	movwf	___awmod@divisor+1,c
  4289  0018F0  0E0A               	movlw	10
  4290  0018F2  6E3E               	movwf	___awmod@divisor,c
  4291  0018F4  0100               	movlb	0	; () banked
  4292  0018F6  519F               	movf	scale@scl& (0+255),w,b
  4293  0018F8  6E3C               	movwf	___awmod@dividend,c
  4294  0018FA  6A3D               	clrf	___awmod@dividend+1,c
  4295  0018FC  BE3C               	btfsc	___awmod@dividend,7,c
  4296  0018FE  063D               	decf	___awmod@dividend+1,f,c
  4297  001900  ECE7  F016         	call	___awmod	;wreg free
  4298  001904  90D8               	bcf	status,0,c
  4299  001906  363C               	rlcf	?___awmod,f,c
  4300  001908  363D               	rlcf	?___awmod+1,f,c
  4301  00190A  90D8               	bcf	status,0,c
  4302  00190C  363C               	rlcf	?___awmod,f,c
  4303  00190E  363D               	rlcf	?___awmod+1,f,c
  4304  001910  0E35               	movlw	low __powers_
  4305  001912  243C               	addwf	?___awmod,w,c
  4306  001914  6EF6               	movwf	tblptrl,c
  4307  001916  0E03               	movlw	high __powers_
  4308  001918  203D               	addwfc	?___awmod+1,w,c
  4309  00191A  6EF7               	movwf	tblptrh,c
  4310  00191C                     	if	0	;There are less than 3 active tblptr bytes
  4311  00191C                     	endif
  4312  00191C  0009               	tblrd		*+
  4313  00191E  CFF5 F082          	movff	tablat,___flmul@a
  4314  001922  0009               	tblrd		*+
  4315  001924  CFF5 F083          	movff	tablat,___flmul@a+1
  4316  001928  0009               	tblrd		*+
  4317  00192A  CFF5 F084          	movff	tablat,___flmul@a+2
  4318  00192E  000A               	tblrd		*-
  4319  001930  CFF5 F085          	movff	tablat,___flmul@a+3
  4320  001934  EC78  F008         	call	___flmul	;wreg free
  4321  001938  C07E  F097         	movff	?___flmul,?_scale
  4322  00193C  C07F  F098         	movff	?___flmul+1,?_scale+1
  4323  001940  C080  F099         	movff	?___flmul+2,?_scale+2
  4324  001944  C081  F09A         	movff	?___flmul+3,?_scale+3
  4325  001948  0012               	return	
  4326  00194A                     l4658:
  4327                           
  4328                           ;doprnt.c: 438: else if(scl > 10)
  4329  00194A  0100               	movlb	0	; () banked
  4330  00194C  519F               	movf	scale@scl& (0+255),w,b
  4331  00194E  0A80               	xorlw	128
  4332  001950  0F75               	addlw	-139
  4333  001952  A0D8               	btfss	status,0,c
  4334  001954  D057               	goto	l4664
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4338  001956  0E00               	movlw	0
  4339  001958  0100               	movlb	0	; () banked
  4340  00195A  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4341  00195C  0E0A               	movlw	10
  4342  00195E  6F72               	movwf	___awdiv@divisor& (0+255),b
  4343  001960  0100               	movlb	0	; () banked
  4344  001962  519F               	movf	scale@scl& (0+255),w,b
  4345  001964  0100               	movlb	0	; () banked
  4346  001966  6F70               	movwf	___awdiv@dividend& (0+255),b
  4347  001968  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4348  00196A  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4349  00196C  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4350  00196E  EC48  F015         	call	___awdiv	;wreg free
  4351  001972  0100               	movlb	0	; () banked
  4352  001974  90D8               	bcf	status,0,c
  4353  001976  3770               	rlcf	?___awdiv& (0+255),f,b
  4354  001978  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4355  00197A  0100               	movlb	0	; () banked
  4356  00197C  90D8               	bcf	status,0,c
  4357  00197E  3770               	rlcf	?___awdiv& (0+255),f,b
  4358  001980  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4359  001982  0E24               	movlw	36
  4360  001984  0100               	movlb	0	; () banked
  4361  001986  2770               	addwf	?___awdiv& (0+255),f,b
  4362  001988  0E00               	movlw	0
  4363  00198A  0100               	movlb	0	; () banked
  4364  00198C  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4365  00198E  0E35               	movlw	low __powers_
  4366  001990  0100               	movlb	0	; () banked
  4367  001992  2570               	addwf	?___awdiv& (0+255),w,b
  4368  001994  6EF6               	movwf	tblptrl,c
  4369  001996  0E03               	movlw	high __powers_
  4370  001998  0100               	movlb	0	; () banked
  4371  00199A  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4372  00199C  6EF7               	movwf	tblptrh,c
  4373  00199E                     	if	0	;There are less than 3 active tblptr bytes
  4374  00199E                     	endif
  4375  00199E  0009               	tblrd		*+
  4376  0019A0  CFF5 F07E          	movff	tablat,___flmul@b
  4377  0019A4  0009               	tblrd		*+
  4378  0019A6  CFF5 F07F          	movff	tablat,___flmul@b+1
  4379  0019AA  0009               	tblrd		*+
  4380  0019AC  CFF5 F080          	movff	tablat,___flmul@b+2
  4381  0019B0  000A               	tblrd		*-
  4382  0019B2  CFF5 F081          	movff	tablat,___flmul@b+3
  4383  0019B6  0E00               	movlw	0
  4384  0019B8  6E3F               	movwf	___awmod@divisor+1,c
  4385  0019BA  0E0A               	movlw	10
  4386  0019BC  6E3E               	movwf	___awmod@divisor,c
  4387  0019BE  0100               	movlb	0	; () banked
  4388  0019C0  519F               	movf	scale@scl& (0+255),w,b
  4389  0019C2  6E3C               	movwf	___awmod@dividend,c
  4390  0019C4  6A3D               	clrf	___awmod@dividend+1,c
  4391  0019C6  BE3C               	btfsc	___awmod@dividend,7,c
  4392  0019C8  063D               	decf	___awmod@dividend+1,f,c
  4393  0019CA  ECE7  F016         	call	___awmod	;wreg free
  4394  0019CE  90D8               	bcf	status,0,c
  4395  0019D0  363C               	rlcf	?___awmod,f,c
  4396  0019D2  363D               	rlcf	?___awmod+1,f,c
  4397  0019D4  90D8               	bcf	status,0,c
  4398  0019D6  363C               	rlcf	?___awmod,f,c
  4399  0019D8  363D               	rlcf	?___awmod+1,f,c
  4400  0019DA  0E35               	movlw	low __powers_
  4401  0019DC  243C               	addwf	?___awmod,w,c
  4402  0019DE  6EF6               	movwf	tblptrl,c
  4403  0019E0  0E03               	movlw	high __powers_
  4404  0019E2  203D               	addwfc	?___awmod+1,w,c
  4405  0019E4  6EF7               	movwf	tblptrh,c
  4406  0019E6                     	if	0	;There are less than 3 active tblptr bytes
  4407  0019E6                     	endif
  4408  0019E6  0009               	tblrd		*+
  4409  0019E8  CFF5 F082          	movff	tablat,___flmul@a
  4410  0019EC  0009               	tblrd		*+
  4411  0019EE  CFF5 F083          	movff	tablat,___flmul@a+1
  4412  0019F2  0009               	tblrd		*+
  4413  0019F4  CFF5 F084          	movff	tablat,___flmul@a+2
  4414  0019F8  000A               	tblrd		*-
  4415  0019FA  CFF5 F085          	movff	tablat,___flmul@a+3
  4416  0019FE  EC78  F008         	call	___flmul	;wreg free
  4417  001A02  D79A               	goto	L5
  4418  001A04                     l4664:
  4419                           
  4420                           ;doprnt.c: 440: return _powers_[scl];
  4421  001A04  0100               	movlb	0	; () banked
  4422  001A06  519F               	movf	scale@scl& (0+255),w,b
  4423  001A08  0D04               	mullw	4
  4424  001A0A  0E35               	movlw	low __powers_
  4425  001A0C  24F3               	addwf	prodl,w,c
  4426  001A0E  6EF6               	movwf	tblptrl,c
  4427  001A10  0E03               	movlw	high __powers_
  4428  001A12  20F4               	addwfc	prodh,w,c
  4429  001A14  6EF7               	movwf	tblptrh,c
  4430  001A16                     	if	0	;There are less than 3 active tblptr bytes
  4431  001A16                     	endif
  4432  001A16  0009               	tblrd		*+
  4433  001A18  CFF5 F097          	movff	tablat,?_scale
  4434  001A1C  0009               	tblrd		*+
  4435  001A1E  CFF5 F098          	movff	tablat,?_scale+1
  4436  001A22  0009               	tblrd		*+
  4437  001A24  CFF5 F099          	movff	tablat,?_scale+2
  4438  001A28  000A               	tblrd		*-
  4439  001A2A  CFF5 F09A          	movff	tablat,?_scale+3
  4440  001A2E  0012               	return	
  4441  001A30                     __end_of_scale:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _isdigit *****************
  4459 ;; Defined at:
  4460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  c               1    wreg     unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  c               1   26[COMRAM] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;		None               void
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4474 ;;      Params:         0       0       0       0
  4475 ;;      Locals:         2       0       0       0
  4476 ;;      Temps:          1       0       0       0
  4477 ;;      Totals:         3       0       0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    4
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_sprintf
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text13
  4489  0031DC                     __ptext13:
  4490                           	opt stack 0
  4491  0031DC                     _isdigit:
  4492                           	opt stack 24
  4493                           
  4494                           ;incstack = 0
  4495                           ;isdigit@c stored from wreg
  4496  0031DC  6E3E               	movwf	isdigit@c,c
  4497  0031DE  0E00               	movlw	0
  4498  0031E0  6E3D               	movwf	_isdigit$1916,c
  4499  0031E2  0E3A               	movlw	58
  4500  0031E4  603E               	cpfslt	isdigit@c,c
  4501  0031E6  D005               	goto	l4676
  4502  0031E8  0E2F               	movlw	47
  4503  0031EA  643E               	cpfsgt	isdigit@c,c
  4504  0031EC  D002               	goto	l4676
  4505  0031EE  0E01               	movlw	1
  4506  0031F0  6E3D               	movwf	_isdigit$1916,c
  4507  0031F2                     l4676:
  4508  0031F2  C03D  F03C         	movff	_isdigit$1916,??_isdigit
  4509  0031F6  303C               	rrcf	??_isdigit,w,c
  4510  0031F8  0012               	return	
  4511  0031FA                     __end_of_isdigit:
  4512                           	opt stack 0
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           prodh	equ	0xFF4
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           indf2	equ	0xFDF
  4523                           postinc2	equ	0xFDE
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function _fround *****************
  4529 ;; Defined at:
  4530 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  prec            1    wreg     unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  prec            1   67[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  4   55[BANK0 ] unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4544 ;;      Params:         0       4       0       0
  4545 ;;      Locals:         0       9       0       0
  4546 ;;      Temps:          0       0       0       0
  4547 ;;      Totals:         0      13       0       0
  4548 ;;Total ram usage:       13 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    5
  4551 ;; This function calls:
  4552 ;;		___awdiv
  4553 ;;		___awmod
  4554 ;;		___flmul
  4555 ;; This function is called by:
  4556 ;;		_sprintf
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text14
  4561  001A30                     __ptext14:
  4562                           	opt stack 0
  4563  001A30                     _fround:
  4564                           	opt stack 23
  4565                           
  4566                           ;incstack = 0
  4567                           ;fround@prec stored from wreg
  4568  001A30  0100               	movlb	0	; () banked
  4569  001A32  6FA3               	movwf	fround@prec& (0+255),b
  4570                           
  4571                           ;doprnt.c: 413: if(prec>=110)
  4572  001A34  0E6D               	movlw	109
  4573  001A36  0100               	movlb	0	; () banked
  4574  001A38  65A3               	cpfsgt	fround@prec& (0+255),b
  4575  001A3A  D0BC               	goto	l4618
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4579  001A3C  0E00               	movlw	0
  4580  001A3E  0100               	movlb	0	; () banked
  4581  001A40  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4582  001A42  0E0A               	movlw	10
  4583  001A44  6F72               	movwf	___awdiv@divisor& (0+255),b
  4584  001A46  0E00               	movlw	0
  4585  001A48  6E3F               	movwf	___awmod@divisor+1,c
  4586  001A4A  0E64               	movlw	100
  4587  001A4C  6E3E               	movwf	___awmod@divisor,c
  4588  001A4E  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4589  001A52  6A3D               	clrf	___awmod@dividend+1,c
  4590  001A54  ECE7  F016         	call	___awmod	;wreg free
  4591  001A58  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4592  001A5C  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4593  001A60  EC48  F015         	call	___awdiv	;wreg free
  4594  001A64  0100               	movlb	0	; () banked
  4595  001A66  90D8               	bcf	status,0,c
  4596  001A68  3770               	rlcf	?___awdiv& (0+255),f,b
  4597  001A6A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4598  001A6C  0100               	movlb	0	; () banked
  4599  001A6E  90D8               	bcf	status,0,c
  4600  001A70  3770               	rlcf	?___awdiv& (0+255),f,b
  4601  001A72  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4602  001A74  0E24               	movlw	36
  4603  001A76  0100               	movlb	0	; () banked
  4604  001A78  2770               	addwf	?___awdiv& (0+255),f,b
  4605  001A7A  0E00               	movlw	0
  4606  001A7C  0100               	movlb	0	; () banked
  4607  001A7E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4608  001A80  0E01               	movlw	low __npowers_
  4609  001A82  0100               	movlb	0	; () banked
  4610  001A84  2570               	addwf	?___awdiv& (0+255),w,b
  4611  001A86  6EF6               	movwf	tblptrl,c
  4612  001A88  0E03               	movlw	high __npowers_
  4613  001A8A  0100               	movlb	0	; () banked
  4614  001A8C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4615  001A8E  6EF7               	movwf	tblptrh,c
  4616  001A90                     	if	0	;There are less than 3 active tblptr bytes
  4617  001A90                     	endif
  4618  001A90  0009               	tblrd		*+
  4619  001A92  CFF5 F082          	movff	tablat,___flmul@a
  4620  001A96  0009               	tblrd		*+
  4621  001A98  CFF5 F083          	movff	tablat,___flmul@a+1
  4622  001A9C  0009               	tblrd		*+
  4623  001A9E  CFF5 F084          	movff	tablat,___flmul@a+2
  4624  001AA2  000A               	tblrd		*-
  4625  001AA4  CFF5 F085          	movff	tablat,___flmul@a+3
  4626  001AA8  0E00               	movlw	0
  4627  001AAA  0100               	movlb	0	; () banked
  4628  001AAC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4629  001AAE  0E64               	movlw	100
  4630  001AB0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4631  001AB2  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  4632  001AB6  0100               	movlb	0	; () banked
  4633  001AB8  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4634  001ABA  EC48  F015         	call	___awdiv	;wreg free
  4635  001ABE  0100               	movlb	0	; () banked
  4636  001AC0  90D8               	bcf	status,0,c
  4637  001AC2  3770               	rlcf	?___awdiv& (0+255),f,b
  4638  001AC4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4639  001AC6  0100               	movlb	0	; () banked
  4640  001AC8  90D8               	bcf	status,0,c
  4641  001ACA  3770               	rlcf	?___awdiv& (0+255),f,b
  4642  001ACC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4643  001ACE  0E48               	movlw	72
  4644  001AD0  0100               	movlb	0	; () banked
  4645  001AD2  2770               	addwf	?___awdiv& (0+255),f,b
  4646  001AD4  0E00               	movlw	0
  4647  001AD6  0100               	movlb	0	; () banked
  4648  001AD8  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4649  001ADA  0E01               	movlw	low __npowers_
  4650  001ADC  0100               	movlb	0	; () banked
  4651  001ADE  2570               	addwf	?___awdiv& (0+255),w,b
  4652  001AE0  6EF6               	movwf	tblptrl,c
  4653  001AE2  0E03               	movlw	high __npowers_
  4654  001AE4  0100               	movlb	0	; () banked
  4655  001AE6  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4656  001AE8  6EF7               	movwf	tblptrh,c
  4657  001AEA                     	if	0	;There are less than 3 active tblptr bytes
  4658  001AEA                     	endif
  4659  001AEA  0009               	tblrd		*+
  4660  001AEC  CFF5 F07E          	movff	tablat,___flmul@b
  4661  001AF0  0009               	tblrd		*+
  4662  001AF2  CFF5 F07F          	movff	tablat,___flmul@b+1
  4663  001AF6  0009               	tblrd		*+
  4664  001AF8  CFF5 F080          	movff	tablat,___flmul@b+2
  4665  001AFC  000A               	tblrd		*-
  4666  001AFE  CFF5 F081          	movff	tablat,___flmul@b+3
  4667  001B02  EC78  F008         	call	___flmul	;wreg free
  4668  001B06  C07E  F09F         	movff	?___flmul,_fround$2308
  4669  001B0A  C07F  F0A0         	movff	?___flmul+1,_fround$2308+1
  4670  001B0E  C080  F0A1         	movff	?___flmul+2,_fround$2308+2
  4671  001B12  C081  F0A2         	movff	?___flmul+3,_fround$2308+3
  4672                           
  4673                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4674  001B16  0E00               	movlw	0
  4675  001B18  6E3F               	movwf	___awmod@divisor+1,c
  4676  001B1A  0E0A               	movlw	10
  4677  001B1C  6E3E               	movwf	___awmod@divisor,c
  4678  001B1E  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4679  001B22  6A3D               	clrf	___awmod@dividend+1,c
  4680  001B24  ECE7  F016         	call	___awmod	;wreg free
  4681  001B28  90D8               	bcf	status,0,c
  4682  001B2A  363C               	rlcf	?___awmod,f,c
  4683  001B2C  363D               	rlcf	?___awmod+1,f,c
  4684  001B2E  90D8               	bcf	status,0,c
  4685  001B30  363C               	rlcf	?___awmod,f,c
  4686  001B32  363D               	rlcf	?___awmod+1,f,c
  4687  001B34  0E01               	movlw	low __npowers_
  4688  001B36  243C               	addwf	?___awmod,w,c
  4689  001B38  6EF6               	movwf	tblptrl,c
  4690  001B3A  0E03               	movlw	high __npowers_
  4691  001B3C  203D               	addwfc	?___awmod+1,w,c
  4692  001B3E  6EF7               	movwf	tblptrh,c
  4693  001B40                     	if	0	;There are less than 3 active tblptr bytes
  4694  001B40                     	endif
  4695  001B40  0009               	tblrd		*+
  4696  001B42  CFF5 F082          	movff	tablat,___flmul@a
  4697  001B46  0009               	tblrd		*+
  4698  001B48  CFF5 F083          	movff	tablat,___flmul@a+1
  4699  001B4C  0009               	tblrd		*+
  4700  001B4E  CFF5 F084          	movff	tablat,___flmul@a+2
  4701  001B52  000A               	tblrd		*-
  4702  001B54  CFF5 F085          	movff	tablat,___flmul@a+3
  4703  001B58  C09F  F07E         	movff	_fround$2308,___flmul@b
  4704  001B5C  C0A0  F07F         	movff	_fround$2308+1,___flmul@b+1
  4705  001B60  C0A1  F080         	movff	_fround$2308+2,___flmul@b+2
  4706  001B64  C0A2  F081         	movff	_fround$2308+3,___flmul@b+3
  4707  001B68  EC78  F008         	call	___flmul	;wreg free
  4708  001B6C  C07E  F09B         	movff	?___flmul,_fround$2309
  4709  001B70  C07F  F09C         	movff	?___flmul+1,_fround$2309+1
  4710  001B74  C080  F09D         	movff	?___flmul+2,_fround$2309+2
  4711  001B78  C081  F09E         	movff	?___flmul+3,_fround$2309+3
  4712                           
  4713                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4714  001B7C  C09B  F07E         	movff	_fround$2309,___flmul@b
  4715  001B80  C09C  F07F         	movff	_fround$2309+1,___flmul@b+1
  4716  001B84  C09D  F080         	movff	_fround$2309+2,___flmul@b+2
  4717  001B88  C09E  F081         	movff	_fround$2309+3,___flmul@b+3
  4718  001B8C  0E00               	movlw	0
  4719  001B8E  0100               	movlb	0	; () banked
  4720  001B90  6F82               	movwf	___flmul@a& (0+255),b
  4721  001B92  0E00               	movlw	0
  4722  001B94  6F83               	movwf	(___flmul@a+1)& (0+255),b
  4723  001B96  0E00               	movlw	0
  4724  001B98  6F84               	movwf	(___flmul@a+2)& (0+255),b
  4725  001B9A  0E3F               	movlw	63
  4726  001B9C  6F85               	movwf	(___flmul@a+3)& (0+255),b
  4727  001B9E  EC78  F008         	call	___flmul	;wreg free
  4728  001BA2  C07E  F097         	movff	?___flmul,?_fround
  4729  001BA6  C07F  F098         	movff	?___flmul+1,?_fround+1
  4730  001BAA  C080  F099         	movff	?___flmul+2,?_fround+2
  4731  001BAE  C081  F09A         	movff	?___flmul+3,?_fround+3
  4732  001BB2  0012               	return	
  4733  001BB4                     l4618:
  4734                           
  4735                           ;doprnt.c: 415: else if(prec > 10)
  4736  001BB4  0E0A               	movlw	10
  4737  001BB6  0100               	movlb	0	; () banked
  4738  001BB8  65A3               	cpfsgt	fround@prec& (0+255),b
  4739  001BBA  D06C               	goto	l4626
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4743  001BBC  0E00               	movlw	0
  4744  001BBE  6E3F               	movwf	___awmod@divisor+1,c
  4745  001BC0  0E0A               	movlw	10
  4746  001BC2  6E3E               	movwf	___awmod@divisor,c
  4747  001BC4  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4748  001BC8  6A3D               	clrf	___awmod@dividend+1,c
  4749  001BCA  ECE7  F016         	call	___awmod	;wreg free
  4750  001BCE  90D8               	bcf	status,0,c
  4751  001BD0  363C               	rlcf	?___awmod,f,c
  4752  001BD2  363D               	rlcf	?___awmod+1,f,c
  4753  001BD4  90D8               	bcf	status,0,c
  4754  001BD6  363C               	rlcf	?___awmod,f,c
  4755  001BD8  363D               	rlcf	?___awmod+1,f,c
  4756  001BDA  0E01               	movlw	low __npowers_
  4757  001BDC  243C               	addwf	?___awmod,w,c
  4758  001BDE  6EF6               	movwf	tblptrl,c
  4759  001BE0  0E03               	movlw	high __npowers_
  4760  001BE2  203D               	addwfc	?___awmod+1,w,c
  4761  001BE4  6EF7               	movwf	tblptrh,c
  4762  001BE6                     	if	0	;There are less than 3 active tblptr bytes
  4763  001BE6                     	endif
  4764  001BE6  0009               	tblrd		*+
  4765  001BE8  CFF5 F082          	movff	tablat,___flmul@a
  4766  001BEC  0009               	tblrd		*+
  4767  001BEE  CFF5 F083          	movff	tablat,___flmul@a+1
  4768  001BF2  0009               	tblrd		*+
  4769  001BF4  CFF5 F084          	movff	tablat,___flmul@a+2
  4770  001BF8  000A               	tblrd		*-
  4771  001BFA  CFF5 F085          	movff	tablat,___flmul@a+3
  4772  001BFE  0E00               	movlw	0
  4773  001C00  0100               	movlb	0	; () banked
  4774  001C02  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4775  001C04  0E0A               	movlw	10
  4776  001C06  6F72               	movwf	___awdiv@divisor& (0+255),b
  4777  001C08  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  4778  001C0C  0100               	movlb	0	; () banked
  4779  001C0E  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4780  001C10  EC48  F015         	call	___awdiv	;wreg free
  4781  001C14  0100               	movlb	0	; () banked
  4782  001C16  90D8               	bcf	status,0,c
  4783  001C18  3770               	rlcf	?___awdiv& (0+255),f,b
  4784  001C1A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4785  001C1C  0100               	movlb	0	; () banked
  4786  001C1E  90D8               	bcf	status,0,c
  4787  001C20  3770               	rlcf	?___awdiv& (0+255),f,b
  4788  001C22  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4789  001C24  0E24               	movlw	36
  4790  001C26  0100               	movlb	0	; () banked
  4791  001C28  2770               	addwf	?___awdiv& (0+255),f,b
  4792  001C2A  0E00               	movlw	0
  4793  001C2C  0100               	movlb	0	; () banked
  4794  001C2E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4795  001C30  0E01               	movlw	low __npowers_
  4796  001C32  0100               	movlb	0	; () banked
  4797  001C34  2570               	addwf	?___awdiv& (0+255),w,b
  4798  001C36  6EF6               	movwf	tblptrl,c
  4799  001C38  0E03               	movlw	high __npowers_
  4800  001C3A  0100               	movlb	0	; () banked
  4801  001C3C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4802  001C3E  6EF7               	movwf	tblptrh,c
  4803  001C40                     	if	0	;There are less than 3 active tblptr bytes
  4804  001C40                     	endif
  4805  001C40  0009               	tblrd		*+
  4806  001C42  CFF5 F07E          	movff	tablat,___flmul@b
  4807  001C46  0009               	tblrd		*+
  4808  001C48  CFF5 F07F          	movff	tablat,___flmul@b+1
  4809  001C4C  0009               	tblrd		*+
  4810  001C4E  CFF5 F080          	movff	tablat,___flmul@b+2
  4811  001C52  000A               	tblrd		*-
  4812  001C54  CFF5 F081          	movff	tablat,___flmul@b+3
  4813  001C58  EC78  F008         	call	___flmul	;wreg free
  4814  001C5C  C07E  F09F         	movff	?___flmul,_fround$2308
  4815  001C60  C07F  F0A0         	movff	?___flmul+1,_fround$2308+1
  4816  001C64  C080  F0A1         	movff	?___flmul+2,_fround$2308+2
  4817  001C68  C081  F0A2         	movff	?___flmul+3,_fround$2308+3
  4818                           
  4819                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4820  001C6C  C09F  F07E         	movff	_fround$2308,___flmul@b
  4821  001C70  C0A0  F07F         	movff	_fround$2308+1,___flmul@b+1
  4822  001C74  C0A1  F080         	movff	_fround$2308+2,___flmul@b+2
  4823  001C78  C0A2  F081         	movff	_fround$2308+3,___flmul@b+3
  4824  001C7C  0E00               	movlw	0
  4825  001C7E  0100               	movlb	0	; () banked
  4826  001C80  6F82               	movwf	___flmul@a& (0+255),b
  4827  001C82  0E00               	movlw	0
  4828  001C84  6F83               	movwf	(___flmul@a+1)& (0+255),b
  4829  001C86  0E00               	movlw	0
  4830  001C88  6F84               	movwf	(___flmul@a+2)& (0+255),b
  4831  001C8A  0E3F               	movlw	63
  4832  001C8C  6F85               	movwf	(___flmul@a+3)& (0+255),b
  4833  001C8E  EC78  F008         	call	___flmul	;wreg free
  4834  001C92  D787               	goto	L6
  4835  001C94                     l4626:
  4836                           
  4837                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4838  001C94  0100               	movlb	0	; () banked
  4839  001C96  51A3               	movf	fround@prec& (0+255),w,b
  4840  001C98  0D04               	mullw	4
  4841  001C9A  0E01               	movlw	low __npowers_
  4842  001C9C  24F3               	addwf	prodl,w,c
  4843  001C9E  6EF6               	movwf	tblptrl,c
  4844  001CA0  0E03               	movlw	high __npowers_
  4845  001CA2  20F4               	addwfc	prodh,w,c
  4846  001CA4  6EF7               	movwf	tblptrh,c
  4847  001CA6                     	if	0	;There are less than 3 active tblptr bytes
  4848  001CA6                     	endif
  4849  001CA6  0009               	tblrd		*+
  4850  001CA8  CFF5 F07E          	movff	tablat,___flmul@b
  4851  001CAC  0009               	tblrd		*+
  4852  001CAE  CFF5 F07F          	movff	tablat,___flmul@b+1
  4853  001CB2  0009               	tblrd		*+
  4854  001CB4  CFF5 F080          	movff	tablat,___flmul@b+2
  4855  001CB8  000A               	tblrd		*-
  4856  001CBA  CFF5 F081          	movff	tablat,___flmul@b+3
  4857  001CBE  0E00               	movlw	0
  4858  001CC0  0100               	movlb	0	; () banked
  4859  001CC2  6F82               	movwf	___flmul@a& (0+255),b
  4860  001CC4  0E00               	movlw	0
  4861  001CC6  6F83               	movwf	(___flmul@a+1)& (0+255),b
  4862  001CC8  0E00               	movlw	0
  4863  001CCA  6F84               	movwf	(___flmul@a+2)& (0+255),b
  4864  001CCC  0E3F               	movlw	63
  4865  001CCE  6F85               	movwf	(___flmul@a+3)& (0+255),b
  4866  001CD0  EC78  F008         	call	___flmul	;wreg free
  4867  001CD4  C07E  F097         	movff	?___flmul,?_fround
  4868  001CD8  C07F  F098         	movff	?___flmul+1,?_fround+1
  4869  001CDC  C080  F099         	movff	?___flmul+2,?_fround+2
  4870  001CE0  C081  F09A         	movff	?___flmul+3,?_fround+3
  4871  001CE4  0012               	return	
  4872  001CE6                     __end_of_fround:
  4873                           	opt stack 0
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           prodh	equ	0xFF4
  4879                           prodl	equ	0xFF3
  4880                           intcon	equ	0xFF2
  4881                           postinc0	equ	0xFEE
  4882                           wreg	equ	0xFE8
  4883                           indf2	equ	0xFDF
  4884                           postinc2	equ	0xFDE
  4885                           fsr2h	equ	0xFDA
  4886                           fsr2l	equ	0xFD9
  4887                           status	equ	0xFD8
  4888                           
  4889 ;; *************** function ___flmul *****************
  4890 ;; Defined at:
  4891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  b               4   30[BANK0 ] unsigned char 
  4894 ;;  a               4   34[BANK0 ] unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  prod            4   49[BANK0 ] struct .
  4897 ;;  grs             4   44[BANK0 ] unsigned long 
  4898 ;;  temp            2   53[BANK0 ] struct .
  4899 ;;  bexp            1   48[BANK0 ] unsigned char 
  4900 ;;  aexp            1   43[BANK0 ] unsigned char 
  4901 ;;  sign            1   42[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  4   30[BANK0 ] unsigned char 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0, prodl, prodh
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4911 ;;      Params:         0       8       0       0
  4912 ;;      Locals:         0      13       0       0
  4913 ;;      Temps:          0       4       0       0
  4914 ;;      Totals:         0      25       0       0
  4915 ;;Total ram usage:       25 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;;		_fround
  4923 ;;		_scale
  4924 ;;		_sprintf
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text15
  4929  0010F0                     __ptext15:
  4930                           	opt stack 0
  4931  0010F0                     ___flmul:
  4932                           	opt stack 26
  4933                           
  4934                           ;incstack = 0
  4935  0010F0  0100               	movlb	0	; () banked
  4936  0010F2  5181               	movf	(___flmul@b+3)& (0+255),w,b
  4937  0010F4  0B80               	andlw	128
  4938  0010F6  0100               	movlb	0	; () banked
  4939  0010F8  6F8A               	movwf	___flmul@sign& (0+255),b
  4940  0010FA  0100               	movlb	0	; () banked
  4941  0010FC  5181               	movf	(___flmul@b+3)& (0+255),w,b
  4942  0010FE  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  4943  001100  0100               	movlb	0	; () banked
  4944  001102  6F90               	movwf	___flmul@bexp& (0+255),b
  4945                           
  4946                           ; BSR set to: 0
  4947  001104  0100               	movlb	0	; () banked
  4948  001106  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  4949  001108  D002               	goto	l4382
  4950                           
  4951                           ; BSR set to: 0
  4952  00110A  0100               	movlb	0	; () banked
  4953  00110C  8190               	bsf	___flmul@bexp& (0+255),0,b
  4954  00110E                     l4382:
  4955                           
  4956                           ; BSR set to: 0
  4957  00110E  0100               	movlb	0	; () banked
  4958  001110  5190               	movf	___flmul@bexp& (0+255),w,b
  4959  001112  0100               	movlb	0	; () banked
  4960  001114  B4D8               	btfsc	status,2,c
  4961  001116  D010               	goto	l4390
  4962                           
  4963                           ; BSR set to: 0
  4964  001118  0100               	movlb	0	; () banked
  4965  00111A  2990               	incf	___flmul@bexp& (0+255),w,b
  4966  00111C  A4D8               	btfss	status,2,c
  4967  00111E  D009               	goto	l4388
  4968                           
  4969                           ; BSR set to: 0
  4970  001120  0E00               	movlw	0
  4971  001122  0100               	movlb	0	; () banked
  4972  001124  6F7E               	movwf	___flmul@b& (0+255),b
  4973  001126  0E00               	movlw	0
  4974  001128  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  4975  00112A  0E00               	movlw	0
  4976  00112C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  4977  00112E  0E00               	movlw	0
  4978  001130  6F81               	movwf	(___flmul@b+3)& (0+255),b
  4979  001132                     l4388:
  4980                           
  4981                           ; BSR set to: 0
  4982  001132  0100               	movlb	0	; () banked
  4983  001134  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  4984  001136  D009               	goto	l4392
  4985  001138                     l4390:
  4986                           
  4987                           ; BSR set to: 0
  4988  001138  0E00               	movlw	0
  4989  00113A  0100               	movlb	0	; () banked
  4990  00113C  6F7E               	movwf	___flmul@b& (0+255),b
  4991  00113E  0E00               	movlw	0
  4992  001140  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  4993  001142  0E00               	movlw	0
  4994  001144  6F80               	movwf	(___flmul@b+2)& (0+255),b
  4995  001146  0E00               	movlw	0
  4996  001148  6F81               	movwf	(___flmul@b+3)& (0+255),b
  4997  00114A                     l4392:
  4998                           
  4999                           ; BSR set to: 0
  5000  00114A  0100               	movlb	0	; () banked
  5001  00114C  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5002  00114E  0B80               	andlw	128
  5003  001150  0100               	movlb	0	; () banked
  5004  001152  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5005                           
  5006                           ; BSR set to: 0
  5007  001154  0100               	movlb	0	; () banked
  5008  001156  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5009  001158  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5010  00115A  0100               	movlb	0	; () banked
  5011  00115C  6F8B               	movwf	___flmul@aexp& (0+255),b
  5012                           
  5013                           ; BSR set to: 0
  5014  00115E  0100               	movlb	0	; () banked
  5015  001160  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5016  001162  D002               	goto	l4400
  5017                           
  5018                           ; BSR set to: 0
  5019  001164  0100               	movlb	0	; () banked
  5020  001166  818B               	bsf	___flmul@aexp& (0+255),0,b
  5021  001168                     l4400:
  5022                           
  5023                           ; BSR set to: 0
  5024  001168  0100               	movlb	0	; () banked
  5025  00116A  518B               	movf	___flmul@aexp& (0+255),w,b
  5026  00116C  0100               	movlb	0	; () banked
  5027  00116E  B4D8               	btfsc	status,2,c
  5028  001170  D010               	goto	l4408
  5029                           
  5030                           ; BSR set to: 0
  5031  001172  0100               	movlb	0	; () banked
  5032  001174  298B               	incf	___flmul@aexp& (0+255),w,b
  5033  001176  A4D8               	btfss	status,2,c
  5034  001178  D009               	goto	l4406
  5035                           
  5036                           ; BSR set to: 0
  5037  00117A  0E00               	movlw	0
  5038  00117C  0100               	movlb	0	; () banked
  5039  00117E  6F82               	movwf	___flmul@a& (0+255),b
  5040  001180  0E00               	movlw	0
  5041  001182  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5042  001184  0E00               	movlw	0
  5043  001186  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5044  001188  0E00               	movlw	0
  5045  00118A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5046  00118C                     l4406:
  5047                           
  5048                           ; BSR set to: 0
  5049  00118C  0100               	movlb	0	; () banked
  5050  00118E  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5051  001190  D009               	goto	l1032
  5052  001192                     l4408:
  5053                           
  5054                           ; BSR set to: 0
  5055  001192  0E00               	movlw	0
  5056  001194  0100               	movlb	0	; () banked
  5057  001196  6F82               	movwf	___flmul@a& (0+255),b
  5058  001198  0E00               	movlw	0
  5059  00119A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5060  00119C  0E00               	movlw	0
  5061  00119E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5062  0011A0  0E00               	movlw	0
  5063  0011A2  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5064  0011A4                     l1032:
  5065                           
  5066                           ; BSR set to: 0
  5067  0011A4  0100               	movlb	0	; () banked
  5068  0011A6  518B               	movf	___flmul@aexp& (0+255),w,b
  5069  0011A8  0100               	movlb	0	; () banked
  5070  0011AA  B4D8               	btfsc	status,2,c
  5071  0011AC  D005               	goto	l4412
  5072                           
  5073                           ; BSR set to: 0
  5074  0011AE  0100               	movlb	0	; () banked
  5075  0011B0  5190               	movf	___flmul@bexp& (0+255),w,b
  5076  0011B2  0100               	movlb	0	; () banked
  5077  0011B4  A4D8               	btfss	status,2,c
  5078  0011B6  D00A               	goto	l4416
  5079  0011B8                     l4412:
  5080                           
  5081                           ; BSR set to: 0
  5082  0011B8  0E00               	movlw	0
  5083  0011BA  0100               	movlb	0	; () banked
  5084  0011BC  6F7E               	movwf	?___flmul& (0+255),b
  5085  0011BE  0E00               	movlw	0
  5086  0011C0  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5087  0011C2  0E00               	movlw	0
  5088  0011C4  6F80               	movwf	(?___flmul+2)& (0+255),b
  5089  0011C6  0E00               	movlw	0
  5090  0011C8  6F81               	movwf	(?___flmul+3)& (0+255),b
  5091                           
  5092                           ; BSR set to: 0
  5093  0011CA  0012               	return	
  5094  0011CC                     l4416:
  5095                           
  5096                           ; BSR set to: 0
  5097  0011CC  0100               	movlb	0	; () banked
  5098  0011CE  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5099  0011D0  0100               	movlb	0	; () banked
  5100  0011D2  037E               	mulwf	___flmul@b& (0+255),b
  5101  0011D4  CFF3 F095          	movff	prodl,___flmul@temp
  5102  0011D8  CFF4 F096          	movff	prodh,___flmul@temp+1
  5103                           
  5104                           ; BSR set to: 0
  5105  0011DC  0100               	movlb	0	; () banked
  5106  0011DE  5195               	movf	___flmul@temp& (0+255),w,b
  5107  0011E0  0100               	movlb	0	; () banked
  5108  0011E2  6F8C               	movwf	___flmul@grs& (0+255),b
  5109  0011E4  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5110  0011E6  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5111  0011E8  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5112                           
  5113                           ; BSR set to: 0
  5114  0011EA  0100               	movlb	0	; () banked
  5115  0011EC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5116  0011EE  0100               	movlb	0	; () banked
  5117  0011F0  6F91               	movwf	___flmul@prod& (0+255),b
  5118  0011F2  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5119  0011F4  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5120  0011F6  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5121  0011F8  0100               	movlb	0	; () banked
  5122  0011FA  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5123  0011FC  0100               	movlb	0	; () banked
  5124  0011FE  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5125  001200  CFF3 F095          	movff	prodl,___flmul@temp
  5126  001204  CFF4 F096          	movff	prodh,___flmul@temp+1
  5127                           
  5128                           ; BSR set to: 0
  5129  001208  0100               	movlb	0	; () banked
  5130  00120A  5195               	movf	___flmul@temp& (0+255),w,b
  5131  00120C  0100               	movlb	0	; () banked
  5132  00120E  278C               	addwf	___flmul@grs& (0+255),f,b
  5133  001210  0E00               	movlw	0
  5134  001212  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5135  001214  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5136  001216  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5137                           
  5138                           ; BSR set to: 0
  5139  001218  0100               	movlb	0	; () banked
  5140  00121A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5141  00121C  0100               	movlb	0	; () banked
  5142  00121E  2791               	addwf	___flmul@prod& (0+255),f,b
  5143  001220  0E00               	movlw	0
  5144  001222  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5145  001224  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5146  001226  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5147  001228  0100               	movlb	0	; () banked
  5148  00122A  5182               	movf	___flmul@a& (0+255),w,b
  5149  00122C  0100               	movlb	0	; () banked
  5150  00122E  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5151  001230  CFF3 F095          	movff	prodl,___flmul@temp
  5152  001234  CFF4 F096          	movff	prodh,___flmul@temp+1
  5153                           
  5154                           ; BSR set to: 0
  5155  001238  0100               	movlb	0	; () banked
  5156  00123A  5195               	movf	___flmul@temp& (0+255),w,b
  5157  00123C  0100               	movlb	0	; () banked
  5158  00123E  278C               	addwf	___flmul@grs& (0+255),f,b
  5159  001240  0E00               	movlw	0
  5160  001242  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5161  001244  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5162  001246  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5163                           
  5164                           ; BSR set to: 0
  5165  001248  0100               	movlb	0	; () banked
  5166  00124A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5167  00124C  0100               	movlb	0	; () banked
  5168  00124E  2791               	addwf	___flmul@prod& (0+255),f,b
  5169  001250  0E00               	movlw	0
  5170  001252  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5171  001254  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5172  001256  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5173                           
  5174                           ; BSR set to: 0
  5175  001258  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5176  00125C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5177  001260  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5178  001264  0100               	movlb	0	; () banked
  5179  001266  6B8C               	clrf	___flmul@grs& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182  001268  0100               	movlb	0	; () banked
  5183  00126A  5182               	movf	___flmul@a& (0+255),w,b
  5184  00126C  0100               	movlb	0	; () banked
  5185  00126E  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5186  001270  CFF3 F095          	movff	prodl,___flmul@temp
  5187  001274  CFF4 F096          	movff	prodh,___flmul@temp+1
  5188                           
  5189                           ; BSR set to: 0
  5190  001278  0100               	movlb	0	; () banked
  5191  00127A  5195               	movf	___flmul@temp& (0+255),w,b
  5192  00127C  0100               	movlb	0	; () banked
  5193  00127E  278C               	addwf	___flmul@grs& (0+255),f,b
  5194  001280  0100               	movlb	0	; () banked
  5195  001282  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5196  001284  0100               	movlb	0	; () banked
  5197  001286  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5198  001288  0E00               	movlw	0
  5199  00128A  0100               	movlb	0	; () banked
  5200  00128C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5201  00128E  0E00               	movlw	0
  5202  001290  0100               	movlb	0	; () banked
  5203  001292  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5204                           
  5205                           ; BSR set to: 0
  5206  001294  0100               	movlb	0	; () banked
  5207  001296  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5208  001298  0100               	movlb	0	; () banked
  5209  00129A  037E               	mulwf	___flmul@b& (0+255),b
  5210  00129C  CFF3 F095          	movff	prodl,___flmul@temp
  5211  0012A0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5212                           
  5213                           ; BSR set to: 0
  5214  0012A4  0100               	movlb	0	; () banked
  5215  0012A6  5195               	movf	___flmul@temp& (0+255),w,b
  5216  0012A8  0100               	movlb	0	; () banked
  5217  0012AA  278C               	addwf	___flmul@grs& (0+255),f,b
  5218  0012AC  0100               	movlb	0	; () banked
  5219  0012AE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5220  0012B0  0100               	movlb	0	; () banked
  5221  0012B2  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5222  0012B4  0E00               	movlw	0
  5223  0012B6  0100               	movlb	0	; () banked
  5224  0012B8  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5225  0012BA  0E00               	movlw	0
  5226  0012BC  0100               	movlb	0	; () banked
  5227  0012BE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5228                           
  5229                           ; BSR set to: 0
  5230  0012C0  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5231  0012C4  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5232  0012C8  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5233  0012CC  0100               	movlb	0	; () banked
  5234  0012CE  6B8C               	clrf	___flmul@grs& (0+255),b
  5235  0012D0  0100               	movlb	0	; () banked
  5236  0012D2  5182               	movf	___flmul@a& (0+255),w,b
  5237  0012D4  0100               	movlb	0	; () banked
  5238  0012D6  037E               	mulwf	___flmul@b& (0+255),b
  5239  0012D8  CFF3 F095          	movff	prodl,___flmul@temp
  5240  0012DC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5241                           
  5242                           ; BSR set to: 0
  5243  0012E0  0100               	movlb	0	; () banked
  5244  0012E2  5195               	movf	___flmul@temp& (0+255),w,b
  5245  0012E4  0100               	movlb	0	; () banked
  5246  0012E6  278C               	addwf	___flmul@grs& (0+255),f,b
  5247  0012E8  0100               	movlb	0	; () banked
  5248  0012EA  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5249  0012EC  0100               	movlb	0	; () banked
  5250  0012EE  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5251  0012F0  0E00               	movlw	0
  5252  0012F2  0100               	movlb	0	; () banked
  5253  0012F4  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5254  0012F6  0E00               	movlw	0
  5255  0012F8  0100               	movlb	0	; () banked
  5256  0012FA  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5257                           
  5258                           ; BSR set to: 0
  5259  0012FC  0100               	movlb	0	; () banked
  5260  0012FE  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5261  001300  0100               	movlb	0	; () banked
  5262  001302  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5263  001304  CFF3 F095          	movff	prodl,___flmul@temp
  5264  001308  CFF4 F096          	movff	prodh,___flmul@temp+1
  5265  00130C  0100               	movlb	0	; () banked
  5266  00130E  5195               	movf	___flmul@temp& (0+255),w,b
  5267  001310  0100               	movlb	0	; () banked
  5268  001312  2791               	addwf	___flmul@prod& (0+255),f,b
  5269  001314  0100               	movlb	0	; () banked
  5270  001316  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5271  001318  0100               	movlb	0	; () banked
  5272  00131A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5273  00131C  0E00               	movlw	0
  5274  00131E  0100               	movlb	0	; () banked
  5275  001320  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5276  001322  0E00               	movlw	0
  5277  001324  0100               	movlb	0	; () banked
  5278  001326  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5279                           
  5280                           ; BSR set to: 0
  5281  001328  0100               	movlb	0	; () banked
  5282  00132A  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5283  00132C  0100               	movlb	0	; () banked
  5284  00132E  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5285  001330  CFF3 F095          	movff	prodl,___flmul@temp
  5286  001334  CFF4 F096          	movff	prodh,___flmul@temp+1
  5287                           
  5288                           ; BSR set to: 0
  5289  001338  0100               	movlb	0	; () banked
  5290  00133A  5195               	movf	___flmul@temp& (0+255),w,b
  5291  00133C  0100               	movlb	0	; () banked
  5292  00133E  2791               	addwf	___flmul@prod& (0+255),f,b
  5293  001340  0100               	movlb	0	; () banked
  5294  001342  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5295  001344  0100               	movlb	0	; () banked
  5296  001346  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5297  001348  0E00               	movlw	0
  5298  00134A  0100               	movlb	0	; () banked
  5299  00134C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5300  00134E  0E00               	movlw	0
  5301  001350  0100               	movlb	0	; () banked
  5302  001352  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5303  001354  0100               	movlb	0	; () banked
  5304  001356  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5305  001358  0100               	movlb	0	; () banked
  5306  00135A  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5307  00135C  CFF3 F095          	movff	prodl,___flmul@temp
  5308  001360  CFF4 F096          	movff	prodh,___flmul@temp+1
  5309                           
  5310                           ; BSR set to: 0
  5311  001364  0100               	movlb	0	; () banked
  5312  001366  5195               	movf	___flmul@temp& (0+255),w,b
  5313  001368  0100               	movlb	0	; () banked
  5314  00136A  6F86               	movwf	??___flmul& (0+255),b
  5315  00136C  0100               	movlb	0	; () banked
  5316  00136E  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5317  001370  0100               	movlb	0	; () banked
  5318  001372  6F87               	movwf	(??___flmul+1)& (0+255),b
  5319  001374  0100               	movlb	0	; () banked
  5320  001376  6B88               	clrf	(??___flmul+2)& (0+255),b
  5321  001378  0100               	movlb	0	; () banked
  5322  00137A  6B89               	clrf	(??___flmul+3)& (0+255),b
  5323  00137C  C088  F089         	movff	??___flmul+2,??___flmul+3
  5324  001380  C087  F088         	movff	??___flmul+1,??___flmul+2
  5325  001384  C086  F087         	movff	??___flmul,??___flmul+1
  5326  001388  0100               	movlb	0	; () banked
  5327  00138A  6B86               	clrf	??___flmul& (0+255),b
  5328  00138C  0100               	movlb	0	; () banked
  5329  00138E  5186               	movf	??___flmul& (0+255),w,b
  5330  001390  0100               	movlb	0	; () banked
  5331  001392  2791               	addwf	___flmul@prod& (0+255),f,b
  5332  001394  0100               	movlb	0	; () banked
  5333  001396  5187               	movf	(??___flmul+1)& (0+255),w,b
  5334  001398  0100               	movlb	0	; () banked
  5335  00139A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5336  00139C  0100               	movlb	0	; () banked
  5337  00139E  5188               	movf	(??___flmul+2)& (0+255),w,b
  5338  0013A0  0100               	movlb	0	; () banked
  5339  0013A2  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5340  0013A4  0100               	movlb	0	; () banked
  5341  0013A6  5189               	movf	(??___flmul+3)& (0+255),w,b
  5342  0013A8  0100               	movlb	0	; () banked
  5343  0013AA  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5344                           
  5345                           ; BSR set to: 0
  5346  0013AC  C08C  F086         	movff	___flmul@grs,??___flmul
  5347  0013B0  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5348  0013B4  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5349  0013B8  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5350  0013BC  0E19               	movlw	25
  5351  0013BE  D006               	goto	u4930
  5352  0013C0                     u4935:
  5353  0013C0  0100               	movlb	0	; () banked
  5354  0013C2  90D8               	bcf	status,0,c
  5355  0013C4  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5356  0013C6  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5357  0013C8  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5358  0013CA  3386               	rrcf	??___flmul& (0+255),f,b
  5359  0013CC                     u4930:
  5360  0013CC  2EE8               	decfsz	wreg,f,c
  5361  0013CE  D7F8               	goto	u4935
  5362  0013D0  0100               	movlb	0	; () banked
  5363  0013D2  5186               	movf	??___flmul& (0+255),w,b
  5364  0013D4  0100               	movlb	0	; () banked
  5365  0013D6  2791               	addwf	___flmul@prod& (0+255),f,b
  5366  0013D8  0100               	movlb	0	; () banked
  5367  0013DA  5187               	movf	(??___flmul+1)& (0+255),w,b
  5368  0013DC  0100               	movlb	0	; () banked
  5369  0013DE  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5370  0013E0  0100               	movlb	0	; () banked
  5371  0013E2  5188               	movf	(??___flmul+2)& (0+255),w,b
  5372  0013E4  0100               	movlb	0	; () banked
  5373  0013E6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5374  0013E8  0100               	movlb	0	; () banked
  5375  0013EA  5189               	movf	(??___flmul+3)& (0+255),w,b
  5376  0013EC  0100               	movlb	0	; () banked
  5377  0013EE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  0013F0  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5381  0013F4  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5382  0013F8  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5383  0013FC  0100               	movlb	0	; () banked
  5384  0013FE  6B8C               	clrf	___flmul@grs& (0+255),b
  5385                           
  5386                           ; BSR set to: 0
  5387  001400  0100               	movlb	0	; () banked
  5388  001402  518B               	movf	___flmul@aexp& (0+255),w,b
  5389  001404  C090  F086         	movff	___flmul@bexp,??___flmul
  5390  001408  0100               	movlb	0	; () banked
  5391  00140A  6B87               	clrf	(??___flmul+1)& (0+255),b
  5392  00140C  0100               	movlb	0	; () banked
  5393  00140E  2786               	addwf	??___flmul& (0+255),f,b
  5394  001410  0E00               	movlw	0
  5395  001412  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5396  001414  0E82               	movlw	130
  5397  001416  0100               	movlb	0	; () banked
  5398  001418  2586               	addwf	??___flmul& (0+255),w,b
  5399  00141A  0100               	movlb	0	; () banked
  5400  00141C  6F95               	movwf	___flmul@temp& (0+255),b
  5401  00141E  0EFF               	movlw	255
  5402  001420  0100               	movlb	0	; () banked
  5403  001422  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5404  001424  0100               	movlb	0	; () banked
  5405  001426  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5406  001428  D015               	goto	l4464
  5407  00142A                     l4458:
  5408                           
  5409                           ; BSR set to: 0
  5410  00142A  0100               	movlb	0	; () banked
  5411  00142C  90D8               	bcf	status,0,c
  5412  00142E  3791               	rlcf	___flmul@prod& (0+255),f,b
  5413  001430  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5414  001432  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5415  001434  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5416                           
  5417                           ; BSR set to: 0
  5418  001436  0100               	movlb	0	; () banked
  5419  001438  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5420  00143A  D002               	goto	l1039
  5421                           
  5422                           ; BSR set to: 0
  5423  00143C  0100               	movlb	0	; () banked
  5424  00143E  8191               	bsf	___flmul@prod& (0+255),0,b
  5425  001440                     l1039:
  5426                           
  5427                           ; BSR set to: 0
  5428  001440  0100               	movlb	0	; () banked
  5429  001442  90D8               	bcf	status,0,c
  5430  001444  378C               	rlcf	___flmul@grs& (0+255),f,b
  5431  001446  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5432  001448  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5433  00144A  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5434  00144C  0100               	movlb	0	; () banked
  5435  00144E  0795               	decf	___flmul@temp& (0+255),f,b
  5436  001450  A0D8               	btfss	status,0,c
  5437  001452  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5438  001454                     l4464:
  5439                           
  5440                           ; BSR set to: 0
  5441  001454  0100               	movlb	0	; () banked
  5442  001456  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5443  001458  D7E8               	goto	l4458
  5444                           
  5445                           ; BSR set to: 0
  5446                           
  5447                           ; BSR set to: 0
  5448  00145A  0E00               	movlw	0
  5449  00145C  0100               	movlb	0	; () banked
  5450  00145E  6F8B               	movwf	___flmul@aexp& (0+255),b
  5451                           
  5452                           ; BSR set to: 0
  5453  001460  0100               	movlb	0	; () banked
  5454  001462  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5455  001464  D024               	goto	l1041
  5456                           
  5457                           ; BSR set to: 0
  5458  001466  0EFF               	movlw	255
  5459  001468  0100               	movlb	0	; () banked
  5460  00146A  158C               	andwf	___flmul@grs& (0+255),w,b
  5461  00146C  0100               	movlb	0	; () banked
  5462  00146E  6F86               	movwf	??___flmul& (0+255),b
  5463  001470  0EFF               	movlw	255
  5464  001472  0100               	movlb	0	; () banked
  5465  001474  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5466  001476  0100               	movlb	0	; () banked
  5467  001478  6F87               	movwf	(??___flmul+1)& (0+255),b
  5468  00147A  0EFF               	movlw	255
  5469  00147C  0100               	movlb	0	; () banked
  5470  00147E  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5471  001480  0100               	movlb	0	; () banked
  5472  001482  6F88               	movwf	(??___flmul+2)& (0+255),b
  5473  001484  0E7F               	movlw	127
  5474  001486  0100               	movlb	0	; () banked
  5475  001488  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5476  00148A  0100               	movlb	0	; () banked
  5477  00148C  6F89               	movwf	(??___flmul+3)& (0+255),b
  5478  00148E  0100               	movlb	0	; () banked
  5479  001490  5186               	movf	??___flmul& (0+255),w,b
  5480  001492  0100               	movlb	0	; () banked
  5481  001494  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5482  001496  0100               	movlb	0	; () banked
  5483  001498  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5484  00149A  0100               	movlb	0	; () banked
  5485  00149C  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5486  00149E  A4D8               	btfss	status,2,c
  5487  0014A0  D003               	goto	l4474
  5488                           
  5489                           ; BSR set to: 0
  5490                           
  5491                           ; BSR set to: 0
  5492  0014A2  0100               	movlb	0	; () banked
  5493  0014A4  A191               	btfss	___flmul@prod& (0+255),0,b
  5494  0014A6  D003               	goto	l1041
  5495  0014A8                     l4474:
  5496                           
  5497                           ; BSR set to: 0
  5498  0014A8  0E01               	movlw	1
  5499  0014AA  0100               	movlb	0	; () banked
  5500  0014AC  6F8B               	movwf	___flmul@aexp& (0+255),b
  5501  0014AE                     l1041:
  5502                           
  5503                           ; BSR set to: 0
  5504  0014AE  0100               	movlb	0	; () banked
  5505  0014B0  518B               	movf	___flmul@aexp& (0+255),w,b
  5506  0014B2  0100               	movlb	0	; () banked
  5507  0014B4  B4D8               	btfsc	status,2,c
  5508  0014B6  D023               	goto	l4484
  5509                           
  5510                           ; BSR set to: 0
  5511  0014B8  0E01               	movlw	1
  5512  0014BA  0100               	movlb	0	; () banked
  5513  0014BC  2791               	addwf	___flmul@prod& (0+255),f,b
  5514  0014BE  0E00               	movlw	0
  5515  0014C0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5516  0014C2  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5517  0014C4  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5518                           
  5519                           ; BSR set to: 0
  5520  0014C6  0100               	movlb	0	; () banked
  5521  0014C8  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  5522  0014CA  D019               	goto	l4484
  5523                           
  5524                           ; BSR set to: 0
  5525  0014CC  C091  F086         	movff	___flmul@prod,??___flmul
  5526  0014D0  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  5527  0014D4  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  5528  0014D8  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  5529  0014DC  0100               	movlb	0	; () banked
  5530  0014DE  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  5531  0014E0  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5532  0014E2  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5533  0014E4  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5534  0014E6  3386               	rrcf	??___flmul& (0+255),f,b
  5535  0014E8  C086  F091         	movff	??___flmul,___flmul@prod
  5536  0014EC  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  5537  0014F0  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  5538  0014F4  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  5539                           
  5540                           ; BSR set to: 0
  5541  0014F8  0100               	movlb	0	; () banked
  5542  0014FA  4B95               	infsnz	___flmul@temp& (0+255),f,b
  5543  0014FC  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  5544  0014FE                     l4484:
  5545                           
  5546                           ; BSR set to: 0
  5547  0014FE  0100               	movlb	0	; () banked
  5548  001500  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5549  001502  D010               	goto	l4488
  5550  001504  0100               	movlb	0	; () banked
  5551  001506  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5552  001508  E104               	bnz	u5010
  5553  00150A  0100               	movlb	0	; () banked
  5554  00150C  2995               	incf	___flmul@temp& (0+255),w,b
  5555  00150E  A0D8               	btfss	status,0,c
  5556  001510  D009               	goto	l4488
  5557  001512                     u5010:
  5558                           
  5559                           ; BSR set to: 0
  5560  001512  0E00               	movlw	0
  5561  001514  0100               	movlb	0	; () banked
  5562  001516  6F91               	movwf	___flmul@prod& (0+255),b
  5563  001518  0E00               	movlw	0
  5564  00151A  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5565  00151C  0E80               	movlw	128
  5566  00151E  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5567  001520  0E7F               	movlw	127
  5568  001522  D02B               	goto	L7
  5569  001524                     l4488:
  5570                           
  5571                           ; BSR set to: 0
  5572  001524  0100               	movlb	0	; () banked
  5573  001526  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5574  001528  D007               	goto	l4490
  5575  00152A  0100               	movlb	0	; () banked
  5576  00152C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5577  00152E  E111               	bnz	l1049
  5578  001530  0100               	movlb	0	; () banked
  5579  001532  0595               	decf	___flmul@temp& (0+255),w,b
  5580  001534  B0D8               	btfsc	status,0,c
  5581  001536  D00D               	goto	l1049
  5582  001538                     l4490:
  5583                           
  5584                           ; BSR set to: 0
  5585  001538  0E00               	movlw	0
  5586  00153A  0100               	movlb	0	; () banked
  5587  00153C  6F91               	movwf	___flmul@prod& (0+255),b
  5588  00153E  0E00               	movlw	0
  5589  001540  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5590  001542  0E00               	movlw	0
  5591  001544  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5592  001546  0E00               	movlw	0
  5593  001548  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5594  00154A  0E00               	movlw	0
  5595  00154C  0100               	movlb	0	; () banked
  5596  00154E  6F8A               	movwf	___flmul@sign& (0+255),b
  5597  001550  D015               	goto	l4500
  5598  001552                     l1049:
  5599                           
  5600                           ; BSR set to: 0
  5601  001552  C095  F090         	movff	___flmul@temp,___flmul@bexp
  5602                           
  5603                           ; BSR set to: 0
  5604  001556  0EFF               	movlw	255
  5605  001558  0100               	movlb	0	; () banked
  5606  00155A  1791               	andwf	___flmul@prod& (0+255),f,b
  5607  00155C  0EFF               	movlw	255
  5608  00155E  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  5609  001560  0E7F               	movlw	127
  5610  001562  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  5611  001564  0E00               	movlw	0
  5612  001566  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615  001568  0100               	movlb	0	; () banked
  5616  00156A  A190               	btfss	___flmul@bexp& (0+255),0,b
  5617  00156C  D002               	goto	l4498
  5618                           
  5619                           ; BSR set to: 0
  5620  00156E  0100               	movlb	0	; () banked
  5621  001570  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  5622  001572                     l4498:
  5623                           
  5624                           ; BSR set to: 0
  5625  001572  0100               	movlb	0	; () banked
  5626  001574  90D8               	bcf	status,0,c
  5627  001576  3190               	rrcf	___flmul@bexp& (0+255),w,b
  5628  001578  0100               	movlb	0	; () banked
  5629  00157A                     L7:
  5630  00157A  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5631  00157C                     l4500:
  5632                           
  5633                           ; BSR set to: 0
  5634  00157C  0100               	movlb	0	; () banked
  5635  00157E  518A               	movf	___flmul@sign& (0+255),w,b
  5636  001580  0100               	movlb	0	; () banked
  5637  001582  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5638                           
  5639                           ; BSR set to: 0
  5640  001584  C091  F07E         	movff	___flmul@prod,?___flmul
  5641  001588  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  5642  00158C  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  5643  001590  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  5644  001594  0012               	return	
  5645  001596                     __end_of___flmul:
  5646                           	opt stack 0
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8
  5661                           
  5662 ;; *************** function ___awmod *****************
  5663 ;; Defined at:
  5664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  dividend        2   24[COMRAM] int 
  5667 ;;  divisor         2   26[COMRAM] int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  sign            1   29[COMRAM] unsigned char 
  5670 ;;  counter         1   28[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  2   24[COMRAM] int 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5680 ;;      Params:         4       0       0       0
  5681 ;;      Locals:         2       0       0       0
  5682 ;;      Temps:          0       0       0       0
  5683 ;;      Totals:         6       0       0       0
  5684 ;;Total ram usage:        6 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    4
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_fround
  5691 ;;		_scale
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text16
  5696  002DCE                     __ptext16:
  5697                           	opt stack 0
  5698  002DCE                     ___awmod:
  5699                           	opt stack 23
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;incstack = 0
  5703  002DCE  0E00               	movlw	0
  5704  002DD0  6E41               	movwf	___awmod@sign,c
  5705  002DD2  AE3D               	btfss	___awmod@dividend+1,7,c
  5706  002DD4  D006               	goto	l4558
  5707  002DD6  6C3C               	negf	___awmod@dividend,c
  5708  002DD8  1E3D               	comf	___awmod@dividend+1,f,c
  5709  002DDA  B0D8               	btfsc	status,0,c
  5710  002DDC  2A3D               	incf	___awmod@dividend+1,f,c
  5711  002DDE  0E01               	movlw	1
  5712  002DE0  6E41               	movwf	___awmod@sign,c
  5713  002DE2                     l4558:
  5714  002DE2  AE3F               	btfss	___awmod@divisor+1,7,c
  5715  002DE4  D004               	goto	l4562
  5716  002DE6  6C3E               	negf	___awmod@divisor,c
  5717  002DE8  1E3F               	comf	___awmod@divisor+1,f,c
  5718  002DEA  B0D8               	btfsc	status,0,c
  5719  002DEC  2A3F               	incf	___awmod@divisor+1,f,c
  5720  002DEE                     l4562:
  5721  002DEE  503E               	movf	___awmod@divisor,w,c
  5722  002DF0  103F               	iorwf	___awmod@divisor+1,w,c
  5723  002DF2  B4D8               	btfsc	status,2,c
  5724  002DF4  D018               	goto	l4578
  5725  002DF6  0E01               	movlw	1
  5726  002DF8  6E40               	movwf	___awmod@counter,c
  5727  002DFA  D004               	goto	l4568
  5728  002DFC                     l4566:
  5729  002DFC  90D8               	bcf	status,0,c
  5730  002DFE  363E               	rlcf	___awmod@divisor,f,c
  5731  002E00  363F               	rlcf	___awmod@divisor+1,f,c
  5732  002E02  2A40               	incf	___awmod@counter,f,c
  5733  002E04                     l4568:
  5734  002E04  AE3F               	btfss	___awmod@divisor+1,7,c
  5735  002E06  D7FA               	goto	l4566
  5736  002E08                     l4570:
  5737  002E08  503E               	movf	___awmod@divisor,w,c
  5738  002E0A  5C3C               	subwf	___awmod@dividend,w,c
  5739  002E0C  503F               	movf	___awmod@divisor+1,w,c
  5740  002E0E  583D               	subwfb	___awmod@dividend+1,w,c
  5741  002E10  A0D8               	btfss	status,0,c
  5742  002E12  D004               	goto	l4574
  5743  002E14  503E               	movf	___awmod@divisor,w,c
  5744  002E16  5E3C               	subwf	___awmod@dividend,f,c
  5745  002E18  503F               	movf	___awmod@divisor+1,w,c
  5746  002E1A  5A3D               	subwfb	___awmod@dividend+1,f,c
  5747  002E1C                     l4574:
  5748  002E1C  90D8               	bcf	status,0,c
  5749  002E1E  323F               	rrcf	___awmod@divisor+1,f,c
  5750  002E20  323E               	rrcf	___awmod@divisor,f,c
  5751  002E22  2E40               	decfsz	___awmod@counter,f,c
  5752  002E24  D7F1               	goto	l4570
  5753  002E26                     l4578:
  5754  002E26  5041               	movf	___awmod@sign,w,c
  5755  002E28  B4D8               	btfsc	status,2,c
  5756  002E2A  D004               	goto	l4582
  5757  002E2C  6C3C               	negf	___awmod@dividend,c
  5758  002E2E  1E3D               	comf	___awmod@dividend+1,f,c
  5759  002E30  B0D8               	btfsc	status,0,c
  5760  002E32  2A3D               	incf	___awmod@dividend+1,f,c
  5761  002E34                     l4582:
  5762  002E34  C03C  F03C         	movff	___awmod@dividend,?___awmod
  5763  002E38  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  5764  002E3C  0012               	return	
  5765  002E3E                     __end_of___awmod:
  5766                           	opt stack 0
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           intcon	equ	0xFF2
  5774                           postinc0	equ	0xFEE
  5775                           wreg	equ	0xFE8
  5776                           indf2	equ	0xFDF
  5777                           postinc2	equ	0xFDE
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function ___awdiv *****************
  5783 ;; Defined at:
  5784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  dividend        2   16[BANK0 ] int 
  5787 ;;  divisor         2   18[BANK0 ] int 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  quotient        2   22[BANK0 ] int 
  5790 ;;  sign            1   21[BANK0 ] unsigned char 
  5791 ;;  counter         1   20[BANK0 ] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  2   16[BANK0 ] int 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2, status,0
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5801 ;;      Params:         0       4       0       0
  5802 ;;      Locals:         0       4       0       0
  5803 ;;      Temps:          0       0       0       0
  5804 ;;      Totals:         0       8       0       0
  5805 ;;Total ram usage:        8 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    4
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_fround
  5812 ;;		_scale
  5813 ;;		_sprintf
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text17
  5818  002A90                     __ptext17:
  5819                           	opt stack 0
  5820  002A90                     ___awdiv:
  5821                           	opt stack 23
  5822                           
  5823                           ;incstack = 0
  5824  002A90  0E00               	movlw	0
  5825  002A92  0100               	movlb	0	; () banked
  5826  002A94  6F75               	movwf	___awdiv@sign& (0+255),b
  5827                           
  5828                           ; BSR set to: 0
  5829  002A96  0100               	movlb	0	; () banked
  5830  002A98  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5831  002A9A  D008               	goto	l4514
  5832                           
  5833                           ; BSR set to: 0
  5834  002A9C  0100               	movlb	0	; () banked
  5835  002A9E  6D72               	negf	___awdiv@divisor& (0+255),b
  5836  002AA0  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5837  002AA2  B0D8               	btfsc	status,0,c
  5838  002AA4  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5839                           
  5840                           ; BSR set to: 0
  5841  002AA6  0E01               	movlw	1
  5842  002AA8  0100               	movlb	0	; () banked
  5843  002AAA  6F75               	movwf	___awdiv@sign& (0+255),b
  5844  002AAC                     l4514:
  5845                           
  5846                           ; BSR set to: 0
  5847  002AAC  0100               	movlb	0	; () banked
  5848  002AAE  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5849  002AB0  D008               	goto	l4520
  5850                           
  5851                           ; BSR set to: 0
  5852  002AB2  0100               	movlb	0	; () banked
  5853  002AB4  6D70               	negf	___awdiv@dividend& (0+255),b
  5854  002AB6  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5855  002AB8  B0D8               	btfsc	status,0,c
  5856  002ABA  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5857                           
  5858                           ; BSR set to: 0
  5859  002ABC  0E01               	movlw	1
  5860  002ABE  0100               	movlb	0	; () banked
  5861  002AC0  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  5862  002AC2                     l4520:
  5863                           
  5864                           ; BSR set to: 0
  5865  002AC2  0E00               	movlw	0
  5866  002AC4  0100               	movlb	0	; () banked
  5867  002AC6  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  5868  002AC8  0E00               	movlw	0
  5869  002ACA  6F76               	movwf	___awdiv@quotient& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872  002ACC  0100               	movlb	0	; () banked
  5873  002ACE  5172               	movf	___awdiv@divisor& (0+255),w,b
  5874  002AD0  0100               	movlb	0	; () banked
  5875  002AD2  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5876  002AD4  B4D8               	btfsc	status,2,c
  5877  002AD6  D02C               	goto	l4542
  5878                           
  5879                           ; BSR set to: 0
  5880  002AD8  0E01               	movlw	1
  5881  002ADA  0100               	movlb	0	; () banked
  5882  002ADC  6F74               	movwf	___awdiv@counter& (0+255),b
  5883  002ADE  D006               	goto	l4528
  5884  002AE0                     l4526:
  5885                           
  5886                           ; BSR set to: 0
  5887  002AE0  0100               	movlb	0	; () banked
  5888  002AE2  90D8               	bcf	status,0,c
  5889  002AE4  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  5890  002AE6  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5891  002AE8  0100               	movlb	0	; () banked
  5892  002AEA  2B74               	incf	___awdiv@counter& (0+255),f,b
  5893  002AEC                     l4528:
  5894                           
  5895                           ; BSR set to: 0
  5896  002AEC  0100               	movlb	0	; () banked
  5897  002AEE  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5898  002AF0  D7F7               	goto	l4526
  5899  002AF2                     l4530:
  5900                           
  5901                           ; BSR set to: 0
  5902  002AF2  0100               	movlb	0	; () banked
  5903  002AF4  90D8               	bcf	status,0,c
  5904  002AF6  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  5905  002AF8  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5906                           
  5907                           ; BSR set to: 0
  5908  002AFA  0100               	movlb	0	; () banked
  5909  002AFC  5172               	movf	___awdiv@divisor& (0+255),w,b
  5910  002AFE  0100               	movlb	0	; () banked
  5911  002B00  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  5912  002B02  0100               	movlb	0	; () banked
  5913  002B04  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5914  002B06  0100               	movlb	0	; () banked
  5915  002B08  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5916  002B0A  A0D8               	btfss	status,0,c
  5917  002B0C  D00A               	goto	l4538
  5918                           
  5919                           ; BSR set to: 0
  5920  002B0E  0100               	movlb	0	; () banked
  5921  002B10  5172               	movf	___awdiv@divisor& (0+255),w,b
  5922  002B12  0100               	movlb	0	; () banked
  5923  002B14  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  5924  002B16  0100               	movlb	0	; () banked
  5925  002B18  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5926  002B1A  0100               	movlb	0	; () banked
  5927  002B1C  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5928                           
  5929                           ; BSR set to: 0
  5930  002B1E  0100               	movlb	0	; () banked
  5931  002B20  8176               	bsf	___awdiv@quotient& (0+255),0,b
  5932  002B22                     l4538:
  5933                           
  5934                           ; BSR set to: 0
  5935  002B22  0100               	movlb	0	; () banked
  5936  002B24  90D8               	bcf	status,0,c
  5937  002B26  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5938  002B28  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  5939                           
  5940                           ; BSR set to: 0
  5941  002B2A  0100               	movlb	0	; () banked
  5942  002B2C  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  5943  002B2E  D7E1               	goto	l4530
  5944  002B30                     l4542:
  5945                           
  5946                           ; BSR set to: 0
  5947  002B30  0100               	movlb	0	; () banked
  5948  002B32  5175               	movf	___awdiv@sign& (0+255),w,b
  5949  002B34  0100               	movlb	0	; () banked
  5950  002B36  B4D8               	btfsc	status,2,c
  5951  002B38  D005               	goto	l4546
  5952                           
  5953                           ; BSR set to: 0
  5954  002B3A  0100               	movlb	0	; () banked
  5955  002B3C  6D76               	negf	___awdiv@quotient& (0+255),b
  5956  002B3E  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5957  002B40  B0D8               	btfsc	status,0,c
  5958  002B42  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5959  002B44                     l4546:
  5960                           
  5961                           ; BSR set to: 0
  5962  002B44  C076  F070         	movff	___awdiv@quotient,?___awdiv
  5963  002B48  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  5964  002B4C  0012               	return	
  5965  002B4E                     __end_of___awdiv:
  5966                           	opt stack 0
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           postinc0	equ	0xFEE
  5975                           wreg	equ	0xFE8
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           fsr2h	equ	0xFDA
  5979                           fsr2l	equ	0xFD9
  5980                           status	equ	0xFD8
  5981                           
  5982 ;; *************** function __tdiv_to_l_ *****************
  5983 ;; Defined at:
  5984 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  f1              4   16[BANK0 ] float 
  5987 ;;  f2              4   20[BANK0 ] float 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  quot            4   24[BANK0 ] unsigned long 
  5990 ;;  exp1            1   29[BANK0 ] unsigned char 
  5991 ;;  cntr            1   28[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4   16[BANK0 ] unsigned long 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6001 ;;      Params:         0       8       0       0
  6002 ;;      Locals:         0       6       0       0
  6003 ;;      Temps:          3       0       0       0
  6004 ;;      Totals:         3      14       0       0
  6005 ;;Total ram usage:       17 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    4
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_sprintf
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text18
  6016  0020EA                     __ptext18:
  6017                           	opt stack 0
  6018  0020EA                     __tdiv_to_l_:
  6019                           	opt stack 24
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;incstack = 0
  6023  0020EA  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6024  0020EE  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6025  0020F0  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6026  0020F2  0100               	movlb	0	; () banked
  6027  0020F4  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6028  0020F6  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6029  0020F8  E301               	bnc	u5251
  6030  0020FA  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6031  0020FC                     u5251:
  6032  0020FC  503C               	movf	??__tdiv_to_l_,w,c
  6033  0020FE  0100               	movlb	0	; () banked
  6034  002100  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6035  002102  0100               	movlb	0	; () banked
  6036  002104  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6037  002106  A4D8               	btfss	status,2,c
  6038  002108  D00A               	goto	l4686
  6039                           
  6040                           ; BSR set to: 0
  6041  00210A  0E00               	movlw	0
  6042  00210C  0100               	movlb	0	; () banked
  6043  00210E  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6044  002110  0E00               	movlw	0
  6045  002112  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6046  002114  0E00               	movlw	0
  6047  002116  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6048  002118  0E00               	movlw	0
  6049  00211A  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052  00211C  0012               	return	
  6053  00211E                     l4686:
  6054                           
  6055                           ; BSR set to: 0
  6056  00211E  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6057  002122  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6058  002124  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6059  002126  0100               	movlb	0	; () banked
  6060  002128  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6061  00212A  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6062  00212C  E301               	bnc	u5271
  6063  00212E  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6064  002130                     u5271:
  6065  002130  503C               	movf	??__tdiv_to_l_,w,c
  6066  002132  0100               	movlb	0	; () banked
  6067  002134  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6068  002136  0100               	movlb	0	; () banked
  6069  002138  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6070  00213A  A4D8               	btfss	status,2,c
  6071  00213C  D00A               	goto	l4692
  6072                           
  6073                           ; BSR set to: 0
  6074  00213E  0E00               	movlw	0
  6075  002140  0100               	movlb	0	; () banked
  6076  002142  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6077  002144  0E00               	movlw	0
  6078  002146  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6079  002148  0E00               	movlw	0
  6080  00214A  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6081  00214C  0E00               	movlw	0
  6082  00214E  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6083                           
  6084                           ; BSR set to: 0
  6085  002150  0012               	return	
  6086  002152                     l4692:
  6087                           
  6088                           ; BSR set to: 0
  6089  002152  0100               	movlb	0	; () banked
  6090  002154  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6091                           
  6092                           ; BSR set to: 0
  6093  002156  0EFF               	movlw	255
  6094  002158  0100               	movlb	0	; () banked
  6095  00215A  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6096  00215C  0EFF               	movlw	255
  6097  00215E  0100               	movlb	0	; () banked
  6098  002160  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6099  002162  0E00               	movlw	0
  6100  002164  0100               	movlb	0	; () banked
  6101  002166  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6102  002168  0100               	movlb	0	; () banked
  6103  00216A  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6104                           
  6105                           ; BSR set to: 0
  6106  00216C  0EFF               	movlw	255
  6107  00216E  0100               	movlb	0	; () banked
  6108  002170  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6109  002172  0EFF               	movlw	255
  6110  002174  0100               	movlb	0	; () banked
  6111  002176  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6112  002178  0E00               	movlw	0
  6113  00217A  0100               	movlb	0	; () banked
  6114  00217C  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6115                           
  6116                           ; BSR set to: 0
  6117  00217E  0E00               	movlw	0
  6118  002180  0100               	movlb	0	; () banked
  6119  002182  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6120  002184  0E00               	movlw	0
  6121  002186  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6122  002188  0E00               	movlw	0
  6123  00218A  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6124  00218C  0E00               	movlw	0
  6125  00218E  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6126                           
  6127                           ; BSR set to: 0
  6128  002190  0E7F               	movlw	127
  6129  002192  0100               	movlb	0	; () banked
  6130  002194  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6131                           
  6132                           ; BSR set to: 0
  6133  002196  0100               	movlb	0	; () banked
  6134  002198  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6135  00219A  0F98               	addlw	152
  6136  00219C  0100               	movlb	0	; () banked
  6137  00219E  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6138                           
  6139                           ; BSR set to: 0
  6140  0021A0  0E18               	movlw	24
  6141  0021A2  0100               	movlb	0	; () banked
  6142  0021A4  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6143  0021A6                     l756:
  6144                           
  6145                           ; BSR set to: 0
  6146  0021A6  0100               	movlb	0	; () banked
  6147  0021A8  90D8               	bcf	status,0,c
  6148  0021AA  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6149  0021AC  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6150  0021AE  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6151  0021B0  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6152                           
  6153                           ; BSR set to: 0
  6154  0021B2  0100               	movlb	0	; () banked
  6155  0021B4  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6156  0021B6  0100               	movlb	0	; () banked
  6157  0021B8  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6158  0021BA  0100               	movlb	0	; () banked
  6159  0021BC  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6160  0021BE  0100               	movlb	0	; () banked
  6161  0021C0  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6162  0021C2  0100               	movlb	0	; () banked
  6163  0021C4  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6164  0021C6  0100               	movlb	0	; () banked
  6165  0021C8  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6166  0021CA  A0D8               	btfss	status,0,c
  6167  0021CC  D00E               	goto	l757
  6168                           
  6169                           ; BSR set to: 0
  6170  0021CE  0100               	movlb	0	; () banked
  6171  0021D0  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6172  0021D2  0100               	movlb	0	; () banked
  6173  0021D4  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6174  0021D6  0100               	movlb	0	; () banked
  6175  0021D8  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6176  0021DA  0100               	movlb	0	; () banked
  6177  0021DC  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6178  0021DE  0100               	movlb	0	; () banked
  6179  0021E0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6180  0021E2  0100               	movlb	0	; () banked
  6181  0021E4  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6182                           
  6183                           ; BSR set to: 0
  6184  0021E6  0100               	movlb	0	; () banked
  6185  0021E8  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6186  0021EA                     l757:
  6187                           
  6188                           ; BSR set to: 0
  6189  0021EA  0100               	movlb	0	; () banked
  6190  0021EC  90D8               	bcf	status,0,c
  6191  0021EE  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6192  0021F0  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6193  0021F2  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6194                           
  6195                           ; BSR set to: 0
  6196  0021F4  0100               	movlb	0	; () banked
  6197  0021F6  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6198  0021F8  D7D6               	goto	l756
  6199                           
  6200                           ; BSR set to: 0
  6201                           
  6202                           ; BSR set to: 0
  6203  0021FA  0100               	movlb	0	; () banked
  6204  0021FC  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6205  0021FE  D01A               	goto	l4726
  6206                           
  6207                           ; BSR set to: 0
  6208  002200  0100               	movlb	0	; () banked
  6209  002202  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6210  002204  0A80               	xorlw	128
  6211  002206  0F97               	addlw	151
  6212  002208  B0D8               	btfsc	status,0,c
  6213  00220A  D00A               	goto	l4722
  6214                           
  6215                           ; BSR set to: 0
  6216  00220C  0E00               	movlw	0
  6217  00220E  0100               	movlb	0	; () banked
  6218  002210  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6219  002212  0E00               	movlw	0
  6220  002214  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6221  002216  0E00               	movlw	0
  6222  002218  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6223  00221A  0E00               	movlw	0
  6224  00221C  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6225                           
  6226                           ; BSR set to: 0
  6227  00221E  0012               	return	
  6228  002220                     l4722:
  6229                           
  6230                           ; BSR set to: 0
  6231  002220  0100               	movlb	0	; () banked
  6232  002222  90D8               	bcf	status,0,c
  6233  002224  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6234  002226  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6235  002228  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6236  00222A  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  00222C  0100               	movlb	0	; () banked
  6240  00222E  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6241  002230  D7F7               	goto	l4722
  6242                           
  6243                           ; BSR set to: 0
  6244  002232  D01B               	goto	l763
  6245  002234                     l4726:
  6246                           
  6247                           ; BSR set to: 0
  6248  002234  0E17               	movlw	23
  6249  002236  0100               	movlb	0	; () banked
  6250  002238  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6251  00223A  D012               	goto	l4734
  6252                           
  6253                           ; BSR set to: 0
  6254  00223C  0E00               	movlw	0
  6255  00223E  0100               	movlb	0	; () banked
  6256  002240  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6257  002242  0E00               	movlw	0
  6258  002244  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6259  002246  0E00               	movlw	0
  6260  002248  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6261  00224A  0E00               	movlw	0
  6262  00224C  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265  00224E  0012               	return	
  6266  002250                     l4732:
  6267                           
  6268                           ; BSR set to: 0
  6269  002250  0100               	movlb	0	; () banked
  6270  002252  90D8               	bcf	status,0,c
  6271  002254  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6272  002256  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6273  002258  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6274  00225A  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6275  00225C  0100               	movlb	0	; () banked
  6276  00225E  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6277  002260                     l4734:
  6278                           
  6279                           ; BSR set to: 0
  6280  002260  0100               	movlb	0	; () banked
  6281  002262  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6282  002264  0100               	movlb	0	; () banked
  6283  002266  A4D8               	btfss	status,2,c
  6284  002268  D7F3               	goto	l4732
  6285  00226A                     l763:
  6286                           
  6287                           ; BSR set to: 0
  6288  00226A  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6289  00226E  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6290  002272  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6291  002276  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6292                           
  6293                           ; BSR set to: 0
  6294  00227A  0012               	return		;funcret
  6295  00227C                     __end_of__tdiv_to_l_:
  6296                           	opt stack 0
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           indf2	equ	0xFDF
  6307                           postinc2	equ	0xFDE
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function __div_to_l_ *****************
  6313 ;; Defined at:
  6314 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  f1              4   16[BANK0 ] unsigned long 
  6317 ;;  f2              4   20[BANK0 ] unsigned long 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  quot            4   24[COMRAM] unsigned long 
  6320 ;;  exp1            1   29[COMRAM] unsigned char 
  6321 ;;  cntr            1   28[COMRAM] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  4   16[BANK0 ] unsigned long 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6331 ;;      Params:         0       8       0       0
  6332 ;;      Locals:         6       0       0       0
  6333 ;;      Temps:          0       0       0       0
  6334 ;;      Totals:         6       8       0       0
  6335 ;;Total ram usage:       14 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    4
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_sprintf
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text19
  6346  0023EA                     __ptext19:
  6347                           	opt stack 0
  6348  0023EA                     __div_to_l_:
  6349                           	opt stack 24
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;incstack = 0
  6353  0023EA  0100               	movlb	0	; () banked
  6354  0023EC  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6355  0023EE  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6356  0023F0  6E41               	movwf	__div_to_l_@exp1,c
  6357  0023F2  5041               	movf	__div_to_l_@exp1,w,c
  6358  0023F4  A4D8               	btfss	status,2,c
  6359  0023F6  D00A               	goto	l4742
  6360                           
  6361                           ; BSR set to: 0
  6362  0023F8  0E00               	movlw	0
  6363  0023FA  0100               	movlb	0	; () banked
  6364  0023FC  6F70               	movwf	?__div_to_l_& (0+255),b
  6365  0023FE  0E00               	movlw	0
  6366  002400  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6367  002402  0E00               	movlw	0
  6368  002404  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6369  002406  0E00               	movlw	0
  6370  002408  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6371                           
  6372                           ; BSR set to: 0
  6373  00240A  0012               	return	
  6374  00240C                     l4742:
  6375                           
  6376                           ; BSR set to: 0
  6377  00240C  0100               	movlb	0	; () banked
  6378  00240E  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6379  002410  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6380  002412  6E40               	movwf	__div_to_l_@cntr,c
  6381  002414  5040               	movf	__div_to_l_@cntr,w,c
  6382  002416  A4D8               	btfss	status,2,c
  6383  002418  D00A               	goto	l4748
  6384                           
  6385                           ; BSR set to: 0
  6386  00241A  0E00               	movlw	0
  6387  00241C  0100               	movlb	0	; () banked
  6388  00241E  6F70               	movwf	?__div_to_l_& (0+255),b
  6389  002420  0E00               	movlw	0
  6390  002422  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6391  002424  0E00               	movlw	0
  6392  002426  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6393  002428  0E00               	movlw	0
  6394  00242A  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6395                           
  6396                           ; BSR set to: 0
  6397  00242C  0012               	return	
  6398  00242E                     l4748:
  6399                           
  6400                           ; BSR set to: 0
  6401  00242E  0100               	movlb	0	; () banked
  6402  002430  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6403                           
  6404                           ; BSR set to: 0
  6405  002432  0EFF               	movlw	255
  6406  002434  0100               	movlb	0	; () banked
  6407  002436  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6408  002438  0EFF               	movlw	255
  6409  00243A  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6410  00243C  0EFF               	movlw	255
  6411  00243E  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6412  002440  0E00               	movlw	0
  6413  002442  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6414                           
  6415                           ; BSR set to: 0
  6416  002444  0100               	movlb	0	; () banked
  6417  002446  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6418  002448  0EFF               	movlw	255
  6419  00244A  0100               	movlb	0	; () banked
  6420  00244C  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6421  00244E  0EFF               	movlw	255
  6422  002450  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6423  002452  0EFF               	movlw	255
  6424  002454  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6425  002456  0E00               	movlw	0
  6426  002458  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6427                           
  6428                           ; BSR set to: 0
  6429  00245A  0E00               	movlw	0
  6430  00245C  6E3C               	movwf	__div_to_l_@quot,c
  6431  00245E  0E00               	movlw	0
  6432  002460  6E3D               	movwf	__div_to_l_@quot+1,c
  6433  002462  0E00               	movlw	0
  6434  002464  6E3E               	movwf	__div_to_l_@quot+2,c
  6435  002466  0E00               	movlw	0
  6436  002468  6E3F               	movwf	__div_to_l_@quot+3,c
  6437                           
  6438                           ; BSR set to: 0
  6439  00246A  0E7F               	movlw	127
  6440  00246C  5E41               	subwf	__div_to_l_@exp1,f,c
  6441                           
  6442                           ; BSR set to: 0
  6443  00246E  5040               	movf	__div_to_l_@cntr,w,c
  6444  002470  0FA0               	addlw	160
  6445  002472  5E41               	subwf	__div_to_l_@exp1,f,c
  6446                           
  6447                           ; BSR set to: 0
  6448  002474  0E20               	movlw	32
  6449  002476  6E40               	movwf	__div_to_l_@cntr,c
  6450  002478                     l4762:
  6451                           
  6452                           ; BSR set to: 0
  6453  002478  90D8               	bcf	status,0,c
  6454  00247A  363C               	rlcf	__div_to_l_@quot,f,c
  6455  00247C  363D               	rlcf	__div_to_l_@quot+1,f,c
  6456  00247E  363E               	rlcf	__div_to_l_@quot+2,f,c
  6457  002480  363F               	rlcf	__div_to_l_@quot+3,f,c
  6458                           
  6459                           ; BSR set to: 0
  6460  002482  0100               	movlb	0	; () banked
  6461  002484  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6462  002486  0100               	movlb	0	; () banked
  6463  002488  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6464  00248A  0100               	movlb	0	; () banked
  6465  00248C  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6466  00248E  0100               	movlb	0	; () banked
  6467  002490  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6468  002492  0100               	movlb	0	; () banked
  6469  002494  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6470  002496  0100               	movlb	0	; () banked
  6471  002498  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6472  00249A  0100               	movlb	0	; () banked
  6473  00249C  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6474  00249E  0100               	movlb	0	; () banked
  6475  0024A0  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6476  0024A2  A0D8               	btfss	status,0,c
  6477  0024A4  D011               	goto	l4770
  6478                           
  6479                           ; BSR set to: 0
  6480  0024A6  0100               	movlb	0	; () banked
  6481  0024A8  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6482  0024AA  0100               	movlb	0	; () banked
  6483  0024AC  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6484  0024AE  0100               	movlb	0	; () banked
  6485  0024B0  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6486  0024B2  0100               	movlb	0	; () banked
  6487  0024B4  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6488  0024B6  0100               	movlb	0	; () banked
  6489  0024B8  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6490  0024BA  0100               	movlb	0	; () banked
  6491  0024BC  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6492  0024BE  0100               	movlb	0	; () banked
  6493  0024C0  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6494  0024C2  0100               	movlb	0	; () banked
  6495  0024C4  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6496                           
  6497                           ; BSR set to: 0
  6498  0024C6  803C               	bsf	__div_to_l_@quot,0,c
  6499  0024C8                     l4770:
  6500                           
  6501                           ; BSR set to: 0
  6502  0024C8  0100               	movlb	0	; () banked
  6503  0024CA  90D8               	bcf	status,0,c
  6504  0024CC  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6505  0024CE  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6506  0024D0  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6507  0024D2  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6508                           
  6509                           ; BSR set to: 0
  6510  0024D4  2E40               	decfsz	__div_to_l_@cntr,f,c
  6511  0024D6  D7D0               	goto	l4762
  6512                           
  6513                           ; BSR set to: 0
  6514                           
  6515                           ; BSR set to: 0
  6516  0024D8  AE41               	btfss	__div_to_l_@exp1,7,c
  6517  0024DA  D017               	goto	l4786
  6518                           
  6519                           ; BSR set to: 0
  6520  0024DC  5041               	movf	__div_to_l_@exp1,w,c
  6521  0024DE  0A80               	xorlw	128
  6522  0024E0  0F9F               	addlw	159
  6523  0024E2  B0D8               	btfsc	status,0,c
  6524  0024E4  D00A               	goto	l4782
  6525                           
  6526                           ; BSR set to: 0
  6527  0024E6  0E00               	movlw	0
  6528  0024E8  0100               	movlb	0	; () banked
  6529  0024EA  6F70               	movwf	?__div_to_l_& (0+255),b
  6530  0024EC  0E00               	movlw	0
  6531  0024EE  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6532  0024F0  0E00               	movlw	0
  6533  0024F2  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6534  0024F4  0E00               	movlw	0
  6535  0024F6  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538  0024F8  0012               	return	
  6539  0024FA                     l4782:
  6540  0024FA  90D8               	bcf	status,0,c
  6541  0024FC  323F               	rrcf	__div_to_l_@quot+3,f,c
  6542  0024FE  323E               	rrcf	__div_to_l_@quot+2,f,c
  6543  002500  323D               	rrcf	__div_to_l_@quot+1,f,c
  6544  002502  323C               	rrcf	__div_to_l_@quot,f,c
  6545  002504  3E41               	incfsz	__div_to_l_@exp1,f,c
  6546  002506  D7F9               	goto	l4782
  6547  002508  D016               	goto	l659
  6548  00250A                     l4786:
  6549  00250A  0E1F               	movlw	31
  6550  00250C  6441               	cpfsgt	__div_to_l_@exp1,c
  6551  00250E  D010               	goto	l4794
  6552  002510  0E00               	movlw	0
  6553  002512  0100               	movlb	0	; () banked
  6554  002514  6F70               	movwf	?__div_to_l_& (0+255),b
  6555  002516  0E00               	movlw	0
  6556  002518  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6557  00251A  0E00               	movlw	0
  6558  00251C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6559  00251E  0E00               	movlw	0
  6560  002520  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563  002522  0012               	return	
  6564  002524                     l4792:
  6565  002524  90D8               	bcf	status,0,c
  6566  002526  363C               	rlcf	__div_to_l_@quot,f,c
  6567  002528  363D               	rlcf	__div_to_l_@quot+1,f,c
  6568  00252A  363E               	rlcf	__div_to_l_@quot+2,f,c
  6569  00252C  363F               	rlcf	__div_to_l_@quot+3,f,c
  6570  00252E  0641               	decf	__div_to_l_@exp1,f,c
  6571  002530                     l4794:
  6572  002530  5041               	movf	__div_to_l_@exp1,w,c
  6573  002532  A4D8               	btfss	status,2,c
  6574  002534  D7F7               	goto	l4792
  6575  002536                     l659:
  6576  002536  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  6577  00253A  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6578  00253E  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6579  002542  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6580  002546  0012               	return		;funcret
  6581  002548                     __end_of__div_to_l_:
  6582                           	opt stack 0
  6583                           tblptru	equ	0xFF8
  6584                           tblptrh	equ	0xFF7
  6585                           tblptrl	equ	0xFF6
  6586                           tablat	equ	0xFF5
  6587                           prodh	equ	0xFF4
  6588                           prodl	equ	0xFF3
  6589                           intcon	equ	0xFF2
  6590                           postinc0	equ	0xFEE
  6591                           wreg	equ	0xFE8
  6592                           indf2	equ	0xFDF
  6593                           postinc2	equ	0xFDE
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function ___xxtofl *****************
  6599 ;; Defined at:
  6600 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  sign            1    wreg     unsigned char 
  6603 ;;  val             4   16[BANK0 ] long 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  sign            1   24[BANK0 ] unsigned char 
  6606 ;;  arg             4   26[BANK0 ] unsigned long 
  6607 ;;  exp             1   25[BANK0 ] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  4   16[BANK0 ] unsigned char 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6617 ;;      Params:         0       4       0       0
  6618 ;;      Locals:         0       6       0       0
  6619 ;;      Temps:          0       4       0       0
  6620 ;;      Totals:         0      14       0       0
  6621 ;;Total ram usage:       14 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    4
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_main
  6628 ;;		_LCD_Handler
  6629 ;;		_sprintf
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text20
  6634  001F1C                     __ptext20:
  6635                           	opt stack 0
  6636  001F1C                     ___xxtofl:
  6637                           	opt stack 26
  6638                           
  6639                           ;incstack = 0
  6640                           ;___xxtofl@sign stored from wreg
  6641  001F1C  0100               	movlb	0	; () banked
  6642  001F1E  6F78               	movwf	___xxtofl@sign& (0+255),b
  6643  001F20  0100               	movlb	0	; () banked
  6644  001F22  5178               	movf	___xxtofl@sign& (0+255),w,b
  6645  001F24  0100               	movlb	0	; () banked
  6646  001F26  B4D8               	btfsc	status,2,c
  6647  001F28  D01E               	goto	l1054
  6648                           
  6649                           ; BSR set to: 0
  6650  001F2A  0100               	movlb	0	; () banked
  6651  001F2C  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6652  001F2E  D01B               	goto	l1054
  6653                           
  6654                           ; BSR set to: 0
  6655  001F30  C070  F074         	movff	___xxtofl@val,??___xxtofl
  6656  001F34  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  6657  001F38  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  6658  001F3C  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  6659  001F40  0100               	movlb	0	; () banked
  6660  001F42  1F74               	comf	??___xxtofl& (0+255),f,b
  6661  001F44  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  6662  001F46  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  6663  001F48  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  6664  001F4A  2B74               	incf	??___xxtofl& (0+255),f,b
  6665  001F4C  0E00               	movlw	0
  6666  001F4E  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6667  001F50  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6668  001F52  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6669  001F54  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  6670  001F58  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  6671  001F5C  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  6672  001F60  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  6673  001F64  D008               	goto	l4920
  6674  001F66                     l1054:
  6675                           
  6676                           ; BSR set to: 0
  6677  001F66  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  6678  001F6A  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6679  001F6E  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6680  001F72  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6681  001F76                     l4920:
  6682                           
  6683                           ; BSR set to: 0
  6684  001F76  0100               	movlb	0	; () banked
  6685  001F78  5170               	movf	___xxtofl@val& (0+255),w,b
  6686  001F7A  0100               	movlb	0	; () banked
  6687  001F7C  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6688  001F7E  0100               	movlb	0	; () banked
  6689  001F80  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6690  001F82  0100               	movlb	0	; () banked
  6691  001F84  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6692  001F86  A4D8               	btfss	status,2,c
  6693  001F88  D00A               	goto	l4926
  6694                           
  6695                           ; BSR set to: 0
  6696  001F8A  0E00               	movlw	0
  6697  001F8C  0100               	movlb	0	; () banked
  6698  001F8E  6F70               	movwf	?___xxtofl& (0+255),b
  6699  001F90  0E00               	movlw	0
  6700  001F92  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  6701  001F94  0E00               	movlw	0
  6702  001F96  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  6703  001F98  0E00               	movlw	0
  6704  001F9A  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  6705                           
  6706                           ; BSR set to: 0
  6707  001F9C  0012               	return	
  6708  001F9E                     l4926:
  6709                           
  6710                           ; BSR set to: 0
  6711  001F9E  0E96               	movlw	150
  6712  001FA0  0100               	movlb	0	; () banked
  6713  001FA2  6F79               	movwf	___xxtofl@exp& (0+255),b
  6714  001FA4  D008               	goto	l4930
  6715  001FA6                     l4928:
  6716                           
  6717                           ; BSR set to: 0
  6718  001FA6  0100               	movlb	0	; () banked
  6719  001FA8  2B79               	incf	___xxtofl@exp& (0+255),f,b
  6720  001FAA  0100               	movlb	0	; () banked
  6721  001FAC  90D8               	bcf	status,0,c
  6722  001FAE  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6723  001FB0  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6724  001FB2  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6725  001FB4  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  6726  001FB6                     l4930:
  6727                           
  6728                           ; BSR set to: 0
  6729  001FB6  0E00               	movlw	0
  6730  001FB8  0100               	movlb	0	; () banked
  6731  001FBA  157A               	andwf	___xxtofl@arg& (0+255),w,b
  6732  001FBC  0100               	movlb	0	; () banked
  6733  001FBE  6F74               	movwf	??___xxtofl& (0+255),b
  6734  001FC0  0E00               	movlw	0
  6735  001FC2  0100               	movlb	0	; () banked
  6736  001FC4  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6737  001FC6  0100               	movlb	0	; () banked
  6738  001FC8  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  6739  001FCA  0E00               	movlw	0
  6740  001FCC  0100               	movlb	0	; () banked
  6741  001FCE  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6742  001FD0  0100               	movlb	0	; () banked
  6743  001FD2  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  6744  001FD4  0EFE               	movlw	254
  6745  001FD6  0100               	movlb	0	; () banked
  6746  001FD8  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6747  001FDA  0100               	movlb	0	; () banked
  6748  001FDC  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  6749  001FDE  0100               	movlb	0	; () banked
  6750  001FE0  5174               	movf	??___xxtofl& (0+255),w,b
  6751  001FE2  0100               	movlb	0	; () banked
  6752  001FE4  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6753  001FE6  0100               	movlb	0	; () banked
  6754  001FE8  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6755  001FEA  0100               	movlb	0	; () banked
  6756  001FEC  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6757  001FEE  B4D8               	btfsc	status,2,c
  6758  001FF0  D010               	goto	l1061
  6759  001FF2  D7D9               	goto	l4928
  6760  001FF4                     l4932:
  6761                           
  6762                           ; BSR set to: 0
  6763  001FF4  0100               	movlb	0	; () banked
  6764  001FF6  2B79               	incf	___xxtofl@exp& (0+255),f,b
  6765                           
  6766                           ; BSR set to: 0
  6767  001FF8  0E01               	movlw	1
  6768  001FFA  0100               	movlb	0	; () banked
  6769  001FFC  277A               	addwf	___xxtofl@arg& (0+255),f,b
  6770  001FFE  0E00               	movlw	0
  6771  002000  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6772  002002  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6773  002004  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6774                           
  6775                           ; BSR set to: 0
  6776  002006  0100               	movlb	0	; () banked
  6777  002008  90D8               	bcf	status,0,c
  6778  00200A  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6779  00200C  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6780  00200E  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6781  002010  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  6782  002012                     l1061:
  6783                           
  6784                           ; BSR set to: 0
  6785  002012  0E00               	movlw	0
  6786  002014  0100               	movlb	0	; () banked
  6787  002016  157A               	andwf	___xxtofl@arg& (0+255),w,b
  6788  002018  0100               	movlb	0	; () banked
  6789  00201A  6F74               	movwf	??___xxtofl& (0+255),b
  6790  00201C  0E00               	movlw	0
  6791  00201E  0100               	movlb	0	; () banked
  6792  002020  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6793  002022  0100               	movlb	0	; () banked
  6794  002024  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  6795  002026  0E00               	movlw	0
  6796  002028  0100               	movlb	0	; () banked
  6797  00202A  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6798  00202C  0100               	movlb	0	; () banked
  6799  00202E  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  6800  002030  0EFF               	movlw	255
  6801  002032  0100               	movlb	0	; () banked
  6802  002034  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6803  002036  0100               	movlb	0	; () banked
  6804  002038  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  6805  00203A  0100               	movlb	0	; () banked
  6806  00203C  5174               	movf	??___xxtofl& (0+255),w,b
  6807  00203E  0100               	movlb	0	; () banked
  6808  002040  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6809  002042  0100               	movlb	0	; () banked
  6810  002044  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6811  002046  0100               	movlb	0	; () banked
  6812  002048  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6813  00204A  B4D8               	btfsc	status,2,c
  6814  00204C  D009               	goto	l4940
  6815  00204E  D7D2               	goto	l4932
  6816  002050                     l4938:
  6817                           
  6818                           ; BSR set to: 0
  6819  002050  0100               	movlb	0	; () banked
  6820  002052  0779               	decf	___xxtofl@exp& (0+255),f,b
  6821  002054  0100               	movlb	0	; () banked
  6822  002056  90D8               	bcf	status,0,c
  6823  002058  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  6824  00205A  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6825  00205C  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6826  00205E  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6827  002060                     l4940:
  6828                           
  6829                           ; BSR set to: 0
  6830  002060  0100               	movlb	0	; () banked
  6831  002062  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6832  002064  D004               	goto	l1068
  6833                           
  6834                           ; BSR set to: 0
  6835  002066  0E02               	movlw	2
  6836  002068  0100               	movlb	0	; () banked
  6837  00206A  6179               	cpfslt	___xxtofl@exp& (0+255),b
  6838  00206C  D7F1               	goto	l4938
  6839  00206E                     l1068:
  6840                           
  6841                           ; BSR set to: 0
  6842  00206E  0100               	movlb	0	; () banked
  6843  002070  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  6844  002072  D009               	goto	l1069
  6845                           
  6846                           ; BSR set to: 0
  6847  002074  0EFF               	movlw	255
  6848  002076  0100               	movlb	0	; () banked
  6849  002078  177A               	andwf	___xxtofl@arg& (0+255),f,b
  6850  00207A  0EFF               	movlw	255
  6851  00207C  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6852  00207E  0E7F               	movlw	127
  6853  002080  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6854  002082  0EFF               	movlw	255
  6855  002084  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6856  002086                     l1069:
  6857                           
  6858                           ; BSR set to: 0
  6859  002086  0100               	movlb	0	; () banked
  6860  002088  90D8               	bcf	status,0,c
  6861  00208A  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  6862  00208C  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  6863  002090  0100               	movlb	0	; () banked
  6864  002092  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  6865  002094  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  6866  002096  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  6867  002098  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  6868  00209C  0100               	movlb	0	; () banked
  6869  00209E  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  6870  0020A0  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  6871  0020A2  6B74               	clrf	??___xxtofl& (0+255),b
  6872  0020A4  0100               	movlb	0	; () banked
  6873  0020A6  5174               	movf	??___xxtofl& (0+255),w,b
  6874  0020A8  0100               	movlb	0	; () banked
  6875  0020AA  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  6876  0020AC  0100               	movlb	0	; () banked
  6877  0020AE  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  6878  0020B0  0100               	movlb	0	; () banked
  6879  0020B2  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6880  0020B4  0100               	movlb	0	; () banked
  6881  0020B6  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  6882  0020B8  0100               	movlb	0	; () banked
  6883  0020BA  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6884  0020BC  0100               	movlb	0	; () banked
  6885  0020BE  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  6886  0020C0  0100               	movlb	0	; () banked
  6887  0020C2  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6888                           
  6889                           ; BSR set to: 0
  6890  0020C4  0100               	movlb	0	; () banked
  6891  0020C6  5178               	movf	___xxtofl@sign& (0+255),w,b
  6892  0020C8  0100               	movlb	0	; () banked
  6893  0020CA  B4D8               	btfsc	status,2,c
  6894  0020CC  D005               	goto	l4952
  6895                           
  6896                           ; BSR set to: 0
  6897  0020CE  0100               	movlb	0	; () banked
  6898  0020D0  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6899  0020D2  D002               	goto	l4952
  6900                           
  6901                           ; BSR set to: 0
  6902  0020D4  0100               	movlb	0	; () banked
  6903  0020D6  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6904  0020D8                     l4952:
  6905                           
  6906                           ; BSR set to: 0
  6907  0020D8  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  6908  0020DC  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  6909  0020E0  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  6910  0020E4  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  6911  0020E8  0012               	return	
  6912  0020EA                     __end_of___xxtofl:
  6913                           	opt stack 0
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon	equ	0xFF2
  6921                           postinc0	equ	0xFEE
  6922                           wreg	equ	0xFE8
  6923                           indf2	equ	0xFDF
  6924                           postinc2	equ	0xFDE
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function ___llmod *****************
  6930 ;; Defined at:
  6931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  dividend        4   16[BANK0 ] unsigned long 
  6934 ;;  divisor         4   20[BANK0 ] unsigned long 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  counter         1   24[COMRAM] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  4   16[BANK0 ] unsigned long 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6946 ;;      Params:         0       8       0       0
  6947 ;;      Locals:         1       0       0       0
  6948 ;;      Temps:          0       0       0       0
  6949 ;;      Totals:         1       8       0       0
  6950 ;;Total ram usage:        9 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    4
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_sprintf
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text21
  6961  002D3A                     __ptext21:
  6962                           	opt stack 0
  6963  002D3A                     ___llmod:
  6964                           	opt stack 24
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;incstack = 0
  6968  002D3A  0100               	movlb	0	; () banked
  6969  002D3C  5174               	movf	___llmod@divisor& (0+255),w,b
  6970  002D3E  0100               	movlb	0	; () banked
  6971  002D40  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6972  002D42  0100               	movlb	0	; () banked
  6973  002D44  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6974  002D46  0100               	movlb	0	; () banked
  6975  002D48  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6976  002D4A  B4D8               	btfsc	status,2,c
  6977  002D4C  D037               	goto	l862
  6978                           
  6979                           ; BSR set to: 0
  6980  002D4E  0E01               	movlw	1
  6981  002D50  6E3C               	movwf	___llmod@counter,c
  6982  002D52  D007               	goto	l4904
  6983  002D54                     l4902:
  6984                           
  6985                           ; BSR set to: 0
  6986  002D54  0100               	movlb	0	; () banked
  6987  002D56  90D8               	bcf	status,0,c
  6988  002D58  3774               	rlcf	___llmod@divisor& (0+255),f,b
  6989  002D5A  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6990  002D5C  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6991  002D5E  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6992  002D60  2A3C               	incf	___llmod@counter,f,c
  6993  002D62                     l4904:
  6994                           
  6995                           ; BSR set to: 0
  6996  002D62  0100               	movlb	0	; () banked
  6997  002D64  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6998  002D66  D7F6               	goto	l4902
  6999  002D68                     l4906:
  7000                           
  7001                           ; BSR set to: 0
  7002  002D68  0100               	movlb	0	; () banked
  7003  002D6A  5174               	movf	___llmod@divisor& (0+255),w,b
  7004  002D6C  0100               	movlb	0	; () banked
  7005  002D6E  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7006  002D70  0100               	movlb	0	; () banked
  7007  002D72  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7008  002D74  0100               	movlb	0	; () banked
  7009  002D76  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7010  002D78  0100               	movlb	0	; () banked
  7011  002D7A  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7012  002D7C  0100               	movlb	0	; () banked
  7013  002D7E  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7014  002D80  0100               	movlb	0	; () banked
  7015  002D82  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7016  002D84  0100               	movlb	0	; () banked
  7017  002D86  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7018  002D88  A0D8               	btfss	status,0,c
  7019  002D8A  D010               	goto	l4910
  7020                           
  7021                           ; BSR set to: 0
  7022  002D8C  0100               	movlb	0	; () banked
  7023  002D8E  5174               	movf	___llmod@divisor& (0+255),w,b
  7024  002D90  0100               	movlb	0	; () banked
  7025  002D92  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7026  002D94  0100               	movlb	0	; () banked
  7027  002D96  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7028  002D98  0100               	movlb	0	; () banked
  7029  002D9A  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7030  002D9C  0100               	movlb	0	; () banked
  7031  002D9E  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7032  002DA0  0100               	movlb	0	; () banked
  7033  002DA2  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7034  002DA4  0100               	movlb	0	; () banked
  7035  002DA6  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7036  002DA8  0100               	movlb	0	; () banked
  7037  002DAA  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7038  002DAC                     l4910:
  7039                           
  7040                           ; BSR set to: 0
  7041  002DAC  0100               	movlb	0	; () banked
  7042  002DAE  90D8               	bcf	status,0,c
  7043  002DB0  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7044  002DB2  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7045  002DB4  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7046  002DB6  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7047                           
  7048                           ; BSR set to: 0
  7049  002DB8  2E3C               	decfsz	___llmod@counter,f,c
  7050  002DBA  D7D6               	goto	l4906
  7051  002DBC                     l862:
  7052                           
  7053                           ; BSR set to: 0
  7054  002DBC  C070  F070         	movff	___llmod@dividend,?___llmod
  7055  002DC0  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7056  002DC4  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7057  002DC8  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7058                           
  7059                           ; BSR set to: 0
  7060  002DCC  0012               	return		;funcret
  7061  002DCE                     __end_of___llmod:
  7062                           	opt stack 0
  7063                           tblptru	equ	0xFF8
  7064                           tblptrh	equ	0xFF7
  7065                           tblptrl	equ	0xFF6
  7066                           tablat	equ	0xFF5
  7067                           prodh	equ	0xFF4
  7068                           prodl	equ	0xFF3
  7069                           intcon	equ	0xFF2
  7070                           postinc0	equ	0xFEE
  7071                           wreg	equ	0xFE8
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function ___lldiv *****************
  7079 ;; Defined at:
  7080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  dividend        4   16[BANK0 ] unsigned long 
  7083 ;;  divisor         4   20[BANK0 ] unsigned long 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  quotient        4   24[COMRAM] unsigned long 
  7086 ;;  counter         1   28[COMRAM] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  4   16[BANK0 ] unsigned long 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7096 ;;      Params:         0       8       0       0
  7097 ;;      Locals:         5       0       0       0
  7098 ;;      Temps:          0       0       0       0
  7099 ;;      Totals:         5       8       0       0
  7100 ;;Total ram usage:       13 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    4
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_sprintf
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text22
  7111  002B4E                     __ptext22:
  7112                           	opt stack 0
  7113  002B4E                     ___lldiv:
  7114                           	opt stack 24
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;incstack = 0
  7118  002B4E  0E00               	movlw	0
  7119  002B50  6E3C               	movwf	___lldiv@quotient,c
  7120  002B52  0E00               	movlw	0
  7121  002B54  6E3D               	movwf	___lldiv@quotient+1,c
  7122  002B56  0E00               	movlw	0
  7123  002B58  6E3E               	movwf	___lldiv@quotient+2,c
  7124  002B5A  0E00               	movlw	0
  7125  002B5C  6E3F               	movwf	___lldiv@quotient+3,c
  7126  002B5E  0100               	movlb	0	; () banked
  7127  002B60  5174               	movf	___lldiv@divisor& (0+255),w,b
  7128  002B62  0100               	movlb	0	; () banked
  7129  002B64  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7130  002B66  0100               	movlb	0	; () banked
  7131  002B68  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7132  002B6A  0100               	movlb	0	; () banked
  7133  002B6C  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7134  002B6E  B4D8               	btfsc	status,2,c
  7135  002B70  D03D               	goto	l852
  7136                           
  7137                           ; BSR set to: 0
  7138  002B72  0E01               	movlw	1
  7139  002B74  6E40               	movwf	___lldiv@counter,c
  7140  002B76  D007               	goto	l4884
  7141  002B78                     l4882:
  7142                           
  7143                           ; BSR set to: 0
  7144  002B78  0100               	movlb	0	; () banked
  7145  002B7A  90D8               	bcf	status,0,c
  7146  002B7C  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7147  002B7E  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7148  002B80  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7149  002B82  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7150  002B84  2A40               	incf	___lldiv@counter,f,c
  7151  002B86                     l4884:
  7152                           
  7153                           ; BSR set to: 0
  7154  002B86  0100               	movlb	0	; () banked
  7155  002B88  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7156  002B8A  D7F6               	goto	l4882
  7157  002B8C                     l4886:
  7158                           
  7159                           ; BSR set to: 0
  7160  002B8C  90D8               	bcf	status,0,c
  7161  002B8E  363C               	rlcf	___lldiv@quotient,f,c
  7162  002B90  363D               	rlcf	___lldiv@quotient+1,f,c
  7163  002B92  363E               	rlcf	___lldiv@quotient+2,f,c
  7164  002B94  363F               	rlcf	___lldiv@quotient+3,f,c
  7165                           
  7166                           ; BSR set to: 0
  7167  002B96  0100               	movlb	0	; () banked
  7168  002B98  5174               	movf	___lldiv@divisor& (0+255),w,b
  7169  002B9A  0100               	movlb	0	; () banked
  7170  002B9C  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7171  002B9E  0100               	movlb	0	; () banked
  7172  002BA0  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7173  002BA2  0100               	movlb	0	; () banked
  7174  002BA4  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7175  002BA6  0100               	movlb	0	; () banked
  7176  002BA8  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7177  002BAA  0100               	movlb	0	; () banked
  7178  002BAC  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7179  002BAE  0100               	movlb	0	; () banked
  7180  002BB0  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7181  002BB2  0100               	movlb	0	; () banked
  7182  002BB4  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7183  002BB6  A0D8               	btfss	status,0,c
  7184  002BB8  D011               	goto	l4894
  7185                           
  7186                           ; BSR set to: 0
  7187  002BBA  0100               	movlb	0	; () banked
  7188  002BBC  5174               	movf	___lldiv@divisor& (0+255),w,b
  7189  002BBE  0100               	movlb	0	; () banked
  7190  002BC0  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7191  002BC2  0100               	movlb	0	; () banked
  7192  002BC4  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7193  002BC6  0100               	movlb	0	; () banked
  7194  002BC8  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7195  002BCA  0100               	movlb	0	; () banked
  7196  002BCC  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7197  002BCE  0100               	movlb	0	; () banked
  7198  002BD0  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7199  002BD2  0100               	movlb	0	; () banked
  7200  002BD4  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7201  002BD6  0100               	movlb	0	; () banked
  7202  002BD8  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7203                           
  7204                           ; BSR set to: 0
  7205  002BDA  803C               	bsf	___lldiv@quotient,0,c
  7206  002BDC                     l4894:
  7207                           
  7208                           ; BSR set to: 0
  7209  002BDC  0100               	movlb	0	; () banked
  7210  002BDE  90D8               	bcf	status,0,c
  7211  002BE0  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7212  002BE2  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7213  002BE4  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7214  002BE6  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7215                           
  7216                           ; BSR set to: 0
  7217  002BE8  2E40               	decfsz	___lldiv@counter,f,c
  7218  002BEA  D7D0               	goto	l4886
  7219  002BEC                     l852:
  7220                           
  7221                           ; BSR set to: 0
  7222  002BEC  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7223  002BF0  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7224  002BF4  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7225  002BF8  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7226                           
  7227                           ; BSR set to: 0
  7228  002BFC  0012               	return		;funcret
  7229  002BFE                     __end_of___lldiv:
  7230                           	opt stack 0
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           postinc0	equ	0xFEE
  7239                           wreg	equ	0xFE8
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function ___fltol *****************
  7247 ;; Defined at:
  7248 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  f1              4   64[BANK0 ] unsigned long 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  exp1            1   73[BANK0 ] unsigned char 
  7253 ;;  sign1           1   72[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  4   64[BANK0 ] long 
  7256 ;; Registers used:
  7257 ;;		wreg, status,2, status,0
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7263 ;;      Params:         0       4       0       0
  7264 ;;      Locals:         0       2       0       0
  7265 ;;      Temps:          0       4       0       0
  7266 ;;      Totals:         0      10       0       0
  7267 ;;Total ram usage:       10 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    4
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_main
  7274 ;;		_sprintf
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text23
  7279  0027BA                     __ptext23:
  7280                           	opt stack 0
  7281  0027BA                     ___fltol:
  7282                           	opt stack 26
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;incstack = 0
  7286  0027BA  0100               	movlb	0	; () banked
  7287  0027BC  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7288  0027BE  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7289  0027C0  0100               	movlb	0	; () banked
  7290  0027C2  6FA9               	movwf	___fltol@exp1& (0+255),b
  7291  0027C4  0100               	movlb	0	; () banked
  7292  0027C6  51A9               	movf	___fltol@exp1& (0+255),w,b
  7293  0027C8  A4D8               	btfss	status,2,c
  7294  0027CA  D00A               	goto	l4838
  7295                           
  7296                           ; BSR set to: 0
  7297  0027CC  0E00               	movlw	0
  7298  0027CE  0100               	movlb	0	; () banked
  7299  0027D0  6FA0               	movwf	?___fltol& (0+255),b
  7300  0027D2  0E00               	movlw	0
  7301  0027D4  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7302  0027D6  0E00               	movlw	0
  7303  0027D8  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7304  0027DA  0E00               	movlw	0
  7305  0027DC  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7306                           
  7307                           ; BSR set to: 0
  7308  0027DE  0012               	return	
  7309  0027E0                     l4838:
  7310                           
  7311                           ; BSR set to: 0
  7312  0027E0  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7313  0027E4  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7314  0027E8  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7315  0027EC  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7316  0027F0  0E20               	movlw	32
  7317  0027F2  D006               	goto	u5480
  7318  0027F4                     u5485:
  7319  0027F4  0100               	movlb	0	; () banked
  7320  0027F6  90D8               	bcf	status,0,c
  7321  0027F8  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7322  0027FA  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7323  0027FC  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7324  0027FE  33A4               	rrcf	??___fltol& (0+255),f,b
  7325  002800                     u5480:
  7326  002800  2EE8               	decfsz	wreg,f,c
  7327  002802  D7F8               	goto	u5485
  7328  002804  0100               	movlb	0	; () banked
  7329  002806  51A4               	movf	??___fltol& (0+255),w,b
  7330  002808  0100               	movlb	0	; () banked
  7331  00280A  6FA8               	movwf	___fltol@sign1& (0+255),b
  7332                           
  7333                           ; BSR set to: 0
  7334  00280C  0100               	movlb	0	; () banked
  7335  00280E  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7336                           
  7337                           ; BSR set to: 0
  7338  002810  0EFF               	movlw	255
  7339  002812  0100               	movlb	0	; () banked
  7340  002814  17A0               	andwf	___fltol@f1& (0+255),f,b
  7341  002816  0EFF               	movlw	255
  7342  002818  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7343  00281A  0EFF               	movlw	255
  7344  00281C  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7345  00281E  0E00               	movlw	0
  7346  002820  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7347                           
  7348                           ; BSR set to: 0
  7349  002822  0E96               	movlw	150
  7350  002824  0100               	movlb	0	; () banked
  7351  002826  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354  002828  0100               	movlb	0	; () banked
  7355  00282A  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7356  00282C  D01A               	goto	l4858
  7357                           
  7358                           ; BSR set to: 0
  7359  00282E  0100               	movlb	0	; () banked
  7360  002830  51A9               	movf	___fltol@exp1& (0+255),w,b
  7361  002832  0A80               	xorlw	128
  7362  002834  0F97               	addlw	151
  7363  002836  B0D8               	btfsc	status,0,c
  7364  002838  D00A               	goto	l4854
  7365                           
  7366                           ; BSR set to: 0
  7367  00283A  0E00               	movlw	0
  7368  00283C  0100               	movlb	0	; () banked
  7369  00283E  6FA0               	movwf	?___fltol& (0+255),b
  7370  002840  0E00               	movlw	0
  7371  002842  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7372  002844  0E00               	movlw	0
  7373  002846  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7374  002848  0E00               	movlw	0
  7375  00284A  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7376                           
  7377                           ; BSR set to: 0
  7378  00284C  0012               	return	
  7379  00284E                     l4854:
  7380                           
  7381                           ; BSR set to: 0
  7382  00284E  0100               	movlb	0	; () banked
  7383  002850  90D8               	bcf	status,0,c
  7384  002852  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7385  002854  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7386  002856  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7387  002858  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 0
  7390  00285A  0100               	movlb	0	; () banked
  7391  00285C  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7392  00285E  D7F7               	goto	l4854
  7393                           
  7394                           ; BSR set to: 0
  7395  002860  D01B               	goto	l4868
  7396  002862                     l4858:
  7397                           
  7398                           ; BSR set to: 0
  7399  002862  0E1F               	movlw	31
  7400  002864  0100               	movlb	0	; () banked
  7401  002866  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7402  002868  D012               	goto	l4866
  7403                           
  7404                           ; BSR set to: 0
  7405  00286A  0E00               	movlw	0
  7406  00286C  0100               	movlb	0	; () banked
  7407  00286E  6FA0               	movwf	?___fltol& (0+255),b
  7408  002870  0E00               	movlw	0
  7409  002872  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7410  002874  0E00               	movlw	0
  7411  002876  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7412  002878  0E00               	movlw	0
  7413  00287A  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416  00287C  0012               	return	
  7417  00287E                     l4864:
  7418                           
  7419                           ; BSR set to: 0
  7420  00287E  0100               	movlb	0	; () banked
  7421  002880  90D8               	bcf	status,0,c
  7422  002882  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7423  002884  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7424  002886  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7425  002888  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7426  00288A  0100               	movlb	0	; () banked
  7427  00288C  07A9               	decf	___fltol@exp1& (0+255),f,b
  7428  00288E                     l4866:
  7429                           
  7430                           ; BSR set to: 0
  7431  00288E  0100               	movlb	0	; () banked
  7432  002890  51A9               	movf	___fltol@exp1& (0+255),w,b
  7433  002892  0100               	movlb	0	; () banked
  7434  002894  A4D8               	btfss	status,2,c
  7435  002896  D7F3               	goto	l4864
  7436  002898                     l4868:
  7437                           
  7438                           ; BSR set to: 0
  7439  002898  0100               	movlb	0	; () banked
  7440  00289A  51A8               	movf	___fltol@sign1& (0+255),w,b
  7441  00289C  0100               	movlb	0	; () banked
  7442  00289E  B4D8               	btfsc	status,2,c
  7443  0028A0  D009               	goto	l4872
  7444                           
  7445                           ; BSR set to: 0
  7446  0028A2  0100               	movlb	0	; () banked
  7447  0028A4  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7448  0028A6  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7449  0028A8  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7450  0028AA  6DA0               	negf	___fltol@f1& (0+255),b
  7451  0028AC  0E00               	movlw	0
  7452  0028AE  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7453  0028B0  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7454  0028B2  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7455  0028B4                     l4872:
  7456                           
  7457                           ; BSR set to: 0
  7458  0028B4  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7459  0028B8  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7460  0028BC  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7461  0028C0  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7462  0028C4  0012               	return	
  7463  0028C6                     __end_of___fltol:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           prodh	equ	0xFF4
  7470                           prodl	equ	0xFF3
  7471                           intcon	equ	0xFF2
  7472                           postinc0	equ	0xFEE
  7473                           wreg	equ	0xFE8
  7474                           indf2	equ	0xFDF
  7475                           postinc2	equ	0xFDE
  7476                           fsr2h	equ	0xFDA
  7477                           fsr2l	equ	0xFD9
  7478                           status	equ	0xFD8
  7479                           
  7480 ;; *************** function ___flsub *****************
  7481 ;; Defined at:
  7482 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  b               4   88[BANK0 ] long 
  7485 ;;  a               4   92[BANK0 ] long 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  4   88[BANK0 ] long 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7497 ;;      Params:         0       8       0       0
  7498 ;;      Locals:         0       0       0       0
  7499 ;;      Temps:          0       0       0       0
  7500 ;;      Totals:         0       8       0       0
  7501 ;;Total ram usage:        8 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    5
  7504 ;; This function calls:
  7505 ;;		___fladd
  7506 ;; This function is called by:
  7507 ;;		_sprintf
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text24
  7512  002EF0                     __ptext24:
  7513                           	opt stack 0
  7514  002EF0                     ___flsub:
  7515                           	opt stack 23
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;incstack = 0
  7519  002EF0  0E00               	movlw	0
  7520  002EF2  0100               	movlb	0	; () banked
  7521  002EF4  1BBC               	xorwf	___flsub@a& (0+255),f,b
  7522  002EF6  0E00               	movlw	0
  7523  002EF8  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  7524  002EFA  0E00               	movlw	0
  7525  002EFC  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  7526  002EFE  0E80               	movlw	128
  7527  002F00  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  7528                           
  7529                           ; BSR set to: 0
  7530  002F02  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  7531  002F06  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  7532  002F0A  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  7533  002F0E  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  7534  002F12  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  7535  002F16  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  7536  002F1A  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  7537  002F1E  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  7538  002F22  EC24  F006         	call	___fladd	;wreg free
  7539  002F26  C0A4  F0B8         	movff	?___fladd,?___flsub
  7540  002F2A  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  7541  002F2E  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  7542  002F32  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  7543  002F36  0012               	return	
  7544  002F38                     __end_of___flsub:
  7545                           	opt stack 0
  7546                           tblptru	equ	0xFF8
  7547                           tblptrh	equ	0xFF7
  7548                           tblptrl	equ	0xFF6
  7549                           tablat	equ	0xFF5
  7550                           prodh	equ	0xFF4
  7551                           prodl	equ	0xFF3
  7552                           intcon	equ	0xFF2
  7553                           postinc0	equ	0xFEE
  7554                           wreg	equ	0xFE8
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           fsr2h	equ	0xFDA
  7558                           fsr2l	equ	0xFD9
  7559                           status	equ	0xFD8
  7560                           
  7561 ;; *************** function ___fladd *****************
  7562 ;; Defined at:
  7563 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  b               4   68[BANK0 ] long 
  7566 ;;  a               4   72[BANK0 ] long 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;  grs             1   87[BANK0 ] unsigned char 
  7569 ;;  bexp            1   86[BANK0 ] unsigned char 
  7570 ;;  aexp            1   85[BANK0 ] unsigned char 
  7571 ;;  signs           1   84[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  4   68[BANK0 ] unsigned char 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7581 ;;      Params:         0       8       0       0
  7582 ;;      Locals:         0       4       0       0
  7583 ;;      Temps:          0       8       0       0
  7584 ;;      Totals:         0      20       0       0
  7585 ;;Total ram usage:       20 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    4
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_sprintf
  7592 ;;		___flsub
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           	psect	text25
  7597  000C48                     __ptext25:
  7598                           	opt stack 0
  7599  000C48                     ___fladd:
  7600                           	opt stack 23
  7601                           
  7602                           ;incstack = 0
  7603  000C48  0100               	movlb	0	; () banked
  7604  000C4A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7605  000C4C  0B80               	andlw	128
  7606  000C4E  0100               	movlb	0	; () banked
  7607  000C50  6FB4               	movwf	___fladd@signs& (0+255),b
  7608  000C52  0100               	movlb	0	; () banked
  7609  000C54  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7610  000C56  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  7611  000C58  0100               	movlb	0	; () banked
  7612  000C5A  6FB6               	movwf	___fladd@bexp& (0+255),b
  7613                           
  7614                           ; BSR set to: 0
  7615  000C5C  0100               	movlb	0	; () banked
  7616  000C5E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  7617  000C60  D002               	goto	l4180
  7618                           
  7619                           ; BSR set to: 0
  7620  000C62  0100               	movlb	0	; () banked
  7621  000C64  81B6               	bsf	___fladd@bexp& (0+255),0,b
  7622  000C66                     l4180:
  7623                           
  7624                           ; BSR set to: 0
  7625  000C66  0100               	movlb	0	; () banked
  7626  000C68  51B6               	movf	___fladd@bexp& (0+255),w,b
  7627  000C6A  0100               	movlb	0	; () banked
  7628  000C6C  B4D8               	btfsc	status,2,c
  7629  000C6E  D012               	goto	l4190
  7630                           
  7631                           ; BSR set to: 0
  7632  000C70  0100               	movlb	0	; () banked
  7633  000C72  29B6               	incf	___fladd@bexp& (0+255),w,b
  7634  000C74  A4D8               	btfss	status,2,c
  7635  000C76  D009               	goto	l4186
  7636                           
  7637                           ; BSR set to: 0
  7638  000C78  0E00               	movlw	0
  7639  000C7A  0100               	movlb	0	; () banked
  7640  000C7C  6FA4               	movwf	___fladd@b& (0+255),b
  7641  000C7E  0E00               	movlw	0
  7642  000C80  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  7643  000C82  0E00               	movlw	0
  7644  000C84  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  7645  000C86  0E00               	movlw	0
  7646  000C88  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  7647  000C8A                     l4186:
  7648                           
  7649                           ; BSR set to: 0
  7650  000C8A  0100               	movlb	0	; () banked
  7651  000C8C  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  7652                           
  7653                           ; BSR set to: 0
  7654  000C8E  0E00               	movlw	0
  7655  000C90  0100               	movlb	0	; () banked
  7656  000C92  D008               	goto	L8
  7657  000C94                     l4190:
  7658                           
  7659                           ; BSR set to: 0
  7660  000C94  0E00               	movlw	0
  7661  000C96  0100               	movlb	0	; () banked
  7662  000C98  6FA4               	movwf	___fladd@b& (0+255),b
  7663  000C9A  0E00               	movlw	0
  7664  000C9C  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  7665  000C9E  0E00               	movlw	0
  7666  000CA0  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  7667  000CA2  0E00               	movlw	0
  7668  000CA4                     L8:
  7669  000CA4  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  7670                           
  7671                           ; BSR set to: 0
  7672                           
  7673                           ; BSR set to: 0
  7674  000CA6  0100               	movlb	0	; () banked
  7675  000CA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  7676  000CAA  0B80               	andlw	128
  7677  000CAC  0100               	movlb	0	; () banked
  7678  000CAE  6FB5               	movwf	___fladd@aexp& (0+255),b
  7679                           
  7680                           ; BSR set to: 0
  7681  000CB0  0100               	movlb	0	; () banked
  7682  000CB2  51B4               	movf	___fladd@signs& (0+255),w,b
  7683  000CB4  0100               	movlb	0	; () banked
  7684  000CB6  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  7685  000CB8  B4D8               	btfsc	status,2,c
  7686  000CBA  D002               	goto	l4198
  7687                           
  7688                           ; BSR set to: 0
  7689  000CBC  0100               	movlb	0	; () banked
  7690  000CBE  8DB4               	bsf	___fladd@signs& (0+255),6,b
  7691  000CC0                     l4198:
  7692                           
  7693                           ; BSR set to: 0
  7694  000CC0  0100               	movlb	0	; () banked
  7695  000CC2  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  7696  000CC4  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  7697  000CC6  0100               	movlb	0	; () banked
  7698  000CC8  6FB5               	movwf	___fladd@aexp& (0+255),b
  7699                           
  7700                           ; BSR set to: 0
  7701  000CCA  0100               	movlb	0	; () banked
  7702  000CCC  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  7703  000CCE  D002               	goto	l4204
  7704                           
  7705                           ; BSR set to: 0
  7706  000CD0  0100               	movlb	0	; () banked
  7707  000CD2  81B5               	bsf	___fladd@aexp& (0+255),0,b
  7708  000CD4                     l4204:
  7709                           
  7710                           ; BSR set to: 0
  7711  000CD4  0100               	movlb	0	; () banked
  7712  000CD6  51B5               	movf	___fladd@aexp& (0+255),w,b
  7713  000CD8  0100               	movlb	0	; () banked
  7714  000CDA  B4D8               	btfsc	status,2,c
  7715  000CDC  D012               	goto	l4214
  7716                           
  7717                           ; BSR set to: 0
  7718  000CDE  0100               	movlb	0	; () banked
  7719  000CE0  29B5               	incf	___fladd@aexp& (0+255),w,b
  7720  000CE2  A4D8               	btfss	status,2,c
  7721  000CE4  D009               	goto	l4210
  7722                           
  7723                           ; BSR set to: 0
  7724  000CE6  0E00               	movlw	0
  7725  000CE8  0100               	movlb	0	; () banked
  7726  000CEA  6FA8               	movwf	___fladd@a& (0+255),b
  7727  000CEC  0E00               	movlw	0
  7728  000CEE  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  7729  000CF0  0E00               	movlw	0
  7730  000CF2  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  7731  000CF4  0E00               	movlw	0
  7732  000CF6  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  7733  000CF8                     l4210:
  7734                           
  7735                           ; BSR set to: 0
  7736  000CF8  0100               	movlb	0	; () banked
  7737  000CFA  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  7738                           
  7739                           ; BSR set to: 0
  7740  000CFC  0E00               	movlw	0
  7741  000CFE  0100               	movlb	0	; () banked
  7742  000D00  D008               	goto	L9
  7743  000D02                     l4214:
  7744                           
  7745                           ; BSR set to: 0
  7746  000D02  0E00               	movlw	0
  7747  000D04  0100               	movlb	0	; () banked
  7748  000D06  6FA8               	movwf	___fladd@a& (0+255),b
  7749  000D08  0E00               	movlw	0
  7750  000D0A  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  7751  000D0C  0E00               	movlw	0
  7752  000D0E  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  7753  000D10  0E00               	movlw	0
  7754  000D12                     L9:
  7755  000D12  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           
  7759                           ; BSR set to: 0
  7760  000D14  0100               	movlb	0	; () banked
  7761  000D16  51B6               	movf	___fladd@bexp& (0+255),w,b
  7762  000D18  0100               	movlb	0	; () banked
  7763  000D1A  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  7764  000D1C  B0D8               	btfsc	status,0,c
  7765  000D1E  D024               	goto	l4252
  7766                           
  7767                           ; BSR set to: 0
  7768  000D20  0100               	movlb	0	; () banked
  7769  000D22  ADB4               	btfss	___fladd@signs& (0+255),6,b
  7770  000D24  D003               	goto	l4222
  7771                           
  7772                           ; BSR set to: 0
  7773  000D26  0E80               	movlw	128
  7774  000D28  0100               	movlb	0	; () banked
  7775  000D2A  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  7776  000D2C                     l4222:
  7777                           
  7778                           ; BSR set to: 0
  7779  000D2C  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  7780                           
  7781                           ; BSR set to: 0
  7782  000D30  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  7783                           
  7784                           ; BSR set to: 0
  7785  000D34  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  7786                           
  7787                           ; BSR set to: 0
  7788  000D38  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  7789                           
  7790                           ; BSR set to: 0
  7791  000D3C  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  7792                           
  7793                           ; BSR set to: 0
  7794  000D40  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  7795                           
  7796                           ; BSR set to: 0
  7797  000D44  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  7798                           
  7799                           ; BSR set to: 0
  7800  000D48  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  7801                           
  7802                           ; BSR set to: 0
  7803  000D4C  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  7804                           
  7805                           ; BSR set to: 0
  7806  000D50  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  7807                           
  7808                           ; BSR set to: 0
  7809  000D54  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  7810                           
  7811                           ; BSR set to: 0
  7812  000D58  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  7813                           
  7814                           ; BSR set to: 0
  7815  000D5C  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  7816                           
  7817                           ; BSR set to: 0
  7818  000D60  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  7819                           
  7820                           ; BSR set to: 0
  7821  000D64  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  7822  000D68                     l4252:
  7823                           
  7824                           ; BSR set to: 0
  7825  000D68  0E00               	movlw	0
  7826  000D6A  0100               	movlb	0	; () banked
  7827  000D6C  6FB7               	movwf	___fladd@grs& (0+255),b
  7828                           
  7829                           ; BSR set to: 0
  7830  000D6E  0100               	movlb	0	; () banked
  7831  000D70  51B6               	movf	___fladd@bexp& (0+255),w,b
  7832  000D72  0100               	movlb	0	; () banked
  7833  000D74  6FAC               	movwf	??___fladd& (0+255),b
  7834  000D76  6BAD               	clrf	(??___fladd+1)& (0+255),b
  7835  000D78  0100               	movlb	0	; () banked
  7836  000D7A  1FAC               	comf	??___fladd& (0+255),f,b
  7837  000D7C  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  7838  000D7E  4BAC               	infsnz	??___fladd& (0+255),f,b
  7839  000D80  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  7840  000D82  0100               	movlb	0	; () banked
  7841  000D84  51B5               	movf	___fladd@aexp& (0+255),w,b
  7842  000D86  0100               	movlb	0	; () banked
  7843  000D88  6FAE               	movwf	(??___fladd+2)& (0+255),b
  7844  000D8A  6BAF               	clrf	(??___fladd+3)& (0+255),b
  7845  000D8C  0100               	movlb	0	; () banked
  7846  000D8E  51AC               	movf	??___fladd& (0+255),w,b
  7847  000D90  0100               	movlb	0	; () banked
  7848  000D92  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  7849  000D94  0100               	movlb	0	; () banked
  7850  000D96  51AD               	movf	(??___fladd+1)& (0+255),w,b
  7851  000D98  0100               	movlb	0	; () banked
  7852  000D9A  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  7853  000D9C  0100               	movlb	0	; () banked
  7854  000D9E  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  7855  000DA0  D03D               	goto	l947
  7856  000DA2  0100               	movlb	0	; () banked
  7857  000DA4  51AF               	movf	(??___fladd+3)& (0+255),w,b
  7858  000DA6  E105               	bnz	u4550
  7859  000DA8  0E1A               	movlw	26
  7860  000DAA  0100               	movlb	0	; () banked
  7861  000DAC  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  7862  000DAE  A0D8               	btfss	status,0,c
  7863  000DB0  D035               	goto	l947
  7864  000DB2                     u4550:
  7865                           
  7866                           ; BSR set to: 0
  7867  000DB2  0100               	movlb	0	; () banked
  7868  000DB4  51A4               	movf	___fladd@b& (0+255),w,b
  7869  000DB6  0100               	movlb	0	; () banked
  7870  000DB8  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  7871  000DBA  0100               	movlb	0	; () banked
  7872  000DBC  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  7873  000DBE  0100               	movlb	0	; () banked
  7874  000DC0  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  7875  000DC2  B4D8               	btfsc	status,2,c
  7876  000DC4  D002               	goto	u4560
  7877  000DC6  0E01               	movlw	1
  7878  000DC8  D001               	goto	u4570
  7879  000DCA                     u4560:
  7880  000DCA  0E00               	movlw	0
  7881  000DCC                     u4570:
  7882  000DCC  0100               	movlb	0	; () banked
  7883  000DCE  6FB7               	movwf	___fladd@grs& (0+255),b
  7884                           
  7885                           ; BSR set to: 0
  7886  000DD0  0E00               	movlw	0
  7887  000DD2  0100               	movlb	0	; () banked
  7888  000DD4  6FA4               	movwf	___fladd@b& (0+255),b
  7889  000DD6  0E00               	movlw	0
  7890  000DD8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  7891  000DDA  0E00               	movlw	0
  7892  000DDC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  7893  000DDE  0E00               	movlw	0
  7894  000DE0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  7895                           
  7896                           ; BSR set to: 0
  7897  000DE2  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  7898  000DE6  D020               	goto	l946
  7899  000DE8                     l948:
  7900                           
  7901                           ; BSR set to: 0
  7902  000DE8  0100               	movlb	0	; () banked
  7903  000DEA  A1B7               	btfss	___fladd@grs& (0+255),0,b
  7904  000DEC  D007               	goto	l4264
  7905                           
  7906                           ; BSR set to: 0
  7907  000DEE  0100               	movlb	0	; () banked
  7908  000DF0  90D8               	bcf	status,0,c
  7909  000DF2  31B7               	rrcf	___fladd@grs& (0+255),w,b
  7910  000DF4  0901               	iorlw	1
  7911  000DF6  0100               	movlb	0	; () banked
  7912  000DF8  6FB7               	movwf	___fladd@grs& (0+255),b
  7913  000DFA  D003               	goto	l4266
  7914  000DFC                     l4264:
  7915                           
  7916                           ; BSR set to: 0
  7917  000DFC  0100               	movlb	0	; () banked
  7918  000DFE  90D8               	bcf	status,0,c
  7919  000E00  33B7               	rrcf	___fladd@grs& (0+255),f,b
  7920  000E02                     l4266:
  7921                           
  7922                           ; BSR set to: 0
  7923  000E02  0100               	movlb	0	; () banked
  7924  000E04  A1A4               	btfss	___fladd@b& (0+255),0,b
  7925  000E06  D002               	goto	l4270
  7926                           
  7927                           ; BSR set to: 0
  7928  000E08  0100               	movlb	0	; () banked
  7929  000E0A  8FB7               	bsf	___fladd@grs& (0+255),7,b
  7930  000E0C                     l4270:
  7931                           
  7932                           ; BSR set to: 0
  7933  000E0C  0100               	movlb	0	; () banked
  7934  000E0E  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  7935  000E10  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  7936  000E12  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  7937  000E14  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  7938  000E16  33A4               	rrcf	___fladd@b& (0+255),f,b
  7939                           
  7940                           ; BSR set to: 0
  7941  000E18  0100               	movlb	0	; () banked
  7942  000E1A  2BB6               	incf	___fladd@bexp& (0+255),f,b
  7943  000E1C                     l947:
  7944                           
  7945                           ; BSR set to: 0
  7946  000E1C  0100               	movlb	0	; () banked
  7947  000E1E  51B5               	movf	___fladd@aexp& (0+255),w,b
  7948  000E20  0100               	movlb	0	; () banked
  7949  000E22  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  7950  000E24  A0D8               	btfss	status,0,c
  7951  000E26  D7E0               	goto	l948
  7952  000E28                     l946:
  7953                           
  7954                           ; BSR set to: 0
  7955  000E28  0100               	movlb	0	; () banked
  7956  000E2A  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  7957  000E2C  D03F               	goto	l4298
  7958                           
  7959                           ; BSR set to: 0
  7960  000E2E  0100               	movlb	0	; () banked
  7961  000E30  51B6               	movf	___fladd@bexp& (0+255),w,b
  7962  000E32  0100               	movlb	0	; () banked
  7963  000E34  A4D8               	btfss	status,2,c
  7964  000E36  D00A               	goto	l4280
  7965                           
  7966                           ; BSR set to: 0
  7967  000E38  0E00               	movlw	0
  7968  000E3A  0100               	movlb	0	; () banked
  7969  000E3C  6FA4               	movwf	?___fladd& (0+255),b
  7970  000E3E  0E00               	movlw	0
  7971  000E40  6FA5               	movwf	(?___fladd+1)& (0+255),b
  7972  000E42  0E00               	movlw	0
  7973  000E44  6FA6               	movwf	(?___fladd+2)& (0+255),b
  7974  000E46  0E00               	movlw	0
  7975  000E48  6FA7               	movwf	(?___fladd+3)& (0+255),b
  7976                           
  7977                           ; BSR set to: 0
  7978  000E4A  0012               	return	
  7979  000E4C                     l4280:
  7980                           
  7981                           ; BSR set to: 0
  7982  000E4C  0100               	movlb	0	; () banked
  7983  000E4E  51A8               	movf	___fladd@a& (0+255),w,b
  7984  000E50  0100               	movlb	0	; () banked
  7985  000E52  27A4               	addwf	___fladd@b& (0+255),f,b
  7986  000E54  0100               	movlb	0	; () banked
  7987  000E56  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  7988  000E58  0100               	movlb	0	; () banked
  7989  000E5A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  7990  000E5C  0100               	movlb	0	; () banked
  7991  000E5E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  7992  000E60  0100               	movlb	0	; () banked
  7993  000E62  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  7994  000E64  0100               	movlb	0	; () banked
  7995  000E66  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  7996  000E68  0100               	movlb	0	; () banked
  7997  000E6A  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  7998                           
  7999                           ; BSR set to: 0
  8000  000E6C  0100               	movlb	0	; () banked
  8001  000E6E  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8002  000E70  D0CC               	goto	l4334
  8003                           
  8004                           ; BSR set to: 0
  8005  000E72  0100               	movlb	0	; () banked
  8006  000E74  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8007  000E76  D009               	goto	l4288
  8008                           
  8009                           ; BSR set to: 0
  8010  000E78  0100               	movlb	0	; () banked
  8011  000E7A  90D8               	bcf	status,0,c
  8012  000E7C  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8013  000E7E  0100               	movlb	0	; () banked
  8014  000E80  51B7               	movf	___fladd@grs& (0+255),w,b
  8015  000E82  0901               	iorlw	1
  8016  000E84  0100               	movlb	0	; () banked
  8017  000E86  6FB7               	movwf	___fladd@grs& (0+255),b
  8018  000E88  D003               	goto	l4290
  8019  000E8A                     l4288:
  8020                           
  8021                           ; BSR set to: 0
  8022  000E8A  0100               	movlb	0	; () banked
  8023  000E8C  90D8               	bcf	status,0,c
  8024  000E8E  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8025  000E90                     l4290:
  8026                           
  8027                           ; BSR set to: 0
  8028  000E90  0100               	movlb	0	; () banked
  8029  000E92  A1A4               	btfss	___fladd@b& (0+255),0,b
  8030  000E94  D002               	goto	l4294
  8031                           
  8032                           ; BSR set to: 0
  8033  000E96  0100               	movlb	0	; () banked
  8034  000E98  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8035  000E9A                     l4294:
  8036                           
  8037                           ; BSR set to: 0
  8038  000E9A  0100               	movlb	0	; () banked
  8039  000E9C  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8040  000E9E  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8041  000EA0  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8042  000EA2  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8043  000EA4  33A4               	rrcf	___fladd@b& (0+255),f,b
  8044                           
  8045                           ; BSR set to: 0
  8046  000EA6  0100               	movlb	0	; () banked
  8047  000EA8  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8048                           
  8049                           ; BSR set to: 0
  8050  000EAA  D0AF               	goto	l4334
  8051  000EAC                     l4298:
  8052                           
  8053                           ; BSR set to: 0
  8054  000EAC  0100               	movlb	0	; () banked
  8055  000EAE  51A8               	movf	___fladd@a& (0+255),w,b
  8056  000EB0  0100               	movlb	0	; () banked
  8057  000EB2  5DA4               	subwf	___fladd@b& (0+255),w,b
  8058  000EB4  0100               	movlb	0	; () banked
  8059  000EB6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8060  000EB8  0100               	movlb	0	; () banked
  8061  000EBA  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8062  000EBC  0100               	movlb	0	; () banked
  8063  000EBE  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8064  000EC0  0100               	movlb	0	; () banked
  8065  000EC2  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8066  000EC4  0100               	movlb	0	; () banked
  8067  000EC6  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8068  000EC8  0A80               	xorlw	128
  8069  000ECA  0100               	movlb	0	; () banked
  8070  000ECC  6FAC               	movwf	??___fladd& (0+255),b
  8071  000ECE  0100               	movlb	0	; () banked
  8072  000ED0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8073  000ED2  0A80               	xorlw	128
  8074  000ED4  0100               	movlb	0	; () banked
  8075  000ED6  59AC               	subwfb	??___fladd& (0+255),w,b
  8076  000ED8  B0D8               	btfsc	status,0,c
  8077  000EDA  D050               	goto	l4308
  8078                           
  8079                           ; BSR set to: 0
  8080  000EDC  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8081  000EE0  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8082  000EE4  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8083  000EE8  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8084  000EEC  0100               	movlb	0	; () banked
  8085  000EEE  1FAC               	comf	??___fladd& (0+255),f,b
  8086  000EF0  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8087  000EF2  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8088  000EF4  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8089  000EF6  2BAC               	incf	??___fladd& (0+255),f,b
  8090  000EF8  0E00               	movlw	0
  8091  000EFA  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8092  000EFC  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8093  000EFE  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8094  000F00  0100               	movlb	0	; () banked
  8095  000F02  51A8               	movf	___fladd@a& (0+255),w,b
  8096  000F04  0100               	movlb	0	; () banked
  8097  000F06  25AC               	addwf	??___fladd& (0+255),w,b
  8098  000F08  0100               	movlb	0	; () banked
  8099  000F0A  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8100  000F0C  0100               	movlb	0	; () banked
  8101  000F0E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8102  000F10  0100               	movlb	0	; () banked
  8103  000F12  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8104  000F14  0100               	movlb	0	; () banked
  8105  000F16  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8106  000F18  0100               	movlb	0	; () banked
  8107  000F1A  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8108  000F1C  0100               	movlb	0	; () banked
  8109  000F1E  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8110  000F20  0100               	movlb	0	; () banked
  8111  000F22  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8112  000F24  0100               	movlb	0	; () banked
  8113  000F26  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8114  000F28  0100               	movlb	0	; () banked
  8115  000F2A  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8116  000F2C  0100               	movlb	0	; () banked
  8117  000F2E  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8118  000F30  0EFF               	movlw	255
  8119  000F32  0100               	movlb	0	; () banked
  8120  000F34  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8121  000F36  0100               	movlb	0	; () banked
  8122  000F38  6FA4               	movwf	___fladd@b& (0+255),b
  8123  000F3A  0EFF               	movlw	255
  8124  000F3C  0100               	movlb	0	; () banked
  8125  000F3E  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8126  000F40  0100               	movlb	0	; () banked
  8127  000F42  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8128  000F44  0EFF               	movlw	255
  8129  000F46  0100               	movlb	0	; () banked
  8130  000F48  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8131  000F4A  0100               	movlb	0	; () banked
  8132  000F4C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8133  000F4E  0EFF               	movlw	255
  8134  000F50  0100               	movlb	0	; () banked
  8135  000F52  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8136  000F54  0100               	movlb	0	; () banked
  8137  000F56  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8138  000F58  0E80               	movlw	128
  8139  000F5A  0100               	movlb	0	; () banked
  8140  000F5C  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8141                           
  8142                           ; BSR set to: 0
  8143  000F5E  0100               	movlb	0	; () banked
  8144  000F60  6DB7               	negf	___fladd@grs& (0+255),b
  8145                           
  8146                           ; BSR set to: 0
  8147  000F62  0100               	movlb	0	; () banked
  8148  000F64  51B7               	movf	___fladd@grs& (0+255),w,b
  8149  000F66  0100               	movlb	0	; () banked
  8150  000F68  A4D8               	btfss	status,2,c
  8151  000F6A  D018               	goto	l963
  8152                           
  8153                           ; BSR set to: 0
  8154  000F6C  0E01               	movlw	1
  8155  000F6E  0100               	movlb	0	; () banked
  8156  000F70  27A4               	addwf	___fladd@b& (0+255),f,b
  8157  000F72  0E00               	movlw	0
  8158  000F74  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8159  000F76  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8160  000F78  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8161                           
  8162                           ; BSR set to: 0
  8163  000F7A  D010               	goto	l963
  8164  000F7C                     l4308:
  8165                           
  8166                           ; BSR set to: 0
  8167  000F7C  0100               	movlb	0	; () banked
  8168  000F7E  51A8               	movf	___fladd@a& (0+255),w,b
  8169  000F80  0100               	movlb	0	; () banked
  8170  000F82  5FA4               	subwf	___fladd@b& (0+255),f,b
  8171  000F84  0100               	movlb	0	; () banked
  8172  000F86  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8173  000F88  0100               	movlb	0	; () banked
  8174  000F8A  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8175  000F8C  0100               	movlb	0	; () banked
  8176  000F8E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8177  000F90  0100               	movlb	0	; () banked
  8178  000F92  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8179  000F94  0100               	movlb	0	; () banked
  8180  000F96  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8181  000F98  0100               	movlb	0	; () banked
  8182  000F9A  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8183  000F9C                     l963:
  8184                           
  8185                           ; BSR set to: 0
  8186  000F9C  0100               	movlb	0	; () banked
  8187  000F9E  51A4               	movf	___fladd@b& (0+255),w,b
  8188  000FA0  0100               	movlb	0	; () banked
  8189  000FA2  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8190  000FA4  0100               	movlb	0	; () banked
  8191  000FA6  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8192  000FA8  0100               	movlb	0	; () banked
  8193  000FAA  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8194  000FAC  A4D8               	btfss	status,2,c
  8195  000FAE  D02A               	goto	l4332
  8196                           
  8197                           ; BSR set to: 0
  8198  000FB0  0100               	movlb	0	; () banked
  8199  000FB2  51B7               	movf	___fladd@grs& (0+255),w,b
  8200  000FB4  0100               	movlb	0	; () banked
  8201  000FB6  A4D8               	btfss	status,2,c
  8202  000FB8  D025               	goto	l4332
  8203                           
  8204                           ; BSR set to: 0
  8205  000FBA  0E00               	movlw	0
  8206  000FBC  0100               	movlb	0	; () banked
  8207  000FBE  6FA4               	movwf	?___fladd& (0+255),b
  8208  000FC0  0E00               	movlw	0
  8209  000FC2  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8210  000FC4  0E00               	movlw	0
  8211  000FC6  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8212  000FC8  0E00               	movlw	0
  8213  000FCA  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8214                           
  8215                           ; BSR set to: 0
  8216  000FCC  0012               	return	
  8217  000FCE                     l4316:
  8218                           
  8219                           ; BSR set to: 0
  8220  000FCE  0100               	movlb	0	; () banked
  8221  000FD0  90D8               	bcf	status,0,c
  8222  000FD2  37A4               	rlcf	___fladd@b& (0+255),f,b
  8223  000FD4  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8224  000FD6  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8225  000FD8  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228  000FDA  0100               	movlb	0	; () banked
  8229  000FDC  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8230  000FDE  D002               	goto	l4322
  8231                           
  8232                           ; BSR set to: 0
  8233  000FE0  0100               	movlb	0	; () banked
  8234  000FE2  81A4               	bsf	___fladd@b& (0+255),0,b
  8235  000FE4                     l4322:
  8236                           
  8237                           ; BSR set to: 0
  8238  000FE4  0100               	movlb	0	; () banked
  8239  000FE6  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8240  000FE8  D003               	goto	l4326
  8241                           
  8242                           ; BSR set to: 0
  8243  000FEA  80D8               	bsf	status,0,c
  8244  000FEC  0100               	movlb	0	; () banked
  8245  000FEE  D002               	goto	L10
  8246  000FF0                     l4326:
  8247                           
  8248                           ; BSR set to: 0
  8249  000FF0  0100               	movlb	0	; () banked
  8250  000FF2  90D8               	bcf	status,0,c
  8251  000FF4                     L10:
  8252  000FF4  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8253                           
  8254                           ; BSR set to: 0
  8255                           
  8256                           ; BSR set to: 0
  8257  000FF6  0100               	movlb	0	; () banked
  8258  000FF8  51B6               	movf	___fladd@bexp& (0+255),w,b
  8259  000FFA  0100               	movlb	0	; () banked
  8260  000FFC  B4D8               	btfsc	status,2,c
  8261  000FFE  D002               	goto	l4332
  8262                           
  8263                           ; BSR set to: 0
  8264  001000  0100               	movlb	0	; () banked
  8265  001002  07B6               	decf	___fladd@bexp& (0+255),f,b
  8266  001004                     l4332:
  8267                           
  8268                           ; BSR set to: 0
  8269  001004  0100               	movlb	0	; () banked
  8270  001006  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8271  001008  D7E2               	goto	l4316
  8272  00100A                     l4334:
  8273                           
  8274                           ; BSR set to: 0
  8275  00100A  0E00               	movlw	0
  8276  00100C  0100               	movlb	0	; () banked
  8277  00100E  6FB5               	movwf	___fladd@aexp& (0+255),b
  8278                           
  8279                           ; BSR set to: 0
  8280  001010  0100               	movlb	0	; () banked
  8281  001012  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8282  001014  D00D               	goto	l972
  8283                           
  8284                           ; BSR set to: 0
  8285  001016  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8286  00101A  0E7F               	movlw	127
  8287  00101C  0100               	movlb	0	; () banked
  8288  00101E  17AC               	andwf	??___fladd& (0+255),f,b
  8289  001020  A4D8               	btfss	status,2,c
  8290  001022  D003               	goto	l4342
  8291                           
  8292                           ; BSR set to: 0
  8293                           
  8294                           ; BSR set to: 0
  8295  001024  0100               	movlb	0	; () banked
  8296  001026  A1A4               	btfss	___fladd@b& (0+255),0,b
  8297  001028  D003               	goto	l972
  8298  00102A                     l4342:
  8299                           
  8300                           ; BSR set to: 0
  8301  00102A  0E01               	movlw	1
  8302  00102C  0100               	movlb	0	; () banked
  8303  00102E  6FB5               	movwf	___fladd@aexp& (0+255),b
  8304  001030                     l972:
  8305                           
  8306                           ; BSR set to: 0
  8307  001030  0100               	movlb	0	; () banked
  8308  001032  51B5               	movf	___fladd@aexp& (0+255),w,b
  8309  001034  0100               	movlb	0	; () banked
  8310  001036  B4D8               	btfsc	status,2,c
  8311  001038  D026               	goto	l4352
  8312                           
  8313                           ; BSR set to: 0
  8314  00103A  0E01               	movlw	1
  8315  00103C  0100               	movlb	0	; () banked
  8316  00103E  27A4               	addwf	___fladd@b& (0+255),f,b
  8317  001040  0E00               	movlw	0
  8318  001042  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8319  001044  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8320  001046  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8321                           
  8322                           ; BSR set to: 0
  8323  001048  0100               	movlb	0	; () banked
  8324  00104A  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8325  00104C  D01C               	goto	l4352
  8326                           
  8327                           ; BSR set to: 0
  8328  00104E  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8329  001052  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8330  001056  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8331  00105A  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8332  00105E  0100               	movlb	0	; () banked
  8333  001060  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8334  001062  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8335  001064  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8336  001066  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8337  001068  33AC               	rrcf	??___fladd& (0+255),f,b
  8338  00106A  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8339  00106E  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8340  001072  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8341  001076  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8342  00107A  0100               	movlb	0	; () banked
  8343  00107C  29B6               	incf	___fladd@bexp& (0+255),w,b
  8344  00107E  B4D8               	btfsc	status,2,c
  8345  001080  D002               	goto	l4352
  8346                           
  8347                           ; BSR set to: 0
  8348  001082  0100               	movlb	0	; () banked
  8349  001084  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8350  001086                     l4352:
  8351                           
  8352                           ; BSR set to: 0
  8353  001086  0100               	movlb	0	; () banked
  8354  001088  29B6               	incf	___fladd@bexp& (0+255),w,b
  8355  00108A  B4D8               	btfsc	status,2,c
  8356  00108C  D005               	goto	l4356
  8357                           
  8358                           ; BSR set to: 0
  8359  00108E  0100               	movlb	0	; () banked
  8360  001090  51B6               	movf	___fladd@bexp& (0+255),w,b
  8361  001092  0100               	movlb	0	; () banked
  8362  001094  A4D8               	btfss	status,2,c
  8363  001096  D011               	goto	l4360
  8364  001098                     l4356:
  8365                           
  8366                           ; BSR set to: 0
  8367  001098  0E00               	movlw	0
  8368  00109A  0100               	movlb	0	; () banked
  8369  00109C  6FA4               	movwf	___fladd@b& (0+255),b
  8370  00109E  0E00               	movlw	0
  8371  0010A0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8372  0010A2  0E00               	movlw	0
  8373  0010A4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8374  0010A6  0E00               	movlw	0
  8375  0010A8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8376  0010AA  0100               	movlb	0	; () banked
  8377  0010AC  51B6               	movf	___fladd@bexp& (0+255),w,b
  8378  0010AE  0100               	movlb	0	; () banked
  8379  0010B0  A4D8               	btfss	status,2,c
  8380  0010B2  D003               	goto	l4360
  8381                           
  8382                           ; BSR set to: 0
  8383  0010B4  0E00               	movlw	0
  8384  0010B6  0100               	movlb	0	; () banked
  8385  0010B8  6FB4               	movwf	___fladd@signs& (0+255),b
  8386  0010BA                     l4360:
  8387                           
  8388                           ; BSR set to: 0
  8389  0010BA  0100               	movlb	0	; () banked
  8390  0010BC  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8391  0010BE  D003               	goto	l4364
  8392                           
  8393                           ; BSR set to: 0
  8394  0010C0  0100               	movlb	0	; () banked
  8395  0010C2  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8396  0010C4  D002               	goto	l4366
  8397  0010C6                     l4364:
  8398                           
  8399                           ; BSR set to: 0
  8400  0010C6  0100               	movlb	0	; () banked
  8401  0010C8  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8402  0010CA                     l4366:
  8403                           
  8404                           ; BSR set to: 0
  8405  0010CA  0100               	movlb	0	; () banked
  8406  0010CC  90D8               	bcf	status,0,c
  8407  0010CE  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8408  0010D0  0100               	movlb	0	; () banked
  8409  0010D2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412  0010D4  0100               	movlb	0	; () banked
  8413  0010D6  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8414  0010D8  D002               	goto	l4372
  8415                           
  8416                           ; BSR set to: 0
  8417  0010DA  0100               	movlb	0	; () banked
  8418  0010DC  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8419  0010DE                     l4372:
  8420                           
  8421                           ; BSR set to: 0
  8422  0010DE  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8423  0010E2  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8424  0010E6  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8425  0010EA  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8426  0010EE  0012               	return	
  8427  0010F0                     __end_of___fladd:
  8428                           	opt stack 0
  8429                           tblptru	equ	0xFF8
  8430                           tblptrh	equ	0xFF7
  8431                           tblptrl	equ	0xFF6
  8432                           tablat	equ	0xFF5
  8433                           prodh	equ	0xFF4
  8434                           prodl	equ	0xFF3
  8435                           intcon	equ	0xFF2
  8436                           postinc0	equ	0xFEE
  8437                           wreg	equ	0xFE8
  8438                           indf2	equ	0xFDF
  8439                           postinc2	equ	0xFDE
  8440                           fsr2h	equ	0xFDA
  8441                           fsr2l	equ	0xFD9
  8442                           status	equ	0xFD8
  8443                           
  8444 ;; *************** function ___flneg *****************
  8445 ;; Defined at:
  8446 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  f1              4   24[COMRAM] unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  4   24[COMRAM] unsigned char 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8460 ;;      Params:         4       0       0       0
  8461 ;;      Locals:         0       0       0       0
  8462 ;;      Temps:          0       0       0       0
  8463 ;;      Totals:         4       0       0       0
  8464 ;;Total ram usage:        4 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    4
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_sprintf
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text26
  8475  0030C2                     __ptext26:
  8476                           	opt stack 0
  8477  0030C2                     ___flneg:
  8478                           	opt stack 24
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;incstack = 0
  8482  0030C2  503C               	movf	___flneg@f1,w,c
  8483  0030C4  103D               	iorwf	___flneg@f1+1,w,c
  8484  0030C6  103E               	iorwf	___flneg@f1+2,w,c
  8485  0030C8  103F               	iorwf	___flneg@f1+3,w,c
  8486  0030CA  B4D8               	btfsc	status,2,c
  8487  0030CC  D008               	goto	l4828
  8488  0030CE  0E00               	movlw	0
  8489  0030D0  1A3C               	xorwf	___flneg@f1,f,c
  8490  0030D2  0E00               	movlw	0
  8491  0030D4  1A3D               	xorwf	___flneg@f1+1,f,c
  8492  0030D6  0E00               	movlw	0
  8493  0030D8  1A3E               	xorwf	___flneg@f1+2,f,c
  8494  0030DA  0E80               	movlw	128
  8495  0030DC  1A3F               	xorwf	___flneg@f1+3,f,c
  8496  0030DE                     l4828:
  8497  0030DE  C03C  F03C         	movff	___flneg@f1,?___flneg
  8498  0030E2  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8499  0030E6  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8500  0030EA  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8501  0030EE  0012               	return	
  8502  0030F0                     __end_of___flneg:
  8503                           	opt stack 0
  8504                           tblptru	equ	0xFF8
  8505                           tblptrh	equ	0xFF7
  8506                           tblptrl	equ	0xFF6
  8507                           tablat	equ	0xFF5
  8508                           prodh	equ	0xFF4
  8509                           prodl	equ	0xFF3
  8510                           intcon	equ	0xFF2
  8511                           postinc0	equ	0xFEE
  8512                           wreg	equ	0xFE8
  8513                           indf2	equ	0xFDF
  8514                           postinc2	equ	0xFDE
  8515                           fsr2h	equ	0xFDA
  8516                           fsr2l	equ	0xFD9
  8517                           status	equ	0xFD8
  8518                           
  8519 ;; *************** function ___flge *****************
  8520 ;; Defined at:
  8521 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  ff1             4   16[BANK0 ] unsigned char 
  8524 ;;  ff2             4   20[BANK0 ] unsigned char 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;		None               void
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8536 ;;      Params:         0       8       0       0
  8537 ;;      Locals:         0       0       0       0
  8538 ;;      Temps:          4       0       0       0
  8539 ;;      Totals:         4       8       0       0
  8540 ;;Total ram usage:       12 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    4
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_sprintf
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text27
  8551  002548                     __ptext27:
  8552                           	opt stack 0
  8553  002548                     ___flge:
  8554                           	opt stack 24
  8555                           
  8556                           ;incstack = 0
  8557  002548  0E00               	movlw	0
  8558  00254A  0100               	movlb	0	; () banked
  8559  00254C  1570               	andwf	___flge@ff1& (0+255),w,b
  8560  00254E  6E3C               	movwf	??___flge& (0+255),c
  8561  002550  0E00               	movlw	0
  8562  002552  0100               	movlb	0	; () banked
  8563  002554  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  8564  002556  6E3D               	movwf	(??___flge+1)& (0+255),c
  8565  002558  0E80               	movlw	128
  8566  00255A  0100               	movlb	0	; () banked
  8567  00255C  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  8568  00255E  6E3E               	movwf	(??___flge+2)& (0+255),c
  8569  002560  0E7F               	movlw	127
  8570  002562  0100               	movlb	0	; () banked
  8571  002564  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  8572  002566  6E3F               	movwf	(??___flge+3)& (0+255),c
  8573  002568  503C               	movf	??___flge,w,c
  8574  00256A  103D               	iorwf	??___flge+1,w,c
  8575  00256C  103E               	iorwf	??___flge+2,w,c
  8576  00256E  103F               	iorwf	??___flge+3,w,c
  8577  002570  A4D8               	btfss	status,2,c
  8578  002572  D009               	goto	l4806
  8579                           
  8580                           ; BSR set to: 0
  8581  002574  0E00               	movlw	0
  8582  002576  0100               	movlb	0	; () banked
  8583  002578  6F70               	movwf	___flge@ff1& (0+255),b
  8584  00257A  0E00               	movlw	0
  8585  00257C  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8586  00257E  0E00               	movlw	0
  8587  002580  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8588  002582  0E00               	movlw	0
  8589  002584  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8590  002586                     l4806:
  8591                           
  8592                           ; BSR set to: 0
  8593  002586  0E00               	movlw	0
  8594  002588  0100               	movlb	0	; () banked
  8595  00258A  1574               	andwf	___flge@ff2& (0+255),w,b
  8596  00258C  6E3C               	movwf	??___flge& (0+255),c
  8597  00258E  0E00               	movlw	0
  8598  002590  0100               	movlb	0	; () banked
  8599  002592  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  8600  002594  6E3D               	movwf	(??___flge+1)& (0+255),c
  8601  002596  0E80               	movlw	128
  8602  002598  0100               	movlb	0	; () banked
  8603  00259A  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  8604  00259C  6E3E               	movwf	(??___flge+2)& (0+255),c
  8605  00259E  0E7F               	movlw	127
  8606  0025A0  0100               	movlb	0	; () banked
  8607  0025A2  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  8608  0025A4  6E3F               	movwf	(??___flge+3)& (0+255),c
  8609  0025A6  503C               	movf	??___flge,w,c
  8610  0025A8  103D               	iorwf	??___flge+1,w,c
  8611  0025AA  103E               	iorwf	??___flge+2,w,c
  8612  0025AC  103F               	iorwf	??___flge+3,w,c
  8613  0025AE  A4D8               	btfss	status,2,c
  8614  0025B0  D009               	goto	l4810
  8615                           
  8616                           ; BSR set to: 0
  8617  0025B2  0E00               	movlw	0
  8618  0025B4  0100               	movlb	0	; () banked
  8619  0025B6  6F74               	movwf	___flge@ff2& (0+255),b
  8620  0025B8  0E00               	movlw	0
  8621  0025BA  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8622  0025BC  0E00               	movlw	0
  8623  0025BE  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8624  0025C0  0E00               	movlw	0
  8625  0025C2  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8626  0025C4                     l4810:
  8627                           
  8628                           ; BSR set to: 0
  8629  0025C4  0100               	movlb	0	; () banked
  8630  0025C6  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  8631  0025C8  D021               	goto	l4814
  8632                           
  8633                           ; BSR set to: 0
  8634  0025CA  C070  F03C         	movff	___flge@ff1,??___flge
  8635  0025CE  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  8636  0025D2  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  8637  0025D6  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  8638  0025DA  1E3C               	comf	??___flge,f,c
  8639  0025DC  1E3D               	comf	??___flge+1,f,c
  8640  0025DE  1E3E               	comf	??___flge+2,f,c
  8641  0025E0  1E3F               	comf	??___flge+3,f,c
  8642  0025E2  2A3C               	incf	??___flge,f,c
  8643  0025E4  0E00               	movlw	0
  8644  0025E6  223D               	addwfc	??___flge+1,f,c
  8645  0025E8  223E               	addwfc	??___flge+2,f,c
  8646  0025EA  223F               	addwfc	??___flge+3,f,c
  8647  0025EC  0E00               	movlw	0
  8648  0025EE  243C               	addwf	??___flge,w,c
  8649  0025F0  0100               	movlb	0	; () banked
  8650  0025F2  6F70               	movwf	___flge@ff1& (0+255),b
  8651  0025F4  0E00               	movlw	0
  8652  0025F6  203D               	addwfc	??___flge+1,w,c
  8653  0025F8  0100               	movlb	0	; () banked
  8654  0025FA  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8655  0025FC  0E00               	movlw	0
  8656  0025FE  203E               	addwfc	??___flge+2,w,c
  8657  002600  0100               	movlb	0	; () banked
  8658  002602  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8659  002604  0E80               	movlw	128
  8660  002606  203F               	addwfc	??___flge+3,w,c
  8661  002608  0100               	movlb	0	; () banked
  8662  00260A  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8663  00260C                     l4814:
  8664                           
  8665                           ; BSR set to: 0
  8666  00260C  0100               	movlb	0	; () banked
  8667  00260E  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  8668  002610  D021               	goto	l669
  8669                           
  8670                           ; BSR set to: 0
  8671  002612  C074  F03C         	movff	___flge@ff2,??___flge
  8672  002616  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  8673  00261A  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  8674  00261E  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  8675  002622  1E3C               	comf	??___flge,f,c
  8676  002624  1E3D               	comf	??___flge+1,f,c
  8677  002626  1E3E               	comf	??___flge+2,f,c
  8678  002628  1E3F               	comf	??___flge+3,f,c
  8679  00262A  2A3C               	incf	??___flge,f,c
  8680  00262C  0E00               	movlw	0
  8681  00262E  223D               	addwfc	??___flge+1,f,c
  8682  002630  223E               	addwfc	??___flge+2,f,c
  8683  002632  223F               	addwfc	??___flge+3,f,c
  8684  002634  0E00               	movlw	0
  8685  002636  243C               	addwf	??___flge,w,c
  8686  002638  0100               	movlb	0	; () banked
  8687  00263A  6F74               	movwf	___flge@ff2& (0+255),b
  8688  00263C  0E00               	movlw	0
  8689  00263E  203D               	addwfc	??___flge+1,w,c
  8690  002640  0100               	movlb	0	; () banked
  8691  002642  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8692  002644  0E00               	movlw	0
  8693  002646  203E               	addwfc	??___flge+2,w,c
  8694  002648  0100               	movlb	0	; () banked
  8695  00264A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8696  00264C  0E80               	movlw	128
  8697  00264E  203F               	addwfc	??___flge+3,w,c
  8698  002650  0100               	movlb	0	; () banked
  8699  002652  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8700  002654                     l669:
  8701                           
  8702                           ; BSR set to: 0
  8703  002654  0E00               	movlw	0
  8704  002656  0100               	movlb	0	; () banked
  8705  002658  1B70               	xorwf	___flge@ff1& (0+255),f,b
  8706  00265A  0E00               	movlw	0
  8707  00265C  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8708  00265E  0E00               	movlw	0
  8709  002660  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8710  002662  0E80               	movlw	128
  8711  002664  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8712  002666  0E00               	movlw	0
  8713  002668  0100               	movlb	0	; () banked
  8714  00266A  1B74               	xorwf	___flge@ff2& (0+255),f,b
  8715  00266C  0E00               	movlw	0
  8716  00266E  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8717  002670  0E00               	movlw	0
  8718  002672  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8719  002674  0E80               	movlw	128
  8720  002676  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8721  002678  0100               	movlb	0	; () banked
  8722  00267A  5174               	movf	___flge@ff2& (0+255),w,b
  8723  00267C  0100               	movlb	0	; () banked
  8724  00267E  5D70               	subwf	___flge@ff1& (0+255),w,b
  8725  002680  0100               	movlb	0	; () banked
  8726  002682  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  8727  002684  0100               	movlb	0	; () banked
  8728  002686  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8729  002688  0100               	movlb	0	; () banked
  8730  00268A  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  8731  00268C  0100               	movlb	0	; () banked
  8732  00268E  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8733  002690  0100               	movlb	0	; () banked
  8734  002692  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  8735  002694  0100               	movlb	0	; () banked
  8736  002696  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8737  002698  B0D8               	btfsc	status,0,c
  8738  00269A  D002               	goto	l4820
  8739                           
  8740                           ; BSR set to: 0
  8741  00269C  90D8               	bcf	status,0,c
  8742  00269E  0012               	return	
  8743  0026A0                     l4820:
  8744                           
  8745                           ; BSR set to: 0
  8746  0026A0  80D8               	bsf	status,0,c
  8747                           
  8748                           ; BSR set to: 0
  8749  0026A2  0012               	return	
  8750  0026A4                     __end_of___flge:
  8751                           	opt stack 0
  8752                           tblptru	equ	0xFF8
  8753                           tblptrh	equ	0xFF7
  8754                           tblptrl	equ	0xFF6
  8755                           tablat	equ	0xFF5
  8756                           prodh	equ	0xFF4
  8757                           prodl	equ	0xFF3
  8758                           intcon	equ	0xFF2
  8759                           postinc0	equ	0xFEE
  8760                           wreg	equ	0xFE8
  8761                           indf2	equ	0xFDF
  8762                           postinc2	equ	0xFDE
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767 ;; *************** function ___lwdiv *****************
  8768 ;; Defined at:
  8769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  dividend        2   24[COMRAM] unsigned int 
  8772 ;;  divisor         2   26[COMRAM] unsigned int 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  quotient        2   28[COMRAM] unsigned int 
  8775 ;;  counter         1   30[COMRAM] unsigned char 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  2   24[COMRAM] unsigned int 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, status,0
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8785 ;;      Params:         4       0       0       0
  8786 ;;      Locals:         3       0       0       0
  8787 ;;      Temps:          0       0       0       0
  8788 ;;      Totals:         7       0       0       0
  8789 ;;Total ram usage:        7 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    4
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_LCD_Handler
  8796 ;;		_utoa
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text28
  8801  002E9E                     __ptext28:
  8802                           	opt stack 0
  8803  002E9E                     ___lwdiv:
  8804                           	opt stack 25
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;incstack = 0
  8808  002E9E  0E00               	movlw	0
  8809  002EA0  6E41               	movwf	___lwdiv@quotient+1,c
  8810  002EA2  0E00               	movlw	0
  8811  002EA4  6E40               	movwf	___lwdiv@quotient,c
  8812  002EA6  503E               	movf	___lwdiv@divisor,w,c
  8813  002EA8  103F               	iorwf	___lwdiv@divisor+1,w,c
  8814  002EAA  B4D8               	btfsc	status,2,c
  8815  002EAC  D01C               	goto	l905
  8816  002EAE  0E01               	movlw	1
  8817  002EB0  6E42               	movwf	___lwdiv@counter,c
  8818  002EB2  D004               	goto	l3790
  8819  002EB4                     l3788:
  8820  002EB4  90D8               	bcf	status,0,c
  8821  002EB6  363E               	rlcf	___lwdiv@divisor,f,c
  8822  002EB8  363F               	rlcf	___lwdiv@divisor+1,f,c
  8823  002EBA  2A42               	incf	___lwdiv@counter,f,c
  8824  002EBC                     l3790:
  8825  002EBC  AE3F               	btfss	___lwdiv@divisor+1,7,c
  8826  002EBE  D7FA               	goto	l3788
  8827  002EC0                     l3792:
  8828  002EC0  90D8               	bcf	status,0,c
  8829  002EC2  3640               	rlcf	___lwdiv@quotient,f,c
  8830  002EC4  3641               	rlcf	___lwdiv@quotient+1,f,c
  8831  002EC6  503E               	movf	___lwdiv@divisor,w,c
  8832  002EC8  5C3C               	subwf	___lwdiv@dividend,w,c
  8833  002ECA  503F               	movf	___lwdiv@divisor+1,w,c
  8834  002ECC  583D               	subwfb	___lwdiv@dividend+1,w,c
  8835  002ECE  A0D8               	btfss	status,0,c
  8836  002ED0  D005               	goto	l3800
  8837  002ED2  503E               	movf	___lwdiv@divisor,w,c
  8838  002ED4  5E3C               	subwf	___lwdiv@dividend,f,c
  8839  002ED6  503F               	movf	___lwdiv@divisor+1,w,c
  8840  002ED8  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  8841  002EDA  8040               	bsf	___lwdiv@quotient,0,c
  8842  002EDC                     l3800:
  8843  002EDC  90D8               	bcf	status,0,c
  8844  002EDE  323F               	rrcf	___lwdiv@divisor+1,f,c
  8845  002EE0  323E               	rrcf	___lwdiv@divisor,f,c
  8846  002EE2  2E42               	decfsz	___lwdiv@counter,f,c
  8847  002EE4  D7ED               	goto	l3792
  8848  002EE6                     l905:
  8849  002EE6  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  8850  002EEA  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8851  002EEE  0012               	return		;funcret
  8852  002EF0                     __end_of___lwdiv:
  8853                           	opt stack 0
  8854                           tblptru	equ	0xFF8
  8855                           tblptrh	equ	0xFF7
  8856                           tblptrl	equ	0xFF6
  8857                           tablat	equ	0xFF5
  8858                           prodh	equ	0xFF4
  8859                           prodl	equ	0xFF3
  8860                           intcon	equ	0xFF2
  8861                           postinc0	equ	0xFEE
  8862                           wreg	equ	0xFE8
  8863                           indf2	equ	0xFDF
  8864                           postinc2	equ	0xFDE
  8865                           fsr2h	equ	0xFDA
  8866                           fsr2l	equ	0xFD9
  8867                           status	equ	0xFD8
  8868                           
  8869 ;; *************** function _LCD_write_string *****************
  8870 ;; Defined at:
  8871 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  8874 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;		None               void
  8879 ;; Registers used:
  8880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8886 ;;      Params:         0       2       0       0
  8887 ;;      Locals:         0       0       0       0
  8888 ;;      Temps:          0       0       0       0
  8889 ;;      Totals:         0       2       0       0
  8890 ;;Total ram usage:        2 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    9
  8893 ;; This function calls:
  8894 ;;		_LCD_write_char
  8895 ;; This function is called by:
  8896 ;;		_LCD_Handler
  8897 ;;		_LCD_write_integer
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text29
  8902  00316E                     __ptext29:
  8903                           	opt stack 0
  8904  00316E                     _LCD_write_string:
  8905                           	opt stack 20
  8906                           
  8907                           ;src\LCD_44780.c: 197: while(*buffer){
  8908                           
  8909                           ;incstack = 0
  8910  00316E  D00A               	goto	l4982
  8911  003170                     l4978:
  8912                           
  8913                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  8914  003170  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8915  003174  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8916  003178  50DF               	movf	indf2,w,c
  8917  00317A  EC52  F016         	call	_LCD_write_char
  8918                           
  8919                           ;src\LCD_44780.c: 202: buffer++;
  8920  00317E  0100               	movlb	0	; () banked
  8921  003180  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  8922  003182  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  8923  003184                     l4982:
  8924  003184  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8925  003188  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8926  00318C  50DF               	movf	indf2,w,c
  8927  00318E  B4D8               	btfsc	status,2,c
  8928  003190  0012               	return	
  8929  003192  D7EE               	goto	l4978
  8930  003194                     __end_of_LCD_write_string:
  8931                           	opt stack 0
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           postinc0	equ	0xFEE
  8940                           wreg	equ	0xFE8
  8941                           indf2	equ	0xFDF
  8942                           postinc2	equ	0xFDE
  8943                           fsr2h	equ	0xFDA
  8944                           fsr2l	equ	0xFD9
  8945                           status	equ	0xFD8
  8946                           
  8947 ;; *************** function _LCD_write_message *****************
  8948 ;; Defined at:
  8949 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  8952 ;;		 -> STR_9(8), STR_8(21), STR_7(5), STR_5(2), 
  8953 ;;		 -> STR_4(5), STR_3(4), STR_2(12), STR_1(21), 
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;		None               void
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8965 ;;      Params:         0       2       0       0
  8966 ;;      Locals:         0       0       0       0
  8967 ;;      Temps:          0       0       0       0
  8968 ;;      Totals:         0       2       0       0
  8969 ;;Total ram usage:        2 bytes
  8970 ;; Hardware stack levels used:    1
  8971 ;; Hardware stack levels required when called:    9
  8972 ;; This function calls:
  8973 ;;		_LCD_write_char
  8974 ;; This function is called by:
  8975 ;;		_LCD_Handler
  8976 ;;		_board_initialization
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text30
  8981  0030F0                     __ptext30:
  8982                           	opt stack 0
  8983  0030F0                     _LCD_write_message:
  8984                           	opt stack 20
  8985                           
  8986                           ;src\LCD_44780.c: 181: while(*buffer) {
  8987                           
  8988                           ;incstack = 0
  8989  0030F0  D00B               	goto	l4974
  8990  0030F2                     l4970:
  8991                           
  8992                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  8993  0030F2  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  8994  0030F6  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  8995  0030FA                     	if	0	;tblptru may be non-zero
  8996  0030FA                     	endif
  8997  0030FA                     	if	0	;tblptru may be non-zero
  8998  0030FA                     	endif
  8999  0030FA  0008               	tblrd		*
  9000  0030FC  50F5               	movf	tablat,w,c
  9001  0030FE  EC52  F016         	call	_LCD_write_char
  9002                           
  9003                           ;src\LCD_44780.c: 186: buffer++;
  9004  003102  0100               	movlb	0	; () banked
  9005  003104  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9006  003106  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9007  003108                     l4974:
  9008  003108  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9009  00310C  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9010  003110                     	if	0	;tblptru may be non-zero
  9011  003110                     	endif
  9012  003110                     	if	0	;tblptru may be non-zero
  9013  003110                     	endif
  9014  003110  0008               	tblrd		*
  9015  003112  50F5               	movf	tablat,w,c
  9016  003114  0900               	iorlw	0
  9017  003116  B4D8               	btfsc	status,2,c
  9018  003118  0012               	return	
  9019  00311A  D7EB               	goto	l4970
  9020  00311C                     __end_of_LCD_write_message:
  9021                           	opt stack 0
  9022                           tblptru	equ	0xFF8
  9023                           tblptrh	equ	0xFF7
  9024                           tblptrl	equ	0xFF6
  9025                           tablat	equ	0xFF5
  9026                           prodh	equ	0xFF4
  9027                           prodl	equ	0xFF3
  9028                           intcon	equ	0xFF2
  9029                           postinc0	equ	0xFEE
  9030                           wreg	equ	0xFE8
  9031                           indf2	equ	0xFDF
  9032                           postinc2	equ	0xFDE
  9033                           fsr2h	equ	0xFDA
  9034                           fsr2l	equ	0xFD9
  9035                           status	equ	0xFD8
  9036                           
  9037 ;; *************** function _LCD_write_char *****************
  9038 ;; Defined at:
  9039 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  value           1    wreg     unsigned char 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  value           1   25[BANK0 ] unsigned char 
  9044 ;;  D0              1   24[BANK0 ] unsigned char 
  9045 ;;  D1              1   23[BANK0 ] unsigned char 
  9046 ;;  D2              1   22[BANK0 ] unsigned char 
  9047 ;;  D3              1   21[BANK0 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;		None               void
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9057 ;;      Params:         0       0       0       0
  9058 ;;      Locals:         0       5       0       0
  9059 ;;      Temps:          0       0       0       0
  9060 ;;      Totals:         0       5       0       0
  9061 ;;Total ram usage:        5 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    8
  9064 ;; This function calls:
  9065 ;;		_LCD_send_command
  9066 ;; This function is called by:
  9067 ;;		_LCD_write_message
  9068 ;;		_LCD_write_string
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text31
  9073  002CA4                     __ptext31:
  9074                           	opt stack 0
  9075  002CA4                     _LCD_write_char:
  9076                           	opt stack 20
  9077                           
  9078                           ;incstack = 0
  9079                           ;LCD_write_char@value stored from wreg
  9080  002CA4  0100               	movlb	0	; () banked
  9081  002CA6  6F79               	movwf	LCD_write_char@value& (0+255),b
  9082                           
  9083                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9084                           ;src\LCD_44780.c: 149: LATAbits.LATA6 = 1;
  9085  002CA8  8C89               	bsf	3977,6,c	;volatile
  9086                           
  9087                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9088  002CAA  0100               	movlb	0	; () banked
  9089  002CAC  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9090  002CAE  0B01               	andlw	1
  9091  002CB0  0100               	movlb	0	; () banked
  9092  002CB2  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9093                           
  9094                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9095  002CB4  0100               	movlb	0	; () banked
  9096  002CB6  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9097  002CB8  46E8               	rlncf	wreg,f,c
  9098  002CBA  0B03               	andlw	3
  9099  002CBC  0B01               	andlw	1
  9100  002CBE  0100               	movlb	0	; () banked
  9101  002CC0  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9102                           
  9103                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9104  002CC2  0100               	movlb	0	; () banked
  9105  002CC4  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9106  002CC6  42E8               	rrncf	wreg,f,c
  9107  002CC8  0B07               	andlw	7
  9108  002CCA  0B01               	andlw	1
  9109  002CCC  0100               	movlb	0	; () banked
  9110  002CCE  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9111                           
  9112                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9113  002CD0  0100               	movlb	0	; () banked
  9114  002CD2  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9115  002CD4  0B0F               	andlw	15
  9116  002CD6  0B01               	andlw	1
  9117  002CD8  0100               	movlb	0	; () banked
  9118  002CDA  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9122  002CDC  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9123  002CE0  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9124  002CE4  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9125  002CE8  0100               	movlb	0	; () banked
  9126  002CEA  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9127  002CEC  ECE3  F017         	call	_LCD_send_command
  9128                           
  9129                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9130  002CF0  0100               	movlb	0	; () banked
  9131  002CF2  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9132  002CF4  46E8               	rlncf	wreg,f,c
  9133  002CF6  0B1F               	andlw	31
  9134  002CF8  0B01               	andlw	1
  9135  002CFA  0100               	movlb	0	; () banked
  9136  002CFC  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9140  002CFE  0100               	movlb	0	; () banked
  9141  002D00  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9142  002D02  42E8               	rrncf	wreg,f,c
  9143  002D04  0B3F               	andlw	63
  9144  002D06  0B01               	andlw	1
  9145  002D08  0100               	movlb	0	; () banked
  9146  002D0A  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9150  002D0C  0100               	movlb	0	; () banked
  9151  002D0E  90D8               	bcf	status,0,c
  9152  002D10  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9153  002D12  0B01               	andlw	1
  9154  002D14  0100               	movlb	0	; () banked
  9155  002D16  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9159  002D18  0100               	movlb	0	; () banked
  9160  002D1A  5179               	movf	LCD_write_char@value& (0+255),w,b
  9161  002D1C  0B01               	andlw	1
  9162  002D1E  0100               	movlb	0	; () banked
  9163  002D20  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9167  002D22  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9168  002D26  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9169  002D2A  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9170  002D2E  0100               	movlb	0	; () banked
  9171  002D30  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9172  002D32  ECE3  F017         	call	_LCD_send_command
  9173                           
  9174                           ;src\LCD_44780.c: 167: LATAbits.LATA6 = 0;
  9175  002D36  9C89               	bcf	3977,6,c	;volatile
  9176  002D38  0012               	return		;funcret
  9177  002D3A                     __end_of_LCD_write_char:
  9178                           	opt stack 0
  9179                           tblptru	equ	0xFF8
  9180                           tblptrh	equ	0xFF7
  9181                           tblptrl	equ	0xFF6
  9182                           tablat	equ	0xFF5
  9183                           prodh	equ	0xFF4
  9184                           prodl	equ	0xFF3
  9185                           intcon	equ	0xFF2
  9186                           postinc0	equ	0xFEE
  9187                           wreg	equ	0xFE8
  9188                           indf2	equ	0xFDF
  9189                           postinc2	equ	0xFDE
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8
  9193                           
  9194 ;; *************** function _LCD_goto_line *****************
  9195 ;; Defined at:
  9196 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  line            1    wreg     unsigned char 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  line            1   21[BANK0 ] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;		None               void
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9210 ;;      Params:         0       0       0       0
  9211 ;;      Locals:         0       1       0       0
  9212 ;;      Temps:          0       0       0       0
  9213 ;;      Totals:         0       1       0       0
  9214 ;;Total ram usage:        1 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    8
  9217 ;; This function calls:
  9218 ;;		_LCD_send_command
  9219 ;; This function is called by:
  9220 ;;		_LCD_Handler
  9221 ;;		_LCD_goto_xy
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text32
  9226  0028C6                     __ptext32:
  9227                           	opt stack 0
  9228  0028C6                     _LCD_goto_line:
  9229                           	opt stack 21
  9230                           
  9231                           ;incstack = 0
  9232                           ;LCD_goto_line@line stored from wreg
  9233  0028C6  0100               	movlb	0	; () banked
  9234  0028C8  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9235                           
  9236                           ;src\LCD_44780.c: 113: switch(line) {
  9237  0028CA  D064               	goto	l4966
  9238  0028CC                     l4958:
  9239  0028CC  0E00               	movlw	0
  9240  0028CE  0100               	movlb	0	; () banked
  9241  0028D0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9242  0028D2  0E00               	movlw	0
  9243  0028D4  0100               	movlb	0	; () banked
  9244  0028D6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9245  0028D8  0E00               	movlw	0
  9246  0028DA  0100               	movlb	0	; () banked
  9247  0028DC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9248  0028DE  0E01               	movlw	1
  9249  0028E0  ECE3  F017         	call	_LCD_send_command
  9250                           
  9251                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9252  0028E4  0E00               	movlw	0
  9253  0028E6  0100               	movlb	0	; () banked
  9254  0028E8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9255  0028EA  0E00               	movlw	0
  9256  0028EC  0100               	movlb	0	; () banked
  9257  0028EE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9258  0028F0  0E00               	movlw	0
  9259  0028F2  0100               	movlb	0	; () banked
  9260  0028F4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9261  0028F6  0E00               	movlw	0
  9262  0028F8  ECE3  F017         	call	_LCD_send_command
  9263                           
  9264                           ;src\LCD_44780.c: 117: break;
  9265  0028FC  0012               	return	
  9266  0028FE                     l4960:
  9267  0028FE  0E01               	movlw	1
  9268  002900  0100               	movlb	0	; () banked
  9269  002902  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9270  002904  0E00               	movlw	0
  9271  002906  0100               	movlb	0	; () banked
  9272  002908  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9273  00290A  0E00               	movlw	0
  9274  00290C  0100               	movlb	0	; () banked
  9275  00290E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9276  002910  0E01               	movlw	1
  9277  002912  ECE3  F017         	call	_LCD_send_command
  9278                           
  9279                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9280  002916  0E00               	movlw	0
  9281  002918  0100               	movlb	0	; () banked
  9282  00291A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9283  00291C  0E00               	movlw	0
  9284  00291E  0100               	movlb	0	; () banked
  9285  002920  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9286  002922  0E00               	movlw	0
  9287  002924  0100               	movlb	0	; () banked
  9288  002926  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9289  002928  0E00               	movlw	0
  9290  00292A  ECE3  F017         	call	_LCD_send_command
  9291                           
  9292                           ;src\LCD_44780.c: 121: break;
  9293  00292E  0012               	return	
  9294  002930                     l4962:
  9295  002930  0E00               	movlw	0
  9296  002932  0100               	movlb	0	; () banked
  9297  002934  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9298  002936  0E00               	movlw	0
  9299  002938  0100               	movlb	0	; () banked
  9300  00293A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9301  00293C  0E01               	movlw	1
  9302  00293E  0100               	movlb	0	; () banked
  9303  002940  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9304  002942  0E01               	movlw	1
  9305  002944  ECE3  F017         	call	_LCD_send_command
  9306                           
  9307                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9308  002948  0E01               	movlw	1
  9309  00294A  0100               	movlb	0	; () banked
  9310  00294C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9311  00294E  0E00               	movlw	0
  9312  002950  0100               	movlb	0	; () banked
  9313  002952  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9314  002954  0E00               	movlw	0
  9315  002956  0100               	movlb	0	; () banked
  9316  002958  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9317  00295A  0E00               	movlw	0
  9318  00295C  ECE3  F017         	call	_LCD_send_command
  9319                           
  9320                           ;src\LCD_44780.c: 125: break;
  9321  002960  0012               	return	
  9322  002962                     l4964:
  9323  002962  0E01               	movlw	1
  9324  002964  0100               	movlb	0	; () banked
  9325  002966  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9326  002968  0E00               	movlw	0
  9327  00296A  0100               	movlb	0	; () banked
  9328  00296C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9329  00296E  0E01               	movlw	1
  9330  002970  0100               	movlb	0	; () banked
  9331  002972  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9332  002974  0E01               	movlw	1
  9333  002976  ECE3  F017         	call	_LCD_send_command
  9334                           
  9335                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9336  00297A  0E01               	movlw	1
  9337  00297C  0100               	movlb	0	; () banked
  9338  00297E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9339  002980  0E00               	movlw	0
  9340  002982  0100               	movlb	0	; () banked
  9341  002984  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9342  002986  0E00               	movlw	0
  9343  002988  0100               	movlb	0	; () banked
  9344  00298A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9345  00298C  0E00               	movlw	0
  9346  00298E  ECE3  F017         	call	_LCD_send_command
  9347                           
  9348                           ;src\LCD_44780.c: 129: }
  9349  002992  0012               	return	
  9350  002994                     l4966:
  9351  002994  0100               	movlb	0	; () banked
  9352  002996  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9353                           
  9354                           ; Switch size 1, requested type "space"
  9355                           ; Number of cases is 4, Range of values is 1 to 4
  9356                           ; switch strategies available:
  9357                           ; Name         Instructions Cycles
  9358                           ; simple_byte           13     7 (average)
  9359                           ;	Chosen strategy is simple_byte
  9360  002998  0A01               	xorlw	1	; case 1
  9361  00299A  B4D8               	btfsc	status,2,c
  9362  00299C  D797               	goto	l4958
  9363  00299E  0A03               	xorlw	3	; case 2
  9364  0029A0  B4D8               	btfsc	status,2,c
  9365  0029A2  D7AD               	goto	l4960
  9366  0029A4  0A01               	xorlw	1	; case 3
  9367  0029A6  B4D8               	btfsc	status,2,c
  9368  0029A8  D7C3               	goto	l4962
  9369  0029AA  0A07               	xorlw	7	; case 4
  9370  0029AC  A4D8               	btfss	status,2,c
  9371  0029AE  0012               	return	
  9372  0029B0  D7D8               	goto	l4964
  9373  0029B2                     __end_of_LCD_goto_line:
  9374                           	opt stack 0
  9375                           tblptru	equ	0xFF8
  9376                           tblptrh	equ	0xFF7
  9377                           tblptrl	equ	0xFF6
  9378                           tablat	equ	0xFF5
  9379                           prodh	equ	0xFF4
  9380                           prodl	equ	0xFF3
  9381                           intcon	equ	0xFF2
  9382                           postinc0	equ	0xFEE
  9383                           wreg	equ	0xFE8
  9384                           indf2	equ	0xFDF
  9385                           postinc2	equ	0xFDE
  9386                           fsr2h	equ	0xFDA
  9387                           fsr2l	equ	0xFD9
  9388                           status	equ	0xFD8
  9389                           
  9390 ;; *************** function _LCD_clear *****************
  9391 ;; Defined at:
  9392 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;		None               void
  9399 ;; Registers used:
  9400 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9406 ;;      Params:         0       0       0       0
  9407 ;;      Locals:         0       0       0       0
  9408 ;;      Temps:          0       0       0       0
  9409 ;;      Totals:         0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    8
  9413 ;; This function calls:
  9414 ;;		_LCD_send_command
  9415 ;; This function is called by:
  9416 ;;		_LCD_initialize
  9417 ;;		_LCD_Handler
  9418 ;;		_board_initialization
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text33
  9423  00302E                     __ptext33:
  9424                           	opt stack 0
  9425  00302E                     _LCD_clear:
  9426                           	opt stack 20
  9427                           
  9428                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9429                           
  9430                           ;incstack = 0
  9431  00302E  0E00               	movlw	0
  9432  003030  0100               	movlb	0	; () banked
  9433  003032  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9434  003034  0E00               	movlw	0
  9435  003036  0100               	movlb	0	; () banked
  9436  003038  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9437  00303A  0E00               	movlw	0
  9438  00303C  0100               	movlb	0	; () banked
  9439  00303E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9440  003040  0E00               	movlw	0
  9441  003042  ECE3  F017         	call	_LCD_send_command
  9442                           
  9443                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9444  003046  0E00               	movlw	0
  9445  003048  0100               	movlb	0	; () banked
  9446  00304A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9447  00304C  0E00               	movlw	0
  9448  00304E  0100               	movlb	0	; () banked
  9449  003050  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9450  003052  0E01               	movlw	1
  9451  003054  0100               	movlb	0	; () banked
  9452  003056  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9453  003058  0E00               	movlw	0
  9454  00305A  ECE3  F017         	call	_LCD_send_command
  9455  00305E  0012               	return		;funcret
  9456  003060                     __end_of_LCD_clear:
  9457                           	opt stack 0
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           postinc0	equ	0xFEE
  9466                           wreg	equ	0xFE8
  9467                           indf2	equ	0xFDF
  9468                           postinc2	equ	0xFDE
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function _LCD_send_command *****************
  9474 ;; Defined at:
  9475 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  D3              1    wreg     unsigned char 
  9478 ;;  D2              1   18[BANK0 ] unsigned char 
  9479 ;;  D1              1   19[BANK0 ] unsigned char 
  9480 ;;  D0              1   20[BANK0 ] unsigned char 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  D3              1   30[COMRAM] unsigned char 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;		None               void
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9492 ;;      Params:         0       3       0       0
  9493 ;;      Locals:         1       0       0       0
  9494 ;;      Temps:          0       0       0       0
  9495 ;;      Totals:         1       3       0       0
  9496 ;;Total ram usage:        4 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    7
  9499 ;; This function calls:
  9500 ;;		_LCD_enable_pulse
  9501 ;; This function is called by:
  9502 ;;		_LCD_goto_line
  9503 ;;		_LCD_write_char
  9504 ;;		_LCD_clear
  9505 ;;		_LCD_cursor
  9506 ;;		_LCD_initialize
  9507 ;;		_LCD_home
  9508 ;;		_LCD_shift
  9509 ;;		_LCD_shift_cursor
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text34
  9514  002FC6                     __ptext34:
  9515                           	opt stack 0
  9516  002FC6                     _LCD_send_command:
  9517                           	opt stack 20
  9518                           
  9519                           ;incstack = 0
  9520                           ;LCD_send_command@D3 stored from wreg
  9521  002FC6  6E42               	movwf	LCD_send_command@D3,c
  9522                           
  9523                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
  9524  002FC8  0100               	movlb	0	; () banked
  9525  002FCA  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
  9526  002FCC  D002               	bra	u4425
  9527  002FCE  948B               	bcf	3979,2,c	;volatile
  9528  002FD0  D001               	bra	u4426
  9529  002FD2                     u4425:
  9530  002FD2  848B               	bsf	3979,2,c	;volatile
  9531  002FD4                     u4426:
  9532                           
  9533                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
  9534  002FD4  0100               	movlb	0	; () banked
  9535  002FD6  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
  9536  002FD8  D002               	bra	u4435
  9537  002FDA  968B               	bcf	3979,3,c	;volatile
  9538  002FDC  D001               	bra	u4436
  9539  002FDE                     u4435:
  9540  002FDE  868B               	bsf	3979,3,c	;volatile
  9541  002FE0                     u4436:
  9542                           
  9543                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
  9544  002FE0  0100               	movlb	0	; () banked
  9545  002FE2  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
  9546  002FE4  D002               	bra	u4445
  9547  002FE6  908C               	bcf	3980,0,c	;volatile
  9548  002FE8  D001               	bra	u4446
  9549  002FEA                     u4445:
  9550  002FEA  808C               	bsf	3980,0,c	;volatile
  9551  002FEC                     u4446:
  9552                           
  9553                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
  9554  002FEC  B042               	btfsc	LCD_send_command@D3,0,c
  9555  002FEE  D002               	bra	u4455
  9556  002FF0  928C               	bcf	3980,1,c	;volatile
  9557  002FF2  D001               	bra	u4456
  9558  002FF4                     u4455:
  9559  002FF4  828C               	bsf	3980,1,c	;volatile
  9560  002FF6                     u4456:
  9561                           
  9562                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  9563  002FF6  ECDD  F018         	call	_LCD_enable_pulse	;wreg free
  9564  002FFA  0012               	return		;funcret
  9565  002FFC                     __end_of_LCD_send_command:
  9566                           	opt stack 0
  9567                           tblptru	equ	0xFF8
  9568                           tblptrh	equ	0xFF7
  9569                           tblptrl	equ	0xFF6
  9570                           tablat	equ	0xFF5
  9571                           prodh	equ	0xFF4
  9572                           prodl	equ	0xFF3
  9573                           intcon	equ	0xFF2
  9574                           postinc0	equ	0xFEE
  9575                           wreg	equ	0xFE8
  9576                           indf2	equ	0xFDF
  9577                           postinc2	equ	0xFDE
  9578                           fsr2h	equ	0xFDA
  9579                           fsr2l	equ	0xFD9
  9580                           status	equ	0xFD8
  9581                           
  9582 ;; *************** function _LCD_enable_pulse *****************
  9583 ;; Defined at:
  9584 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;		None               void
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9598 ;;      Params:         0       0       0       0
  9599 ;;      Locals:         0       0       0       0
  9600 ;;      Temps:          0       0       0       0
  9601 ;;      Totals:         0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    6
  9605 ;; This function calls:
  9606 ;;		_delay_ms
  9607 ;; This function is called by:
  9608 ;;		_LCD_send_command
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text35
  9613  0031BA                     __ptext35:
  9614                           	opt stack 0
  9615  0031BA                     _LCD_enable_pulse:
  9616                           	opt stack 20
  9617                           
  9618                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
  9619                           
  9620                           ;incstack = 0
  9621  0031BA  828B               	bsf	3979,1,c	;volatile
  9622                           
  9623                           ;src\LCD_44780.c: 52: delay_ms (1);
  9624  0031BC  0E00               	movlw	0
  9625  0031BE  0100               	movlb	0	; () banked
  9626  0031C0  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  9627  0031C2  0E01               	movlw	1
  9628  0031C4  6F70               	movwf	delay_ms@value_ms& (0+255),b
  9629  0031C6  EC30  F018         	call	_delay_ms	;wreg free
  9630                           
  9631                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
  9632  0031CA  928B               	bcf	3979,1,c	;volatile
  9633                           
  9634                           ;src\LCD_44780.c: 54: delay_ms (1);
  9635  0031CC  0E00               	movlw	0
  9636  0031CE  0100               	movlb	0	; () banked
  9637  0031D0  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  9638  0031D2  0E01               	movlw	1
  9639  0031D4  6F70               	movwf	delay_ms@value_ms& (0+255),b
  9640  0031D6  EC30  F018         	call	_delay_ms	;wreg free
  9641  0031DA  0012               	return		;funcret
  9642  0031DC                     __end_of_LCD_enable_pulse:
  9643                           	opt stack 0
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           postinc0	equ	0xFEE
  9652                           wreg	equ	0xFE8
  9653                           indf2	equ	0xFDF
  9654                           postinc2	equ	0xFDE
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659 ;; *************** function _delay_ms *****************
  9660 ;; Defined at:
  9661 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  value_ms        2   16[BANK0 ] unsigned int 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;		None               void
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9675 ;;      Params:         0       2       0       0
  9676 ;;      Locals:         0       0       0       0
  9677 ;;      Temps:          0       0       0       0
  9678 ;;      Totals:         0       2       0       0
  9679 ;;Total ram usage:        2 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:    5
  9682 ;; This function calls:
  9683 ;;		___wmul
  9684 ;; This function is called by:
  9685 ;;		_LCD_enable_pulse
  9686 ;;		_LCD_initialize
  9687 ;;		_board_initialization
  9688 ;;		_delay_s
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text36
  9693  003060                     __ptext36:
  9694                           	opt stack 0
  9695  003060                     _delay_ms:
  9696                           	opt stack 24
  9697                           
  9698                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  9699                           
  9700                           ;incstack = 0
  9701  003060  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  9702  003064  6A3D               	clrf	___wmul@multiplier+1,c
  9703  003066  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
  9704  00306A  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  9705  00306E  ECCA  F018         	call	___wmul	;wreg free
  9706  003072  C03C  F043         	movff	?___wmul,_clock_counter_reference	;volatile
  9707  003076  C03D  F044         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  9708                           
  9709                           ;src\delay.c: 75: while (clock_counter_reference) {
  9710  00307A  D006               	goto	l93
  9711  00307C                     l4158:
  9712                           
  9713                           ;src\delay.c: 85: _delay(240);
  9714  00307C  0E50               	movlw	80
  9715  00307E                     u6297:
  9716  00307E  2EE8               	decfsz	wreg,f,c
  9717  003080  D7FE               	goto	u6297
  9718                           
  9719                           ;src\delay.c: 88: clock_counter_reference--;
  9720  003082  0643               	decf	_clock_counter_reference,f,c	;volatile
  9721  003084  A0D8               	btfss	status,0,c
  9722  003086  0644               	decf	_clock_counter_reference+1,f,c	;volatile
  9723  003088                     l93:
  9724  003088  5043               	movf	_clock_counter_reference,w,c	;volatile
  9725  00308A  1044               	iorwf	_clock_counter_reference+1,w,c	;volatile
  9726  00308C  B4D8               	btfsc	status,2,c
  9727  00308E  0012               	return	
  9728  003090  D7F5               	goto	l4158
  9729  003092                     __end_of_delay_ms:
  9730                           	opt stack 0
  9731                           tblptru	equ	0xFF8
  9732                           tblptrh	equ	0xFF7
  9733                           tblptrl	equ	0xFF6
  9734                           tablat	equ	0xFF5
  9735                           prodh	equ	0xFF4
  9736                           prodl	equ	0xFF3
  9737                           intcon	equ	0xFF2
  9738                           postinc0	equ	0xFEE
  9739                           wreg	equ	0xFE8
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           fsr2h	equ	0xFDA
  9743                           fsr2l	equ	0xFD9
  9744                           status	equ	0xFD8
  9745                           
  9746 ;; *************** function ___wmul *****************
  9747 ;; Defined at:
  9748 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  multiplier      2   24[COMRAM] unsigned int 
  9751 ;;  multiplicand    2   26[COMRAM] unsigned int 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  product         2   28[COMRAM] unsigned int 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  2   24[COMRAM] unsigned int 
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0, prodl, prodh
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9763 ;;      Params:         4       0       0       0
  9764 ;;      Locals:         2       0       0       0
  9765 ;;      Temps:          0       0       0       0
  9766 ;;      Totals:         6       0       0       0
  9767 ;;Total ram usage:        6 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    4
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		_delay_ms
  9774 ;;		_sprintf
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text37
  9779  003194                     __ptext37:
  9780                           	opt stack 0
  9781  003194                     ___wmul:
  9782                           	opt stack 24
  9783                           
  9784                           ;incstack = 0
  9785  003194  503C               	movf	___wmul@multiplier,w,c
  9786  003196  023E               	mulwf	___wmul@multiplicand,c
  9787  003198  CFF3 F040          	movff	prodl,___wmul@product
  9788  00319C  CFF4 F041          	movff	prodh,___wmul@product+1
  9789  0031A0  503C               	movf	___wmul@multiplier,w,c
  9790  0031A2  023F               	mulwf	___wmul@multiplicand+1,c
  9791  0031A4  50F3               	movf	prodl,w,c
  9792  0031A6  2641               	addwf	___wmul@product+1,f,c
  9793  0031A8  503D               	movf	___wmul@multiplier+1,w,c
  9794  0031AA  023E               	mulwf	___wmul@multiplicand,c
  9795  0031AC  50F3               	movf	prodl,w,c
  9796  0031AE  2641               	addwf	___wmul@product+1,f,c
  9797  0031B0  C040  F03C         	movff	___wmul@product,?___wmul
  9798  0031B4  C041  F03D         	movff	___wmul@product+1,?___wmul+1
  9799  0031B8  0012               	return	
  9800  0031BA                     __end_of___wmul:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           postinc0	equ	0xFEE
  9810                           wreg	equ	0xFE8
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           fsr2h	equ	0xFDA
  9814                           fsr2l	equ	0xFD9
  9815                           status	equ	0xFD8
  9816                           
  9817 ;; *************** function _Joystick_Polling *****************
  9818 ;; Defined at:
  9819 ;;		line 196 in file "telecomando.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;		None               void
  9826 ;; Registers used:
  9827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9833 ;;      Params:         0       0       0       0
  9834 ;;      Locals:         0       0       0       0
  9835 ;;      Temps:          1       0       0       0
  9836 ;;      Totals:         1       0       0       0
  9837 ;;Total ram usage:        1 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    4
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_main
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text38
  9848  002F38                     __ptext38:
  9849                           	opt stack 0
  9850  002F38                     _Joystick_Polling:
  9851                           	opt stack 26
  9852                           
  9853                           ;telecomando.c: 197: for (i = 0; i < 2; i++) {
  9854                           
  9855                           ;incstack = 0
  9856  002F38  0E00               	movlw	0
  9857  002F3A  6E15               	movwf	_i,c	;volatile
  9858  002F3C                     l3900:
  9859  002F3C  0E01               	movlw	1
  9860  002F3E  6415               	cpfsgt	_i,c	;volatile
  9861  002F40  D001               	goto	l256
  9862  002F42  0012               	return	
  9863  002F44                     l256:
  9864                           
  9865                           ;telecomando.c: 198: ADCON0bits.GO = 1;
  9866  002F44  82C2               	bsf	4034,1,c	;volatile
  9867  002F46                     l258:
  9868  002F46  B2C2               	btfsc	4034,1,c	;volatile
  9869  002F48  D7FE               	goto	l258
  9870                           
  9871                           ;telecomando.c: 200: JoystickValues[i] = ADRESH - 128;
  9872  002F4A  5015               	movf	_i,w,c	;volatile
  9873  002F4C  0D01               	mullw	1
  9874  002F4E  0E22               	movlw	low _JoystickValues
  9875  002F50  24F3               	addwf	prodl,w,c
  9876  002F52  6ED9               	movwf	fsr2l,c
  9877  002F54  0E00               	movlw	high _JoystickValues
  9878  002F56  20F4               	addwfc	prodh,w,c
  9879  002F58  6EDA               	movwf	fsr2h,c
  9880  002F5A  50C4               	movf	4036,w,c	;volatile
  9881  002F5C  0F80               	addlw	128
  9882  002F5E  6EDF               	movwf	indf2,c
  9883                           
  9884                           ;telecomando.c: 201: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  9885  002F60  A4C2               	btfss	4034,2,c	;volatile
  9886  002F62  D002               	goto	u4080
  9887  002F64  0E01               	movlw	1
  9888  002F66  D001               	goto	u4086
  9889  002F68                     u4080:
  9890  002F68  0E00               	movlw	0
  9891  002F6A                     u4086:
  9892  002F6A  0AFF               	xorlw	255
  9893  002F6C  6E3C               	movwf	??_Joystick_Polling& (0+255),c
  9894  002F6E  463C               	rlncf	??_Joystick_Polling,f,c
  9895  002F70  463C               	rlncf	??_Joystick_Polling,f,c
  9896  002F72  50C2               	movf	4034,w,c	;volatile
  9897  002F74  183C               	xorwf	??_Joystick_Polling,w,c
  9898  002F76  0BFB               	andlw	-5
  9899  002F78  183C               	xorwf	??_Joystick_Polling,w,c
  9900  002F7A  6EC2               	movwf	4034,c	;volatile
  9901  002F7C  2A15               	incf	_i,f,c	;volatile
  9902  002F7E  D7DE               	goto	l3900
  9903  002F80                     __end_of_Joystick_Polling:
  9904                           	opt stack 0
  9905                           tblptru	equ	0xFF8
  9906                           tblptrh	equ	0xFF7
  9907                           tblptrl	equ	0xFF6
  9908                           tablat	equ	0xFF5
  9909                           prodh	equ	0xFF4
  9910                           prodl	equ	0xFF3
  9911                           intcon	equ	0xFF2
  9912                           postinc0	equ	0xFEE
  9913                           wreg	equ	0xFE8
  9914                           indf2	equ	0xFDF
  9915                           postinc2	equ	0xFDE
  9916                           fsr2h	equ	0xFDA
  9917                           fsr2l	equ	0xFD9
  9918                           status	equ	0xFD8
  9919                           
  9920 ;; *************** function _ISR_bassa *****************
  9921 ;; Defined at:
  9922 ;;		line 106 in file "telecomando.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;		None
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;		None               void
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9936 ;;      Params:         0       0       0       0
  9937 ;;      Locals:         0       0       0       0
  9938 ;;      Temps:         17       0       0       0
  9939 ;;      Totals:        17       0       0       0
  9940 ;;Total ram usage:       17 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    3
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		Interrupt level 1
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	intcodelo
  9951  000018                     __pintcodelo:
  9952                           	opt stack 0
  9953  000018                     _ISR_bassa:
  9954                           	opt stack 20
  9955                           
  9956                           ;incstack = 0
  9957  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9958  00001A  CFD8 F024          	movff	status,??_ISR_bassa
  9959  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
  9960  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
  9961  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
  9962  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
  9963  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
  9964  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
  9965  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
  9966  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
  9967  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
  9968  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
  9969  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
  9970  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
  9971  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
  9972  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
  9973  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
  9974  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
  9975                           
  9976                           ;telecomando.c: 107: if (PIR2bits.TMR3IF) {
  9977  00005E  A2A1               	btfss	4001,1,c	;volatile
  9978  000060  D00B               	goto	i1l237
  9979                           
  9980                           ;telecomando.c: 108: time_counter++;
  9981  000062  0E01               	movlw	1
  9982  000064  2609               	addwf	_time_counter,f,c	;volatile
  9983  000066  0E00               	movlw	0
  9984  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
  9985  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
  9986  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
  9987                           
  9988                           ;telecomando.c: 109: TMR3H = 0x63;
  9989  00006E  0E63               	movlw	99
  9990  000070  6EB3               	movwf	4019,c	;volatile
  9991                           
  9992                           ;telecomando.c: 110: TMR3L = 0xC0;
  9993  000072  0EC0               	movlw	192
  9994  000074  6EB2               	movwf	4018,c	;volatile
  9995                           
  9996                           ;telecomando.c: 111: PIR2bits.TMR3IF = 0;
  9997  000076  92A1               	bcf	4001,1,c	;volatile
  9998  000078                     i1l237:
  9999  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10000  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10001  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10002  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10003  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10004  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10005  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10006  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10007  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10008  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10009  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10010  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10011  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10012  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10013  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10014  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10015  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10016  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10017  0000BE  0010               	retfie	
 10018  0000C0                     __end_of_ISR_bassa:
 10019                           	opt stack 0
 10020                           pclatu	equ	0xFFB
 10021                           pclath	equ	0xFFA
 10022                           tblptru	equ	0xFF8
 10023                           tblptrh	equ	0xFF7
 10024                           tblptrl	equ	0xFF6
 10025                           tablat	equ	0xFF5
 10026                           prodh	equ	0xFF4
 10027                           prodl	equ	0xFF3
 10028                           intcon	equ	0xFF2
 10029                           postinc0	equ	0xFEE
 10030                           fsr0h	equ	0xFEA
 10031                           fsr0l	equ	0xFE9
 10032                           wreg	equ	0xFE8
 10033                           fsr1h	equ	0xFE2
 10034                           fsr1l	equ	0xFE1
 10035                           bsr	equ	0xFE0
 10036                           indf2	equ	0xFDF
 10037                           postinc2	equ	0xFDE
 10038                           fsr2h	equ	0xFDA
 10039                           fsr2l	equ	0xFD9
 10040                           status	equ	0xFD8
 10041                           
 10042 ;; *************** function _ISR_alta *****************
 10043 ;; Defined at:
 10044 ;;		line 91 in file "telecomando.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;		None               void
 10051 ;; Registers used:
 10052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10058 ;;      Params:         0       0       0       0
 10059 ;;      Locals:         1       0       0       0
 10060 ;;      Temps:          0      16       0       0
 10061 ;;      Totals:         1      16       0       0
 10062 ;;Total ram usage:       17 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:    2
 10065 ;; This function calls:
 10066 ;;		_getsUSART
 10067 ;; This function is called by:
 10068 ;;		Interrupt level 2
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	intcode
 10073  000008                     __pintcode:
 10074                           	opt stack 0
 10075  000008                     _ISR_alta:
 10076                           	opt stack 20
 10077                           
 10078                           ;incstack = 0
 10079  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10080  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10081  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10082  000012  EDD9  F014         	call	int_func,f	;refresh shadow registers
 10083                           pclatu	equ	0xFFB
 10084                           pclath	equ	0xFFA
 10085                           tblptru	equ	0xFF8
 10086                           tblptrh	equ	0xFF7
 10087                           tblptrl	equ	0xFF6
 10088                           tablat	equ	0xFF5
 10089                           prodh	equ	0xFF4
 10090                           prodl	equ	0xFF3
 10091                           intcon	equ	0xFF2
 10092                           postinc0	equ	0xFEE
 10093                           fsr0h	equ	0xFEA
 10094                           fsr0l	equ	0xFE9
 10095                           wreg	equ	0xFE8
 10096                           fsr1h	equ	0xFE2
 10097                           fsr1l	equ	0xFE1
 10098                           bsr	equ	0xFE0
 10099                           indf2	equ	0xFDF
 10100                           postinc2	equ	0xFDE
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105                           	psect	intcode_body
 10106  0029B2                     __pintcode_body:
 10107                           	opt stack 20
 10108  0029B2                     int_func:
 10109                           	opt stack 20
 10110  0029B2  0006               	pop		; remove dummy address from shadow register refresh
 10111  0029B4  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10112  0029B8  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10113  0029BC  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10114  0029C0  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10115  0029C4  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10116  0029C8  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10117  0029CC  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10118  0029D0  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10119  0029D4  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10120  0029D8  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10121  0029DC  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10122  0029E0  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10123                           
 10124                           ;telecomando.c: 92: if (PIR1bits.RCIF == 1) {
 10125  0029E4  AA9E               	btfss	3998,5,c	;volatile
 10126  0029E6  D036               	goto	i2l233
 10127                           
 10128                           ;telecomando.c: 93: getsUSART((char*) USART_Rx, 7);
 10129  0029E8  0EE2               	movlw	low _USART_Rx
 10130  0029EA  6E36               	movwf	getsUSART@buffer,c
 10131  0029EC  0E00               	movlw	high _USART_Rx
 10132  0029EE  6E37               	movwf	getsUSART@buffer+1,c
 10133  0029F0  0E07               	movlw	7
 10134  0029F2  6E38               	movwf	getsUSART@len,c
 10135  0029F4  EC8E  F018         	call	_getsUSART	;wreg free
 10136                           
 10137                           ;telecomando.c: 94: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
 10138  0029F8  0EAA               	movlw	170
 10139  0029FA  0100               	movlb	0	; () banked
 10140  0029FC  19E2               	xorwf	_USART_Rx& (0+255),w,b
 10141  0029FE  A4D8               	btfss	status,2,c
 10142  002A00  D028               	goto	i2l5422
 10143                           
 10144                           ; BSR set to: 0
 10145  002A02  0EAA               	movlw	170
 10146  002A04  0100               	movlb	0	; () banked
 10147  002A06  19E8               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10148  002A08  A4D8               	btfss	status,2,c
 10149  002A0A  D023               	goto	i2l5422
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;telecomando.c: 95: actual_dir = USART_Rx[1];
 10153  002A0C  0100               	movlb	0	; () banked
 10154  002A0E  A1E3               	btfss	(_USART_Rx+1)& (0+255),0,b
 10155  002A10  D002               	goto	i2u619_40
 10156  002A12  8045               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10157  002A14  D001               	goto	i2u620_45
 10158  002A16                     i2u619_40:
 10159  002A16  9045               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10160  002A18                     i2u620_45:
 10161                           
 10162                           ;telecomando.c: 96: actual_speed_pk1 = USART_Rx[2];
 10163  002A18  C0E4  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10164                           
 10165                           ;telecomando.c: 97: actual_speed_pk0 = USART_Rx[3];
 10166  002A1C  C0E5  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10167                           
 10168                           ;telecomando.c: 98: ECU_Check = USART_Rx[4];
 10169  002A20  C0E6  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10170                           
 10171                           ;telecomando.c: 99: Battery_Check = USART_Rx[5];
 10172  002A24  C0E7  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10173                           
 10174                           ;telecomando.c: 100: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10175  002A28  0E01               	movlw	1
 10176  002A2A  6E3B               	movwf	_ISR_alta$1132,c
 10177  002A2C  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10178  002A2E  0100               	movlb	0	; () banked
 10179  002A30  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10180  002A32  6B60               	clrf	??_ISR_alta& (0+255),b
 10181  002A34  0100               	movlb	0	; () banked
 10182  002A36  5160               	movf	??_ISR_alta& (0+255),w,b
 10183  002A38  0100               	movlb	0	; () banked
 10184  002A3A  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10185  002A3C  A4D8               	btfss	status,2,c
 10186  002A3E  D005               	goto	i2l5420
 10187                           
 10188                           ; BSR set to: 0
 10189  002A40  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10190  002A42  A4D8               	btfss	status,2,c
 10191  002A44  D002               	goto	i2l5420
 10192                           
 10193                           ; BSR set to: 0
 10194  002A46  0E00               	movlw	0
 10195  002A48  6E3B               	movwf	_ISR_alta$1132,c
 10196  002A4A                     i2l5420:
 10197                           
 10198                           ; BSR set to: 0
 10199  002A4A  C03B  F0E0         	movff	_ISR_alta$1132,_actual_speed	;volatile
 10200  002A4E  0100               	movlb	0	; () banked
 10201  002A50  6BE1               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10202  002A52                     i2l5422:
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;telecomando.c: 101: }
 10206                           ;telecomando.c: 102: PIR1bits.RCIF = 0;
 10207  002A52  9A9E               	bcf	3998,5,c	;volatile
 10208  002A54                     i2l233:
 10209  002A54  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10210  002A58  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10211  002A5C  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10212  002A60  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10213  002A64  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10214  002A68  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10215  002A6C  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10216  002A70  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10217  002A74  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10218  002A78  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10219  002A7C  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10220  002A80  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10221  002A84  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10222  002A88  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10223  002A8C  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10224  002A8E  0011               	retfie		f
 10225  002A90                     __end_of_ISR_alta:
 10226                           	opt stack 0
 10227                           pclatu	equ	0xFFB
 10228                           pclath	equ	0xFFA
 10229                           tblptru	equ	0xFF8
 10230                           tblptrh	equ	0xFF7
 10231                           tblptrl	equ	0xFF6
 10232                           tablat	equ	0xFF5
 10233                           prodh	equ	0xFF4
 10234                           prodl	equ	0xFF3
 10235                           intcon	equ	0xFF2
 10236                           postinc0	equ	0xFEE
 10237                           fsr0h	equ	0xFEA
 10238                           fsr0l	equ	0xFE9
 10239                           wreg	equ	0xFE8
 10240                           fsr1h	equ	0xFE2
 10241                           fsr1l	equ	0xFE1
 10242                           bsr	equ	0xFE0
 10243                           indf2	equ	0xFDF
 10244                           postinc2	equ	0xFDE
 10245                           fsr2h	equ	0xFDA
 10246                           fsr2l	equ	0xFD9
 10247                           status	equ	0xFD8
 10248                           
 10249 ;; *************** function _getsUSART *****************
 10250 ;; Defined at:
 10251 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10254 ;;		 -> USART_Rx(7), 
 10255 ;;  len             1   20[COMRAM] unsigned char 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;  i               1   22[COMRAM] unsigned char 
 10258 ;;  data            1   21[COMRAM] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;		None               void
 10261 ;; Registers used:
 10262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10268 ;;      Params:         3       0       0       0
 10269 ;;      Locals:         2       0       0       0
 10270 ;;      Temps:          0       0       0       0
 10271 ;;      Totals:         5       0       0       0
 10272 ;;Total ram usage:        5 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    1
 10275 ;; This function calls:
 10276 ;;		_ReadUSART
 10277 ;; This function is called by:
 10278 ;;		_ISR_alta
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text41
 10283  00311C                     __ptext41:
 10284                           	opt stack 0
 10285  00311C                     _getsUSART:
 10286                           	opt stack 20
 10287                           
 10288                           ;incstack = 0
 10289  00311C  0E00               	movlw	0
 10290  00311E  6E3A               	movwf	getsUSART@i,c
 10291  003120  D00E               	goto	i2l3822
 10292  003122                     i2l376:
 10293  003122  AA9E               	btfss	3998,5,c	;volatile
 10294  003124  D7FE               	goto	i2l376
 10295  003126  ECFD  F018         	call	_ReadUSART	;wreg free
 10296  00312A  6E39               	movwf	getsUSART@data,c
 10297  00312C  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10298  003130  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10299  003134  C039  FFDF         	movff	getsUSART@data,indf2
 10300  003138  4A36               	infsnz	getsUSART@buffer,f,c
 10301  00313A  2A37               	incf	getsUSART@buffer+1,f,c
 10302  00313C  2A3A               	incf	getsUSART@i,f,c
 10303  00313E                     i2l3822:
 10304  00313E  5038               	movf	getsUSART@len,w,c
 10305  003140  5C3A               	subwf	getsUSART@i,w,c
 10306  003142  B0D8               	btfsc	status,0,c
 10307  003144  0012               	return	
 10308  003146  D7ED               	goto	i2l376
 10309  003148                     __end_of_getsUSART:
 10310                           	opt stack 0
 10311                           pclatu	equ	0xFFB
 10312                           pclath	equ	0xFFA
 10313                           tblptru	equ	0xFF8
 10314                           tblptrh	equ	0xFF7
 10315                           tblptrl	equ	0xFF6
 10316                           tablat	equ	0xFF5
 10317                           prodh	equ	0xFF4
 10318                           prodl	equ	0xFF3
 10319                           intcon	equ	0xFF2
 10320                           postinc0	equ	0xFEE
 10321                           fsr0h	equ	0xFEA
 10322                           fsr0l	equ	0xFE9
 10323                           wreg	equ	0xFE8
 10324                           fsr1h	equ	0xFE2
 10325                           fsr1l	equ	0xFE1
 10326                           bsr	equ	0xFE0
 10327                           indf2	equ	0xFDF
 10328                           postinc2	equ	0xFDE
 10329                           fsr2h	equ	0xFDA
 10330                           fsr2l	equ	0xFD9
 10331                           status	equ	0xFD8
 10332                           
 10333 ;; *************** function _ReadUSART *****************
 10334 ;; Defined at:
 10335 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  data            1   17[COMRAM] unsigned char 
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      unsigned char 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10349 ;;      Params:         0       0       0       0
 10350 ;;      Locals:         1       0       0       0
 10351 ;;      Temps:          0       0       0       0
 10352 ;;      Totals:         1       0       0       0
 10353 ;;Total ram usage:        1 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; This function calls:
 10356 ;;		Nothing
 10357 ;; This function is called by:
 10358 ;;		_getsUSART
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text42
 10363  0031FA                     __ptext42:
 10364                           	opt stack 0
 10365  0031FA                     _ReadUSART:
 10366                           	opt stack 20
 10367                           
 10368                           ;incstack = 0
 10369  0031FA  0EF2               	movlw	242
 10370  0031FC  1611               	andwf	_USART_Status,f,c
 10371  0031FE  ACAB               	btfss	4011,6,c	;volatile
 10372  003200  D003               	goto	i2l434
 10373  003202  9011               	bcf	_USART_Status,0,c
 10374  003204  B0AB               	btfsc	4011,0,c	;volatile
 10375  003206  8011               	bsf	_USART_Status,0,c
 10376  003208                     i2l434:
 10377  003208  B4AB               	btfsc	4011,2,c	;volatile
 10378  00320A  8411               	bsf	_USART_Status,2,c
 10379  00320C  B2AB               	btfsc	4011,1,c	;volatile
 10380  00320E  8611               	bsf	_USART_Status,3,c
 10381  003210  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10382  003214  5035               	movf	ReadUSART@data,w,c
 10383  003216  0012               	return	
 10384  003218                     __end_of_ReadUSART:
 10385                           	opt stack 0
 10386                           pclatu	equ	0xFFB
 10387                           pclath	equ	0xFFA
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           intcon	equ	0xFF2
 10395                           postinc0	equ	0xFEE
 10396                           fsr0h	equ	0xFEA
 10397                           fsr0l	equ	0xFE9
 10398                           wreg	equ	0xFE8
 10399                           fsr1h	equ	0xFE2
 10400                           fsr1l	equ	0xFE1
 10401                           bsr	equ	0xFE0
 10402                           indf2	equ	0xFDF
 10403                           postinc2	equ	0xFDE
 10404                           fsr2h	equ	0xFDA
 10405                           fsr2l	equ	0xFD9
 10406                           status	equ	0xFD8
 10407                           pclatu	equ	0xFFB
 10408                           pclath	equ	0xFFA
 10409                           tblptru	equ	0xFF8
 10410                           tblptrh	equ	0xFF7
 10411                           tblptrl	equ	0xFF6
 10412                           tablat	equ	0xFF5
 10413                           prodh	equ	0xFF4
 10414                           prodl	equ	0xFF3
 10415                           intcon	equ	0xFF2
 10416                           postinc0	equ	0xFEE
 10417                           fsr0h	equ	0xFEA
 10418                           fsr0l	equ	0xFE9
 10419                           wreg	equ	0xFE8
 10420                           fsr1h	equ	0xFE2
 10421                           fsr1l	equ	0xFE1
 10422                           bsr	equ	0xFE0
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           fsr2h	equ	0xFDA
 10426                           fsr2l	equ	0xFD9
 10427                           status	equ	0xFD8
 10428                           
 10429                           	psect	rparam
 10430  0000                     pclatu	equ	0xFFB
 10431                           pclath	equ	0xFFA
 10432                           tblptru	equ	0xFF8
 10433                           tblptrh	equ	0xFF7
 10434                           tblptrl	equ	0xFF6
 10435                           tablat	equ	0xFF5
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           intcon	equ	0xFF2
 10439                           postinc0	equ	0xFEE
 10440                           fsr0h	equ	0xFEA
 10441                           fsr0l	equ	0xFE9
 10442                           wreg	equ	0xFE8
 10443                           fsr1h	equ	0xFE2
 10444                           fsr1l	equ	0xFE1
 10445                           bsr	equ	0xFE0
 10446                           indf2	equ	0xFDF
 10447                           postinc2	equ	0xFDE
 10448                           fsr2h	equ	0xFDA
 10449                           fsr2l	equ	0xFD9
 10450                           status	equ	0xFD8
 10451                           
 10452                           	psect	temp
 10453  000047                     btemp:
 10454                           	opt stack 0
 10455  000047                     	ds	1
 10456  0000                     int$flags	set	btemp
 10457                           pclatu	equ	0xFFB
 10458                           pclath	equ	0xFFA
 10459                           tblptru	equ	0xFF8
 10460                           tblptrh	equ	0xFF7
 10461                           tblptrl	equ	0xFF6
 10462                           tablat	equ	0xFF5
 10463                           prodh	equ	0xFF4
 10464                           prodl	equ	0xFF3
 10465                           intcon	equ	0xFF2
 10466                           postinc0	equ	0xFEE
 10467                           fsr0h	equ	0xFEA
 10468                           fsr0l	equ	0xFE9
 10469                           wreg	equ	0xFE8
 10470                           fsr1h	equ	0xFE2
 10471                           fsr1l	equ	0xFE1
 10472                           bsr	equ	0xFE0
 10473                           indf2	equ	0xFDF
 10474                           postinc2	equ	0xFDE
 10475                           fsr2h	equ	0xFDA
 10476                           fsr2l	equ	0xFD9
 10477                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    144
    Data        1
    BSS         77
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    114     144
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Tx(BANK0[7]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(BANK0[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[8]), STR_8(CODE[21]), STR_7(CODE[5]), STR_5(CODE[2]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[12]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  133530
                                            106 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   48127
                      _LCD_backlight
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           0     0      0     130
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   78996
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    9981
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9300
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8780
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1264
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     72      90       4       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       9        0.0%
DATA                 0      0      FB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 28 20:52:50 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l93 3088                    ___awdiv@sign 0075                              bsr 000FE0  
           ___wmul@multiplicand 003E                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                     __CFG_LVP$ON 000000  
                           l241 1D24                             l410 2E80                             l242 1D36  
                           l411 2E82                             l404 2E60                             l421 3148  
                           l256 2F44                             l352 09B8                             l408 2E74  
                           l409 2E76                             l258 2F46                             l905 2EE6  
                           l659 2536                             l763 226A                             l852 2BEC  
                           l756 21A6                             l669 2654                             l757 21EA  
                           l862 2DBC                             l946 0E28                             l963 0F9C  
                           l947 0E1C                             l972 1030                             l948 0DE8  
                  getsUSART@len 0038                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 0075                             _dir 0229                             _str 0119  
                  ___awmod@sign 0041                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 008B                    ___flmul@bexp 0090                    ___flmul@sign 008A  
                  ___flmul@temp 0095                    ___flmul@prod 0091          __size_of_LCD_goto_line 00EC  
                  ___fltol@exp1 00A9                    __CFG_WDT$OFF 000000                            l1032 11A4  
                          l1041 14AE                            l1061 2012                            l1054 1F66  
                          l1039 1440                            l1049 1552                            l1068 206E  
                          l1069 2086                            l4210 0CF8                            l4204 0CD4  
                          l4222 0D2C                            l4214 0D02                            l5102 067A  
                          l4400 1168                            l5104 0690                            l3272 3224  
                          l4322 0FE4                            l5114 0734                            l5106 06CC  
                          l5042 0448                            l5034 0416                            l4316 0FCE  
                          l4332 1004                            l4308 0F7C                            l4252 0D68  
                          l4180 0C66                            l4500 157C                            l4412 11B8  
                          l5220 0BEA                            l5212 0B92                            l5204 0B5E  
                          l5132 0848                            l5108 06E2                            l5052 04AA  
                          l5028 03FC                            l4158 307C                            l4342 102A  
                          l4326 0FF0                            l4334 100A                            l4270 0E0C  
                          l4190 0C94                            l4406 118C                            l5150 08C0  
                          l5134 084E                            l5118 0766                            l5206 0B6C  
                          l5046 0484                            l3800 2EDC                            l4360 10BA  
                          l4352 1086                            l4280 0E4C                            l4264 0DFC  
                          l4520 2AC2                            l4416 11CC                            l4408 1192  
                          l5224 0C16                            l5216 0BBA                            l5152 08C8  
                          l5160 095E                            l5128 07D0                            l5064 04F0  
                          l5056 04B0                            l5048 049A                            l4290 0E90  
                          l4266 0E02                            l4186 0C8A                            l4530 2AF2  
                          l4514 2AAC                            l5170 099A                            l5162 096C  
                          l5146 0894                            l5090 05C4                            l5074 0542  
                          l5058 04D6                            l5226 0C1C                            l3900 2F3C  
                          l4372 10DE                            l4364 10C6                            l4356 1098  
                          l5228 0C3A                            l5332 2728                            l4366 10CA  
                          l4294 0E9A                            l4198 0CC0                            l4526 2AE0  
                          l4542 2B30                            l4390 1138                            l4382 110E  
                          l5182 09EC                            l5174 09BC                            l5334 273A  
                          l3734 2E62                            l3726 2E54                            l4288 0E8A  
                          l4528 2AEC                            l4464 1454                            l4392 114A  
                          l4640 1704                            l5168 0986                            l5336 274A  
                          l4810 25C4                            l4298 0EAC                            l4722 2220  
                          l4546 2B44                            l4538 2B22                            l4570 2E08  
                          l4562 2DEE                            l4490 1538                            l4474 14A8  
                          l4458 142A                            l4626 1C94                            l4618 1BB4  
                          l4650 17EA                            l5186 0A4E                            l5098 0648  
                          l5434 1D16                            l4820 26A0                            l4732 2250  
                          l4484 14FE                            l4388 1132                            l5196 0B36  
                          l5460 1E24                            l5444 1D30                            l3790 2EBC  
                          l4814 260C                            l4806 2586                            l4910 2DAC  
                          l4902 2D54                            l4742 240C                            l4734 2260  
                          l4726 2234                            l4582 2E34                            l4574 2E1C  
                          l4566 2DFC                            l4558 2DE2                            l4646 17BE  
                          l5198 0B44                            l5470 1EA2                            l3792 2EC0  
                          l4904 2D62                            l4920 1F76                            l4568 2E04  
                          l4488 1524                            l4664 1A04                            l5464 1E2E  
                          l5456 1E10                            l4906 2D68                            l4930 1FB6  
                          l4770 24C8                            l4762 2478                            l4578 2E26  
                          l4498 1572                            l4658 194A                            l3788 2EB4  
                          l4828 30DE                            l4940 2060                            l4932 1FF4  
                          l4748 242E                            l4692 2152                            l4676 31F2  
                          l4854 284E                            l4838 27E0                            l4926 1F9E  
                          l4782 24FA                            l4686 211E                            l4960 28FE  
                          l4872 28B4                            l4864 287E                            l4952 20D8  
                          l4928 1FA6                            l4792 2524                            l4962 2930  
                          l4970 30F2                            l4866 288E                            l4858 2862  
                          l4882 2B78                            l4938 2050                            l4794 2530  
                          l4786 250A                            l4964 2962                            l4868 2898  
                          l4884 2B86                            l4958 28CC                            l4966 2994  
                          l4974 3108                            l4982 3184                            l4894 2BDC  
                          l4886 2B8C                            l4978 3170                   getsUSART@data 0039  
                          STR_1 0391                            STR_2 03BB                            STR_3 03E5  
                          STR_4 03DB                            STR_5 03E9                            STR_6 03C7  
                          STR_7 03E0                            STR_8 03A6                            STR_9 03D3  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u5010 1512  
                          _PIE1 000F9D                            u4080 2F68                            u3515 3234  
                          u3516 3236                            u4086 2F6A                            u4425 2FD2  
                          u4426 2FD4                            u4435 2FDE                            u5251 20FC  
                          u4436 2FE0                            u4445 2FEA                            u4446 2FEC  
                          u4550 0DB2                            u4455 2FF4                            u5271 2130  
                          u4456 2FF6                            u4560 0DCA                            u4570 0DCC  
                          u5480 2800                            u6280 1F06                            u4930 13CC  
                          u5485 27F4                            u4935 13C0                            u6297 307E  
                          u5940 09B0                            _main 1CE6       __size_of_LCD_send_command 0036  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0047                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00C0  
                 __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032                    _sprintf$2311 0100  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 31DC  
                 _LCD_backlight 322A         __size_of_LCD_initialize 016E                   ___fltol@sign1 00A8  
               __end_of___fladd 10F0                           ?_main 0024                 __end_of___awdiv 2B4E  
               __end_of___flneg 30F0                 __end_of___awmod 2E3E                 __end_of___flmul 1596  
               __end_of___flsub 2F38                 __end_of___fltol 28C6                 __end_of___lldiv 2BFE  
               ___awdiv@divisor 0072                 __end_of___llmod 2DCE                           _T3CON 000FB1  
               __end_of___lwdiv 2EF0                           i1l237 0078                           i2l233 2A54  
                         i2l434 3208                           i2l376 3122                 ___awdiv@counter 0074  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR3H 000FB3  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 2A90                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 0391                           _scale 1596                 __end_of_isdigit 31FA  
                __pbitbssCOMRAM 0228                           tablat 000FF5                           status 000FD8  
               __end_of_sprintf 0C48                  __CFG_PBADEN$ON 000000                     ?_USART_Send 0024  
           __size_of_LCD_cursor 0032                  WriteUSART@data 003C                 __initialization 2F80  
                ?_LCD_backlight 0024                    __end_of_main 1F1C   __size_of_board_initialization 00A6  
                 _LCD_goto_line 28C6               ?_Joystick_Polling 0024              ??_Joystick_Polling 003C  
             ?_LCD_write_string 007A                          ??_main 00CA                   __activetblptr 000002  
                _JoystickValues 0022              ??_LCD_write_string 0043            __size_of__tdiv_to_l_ 0192  
             __end_of_LCD_clear 3060          LCD_write_string@buffer 007A                          _ADCON1 000FC1  
              ___llmod@dividend 0070                          ?_scale 0097                          _ADRESH 000FC4  
              ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000                 getsUSART@buffer 0036  
                        i2l5420 2A4A                          i2l3822 313E                          i2l5422 2A52  
            __size_of_ReadUSART 001E                          _SPBRGH 000FB0                __end_of___xxtofl 20EA  
               _switch_position 0019                __end_of_delay_ms 3092                  __CFG_XINST$OFF 000000  
             __end_of_ISR_bassa 00C0                __end_of__powers_ 0369              __size_of_OpenUSART 0060  
                ?_LCD_goto_line 0024                          ___flge 2548                       ??___fladd 00AC  
              _delay_set_quartz 3238                          ___wmul 3194                       ??___awdiv 0042  
                     ??___flneg 0040                  __CFG_STVREN$ON 000000                       ??___awmod 0040  
                     ??___flmul 0086                       ??___flsub 0043                       ??___fltol 00A4  
                     ??___lldiv 003C                       ??___llmod 003C                       ??___lwdiv 0040  
       __size_of_LCD_write_char 0096                          _fround 1A30  LCD_initialize@quartz_frequency 0077  
                        clear_0 2F86                          clear_1 2F92                          clear_2 2FA0  
              ___awdiv@quotient 0076                 ___awmod@divisor 003E            __size_of_LCD_Handler 0116  
               ___awmod@counter 0040                 __CFG_BOREN$BOHW 000000               _JoystickConstants 001A  
                  __pdataCOMRAM 0046                       ??_isdigit 003C                    __mediumconst 0000  
                        tblptrh 000FF7                  _analogic_brake 0014                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0030                       ??_sprintf 00C8  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                      __accesstop 0060  
       __end_of__initialization 2FB8                      ___flneg@f1 003C                _LCD_send_command 2FC6  
                 ___rparam_used 000001                      ___fltol@f1 00A0                 ??_LCD_backlight 003C  
                    _WriteUSART 3218                  __pcstackCOMRAM 0024                       ?_ISR_alta 0024  
                 __end_of_scale 1A30                  _LCD_initialize 227C               _LCD_write_message 30F0  
             __end_of_ReadUSART 3218              ?_LCD_write_message 007A                      __div_to_l_ 23EA  
                  ??_LCD_cursor 0043                    _actual_speed 00E0              __size_of_getsUSART 002C  
                 ReadUSART@data 0035               __end_of_OpenUSART 2E9E                 __div_to_l_@exp1 0041  
           ??_LCD_write_message 0043                 __div_to_l_@cntr 0040                         ??_scale 0043  
               __div_to_l_@quot 003C                      __pbssBANK0 00D2                      __pbssBANK1 0119  
                    __pnvCOMRAM 0043                      _actual_dir 0228                   __div_to_l_@f1 0070  
                 __div_to_l_@f2 0074                 ??_LCD_goto_line 0043              __end_of_LCD_cursor 302E  
        __end_of_LCD_initialize 23EA                         ?___flge 0070                         ?___wmul 003C  
                    ??_ISR_alta 0060       __end_of_LCD_write_message 311C               ?_LCD_enable_pulse 0024  
                 putsUSART@data 003D                         ?_fround 0097              ??_LCD_enable_pulse 0042  
                     ?___xxtofl 0070                LCD_cursor@active 0076                       ?_delay_ms 0070  
            __size_of_putsUSART 0026                    ??_USART_Send 003F               __end_of__npowers_ 0335  
                       __Hparam 0000                      _scale$2310 009B                         __Lparam 0000  
              delay_ms@value_ms 0070               __end_of_getsUSART 3148                     ?_WriteUSART 0024  
               ?_LCD_initialize 0024                 __size_of___flge 015C                         ___fladd 0C48  
                       ___awdiv 2A90                         ___flneg 30C2                         ___awmod 2DCE  
                       ___flmul 10F0                         ___flsub 2EF0                         ___fltol 27BA  
                       ___lldiv 2B4E                 __size_of___wmul 0026                  _LCD_write_char 2CA4  
                       ___llmod 2D3A                         ___lwdiv 2E9E                    __psmallconst 0300  
                       __pcinit 2F80                 __size_of_fround 02B6                         __ramtop 0300  
           LCD_write_char@value 0079                         __ptext0 1CE6                         __ptext1 2BFE  
                       __ptext2 2E3E                         __ptext3 227C                         __ptext4 3238  
                       __ptext5 2FFC                         __ptext6 322A                         __ptext7 3092  
                       __ptext8 3148                         __ptext9 3218                       _ECU_Check 0010  
                   ?__div_to_l_ 0070                LCD_write_char@D0 0078                LCD_write_char@D1 0077  
              LCD_write_char@D2 0076                LCD_write_char@D3 0075                         _dpowers 0369  
                       _isdigit 31DC                      ??___xxtofl 0074                ___awmod@dividend 003C  
                    ??_delay_ms 0042    __end_of_board_initialization 2CA4       __size_of_Joystick_Polling 0048  
            __end_of_USART_Send 30C2        __end_of_delay_set_quartz 3240                         _sprintf 03EC  
                __pintcode_body 29B2                       _LCD_clear 302E            end_of_initialization 2FB8  
     __size_of_LCD_write_string 0026                   __Lmediumconst 0000                         int_func 29B2  
                 _Battery_Check 000F             LCD_backlight@active 003C                 ___lldiv@divisor 0074  
            LCD_cursor@blinking 0075                 ___lldiv@counter 0040          __end_of_LCD_write_char 2D3A  
                     _RCSTAbits 000FAB                         postinc0 000FEE                         postinc2 000FDE  
             __end_of_putsUSART 316E      __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0070  
                __tdiv_to_l_@f2 0074                       _ISR_bassa 0018                   ??__tdiv_to_l_ 003C  
                     _PORTAbits 000F80        __end_of_LCD_send_command 2FFC                     ___fladd@grs 00B7  
                 ___xxtofl@sign 0078                       _TRISCbits 000F94                      getsUSART@i 003A  
           __size_of_WriteUSART 0012                      ?_LCD_clear 0024         _clock_counter_reference 0043  
                   ___flmul@grs 008C                       _TXSTAbits 000FAC             __size_of__div_to_l_ 015E  
       LCD_write_integer@F17027 00D2                 ?_LCD_write_char 0024                   ??_LCD_Handler 0043  
                __end_of___flge 26A4                      ?_ISR_bassa 0024                  __end_of___wmul 31BA  
                 __pidataCOMRAM 3240               __size_of_ISR_alta 2A88                  __end_of_fround 1CE6  
           start_initialization 2F80                       _ReadUSART 31FA             __end_of__tdiv_to_l_ 227C  
                     _OpenUSART 2E3E                 ___llmod@divisor 0074                 ___llmod@counter 003C  
         __end_of_LCD_backlight 3238                        ??___flge 003C            _board_initialization 2BFE  
                      ??___wmul 0040                __CFG_LPT1OSC$OFF 000000                        ??_fround 0043  
                 sprintf@tmpval 010E                       ___fladd@a 00A8                       ___fladd@b 00A4  
                    fround@prec 00A3             __end_of_LCD_Handler 27BA                       ___flmul@a 0082  
                     ___flmul@b 007E                     __pbssCOMRAM 0001                       ___flsub@a 00BC  
                     ___flsub@b 00B8                      ?_ReadUSART 0024                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 2F38               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$1916 003D               __size_of_delay_ms 0032  
                   ??_LCD_clear 0043         LCD_write_message@buffer 007A                   _ISR_alta$1132 003B  
              _LCD_write_string 316E                      ?_OpenUSART 003C                     sprintf@flag 0106  
                   sprintf@fval 0114                     sprintf@prec 0112                ??_LCD_initialize 0043  
     delay_set_quartz@frequency 003C                ___lwdiv@dividend 003C              LCD_send_command@D0 0074  
            LCD_send_command@D1 0073              LCD_send_command@D2 0072              LCD_send_command@D3 0042  
                  ??_WriteUSART 003C           __end_of_LCD_goto_line 29B2           ?_board_initialization 0024  
                     __pintcode 0008                        ?___fladd 00A4                        ?___awdiv 0070  
                      ?___flneg 003C                        ?___awmod 003C                        ?___flmul 007E  
                      ?___flsub 00B8                        ?___fltol 00A0                        ?___lldiv 0070  
                      ?___llmod 0070                       __npowers_ 0301                        ?___lwdiv 003C  
                   ??_ISR_bassa 0024                       _getsUSART 311C                     __pintcodelo 0018  
                   __tdiv_to_l_ 20EA                    ??__div_to_l_ 003C                     __smallconst 0300  
                      ?_isdigit 0024                ___lwdiv@quotient 0040                        ?_sprintf 00C0  
                __size_of_scale 049A              __end_of_WriteUSART 322A               ?_delay_set_quartz 0024  
            ??_delay_set_quartz 003C                  ___wmul@product 0040                        _LATAbits 000F89  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 0046                        _PIE1bits 000F9D  
                      _PIE2bits 000FA0                        _PIR1bits 000F9E              __end_of__div_to_l_ 2548  
                      _PIR2bits 000FA1                        i2u620_45 2A18                        i2u619_40 2A16  
                     _pr_time_1 00DC                       _pr_time_2 0001                       _pr_time_3 0005  
                     _set_speed 000D                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _ISR_alta 0008                     _LCD_Handler 26A4                      ?_getsUSART 0036  
                      _USART_Rx 00E2                        _USART_Tx 00E9                      _ADCON0bits 000FC2  
                     _putsUSART 3148                      _ADCON2bits 000FC0               ___wmul@multiplier 003C  
             ?_LCD_send_command 0072                _actual_speed_pk0 0012                _actual_speed_pk1 0013  
              _actual_speed_kmh 00D8                     ??_ReadUSART 0035              ??_LCD_send_command 0042  
                 _set_speed_pk0 0016                   _set_speed_pk1 0017                     ??_OpenUSART 003E  
              ??_LCD_write_char 0043                 OpenUSART@config 003E               LCD_goto_line@line 0075  
                      __Hrparam 0000          ??_board_initialization 0043                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 002E  
              __size_of___awmod 0070                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00B0                __size_of___llmod 0094  
              __size_of___lwdiv 0052                     _fround$2308 009F                     _fround$2309 009B  
                    ?_putsUSART 003D                      sprintf@exp 010C                      sprintf@val 0108  
                      ___xxtofl 1F1C                __size_of_isdigit 001E                        _delay_ms 3060  
               ___lwdiv@divisor 003E                 ___lwdiv@counter 0042                _LCD_enable_pulse 31BA  
                      __ptext10 26A4                        __ptext11 03EC                        __ptext20 1F1C  
                      __ptext12 1596                        __ptext21 2D3A                        __ptext13 31DC  
                      __ptext30 30F0                        __ptext22 2B4E                        __ptext14 1A30  
                      __ptext31 2CA4                        __ptext23 27BA                        __ptext15 10F0  
                      __ptext32 28C6                        __ptext24 2EF0                        __ptext16 2DCE  
                      __ptext41 311C                        __ptext33 302E                        __ptext25 0C48  
                      __ptext17 2A90                        __ptext42 31FA                        __ptext34 2FC6  
                      __ptext26 30C2                        __ptext18 20EA                        __ptext35 31BA  
                      __ptext27 2548                        __ptext19 23EA                        __ptext36 3060  
                      __ptext28 2E9E                        __ptext37 3194                        __ptext29 316E  
                      __ptext38 2F38                        __powers_ 0335                __size_of_sprintf 085C  
                 __size_of_main 0236        __end_of_Joystick_Polling 2F80                        int$flags 0047  
                   ??_getsUSART 0039        __end_of_LCD_write_string 3194                      _LCD_cursor 2FFC  
                    _INTCONbits 000FF2                    _set_steering 0018                  OpenUSART@spbrg 003C  
                      isdigit@c 003E                        scale@scl 009F                    _time_counter 0009  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007D                       sprintf@sp 00C0                __tdiv_to_l_@cntr 007C  
              __tdiv_to_l_@quot 0078                ___lldiv@dividend 0070                    ?__tdiv_to_l_ 0070  
                   ??_putsUSART 003F                        sprintf@c 0118                        sprintf@f 00C2  
              ___lldiv@quotient 003C          __size_of_LCD_backlight 000E                   ___fladd@signs 00B4  
                  ___fladd@aexp 00B5                    ___fladd@bexp 00B6                    _USART_Status 0011  
                    _USART_Send 3092  
