

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 14 21:42:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  003098                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  003098  08                 	db	8
    72                           
    73                           	psect	mediumconst
    74  003EEA                     __pmediumconst:
    75                           	opt stack 0
    76  003EEA  00                 	db	0
    77  003EEB                     __npowers_:
    78                           	opt stack 0
    79  003EEB  0000               	dw	0
    80  003EED  3F80               	dw	16256
    81  003EEF  CCCD               	dw	52429
    82  003EF1  3DCC               	dw	15820
    83  003EF3  D70A               	dw	55050
    84  003EF5  3C23               	dw	15395
    85  003EF7  126F               	dw	4719
    86  003EF9  3A83               	dw	14979
    87  003EFB  B717               	dw	46871
    88  003EFD  38D1               	dw	14545
    89  003EFF  C5AC               	dw	50604
    90  003F01  3727               	dw	14119
    91  003F03  37BD               	dw	14269
    92  003F05  3586               	dw	13702
    93  003F07  BF95               	dw	49045
    94  003F09  33D6               	dw	13270
    95  003F0B  CC77               	dw	52343
    96  003F0D  322B               	dw	12843
    97  003F0F  705F               	dw	28767
    98  003F11  3089               	dw	12425
    99  003F13  E6FF               	dw	59135
   100  003F15  2EDB               	dw	11995
   101  003F17  E508               	dw	58632
   102  003F19  1E3C               	dw	7740
   103  003F1B  4260               	dw	16992
   104  003F1D  0DA2               	dw	3490
   105  003F1F                     __end_of__npowers_:
   106                           	opt stack 0
   107  003F1F                     __powers_:
   108                           	opt stack 0
   109  003F1F  0000               	dw	0
   110  003F21  3F80               	dw	16256
   111  003F23  0000               	dw	0
   112  003F25  4120               	dw	16672
   113  003F27  0000               	dw	0
   114  003F29  42C8               	dw	17096
   115  003F2B  0000               	dw	0
   116  003F2D  447A               	dw	17530
   117  003F2F  4000               	dw	16384
   118  003F31  461C               	dw	17948
   119  003F33  5000               	dw	20480
   120  003F35  47C3               	dw	18371
   121  003F37  2400               	dw	9216
   122  003F39  4974               	dw	18804
   123  003F3B  9680               	dw	38528
   124  003F3D  4B18               	dw	19224
   125  003F3F  BC20               	dw	48160
   126  003F41  4CBE               	dw	19646
   127  003F43  6B28               	dw	27432
   128  003F45  4E6E               	dw	20078
   129  003F47  02F9               	dw	761
   130  003F49  5015               	dw	20501
   131  003F4B  78EC               	dw	30956
   132  003F4D  60AD               	dw	24749
   133  003F4F  F2CA               	dw	62154
   134  003F51  7149               	dw	29001
   135  003F53                     __end_of__powers_:
   136                           	opt stack 0
   137  003F53                     _dpowers:
   138                           	opt stack 0
   139  003F53  0001               	dw	1
   140  003F55  0000               	dw	0
   141  003F57  000A               	dw	10
   142  003F59  0000               	dw	0
   143  003F5B  0064               	dw	100
   144  003F5D  0000               	dw	0
   145  003F5F  03E8               	dw	1000
   146  003F61  0000               	dw	0
   147  003F63  2710               	dw	10000
   148  003F65  0000               	dw	0
   149  003F67  86A0               	dw	34464
   150  003F69  0001               	dw	1
   151  003F6B  4240               	dw	16960
   152  003F6D  000F               	dw	15
   153  003F6F  9680               	dw	38528
   154  003F71  0098               	dw	152
   155  003F73  E100               	dw	57600
   156  003F75  05F5               	dw	1525
   157  003F77  CA00               	dw	51712
   158  003F79  3B9A               	dw	15258
   159  003F7B                     __end_of_dpowers:
   160                           	opt stack 0
   161  003F7B                     STR_3:
   162  003F7B  54                 	db	84	;'T'
   163  003F7C  75                 	db	117	;'u'
   164  003F7D  72                 	db	114	;'r'
   165  003F7E  6E                 	db	110	;'n'
   166  003F7F  20                 	db	32
   167  003F80  74                 	db	116	;'t'
   168  003F81  68                 	db	104	;'h'
   169  003F82  65                 	db	101	;'e'
   170  003F83  20                 	db	32
   171  003F84  73                 	db	115	;'s'
   172  003F85  77                 	db	119	;'w'
   173  003F86  69                 	db	105	;'i'
   174  003F87  74                 	db	116	;'t'
   175  003F88  63                 	db	99	;'c'
   176  003F89  68                 	db	104	;'h'
   177  003F8A  20                 	db	32
   178  003F8B  4F                 	db	79	;'O'
   179  003F8C  4E                 	db	78	;'N'
   180  003F8D  21                 	db	33
   181  003F8E  20                 	db	32
   182  003F8F  00                 	db	0
   183  003F90                     STR_2:
   184  003F90  3D                 	db	61	;'='
   185  003F91  3D                 	db	61	;'='
   186  003F92  3E                 	db	62	;'>'
   187  003F93  20                 	db	32
   188  003F94  56                 	db	86	;'V'
   189  003F95  45                 	db	69	;'E'
   190  003F96  48                 	db	72	;'H'
   191  003F97  49                 	db	73	;'I'
   192  003F98  43                 	db	67	;'C'
   193  003F99  4C                 	db	76	;'L'
   194  003F9A  45                 	db	69	;'E'
   195  003F9B  20                 	db	32
   196  003F9C  20                 	db	32
   197  003F9D  4F                 	db	79	;'O'
   198  003F9E  46                 	db	70	;'F'
   199  003F9F  46                 	db	70	;'F'
   200  003FA0  20                 	db	32
   201  003FA1  3C                 	db	60	;'<'
   202  003FA2  3D                 	db	61	;'='
   203  003FA3  3D                 	db	61	;'='
   204  003FA4  00                 	db	0
   205  003FA5                     STR_5:
   206  003FA5  3D                 	db	61	;'='
   207  003FA6  3D                 	db	61	;'='
   208  003FA7  3D                 	db	61	;'='
   209  003FA8  20                 	db	32
   210  003FA9  56                 	db	86	;'V'
   211  003FAA  45                 	db	69	;'E'
   212  003FAB  48                 	db	72	;'H'
   213  003FAC  49                 	db	73	;'I'
   214  003FAD  43                 	db	67	;'C'
   215  003FAE  4C                 	db	76	;'L'
   216  003FAF  45                 	db	69	;'E'
   217  003FB0  20                 	db	32
   218  003FB1  44                 	db	68	;'D'
   219  003FB2  41                 	db	65	;'A'
   220  003FB3  54                 	db	84	;'T'
   221  003FB4  41                 	db	65	;'A'
   222  003FB5  20                 	db	32
   223  003FB6  3D                 	db	61	;'='
   224  003FB7  3D                 	db	61	;'='
   225  003FB8  3D                 	db	61	;'='
   226  003FB9  00                 	db	0
   227  003FBA                     STR_1:
   228  003FBA  3D                 	db	61	;'='
   229  003FBB  3D                 	db	61	;'='
   230  003FBC  3D                 	db	61	;'='
   231  003FBD  3D                 	db	61	;'='
   232  003FBE  3D                 	db	61	;'='
   233  003FBF  3D                 	db	61	;'='
   234  003FC0  3D                 	db	61	;'='
   235  003FC1  3D                 	db	61	;'='
   236  003FC2  3D                 	db	61	;'='
   237  003FC3  3D                 	db	61	;'='
   238  003FC4  3D                 	db	61	;'='
   239  003FC5  3D                 	db	61	;'='
   240  003FC6  3D                 	db	61	;'='
   241  003FC7  3D                 	db	61	;'='
   242  003FC8  3D                 	db	61	;'='
   243  003FC9  3D                 	db	61	;'='
   244  003FCA  3D                 	db	61	;'='
   245  003FCB  3D                 	db	61	;'='
   246  003FCC  3D                 	db	61	;'='
   247  003FCD  3D                 	db	61	;'='
   248  003FCE  00                 	db	0
   249  003FCF                     STR_6:
   250  003FCF  44                 	db	68	;'D'
   251  003FD0  69                 	db	105	;'i'
   252  003FD1  72                 	db	114	;'r'
   253  003FD2  65                 	db	101	;'e'
   254  003FD3  63                 	db	99	;'c'
   255  003FD4  74                 	db	116	;'t'
   256  003FD5  69                 	db	105	;'i'
   257  003FD6  6F                 	db	111	;'o'
   258  003FD7  6E                 	db	110	;'n'
   259  003FD8  3A                 	db	58	;':'
   260  003FD9  20                 	db	32
   261  003FDA  00                 	db	0
   262  003FDB                     STR_10:
   263  003FDB  53                 	db	83	;'S'
   264  003FDC  70                 	db	112	;'p'
   265  003FDD  65                 	db	101	;'e'
   266  003FDE  65                 	db	101	;'e'
   267  003FDF  64                 	db	100	;'d'
   268  003FE0  3A                 	db	58	;':'
   269  003FE1  20                 	db	32
   270  003FE2  25                 	db	37
   271  003FE3  2E                 	db	46
   272  003FE4  33                 	db	51	;'3'
   273  003FE5  66                 	db	102	;'f'
   274  003FE6  00                 	db	0
   275  003FE7                     STR_13:
   276  003FE7  57                 	db	87	;'W'
   277  003FE8  61                 	db	97	;'a'
   278  003FE9  69                 	db	105	;'i'
   279  003FEA  74                 	db	116	;'t'
   280  003FEB  2E                 	db	46
   281  003FEC  2E                 	db	46
   282  003FED  2E                 	db	46
   283  003FEE  00                 	db	0
   284  003FEF                     STR_8:
   285  003FEF  42                 	db	66	;'B'
   286  003FF0  4B                 	db	75	;'K'
   287  003FF1  57                 	db	87	;'W'
   288  003FF2  44                 	db	68	;'D'
   289  003FF3  00                 	db	0
   290  003FF4                     STR_11:
   291  003FF4  4B                 	db	75	;'K'
   292  003FF5  6D                 	db	109	;'m'
   293  003FF6  2F                 	db	47
   294  003FF7  68                 	db	104	;'h'
   295  003FF8  00                 	db	0
   296  003FF9                     STR_7:
   297  003FF9  46                 	db	70	;'F'
   298  003FFA  57                 	db	87	;'W'
   299  003FFB  44                 	db	68	;'D'
   300  003FFC  00                 	db	0
   301  003FFD                     STR_9:
   302  003FFD  50                 	db	80	;'P'
   303  003FFE  00                 	db	0
   304  0000                     
   305                           ; #config settings
   306  003FFF  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	nvCOMRAM
   309  000044                     __pnvCOMRAM:
   310                           	opt stack 0
   311  000044                     _clock_counter_reference:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  0000                     _ADCON0bits	set	4034
   315  0000                     _ADCON1	set	4033
   316  0000                     _ADCON2bits	set	4032
   317  0000                     _ADRESH	set	4036
   318  0000                     _INTCONbits	set	4082
   319  0000                     _IPR1bits	set	3999
   320  0000                     _IPR2bits	set	4002
   321  0000                     _LATA	set	3977
   322  0000                     _LATAbits	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _LATD	set	3980
   327  0000                     _LATDbits	set	3980
   328  0000                     _LATE	set	3981
   329  0000                     _OSCCONbits	set	4051
   330  0000                     _PIE1	set	3997
   331  0000                     _PIE1bits	set	3997
   332  0000                     _PIE2bits	set	4000
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PIR2bits	set	4001
   335  0000                     _PORTAbits	set	3968
   336  0000                     _PORTBbits	set	3969
   337  0000                     _PORTDbits	set	3971
   338  0000                     _RCONbits	set	4048
   339  0000                     _RCREG	set	4014
   340  0000                     _RCSTA	set	4011
   341  0000                     _RCSTAbits	set	4011
   342  0000                     _SPBRG	set	4015
   343  0000                     _SPBRGH	set	4016
   344  0000                     _T3CON	set	4017
   345  0000                     _TMR3H	set	4019
   346  0000                     _TMR3L	set	4018
   347  0000                     _TRISA	set	3986
   348  0000                     _TRISB	set	3987
   349  0000                     _TRISC	set	3988
   350  0000                     _TRISCbits	set	3988
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISE	set	3990
   353  0000                     _TXREG	set	4013
   354  0000                     _TXSTA	set	4012
   355  0000                     _TXSTAbits	set	4012
   356                           
   357                           	psect	cinit
   358  002DAC                     __pcinit:
   359                           	opt stack 0
   360  002DAC                     start_initialization:
   361                           	opt stack 0
   362  002DAC                     __initialization:
   363                           	opt stack 0
   364                           
   365                           ; Clear objects allocated to BANK1 (12 bytes)
   366  002DAC  EE01  F019         	lfsr	0,__pbssBANK1
   367  002DB0  0E0C               	movlw	12
   368  002DB2                     clear_0:
   369  002DB2  6AEE               	clrf	postinc0,c
   370  002DB4  06E8               	decf	wreg,f,c
   371  002DB6  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (30 bytes)
   374  002DB8  EE00  F0D2         	lfsr	0,__pbssBANK0
   375  002DBC  0E1E               	movlw	30
   376  002DBE                     clear_1:
   377  002DBE  6AEE               	clrf	postinc0,c
   378  002DC0  06E8               	decf	wreg,f,c
   379  002DC2  E1FD               	bnz	clear_1
   380                           
   381                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   382  002DC4  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   383                           
   384                           ; Clear objects allocated to COMRAM (35 bytes)
   385  002DC6  EE00  F001         	lfsr	0,__pbssCOMRAM
   386  002DCA  0E23               	movlw	35
   387  002DCC                     clear_2:
   388  002DCC  6AEE               	clrf	postinc0,c
   389  002DCE  06E8               	decf	wreg,f,c
   390  002DD0  E1FD               	bnz	clear_2
   391                           
   392                           ; Initialize objects allocated to COMRAM (1 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  002DD2  0E98               	movlw	low __pidataCOMRAM
   395  002DD4  6EF6               	movwf	tblptrl,c
   396  002DD6  0E30               	movlw	high __pidataCOMRAM
   397  002DD8  6EF7               	movwf	tblptrh,c
   398  002DDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  002DDC  6EF8               	movwf	tblptru,c
   400  002DDE  0009               	tblrd		*+	;fetch initializer
   401  002DE0  CFF5 F046          	movff	tablat,__pdataCOMRAM
   402  002DE4                     end_of_initialization:
   403                           	opt stack 0
   404  002DE4                     __end_of__initialization:
   405                           	opt stack 0
   406  002DE4  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   407  002DE6  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   408  002DE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   409  002DEA  6EF8               	movwf	tblptru,c
   410  002DEC  0100               	movlb	0
   411  002DEE  EF84  F00B         	goto	_main	;jump to C main() function
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419                           	psect	bitbssCOMRAM
   420  000218                     __pbitbssCOMRAM:
   421                           	opt stack 0
   422  000218                     _actual_dir:
   423                           	opt stack 0
   424  000218                     	ds	1
   425  000219                     _dir:
   426                           	opt stack 0
   427  000219                     	ds	1
   428  00021A                     _power_switch:
   429                           	opt stack 0
   430  00021A                     	ds	1
   431  00021B                     _wait_low:
   432                           	opt stack 0
   433  00021B                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           
   441                           	psect	bssCOMRAM
   442  000001                     __pbssCOMRAM:
   443                           	opt stack 0
   444  000001                     _pr_time_1:
   445                           	opt stack 0
   446  000001                     	ds	4
   447  000005                     _pr_time_2:
   448                           	opt stack 0
   449  000005                     	ds	4
   450  000009                     _time_counter:
   451                           	opt stack 0
   452  000009                     	ds	4
   453  00000D                     _set_speed:
   454                           	opt stack 0
   455  00000D                     	ds	2
   456  00000F                     _Battery_Check:
   457                           	opt stack 0
   458  00000F                     	ds	1
   459  000010                     _ECU_Check:
   460                           	opt stack 0
   461  000010                     	ds	1
   462  000011                     _USART_Status:
   463                           	opt stack 0
   464  000011                     	ds	1
   465  000012                     _actual_speed_pk0:
   466                           	opt stack 0
   467  000012                     	ds	1
   468  000013                     _actual_speed_pk1:
   469                           	opt stack 0
   470  000013                     	ds	1
   471  000014                     _analogic_brake:
   472                           	opt stack 0
   473  000014                     	ds	1
   474  000015                     _i:
   475                           	opt stack 0
   476  000015                     	ds	1
   477  000016                     _set_speed_pk0:
   478                           	opt stack 0
   479  000016                     	ds	1
   480  000017                     _set_speed_pk1:
   481                           	opt stack 0
   482  000017                     	ds	1
   483  000018                     _set_steering:
   484                           	opt stack 0
   485  000018                     	ds	1
   486  000019                     _switch_position:
   487                           	opt stack 0
   488  000019                     	ds	1
   489  00001A                     _JoystickConstants:
   490                           	opt stack 0
   491  00001A                     	ds	8
   492  000022                     _JoystickValues:
   493                           	opt stack 0
   494  000022                     	ds	2
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	dataCOMRAM
   503  000046                     __pdataCOMRAM:
   504                           	opt stack 0
   505  000046                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  000046                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515                           	psect	bssBANK0
   516  0000D2                     __pbssBANK0:
   517                           	opt stack 0
   518  0000D2                     LCD_write_integer@F17027:
   519                           	opt stack 0
   520  0000D2                     	ds	6
   521  0000D8                     _actual_speed_kmh:
   522                           	opt stack 0
   523  0000D8                     	ds	4
   524  0000DC                     _pr_time_3:
   525                           	opt stack 0
   526  0000DC                     	ds	4
   527  0000E0                     _actual_speed:
   528                           	opt stack 0
   529  0000E0                     	ds	2
   530  0000E2                     _USART_Rx:
   531                           	opt stack 0
   532  0000E2                     	ds	7
   533  0000E9                     _USART_Tx:
   534                           	opt stack 0
   535  0000E9                     	ds	7
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           
   543                           	psect	bssBANK1
   544  000119                     __pbssBANK1:
   545                           	opt stack 0
   546  000119                     _str:
   547                           	opt stack 0
   548  000119                     	ds	12
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           
   556                           	psect	cstackBANK1
   557  000100                     __pcstackBANK1:
   558                           	opt stack 0
   559  000100                     _sprintf$2513:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x0
   563  000100                     	ds	4
   564  000104                     sprintf@ap:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568  000104                     	ds	2
   569  000106                     sprintf@flag:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573  000106                     	ds	2
   574  000108                     sprintf@val:
   575                           	opt stack 0
   576                           
   577                           ; 4 bytes @ 0x8
   578  000108                     	ds	4
   579  00010C                     sprintf@exp:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0xC
   583  00010C                     	ds	2
   584  00010E                     sprintf@tmpval:
   585                           	opt stack 0
   586                           
   587                           ; 4 bytes @ 0xE
   588  00010E                     	ds	4
   589  000112                     sprintf@prec:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x12
   593  000112                     	ds	2
   594  000114                     sprintf@fval:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x14
   598  000114                     	ds	4
   599  000118                     sprintf@c:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x18
   603  000118                     	ds	1
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           
   611                           	psect	cstackBANK0
   612  000060                     __pcstackBANK0:
   613                           	opt stack 0
   614  000060                     ??_ISR_alta:
   615                           
   616                           ; 0 bytes @ 0x0
   617  000060                     	ds	16
   618  000070                     ?___awdiv:
   619                           	opt stack 0
   620  000070                     ?__tdiv_to_l_:
   621                           	opt stack 0
   622  000070                     ?__div_to_l_:
   623                           	opt stack 0
   624  000070                     ?___lldiv:
   625                           	opt stack 0
   626  000070                     ?___llmod:
   627                           	opt stack 0
   628  000070                     ?___xxtofl:
   629                           	opt stack 0
   630  000070                     delay_ms@value_ms:
   631                           	opt stack 0
   632  000070                     ___awdiv@dividend:
   633                           	opt stack 0
   634  000070                     __div_to_l_@f1:
   635                           	opt stack 0
   636  000070                     ___flge@ff1:
   637                           	opt stack 0
   638  000070                     __tdiv_to_l_@f1:
   639                           	opt stack 0
   640  000070                     ___lldiv@dividend:
   641                           	opt stack 0
   642  000070                     ___llmod@dividend:
   643                           	opt stack 0
   644  000070                     ___xxtofl@val:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0x10
   648  000070                     	ds	2
   649  000072                     delay_s@value_s:
   650                           	opt stack 0
   651  000072                     LCD_send_command@D2:
   652                           	opt stack 0
   653  000072                     ___awdiv@divisor:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x12
   657  000072                     	ds	1
   658  000073                     delay_s@repeat_loop:
   659                           	opt stack 0
   660  000073                     LCD_send_command@D1:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x13
   664  000073                     	ds	1
   665  000074                     ??___xxtofl:
   666  000074                     LCD_send_command@D0:
   667                           	opt stack 0
   668  000074                     ___awdiv@counter:
   669                           	opt stack 0
   670  000074                     __div_to_l_@f2:
   671                           	opt stack 0
   672  000074                     ___flge@ff2:
   673                           	opt stack 0
   674  000074                     __tdiv_to_l_@f2:
   675                           	opt stack 0
   676  000074                     ___lldiv@divisor:
   677                           	opt stack 0
   678  000074                     ___llmod@divisor:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0x14
   682  000074                     	ds	1
   683  000075                     LCD_goto_line@line:
   684                           	opt stack 0
   685  000075                     LCD_write_char@D3:
   686                           	opt stack 0
   687  000075                     LCD_cursor@blinking:
   688                           	opt stack 0
   689  000075                     ___awdiv@sign:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x15
   693  000075                     	ds	1
   694  000076                     LCD_write_char@D2:
   695                           	opt stack 0
   696  000076                     LCD_cursor@active:
   697                           	opt stack 0
   698  000076                     ___awdiv@quotient:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x16
   702  000076                     	ds	1
   703  000077                     LCD_write_char@D1:
   704                           	opt stack 0
   705  000077                     LCD_initialize@quartz_frequency:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x17
   709  000077                     	ds	1
   710  000078                     LCD_write_char@D0:
   711                           	opt stack 0
   712  000078                     ___xxtofl@sign:
   713                           	opt stack 0
   714  000078                     __tdiv_to_l_@quot:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x18
   718  000078                     	ds	1
   719  000079                     LCD_write_char@value:
   720                           	opt stack 0
   721  000079                     ___xxtofl@exp:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x19
   725  000079                     	ds	1
   726  00007A                     LCD_write_message@buffer:
   727                           	opt stack 0
   728  00007A                     LCD_write_string@buffer:
   729                           	opt stack 0
   730  00007A                     ___xxtofl@arg:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x1A
   734  00007A                     	ds	2
   735  00007C                     __tdiv_to_l_@cntr:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x1C
   739  00007C                     	ds	1
   740  00007D                     __tdiv_to_l_@exp1:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x1D
   744  00007D                     	ds	1
   745  00007E                     ?___flmul:
   746                           	opt stack 0
   747  00007E                     ___flmul@b:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x1E
   751  00007E                     	ds	4
   752  000082                     ___flmul@a:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x22
   756  000082                     	ds	4
   757  000086                     ??___flmul:
   758                           
   759                           ; 0 bytes @ 0x26
   760  000086                     	ds	4
   761  00008A                     ___flmul@sign:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x2A
   765  00008A                     	ds	1
   766  00008B                     ___flmul@aexp:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x2B
   770  00008B                     	ds	1
   771  00008C                     ___flmul@grs:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x2C
   775  00008C                     	ds	4
   776  000090                     ___flmul@bexp:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x30
   780  000090                     	ds	1
   781  000091                     ___flmul@prod:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x31
   785  000091                     	ds	4
   786  000095                     ___flmul@temp:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x35
   790  000095                     	ds	2
   791  000097                     ?_fround:
   792                           	opt stack 0
   793  000097                     ?_scale:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x37
   797  000097                     	ds	4
   798  00009B                     _fround$2511:
   799                           	opt stack 0
   800  00009B                     _scale$2512:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x3B
   804  00009B                     	ds	4
   805  00009F                     scale@scl:
   806                           	opt stack 0
   807  00009F                     _fround$2510:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x3F
   811  00009F                     	ds	1
   812  0000A0                     ?___fltol:
   813                           	opt stack 0
   814  0000A0                     ___fltol@f1:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x40
   818  0000A0                     	ds	3
   819  0000A3                     fround@prec:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x43
   823  0000A3                     	ds	1
   824  0000A4                     ??___fltol:
   825  0000A4                     ?___fladd:
   826                           	opt stack 0
   827  0000A4                     ___fladd@b:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x44
   831  0000A4                     	ds	4
   832  0000A8                     ___fltol@sign1:
   833                           	opt stack 0
   834  0000A8                     ___fladd@a:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x48
   838  0000A8                     	ds	1
   839  0000A9                     ___fltol@exp1:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x49
   843  0000A9                     	ds	3
   844  0000AC                     ??___fladd:
   845                           
   846                           ; 0 bytes @ 0x4C
   847  0000AC                     	ds	8
   848  0000B4                     ___fladd@signs:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x54
   852  0000B4                     	ds	1
   853  0000B5                     ___fladd@aexp:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x55
   857  0000B5                     	ds	1
   858  0000B6                     ___fladd@bexp:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x56
   862  0000B6                     	ds	1
   863  0000B7                     ___fladd@grs:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x57
   867  0000B7                     	ds	1
   868  0000B8                     ?___flsub:
   869                           	opt stack 0
   870  0000B8                     ___flsub@b:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x58
   874  0000B8                     	ds	4
   875  0000BC                     ___flsub@a:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x5C
   879  0000BC                     	ds	4
   880  0000C0                     ?_sprintf:
   881                           	opt stack 0
   882  0000C0                     sprintf@sp:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x60
   886  0000C0                     	ds	2
   887  0000C2                     sprintf@f:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x62
   891  0000C2                     	ds	6
   892  0000C8                     ??_sprintf:
   893                           
   894                           ; 0 bytes @ 0x68
   895  0000C8                     	ds	2
   896  0000CA                     ??_main:
   897                           
   898                           ; 0 bytes @ 0x6A
   899  0000CA                     	ds	8
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907                           	psect	cstackCOMRAM
   908  000024                     __pcstackCOMRAM:
   909                           	opt stack 0
   910  000024                     ??_ISR_bassa:
   911  000024                     
   912                           ; 1 bytes @ 0x0
   913  000024                     	ds	17
   914  000035                     ReadUSART@data:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x11
   918  000035                     	ds	1
   919  000036                     getsUSART@buffer:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x12
   923  000036                     	ds	2
   924  000038                     getsUSART@len:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x14
   928  000038                     	ds	1
   929  000039                     getsUSART@data:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x15
   933  000039                     	ds	1
   934  00003A                     getsUSART@i:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x16
   938  00003A                     	ds	1
   939  00003B                     _ISR_alta$1308:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x17
   943  00003B                     	ds	1
   944  00003C                     ??_Joystick_Polling:
   945  00003C                     ??_isdigit:
   946  00003C                     ??__tdiv_to_l_:
   947  00003C                     ??___flge:
   948  00003C                     ?___wmul:
   949                           	opt stack 0
   950  00003C                     ?___awmod:
   951                           	opt stack 0
   952  00003C                     ?___lwdiv:
   953                           	opt stack 0
   954  00003C                     ?___flneg:
   955                           	opt stack 0
   956  00003C                     delay_set_quartz@frequency:
   957                           	opt stack 0
   958  00003C                     LCD_backlight@active:
   959                           	opt stack 0
   960  00003C                     WriteUSART@data:
   961                           	opt stack 0
   962  00003C                     ___llmod@counter:
   963                           	opt stack 0
   964  00003C                     OpenUSART@spbrg:
   965                           	opt stack 0
   966  00003C                     ___wmul@multiplier:
   967                           	opt stack 0
   968  00003C                     ___awmod@dividend:
   969                           	opt stack 0
   970  00003C                     ___lwdiv@dividend:
   971                           	opt stack 0
   972  00003C                     __div_to_l_@quot:
   973                           	opt stack 0
   974  00003C                     ___flneg@f1:
   975                           	opt stack 0
   976  00003C                     ___lldiv@quotient:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x18
   980  00003C                     	ds	1
   981  00003D                     _isdigit$2119:
   982                           	opt stack 0
   983  00003D                     putsUSART@data:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x19
   987  00003D                     	ds	1
   988  00003E                     OpenUSART@config:
   989                           	opt stack 0
   990  00003E                     isdigit@c:
   991                           	opt stack 0
   992  00003E                     ___wmul@multiplicand:
   993                           	opt stack 0
   994  00003E                     ___awmod@divisor:
   995                           	opt stack 0
   996  00003E                     ___lwdiv@divisor:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x1A
  1000  00003E                     	ds	1
  1001  00003F                     
  1002                           ; 0 bytes @ 0x1B
  1003  00003F                     	ds	1
  1004  000040                     ___awmod@counter:
  1005                           	opt stack 0
  1006  000040                     __div_to_l_@cntr:
  1007                           	opt stack 0
  1008  000040                     ___lldiv@counter:
  1009                           	opt stack 0
  1010  000040                     ___wmul@product:
  1011                           	opt stack 0
  1012  000040                     ___lwdiv@quotient:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x1C
  1016  000040                     	ds	1
  1017  000041                     ___awmod@sign:
  1018                           	opt stack 0
  1019  000041                     __div_to_l_@exp1:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x1D
  1023  000041                     	ds	1
  1024  000042                     LCD_send_command@D3:
  1025                           	opt stack 0
  1026  000042                     ___lwdiv@counter:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x1E
  1030  000042                     	ds	1
  1031  000043                     tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           
  1038                           ; 0 bytes @ 0x1F
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 122 in file "telecomando.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       0       0       0
  1059 ;;      Locals:         0       0       0       0
  1060 ;;      Temps:          0       8       0       0
  1061 ;;      Totals:         0       8       0       0
  1062 ;;Total ram usage:        8 bytes
  1063 ;; Hardware stack levels required when called:   11
  1064 ;; This function calls:
  1065 ;;		_Joystick_Polling
  1066 ;;		_LCD_Handler
  1067 ;;		_LCD_clear
  1068 ;;		_LCD_goto_line
  1069 ;;		_LCD_write_message
  1070 ;;		_USART_Send
  1071 ;;		___flmul
  1072 ;;		___fltol
  1073 ;;		___xxtofl
  1074 ;;		_board_initialization
  1075 ;;		_delay_ms
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text0
  1082  001708                     __ptext0:
  1083                           	opt stack 0
  1084  001708                     _main:
  1085                           	opt stack 20
  1086                           
  1087                           ;telecomando.c: 123: board_initialization();
  1088                           
  1089                           ;incstack = 0
  1090  001708  ECB2  F014         	call	_board_initialization	;wreg free
  1091                           
  1092                           ;telecomando.c: 124: PORTDbits.RD7 = 0;
  1093  00170C  9E83               	bcf	3971,7,c	;volatile
  1094                           
  1095                           ;telecomando.c: 127: USART_Tx[0] = 0xAA;
  1096  00170E  0EAA               	movlw	170
  1097  001710  0100               	movlb	0	; () banked
  1098  001712  6FE9               	movwf	_USART_Tx& (0+255),b
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;telecomando.c: 128: USART_Tx[6] = 0xAA;
  1102  001714  0EAA               	movlw	170
  1103  001716  0100               	movlb	0	; () banked
  1104  001718  6FEF               	movwf	(_USART_Tx+6)& (0+255),b
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;telecomando.c: 129: JoystickConstants[0] = 0.703;
  1108  00171A  0ECF               	movlw	207
  1109  00171C  6E1A               	movwf	_JoystickConstants,c	;volatile
  1110  00171E  0EF7               	movlw	247
  1111  001720  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1112  001722  0E33               	movlw	51
  1113  001724  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1114  001726  0E3F               	movlw	63
  1115  001728  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;telecomando.c: 130: JoystickConstants[1] = 34;
  1119  00172A  0E00               	movlw	0
  1120  00172C  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1121  00172E  0E00               	movlw	0
  1122  001730  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1123  001732  0E08               	movlw	8
  1124  001734  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1125  001736  0E42               	movlw	66
  1126  001738  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1127  00173A                     l5551:
  1128                           
  1129                           ;telecomando.c: 135: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  1130  00173A  A681               	btfss	3969,3,c	;volatile
  1131  00173C  D002               	goto	l253
  1132  00173E  B643               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1133  001740  D009               	goto	l251
  1134  001742                     l253:
  1135                           
  1136                           ;telecomando.c: 136: wait_low = 0;
  1137  001742  9643               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1138                           
  1139                           ;telecomando.c: 137: if (PORTBbits.RB3 == 1) {
  1140  001744  A681               	btfss	3969,3,c	;volatile
  1141  001746  D006               	goto	l251
  1142                           
  1143                           ;telecomando.c: 138: power_switch = ~power_switch;
  1144  001748  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1145  00174A  D002               	goto	u6440
  1146  00174C  8443               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1147  00174E  D001               	goto	u6455
  1148  001750                     u6440:
  1149  001750  9443               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1150  001752                     u6455:
  1151                           
  1152                           ;telecomando.c: 139: wait_low = 1;
  1153  001752  8643               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1154  001754                     l251:
  1155                           
  1156                           ;telecomando.c: 140: }
  1157                           ;telecomando.c: 141: }
  1158                           ;telecomando.c: 143: if (power_switch == 0) {
  1159  001754  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1160  001756  D08F               	goto	l5585
  1161                           
  1162                           ;telecomando.c: 144: dir = 1;
  1163  001758  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1164                           
  1165                           ;telecomando.c: 145: set_speed = 0;
  1166  00175A  0E00               	movlw	0
  1167  00175C  6E0E               	movwf	_set_speed+1,c	;volatile
  1168  00175E  0E00               	movlw	0
  1169  001760  6E0D               	movwf	_set_speed,c	;volatile
  1170                           
  1171                           ;telecomando.c: 146: set_steering = 90;
  1172  001762  0E5A               	movlw	90
  1173  001764  6E18               	movwf	_set_steering,c	;volatile
  1174                           
  1175                           ;telecomando.c: 147: analogic_brake = 0;
  1176  001766  0E00               	movlw	0
  1177  001768  6E14               	movwf	_analogic_brake,c	;volatile
  1178                           
  1179                           ;telecomando.c: 148: USART_Send();
  1180  00176A  EC5F  F017         	call	_USART_Send	;wreg free
  1181                           
  1182                           ;telecomando.c: 149: while (power_switch == 0) {
  1183  00176E  D080               	goto	l5583
  1184  001770                     l5563:
  1185                           
  1186                           ;telecomando.c: 150: LCD_clear();
  1187  001770  EC2D  F017         	call	_LCD_clear	;wreg free
  1188                           
  1189                           ;telecomando.c: 151: LCD_goto_line(1);
  1190  001774  0E01               	movlw	1
  1191  001776  EC6E  F013         	call	_LCD_goto_line
  1192                           
  1193                           ;telecomando.c: 152: LCD_write_message("====================");
  1194  00177A  0EBA               	movlw	low STR_1
  1195  00177C  0100               	movlb	0	; () banked
  1196  00177E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1197  001780  0E3F               	movlw	high STR_1
  1198  001782  0100               	movlb	0	; () banked
  1199  001784  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1200  001786  ECA4  F017         	call	_LCD_write_message	;wreg free
  1201                           
  1202                           ;telecomando.c: 153: LCD_goto_line(2);
  1203  00178A  0E02               	movlw	2
  1204  00178C  EC6E  F013         	call	_LCD_goto_line
  1205                           
  1206                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1207  001790  0E90               	movlw	low STR_2
  1208  001792  0100               	movlb	0	; () banked
  1209  001794  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1210  001796  0E3F               	movlw	high STR_2
  1211  001798  0100               	movlb	0	; () banked
  1212  00179A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1213  00179C  ECA4  F017         	call	_LCD_write_message	;wreg free
  1214                           
  1215                           ;telecomando.c: 155: LCD_goto_line(3);
  1216  0017A0  0E03               	movlw	3
  1217  0017A2  EC6E  F013         	call	_LCD_goto_line
  1218                           
  1219                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1220  0017A6  0E7B               	movlw	low STR_3
  1221  0017A8  0100               	movlb	0	; () banked
  1222  0017AA  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1223  0017AC  0E3F               	movlw	high STR_3
  1224  0017AE  0100               	movlb	0	; () banked
  1225  0017B0  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1226  0017B2  ECA4  F017         	call	_LCD_write_message	;wreg free
  1227                           
  1228                           ;telecomando.c: 157: LCD_goto_line(4);
  1229  0017B6  0E04               	movlw	4
  1230  0017B8  EC6E  F013         	call	_LCD_goto_line
  1231                           
  1232                           ;telecomando.c: 158: LCD_write_message("====================");
  1233  0017BC  0EBA               	movlw	low STR_1
  1234  0017BE  0100               	movlb	0	; () banked
  1235  0017C0  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1236  0017C2  0E3F               	movlw	high STR_1
  1237  0017C4  0100               	movlb	0	; () banked
  1238  0017C6  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1239  0017C8  ECA4  F017         	call	_LCD_write_message	;wreg free
  1240                           
  1241                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 70) {
  1242  0017CC  C001  F0CA         	movff	_pr_time_1,??_main	;volatile
  1243  0017D0  C002  F0CB         	movff	_pr_time_1+1,??_main+1	;volatile
  1244  0017D4  C003  F0CC         	movff	_pr_time_1+2,??_main+2	;volatile
  1245  0017D8  C004  F0CD         	movff	_pr_time_1+3,??_main+3	;volatile
  1246  0017DC  0100               	movlb	0	; () banked
  1247  0017DE  1FCA               	comf	??_main& (0+255),f,b
  1248  0017E0  1FCB               	comf	(??_main+1)& (0+255),f,b
  1249  0017E2  1FCC               	comf	(??_main+2)& (0+255),f,b
  1250  0017E4  1FCD               	comf	(??_main+3)& (0+255),f,b
  1251  0017E6  2BCA               	incf	??_main& (0+255),f,b
  1252  0017E8  0E00               	movlw	0
  1253  0017EA  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1254  0017EC  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1255  0017EE  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1256  0017F0  5009               	movf	_time_counter,w,c	;volatile
  1257  0017F2  0100               	movlb	0	; () banked
  1258  0017F4  25CA               	addwf	??_main& (0+255),w,b
  1259  0017F6  0100               	movlb	0	; () banked
  1260  0017F8  6FCE               	movwf	(??_main+4)& (0+255),b
  1261  0017FA  500A               	movf	_time_counter+1,w,c	;volatile
  1262  0017FC  0100               	movlb	0	; () banked
  1263  0017FE  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1264  001800  0100               	movlb	0	; () banked
  1265  001802  6FCF               	movwf	(??_main+5)& (0+255),b
  1266  001804  500B               	movf	_time_counter+2,w,c	;volatile
  1267  001806  0100               	movlb	0	; () banked
  1268  001808  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1269  00180A  0100               	movlb	0	; () banked
  1270  00180C  6FD0               	movwf	(??_main+6)& (0+255),b
  1271  00180E  500C               	movf	_time_counter+3,w,c	;volatile
  1272  001810  0100               	movlb	0	; () banked
  1273  001812  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1274  001814  0100               	movlb	0	; () banked
  1275  001816  6FD1               	movwf	(??_main+7)& (0+255),b
  1276  001818  0100               	movlb	0	; () banked
  1277  00181A  51D1               	movf	(??_main+7)& (0+255),w,b
  1278  00181C  0100               	movlb	0	; () banked
  1279  00181E  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1280  001820  0100               	movlb	0	; () banked
  1281  001822  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1282  001824  E105               	bnz	u6470
  1283  001826  0E46               	movlw	70
  1284  001828  0100               	movlb	0	; () banked
  1285  00182A  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1286  00182C  A0D8               	btfss	status,0,c
  1287  00182E  D019               	goto	l5581
  1288  001830                     u6470:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1292  001830  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1293  001834  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1294  001838  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1295  00183C  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1299  001840  AE83               	btfss	3971,7,c	;volatile
  1300  001842  D002               	goto	u6480
  1301  001844  0E01               	movlw	1
  1302  001846  D001               	goto	u6486
  1303  001848                     u6480:
  1304  001848  0E00               	movlw	0
  1305  00184A                     u6486:
  1306  00184A  0AFF               	xorlw	255
  1307  00184C  0100               	movlb	0	; () banked
  1308  00184E  6FCA               	movwf	??_main& (0+255),b
  1309  001850  0100               	movlb	0	; () banked
  1310  001852  33CA               	rrcf	??_main& (0+255),f,b
  1311  001854  33CA               	rrcf	??_main& (0+255),f,b
  1312  001856  5083               	movf	3971,w,c	;volatile
  1313  001858  0100               	movlb	0	; () banked
  1314  00185A  19CA               	xorwf	??_main& (0+255),w,b
  1315  00185C  0B7F               	andlw	-129
  1316  00185E  19CA               	xorwf	??_main& (0+255),w,b
  1317  001860  6E83               	movwf	3971,c	;volatile
  1318  001862                     l5581:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;telecomando.c: 162: }
  1322                           ;telecomando.c: 163: delay_ms(300);
  1323  001862  0E01               	movlw	1
  1324  001864  0100               	movlb	0	; () banked
  1325  001866  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1326  001868  0E2C               	movlw	44
  1327  00186A  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1328  00186C  EC46  F017         	call	_delay_ms	;wreg free
  1329  001870                     l5583:
  1330  001870  A443               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1331  001872  D77E               	goto	l5563
  1332                           
  1333                           ;telecomando.c: 164: }
  1334                           ;telecomando.c: 165: PORTDbits.RD7 = 0;
  1335  001874  9E83               	bcf	3971,7,c	;volatile
  1336  001876                     l5585:
  1337                           
  1338                           ;telecomando.c: 166: }
  1339                           ;telecomando.c: 168: Joystick_Polling();
  1340  001876  ECB2  F016         	call	_Joystick_Polling	;wreg free
  1341                           
  1342                           ;telecomando.c: 171: if (PORTAbits.RA2 == 1) {
  1343  00187A  A480               	btfss	3968,2,c	;volatile
  1344  00187C  D003               	goto	l260
  1345                           
  1346                           ;telecomando.c: 172: switch_position = 0;
  1347  00187E  0E00               	movlw	0
  1348  001880  6E19               	movwf	_switch_position,c	;volatile
  1349                           
  1350                           ;telecomando.c: 173: } else {
  1351  001882  D009               	goto	l261
  1352  001884                     l260:
  1353                           
  1354                           ;telecomando.c: 174: if (PORTAbits.RA3 == 0) {
  1355  001884  B680               	btfsc	3968,3,c	;volatile
  1356  001886  D004               	goto	l5595
  1357                           
  1358                           ;telecomando.c: 175: switch_position = 1;
  1359  001888  0E01               	movlw	1
  1360  00188A  6E19               	movwf	_switch_position,c	;volatile
  1361                           
  1362                           ;telecomando.c: 176: dir = 1;
  1363  00188C  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1364                           
  1365                           ;telecomando.c: 177: } else {
  1366  00188E  D003               	goto	l261
  1367  001890                     l5595:
  1368                           
  1369                           ;telecomando.c: 178: switch_position = 2;
  1370  001890  0E02               	movlw	2
  1371  001892  6E19               	movwf	_switch_position,c	;volatile
  1372                           
  1373                           ;telecomando.c: 179: dir = 0;
  1374  001894  9243               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1375  001896                     l261:
  1376                           
  1377                           ;telecomando.c: 180: }
  1378                           ;telecomando.c: 181: }
  1379                           ;telecomando.c: 183: if (switch_position != 0) {
  1380  001896  5019               	movf	_switch_position,w,c	;volatile
  1381  001898  B4D8               	btfsc	status,2,c
  1382  00189A  D074               	goto	l5611
  1383                           
  1384                           ;telecomando.c: 184: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1385  00189C  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1386  0018A0  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1387  0018A4  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1388  0018A8  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1389  0018AC  C022  F0CA         	movff	_JoystickValues,??_main	;volatile
  1390  0018B0  0100               	movlb	0	; () banked
  1391  0018B2  6BCB               	clrf	(??_main+1)& (0+255),b
  1392  0018B4  BFCA               	btfsc	??_main& (0+255),7,b
  1393  0018B6  07CB               	decf	(??_main+1)& (0+255),f,b
  1394  0018B8  0E80               	movlw	128
  1395  0018BA  0100               	movlb	0	; () banked
  1396  0018BC  27CA               	addwf	??_main& (0+255),f,b
  1397  0018BE  0E00               	movlw	0
  1398  0018C0  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1399  0018C2  C0CA  F070         	movff	??_main,___xxtofl@val
  1400  0018C6  C0CB  F071         	movff	??_main+1,___xxtofl@val+1
  1401  0018CA  0100               	movlb	0	; () banked
  1402  0018CC  0E00               	movlw	0
  1403  0018CE  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1404  0018D0  0EFF               	movlw	-1
  1405  0018D2  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1406  0018D4  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1407  0018D6  0E01               	movlw	1
  1408  0018D8  EC99  F00E         	call	___xxtofl
  1409  0018DC  C070  F07E         	movff	?___xxtofl,___flmul@b
  1410  0018E0  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1411  0018E4  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1412  0018E8  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1413  0018EC  ECE4  F006         	call	___flmul	;wreg free
  1414  0018F0  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1415  0018F4  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1416  0018F8  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1417  0018FC  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1418  001900  ECE8  F012         	call	___fltol	;wreg free
  1419  001904  0100               	movlb	0	; () banked
  1420  001906  51A0               	movf	?___fltol& (0+255),w,b
  1421  001908  6E18               	movwf	_set_steering,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;telecomando.c: 185: if (JoystickValues[1] > 0) {
  1425  00190A  5023               	movf	_JoystickValues+1,w,c	;volatile
  1426  00190C  0A80               	xorlw	128
  1427  00190E  0F7F               	addlw	-129
  1428  001910  A0D8               	btfss	status,0,c
  1429  001912  D02E               	goto	l5607
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;telecomando.c: 186: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1433  001914  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1434  001918  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1435  00191C  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1436  001920  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1437  001924  5023               	movf	_JoystickValues+1,w,c	;volatile
  1438  001926  0100               	movlb	0	; () banked
  1439  001928  6F70               	movwf	___xxtofl@val& (0+255),b
  1440  00192A  0E00               	movlw	0
  1441  00192C  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1442  00192E  0EFF               	movlw	-1
  1443  001930  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1444  001932  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1445  001934  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1446  001936  0E01               	movlw	1
  1447  001938  EC99  F00E         	call	___xxtofl
  1448  00193C  C070  F07E         	movff	?___xxtofl,___flmul@b
  1449  001940  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1450  001944  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1451  001948  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1452  00194C  ECE4  F006         	call	___flmul	;wreg free
  1453  001950  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1454  001954  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1455  001958  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1456  00195C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1457  001960  ECE8  F012         	call	___fltol	;wreg free
  1458  001964  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1459  001968  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1460                           
  1461                           ;telecomando.c: 187: analogic_brake = 0;
  1462  00196C  0E00               	movlw	0
  1463  00196E  D008               	goto	L1
  1464  001970                     l5607:
  1465                           
  1466                           ;telecomando.c: 189: set_speed = 0;
  1467  001970  0E00               	movlw	0
  1468  001972  6E0E               	movwf	_set_speed+1,c	;volatile
  1469  001974  0E00               	movlw	0
  1470  001976  6E0D               	movwf	_set_speed,c	;volatile
  1471                           
  1472                           ;telecomando.c: 190: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1473  001978  5023               	movf	_JoystickValues+1,w,c	;volatile
  1474  00197A  0D02               	mullw	2
  1475  00197C  28F3               	incf	prodl,w,c
  1476  00197E  0800               	sublw	0
  1477  001980                     L1:
  1478  001980  6E14               	movwf	_analogic_brake,c	;volatile
  1479                           
  1480                           ;telecomando.c: 191: }
  1481                           ;telecomando.c: 192: } else {
  1482  001982  D005               	goto	l5615
  1483  001984                     l5611:
  1484                           
  1485                           ;telecomando.c: 193: set_speed = 0;
  1486  001984  0E00               	movlw	0
  1487  001986  6E0E               	movwf	_set_speed+1,c	;volatile
  1488  001988  0E00               	movlw	0
  1489  00198A  6E0D               	movwf	_set_speed,c	;volatile
  1490                           
  1491                           ;telecomando.c: 194: analogic_brake = 255;
  1492  00198C  6814               	setf	_analogic_brake,c	;volatile
  1493  00198E                     l5615:
  1494                           
  1495                           ;telecomando.c: 195: }
  1496                           ;telecomando.c: 197: if ((time_counter - pr_time_2) >= 1) {
  1497  00198E  C005  F0CA         	movff	_pr_time_2,??_main	;volatile
  1498  001992  C006  F0CB         	movff	_pr_time_2+1,??_main+1	;volatile
  1499  001996  C007  F0CC         	movff	_pr_time_2+2,??_main+2	;volatile
  1500  00199A  C008  F0CD         	movff	_pr_time_2+3,??_main+3	;volatile
  1501  00199E  0100               	movlb	0	; () banked
  1502  0019A0  1FCA               	comf	??_main& (0+255),f,b
  1503  0019A2  1FCB               	comf	(??_main+1)& (0+255),f,b
  1504  0019A4  1FCC               	comf	(??_main+2)& (0+255),f,b
  1505  0019A6  1FCD               	comf	(??_main+3)& (0+255),f,b
  1506  0019A8  2BCA               	incf	??_main& (0+255),f,b
  1507  0019AA  0E00               	movlw	0
  1508  0019AC  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1509  0019AE  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1510  0019B0  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1511  0019B2  5009               	movf	_time_counter,w,c	;volatile
  1512  0019B4  0100               	movlb	0	; () banked
  1513  0019B6  25CA               	addwf	??_main& (0+255),w,b
  1514  0019B8  0100               	movlb	0	; () banked
  1515  0019BA  6FCE               	movwf	(??_main+4)& (0+255),b
  1516  0019BC  500A               	movf	_time_counter+1,w,c	;volatile
  1517  0019BE  0100               	movlb	0	; () banked
  1518  0019C0  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1519  0019C2  0100               	movlb	0	; () banked
  1520  0019C4  6FCF               	movwf	(??_main+5)& (0+255),b
  1521  0019C6  500B               	movf	_time_counter+2,w,c	;volatile
  1522  0019C8  0100               	movlb	0	; () banked
  1523  0019CA  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1524  0019CC  0100               	movlb	0	; () banked
  1525  0019CE  6FD0               	movwf	(??_main+6)& (0+255),b
  1526  0019D0  500C               	movf	_time_counter+3,w,c	;volatile
  1527  0019D2  0100               	movlb	0	; () banked
  1528  0019D4  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1529  0019D6  0100               	movlb	0	; () banked
  1530  0019D8  6FD1               	movwf	(??_main+7)& (0+255),b
  1531  0019DA  0100               	movlb	0	; () banked
  1532  0019DC  51CE               	movf	(??_main+4)& (0+255),w,b
  1533  0019DE  0100               	movlb	0	; () banked
  1534  0019E0  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1535  0019E2  0100               	movlb	0	; () banked
  1536  0019E4  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1537  0019E6  0100               	movlb	0	; () banked
  1538  0019E8  11D1               	iorwf	(??_main+7)& (0+255),w,b
  1539  0019EA  B4D8               	btfsc	status,2,c
  1540  0019EC  D00A               	goto	l5621
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;telecomando.c: 198: pr_time_2 = time_counter;
  1544  0019EE  C009  F005         	movff	_time_counter,_pr_time_2	;volatile
  1545  0019F2  C00A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1546  0019F6  C00B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1547  0019FA  C00C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;telecomando.c: 199: USART_Send();
  1551  0019FE  EC5F  F017         	call	_USART_Send	;wreg free
  1552  001A02                     l5621:
  1553                           
  1554                           ;telecomando.c: 200: }
  1555                           ;telecomando.c: 202: if ((time_counter - pr_time_3) >= 30) {
  1556  001A02  C0DC  F0CA         	movff	_pr_time_3,??_main	;volatile
  1557  001A06  C0DD  F0CB         	movff	_pr_time_3+1,??_main+1	;volatile
  1558  001A0A  C0DE  F0CC         	movff	_pr_time_3+2,??_main+2	;volatile
  1559  001A0E  C0DF  F0CD         	movff	_pr_time_3+3,??_main+3	;volatile
  1560  001A12  0100               	movlb	0	; () banked
  1561  001A14  1FCA               	comf	??_main& (0+255),f,b
  1562  001A16  1FCB               	comf	(??_main+1)& (0+255),f,b
  1563  001A18  1FCC               	comf	(??_main+2)& (0+255),f,b
  1564  001A1A  1FCD               	comf	(??_main+3)& (0+255),f,b
  1565  001A1C  2BCA               	incf	??_main& (0+255),f,b
  1566  001A1E  0E00               	movlw	0
  1567  001A20  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1568  001A22  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1569  001A24  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1570  001A26  5009               	movf	_time_counter,w,c	;volatile
  1571  001A28  0100               	movlb	0	; () banked
  1572  001A2A  25CA               	addwf	??_main& (0+255),w,b
  1573  001A2C  0100               	movlb	0	; () banked
  1574  001A2E  6FCE               	movwf	(??_main+4)& (0+255),b
  1575  001A30  500A               	movf	_time_counter+1,w,c	;volatile
  1576  001A32  0100               	movlb	0	; () banked
  1577  001A34  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1578  001A36  0100               	movlb	0	; () banked
  1579  001A38  6FCF               	movwf	(??_main+5)& (0+255),b
  1580  001A3A  500B               	movf	_time_counter+2,w,c	;volatile
  1581  001A3C  0100               	movlb	0	; () banked
  1582  001A3E  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1583  001A40  0100               	movlb	0	; () banked
  1584  001A42  6FD0               	movwf	(??_main+6)& (0+255),b
  1585  001A44  500C               	movf	_time_counter+3,w,c	;volatile
  1586  001A46  0100               	movlb	0	; () banked
  1587  001A48  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1588  001A4A  0100               	movlb	0	; () banked
  1589  001A4C  6FD1               	movwf	(??_main+7)& (0+255),b
  1590  001A4E  0100               	movlb	0	; () banked
  1591  001A50  51D1               	movf	(??_main+7)& (0+255),w,b
  1592  001A52  0100               	movlb	0	; () banked
  1593  001A54  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1594  001A56  0100               	movlb	0	; () banked
  1595  001A58  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1596  001A5A  E105               	bnz	u6550
  1597  001A5C  0E1E               	movlw	30
  1598  001A5E  0100               	movlb	0	; () banked
  1599  001A60  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1600  001A62  A0D8               	btfss	status,0,c
  1601  001A64  D66A               	goto	l5551
  1602  001A66                     u6550:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;telecomando.c: 203: pr_time_3 = time_counter;
  1606  001A66  C009  F0DC         	movff	_time_counter,_pr_time_3	;volatile
  1607  001A6A  C00A  F0DD         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1608  001A6E  C00B  F0DE         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1609  001A72  C00C  F0DF         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;telecomando.c: 204: LCD_Handler();
  1613  001A76  EC5D  F012         	call	_LCD_Handler	;wreg free
  1614  001A7A  D65F               	goto	l5551
  1615  001A7C                     __end_of_main:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodl	equ	0xFF3
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _board_initialization *****************
  1627 ;; Defined at:
  1628 ;;		line 263 in file "telecomando.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1642 ;;      Params:         0       0       0       0
  1643 ;;      Locals:         0       0       0       0
  1644 ;;      Temps:          0       0       0       0
  1645 ;;      Totals:         0       0       0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:   10
  1649 ;; This function calls:
  1650 ;;		_LCD_backlight
  1651 ;;		_LCD_clear
  1652 ;;		_LCD_goto_line
  1653 ;;		_LCD_initialize
  1654 ;;		_LCD_write_message
  1655 ;;		_OpenUSART
  1656 ;;		_delay_ms
  1657 ;;		_delay_s
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text1
  1664  002964                     __ptext1:
  1665                           	opt stack 0
  1666  002964                     _board_initialization:
  1667                           	opt stack 20
  1668                           
  1669                           ;telecomando.c: 264: OSCCONbits.IRCF0 = 1;
  1670                           
  1671                           ;incstack = 0
  1672  002964  88D3               	bsf	4051,4,c	;volatile
  1673                           
  1674                           ;telecomando.c: 265: OSCCONbits.IRCF1 = 1;
  1675  002966  8AD3               	bsf	4051,5,c	;volatile
  1676                           
  1677                           ;telecomando.c: 266: OSCCONbits.IRCF2 = 1;
  1678  002968  8CD3               	bsf	4051,6,c	;volatile
  1679                           
  1680                           ;telecomando.c: 268: LATA = 0x00;
  1681  00296A  0E00               	movlw	0
  1682  00296C  6E89               	movwf	3977,c	;volatile
  1683                           
  1684                           ;telecomando.c: 269: TRISA = 0b00001111;
  1685  00296E  0E0F               	movlw	15
  1686  002970  6E92               	movwf	3986,c	;volatile
  1687                           
  1688                           ;telecomando.c: 270: LATB = 0x00;
  1689  002972  0E00               	movlw	0
  1690  002974  6E8A               	movwf	3978,c	;volatile
  1691                           
  1692                           ;telecomando.c: 271: TRISB = 0xFF;
  1693  002976  6893               	setf	3987,c	;volatile
  1694                           
  1695                           ;telecomando.c: 272: LATC = 0x00;
  1696  002978  0E00               	movlw	0
  1697  00297A  6E8B               	movwf	3979,c	;volatile
  1698                           
  1699                           ;telecomando.c: 273: TRISC = 0b11110000;
  1700  00297C  0EF0               	movlw	240
  1701  00297E  6E94               	movwf	3988,c	;volatile
  1702                           
  1703                           ;telecomando.c: 274: LATD = 0x00;
  1704  002980  0E00               	movlw	0
  1705  002982  6E8C               	movwf	3980,c	;volatile
  1706                           
  1707                           ;telecomando.c: 275: TRISD = 0x01111100;
  1708  002984  0E00               	movlw	0
  1709  002986  6E95               	movwf	3989,c	;volatile
  1710                           
  1711                           ;telecomando.c: 276: LATE = 0x00;
  1712  002988  0E00               	movlw	0
  1713  00298A  6E8D               	movwf	3981,c	;volatile
  1714                           
  1715                           ;telecomando.c: 277: TRISE = 0xFF;
  1716  00298C  6896               	setf	3990,c	;volatile
  1717                           
  1718                           ;telecomando.c: 280: LCD_initialize(8);
  1719  00298E  0E08               	movlw	8
  1720  002990  EC49  F010         	call	_LCD_initialize
  1721                           
  1722                           ;telecomando.c: 281: LCD_backlight(0);
  1723  002994  0E00               	movlw	0
  1724  002996  EC41  F018         	call	_LCD_backlight
  1725                           
  1726                           ;telecomando.c: 282: LCD_clear();
  1727  00299A  EC2D  F017         	call	_LCD_clear	;wreg free
  1728                           
  1729                           ;telecomando.c: 283: LCD_goto_line(1);
  1730  00299E  0E01               	movlw	1
  1731  0029A0  EC6E  F013         	call	_LCD_goto_line
  1732                           
  1733                           ;telecomando.c: 284: LCD_write_message("Wait...");
  1734  0029A4  0EE7               	movlw	low STR_13
  1735  0029A6  0100               	movlb	0	; () banked
  1736  0029A8  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1737  0029AA  0E3F               	movlw	high STR_13
  1738  0029AC  0100               	movlb	0	; () banked
  1739  0029AE  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1740  0029B0  ECA4  F017         	call	_LCD_write_message	;wreg free
  1741                           
  1742                           ;telecomando.c: 285: delay_s(1);
  1743  0029B4  0E01               	movlw	1
  1744  0029B6  EC8E  F017         	call	_delay_s
  1745                           
  1746                           ;telecomando.c: 287: PIR1bits.RCIF = 0;
  1747  0029BA  9A9E               	bcf	3998,5,c	;volatile
  1748                           
  1749                           ;telecomando.c: 288: PIR2bits.TMR3IF = 0;
  1750  0029BC  92A1               	bcf	4001,1,c	;volatile
  1751                           
  1752                           ;telecomando.c: 291: RCONbits.IPEN = 1;
  1753  0029BE  8ED0               	bsf	4048,7,c	;volatile
  1754                           
  1755                           ;telecomando.c: 292: IPR1bits.RCIP = 1;
  1756  0029C0  8A9F               	bsf	3999,5,c	;volatile
  1757                           
  1758                           ;telecomando.c: 293: IPR2bits.TMR3IP = 0;
  1759  0029C2  92A2               	bcf	4002,1,c	;volatile
  1760                           
  1761                           ;telecomando.c: 296: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1762  0029C4  0E4F               	movlw	79
  1763  0029C6  16AB               	andwf	4011,f,c	;volatile
  1764  0029C8  9AAC               	bcf	4012,5,c	;volatile
  1765  0029CA  0ECF               	movlw	207
  1766  0029CC  169D               	andwf	3997,f,c	;volatile
  1767                           
  1768                           ;telecomando.c: 297: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1769                           ;telecomando.c: 298: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1770  0029CE  0E00               	movlw	0
  1771  0029D0  6E3D               	movwf	OpenUSART@spbrg+1,c
  1772  0029D2  0E67               	movlw	103
  1773  0029D4  6E3C               	movwf	OpenUSART@spbrg,c
  1774  0029D6  0E7C               	movlw	124
  1775  0029D8  EC35  F016         	call	_OpenUSART
  1776                           
  1777                           ;telecomando.c: 301: ADCON1 = 0b00001101;
  1778  0029DC  0E0D               	movlw	13
  1779  0029DE  6EC1               	movwf	4033,c	;volatile
  1780                           
  1781                           ;telecomando.c: 302: ADCON0bits.CHS2 = 0;
  1782  0029E0  98C2               	bcf	4034,4,c	;volatile
  1783                           
  1784                           ;telecomando.c: 303: ADCON0bits.CHS1 = 0;
  1785  0029E2  96C2               	bcf	4034,3,c	;volatile
  1786                           
  1787                           ;telecomando.c: 304: ADCON0bits.CHS0 = 0;
  1788  0029E4  94C2               	bcf	4034,2,c	;volatile
  1789                           
  1790                           ;telecomando.c: 305: ADCON2bits.ACQT2 = 1;
  1791  0029E6  8AC0               	bsf	4032,5,c	;volatile
  1792                           
  1793                           ;telecomando.c: 306: ADCON2bits.ACQT1 = 1;
  1794  0029E8  88C0               	bsf	4032,4,c	;volatile
  1795                           
  1796                           ;telecomando.c: 307: ADCON2bits.ACQT0 = 0;
  1797  0029EA  96C0               	bcf	4032,3,c	;volatile
  1798                           
  1799                           ;telecomando.c: 308: ADCON2bits.ADCS2 = 1;
  1800  0029EC  84C0               	bsf	4032,2,c	;volatile
  1801                           
  1802                           ;telecomando.c: 309: ADCON2bits.ADCS1 = 0;
  1803  0029EE  92C0               	bcf	4032,1,c	;volatile
  1804                           
  1805                           ;telecomando.c: 310: ADCON2bits.ADCS0 = 1;
  1806  0029F0  80C0               	bsf	4032,0,c	;volatile
  1807                           
  1808                           ;telecomando.c: 311: ADCON2bits.ADFM = 0;
  1809  0029F2  9EC0               	bcf	4032,7,c	;volatile
  1810                           
  1811                           ;telecomando.c: 312: ADCON0bits.ADON = 1;
  1812  0029F4  80C2               	bsf	4034,0,c	;volatile
  1813                           
  1814                           ;telecomando.c: 315: TMR3H = 0xB1;
  1815  0029F6  0EB1               	movlw	177
  1816  0029F8  6EB3               	movwf	4019,c	;volatile
  1817                           
  1818                           ;telecomando.c: 316: TMR3L = 0xE0;
  1819  0029FA  0EE0               	movlw	224
  1820  0029FC  6EB2               	movwf	4018,c	;volatile
  1821                           
  1822                           ;telecomando.c: 319: PIE1bits.RCIE = 1;
  1823  0029FE  8A9D               	bsf	3997,5,c	;volatile
  1824                           
  1825                           ;telecomando.c: 320: PIE2bits.TMR3IE = 1;
  1826  002A00  82A0               	bsf	4000,1,c	;volatile
  1827                           
  1828                           ;telecomando.c: 321: INTCONbits.GIEH = 1;
  1829  002A02  8EF2               	bsf	intcon,7,c	;volatile
  1830                           
  1831                           ;telecomando.c: 322: INTCONbits.GIEL = 1;
  1832  002A04  8CF2               	bsf	intcon,6,c	;volatile
  1833                           
  1834                           ;telecomando.c: 324: RCSTAbits.SPEN = 1;
  1835  002A06  8EAB               	bsf	4011,7,c	;volatile
  1836                           
  1837                           ;telecomando.c: 325: delay_ms(2);
  1838  002A08  0E00               	movlw	0
  1839  002A0A  0100               	movlb	0	; () banked
  1840  002A0C  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1841  002A0E  0E02               	movlw	2
  1842  002A10  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1843  002A12  EC46  F017         	call	_delay_ms	;wreg free
  1844                           
  1845                           ;telecomando.c: 326: T3CON = 0x01;
  1846  002A16  0E01               	movlw	1
  1847  002A18  6EB1               	movwf	4017,c	;volatile
  1848                           
  1849                           ;telecomando.c: 327: LCD_clear();
  1850  002A1A  EC2D  F017         	call	_LCD_clear	;wreg free
  1851  002A1E  0012               	return		;funcret
  1852  002A20                     __end_of_board_initialization:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodl	equ	0xFF3
  1859                           intcon	equ	0xFF2
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _delay_s *****************
  1865 ;; Defined at:
  1866 ;;		line 102 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  value_s         1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  value_s         1   18[BANK0 ] unsigned char 
  1871 ;;  repeat_loop     1   19[BANK0 ] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;		None               void
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1881 ;;      Params:         0       0       0       0
  1882 ;;      Locals:         0       2       0       0
  1883 ;;      Temps:          0       0       0       0
  1884 ;;      Totals:         0       2       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    6
  1888 ;; This function calls:
  1889 ;;		_delay_ms
  1890 ;; This function is called by:
  1891 ;;		_board_initialization
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text2
  1896  002F1C                     __ptext2:
  1897                           	opt stack 0
  1898  002F1C                     _delay_s:
  1899                           	opt stack 23
  1900                           
  1901                           ;incstack = 0
  1902                           ;delay_s@value_s stored from wreg
  1903  002F1C  0100               	movlb	0	; () banked
  1904  002F1E  6F72               	movwf	delay_s@value_s& (0+255),b
  1905                           
  1906                           ;src\delay.c: 104: unsigned char repeat_loop;
  1907                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1908  002F20  0E00               	movlw	0
  1909  002F22  0100               	movlb	0	; () banked
  1910  002F24  6F73               	movwf	delay_s@repeat_loop& (0+255),b
  1911  002F26  D009               	goto	l5069
  1912  002F28                     l5065:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;src\delay.c: 107: delay_ms (1000);
  1916  002F28  0E03               	movlw	3
  1917  002F2A  0100               	movlb	0	; () banked
  1918  002F2C  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1919  002F2E  0EE8               	movlw	232
  1920  002F30  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1921  002F32  EC46  F017         	call	_delay_ms	;wreg free
  1922  002F36  0100               	movlb	0	; () banked
  1923  002F38  2B73               	incf	delay_s@repeat_loop& (0+255),f,b
  1924  002F3A                     l5069:
  1925                           
  1926                           ; BSR set to: 0
  1927  002F3A  0100               	movlb	0	; () banked
  1928  002F3C  5172               	movf	delay_s@value_s& (0+255),w,b
  1929  002F3E  0100               	movlb	0	; () banked
  1930  002F40  5D73               	subwf	delay_s@repeat_loop& (0+255),w,b
  1931  002F42  B0D8               	btfsc	status,0,c
  1932  002F44  0012               	return	
  1933  002F46  D7F0               	goto	l5065
  1934  002F48                     __end_of_delay_s:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _OpenUSART *****************
  1947 ;; Defined at:
  1948 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  config          1    wreg     unsigned char 
  1951 ;;  spbrg           2   24[COMRAM] unsigned int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  config          1   26[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		wreg, status,2
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1963 ;;      Params:         2       0       0       0
  1964 ;;      Locals:         1       0       0       0
  1965 ;;      Temps:          0       0       0       0
  1966 ;;      Totals:         3       0       0       0
  1967 ;;Total ram usage:        3 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    4
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_board_initialization
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text3
  1978  002C6A                     __ptext3:
  1979                           	opt stack 0
  1980  002C6A                     _OpenUSART:
  1981                           	opt stack 25
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;incstack = 0
  1985                           ;OpenUSART@config stored from wreg
  1986  002C6A  6E3E               	movwf	OpenUSART@config,c
  1987  002C6C  0E00               	movlw	0
  1988  002C6E  6EAC               	movwf	4012,c	;volatile
  1989  002C70  0E00               	movlw	0
  1990  002C72  6EAB               	movwf	4011,c	;volatile
  1991  002C74  B03E               	btfsc	OpenUSART@config,0,c
  1992  002C76  88AC               	bsf	4012,4,c	;volatile
  1993  002C78  A23E               	btfss	OpenUSART@config,1,c
  1994  002C7A  D002               	goto	l3797
  1995  002C7C  8CAC               	bsf	4012,6,c	;volatile
  1996  002C7E  8CAB               	bsf	4011,6,c	;volatile
  1997  002C80                     l3797:
  1998  002C80  B43E               	btfsc	OpenUSART@config,2,c
  1999  002C82  8EAC               	bsf	4012,7,c	;volatile
  2000  002C84  A63E               	btfss	OpenUSART@config,3,c
  2001  002C86  D002               	goto	l423
  2002  002C88  88AB               	bsf	4011,4,c	;volatile
  2003  002C8A  D001               	goto	l3805
  2004  002C8C                     l423:
  2005  002C8C  8AAB               	bsf	4011,5,c	;volatile
  2006  002C8E                     l3805:
  2007  002C8E  B83E               	btfsc	OpenUSART@config,4,c
  2008  002C90  84AC               	bsf	4012,2,c	;volatile
  2009  002C92  989E               	bcf	3998,4,c	;volatile
  2010  002C94  BA3E               	btfsc	OpenUSART@config,5,c
  2011  002C96  86AB               	bsf	4011,3,c	;volatile
  2012  002C98  AC3E               	btfss	OpenUSART@config,6,c
  2013  002C9A  D002               	goto	l427
  2014  002C9C  8A9D               	bsf	3997,5,c	;volatile
  2015  002C9E  D001               	goto	l428
  2016  002CA0                     l427:
  2017  002CA0  9A9D               	bcf	3997,5,c	;volatile
  2018  002CA2                     l428:
  2019  002CA2  9A9E               	bcf	3998,5,c	;volatile
  2020  002CA4  AE3E               	btfss	OpenUSART@config,7,c
  2021  002CA6  D002               	goto	l429
  2022  002CA8  889D               	bsf	3997,4,c	;volatile
  2023  002CAA  D001               	goto	l430
  2024  002CAC                     l429:
  2025  002CAC  989D               	bcf	3997,4,c	;volatile
  2026  002CAE                     l430:
  2027  002CAE  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2028  002CB2  503D               	movf	OpenUSART@spbrg+1,w,c
  2029  002CB4  6EB0               	movwf	4016,c	;volatile
  2030  002CB6  8AAC               	bsf	4012,5,c	;volatile
  2031  002CB8  8EAB               	bsf	4011,7,c	;volatile
  2032  002CBA  9C94               	bcf	3988,6,c	;volatile
  2033  002CBC  8E94               	bsf	3988,7,c	;volatile
  2034  002CBE  A8AC               	btfss	4012,4,c	;volatile
  2035  002CC0  0012               	return	
  2036  002CC2  BEAC               	btfsc	4012,7,c	;volatile
  2037  002CC4  0012               	return	
  2038  002CC6  8C94               	bsf	3988,6,c	;volatile
  2039  002CC8  0012               	return	
  2040  002CCA                     __end_of_OpenUSART:
  2041                           	opt stack 0
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           prodl	equ	0xFF3
  2047                           intcon	equ	0xFF2
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _LCD_initialize *****************
  2053 ;; Defined at:
  2054 ;;		line 283 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  quartz_frequ    1    wreg     unsigned char 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2068 ;;      Params:         0       0       0       0
  2069 ;;      Locals:         0       1       0       0
  2070 ;;      Temps:          0       0       0       0
  2071 ;;      Totals:         0       1       0       0
  2072 ;;Total ram usage:        1 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    9
  2075 ;; This function calls:
  2076 ;;		_LCD_clear
  2077 ;;		_LCD_cursor
  2078 ;;		_LCD_send_command
  2079 ;;		_delay_ms
  2080 ;;		_delay_set_quartz
  2081 ;; This function is called by:
  2082 ;;		_board_initialization
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text4
  2087  002092                     __ptext4:
  2088                           	opt stack 0
  2089  002092                     _LCD_initialize:
  2090                           	opt stack 20
  2091                           
  2092                           ;incstack = 0
  2093                           ;LCD_initialize@quartz_frequency stored from wreg
  2094  002092  0100               	movlb	0	; () banked
  2095  002094  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2096                           
  2097                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2098  002096  0100               	movlb	0	; () banked
  2099  002098  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2100  00209A  EC48  F018         	call	_delay_set_quartz
  2101                           
  2102                           ;src\LCD_44780.c: 287: LATAbits.LATA6 = 0x00;
  2103  00209E  9C89               	bcf	3977,6,c	;volatile
  2104                           
  2105                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2106  0020A0  928B               	bcf	3979,1,c	;volatile
  2107                           
  2108                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2109  0020A2  908B               	bcf	3979,0,c	;volatile
  2110                           
  2111                           ;src\LCD_44780.c: 291: delay_ms (100);
  2112  0020A4  0E00               	movlw	0
  2113  0020A6  0100               	movlb	0	; () banked
  2114  0020A8  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2115  0020AA  0E64               	movlw	100
  2116  0020AC  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2117  0020AE  EC46  F017         	call	_delay_ms	;wreg free
  2118                           
  2119                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2120  0020B2  0E00               	movlw	0
  2121  0020B4  0100               	movlb	0	; () banked
  2122  0020B6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2123  0020B8  0E01               	movlw	1
  2124  0020BA  0100               	movlb	0	; () banked
  2125  0020BC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2126  0020BE  0E01               	movlw	1
  2127  0020C0  0100               	movlb	0	; () banked
  2128  0020C2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2129  0020C4  0E00               	movlw	0
  2130  0020C6  ECF9  F016         	call	_LCD_send_command
  2131                           
  2132                           ;src\LCD_44780.c: 293: delay_ms (100);
  2133  0020CA  0E00               	movlw	0
  2134  0020CC  0100               	movlb	0	; () banked
  2135  0020CE  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2136  0020D0  0E64               	movlw	100
  2137  0020D2  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2138  0020D4  EC46  F017         	call	_delay_ms	;wreg free
  2139                           
  2140                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2141  0020D8  0E00               	movlw	0
  2142  0020DA  0100               	movlb	0	; () banked
  2143  0020DC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2144  0020DE  0E01               	movlw	1
  2145  0020E0  0100               	movlb	0	; () banked
  2146  0020E2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2147  0020E4  0E01               	movlw	1
  2148  0020E6  0100               	movlb	0	; () banked
  2149  0020E8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2150  0020EA  0E00               	movlw	0
  2151  0020EC  ECF9  F016         	call	_LCD_send_command
  2152                           
  2153                           ;src\LCD_44780.c: 295: delay_ms (10);
  2154  0020F0  0E00               	movlw	0
  2155  0020F2  0100               	movlb	0	; () banked
  2156  0020F4  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2157  0020F6  0E0A               	movlw	10
  2158  0020F8  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2159  0020FA  EC46  F017         	call	_delay_ms	;wreg free
  2160                           
  2161                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2162  0020FE  0E00               	movlw	0
  2163  002100  0100               	movlb	0	; () banked
  2164  002102  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2165  002104  0E01               	movlw	1
  2166  002106  0100               	movlb	0	; () banked
  2167  002108  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2168  00210A  0E01               	movlw	1
  2169  00210C  0100               	movlb	0	; () banked
  2170  00210E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2171  002110  0E00               	movlw	0
  2172  002112  ECF9  F016         	call	_LCD_send_command
  2173                           
  2174                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2175  002116  0E00               	movlw	0
  2176  002118  0100               	movlb	0	; () banked
  2177  00211A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2178  00211C  0E01               	movlw	1
  2179  00211E  0100               	movlb	0	; () banked
  2180  002120  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2181  002122  0E00               	movlw	0
  2182  002124  0100               	movlb	0	; () banked
  2183  002126  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2184  002128  0E00               	movlw	0
  2185  00212A  ECF9  F016         	call	_LCD_send_command
  2186                           
  2187                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2188  00212E  0E00               	movlw	0
  2189  002130  0100               	movlb	0	; () banked
  2190  002132  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2191  002134  0E01               	movlw	1
  2192  002136  0100               	movlb	0	; () banked
  2193  002138  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2194  00213A  0E00               	movlw	0
  2195  00213C  0100               	movlb	0	; () banked
  2196  00213E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2197  002140  0E00               	movlw	0
  2198  002142  ECF9  F016         	call	_LCD_send_command
  2199                           
  2200                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2201  002146  0E00               	movlw	0
  2202  002148  0100               	movlb	0	; () banked
  2203  00214A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2204  00214C  0E00               	movlw	0
  2205  00214E  0100               	movlb	0	; () banked
  2206  002150  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2207  002152  0E00               	movlw	0
  2208  002154  0100               	movlb	0	; () banked
  2209  002156  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2210  002158  0E01               	movlw	1
  2211  00215A  ECF9  F016         	call	_LCD_send_command
  2212                           
  2213                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2214  00215E  0E00               	movlw	0
  2215  002160  0100               	movlb	0	; () banked
  2216  002162  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2217  002164  0E00               	movlw	0
  2218  002166  0100               	movlb	0	; () banked
  2219  002168  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2220  00216A  0E00               	movlw	0
  2221  00216C  0100               	movlb	0	; () banked
  2222  00216E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2223  002170  0E00               	movlw	0
  2224  002172  ECF9  F016         	call	_LCD_send_command
  2225                           
  2226                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2227  002176  0E00               	movlw	0
  2228  002178  0100               	movlb	0	; () banked
  2229  00217A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2230  00217C  0E00               	movlw	0
  2231  00217E  0100               	movlb	0	; () banked
  2232  002180  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2233  002182  0E00               	movlw	0
  2234  002184  0100               	movlb	0	; () banked
  2235  002186  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2236  002188  0E01               	movlw	1
  2237  00218A  ECF9  F016         	call	_LCD_send_command
  2238                           
  2239                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2240  00218E  0E00               	movlw	0
  2241  002190  0100               	movlb	0	; () banked
  2242  002192  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2243  002194  0E00               	movlw	0
  2244  002196  0100               	movlb	0	; () banked
  2245  002198  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2246  00219A  0E00               	movlw	0
  2247  00219C  0100               	movlb	0	; () banked
  2248  00219E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2249  0021A0  0E00               	movlw	0
  2250  0021A2  ECF9  F016         	call	_LCD_send_command
  2251                           
  2252                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2253  0021A6  0E00               	movlw	0
  2254  0021A8  0100               	movlb	0	; () banked
  2255  0021AA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2256  0021AC  0E00               	movlw	0
  2257  0021AE  0100               	movlb	0	; () banked
  2258  0021B0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2259  0021B2  0E01               	movlw	1
  2260  0021B4  0100               	movlb	0	; () banked
  2261  0021B6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2262  0021B8  0E00               	movlw	0
  2263  0021BA  ECF9  F016         	call	_LCD_send_command
  2264                           
  2265                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2266  0021BE  0E00               	movlw	0
  2267  0021C0  0100               	movlb	0	; () banked
  2268  0021C2  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2269  0021C4  0E00               	movlw	0
  2270  0021C6  0100               	movlb	0	; () banked
  2271  0021C8  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2272  0021CA  0E00               	movlw	0
  2273  0021CC  0100               	movlb	0	; () banked
  2274  0021CE  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2275  0021D0  0E00               	movlw	0
  2276  0021D2  ECF9  F016         	call	_LCD_send_command
  2277                           
  2278                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2279  0021D6  0E01               	movlw	1
  2280  0021D8  0100               	movlb	0	; () banked
  2281  0021DA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2282  0021DC  0E01               	movlw	1
  2283  0021DE  0100               	movlb	0	; () banked
  2284  0021E0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2285  0021E2  0E00               	movlw	0
  2286  0021E4  0100               	movlb	0	; () banked
  2287  0021E6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2288  0021E8  0E00               	movlw	0
  2289  0021EA  ECF9  F016         	call	_LCD_send_command
  2290                           
  2291                           ;src\LCD_44780.c: 312: LCD_clear ();
  2292  0021EE  EC2D  F017         	call	_LCD_clear	;wreg free
  2293                           
  2294                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2295  0021F2  0E00               	movlw	0
  2296  0021F4  0100               	movlb	0	; () banked
  2297  0021F6  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  2298  0021F8  0E00               	movlw	0
  2299  0021FA  EC14  F017         	call	_LCD_cursor
  2300  0021FE  0012               	return		;funcret
  2301  002200                     __end_of_LCD_initialize:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodl	equ	0xFF3
  2308                           intcon	equ	0xFF2
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           status	equ	0xFD8
  2312                           
  2313 ;; *************** function _delay_set_quartz *****************
  2314 ;; Defined at:
  2315 ;;		line 115 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  frequency       1    wreg     unsigned char 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  frequency       1   24[COMRAM] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;		None               void
  2322 ;; Registers used:
  2323 ;;		wreg
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2329 ;;      Params:         0       0       0       0
  2330 ;;      Locals:         1       0       0       0
  2331 ;;      Temps:          0       0       0       0
  2332 ;;      Totals:         1       0       0       0
  2333 ;;Total ram usage:        1 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    4
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_LCD_initialize
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text5
  2344  003090                     __ptext5:
  2345                           	opt stack 0
  2346  003090                     _delay_set_quartz:
  2347                           	opt stack 24
  2348                           
  2349                           ;incstack = 0
  2350                           ;delay_set_quartz@frequency stored from wreg
  2351  003090  6E3C               	movwf	delay_set_quartz@frequency,c
  2352                           
  2353                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2354  003092  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2355  003096  0012               	return		;funcret
  2356  003098                     __end_of_delay_set_quartz:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodl	equ	0xFF3
  2363                           intcon	equ	0xFF2
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _LCD_cursor *****************
  2369 ;; Defined at:
  2370 ;;		line 266 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  active          1    wreg     unsigned char 
  2373 ;;  blinking        1   21[BANK0 ] unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  active          1   22[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2385 ;;      Params:         0       1       0       0
  2386 ;;      Locals:         0       1       0       0
  2387 ;;      Temps:          0       0       0       0
  2388 ;;      Totals:         0       2       0       0
  2389 ;;Total ram usage:        2 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    8
  2392 ;; This function calls:
  2393 ;;		_LCD_send_command
  2394 ;; This function is called by:
  2395 ;;		_LCD_initialize
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text6
  2400  002E28                     __ptext6:
  2401                           	opt stack 0
  2402  002E28                     _LCD_cursor:
  2403                           	opt stack 20
  2404                           
  2405                           ;incstack = 0
  2406                           ;LCD_cursor@active stored from wreg
  2407  002E28  0100               	movlb	0	; () banked
  2408  002E2A  6F76               	movwf	LCD_cursor@active& (0+255),b
  2409                           
  2410                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2411  002E2C  0E00               	movlw	0
  2412  002E2E  0100               	movlb	0	; () banked
  2413  002E30  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2414  002E32  0E00               	movlw	0
  2415  002E34  0100               	movlb	0	; () banked
  2416  002E36  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2417  002E38  0E00               	movlw	0
  2418  002E3A  0100               	movlb	0	; () banked
  2419  002E3C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2420  002E3E  0E00               	movlw	0
  2421  002E40  ECF9  F016         	call	_LCD_send_command
  2422                           
  2423                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2424  002E44  0E01               	movlw	1
  2425  002E46  0100               	movlb	0	; () banked
  2426  002E48  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2427  002E4A  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2428  002E4E  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2429  002E52  0E01               	movlw	1
  2430  002E54  ECF9  F016         	call	_LCD_send_command
  2431  002E58  0012               	return		;funcret
  2432  002E5A                     __end_of_LCD_cursor:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           prodl	equ	0xFF3
  2439                           intcon	equ	0xFF2
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _LCD_backlight *****************
  2445 ;; Defined at:
  2446 ;;		line 275 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  active          1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  active          1   24[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2460 ;;      Params:         0       0       0       0
  2461 ;;      Locals:         1       0       0       0
  2462 ;;      Temps:          0       0       0       0
  2463 ;;      Totals:         1       0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_board_initialization
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text7
  2475  003082                     __ptext7:
  2476                           	opt stack 0
  2477  003082                     _LCD_backlight:
  2478                           	opt stack 25
  2479                           
  2480                           ;incstack = 0
  2481                           ;LCD_backlight@active stored from wreg
  2482  003082  6E3C               	movwf	LCD_backlight@active,c
  2483                           
  2484                           ;src\LCD_44780.c: 277: LATCbits.LATC1 = active;
  2485  003084  B03C               	btfsc	LCD_backlight@active,0,c
  2486  003086  D002               	bra	u3615
  2487  003088  928B               	bcf	3979,1,c	;volatile
  2488  00308A  D001               	bra	u3616
  2489  00308C                     u3615:
  2490  00308C  828B               	bsf	3979,1,c	;volatile
  2491  00308E                     u3616:
  2492  00308E  0012               	return		;funcret
  2493  003090                     __end_of_LCD_backlight:
  2494                           	opt stack 0
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodl	equ	0xFF3
  2500                           intcon	equ	0xFF2
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _USART_Send *****************
  2506 ;; Defined at:
  2507 ;;		line 222 in file "telecomando.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;		None               void
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2521 ;;      Params:         0       0       0       0
  2522 ;;      Locals:         0       0       0       0
  2523 ;;      Temps:          0       0       0       0
  2524 ;;      Totals:         0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    6
  2528 ;; This function calls:
  2529 ;;		_putsUSART
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text8
  2536  002EBE                     __ptext8:
  2537                           	opt stack 0
  2538  002EBE                     _USART_Send:
  2539                           	opt stack 24
  2540                           
  2541                           ;telecomando.c: 223: set_speed_pk1 = set_speed >> 8;
  2542                           
  2543                           ;incstack = 0
  2544  002EBE  500E               	movf	_set_speed+1,w,c	;volatile
  2545  002EC0  6E17               	movwf	_set_speed_pk1,c	;volatile
  2546                           
  2547                           ;telecomando.c: 224: set_speed_pk0 = set_speed;
  2548  002EC2  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2549                           
  2550                           ;telecomando.c: 225: USART_Tx[1] = dir;
  2551  002EC6  0E00               	movlw	0
  2552  002EC8  B243               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2553  002ECA  0E01               	movlw	1
  2554  002ECC  0100               	movlb	0	; () banked
  2555  002ECE  6FEA               	movwf	(_USART_Tx+1)& (0+255),b
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;telecomando.c: 226: USART_Tx[2] = set_speed_pk1;
  2559  002ED0  C017  F0EB         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;telecomando.c: 227: USART_Tx[3] = set_speed_pk0;
  2563  002ED4  C016  F0EC         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;telecomando.c: 228: USART_Tx[4] = set_steering;
  2567  002ED8  C018  F0ED         	movff	_set_steering,_USART_Tx+4	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;telecomando.c: 229: USART_Tx[5] = analogic_brake;
  2571  002EDC  C014  F0EE         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;telecomando.c: 231: putsUSART((char *) USART_Tx);
  2575  002EE0  0EE9               	movlw	low _USART_Tx
  2576  002EE2  6E3D               	movwf	putsUSART@data,c
  2577  002EE4  0E00               	movlw	high _USART_Tx
  2578  002EE6  6E3E               	movwf	putsUSART@data+1,c
  2579  002EE8  ECD0  F017         	call	_putsUSART	;wreg free
  2580  002EEC  0012               	return		;funcret
  2581  002EEE                     __end_of_USART_Send:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodl	equ	0xFF3
  2588                           intcon	equ	0xFF2
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function _putsUSART *****************
  2594 ;; Defined at:
  2595 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  data            2   25[COMRAM] PTR unsigned char 
  2598 ;;		 -> USART_Tx(7), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2610 ;;      Params:         2       0       0       0
  2611 ;;      Locals:         0       0       0       0
  2612 ;;      Temps:          0       0       0       0
  2613 ;;      Totals:         2       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    5
  2617 ;; This function calls:
  2618 ;;		_WriteUSART
  2619 ;; This function is called by:
  2620 ;;		_USART_Send
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text9
  2625  002FA0                     __ptext9:
  2626                           	opt stack 0
  2627  002FA0                     _putsUSART:
  2628                           	opt stack 24
  2629  002FA0                     l440:
  2630  002FA0  A2AC               	btfss	4012,1,c	;volatile
  2631  002FA2  D7FE               	goto	l440
  2632  002FA4  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2633  002FA8  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2634  002FAC  50DF               	movf	indf2,w,c
  2635  002FAE  EC38  F018         	call	_WriteUSART
  2636  002FB2  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2637  002FB6  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2638  002FBA  4A3D               	infsnz	putsUSART@data,f,c
  2639  002FBC  2A3E               	incf	putsUSART@data+1,f,c
  2640  002FBE  50DF               	movf	indf2,w,c
  2641  002FC0  B4D8               	btfsc	status,2,c
  2642  002FC2  0012               	return	
  2643  002FC4  D7ED               	goto	l440
  2644  002FC6                     __end_of_putsUSART:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodl	equ	0xFF3
  2651                           intcon	equ	0xFF2
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           indf2	equ	0xFDF
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _WriteUSART *****************
  2660 ;; Defined at:
  2661 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  data            1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  data            1   24[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2675 ;;      Params:         0       0       0       0
  2676 ;;      Locals:         1       0       0       0
  2677 ;;      Temps:          0       0       0       0
  2678 ;;      Totals:         1       0       0       0
  2679 ;;Total ram usage:        1 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    4
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_putsUSART
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text10
  2690  003070                     __ptext10:
  2691                           	opt stack 0
  2692  003070                     _WriteUSART:
  2693                           	opt stack 24
  2694                           
  2695                           ;incstack = 0
  2696                           ;WriteUSART@data stored from wreg
  2697  003070  6E3C               	movwf	WriteUSART@data,c
  2698  003072  ACAC               	btfss	4012,6,c	;volatile
  2699  003074  D003               	goto	l3335
  2700  003076  90AC               	bcf	4012,0,c	;volatile
  2701  003078  B211               	btfsc	_USART_Status,1,c
  2702  00307A  80AC               	bsf	4012,0,c	;volatile
  2703  00307C                     l3335:
  2704  00307C  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2705  003080  0012               	return		;funcret
  2706  003082                     __end_of_WriteUSART:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           indf2	equ	0xFDF
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _LCD_Handler *****************
  2722 ;; Defined at:
  2723 ;;		line 234 in file "telecomando.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2737 ;;      Params:         0       0       0       0
  2738 ;;      Locals:         0       0       0       0
  2739 ;;      Temps:          0       0       0       0
  2740 ;;      Totals:         0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:   10
  2744 ;; This function calls:
  2745 ;;		_LCD_clear
  2746 ;;		_LCD_goto_line
  2747 ;;		_LCD_write_message
  2748 ;;		_LCD_write_string
  2749 ;;		___lwdiv
  2750 ;;		___xxtofl
  2751 ;;		_sprintf
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text11
  2758  0024BA                     __ptext11:
  2759                           	opt stack 0
  2760  0024BA                     _LCD_Handler:
  2761                           	opt stack 20
  2762                           
  2763                           ;telecomando.c: 235: actual_speed_kmh = actual_speed / 278;
  2764                           
  2765                           ;incstack = 0
  2766  0024BA  0E01               	movlw	1
  2767  0024BC  6E3F               	movwf	___lwdiv@divisor+1,c
  2768  0024BE  0E16               	movlw	22
  2769  0024C0  6E3E               	movwf	___lwdiv@divisor,c
  2770  0024C2  C0E0  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2771  0024C6  C0E1  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2772  0024CA  EC65  F016         	call	___lwdiv	;wreg free
  2773  0024CE  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2774  0024D2  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2775  0024D6  0100               	movlb	0	; () banked
  2776  0024D8  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2777  0024DA  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2778  0024DC  0E00               	movlw	0
  2779  0024DE  EC99  F00E         	call	___xxtofl
  2780  0024E2  C070  F0D8         	movff	?___xxtofl,_actual_speed_kmh
  2781  0024E6  C071  F0D9         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2782  0024EA  C072  F0DA         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2783  0024EE  C073  F0DB         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2784                           
  2785                           ;telecomando.c: 237: LCD_clear();
  2786  0024F2  EC2D  F017         	call	_LCD_clear	;wreg free
  2787                           
  2788                           ;telecomando.c: 238: LCD_goto_line(1);
  2789  0024F6  0E01               	movlw	1
  2790  0024F8  EC6E  F013         	call	_LCD_goto_line
  2791                           
  2792                           ;telecomando.c: 239: LCD_write_message("=== VEHICLE DATA ===");
  2793  0024FC  0EA5               	movlw	low STR_5
  2794  0024FE  0100               	movlb	0	; () banked
  2795  002500  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2796  002502  0E3F               	movlw	high STR_5
  2797  002504  0100               	movlb	0	; () banked
  2798  002506  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2799  002508  ECA4  F017         	call	_LCD_write_message	;wreg free
  2800                           
  2801                           ;telecomando.c: 241: LCD_goto_line(2);
  2802  00250C  0E02               	movlw	2
  2803  00250E  EC6E  F013         	call	_LCD_goto_line
  2804                           
  2805                           ;telecomando.c: 242: LCD_write_message("Direction: ");
  2806  002512  0ECF               	movlw	low STR_6
  2807  002514  0100               	movlb	0	; () banked
  2808  002516  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2809  002518  0E3F               	movlw	high STR_6
  2810  00251A  0100               	movlb	0	; () banked
  2811  00251C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2812  00251E  ECA4  F017         	call	_LCD_write_message	;wreg free
  2813                           
  2814                           ;telecomando.c: 243: if (switch_position != 0) {
  2815  002522  5019               	movf	_switch_position,w,c	;volatile
  2816  002524  B4D8               	btfsc	status,2,c
  2817  002526  D014               	goto	l5457
  2818                           
  2819                           ;telecomando.c: 244: if (dir == 1) {
  2820  002528  A243               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2821  00252A  D009               	goto	l5455
  2822                           
  2823                           ;telecomando.c: 245: LCD_write_message("FWD");
  2824  00252C  0EF9               	movlw	low STR_7
  2825  00252E  0100               	movlb	0	; () banked
  2826  002530  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2827  002532  0E3F               	movlw	high STR_7
  2828  002534  0100               	movlb	0	; () banked
  2829  002536  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2830  002538  ECA4  F017         	call	_LCD_write_message	;wreg free
  2831                           
  2832                           ;telecomando.c: 246: } else {
  2833  00253C  D011               	goto	l5459
  2834  00253E                     l5455:
  2835                           
  2836                           ;telecomando.c: 247: LCD_write_message("BKWD");
  2837  00253E  0EEF               	movlw	low STR_8
  2838  002540  0100               	movlb	0	; () banked
  2839  002542  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2840  002544  0E3F               	movlw	high STR_8
  2841  002546  0100               	movlb	0	; () banked
  2842  002548  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2843  00254A  ECA4  F017         	call	_LCD_write_message	;wreg free
  2844                           
  2845                           ;telecomando.c: 248: }
  2846                           ;telecomando.c: 249: } else {
  2847  00254E  D008               	goto	l5459
  2848  002550                     l5457:
  2849                           
  2850                           ;telecomando.c: 250: LCD_write_message("P");
  2851  002550  0EFD               	movlw	low STR_9
  2852  002552  0100               	movlb	0	; () banked
  2853  002554  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2854  002556  0E3F               	movlw	high STR_9
  2855  002558  0100               	movlb	0	; () banked
  2856  00255A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2857  00255C  ECA4  F017         	call	_LCD_write_message	;wreg free
  2858  002560                     l5459:
  2859                           
  2860                           ;telecomando.c: 251: }
  2861                           ;telecomando.c: 253: LCD_goto_line(3);
  2862  002560  0E03               	movlw	3
  2863  002562  EC6E  F013         	call	_LCD_goto_line
  2864                           
  2865                           ;telecomando.c: 254: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2866  002566  0E19               	movlw	low _str
  2867  002568  0100               	movlb	0	; () banked
  2868  00256A  6FC0               	movwf	sprintf@sp& (0+255),b
  2869  00256C  0E01               	movlw	high _str
  2870  00256E  0100               	movlb	0	; () banked
  2871  002570  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2872  002572  0EDB               	movlw	low STR_10
  2873  002574  0100               	movlb	0	; () banked
  2874  002576  6FC2               	movwf	sprintf@f& (0+255),b
  2875  002578  0E3F               	movlw	high STR_10
  2876  00257A  0100               	movlb	0	; () banked
  2877  00257C  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2878  00257E  C0D8  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2879  002582  C0D9  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2880  002586  C0DA  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2881  00258A  C0DB  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2882  00258E  EC62  F000         	call	_sprintf	;wreg free
  2883                           
  2884                           ;telecomando.c: 255: str[11] = '\0';
  2885  002592  0E00               	movlw	0
  2886  002594  0101               	movlb	1	; () banked
  2887  002596  6F24               	movwf	(_str+11)& (0+255),b
  2888                           
  2889                           ; BSR set to: 1
  2890                           ;telecomando.c: 256: LCD_write_string(str);
  2891  002598  0E19               	movlw	low _str
  2892  00259A  0100               	movlb	0	; () banked
  2893  00259C  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2894  00259E  0E01               	movlw	high _str
  2895  0025A0  0100               	movlb	0	; () banked
  2896  0025A2  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2897  0025A4  ECE3  F017         	call	_LCD_write_string	;wreg free
  2898                           
  2899                           ;telecomando.c: 257: LCD_write_message("Km/h");
  2900  0025A8  0EF4               	movlw	low STR_11
  2901  0025AA  0100               	movlb	0	; () banked
  2902  0025AC  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2903  0025AE  0E3F               	movlw	high STR_11
  2904  0025B0  0100               	movlb	0	; () banked
  2905  0025B2  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2906  0025B4  ECA4  F017         	call	_LCD_write_message	;wreg free
  2907                           
  2908                           ;telecomando.c: 259: LCD_goto_line(4);
  2909  0025B8  0E04               	movlw	4
  2910  0025BA  EC6E  F013         	call	_LCD_goto_line
  2911                           
  2912                           ;telecomando.c: 260: LCD_write_message("====================");
  2913  0025BE  0EBA               	movlw	low STR_1
  2914  0025C0  0100               	movlb	0	; () banked
  2915  0025C2  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2916  0025C4  0E3F               	movlw	high STR_1
  2917  0025C6  0100               	movlb	0	; () banked
  2918  0025C8  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2919  0025CA  ECA4  F017         	call	_LCD_write_message	;wreg free
  2920  0025CE  0012               	return		;funcret
  2921  0025D0                     __end_of_LCD_Handler:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           indf2	equ	0xFDF
  2932                           fsr2h	equ	0xFDA
  2933                           fsr2l	equ	0xFD9
  2934                           status	equ	0xFD8
  2935                           
  2936 ;; *************** function _sprintf *****************
  2937 ;; Defined at:
  2938 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  2941 ;;		 -> str(12), 
  2942 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  2943 ;;		 -> STR_10(12), 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2946 ;;  tmpval          4   14[BANK1 ] struct .
  2947 ;;  val             4    8[BANK1 ] unsigned long 
  2948 ;;  cp              3    0        PTR const unsigned char 
  2949 ;;  prec            2   18[BANK1 ] int 
  2950 ;;  exp             2   12[BANK1 ] int 
  2951 ;;  flag            2    6[BANK1 ] unsigned short 
  2952 ;;  ap              2    4[BANK1 ] PTR void [1]
  2953 ;;		 -> ?_sprintf(2), 
  2954 ;;  len             2    0        unsigned int 
  2955 ;;  width           2    0        int 
  2956 ;;  c               1   24[BANK1 ] char 
  2957 ;;  d               1    0        unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   96[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2967 ;;      Params:         0       8       0       0
  2968 ;;      Locals:         0       0      25       0
  2969 ;;      Temps:          0       2       0       0
  2970 ;;      Totals:         0      10      25       0
  2971 ;;Total ram usage:       35 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    6
  2974 ;; This function calls:
  2975 ;;		___awdiv
  2976 ;;		___fladd
  2977 ;;		___flge
  2978 ;;		___flmul
  2979 ;;		___flneg
  2980 ;;		___flsub
  2981 ;;		___fltol
  2982 ;;		___lldiv
  2983 ;;		___llmod
  2984 ;;		___wmul
  2985 ;;		___xxtofl
  2986 ;;		__div_to_l_
  2987 ;;		__tdiv_to_l_
  2988 ;;		_fround
  2989 ;;		_isdigit
  2990 ;;		_scale
  2991 ;; This function is called by:
  2992 ;;		_LCD_Handler
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text12
  2997  0000C4                     __ptext12:
  2998                           	opt stack 0
  2999  0000C4                     _sprintf:
  3000                           	opt stack 23
  3001                           
  3002                           ;doprnt.c: 494: va_list ap;
  3003                           ;doprnt.c: 499: signed char c;
  3004                           ;doprnt.c: 501: int width;
  3005                           ;doprnt.c: 504: int prec;
  3006                           ;doprnt.c: 508: unsigned short flag;
  3007                           ;doprnt.c: 515: char d;
  3008                           ;doprnt.c: 516: double fval;
  3009                           ;doprnt.c: 517: int exp;
  3010                           ;doprnt.c: 523: union {
  3011                           ;doprnt.c: 524: unsigned long vd;
  3012                           ;doprnt.c: 525: double integ;
  3013                           ;doprnt.c: 526: } tmpval;
  3014                           ;doprnt.c: 528: unsigned long val;
  3015                           ;doprnt.c: 529: unsigned len;
  3016                           ;doprnt.c: 530: const char * cp;
  3017                           ;doprnt.c: 533: *ap = __va_start();
  3018                           
  3019                           ;incstack = 0
  3020  0000C4  0EC4               	movlw	low (?_sprintf+4)
  3021  0000C6  0101               	movlb	1	; () banked
  3022  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3023  0000CA  0E00               	movlw	high (?_sprintf+4)
  3024  0000CC  0101               	movlb	1	; () banked
  3025  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3026                           
  3027                           ;doprnt.c: 536: while(c = *f++) {
  3028  0000D0  EF7A  F004         	goto	l5341
  3029  0000D4                     l5143:
  3030                           
  3031                           ; BSR set to: 1
  3032                           ;doprnt.c: 538: if(c != '%')
  3033  0000D4  0E25               	movlw	37
  3034  0000D6  0101               	movlb	1	; () banked
  3035  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3036  0000DA  B4D8               	btfsc	status,2,c
  3037  0000DC  D008               	goto	l5149
  3038                           
  3039                           ; BSR set to: 1
  3040                           ;doprnt.c: 540: {
  3041                           ;doprnt.c: 541: ((*sp++ = (c)));
  3042  0000DE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3043  0000E2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3044  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3045  0000EA  EF77  F004         	goto	l5339
  3046  0000EE                     l5149:
  3047                           
  3048                           ;doprnt.c: 543: }
  3049                           ;doprnt.c: 548: flag = 0;
  3050  0000EE  0E00               	movlw	0
  3051  0000F0  0101               	movlb	1	; () banked
  3052  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3053  0000F4  0E00               	movlw	0
  3054  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;doprnt.c: 611: if(*f == '.') {
  3058  0000F8  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3059  0000FC  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3060  000100                     	if	0	;tblptru may be non-zero
  3061  000100                     	endif
  3062  000100                     	if	0	;tblptru may be non-zero
  3063  000100                     	endif
  3064  000100  0008               	tblrd		*
  3065  000102  50F5               	movf	tablat,w,c
  3066  000104  0A2E               	xorlw	46
  3067  000106  A4D8               	btfss	status,2,c
  3068  000108  D034               	goto	l5163
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;doprnt.c: 612: flag |= 0x4000;
  3072  00010A  0101               	movlb	1	; () banked
  3073  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3074                           
  3075                           ;doprnt.c: 613: f++;
  3076  00010E  0100               	movlb	0	; () banked
  3077  000110  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3078  000112  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;doprnt.c: 620: {
  3082                           ;doprnt.c: 621: prec = 0;
  3083  000114  0E00               	movlw	0
  3084  000116  0101               	movlb	1	; () banked
  3085  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3086  00011A  0E00               	movlw	0
  3087  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3088                           
  3089                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3090  00011E  D01E               	goto	l5161
  3091  000120                     l5157:
  3092                           
  3093                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3094  000120  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  3095  000124  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  3096  000128  0E00               	movlw	0
  3097  00012A  6E3F               	movwf	___wmul@multiplicand+1,c
  3098  00012C  0E0A               	movlw	10
  3099  00012E  6E3E               	movwf	___wmul@multiplicand,c
  3100  000130  ECF6  F017         	call	___wmul	;wreg free
  3101  000134  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3102  000138  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3103  00013C                     	if	0	;tblptru may be non-zero
  3104  00013C                     	endif
  3105  00013C                     	if	0	;tblptru may be non-zero
  3106  00013C                     	endif
  3107  00013C  0008               	tblrd		*
  3108  00013E  50F5               	movf	tablat,w,c
  3109  000140  263C               	addwf	?___wmul,f,c
  3110  000142  0E00               	movlw	0
  3111  000144  223D               	addwfc	?___wmul+1,f,c
  3112  000146  0ED0               	movlw	208
  3113  000148  243C               	addwf	?___wmul,w,c
  3114  00014A  0101               	movlb	1	; () banked
  3115  00014C  6F12               	movwf	sprintf@prec& (0+255),b
  3116  00014E  0EFF               	movlw	255
  3117  000150  203D               	addwfc	?___wmul+1,w,c
  3118  000152  0101               	movlb	1	; () banked
  3119  000154  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3120                           
  3121                           ; BSR set to: 1
  3122  000156  0100               	movlb	0	; () banked
  3123  000158  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3124  00015A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3125  00015C                     l5161:
  3126  00015C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3127  000160  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3128  000164                     	if	0	;tblptru may be non-zero
  3129  000164                     	endif
  3130  000164                     	if	0	;tblptru may be non-zero
  3131  000164                     	endif
  3132  000164  0008               	tblrd		*
  3133  000166  50F5               	movf	tablat,w,c
  3134  000168  EC1A  F018         	call	_isdigit
  3135  00016C  A0D8               	btfss	status,0,c
  3136  00016E  D00C               	goto	l5171
  3137  000170  D7D7               	goto	l5157
  3138  000172                     l5163:
  3139                           
  3140                           ;doprnt.c: 626: prec = 0;
  3141  000172  0E00               	movlw	0
  3142  000174  0101               	movlb	1	; () banked
  3143  000176  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3144  000178  0E00               	movlw	0
  3145  00017A  6F12               	movwf	sprintf@prec& (0+255),b
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;doprnt.c: 628: flag |= 0x1000;
  3149  00017C  0101               	movlb	1	; () banked
  3150  00017E  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3151                           
  3152                           ; BSR set to: 1
  3153                           ;doprnt.c: 630: }
  3154                           ;doprnt.c: 635: switch(c = *f++) {
  3155  000180  D003               	goto	l5171
  3156  000182                     l5167:
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;doprnt.c: 663: flag |= 0x400;
  3160  000182  0101               	movlb	1	; () banked
  3161  000184  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3162                           
  3163                           ;doprnt.c: 664: break;
  3164  000186  D013               	goto	l5173
  3165  000188                     l5171:
  3166  000188  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3167  00018C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3168  000190  0100               	movlb	0	; () banked
  3169  000192  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3170  000194  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3171  000196                     	if	0	;tblptru may be non-zero
  3172  000196                     	endif
  3173  000196                     	if	0	;tblptru may be non-zero
  3174  000196                     	endif
  3175  000196  0008               	tblrd		*
  3176  000198  CFF5 F118          	movff	tablat,sprintf@c
  3177  00019C  0101               	movlb	1	; () banked
  3178  00019E  5118               	movf	sprintf@c& (0+255),w,b
  3179                           
  3180                           ; Switch size 1, requested type "space"
  3181                           ; Number of cases is 2, Range of values is 0 to 102
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte            7     4 (average)
  3185                           ;	Chosen strategy is simple_byte
  3186  0001A0  0A00               	xorlw	0	; case 0
  3187  0001A2  B4D8               	btfsc	status,2,c
  3188  0001A4  D3B6               	goto	l5343
  3189  0001A6  0A66               	xorlw	102	; case 102
  3190  0001A8  B4D8               	btfsc	status,2,c
  3191  0001AA  D7EB               	goto	l5167
  3192  0001AC  D3A3               	goto	l5341
  3193  0001AE                     l5173:
  3194                           
  3195                           ; BSR set to: 1
  3196                           ;doprnt.c: 825: if(flag & (0x700)) {
  3197  0001AE  0E07               	movlw	7
  3198  0001B0  0101               	movlb	1	; () banked
  3199  0001B2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3200  0001B4  B4D8               	btfsc	status,2,c
  3201  0001B6  D346               	goto	l5321
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;doprnt.c: 827: if(flag & 0x1000)
  3205  0001B8  0101               	movlb	1	; () banked
  3206  0001BA  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3207  0001BC  D005               	goto	l5179
  3208                           
  3209                           ; BSR set to: 1
  3210                           ;doprnt.c: 829: prec = 6;
  3211  0001BE  0E00               	movlw	0
  3212  0001C0  0101               	movlb	1	; () banked
  3213  0001C2  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3214  0001C4  0E06               	movlw	6
  3215  0001C6  6F12               	movwf	sprintf@prec& (0+255),b
  3216  0001C8                     l5179:
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3220  0001C8  C104  FFD9         	movff	sprintf@ap,fsr2l
  3221  0001CC  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3222  0001D0  CFDE F114          	movff	postinc2,sprintf@fval
  3223  0001D4  CFDE F115          	movff	postinc2,sprintf@fval+1
  3224  0001D8  CFDE F116          	movff	postinc2,sprintf@fval+2
  3225  0001DC  CFDE F117          	movff	postinc2,sprintf@fval+3
  3226                           
  3227                           ; BSR set to: 1
  3228  0001E0  0E04               	movlw	4
  3229  0001E2  0101               	movlb	1	; () banked
  3230  0001E4  2704               	addwf	sprintf@ap& (0+255),f,b
  3231  0001E6  0E00               	movlw	0
  3232  0001E8  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;doprnt.c: 831: if(fval < 0.0) {
  3236  0001EA  0101               	movlb	1	; () banked
  3237  0001EC  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3238  0001EE  D015               	goto	l5189
  3239                           
  3240                           ; BSR set to: 1
  3241                           ;doprnt.c: 832: fval = -fval;
  3242  0001F0  C114  F03C         	movff	sprintf@fval,___flneg@f1
  3243  0001F4  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  3244  0001F8  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  3245  0001FC  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  3246  000200  EC77  F017         	call	___flneg	;wreg free
  3247  000204  C03C  F114         	movff	?___flneg,sprintf@fval
  3248  000208  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  3249  00020C  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  3250  000210  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  3251                           
  3252                           ;doprnt.c: 833: flag |= 0x03;
  3253  000214  0E03               	movlw	3
  3254  000216  0101               	movlb	1	; () banked
  3255  000218  1306               	iorwf	sprintf@flag& (0+255),f,b
  3256  00021A                     l5189:
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;doprnt.c: 834: }
  3260                           ;doprnt.c: 835: exp = 0;
  3261  00021A  0E00               	movlw	0
  3262  00021C  0101               	movlb	1	; () banked
  3263  00021E  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3264  000220  0E00               	movlw	0
  3265  000222  6F0C               	movwf	sprintf@exp& (0+255),b
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;doprnt.c: 836: if( fval!=0) {
  3269  000224  0101               	movlb	1	; () banked
  3270  000226  5114               	movf	sprintf@fval& (0+255),w,b
  3271  000228  0101               	movlb	1	; () banked
  3272  00022A  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3273  00022C  0101               	movlb	1	; () banked
  3274  00022E  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3275  000230  0101               	movlb	1	; () banked
  3276  000232  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3277  000234  B4D8               	btfsc	status,2,c
  3278  000236  D08D               	goto	l5217
  3279                           
  3280                           ; BSR set to: 1
  3281                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3282  000238  0101               	movlb	1	; () banked
  3283  00023A  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3284  00023C  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3285  00023E  0F82               	addlw	130
  3286  000240  0101               	movlb	1	; () banked
  3287  000242  6F0C               	movwf	sprintf@exp& (0+255),b
  3288  000244  0101               	movlb	1	; () banked
  3289  000246  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3290  000248  0EFF               	movlw	255
  3291  00024A  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;doprnt.c: 838: exp--;
  3295  00024C  0101               	movlb	1	; () banked
  3296  00024E  070C               	decf	sprintf@exp& (0+255),f,b
  3297  000250  A0D8               	btfss	status,0,c
  3298  000252  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;doprnt.c: 839: exp *= 3;
  3302  000254  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  3303  000258  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3304  00025C  0E00               	movlw	0
  3305  00025E  6E3F               	movwf	___wmul@multiplicand+1,c
  3306  000260  0E03               	movlw	3
  3307  000262  6E3E               	movwf	___wmul@multiplicand,c
  3308  000264  ECF6  F017         	call	___wmul	;wreg free
  3309  000268  C03C  F10C         	movff	?___wmul,sprintf@exp
  3310  00026C  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  3311                           
  3312                           ;doprnt.c: 840: exp /= 10;
  3313  000270  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  3314  000274  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3315  000278  0E00               	movlw	0
  3316  00027A  0100               	movlb	0	; () banked
  3317  00027C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3318  00027E  0E0A               	movlw	10
  3319  000280  6F72               	movwf	___awdiv@divisor& (0+255),b
  3320  000282  EC53  F014         	call	___awdiv	;wreg free
  3321  000286  C070  F10C         	movff	?___awdiv,sprintf@exp
  3322  00028A  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3323                           
  3324                           ;doprnt.c: 841: if(exp < 0)
  3325  00028E  0101               	movlb	1	; () banked
  3326  000290  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3327  000292  D004               	goto	l5205
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;doprnt.c: 842: exp--;
  3331  000294  0101               	movlb	1	; () banked
  3332  000296  070C               	decf	sprintf@exp& (0+255),f,b
  3333  000298  A0D8               	btfss	status,0,c
  3334  00029A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3335  00029C                     l5205:
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3339  00029C  0101               	movlb	1	; () banked
  3340  00029E  510C               	movf	sprintf@exp& (0+255),w,b
  3341  0002A0  0800               	sublw	0
  3342  0002A2  EC37  F009         	call	_scale
  3343  0002A6  C097  F10E         	movff	?_scale,sprintf@tmpval
  3344  0002AA  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3345  0002AE  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3346  0002B2  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3347                           
  3348                           ;doprnt.c: 847: tmpval.integ *= fval;
  3349  0002B6  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  3350  0002BA  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3351  0002BE  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3352  0002C2  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3353  0002C6  C114  F082         	movff	sprintf@fval,___flmul@a
  3354  0002CA  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3355  0002CE  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3356  0002D2  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3357  0002D6  ECE4  F006         	call	___flmul	;wreg free
  3358  0002DA  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  3359  0002DE  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3360  0002E2  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3361  0002E6  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3362                           
  3363                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3364  0002EA  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3365  0002EE  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3366  0002F2  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3367  0002F6  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3368  0002FA  0E00               	movlw	0
  3369  0002FC  0100               	movlb	0	; () banked
  3370  0002FE  6F74               	movwf	___flge@ff2& (0+255),b
  3371  000300  0E00               	movlw	0
  3372  000302  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3373  000304  0E80               	movlw	128
  3374  000306  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3375  000308  0E3F               	movlw	63
  3376  00030A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3377  00030C  ECAF  F011         	call	___flge	;wreg free
  3378  000310  0100               	movlb	0	; () banked
  3379  000312  B0D8               	btfsc	status,0,c
  3380  000314  D005               	goto	l5213
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;doprnt.c: 849: exp--;
  3384  000316  0101               	movlb	1	; () banked
  3385  000318  070C               	decf	sprintf@exp& (0+255),f,b
  3386  00031A  A0D8               	btfss	status,0,c
  3387  00031C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3388  00031E  D019               	goto	l5217
  3389  000320                     l5213:
  3390                           
  3391                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3392  000320  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3393  000324  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3394  000328  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3395  00032C  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3396  000330  0E00               	movlw	0
  3397  000332  0100               	movlb	0	; () banked
  3398  000334  6F74               	movwf	___flge@ff2& (0+255),b
  3399  000336  0E00               	movlw	0
  3400  000338  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3401  00033A  0E20               	movlw	32
  3402  00033C  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3403  00033E  0E41               	movlw	65
  3404  000340  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3405  000342  ECAF  F011         	call	___flge	;wreg free
  3406  000346  0100               	movlb	0	; () banked
  3407  000348  A0D8               	btfss	status,0,c
  3408  00034A  D003               	goto	l5217
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;doprnt.c: 851: exp++;
  3412  00034C  0101               	movlb	1	; () banked
  3413  00034E  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3414  000350  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3415  000352                     l5217:
  3416                           
  3417                           ;doprnt.c: 852: }
  3418                           ;doprnt.c: 1112: if(prec <= 12)
  3419  000352  0101               	movlb	1	; () banked
  3420  000354  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3421  000356  D008               	goto	l5219
  3422  000358  0101               	movlb	1	; () banked
  3423  00035A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3424  00035C  E123               	bnz	l5221
  3425  00035E  0E0D               	movlw	13
  3426  000360  0101               	movlb	1	; () banked
  3427  000362  5D12               	subwf	sprintf@prec& (0+255),w,b
  3428  000364  B0D8               	btfsc	status,0,c
  3429  000366  D01E               	goto	l5221
  3430  000368                     l5219:
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;doprnt.c: 1113: fval += fround(prec);
  3434  000368  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3435  00036C  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3436  000370  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3437  000374  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3438  000378  0101               	movlb	1	; () banked
  3439  00037A  5112               	movf	sprintf@prec& (0+255),w,b
  3440  00037C  EC3E  F00D         	call	_fround
  3441  000380  C097  F0A8         	movff	?_fround,___fladd@a
  3442  000384  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3443  000388  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3444  00038C  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3445  000390  EC90  F004         	call	___fladd	;wreg free
  3446  000394  C0A4  F114         	movff	?___fladd,sprintf@fval
  3447  000398  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3448  00039C  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3449  0003A0  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3450  0003A4                     l5221:
  3451                           
  3452                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3453  0003A4  0101               	movlb	1	; () banked
  3454  0003A6  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3455  0003A8  D008               	goto	l5223
  3456  0003AA  0101               	movlb	1	; () banked
  3457  0003AC  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3458  0003AE  E12E               	bnz	l5229
  3459  0003B0  0E0A               	movlw	10
  3460  0003B2  0101               	movlb	1	; () banked
  3461  0003B4  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3462  0003B6  B0D8               	btfsc	status,0,c
  3463  0003B8  D029               	goto	l5229
  3464  0003BA                     l5223:
  3465                           
  3466                           ; BSR set to: 1
  3467  0003BA  0101               	movlb	1	; () banked
  3468  0003BC  5114               	movf	sprintf@fval& (0+255),w,b
  3469  0003BE  0101               	movlb	1	; () banked
  3470  0003C0  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3471  0003C2  0101               	movlb	1	; () banked
  3472  0003C4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3473  0003C6  0101               	movlb	1	; () banked
  3474  0003C8  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3475  0003CA  B4D8               	btfsc	status,2,c
  3476  0003CC  D06D               	goto	l5243
  3477                           
  3478                           ; BSR set to: 1
  3479  0003CE  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3480  0003D2  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3481  0003D6  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3482  0003DA  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3483  0003DE  ECE8  F012         	call	___fltol	;wreg free
  3484  0003E2  0100               	movlb	0	; () banked
  3485  0003E4  51A0               	movf	?___fltol& (0+255),w,b
  3486  0003E6  0100               	movlb	0	; () banked
  3487  0003E8  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3488  0003EA  0100               	movlb	0	; () banked
  3489  0003EC  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3490  0003EE  0100               	movlb	0	; () banked
  3491  0003F0  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3492  0003F2  A4D8               	btfss	status,2,c
  3493  0003F4  D059               	goto	l5243
  3494                           
  3495                           ; BSR set to: 0
  3496  0003F6  0101               	movlb	1	; () banked
  3497  0003F8  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3498  0003FA  D056               	goto	l5243
  3499  0003FC  0101               	movlb	1	; () banked
  3500  0003FE  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3501  000400  E105               	bnz	l5229
  3502  000402  0E02               	movlw	2
  3503  000404  0101               	movlb	1	; () banked
  3504  000406  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3505  000408  A0D8               	btfss	status,0,c
  3506  00040A  D04E               	goto	l5243
  3507  00040C                     l5229:
  3508                           
  3509                           ; BSR set to: 1
  3510                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3511  00040C  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3512  000410  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3513  000414  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3514  000418  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3515  00041C  0E5F               	movlw	95
  3516  00041E  0100               	movlb	0	; () banked
  3517  000420  6F74               	movwf	___flge@ff2& (0+255),b
  3518  000422  0E70               	movlw	112
  3519  000424  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3520  000426  0E89               	movlw	137
  3521  000428  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3522  00042A  0E40               	movlw	64
  3523  00042C  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3524  00042E  ECAF  F011         	call	___flge	;wreg free
  3525  000432  0100               	movlb	0	; () banked
  3526  000434  B0D8               	btfsc	status,0,c
  3527  000436  D003               	goto	l5233
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3531  000438  0101               	movlb	1	; () banked
  3532  00043A  0EF7               	movlw	247
  3533  00043C  D002               	goto	L2
  3534  00043E                     l5233:
  3535                           
  3536                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3537  00043E  0101               	movlb	1	; () banked
  3538  000440  0EF8               	movlw	248
  3539  000442                     L2:
  3540  000442  270C               	addwf	sprintf@exp& (0+255),f,b
  3541  000444  0EFF               	movlw	255
  3542  000446  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3546                           
  3547                           ; BSR set to: 1
  3548  000448  0101               	movlb	1	; () banked
  3549  00044A  510C               	movf	sprintf@exp& (0+255),w,b
  3550  00044C  EC37  F009         	call	_scale
  3551  000450  C097  F10E         	movff	?_scale,sprintf@tmpval
  3552  000454  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3553  000458  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3554  00045C  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3555  000460  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3556  000464  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3557  000468  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3558  00046C  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3559  000470  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3560  000474  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3561  000478  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3562  00047C  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3563  000480  EC00  F011         	call	__div_to_l_	;wreg free
  3564  000484  C070  F108         	movff	?__div_to_l_,sprintf@val
  3565  000488  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3566  00048C  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3567  000490  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3568                           
  3569                           ;doprnt.c: 1129: fval = 0.0;
  3570  000494  0E00               	movlw	0
  3571  000496  0101               	movlb	1	; () banked
  3572  000498  6F14               	movwf	sprintf@fval& (0+255),b
  3573  00049A  0E00               	movlw	0
  3574  00049C  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3575  00049E  0E00               	movlw	0
  3576  0004A0  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3577  0004A2  0E00               	movlw	0
  3578  0004A4  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3579                           
  3580                           ;doprnt.c: 1130: } else {
  3581  0004A6  D03C               	goto	l5247
  3582  0004A8                     l5243:
  3583                           
  3584                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3585  0004A8  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3586  0004AC  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3587  0004B0  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3588  0004B4  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3589  0004B8  ECE8  F012         	call	___fltol	;wreg free
  3590  0004BC  C0A0  F108         	movff	?___fltol,sprintf@val
  3591  0004C0  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3592  0004C4  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3593  0004C8  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3594                           
  3595                           ;doprnt.c: 1132: fval -= (double)val;
  3596  0004CC  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3597  0004D0  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3598  0004D4  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3599  0004D8  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3600  0004DC  C108  F070         	movff	sprintf@val,___xxtofl@val
  3601  0004E0  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3602  0004E4  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3603  0004E8  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3604  0004EC  0E00               	movlw	0
  3605  0004EE  EC99  F00E         	call	___xxtofl
  3606  0004F2  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3607  0004F6  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3608  0004FA  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3609  0004FE  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3610  000502  EC8E  F016         	call	___flsub	;wreg free
  3611  000506  C0B8  F114         	movff	?___flsub,sprintf@fval
  3612  00050A  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3613  00050E  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3614  000512  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3615                           
  3616                           ;doprnt.c: 1133: exp = 0;
  3617  000516  0E00               	movlw	0
  3618  000518  0101               	movlb	1	; () banked
  3619  00051A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3620  00051C  0E00               	movlw	0
  3621  00051E  6F0C               	movwf	sprintf@exp& (0+255),b
  3622  000520                     l5247:
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;doprnt.c: 1134: }
  3626                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3627  000520  0E01               	movlw	1
  3628  000522  0101               	movlb	1	; () banked
  3629  000524  6F18               	movwf	sprintf@c& (0+255),b
  3630  000526                     l5249:
  3631                           
  3632                           ; BSR set to: 1
  3633  000526  0E0A               	movlw	10
  3634  000528  0101               	movlb	1	; () banked
  3635  00052A  1918               	xorwf	sprintf@c& (0+255),w,b
  3636  00052C  B4D8               	btfsc	status,2,c
  3637  00052E  D01E               	goto	l5261
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;doprnt.c: 1137: if(val < dpowers[c])
  3641                           
  3642                           ; BSR set to: 1
  3643                           
  3644                           ; BSR set to: 1
  3645  000530  0101               	movlb	1	; () banked
  3646  000532  5118               	movf	sprintf@c& (0+255),w,b
  3647  000534  0D04               	mullw	4
  3648  000536  0E53               	movlw	low _dpowers
  3649  000538  24F3               	addwf	prodl,w,c
  3650  00053A  6EF6               	movwf	tblptrl,c
  3651  00053C  0E3F               	movlw	high _dpowers
  3652  00053E  20F4               	addwfc	prodh,w,c
  3653  000540  6EF7               	movwf	tblptrh,c
  3654  000542                     	if	0	;There are less than 3 active tblptr bytes
  3655  000542                     	endif
  3656  000542  0009               	tblrd		*+
  3657  000544  50F5               	movf	tablat,w,c
  3658  000546  0101               	movlb	1	; () banked
  3659  000548  5D08               	subwf	sprintf@val& (0+255),w,b
  3660  00054A  0009               	tblrd		*+
  3661  00054C  50F5               	movf	tablat,w,c
  3662  00054E  0101               	movlb	1	; () banked
  3663  000550  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3664  000552  0009               	tblrd		*+
  3665  000554  50F5               	movf	tablat,w,c
  3666  000556  0101               	movlb	1	; () banked
  3667  000558  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3668  00055A  0009               	tblrd		*+
  3669  00055C  50F5               	movf	tablat,w,c
  3670  00055E  0101               	movlb	1	; () banked
  3671  000560  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3672  000562  A0D8               	btfss	status,0,c
  3673  000564  D003               	goto	l5261
  3674                           
  3675                           ; BSR set to: 1
  3676                           
  3677                           ; BSR set to: 1
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;doprnt.c: 1138: break;
  3681  000566  0101               	movlb	1	; () banked
  3682  000568  2B18               	incf	sprintf@c& (0+255),f,b
  3683  00056A  D7DD               	goto	l5249
  3684  00056C                     l5261:
  3685                           
  3686                           ; BSR set to: 1
  3687                           ;doprnt.c: 1175: {
  3688                           ;doprnt.c: 1188: if(flag & 0x03)
  3689  00056C  0E03               	movlw	3
  3690  00056E  0101               	movlb	1	; () banked
  3691  000570  1506               	andwf	sprintf@flag& (0+255),w,b
  3692  000572  0100               	movlb	0	; () banked
  3693  000574  6FC8               	movwf	??_sprintf& (0+255),b
  3694  000576  0E00               	movlw	0
  3695  000578  0101               	movlb	1	; () banked
  3696  00057A  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3697  00057C  0100               	movlb	0	; () banked
  3698  00057E  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3699  000580  0100               	movlb	0	; () banked
  3700  000582  51C8               	movf	??_sprintf& (0+255),w,b
  3701  000584  0100               	movlb	0	; () banked
  3702  000586  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3703  000588  B4D8               	btfsc	status,2,c
  3704  00058A  D055               	goto	l5275
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3708  00058C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3709  000590  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3710  000594  0E2D               	movlw	45
  3711  000596  D04D               	goto	L3
  3712  000598                     l5265:
  3713                           
  3714                           ; BSR set to: 0
  3715  000598  0100               	movlb	0	; () banked
  3716  00059A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3717  00059C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;doprnt.c: 1195: }
  3721                           ;doprnt.c: 1196: while(c--) {
  3722  00059E  D04B               	goto	l5275
  3723  0005A0                     l5267:
  3724                           
  3725                           ;doprnt.c: 1200: {
  3726                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3727  0005A0  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3728  0005A4  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3729  0005A8  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3730  0005AC  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3731  0005B0  0101               	movlb	1	; () banked
  3732  0005B2  5118               	movf	sprintf@c& (0+255),w,b
  3733  0005B4  0D04               	mullw	4
  3734  0005B6  0E53               	movlw	low _dpowers
  3735  0005B8  24F3               	addwf	prodl,w,c
  3736  0005BA  6EF6               	movwf	tblptrl,c
  3737  0005BC  0E3F               	movlw	high _dpowers
  3738  0005BE  20F4               	addwfc	prodh,w,c
  3739  0005C0  6EF7               	movwf	tblptrh,c
  3740  0005C2                     	if	0	;There are less than 3 active tblptr bytes
  3741  0005C2                     	endif
  3742  0005C2  0009               	tblrd		*+
  3743  0005C4  CFF5 F074          	movff	tablat,___lldiv@divisor
  3744  0005C8  0009               	tblrd		*+
  3745  0005CA  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3746  0005CE  0009               	tblrd		*+
  3747  0005D0  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3748  0005D4  000A               	tblrd		*-
  3749  0005D6  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3750  0005DA  EC10  F015         	call	___lldiv	;wreg free
  3751  0005DE  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3752  0005E2  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3753  0005E6  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3754  0005EA  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3755                           
  3756                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3757  0005EE  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3758  0005F2  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3759  0005F6  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3760  0005FA  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3761  0005FE  0E0A               	movlw	10
  3762  000600  0100               	movlb	0	; () banked
  3763  000602  6F74               	movwf	___llmod@divisor& (0+255),b
  3764  000604  0E00               	movlw	0
  3765  000606  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3766  000608  0E00               	movlw	0
  3767  00060A  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3768  00060C  0E00               	movlw	0
  3769  00060E  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3770  000610  ECB3  F015         	call	___llmod	;wreg free
  3771  000614  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3772  000618  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3773  00061C  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3774  000620  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3775                           
  3776                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3777  000624  0101               	movlb	1	; () banked
  3778  000626  510E               	movf	sprintf@tmpval& (0+255),w,b
  3779  000628  0F30               	addlw	48
  3780  00062A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3781  00062E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3782  000632                     L3:
  3783  000632  6EDF               	movwf	indf2,c
  3784  000634  D7B1               	goto	l5265
  3785  000636                     l5275:
  3786                           
  3787                           ; BSR set to: 0
  3788  000636  0101               	movlb	1	; () banked
  3789  000638  0718               	decf	sprintf@c& (0+255),f,b
  3790  00063A  0101               	movlb	1	; () banked
  3791  00063C  2918               	incf	sprintf@c& (0+255),w,b
  3792  00063E  B4D8               	btfsc	status,2,c
  3793  000640  D00E               	goto	l5283
  3794  000642  D7AE               	goto	l5267
  3795  000644                     l5277:
  3796                           
  3797                           ; BSR set to: 1
  3798                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3799  000644  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3800  000648  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3801  00064C  0E30               	movlw	48
  3802  00064E  6EDF               	movwf	indf2,c
  3803                           
  3804                           ; BSR set to: 1
  3805  000650  0100               	movlb	0	; () banked
  3806  000652  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3807  000654  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;doprnt.c: 1209: exp--;
  3811  000656  0101               	movlb	1	; () banked
  3812  000658  070C               	decf	sprintf@exp& (0+255),f,b
  3813  00065A  A0D8               	btfss	status,0,c
  3814  00065C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3815  00065E                     l5283:
  3816                           
  3817                           ; BSR set to: 1
  3818  00065E  0101               	movlb	1	; () banked
  3819  000660  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3820  000662  D007               	goto	l5285
  3821  000664  0101               	movlb	1	; () banked
  3822  000666  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3823  000668  E1ED               	bnz	l5277
  3824  00066A  0101               	movlb	1	; () banked
  3825  00066C  050C               	decf	sprintf@exp& (0+255),w,b
  3826  00066E  B0D8               	btfsc	status,0,c
  3827  000670  D7E9               	goto	l5277
  3828  000672                     l5285:
  3829                           
  3830                           ; BSR set to: 1
  3831                           ;doprnt.c: 1210: }
  3832                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3833  000672  0101               	movlb	1	; () banked
  3834  000674  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3835  000676  D00C               	goto	l371
  3836  000678  0101               	movlb	1	; () banked
  3837  00067A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3838  00067C  E105               	bnz	u6130
  3839  00067E  0E09               	movlw	9
  3840  000680  0101               	movlb	1	; () banked
  3841  000682  5D12               	subwf	sprintf@prec& (0+255),w,b
  3842  000684  A0D8               	btfss	status,0,c
  3843  000686  D004               	goto	l371
  3844  000688                     u6130:
  3845                           
  3846                           ; BSR set to: 1
  3847                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3848  000688  0E08               	movlw	8
  3849  00068A  0101               	movlb	1	; () banked
  3850  00068C  6F18               	movwf	sprintf@c& (0+255),b
  3851  00068E  D002               	goto	l5289
  3852  000690                     l371:
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;doprnt.c: 1213: else
  3856                           ;doprnt.c: 1214: c = prec;
  3857  000690  C112  F118         	movff	sprintf@prec,sprintf@c
  3858  000694                     l5289:
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;doprnt.c: 1215: prec -= c;
  3862  000694  0101               	movlb	1	; () banked
  3863  000696  5118               	movf	sprintf@c& (0+255),w,b
  3864  000698  0101               	movlb	1	; () banked
  3865  00069A  5F12               	subwf	sprintf@prec& (0+255),f,b
  3866  00069C  0E00               	movlw	0
  3867  00069E  0101               	movlb	1	; () banked
  3868  0006A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3869  0006A2  0EFF               	movlw	255
  3870  0006A4  0101               	movlb	1	; () banked
  3871  0006A6  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;doprnt.c: 1219: if(c)
  3875  0006A8  0101               	movlb	1	; () banked
  3876  0006AA  5118               	movf	sprintf@c& (0+255),w,b
  3877  0006AC  0101               	movlb	1	; () banked
  3878  0006AE  B4D8               	btfsc	status,2,c
  3879  0006B0  D009               	goto	l5297
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3883  0006B2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3884  0006B6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3885  0006BA  0E2E               	movlw	46
  3886  0006BC  6EDF               	movwf	indf2,c
  3887                           
  3888                           ; BSR set to: 1
  3889  0006BE  0100               	movlb	0	; () banked
  3890  0006C0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3891  0006C2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3892  0006C4                     l5297:
  3893                           
  3894                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3895  0006C4  0101               	movlb	1	; () banked
  3896  0006C6  5118               	movf	sprintf@c& (0+255),w,b
  3897  0006C8  EC37  F009         	call	_scale
  3898  0006CC  C097  F100         	movff	?_scale,_sprintf$2513
  3899  0006D0  C098  F101         	movff	?_scale+1,_sprintf$2513+1
  3900  0006D4  C099  F102         	movff	?_scale+2,_sprintf$2513+2
  3901  0006D8  C09A  F103         	movff	?_scale+3,_sprintf$2513+3
  3902                           
  3903                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3904  0006DC  C114  F082         	movff	sprintf@fval,___flmul@a
  3905  0006E0  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3906  0006E4  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3907  0006E8  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3908  0006EC  C100  F07E         	movff	_sprintf$2513,___flmul@b
  3909  0006F0  C101  F07F         	movff	_sprintf$2513+1,___flmul@b+1
  3910  0006F4  C102  F080         	movff	_sprintf$2513+2,___flmul@b+2
  3911  0006F8  C103  F081         	movff	_sprintf$2513+3,___flmul@b+3
  3912  0006FC  ECE4  F006         	call	___flmul	;wreg free
  3913  000700  C07E  F0A0         	movff	?___flmul,___fltol@f1
  3914  000704  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  3915  000708  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  3916  00070C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  3917  000710  ECE8  F012         	call	___fltol	;wreg free
  3918  000714  C0A0  F108         	movff	?___fltol,sprintf@val
  3919  000718  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3920  00071C  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3921  000720  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3922                           
  3923                           ;doprnt.c: 1228: while(c--) {
  3924  000724  D074               	goto	l5311
  3925  000726                     l5301:
  3926                           
  3927                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3928  000726  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3929  00072A  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3930  00072E  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3931  000732  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3932  000736  0101               	movlb	1	; () banked
  3933  000738  5118               	movf	sprintf@c& (0+255),w,b
  3934  00073A  0D04               	mullw	4
  3935  00073C  0E53               	movlw	low _dpowers
  3936  00073E  24F3               	addwf	prodl,w,c
  3937  000740  6EF6               	movwf	tblptrl,c
  3938  000742  0E3F               	movlw	high _dpowers
  3939  000744  20F4               	addwfc	prodh,w,c
  3940  000746  6EF7               	movwf	tblptrh,c
  3941  000748                     	if	0	;There are less than 3 active tblptr bytes
  3942  000748                     	endif
  3943  000748  0009               	tblrd		*+
  3944  00074A  CFF5 F074          	movff	tablat,___lldiv@divisor
  3945  00074E  0009               	tblrd		*+
  3946  000750  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3947  000754  0009               	tblrd		*+
  3948  000756  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3949  00075A  000A               	tblrd		*-
  3950  00075C  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3951  000760  EC10  F015         	call	___lldiv	;wreg free
  3952  000764  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3953  000768  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3954  00076C  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3955  000770  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3956                           
  3957                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3958  000774  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3959  000778  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3960  00077C  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3961  000780  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3962  000784  0E0A               	movlw	10
  3963  000786  0100               	movlb	0	; () banked
  3964  000788  6F74               	movwf	___llmod@divisor& (0+255),b
  3965  00078A  0E00               	movlw	0
  3966  00078C  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3967  00078E  0E00               	movlw	0
  3968  000790  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3969  000792  0E00               	movlw	0
  3970  000794  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3971  000796  ECB3  F015         	call	___llmod	;wreg free
  3972  00079A  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3973  00079E  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3974  0007A2  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3975  0007A6  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3976                           
  3977                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3978  0007AA  0101               	movlb	1	; () banked
  3979  0007AC  510E               	movf	sprintf@tmpval& (0+255),w,b
  3980  0007AE  0F30               	addlw	48
  3981  0007B0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3982  0007B4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3983  0007B8  6EDF               	movwf	indf2,c
  3984                           
  3985                           ; BSR set to: 1
  3986  0007BA  0100               	movlb	0	; () banked
  3987  0007BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3988  0007BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;doprnt.c: 1232: val %= dpowers[c];
  3992  0007C0  C108  F070         	movff	sprintf@val,___llmod@dividend
  3993  0007C4  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  3994  0007C8  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  3995  0007CC  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  3996  0007D0  0101               	movlb	1	; () banked
  3997  0007D2  5118               	movf	sprintf@c& (0+255),w,b
  3998  0007D4  0D04               	mullw	4
  3999  0007D6  0E53               	movlw	low _dpowers
  4000  0007D8  24F3               	addwf	prodl,w,c
  4001  0007DA  6EF6               	movwf	tblptrl,c
  4002  0007DC  0E3F               	movlw	high _dpowers
  4003  0007DE  20F4               	addwfc	prodh,w,c
  4004  0007E0  6EF7               	movwf	tblptrh,c
  4005  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  4006  0007E2                     	endif
  4007  0007E2  0009               	tblrd		*+
  4008  0007E4  CFF5 F074          	movff	tablat,___llmod@divisor
  4009  0007E8  0009               	tblrd		*+
  4010  0007EA  CFF5 F075          	movff	tablat,___llmod@divisor+1
  4011  0007EE  0009               	tblrd		*+
  4012  0007F0  CFF5 F076          	movff	tablat,___llmod@divisor+2
  4013  0007F4  000A               	tblrd		*-
  4014  0007F6  CFF5 F077          	movff	tablat,___llmod@divisor+3
  4015  0007FA  ECB3  F015         	call	___llmod	;wreg free
  4016  0007FE  C070  F108         	movff	?___llmod,sprintf@val
  4017  000802  C071  F109         	movff	?___llmod+1,sprintf@val+1
  4018  000806  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  4019  00080A  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  4020  00080E                     l5311:
  4021  00080E  0101               	movlb	1	; () banked
  4022  000810  0718               	decf	sprintf@c& (0+255),f,b
  4023  000812  0101               	movlb	1	; () banked
  4024  000814  2918               	incf	sprintf@c& (0+255),w,b
  4025  000816  B4D8               	btfsc	status,2,c
  4026  000818  D00E               	goto	l5319
  4027  00081A  D785               	goto	l5301
  4028  00081C                     l5313:
  4029                           
  4030                           ; BSR set to: 1
  4031                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4032  00081C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4033  000820  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4034  000824  0E30               	movlw	48
  4035  000826  6EDF               	movwf	indf2,c
  4036                           
  4037                           ; BSR set to: 1
  4038  000828  0100               	movlb	0	; () banked
  4039  00082A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4040  00082C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;doprnt.c: 1237: prec--;
  4044  00082E  0101               	movlb	1	; () banked
  4045  000830  0712               	decf	sprintf@prec& (0+255),f,b
  4046  000832  A0D8               	btfss	status,0,c
  4047  000834  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4048  000836                     l5319:
  4049                           
  4050                           ; BSR set to: 1
  4051  000836  0101               	movlb	1	; () banked
  4052  000838  5112               	movf	sprintf@prec& (0+255),w,b
  4053  00083A  0101               	movlb	1	; () banked
  4054  00083C  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4055  00083E  B4D8               	btfsc	status,2,c
  4056  000840  D059               	goto	l5341
  4057  000842  D7EC               	goto	l5313
  4058  000844                     l5321:
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;doprnt.c: 1246: }
  4062                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4063  000844  0101               	movlb	1	; () banked
  4064  000846  5112               	movf	sprintf@prec& (0+255),w,b
  4065  000848  0101               	movlb	1	; () banked
  4066  00084A  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4067  00084C  A4D8               	btfss	status,2,c
  4068  00084E  D00D               	goto	l5327
  4069                           
  4070                           ; BSR set to: 1
  4071  000850  0101               	movlb	1	; () banked
  4072  000852  5108               	movf	sprintf@val& (0+255),w,b
  4073  000854  0101               	movlb	1	; () banked
  4074  000856  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4075  000858  0101               	movlb	1	; () banked
  4076  00085A  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4077  00085C  0101               	movlb	1	; () banked
  4078  00085E  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4079  000860  A4D8               	btfss	status,2,c
  4080  000862  D003               	goto	l5327
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;doprnt.c: 1291: prec++;
  4084  000864  0101               	movlb	1	; () banked
  4085  000866  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4086  000868  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4087  00086A                     l5327:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;doprnt.c: 1339: if(c < prec)
  4091  00086A  0E80               	movlw	128
  4092  00086C  0101               	movlb	1	; () banked
  4093  00086E  BF18               	btfsc	sprintf@c& (0+255),7,b
  4094  000870  0E7F               	movlw	127
  4095  000872  0100               	movlb	0	; () banked
  4096  000874  6FC8               	movwf	??_sprintf& (0+255),b
  4097  000876  0101               	movlb	1	; () banked
  4098  000878  5112               	movf	sprintf@prec& (0+255),w,b
  4099  00087A  0101               	movlb	1	; () banked
  4100  00087C  5D18               	subwf	sprintf@c& (0+255),w,b
  4101  00087E  0101               	movlb	1	; () banked
  4102  000880  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4103  000882  0A80               	xorlw	128
  4104  000884  0100               	movlb	0	; () banked
  4105  000886  59C8               	subwfb	??_sprintf& (0+255),w,b
  4106  000888  B0D8               	btfsc	status,0,c
  4107  00088A  D003               	goto	l5331
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;doprnt.c: 1340: c = prec;
  4111  00088C  C112  F118         	movff	sprintf@prec,sprintf@c
  4112  000890  D018               	goto	l5335
  4113  000892                     l5331:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;doprnt.c: 1341: else if(prec < c)
  4117  000892  0101               	movlb	1	; () banked
  4118  000894  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4119  000896  0A80               	xorlw	128
  4120  000898  0100               	movlb	0	; () banked
  4121  00089A  6FC8               	movwf	??_sprintf& (0+255),b
  4122  00089C  0101               	movlb	1	; () banked
  4123  00089E  5118               	movf	sprintf@c& (0+255),w,b
  4124  0008A0  0101               	movlb	1	; () banked
  4125  0008A2  5D12               	subwf	sprintf@prec& (0+255),w,b
  4126  0008A4  0E80               	movlw	128
  4127  0008A6  0101               	movlb	1	; () banked
  4128  0008A8  BF18               	btfsc	sprintf@c& (0+255),7,b
  4129  0008AA  0E7F               	movlw	127
  4130  0008AC  0100               	movlb	0	; () banked
  4131  0008AE  59C8               	subwfb	??_sprintf& (0+255),w,b
  4132  0008B0  B0D8               	btfsc	status,0,c
  4133  0008B2  D007               	goto	l5335
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;doprnt.c: 1342: prec = c;
  4137  0008B4  0101               	movlb	1	; () banked
  4138  0008B6  5118               	movf	sprintf@c& (0+255),w,b
  4139  0008B8  0101               	movlb	1	; () banked
  4140  0008BA  6F12               	movwf	sprintf@prec& (0+255),b
  4141  0008BC  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4142  0008BE  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4143  0008C0  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4144  0008C2                     l5335:
  4145                           
  4146                           ;doprnt.c: 1422: {
  4147                           ;doprnt.c: 1438: if(flag & 0x03)
  4148  0008C2  0E03               	movlw	3
  4149  0008C4  0101               	movlb	1	; () banked
  4150  0008C6  1506               	andwf	sprintf@flag& (0+255),w,b
  4151  0008C8  0100               	movlb	0	; () banked
  4152  0008CA  6FC8               	movwf	??_sprintf& (0+255),b
  4153  0008CC  0E00               	movlw	0
  4154  0008CE  0101               	movlb	1	; () banked
  4155  0008D0  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4156  0008D2  0100               	movlb	0	; () banked
  4157  0008D4  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  4158  0008D6  0100               	movlb	0	; () banked
  4159  0008D8  51C8               	movf	??_sprintf& (0+255),w,b
  4160  0008DA  0100               	movlb	0	; () banked
  4161  0008DC  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  4162  0008DE  B4D8               	btfsc	status,2,c
  4163  0008E0  D009               	goto	l5341
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4167  0008E2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4168  0008E6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4169  0008EA  0E2D               	movlw	45
  4170  0008EC  6EDF               	movwf	indf2,c
  4171  0008EE                     l5339:
  4172                           
  4173                           ; BSR set to: 0
  4174  0008EE  0100               	movlb	0	; () banked
  4175  0008F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4176  0008F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4177  0008F4                     l5341:
  4178  0008F4  C0C2  FFF6         	movff	sprintf@f,tblptrl
  4179  0008F8  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  4180  0008FC  0100               	movlb	0	; () banked
  4181  0008FE  4BC2               	infsnz	sprintf@f& (0+255),f,b
  4182  000900  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  4183  000902                     	if	0	;tblptru may be non-zero
  4184  000902                     	endif
  4185  000902                     	if	0	;tblptru may be non-zero
  4186  000902                     	endif
  4187  000902  0008               	tblrd		*
  4188  000904  CFF5 F118          	movff	tablat,sprintf@c
  4189  000908  0101               	movlb	1	; () banked
  4190  00090A  5118               	movf	sprintf@c& (0+255),w,b
  4191  00090C  A4D8               	btfss	status,2,c
  4192  00090E  EF6A  F000         	goto	l5143
  4193  000912                     l5343:
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;doprnt.c: 1538: *sp = 0;
  4197  000912  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4198  000916  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4199  00091A  0E00               	movlw	0
  4200  00091C  6EDF               	movwf	indf2,c
  4201  00091E  0012               	return	
  4202  000920                     __end_of_sprintf:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           prodh	equ	0xFF4
  4209                           prodl	equ	0xFF3
  4210                           intcon	equ	0xFF2
  4211                           postinc0	equ	0xFEE
  4212                           wreg	equ	0xFE8
  4213                           indf2	equ	0xFDF
  4214                           postinc2	equ	0xFDE
  4215                           fsr2h	equ	0xFDA
  4216                           fsr2l	equ	0xFD9
  4217                           status	equ	0xFD8
  4218                           
  4219 ;; *************** function _scale *****************
  4220 ;; Defined at:
  4221 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  scl             1    wreg     char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  scl             1   63[BANK0 ] char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  4   55[BANK0 ] char 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4235 ;;      Params:         0       4       0       0
  4236 ;;      Locals:         0       5       0       0
  4237 ;;      Temps:          0       0       0       0
  4238 ;;      Totals:         0       9       0       0
  4239 ;;Total ram usage:        9 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    5
  4242 ;; This function calls:
  4243 ;;		___awdiv
  4244 ;;		___awmod
  4245 ;;		___flmul
  4246 ;; This function is called by:
  4247 ;;		_sprintf
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text13
  4252  00126E                     __ptext13:
  4253                           	opt stack 0
  4254  00126E                     _scale:
  4255                           	opt stack 23
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;incstack = 0
  4259                           ;scale@scl stored from wreg
  4260  00126E  0100               	movlb	0	; () banked
  4261  001270  6F9F               	movwf	scale@scl& (0+255),b
  4262                           
  4263                           ;doprnt.c: 428: if(scl < 0) {
  4264  001272  0100               	movlb	0	; () banked
  4265  001274  AF9F               	btfss	scale@scl& (0+255),7,b
  4266  001276  D125               	goto	l4757
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;doprnt.c: 429: scl = -scl;
  4270  001278  0100               	movlb	0	; () banked
  4271  00127A  6D9F               	negf	scale@scl& (0+255),b
  4272                           
  4273                           ;doprnt.c: 430: if(scl>=110)
  4274  00127C  0100               	movlb	0	; () banked
  4275  00127E  519F               	movf	scale@scl& (0+255),w,b
  4276  001280  0A80               	xorlw	128
  4277  001282  0F12               	addlw	-238
  4278  001284  A0D8               	btfss	status,0,c
  4279  001286  D0AA               	goto	l4747
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4283  001288  0E00               	movlw	0
  4284  00128A  0100               	movlb	0	; () banked
  4285  00128C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4286  00128E  0E0A               	movlw	10
  4287  001290  6F72               	movwf	___awdiv@divisor& (0+255),b
  4288  001292  0E00               	movlw	0
  4289  001294  6E3F               	movwf	___awmod@divisor+1,c
  4290  001296  0E64               	movlw	100
  4291  001298  6E3E               	movwf	___awmod@divisor,c
  4292  00129A  0100               	movlb	0	; () banked
  4293  00129C  519F               	movf	scale@scl& (0+255),w,b
  4294  00129E  6E3C               	movwf	___awmod@dividend,c
  4295  0012A0  6A3D               	clrf	___awmod@dividend+1,c
  4296  0012A2  BE3C               	btfsc	___awmod@dividend,7,c
  4297  0012A4  063D               	decf	___awmod@dividend+1,f,c
  4298  0012A6  ECFD  F015         	call	___awmod	;wreg free
  4299  0012AA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4300  0012AE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4301  0012B2  EC53  F014         	call	___awdiv	;wreg free
  4302  0012B6  0100               	movlb	0	; () banked
  4303  0012B8  90D8               	bcf	status,0,c
  4304  0012BA  3770               	rlcf	?___awdiv& (0+255),f,b
  4305  0012BC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4306  0012BE  0100               	movlb	0	; () banked
  4307  0012C0  90D8               	bcf	status,0,c
  4308  0012C2  3770               	rlcf	?___awdiv& (0+255),f,b
  4309  0012C4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4310  0012C6  0E24               	movlw	36
  4311  0012C8  0100               	movlb	0	; () banked
  4312  0012CA  2770               	addwf	?___awdiv& (0+255),f,b
  4313  0012CC  0E00               	movlw	0
  4314  0012CE  0100               	movlb	0	; () banked
  4315  0012D0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4316  0012D2  0EEB               	movlw	low __npowers_
  4317  0012D4  0100               	movlb	0	; () banked
  4318  0012D6  2570               	addwf	?___awdiv& (0+255),w,b
  4319  0012D8  6EF6               	movwf	tblptrl,c
  4320  0012DA  0E3E               	movlw	high __npowers_
  4321  0012DC  0100               	movlb	0	; () banked
  4322  0012DE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4323  0012E0  6EF7               	movwf	tblptrh,c
  4324  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4325  0012E2                     	endif
  4326  0012E2  0009               	tblrd		*+
  4327  0012E4  CFF5 F082          	movff	tablat,___flmul@a
  4328  0012E8  0009               	tblrd		*+
  4329  0012EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4330  0012EE  0009               	tblrd		*+
  4331  0012F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4332  0012F4  000A               	tblrd		*-
  4333  0012F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4334  0012FA  0E00               	movlw	0
  4335  0012FC  0100               	movlb	0	; () banked
  4336  0012FE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4337  001300  0E64               	movlw	100
  4338  001302  6F72               	movwf	___awdiv@divisor& (0+255),b
  4339  001304  0100               	movlb	0	; () banked
  4340  001306  519F               	movf	scale@scl& (0+255),w,b
  4341  001308  0100               	movlb	0	; () banked
  4342  00130A  6F70               	movwf	___awdiv@dividend& (0+255),b
  4343  00130C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4344  00130E  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4345  001310  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4346  001312  EC53  F014         	call	___awdiv	;wreg free
  4347  001316  0100               	movlb	0	; () banked
  4348  001318  90D8               	bcf	status,0,c
  4349  00131A  3770               	rlcf	?___awdiv& (0+255),f,b
  4350  00131C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4351  00131E  0100               	movlb	0	; () banked
  4352  001320  90D8               	bcf	status,0,c
  4353  001322  3770               	rlcf	?___awdiv& (0+255),f,b
  4354  001324  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4355  001326  0E48               	movlw	72
  4356  001328  0100               	movlb	0	; () banked
  4357  00132A  2770               	addwf	?___awdiv& (0+255),f,b
  4358  00132C  0E00               	movlw	0
  4359  00132E  0100               	movlb	0	; () banked
  4360  001330  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4361  001332  0EEB               	movlw	low __npowers_
  4362  001334  0100               	movlb	0	; () banked
  4363  001336  2570               	addwf	?___awdiv& (0+255),w,b
  4364  001338  6EF6               	movwf	tblptrl,c
  4365  00133A  0E3E               	movlw	high __npowers_
  4366  00133C  0100               	movlb	0	; () banked
  4367  00133E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4368  001340  6EF7               	movwf	tblptrh,c
  4369  001342                     	if	0	;There are less than 3 active tblptr bytes
  4370  001342                     	endif
  4371  001342  0009               	tblrd		*+
  4372  001344  CFF5 F07E          	movff	tablat,___flmul@b
  4373  001348  0009               	tblrd		*+
  4374  00134A  CFF5 F07F          	movff	tablat,___flmul@b+1
  4375  00134E  0009               	tblrd		*+
  4376  001350  CFF5 F080          	movff	tablat,___flmul@b+2
  4377  001354  000A               	tblrd		*-
  4378  001356  CFF5 F081          	movff	tablat,___flmul@b+3
  4379  00135A  ECE4  F006         	call	___flmul	;wreg free
  4380  00135E  C07E  F09B         	movff	?___flmul,_scale$2512
  4381  001362  C07F  F09C         	movff	?___flmul+1,_scale$2512+1
  4382  001366  C080  F09D         	movff	?___flmul+2,_scale$2512+2
  4383  00136A  C081  F09E         	movff	?___flmul+3,_scale$2512+3
  4384                           
  4385                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4386  00136E  C09B  F07E         	movff	_scale$2512,___flmul@b
  4387  001372  C09C  F07F         	movff	_scale$2512+1,___flmul@b+1
  4388  001376  C09D  F080         	movff	_scale$2512+2,___flmul@b+2
  4389  00137A  C09E  F081         	movff	_scale$2512+3,___flmul@b+3
  4390  00137E  0E00               	movlw	0
  4391  001380  6E3F               	movwf	___awmod@divisor+1,c
  4392  001382  0E0A               	movlw	10
  4393  001384  6E3E               	movwf	___awmod@divisor,c
  4394  001386  0100               	movlb	0	; () banked
  4395  001388  519F               	movf	scale@scl& (0+255),w,b
  4396  00138A  6E3C               	movwf	___awmod@dividend,c
  4397  00138C  6A3D               	clrf	___awmod@dividend+1,c
  4398  00138E  BE3C               	btfsc	___awmod@dividend,7,c
  4399  001390  063D               	decf	___awmod@dividend+1,f,c
  4400  001392  ECFD  F015         	call	___awmod	;wreg free
  4401  001396  90D8               	bcf	status,0,c
  4402  001398  363C               	rlcf	?___awmod,f,c
  4403  00139A  363D               	rlcf	?___awmod+1,f,c
  4404  00139C  90D8               	bcf	status,0,c
  4405  00139E  363C               	rlcf	?___awmod,f,c
  4406  0013A0  363D               	rlcf	?___awmod+1,f,c
  4407  0013A2  0EEB               	movlw	low __npowers_
  4408  0013A4  243C               	addwf	?___awmod,w,c
  4409  0013A6  6EF6               	movwf	tblptrl,c
  4410  0013A8  0E3E               	movlw	high __npowers_
  4411  0013AA  203D               	addwfc	?___awmod+1,w,c
  4412  0013AC  6EF7               	movwf	tblptrh,c
  4413  0013AE                     	if	0	;There are less than 3 active tblptr bytes
  4414  0013AE                     	endif
  4415  0013AE  0009               	tblrd		*+
  4416  0013B0  CFF5 F082          	movff	tablat,___flmul@a
  4417  0013B4  0009               	tblrd		*+
  4418  0013B6  CFF5 F083          	movff	tablat,___flmul@a+1
  4419  0013BA  0009               	tblrd		*+
  4420  0013BC  CFF5 F084          	movff	tablat,___flmul@a+2
  4421  0013C0  000A               	tblrd		*-
  4422  0013C2  CFF5 F085          	movff	tablat,___flmul@a+3
  4423  0013C6  ECE4  F006         	call	___flmul	;wreg free
  4424  0013CA  C07E  F097         	movff	?___flmul,?_scale
  4425  0013CE  C07F  F098         	movff	?___flmul+1,?_scale+1
  4426  0013D2  C080  F099         	movff	?___flmul+2,?_scale+2
  4427  0013D6  C081  F09A         	movff	?___flmul+3,?_scale+3
  4428  0013DA  0012               	return	
  4429  0013DC                     l4747:
  4430                           
  4431                           ;doprnt.c: 432: else if(scl > 10)
  4432  0013DC  0100               	movlb	0	; () banked
  4433  0013DE  519F               	movf	scale@scl& (0+255),w,b
  4434  0013E0  0A80               	xorlw	128
  4435  0013E2  0F75               	addlw	-139
  4436  0013E4  A0D8               	btfss	status,0,c
  4437  0013E6  D057               	goto	l4753
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4441  0013E8  0E00               	movlw	0
  4442  0013EA  0100               	movlb	0	; () banked
  4443  0013EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4444  0013EE  0E0A               	movlw	10
  4445  0013F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4446  0013F2  0100               	movlb	0	; () banked
  4447  0013F4  519F               	movf	scale@scl& (0+255),w,b
  4448  0013F6  0100               	movlb	0	; () banked
  4449  0013F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4450  0013FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4451  0013FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4452  0013FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4453  001400  EC53  F014         	call	___awdiv	;wreg free
  4454  001404  0100               	movlb	0	; () banked
  4455  001406  90D8               	bcf	status,0,c
  4456  001408  3770               	rlcf	?___awdiv& (0+255),f,b
  4457  00140A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4458  00140C  0100               	movlb	0	; () banked
  4459  00140E  90D8               	bcf	status,0,c
  4460  001410  3770               	rlcf	?___awdiv& (0+255),f,b
  4461  001412  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4462  001414  0E24               	movlw	36
  4463  001416  0100               	movlb	0	; () banked
  4464  001418  2770               	addwf	?___awdiv& (0+255),f,b
  4465  00141A  0E00               	movlw	0
  4466  00141C  0100               	movlb	0	; () banked
  4467  00141E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4468  001420  0EEB               	movlw	low __npowers_
  4469  001422  0100               	movlb	0	; () banked
  4470  001424  2570               	addwf	?___awdiv& (0+255),w,b
  4471  001426  6EF6               	movwf	tblptrl,c
  4472  001428  0E3E               	movlw	high __npowers_
  4473  00142A  0100               	movlb	0	; () banked
  4474  00142C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4475  00142E  6EF7               	movwf	tblptrh,c
  4476  001430                     	if	0	;There are less than 3 active tblptr bytes
  4477  001430                     	endif
  4478  001430  0009               	tblrd		*+
  4479  001432  CFF5 F07E          	movff	tablat,___flmul@b
  4480  001436  0009               	tblrd		*+
  4481  001438  CFF5 F07F          	movff	tablat,___flmul@b+1
  4482  00143C  0009               	tblrd		*+
  4483  00143E  CFF5 F080          	movff	tablat,___flmul@b+2
  4484  001442  000A               	tblrd		*-
  4485  001444  CFF5 F081          	movff	tablat,___flmul@b+3
  4486  001448  0E00               	movlw	0
  4487  00144A  6E3F               	movwf	___awmod@divisor+1,c
  4488  00144C  0E0A               	movlw	10
  4489  00144E  6E3E               	movwf	___awmod@divisor,c
  4490  001450  0100               	movlb	0	; () banked
  4491  001452  519F               	movf	scale@scl& (0+255),w,b
  4492  001454  6E3C               	movwf	___awmod@dividend,c
  4493  001456  6A3D               	clrf	___awmod@dividend+1,c
  4494  001458  BE3C               	btfsc	___awmod@dividend,7,c
  4495  00145A  063D               	decf	___awmod@dividend+1,f,c
  4496  00145C  ECFD  F015         	call	___awmod	;wreg free
  4497  001460  90D8               	bcf	status,0,c
  4498  001462  363C               	rlcf	?___awmod,f,c
  4499  001464  363D               	rlcf	?___awmod+1,f,c
  4500  001466  90D8               	bcf	status,0,c
  4501  001468  363C               	rlcf	?___awmod,f,c
  4502  00146A  363D               	rlcf	?___awmod+1,f,c
  4503  00146C  0EEB               	movlw	low __npowers_
  4504  00146E  243C               	addwf	?___awmod,w,c
  4505  001470  6EF6               	movwf	tblptrl,c
  4506  001472  0E3E               	movlw	high __npowers_
  4507  001474  203D               	addwfc	?___awmod+1,w,c
  4508  001476  6EF7               	movwf	tblptrh,c
  4509  001478                     	if	0	;There are less than 3 active tblptr bytes
  4510  001478                     	endif
  4511  001478  0009               	tblrd		*+
  4512  00147A  CFF5 F082          	movff	tablat,___flmul@a
  4513  00147E  0009               	tblrd		*+
  4514  001480  CFF5 F083          	movff	tablat,___flmul@a+1
  4515  001484  0009               	tblrd		*+
  4516  001486  CFF5 F084          	movff	tablat,___flmul@a+2
  4517  00148A  000A               	tblrd		*-
  4518  00148C  CFF5 F085          	movff	tablat,___flmul@a+3
  4519  001490  ECE4  F006         	call	___flmul	;wreg free
  4520  001494  D79A               	goto	L4
  4521  001496                     l4753:
  4522                           
  4523                           ;doprnt.c: 434: return _npowers_[scl];
  4524  001496  0100               	movlb	0	; () banked
  4525  001498  519F               	movf	scale@scl& (0+255),w,b
  4526  00149A  0D04               	mullw	4
  4527  00149C  0EEB               	movlw	low __npowers_
  4528  00149E  24F3               	addwf	prodl,w,c
  4529  0014A0  6EF6               	movwf	tblptrl,c
  4530  0014A2  0E3E               	movlw	high __npowers_
  4531  0014A4  20F4               	addwfc	prodh,w,c
  4532  0014A6  6EF7               	movwf	tblptrh,c
  4533  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  4534  0014A8                     	endif
  4535  0014A8  0009               	tblrd		*+
  4536  0014AA  CFF5 F097          	movff	tablat,?_scale
  4537  0014AE  0009               	tblrd		*+
  4538  0014B0  CFF5 F098          	movff	tablat,?_scale+1
  4539  0014B4  0009               	tblrd		*+
  4540  0014B6  CFF5 F099          	movff	tablat,?_scale+2
  4541  0014BA  000A               	tblrd		*-
  4542  0014BC  CFF5 F09A          	movff	tablat,?_scale+3
  4543                           
  4544                           ; BSR set to: 0
  4545  0014C0  0012               	return	
  4546  0014C2                     l4757:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;doprnt.c: 435: }
  4550                           ;doprnt.c: 436: if(scl>=110)
  4551  0014C2  0100               	movlb	0	; () banked
  4552  0014C4  519F               	movf	scale@scl& (0+255),w,b
  4553  0014C6  0A80               	xorlw	128
  4554  0014C8  0F12               	addlw	-238
  4555  0014CA  A0D8               	btfss	status,0,c
  4556  0014CC  D0AA               	goto	l4765
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4560  0014CE  0E00               	movlw	0
  4561  0014D0  0100               	movlb	0	; () banked
  4562  0014D2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4563  0014D4  0E0A               	movlw	10
  4564  0014D6  6F72               	movwf	___awdiv@divisor& (0+255),b
  4565  0014D8  0E00               	movlw	0
  4566  0014DA  6E3F               	movwf	___awmod@divisor+1,c
  4567  0014DC  0E64               	movlw	100
  4568  0014DE  6E3E               	movwf	___awmod@divisor,c
  4569  0014E0  0100               	movlb	0	; () banked
  4570  0014E2  519F               	movf	scale@scl& (0+255),w,b
  4571  0014E4  6E3C               	movwf	___awmod@dividend,c
  4572  0014E6  6A3D               	clrf	___awmod@dividend+1,c
  4573  0014E8  BE3C               	btfsc	___awmod@dividend,7,c
  4574  0014EA  063D               	decf	___awmod@dividend+1,f,c
  4575  0014EC  ECFD  F015         	call	___awmod	;wreg free
  4576  0014F0  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4577  0014F4  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4578  0014F8  EC53  F014         	call	___awdiv	;wreg free
  4579  0014FC  0100               	movlb	0	; () banked
  4580  0014FE  90D8               	bcf	status,0,c
  4581  001500  3770               	rlcf	?___awdiv& (0+255),f,b
  4582  001502  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4583  001504  0100               	movlb	0	; () banked
  4584  001506  90D8               	bcf	status,0,c
  4585  001508  3770               	rlcf	?___awdiv& (0+255),f,b
  4586  00150A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4587  00150C  0E24               	movlw	36
  4588  00150E  0100               	movlb	0	; () banked
  4589  001510  2770               	addwf	?___awdiv& (0+255),f,b
  4590  001512  0E00               	movlw	0
  4591  001514  0100               	movlb	0	; () banked
  4592  001516  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4593  001518  0E1F               	movlw	low __powers_
  4594  00151A  0100               	movlb	0	; () banked
  4595  00151C  2570               	addwf	?___awdiv& (0+255),w,b
  4596  00151E  6EF6               	movwf	tblptrl,c
  4597  001520  0E3F               	movlw	high __powers_
  4598  001522  0100               	movlb	0	; () banked
  4599  001524  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4600  001526  6EF7               	movwf	tblptrh,c
  4601  001528                     	if	0	;There are less than 3 active tblptr bytes
  4602  001528                     	endif
  4603  001528  0009               	tblrd		*+
  4604  00152A  CFF5 F082          	movff	tablat,___flmul@a
  4605  00152E  0009               	tblrd		*+
  4606  001530  CFF5 F083          	movff	tablat,___flmul@a+1
  4607  001534  0009               	tblrd		*+
  4608  001536  CFF5 F084          	movff	tablat,___flmul@a+2
  4609  00153A  000A               	tblrd		*-
  4610  00153C  CFF5 F085          	movff	tablat,___flmul@a+3
  4611  001540  0E00               	movlw	0
  4612  001542  0100               	movlb	0	; () banked
  4613  001544  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4614  001546  0E64               	movlw	100
  4615  001548  6F72               	movwf	___awdiv@divisor& (0+255),b
  4616  00154A  0100               	movlb	0	; () banked
  4617  00154C  519F               	movf	scale@scl& (0+255),w,b
  4618  00154E  0100               	movlb	0	; () banked
  4619  001550  6F70               	movwf	___awdiv@dividend& (0+255),b
  4620  001552  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4621  001554  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4622  001556  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4623  001558  EC53  F014         	call	___awdiv	;wreg free
  4624  00155C  0100               	movlb	0	; () banked
  4625  00155E  90D8               	bcf	status,0,c
  4626  001560  3770               	rlcf	?___awdiv& (0+255),f,b
  4627  001562  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4628  001564  0100               	movlb	0	; () banked
  4629  001566  90D8               	bcf	status,0,c
  4630  001568  3770               	rlcf	?___awdiv& (0+255),f,b
  4631  00156A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4632  00156C  0E48               	movlw	72
  4633  00156E  0100               	movlb	0	; () banked
  4634  001570  2770               	addwf	?___awdiv& (0+255),f,b
  4635  001572  0E00               	movlw	0
  4636  001574  0100               	movlb	0	; () banked
  4637  001576  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4638  001578  0E1F               	movlw	low __powers_
  4639  00157A  0100               	movlb	0	; () banked
  4640  00157C  2570               	addwf	?___awdiv& (0+255),w,b
  4641  00157E  6EF6               	movwf	tblptrl,c
  4642  001580  0E3F               	movlw	high __powers_
  4643  001582  0100               	movlb	0	; () banked
  4644  001584  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4645  001586  6EF7               	movwf	tblptrh,c
  4646  001588                     	if	0	;There are less than 3 active tblptr bytes
  4647  001588                     	endif
  4648  001588  0009               	tblrd		*+
  4649  00158A  CFF5 F07E          	movff	tablat,___flmul@b
  4650  00158E  0009               	tblrd		*+
  4651  001590  CFF5 F07F          	movff	tablat,___flmul@b+1
  4652  001594  0009               	tblrd		*+
  4653  001596  CFF5 F080          	movff	tablat,___flmul@b+2
  4654  00159A  000A               	tblrd		*-
  4655  00159C  CFF5 F081          	movff	tablat,___flmul@b+3
  4656  0015A0  ECE4  F006         	call	___flmul	;wreg free
  4657  0015A4  C07E  F09B         	movff	?___flmul,_scale$2512
  4658  0015A8  C07F  F09C         	movff	?___flmul+1,_scale$2512+1
  4659  0015AC  C080  F09D         	movff	?___flmul+2,_scale$2512+2
  4660  0015B0  C081  F09E         	movff	?___flmul+3,_scale$2512+3
  4661                           
  4662                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4663  0015B4  C09B  F07E         	movff	_scale$2512,___flmul@b
  4664  0015B8  C09C  F07F         	movff	_scale$2512+1,___flmul@b+1
  4665  0015BC  C09D  F080         	movff	_scale$2512+2,___flmul@b+2
  4666  0015C0  C09E  F081         	movff	_scale$2512+3,___flmul@b+3
  4667  0015C4  0E00               	movlw	0
  4668  0015C6  6E3F               	movwf	___awmod@divisor+1,c
  4669  0015C8  0E0A               	movlw	10
  4670  0015CA  6E3E               	movwf	___awmod@divisor,c
  4671  0015CC  0100               	movlb	0	; () banked
  4672  0015CE  519F               	movf	scale@scl& (0+255),w,b
  4673  0015D0  6E3C               	movwf	___awmod@dividend,c
  4674  0015D2  6A3D               	clrf	___awmod@dividend+1,c
  4675  0015D4  BE3C               	btfsc	___awmod@dividend,7,c
  4676  0015D6  063D               	decf	___awmod@dividend+1,f,c
  4677  0015D8  ECFD  F015         	call	___awmod	;wreg free
  4678  0015DC  90D8               	bcf	status,0,c
  4679  0015DE  363C               	rlcf	?___awmod,f,c
  4680  0015E0  363D               	rlcf	?___awmod+1,f,c
  4681  0015E2  90D8               	bcf	status,0,c
  4682  0015E4  363C               	rlcf	?___awmod,f,c
  4683  0015E6  363D               	rlcf	?___awmod+1,f,c
  4684  0015E8  0E1F               	movlw	low __powers_
  4685  0015EA  243C               	addwf	?___awmod,w,c
  4686  0015EC  6EF6               	movwf	tblptrl,c
  4687  0015EE  0E3F               	movlw	high __powers_
  4688  0015F0  203D               	addwfc	?___awmod+1,w,c
  4689  0015F2  6EF7               	movwf	tblptrh,c
  4690  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  4691  0015F4                     	endif
  4692  0015F4  0009               	tblrd		*+
  4693  0015F6  CFF5 F082          	movff	tablat,___flmul@a
  4694  0015FA  0009               	tblrd		*+
  4695  0015FC  CFF5 F083          	movff	tablat,___flmul@a+1
  4696  001600  0009               	tblrd		*+
  4697  001602  CFF5 F084          	movff	tablat,___flmul@a+2
  4698  001606  000A               	tblrd		*-
  4699  001608  CFF5 F085          	movff	tablat,___flmul@a+3
  4700  00160C  ECE4  F006         	call	___flmul	;wreg free
  4701  001610  C07E  F097         	movff	?___flmul,?_scale
  4702  001614  C07F  F098         	movff	?___flmul+1,?_scale+1
  4703  001618  C080  F099         	movff	?___flmul+2,?_scale+2
  4704  00161C  C081  F09A         	movff	?___flmul+3,?_scale+3
  4705  001620  0012               	return	
  4706  001622                     l4765:
  4707                           
  4708                           ;doprnt.c: 438: else if(scl > 10)
  4709  001622  0100               	movlb	0	; () banked
  4710  001624  519F               	movf	scale@scl& (0+255),w,b
  4711  001626  0A80               	xorlw	128
  4712  001628  0F75               	addlw	-139
  4713  00162A  A0D8               	btfss	status,0,c
  4714  00162C  D057               	goto	l4771
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4718  00162E  0E00               	movlw	0
  4719  001630  0100               	movlb	0	; () banked
  4720  001632  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4721  001634  0E0A               	movlw	10
  4722  001636  6F72               	movwf	___awdiv@divisor& (0+255),b
  4723  001638  0100               	movlb	0	; () banked
  4724  00163A  519F               	movf	scale@scl& (0+255),w,b
  4725  00163C  0100               	movlb	0	; () banked
  4726  00163E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4727  001640  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4728  001642  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4729  001644  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4730  001646  EC53  F014         	call	___awdiv	;wreg free
  4731  00164A  0100               	movlb	0	; () banked
  4732  00164C  90D8               	bcf	status,0,c
  4733  00164E  3770               	rlcf	?___awdiv& (0+255),f,b
  4734  001650  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4735  001652  0100               	movlb	0	; () banked
  4736  001654  90D8               	bcf	status,0,c
  4737  001656  3770               	rlcf	?___awdiv& (0+255),f,b
  4738  001658  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4739  00165A  0E24               	movlw	36
  4740  00165C  0100               	movlb	0	; () banked
  4741  00165E  2770               	addwf	?___awdiv& (0+255),f,b
  4742  001660  0E00               	movlw	0
  4743  001662  0100               	movlb	0	; () banked
  4744  001664  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4745  001666  0E1F               	movlw	low __powers_
  4746  001668  0100               	movlb	0	; () banked
  4747  00166A  2570               	addwf	?___awdiv& (0+255),w,b
  4748  00166C  6EF6               	movwf	tblptrl,c
  4749  00166E  0E3F               	movlw	high __powers_
  4750  001670  0100               	movlb	0	; () banked
  4751  001672  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4752  001674  6EF7               	movwf	tblptrh,c
  4753  001676                     	if	0	;There are less than 3 active tblptr bytes
  4754  001676                     	endif
  4755  001676  0009               	tblrd		*+
  4756  001678  CFF5 F07E          	movff	tablat,___flmul@b
  4757  00167C  0009               	tblrd		*+
  4758  00167E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4759  001682  0009               	tblrd		*+
  4760  001684  CFF5 F080          	movff	tablat,___flmul@b+2
  4761  001688  000A               	tblrd		*-
  4762  00168A  CFF5 F081          	movff	tablat,___flmul@b+3
  4763  00168E  0E00               	movlw	0
  4764  001690  6E3F               	movwf	___awmod@divisor+1,c
  4765  001692  0E0A               	movlw	10
  4766  001694  6E3E               	movwf	___awmod@divisor,c
  4767  001696  0100               	movlb	0	; () banked
  4768  001698  519F               	movf	scale@scl& (0+255),w,b
  4769  00169A  6E3C               	movwf	___awmod@dividend,c
  4770  00169C  6A3D               	clrf	___awmod@dividend+1,c
  4771  00169E  BE3C               	btfsc	___awmod@dividend,7,c
  4772  0016A0  063D               	decf	___awmod@dividend+1,f,c
  4773  0016A2  ECFD  F015         	call	___awmod	;wreg free
  4774  0016A6  90D8               	bcf	status,0,c
  4775  0016A8  363C               	rlcf	?___awmod,f,c
  4776  0016AA  363D               	rlcf	?___awmod+1,f,c
  4777  0016AC  90D8               	bcf	status,0,c
  4778  0016AE  363C               	rlcf	?___awmod,f,c
  4779  0016B0  363D               	rlcf	?___awmod+1,f,c
  4780  0016B2  0E1F               	movlw	low __powers_
  4781  0016B4  243C               	addwf	?___awmod,w,c
  4782  0016B6  6EF6               	movwf	tblptrl,c
  4783  0016B8  0E3F               	movlw	high __powers_
  4784  0016BA  203D               	addwfc	?___awmod+1,w,c
  4785  0016BC  6EF7               	movwf	tblptrh,c
  4786  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  4787  0016BE                     	endif
  4788  0016BE  0009               	tblrd		*+
  4789  0016C0  CFF5 F082          	movff	tablat,___flmul@a
  4790  0016C4  0009               	tblrd		*+
  4791  0016C6  CFF5 F083          	movff	tablat,___flmul@a+1
  4792  0016CA  0009               	tblrd		*+
  4793  0016CC  CFF5 F084          	movff	tablat,___flmul@a+2
  4794  0016D0  000A               	tblrd		*-
  4795  0016D2  CFF5 F085          	movff	tablat,___flmul@a+3
  4796  0016D6  ECE4  F006         	call	___flmul	;wreg free
  4797  0016DA  D79A               	goto	L5
  4798  0016DC                     l4771:
  4799                           
  4800                           ;doprnt.c: 440: return _powers_[scl];
  4801  0016DC  0100               	movlb	0	; () banked
  4802  0016DE  519F               	movf	scale@scl& (0+255),w,b
  4803  0016E0  0D04               	mullw	4
  4804  0016E2  0E1F               	movlw	low __powers_
  4805  0016E4  24F3               	addwf	prodl,w,c
  4806  0016E6  6EF6               	movwf	tblptrl,c
  4807  0016E8  0E3F               	movlw	high __powers_
  4808  0016EA  20F4               	addwfc	prodh,w,c
  4809  0016EC  6EF7               	movwf	tblptrh,c
  4810  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  4811  0016EE                     	endif
  4812  0016EE  0009               	tblrd		*+
  4813  0016F0  CFF5 F097          	movff	tablat,?_scale
  4814  0016F4  0009               	tblrd		*+
  4815  0016F6  CFF5 F098          	movff	tablat,?_scale+1
  4816  0016FA  0009               	tblrd		*+
  4817  0016FC  CFF5 F099          	movff	tablat,?_scale+2
  4818  001700  000A               	tblrd		*-
  4819  001702  CFF5 F09A          	movff	tablat,?_scale+3
  4820  001706  0012               	return	
  4821  001708                     __end_of_scale:
  4822                           	opt stack 0
  4823                           tblptru	equ	0xFF8
  4824                           tblptrh	equ	0xFF7
  4825                           tblptrl	equ	0xFF6
  4826                           tablat	equ	0xFF5
  4827                           prodh	equ	0xFF4
  4828                           prodl	equ	0xFF3
  4829                           intcon	equ	0xFF2
  4830                           postinc0	equ	0xFEE
  4831                           wreg	equ	0xFE8
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _isdigit *****************
  4839 ;; Defined at:
  4840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  c               1    wreg     unsigned char 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  c               1   26[COMRAM] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;		None               void
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4854 ;;      Params:         0       0       0       0
  4855 ;;      Locals:         2       0       0       0
  4856 ;;      Temps:          1       0       0       0
  4857 ;;      Totals:         3       0       0       0
  4858 ;;Total ram usage:        3 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    4
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_sprintf
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text14
  4869  003034                     __ptext14:
  4870                           	opt stack 0
  4871  003034                     _isdigit:
  4872                           	opt stack 24
  4873                           
  4874                           ;incstack = 0
  4875                           ;isdigit@c stored from wreg
  4876  003034  6E3E               	movwf	isdigit@c,c
  4877  003036  0E00               	movlw	0
  4878  003038  6E3D               	movwf	_isdigit$2119,c
  4879  00303A  0E3A               	movlw	58
  4880  00303C  603E               	cpfslt	isdigit@c,c
  4881  00303E  D005               	goto	l4783
  4882  003040  0E2F               	movlw	47
  4883  003042  643E               	cpfsgt	isdigit@c,c
  4884  003044  D002               	goto	l4783
  4885  003046  0E01               	movlw	1
  4886  003048  6E3D               	movwf	_isdigit$2119,c
  4887  00304A                     l4783:
  4888  00304A  C03D  F03C         	movff	_isdigit$2119,??_isdigit
  4889  00304E  303C               	rrcf	??_isdigit,w,c
  4890  003050  0012               	return	
  4891  003052                     __end_of_isdigit:
  4892                           	opt stack 0
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function _fround *****************
  4909 ;; Defined at:
  4910 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  prec            1    wreg     unsigned char 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  prec            1   67[BANK0 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4   55[BANK0 ] unsigned char 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4924 ;;      Params:         0       4       0       0
  4925 ;;      Locals:         0       9       0       0
  4926 ;;      Temps:          0       0       0       0
  4927 ;;      Totals:         0      13       0       0
  4928 ;;Total ram usage:       13 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    5
  4931 ;; This function calls:
  4932 ;;		___awdiv
  4933 ;;		___awmod
  4934 ;;		___flmul
  4935 ;; This function is called by:
  4936 ;;		_sprintf
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text15
  4941  001A7C                     __ptext15:
  4942                           	opt stack 0
  4943  001A7C                     _fround:
  4944                           	opt stack 23
  4945                           
  4946                           ;incstack = 0
  4947                           ;fround@prec stored from wreg
  4948  001A7C  0100               	movlb	0	; () banked
  4949  001A7E  6FA3               	movwf	fround@prec& (0+255),b
  4950                           
  4951                           ;doprnt.c: 413: if(prec>=110)
  4952  001A80  0E6D               	movlw	109
  4953  001A82  0100               	movlb	0	; () banked
  4954  001A84  65A3               	cpfsgt	fround@prec& (0+255),b
  4955  001A86  D0BC               	goto	l4725
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4959  001A88  0E00               	movlw	0
  4960  001A8A  0100               	movlb	0	; () banked
  4961  001A8C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4962  001A8E  0E0A               	movlw	10
  4963  001A90  6F72               	movwf	___awdiv@divisor& (0+255),b
  4964  001A92  0E00               	movlw	0
  4965  001A94  6E3F               	movwf	___awmod@divisor+1,c
  4966  001A96  0E64               	movlw	100
  4967  001A98  6E3E               	movwf	___awmod@divisor,c
  4968  001A9A  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4969  001A9E  6A3D               	clrf	___awmod@dividend+1,c
  4970  001AA0  ECFD  F015         	call	___awmod	;wreg free
  4971  001AA4  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4972  001AA8  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4973  001AAC  EC53  F014         	call	___awdiv	;wreg free
  4974  001AB0  0100               	movlb	0	; () banked
  4975  001AB2  90D8               	bcf	status,0,c
  4976  001AB4  3770               	rlcf	?___awdiv& (0+255),f,b
  4977  001AB6  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4978  001AB8  0100               	movlb	0	; () banked
  4979  001ABA  90D8               	bcf	status,0,c
  4980  001ABC  3770               	rlcf	?___awdiv& (0+255),f,b
  4981  001ABE  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4982  001AC0  0E24               	movlw	36
  4983  001AC2  0100               	movlb	0	; () banked
  4984  001AC4  2770               	addwf	?___awdiv& (0+255),f,b
  4985  001AC6  0E00               	movlw	0
  4986  001AC8  0100               	movlb	0	; () banked
  4987  001ACA  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4988  001ACC  0EEB               	movlw	low __npowers_
  4989  001ACE  0100               	movlb	0	; () banked
  4990  001AD0  2570               	addwf	?___awdiv& (0+255),w,b
  4991  001AD2  6EF6               	movwf	tblptrl,c
  4992  001AD4  0E3E               	movlw	high __npowers_
  4993  001AD6  0100               	movlb	0	; () banked
  4994  001AD8  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4995  001ADA  6EF7               	movwf	tblptrh,c
  4996  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  4997  001ADC                     	endif
  4998  001ADC  0009               	tblrd		*+
  4999  001ADE  CFF5 F082          	movff	tablat,___flmul@a
  5000  001AE2  0009               	tblrd		*+
  5001  001AE4  CFF5 F083          	movff	tablat,___flmul@a+1
  5002  001AE8  0009               	tblrd		*+
  5003  001AEA  CFF5 F084          	movff	tablat,___flmul@a+2
  5004  001AEE  000A               	tblrd		*-
  5005  001AF0  CFF5 F085          	movff	tablat,___flmul@a+3
  5006  001AF4  0E00               	movlw	0
  5007  001AF6  0100               	movlb	0	; () banked
  5008  001AF8  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5009  001AFA  0E64               	movlw	100
  5010  001AFC  6F72               	movwf	___awdiv@divisor& (0+255),b
  5011  001AFE  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5012  001B02  0100               	movlb	0	; () banked
  5013  001B04  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5014  001B06  EC53  F014         	call	___awdiv	;wreg free
  5015  001B0A  0100               	movlb	0	; () banked
  5016  001B0C  90D8               	bcf	status,0,c
  5017  001B0E  3770               	rlcf	?___awdiv& (0+255),f,b
  5018  001B10  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5019  001B12  0100               	movlb	0	; () banked
  5020  001B14  90D8               	bcf	status,0,c
  5021  001B16  3770               	rlcf	?___awdiv& (0+255),f,b
  5022  001B18  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5023  001B1A  0E48               	movlw	72
  5024  001B1C  0100               	movlb	0	; () banked
  5025  001B1E  2770               	addwf	?___awdiv& (0+255),f,b
  5026  001B20  0E00               	movlw	0
  5027  001B22  0100               	movlb	0	; () banked
  5028  001B24  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5029  001B26  0EEB               	movlw	low __npowers_
  5030  001B28  0100               	movlb	0	; () banked
  5031  001B2A  2570               	addwf	?___awdiv& (0+255),w,b
  5032  001B2C  6EF6               	movwf	tblptrl,c
  5033  001B2E  0E3E               	movlw	high __npowers_
  5034  001B30  0100               	movlb	0	; () banked
  5035  001B32  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5036  001B34  6EF7               	movwf	tblptrh,c
  5037  001B36                     	if	0	;There are less than 3 active tblptr bytes
  5038  001B36                     	endif
  5039  001B36  0009               	tblrd		*+
  5040  001B38  CFF5 F07E          	movff	tablat,___flmul@b
  5041  001B3C  0009               	tblrd		*+
  5042  001B3E  CFF5 F07F          	movff	tablat,___flmul@b+1
  5043  001B42  0009               	tblrd		*+
  5044  001B44  CFF5 F080          	movff	tablat,___flmul@b+2
  5045  001B48  000A               	tblrd		*-
  5046  001B4A  CFF5 F081          	movff	tablat,___flmul@b+3
  5047  001B4E  ECE4  F006         	call	___flmul	;wreg free
  5048  001B52  C07E  F09F         	movff	?___flmul,_fround$2510
  5049  001B56  C07F  F0A0         	movff	?___flmul+1,_fround$2510+1
  5050  001B5A  C080  F0A1         	movff	?___flmul+2,_fround$2510+2
  5051  001B5E  C081  F0A2         	movff	?___flmul+3,_fround$2510+3
  5052                           
  5053                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5054  001B62  0E00               	movlw	0
  5055  001B64  6E3F               	movwf	___awmod@divisor+1,c
  5056  001B66  0E0A               	movlw	10
  5057  001B68  6E3E               	movwf	___awmod@divisor,c
  5058  001B6A  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5059  001B6E  6A3D               	clrf	___awmod@dividend+1,c
  5060  001B70  ECFD  F015         	call	___awmod	;wreg free
  5061  001B74  90D8               	bcf	status,0,c
  5062  001B76  363C               	rlcf	?___awmod,f,c
  5063  001B78  363D               	rlcf	?___awmod+1,f,c
  5064  001B7A  90D8               	bcf	status,0,c
  5065  001B7C  363C               	rlcf	?___awmod,f,c
  5066  001B7E  363D               	rlcf	?___awmod+1,f,c
  5067  001B80  0EEB               	movlw	low __npowers_
  5068  001B82  243C               	addwf	?___awmod,w,c
  5069  001B84  6EF6               	movwf	tblptrl,c
  5070  001B86  0E3E               	movlw	high __npowers_
  5071  001B88  203D               	addwfc	?___awmod+1,w,c
  5072  001B8A  6EF7               	movwf	tblptrh,c
  5073  001B8C                     	if	0	;There are less than 3 active tblptr bytes
  5074  001B8C                     	endif
  5075  001B8C  0009               	tblrd		*+
  5076  001B8E  CFF5 F082          	movff	tablat,___flmul@a
  5077  001B92  0009               	tblrd		*+
  5078  001B94  CFF5 F083          	movff	tablat,___flmul@a+1
  5079  001B98  0009               	tblrd		*+
  5080  001B9A  CFF5 F084          	movff	tablat,___flmul@a+2
  5081  001B9E  000A               	tblrd		*-
  5082  001BA0  CFF5 F085          	movff	tablat,___flmul@a+3
  5083  001BA4  C09F  F07E         	movff	_fround$2510,___flmul@b
  5084  001BA8  C0A0  F07F         	movff	_fround$2510+1,___flmul@b+1
  5085  001BAC  C0A1  F080         	movff	_fround$2510+2,___flmul@b+2
  5086  001BB0  C0A2  F081         	movff	_fround$2510+3,___flmul@b+3
  5087  001BB4  ECE4  F006         	call	___flmul	;wreg free
  5088  001BB8  C07E  F09B         	movff	?___flmul,_fround$2511
  5089  001BBC  C07F  F09C         	movff	?___flmul+1,_fround$2511+1
  5090  001BC0  C080  F09D         	movff	?___flmul+2,_fround$2511+2
  5091  001BC4  C081  F09E         	movff	?___flmul+3,_fround$2511+3
  5092                           
  5093                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5094  001BC8  C09B  F07E         	movff	_fround$2511,___flmul@b
  5095  001BCC  C09C  F07F         	movff	_fround$2511+1,___flmul@b+1
  5096  001BD0  C09D  F080         	movff	_fround$2511+2,___flmul@b+2
  5097  001BD4  C09E  F081         	movff	_fround$2511+3,___flmul@b+3
  5098  001BD8  0E00               	movlw	0
  5099  001BDA  0100               	movlb	0	; () banked
  5100  001BDC  6F82               	movwf	___flmul@a& (0+255),b
  5101  001BDE  0E00               	movlw	0
  5102  001BE0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5103  001BE2  0E00               	movlw	0
  5104  001BE4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5105  001BE6  0E3F               	movlw	63
  5106  001BE8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5107  001BEA  ECE4  F006         	call	___flmul	;wreg free
  5108  001BEE  C07E  F097         	movff	?___flmul,?_fround
  5109  001BF2  C07F  F098         	movff	?___flmul+1,?_fround+1
  5110  001BF6  C080  F099         	movff	?___flmul+2,?_fround+2
  5111  001BFA  C081  F09A         	movff	?___flmul+3,?_fround+3
  5112  001BFE  0012               	return	
  5113  001C00                     l4725:
  5114                           
  5115                           ;doprnt.c: 415: else if(prec > 10)
  5116  001C00  0E0A               	movlw	10
  5117  001C02  0100               	movlb	0	; () banked
  5118  001C04  65A3               	cpfsgt	fround@prec& (0+255),b
  5119  001C06  D06C               	goto	l4733
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5123  001C08  0E00               	movlw	0
  5124  001C0A  6E3F               	movwf	___awmod@divisor+1,c
  5125  001C0C  0E0A               	movlw	10
  5126  001C0E  6E3E               	movwf	___awmod@divisor,c
  5127  001C10  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5128  001C14  6A3D               	clrf	___awmod@dividend+1,c
  5129  001C16  ECFD  F015         	call	___awmod	;wreg free
  5130  001C1A  90D8               	bcf	status,0,c
  5131  001C1C  363C               	rlcf	?___awmod,f,c
  5132  001C1E  363D               	rlcf	?___awmod+1,f,c
  5133  001C20  90D8               	bcf	status,0,c
  5134  001C22  363C               	rlcf	?___awmod,f,c
  5135  001C24  363D               	rlcf	?___awmod+1,f,c
  5136  001C26  0EEB               	movlw	low __npowers_
  5137  001C28  243C               	addwf	?___awmod,w,c
  5138  001C2A  6EF6               	movwf	tblptrl,c
  5139  001C2C  0E3E               	movlw	high __npowers_
  5140  001C2E  203D               	addwfc	?___awmod+1,w,c
  5141  001C30  6EF7               	movwf	tblptrh,c
  5142  001C32                     	if	0	;There are less than 3 active tblptr bytes
  5143  001C32                     	endif
  5144  001C32  0009               	tblrd		*+
  5145  001C34  CFF5 F082          	movff	tablat,___flmul@a
  5146  001C38  0009               	tblrd		*+
  5147  001C3A  CFF5 F083          	movff	tablat,___flmul@a+1
  5148  001C3E  0009               	tblrd		*+
  5149  001C40  CFF5 F084          	movff	tablat,___flmul@a+2
  5150  001C44  000A               	tblrd		*-
  5151  001C46  CFF5 F085          	movff	tablat,___flmul@a+3
  5152  001C4A  0E00               	movlw	0
  5153  001C4C  0100               	movlb	0	; () banked
  5154  001C4E  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5155  001C50  0E0A               	movlw	10
  5156  001C52  6F72               	movwf	___awdiv@divisor& (0+255),b
  5157  001C54  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5158  001C58  0100               	movlb	0	; () banked
  5159  001C5A  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5160  001C5C  EC53  F014         	call	___awdiv	;wreg free
  5161  001C60  0100               	movlb	0	; () banked
  5162  001C62  90D8               	bcf	status,0,c
  5163  001C64  3770               	rlcf	?___awdiv& (0+255),f,b
  5164  001C66  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5165  001C68  0100               	movlb	0	; () banked
  5166  001C6A  90D8               	bcf	status,0,c
  5167  001C6C  3770               	rlcf	?___awdiv& (0+255),f,b
  5168  001C6E  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5169  001C70  0E24               	movlw	36
  5170  001C72  0100               	movlb	0	; () banked
  5171  001C74  2770               	addwf	?___awdiv& (0+255),f,b
  5172  001C76  0E00               	movlw	0
  5173  001C78  0100               	movlb	0	; () banked
  5174  001C7A  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5175  001C7C  0EEB               	movlw	low __npowers_
  5176  001C7E  0100               	movlb	0	; () banked
  5177  001C80  2570               	addwf	?___awdiv& (0+255),w,b
  5178  001C82  6EF6               	movwf	tblptrl,c
  5179  001C84  0E3E               	movlw	high __npowers_
  5180  001C86  0100               	movlb	0	; () banked
  5181  001C88  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5182  001C8A  6EF7               	movwf	tblptrh,c
  5183  001C8C                     	if	0	;There are less than 3 active tblptr bytes
  5184  001C8C                     	endif
  5185  001C8C  0009               	tblrd		*+
  5186  001C8E  CFF5 F07E          	movff	tablat,___flmul@b
  5187  001C92  0009               	tblrd		*+
  5188  001C94  CFF5 F07F          	movff	tablat,___flmul@b+1
  5189  001C98  0009               	tblrd		*+
  5190  001C9A  CFF5 F080          	movff	tablat,___flmul@b+2
  5191  001C9E  000A               	tblrd		*-
  5192  001CA0  CFF5 F081          	movff	tablat,___flmul@b+3
  5193  001CA4  ECE4  F006         	call	___flmul	;wreg free
  5194  001CA8  C07E  F09F         	movff	?___flmul,_fround$2510
  5195  001CAC  C07F  F0A0         	movff	?___flmul+1,_fround$2510+1
  5196  001CB0  C080  F0A1         	movff	?___flmul+2,_fround$2510+2
  5197  001CB4  C081  F0A2         	movff	?___flmul+3,_fround$2510+3
  5198                           
  5199                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5200  001CB8  C09F  F07E         	movff	_fround$2510,___flmul@b
  5201  001CBC  C0A0  F07F         	movff	_fround$2510+1,___flmul@b+1
  5202  001CC0  C0A1  F080         	movff	_fround$2510+2,___flmul@b+2
  5203  001CC4  C0A2  F081         	movff	_fround$2510+3,___flmul@b+3
  5204  001CC8  0E00               	movlw	0
  5205  001CCA  0100               	movlb	0	; () banked
  5206  001CCC  6F82               	movwf	___flmul@a& (0+255),b
  5207  001CCE  0E00               	movlw	0
  5208  001CD0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5209  001CD2  0E00               	movlw	0
  5210  001CD4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5211  001CD6  0E3F               	movlw	63
  5212  001CD8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5213  001CDA  ECE4  F006         	call	___flmul	;wreg free
  5214  001CDE  D787               	goto	L6
  5215  001CE0                     l4733:
  5216                           
  5217                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5218  001CE0  0100               	movlb	0	; () banked
  5219  001CE2  51A3               	movf	fround@prec& (0+255),w,b
  5220  001CE4  0D04               	mullw	4
  5221  001CE6  0EEB               	movlw	low __npowers_
  5222  001CE8  24F3               	addwf	prodl,w,c
  5223  001CEA  6EF6               	movwf	tblptrl,c
  5224  001CEC  0E3E               	movlw	high __npowers_
  5225  001CEE  20F4               	addwfc	prodh,w,c
  5226  001CF0  6EF7               	movwf	tblptrh,c
  5227  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  5228  001CF2                     	endif
  5229  001CF2  0009               	tblrd		*+
  5230  001CF4  CFF5 F07E          	movff	tablat,___flmul@b
  5231  001CF8  0009               	tblrd		*+
  5232  001CFA  CFF5 F07F          	movff	tablat,___flmul@b+1
  5233  001CFE  0009               	tblrd		*+
  5234  001D00  CFF5 F080          	movff	tablat,___flmul@b+2
  5235  001D04  000A               	tblrd		*-
  5236  001D06  CFF5 F081          	movff	tablat,___flmul@b+3
  5237  001D0A  0E00               	movlw	0
  5238  001D0C  0100               	movlb	0	; () banked
  5239  001D0E  6F82               	movwf	___flmul@a& (0+255),b
  5240  001D10  0E00               	movlw	0
  5241  001D12  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5242  001D14  0E00               	movlw	0
  5243  001D16  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5244  001D18  0E3F               	movlw	63
  5245  001D1A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5246  001D1C  ECE4  F006         	call	___flmul	;wreg free
  5247  001D20  C07E  F097         	movff	?___flmul,?_fround
  5248  001D24  C07F  F098         	movff	?___flmul+1,?_fround+1
  5249  001D28  C080  F099         	movff	?___flmul+2,?_fround+2
  5250  001D2C  C081  F09A         	movff	?___flmul+3,?_fround+3
  5251  001D30  0012               	return	
  5252  001D32                     __end_of_fround:
  5253                           	opt stack 0
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           intcon	equ	0xFF2
  5261                           postinc0	equ	0xFEE
  5262                           wreg	equ	0xFE8
  5263                           indf2	equ	0xFDF
  5264                           postinc2	equ	0xFDE
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function ___flmul *****************
  5270 ;; Defined at:
  5271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  b               4   30[BANK0 ] unsigned char 
  5274 ;;  a               4   34[BANK0 ] unsigned char 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  prod            4   49[BANK0 ] struct .
  5277 ;;  grs             4   44[BANK0 ] unsigned long 
  5278 ;;  temp            2   53[BANK0 ] struct .
  5279 ;;  bexp            1   48[BANK0 ] unsigned char 
  5280 ;;  aexp            1   43[BANK0 ] unsigned char 
  5281 ;;  sign            1   42[BANK0 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  4   30[BANK0 ] unsigned char 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, prodl, prodh
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5291 ;;      Params:         0       8       0       0
  5292 ;;      Locals:         0      13       0       0
  5293 ;;      Temps:          0       4       0       0
  5294 ;;      Totals:         0      25       0       0
  5295 ;;Total ram usage:       25 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    4
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_main
  5302 ;;		_fround
  5303 ;;		_scale
  5304 ;;		_sprintf
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text16
  5309  000DC8                     __ptext16:
  5310                           	opt stack 0
  5311  000DC8                     ___flmul:
  5312                           	opt stack 26
  5313                           
  5314                           ;incstack = 0
  5315  000DC8  0100               	movlb	0	; () banked
  5316  000DCA  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5317  000DCC  0B80               	andlw	128
  5318  000DCE  0100               	movlb	0	; () banked
  5319  000DD0  6F8A               	movwf	___flmul@sign& (0+255),b
  5320  000DD2  0100               	movlb	0	; () banked
  5321  000DD4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5322  000DD6  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5323  000DD8  0100               	movlb	0	; () banked
  5324  000DDA  6F90               	movwf	___flmul@bexp& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327  000DDC  0100               	movlb	0	; () banked
  5328  000DDE  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5329  000DE0  D002               	goto	l4489
  5330                           
  5331                           ; BSR set to: 0
  5332  000DE2  0100               	movlb	0	; () banked
  5333  000DE4  8190               	bsf	___flmul@bexp& (0+255),0,b
  5334  000DE6                     l4489:
  5335                           
  5336                           ; BSR set to: 0
  5337  000DE6  0100               	movlb	0	; () banked
  5338  000DE8  5190               	movf	___flmul@bexp& (0+255),w,b
  5339  000DEA  0100               	movlb	0	; () banked
  5340  000DEC  B4D8               	btfsc	status,2,c
  5341  000DEE  D010               	goto	l4497
  5342                           
  5343                           ; BSR set to: 0
  5344  000DF0  0100               	movlb	0	; () banked
  5345  000DF2  2990               	incf	___flmul@bexp& (0+255),w,b
  5346  000DF4  A4D8               	btfss	status,2,c
  5347  000DF6  D009               	goto	l4495
  5348                           
  5349                           ; BSR set to: 0
  5350  000DF8  0E00               	movlw	0
  5351  000DFA  0100               	movlb	0	; () banked
  5352  000DFC  6F7E               	movwf	___flmul@b& (0+255),b
  5353  000DFE  0E00               	movlw	0
  5354  000E00  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5355  000E02  0E00               	movlw	0
  5356  000E04  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5357  000E06  0E00               	movlw	0
  5358  000E08  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5359  000E0A                     l4495:
  5360                           
  5361                           ; BSR set to: 0
  5362  000E0A  0100               	movlb	0	; () banked
  5363  000E0C  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5364  000E0E  D009               	goto	l4499
  5365  000E10                     l4497:
  5366                           
  5367                           ; BSR set to: 0
  5368  000E10  0E00               	movlw	0
  5369  000E12  0100               	movlb	0	; () banked
  5370  000E14  6F7E               	movwf	___flmul@b& (0+255),b
  5371  000E16  0E00               	movlw	0
  5372  000E18  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5373  000E1A  0E00               	movlw	0
  5374  000E1C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5375  000E1E  0E00               	movlw	0
  5376  000E20  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5377  000E22                     l4499:
  5378                           
  5379                           ; BSR set to: 0
  5380  000E22  0100               	movlb	0	; () banked
  5381  000E24  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5382  000E26  0B80               	andlw	128
  5383  000E28  0100               	movlb	0	; () banked
  5384  000E2A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5385                           
  5386                           ; BSR set to: 0
  5387  000E2C  0100               	movlb	0	; () banked
  5388  000E2E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5389  000E30  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5390  000E32  0100               	movlb	0	; () banked
  5391  000E34  6F8B               	movwf	___flmul@aexp& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394  000E36  0100               	movlb	0	; () banked
  5395  000E38  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5396  000E3A  D002               	goto	l4507
  5397                           
  5398                           ; BSR set to: 0
  5399  000E3C  0100               	movlb	0	; () banked
  5400  000E3E  818B               	bsf	___flmul@aexp& (0+255),0,b
  5401  000E40                     l4507:
  5402                           
  5403                           ; BSR set to: 0
  5404  000E40  0100               	movlb	0	; () banked
  5405  000E42  518B               	movf	___flmul@aexp& (0+255),w,b
  5406  000E44  0100               	movlb	0	; () banked
  5407  000E46  B4D8               	btfsc	status,2,c
  5408  000E48  D010               	goto	l4515
  5409                           
  5410                           ; BSR set to: 0
  5411  000E4A  0100               	movlb	0	; () banked
  5412  000E4C  298B               	incf	___flmul@aexp& (0+255),w,b
  5413  000E4E  A4D8               	btfss	status,2,c
  5414  000E50  D009               	goto	l4513
  5415                           
  5416                           ; BSR set to: 0
  5417  000E52  0E00               	movlw	0
  5418  000E54  0100               	movlb	0	; () banked
  5419  000E56  6F82               	movwf	___flmul@a& (0+255),b
  5420  000E58  0E00               	movlw	0
  5421  000E5A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5422  000E5C  0E00               	movlw	0
  5423  000E5E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5424  000E60  0E00               	movlw	0
  5425  000E62  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5426  000E64                     l4513:
  5427                           
  5428                           ; BSR set to: 0
  5429  000E64  0100               	movlb	0	; () banked
  5430  000E66  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5431  000E68  D009               	goto	l1051
  5432  000E6A                     l4515:
  5433                           
  5434                           ; BSR set to: 0
  5435  000E6A  0E00               	movlw	0
  5436  000E6C  0100               	movlb	0	; () banked
  5437  000E6E  6F82               	movwf	___flmul@a& (0+255),b
  5438  000E70  0E00               	movlw	0
  5439  000E72  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5440  000E74  0E00               	movlw	0
  5441  000E76  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5442  000E78  0E00               	movlw	0
  5443  000E7A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5444  000E7C                     l1051:
  5445                           
  5446                           ; BSR set to: 0
  5447  000E7C  0100               	movlb	0	; () banked
  5448  000E7E  518B               	movf	___flmul@aexp& (0+255),w,b
  5449  000E80  0100               	movlb	0	; () banked
  5450  000E82  B4D8               	btfsc	status,2,c
  5451  000E84  D005               	goto	l4519
  5452                           
  5453                           ; BSR set to: 0
  5454  000E86  0100               	movlb	0	; () banked
  5455  000E88  5190               	movf	___flmul@bexp& (0+255),w,b
  5456  000E8A  0100               	movlb	0	; () banked
  5457  000E8C  A4D8               	btfss	status,2,c
  5458  000E8E  D00A               	goto	l4523
  5459  000E90                     l4519:
  5460                           
  5461                           ; BSR set to: 0
  5462  000E90  0E00               	movlw	0
  5463  000E92  0100               	movlb	0	; () banked
  5464  000E94  6F7E               	movwf	?___flmul& (0+255),b
  5465  000E96  0E00               	movlw	0
  5466  000E98  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5467  000E9A  0E00               	movlw	0
  5468  000E9C  6F80               	movwf	(?___flmul+2)& (0+255),b
  5469  000E9E  0E00               	movlw	0
  5470  000EA0  6F81               	movwf	(?___flmul+3)& (0+255),b
  5471                           
  5472                           ; BSR set to: 0
  5473  000EA2  0012               	return	
  5474  000EA4                     l4523:
  5475                           
  5476                           ; BSR set to: 0
  5477  000EA4  0100               	movlb	0	; () banked
  5478  000EA6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5479  000EA8  0100               	movlb	0	; () banked
  5480  000EAA  037E               	mulwf	___flmul@b& (0+255),b
  5481  000EAC  CFF3 F095          	movff	prodl,___flmul@temp
  5482  000EB0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5483                           
  5484                           ; BSR set to: 0
  5485  000EB4  0100               	movlb	0	; () banked
  5486  000EB6  5195               	movf	___flmul@temp& (0+255),w,b
  5487  000EB8  0100               	movlb	0	; () banked
  5488  000EBA  6F8C               	movwf	___flmul@grs& (0+255),b
  5489  000EBC  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5490  000EBE  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5491  000EC0  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494  000EC2  0100               	movlb	0	; () banked
  5495  000EC4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5496  000EC6  0100               	movlb	0	; () banked
  5497  000EC8  6F91               	movwf	___flmul@prod& (0+255),b
  5498  000ECA  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5499  000ECC  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5500  000ECE  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5501  000ED0  0100               	movlb	0	; () banked
  5502  000ED2  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5503  000ED4  0100               	movlb	0	; () banked
  5504  000ED6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5505  000ED8  CFF3 F095          	movff	prodl,___flmul@temp
  5506  000EDC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5507                           
  5508                           ; BSR set to: 0
  5509  000EE0  0100               	movlb	0	; () banked
  5510  000EE2  5195               	movf	___flmul@temp& (0+255),w,b
  5511  000EE4  0100               	movlb	0	; () banked
  5512  000EE6  278C               	addwf	___flmul@grs& (0+255),f,b
  5513  000EE8  0E00               	movlw	0
  5514  000EEA  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5515  000EEC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5516  000EEE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5517                           
  5518                           ; BSR set to: 0
  5519  000EF0  0100               	movlb	0	; () banked
  5520  000EF2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5521  000EF4  0100               	movlb	0	; () banked
  5522  000EF6  2791               	addwf	___flmul@prod& (0+255),f,b
  5523  000EF8  0E00               	movlw	0
  5524  000EFA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5525  000EFC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5526  000EFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5527  000F00  0100               	movlb	0	; () banked
  5528  000F02  5182               	movf	___flmul@a& (0+255),w,b
  5529  000F04  0100               	movlb	0	; () banked
  5530  000F06  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5531  000F08  CFF3 F095          	movff	prodl,___flmul@temp
  5532  000F0C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5533                           
  5534                           ; BSR set to: 0
  5535  000F10  0100               	movlb	0	; () banked
  5536  000F12  5195               	movf	___flmul@temp& (0+255),w,b
  5537  000F14  0100               	movlb	0	; () banked
  5538  000F16  278C               	addwf	___flmul@grs& (0+255),f,b
  5539  000F18  0E00               	movlw	0
  5540  000F1A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5541  000F1C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5542  000F1E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5543                           
  5544                           ; BSR set to: 0
  5545  000F20  0100               	movlb	0	; () banked
  5546  000F22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5547  000F24  0100               	movlb	0	; () banked
  5548  000F26  2791               	addwf	___flmul@prod& (0+255),f,b
  5549  000F28  0E00               	movlw	0
  5550  000F2A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5551  000F2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5552  000F2E  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5553                           
  5554                           ; BSR set to: 0
  5555  000F30  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5556  000F34  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5557  000F38  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5558  000F3C  0100               	movlb	0	; () banked
  5559  000F3E  6B8C               	clrf	___flmul@grs& (0+255),b
  5560                           
  5561                           ; BSR set to: 0
  5562  000F40  0100               	movlb	0	; () banked
  5563  000F42  5182               	movf	___flmul@a& (0+255),w,b
  5564  000F44  0100               	movlb	0	; () banked
  5565  000F46  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5566  000F48  CFF3 F095          	movff	prodl,___flmul@temp
  5567  000F4C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5568                           
  5569                           ; BSR set to: 0
  5570  000F50  0100               	movlb	0	; () banked
  5571  000F52  5195               	movf	___flmul@temp& (0+255),w,b
  5572  000F54  0100               	movlb	0	; () banked
  5573  000F56  278C               	addwf	___flmul@grs& (0+255),f,b
  5574  000F58  0100               	movlb	0	; () banked
  5575  000F5A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5576  000F5C  0100               	movlb	0	; () banked
  5577  000F5E  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5578  000F60  0E00               	movlw	0
  5579  000F62  0100               	movlb	0	; () banked
  5580  000F64  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5581  000F66  0E00               	movlw	0
  5582  000F68  0100               	movlb	0	; () banked
  5583  000F6A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5584                           
  5585                           ; BSR set to: 0
  5586  000F6C  0100               	movlb	0	; () banked
  5587  000F6E  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5588  000F70  0100               	movlb	0	; () banked
  5589  000F72  037E               	mulwf	___flmul@b& (0+255),b
  5590  000F74  CFF3 F095          	movff	prodl,___flmul@temp
  5591  000F78  CFF4 F096          	movff	prodh,___flmul@temp+1
  5592                           
  5593                           ; BSR set to: 0
  5594  000F7C  0100               	movlb	0	; () banked
  5595  000F7E  5195               	movf	___flmul@temp& (0+255),w,b
  5596  000F80  0100               	movlb	0	; () banked
  5597  000F82  278C               	addwf	___flmul@grs& (0+255),f,b
  5598  000F84  0100               	movlb	0	; () banked
  5599  000F86  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5600  000F88  0100               	movlb	0	; () banked
  5601  000F8A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5602  000F8C  0E00               	movlw	0
  5603  000F8E  0100               	movlb	0	; () banked
  5604  000F90  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5605  000F92  0E00               	movlw	0
  5606  000F94  0100               	movlb	0	; () banked
  5607  000F96  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5608                           
  5609                           ; BSR set to: 0
  5610  000F98  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5611  000F9C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5612  000FA0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5613  000FA4  0100               	movlb	0	; () banked
  5614  000FA6  6B8C               	clrf	___flmul@grs& (0+255),b
  5615  000FA8  0100               	movlb	0	; () banked
  5616  000FAA  5182               	movf	___flmul@a& (0+255),w,b
  5617  000FAC  0100               	movlb	0	; () banked
  5618  000FAE  037E               	mulwf	___flmul@b& (0+255),b
  5619  000FB0  CFF3 F095          	movff	prodl,___flmul@temp
  5620  000FB4  CFF4 F096          	movff	prodh,___flmul@temp+1
  5621                           
  5622                           ; BSR set to: 0
  5623  000FB8  0100               	movlb	0	; () banked
  5624  000FBA  5195               	movf	___flmul@temp& (0+255),w,b
  5625  000FBC  0100               	movlb	0	; () banked
  5626  000FBE  278C               	addwf	___flmul@grs& (0+255),f,b
  5627  000FC0  0100               	movlb	0	; () banked
  5628  000FC2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5629  000FC4  0100               	movlb	0	; () banked
  5630  000FC6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5631  000FC8  0E00               	movlw	0
  5632  000FCA  0100               	movlb	0	; () banked
  5633  000FCC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5634  000FCE  0E00               	movlw	0
  5635  000FD0  0100               	movlb	0	; () banked
  5636  000FD2  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5637                           
  5638                           ; BSR set to: 0
  5639  000FD4  0100               	movlb	0	; () banked
  5640  000FD6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5641  000FD8  0100               	movlb	0	; () banked
  5642  000FDA  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5643  000FDC  CFF3 F095          	movff	prodl,___flmul@temp
  5644  000FE0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5645  000FE4  0100               	movlb	0	; () banked
  5646  000FE6  5195               	movf	___flmul@temp& (0+255),w,b
  5647  000FE8  0100               	movlb	0	; () banked
  5648  000FEA  2791               	addwf	___flmul@prod& (0+255),f,b
  5649  000FEC  0100               	movlb	0	; () banked
  5650  000FEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5651  000FF0  0100               	movlb	0	; () banked
  5652  000FF2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5653  000FF4  0E00               	movlw	0
  5654  000FF6  0100               	movlb	0	; () banked
  5655  000FF8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5656  000FFA  0E00               	movlw	0
  5657  000FFC  0100               	movlb	0	; () banked
  5658  000FFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5659                           
  5660                           ; BSR set to: 0
  5661  001000  0100               	movlb	0	; () banked
  5662  001002  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5663  001004  0100               	movlb	0	; () banked
  5664  001006  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5665  001008  CFF3 F095          	movff	prodl,___flmul@temp
  5666  00100C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5667                           
  5668                           ; BSR set to: 0
  5669  001010  0100               	movlb	0	; () banked
  5670  001012  5195               	movf	___flmul@temp& (0+255),w,b
  5671  001014  0100               	movlb	0	; () banked
  5672  001016  2791               	addwf	___flmul@prod& (0+255),f,b
  5673  001018  0100               	movlb	0	; () banked
  5674  00101A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5675  00101C  0100               	movlb	0	; () banked
  5676  00101E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5677  001020  0E00               	movlw	0
  5678  001022  0100               	movlb	0	; () banked
  5679  001024  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5680  001026  0E00               	movlw	0
  5681  001028  0100               	movlb	0	; () banked
  5682  00102A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5683  00102C  0100               	movlb	0	; () banked
  5684  00102E  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5685  001030  0100               	movlb	0	; () banked
  5686  001032  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5687  001034  CFF3 F095          	movff	prodl,___flmul@temp
  5688  001038  CFF4 F096          	movff	prodh,___flmul@temp+1
  5689                           
  5690                           ; BSR set to: 0
  5691  00103C  0100               	movlb	0	; () banked
  5692  00103E  5195               	movf	___flmul@temp& (0+255),w,b
  5693  001040  0100               	movlb	0	; () banked
  5694  001042  6F86               	movwf	??___flmul& (0+255),b
  5695  001044  0100               	movlb	0	; () banked
  5696  001046  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5697  001048  0100               	movlb	0	; () banked
  5698  00104A  6F87               	movwf	(??___flmul+1)& (0+255),b
  5699  00104C  0100               	movlb	0	; () banked
  5700  00104E  6B88               	clrf	(??___flmul+2)& (0+255),b
  5701  001050  0100               	movlb	0	; () banked
  5702  001052  6B89               	clrf	(??___flmul+3)& (0+255),b
  5703  001054  C088  F089         	movff	??___flmul+2,??___flmul+3
  5704  001058  C087  F088         	movff	??___flmul+1,??___flmul+2
  5705  00105C  C086  F087         	movff	??___flmul,??___flmul+1
  5706  001060  0100               	movlb	0	; () banked
  5707  001062  6B86               	clrf	??___flmul& (0+255),b
  5708  001064  0100               	movlb	0	; () banked
  5709  001066  5186               	movf	??___flmul& (0+255),w,b
  5710  001068  0100               	movlb	0	; () banked
  5711  00106A  2791               	addwf	___flmul@prod& (0+255),f,b
  5712  00106C  0100               	movlb	0	; () banked
  5713  00106E  5187               	movf	(??___flmul+1)& (0+255),w,b
  5714  001070  0100               	movlb	0	; () banked
  5715  001072  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5716  001074  0100               	movlb	0	; () banked
  5717  001076  5188               	movf	(??___flmul+2)& (0+255),w,b
  5718  001078  0100               	movlb	0	; () banked
  5719  00107A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5720  00107C  0100               	movlb	0	; () banked
  5721  00107E  5189               	movf	(??___flmul+3)& (0+255),w,b
  5722  001080  0100               	movlb	0	; () banked
  5723  001082  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5724                           
  5725                           ; BSR set to: 0
  5726  001084  C08C  F086         	movff	___flmul@grs,??___flmul
  5727  001088  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5728  00108C  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5729  001090  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5730  001094  0E19               	movlw	25
  5731  001096  D006               	goto	u5110
  5732  001098                     u5115:
  5733  001098  0100               	movlb	0	; () banked
  5734  00109A  90D8               	bcf	status,0,c
  5735  00109C  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5736  00109E  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5737  0010A0  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5738  0010A2  3386               	rrcf	??___flmul& (0+255),f,b
  5739  0010A4                     u5110:
  5740  0010A4  2EE8               	decfsz	wreg,f,c
  5741  0010A6  D7F8               	goto	u5115
  5742  0010A8  0100               	movlb	0	; () banked
  5743  0010AA  5186               	movf	??___flmul& (0+255),w,b
  5744  0010AC  0100               	movlb	0	; () banked
  5745  0010AE  2791               	addwf	___flmul@prod& (0+255),f,b
  5746  0010B0  0100               	movlb	0	; () banked
  5747  0010B2  5187               	movf	(??___flmul+1)& (0+255),w,b
  5748  0010B4  0100               	movlb	0	; () banked
  5749  0010B6  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5750  0010B8  0100               	movlb	0	; () banked
  5751  0010BA  5188               	movf	(??___flmul+2)& (0+255),w,b
  5752  0010BC  0100               	movlb	0	; () banked
  5753  0010BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5754  0010C0  0100               	movlb	0	; () banked
  5755  0010C2  5189               	movf	(??___flmul+3)& (0+255),w,b
  5756  0010C4  0100               	movlb	0	; () banked
  5757  0010C6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5758                           
  5759                           ; BSR set to: 0
  5760  0010C8  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5761  0010CC  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5762  0010D0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5763  0010D4  0100               	movlb	0	; () banked
  5764  0010D6  6B8C               	clrf	___flmul@grs& (0+255),b
  5765                           
  5766                           ; BSR set to: 0
  5767  0010D8  0100               	movlb	0	; () banked
  5768  0010DA  518B               	movf	___flmul@aexp& (0+255),w,b
  5769  0010DC  C090  F086         	movff	___flmul@bexp,??___flmul
  5770  0010E0  0100               	movlb	0	; () banked
  5771  0010E2  6B87               	clrf	(??___flmul+1)& (0+255),b
  5772  0010E4  0100               	movlb	0	; () banked
  5773  0010E6  2786               	addwf	??___flmul& (0+255),f,b
  5774  0010E8  0E00               	movlw	0
  5775  0010EA  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5776  0010EC  0E82               	movlw	130
  5777  0010EE  0100               	movlb	0	; () banked
  5778  0010F0  2586               	addwf	??___flmul& (0+255),w,b
  5779  0010F2  0100               	movlb	0	; () banked
  5780  0010F4  6F95               	movwf	___flmul@temp& (0+255),b
  5781  0010F6  0EFF               	movlw	255
  5782  0010F8  0100               	movlb	0	; () banked
  5783  0010FA  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5784  0010FC  0100               	movlb	0	; () banked
  5785  0010FE  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5786  001100  D015               	goto	l4571
  5787  001102                     l4565:
  5788                           
  5789                           ; BSR set to: 0
  5790  001102  0100               	movlb	0	; () banked
  5791  001104  90D8               	bcf	status,0,c
  5792  001106  3791               	rlcf	___flmul@prod& (0+255),f,b
  5793  001108  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5794  00110A  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5795  00110C  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5796                           
  5797                           ; BSR set to: 0
  5798  00110E  0100               	movlb	0	; () banked
  5799  001110  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5800  001112  D002               	goto	l1058
  5801                           
  5802                           ; BSR set to: 0
  5803  001114  0100               	movlb	0	; () banked
  5804  001116  8191               	bsf	___flmul@prod& (0+255),0,b
  5805  001118                     l1058:
  5806                           
  5807                           ; BSR set to: 0
  5808  001118  0100               	movlb	0	; () banked
  5809  00111A  90D8               	bcf	status,0,c
  5810  00111C  378C               	rlcf	___flmul@grs& (0+255),f,b
  5811  00111E  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5812  001120  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5813  001122  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5814  001124  0100               	movlb	0	; () banked
  5815  001126  0795               	decf	___flmul@temp& (0+255),f,b
  5816  001128  A0D8               	btfss	status,0,c
  5817  00112A  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5818  00112C                     l4571:
  5819                           
  5820                           ; BSR set to: 0
  5821  00112C  0100               	movlb	0	; () banked
  5822  00112E  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5823  001130  D7E8               	goto	l4565
  5824                           
  5825                           ; BSR set to: 0
  5826                           
  5827                           ; BSR set to: 0
  5828  001132  0E00               	movlw	0
  5829  001134  0100               	movlb	0	; () banked
  5830  001136  6F8B               	movwf	___flmul@aexp& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833  001138  0100               	movlb	0	; () banked
  5834  00113A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5835  00113C  D024               	goto	l1060
  5836                           
  5837                           ; BSR set to: 0
  5838  00113E  0EFF               	movlw	255
  5839  001140  0100               	movlb	0	; () banked
  5840  001142  158C               	andwf	___flmul@grs& (0+255),w,b
  5841  001144  0100               	movlb	0	; () banked
  5842  001146  6F86               	movwf	??___flmul& (0+255),b
  5843  001148  0EFF               	movlw	255
  5844  00114A  0100               	movlb	0	; () banked
  5845  00114C  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5846  00114E  0100               	movlb	0	; () banked
  5847  001150  6F87               	movwf	(??___flmul+1)& (0+255),b
  5848  001152  0EFF               	movlw	255
  5849  001154  0100               	movlb	0	; () banked
  5850  001156  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5851  001158  0100               	movlb	0	; () banked
  5852  00115A  6F88               	movwf	(??___flmul+2)& (0+255),b
  5853  00115C  0E7F               	movlw	127
  5854  00115E  0100               	movlb	0	; () banked
  5855  001160  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5856  001162  0100               	movlb	0	; () banked
  5857  001164  6F89               	movwf	(??___flmul+3)& (0+255),b
  5858  001166  0100               	movlb	0	; () banked
  5859  001168  5186               	movf	??___flmul& (0+255),w,b
  5860  00116A  0100               	movlb	0	; () banked
  5861  00116C  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5862  00116E  0100               	movlb	0	; () banked
  5863  001170  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5864  001172  0100               	movlb	0	; () banked
  5865  001174  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5866  001176  A4D8               	btfss	status,2,c
  5867  001178  D003               	goto	l4581
  5868                           
  5869                           ; BSR set to: 0
  5870                           
  5871                           ; BSR set to: 0
  5872  00117A  0100               	movlb	0	; () banked
  5873  00117C  A191               	btfss	___flmul@prod& (0+255),0,b
  5874  00117E  D003               	goto	l1060
  5875  001180                     l4581:
  5876                           
  5877                           ; BSR set to: 0
  5878  001180  0E01               	movlw	1
  5879  001182  0100               	movlb	0	; () banked
  5880  001184  6F8B               	movwf	___flmul@aexp& (0+255),b
  5881  001186                     l1060:
  5882                           
  5883                           ; BSR set to: 0
  5884  001186  0100               	movlb	0	; () banked
  5885  001188  518B               	movf	___flmul@aexp& (0+255),w,b
  5886  00118A  0100               	movlb	0	; () banked
  5887  00118C  B4D8               	btfsc	status,2,c
  5888  00118E  D023               	goto	l4591
  5889                           
  5890                           ; BSR set to: 0
  5891  001190  0E01               	movlw	1
  5892  001192  0100               	movlb	0	; () banked
  5893  001194  2791               	addwf	___flmul@prod& (0+255),f,b
  5894  001196  0E00               	movlw	0
  5895  001198  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5896  00119A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5897  00119C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5898                           
  5899                           ; BSR set to: 0
  5900  00119E  0100               	movlb	0	; () banked
  5901  0011A0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  5902  0011A2  D019               	goto	l4591
  5903                           
  5904                           ; BSR set to: 0
  5905  0011A4  C091  F086         	movff	___flmul@prod,??___flmul
  5906  0011A8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  5907  0011AC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  5908  0011B0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  5909  0011B4  0100               	movlb	0	; () banked
  5910  0011B6  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  5911  0011B8  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5912  0011BA  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5913  0011BC  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5914  0011BE  3386               	rrcf	??___flmul& (0+255),f,b
  5915  0011C0  C086  F091         	movff	??___flmul,___flmul@prod
  5916  0011C4  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  5917  0011C8  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  5918  0011CC  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  5919                           
  5920                           ; BSR set to: 0
  5921  0011D0  0100               	movlb	0	; () banked
  5922  0011D2  4B95               	infsnz	___flmul@temp& (0+255),f,b
  5923  0011D4  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  5924  0011D6                     l4591:
  5925                           
  5926                           ; BSR set to: 0
  5927  0011D6  0100               	movlb	0	; () banked
  5928  0011D8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5929  0011DA  D010               	goto	l4595
  5930  0011DC  0100               	movlb	0	; () banked
  5931  0011DE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5932  0011E0  E104               	bnz	u5190
  5933  0011E2  0100               	movlb	0	; () banked
  5934  0011E4  2995               	incf	___flmul@temp& (0+255),w,b
  5935  0011E6  A0D8               	btfss	status,0,c
  5936  0011E8  D009               	goto	l4595
  5937  0011EA                     u5190:
  5938                           
  5939                           ; BSR set to: 0
  5940  0011EA  0E00               	movlw	0
  5941  0011EC  0100               	movlb	0	; () banked
  5942  0011EE  6F91               	movwf	___flmul@prod& (0+255),b
  5943  0011F0  0E00               	movlw	0
  5944  0011F2  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5945  0011F4  0E80               	movlw	128
  5946  0011F6  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5947  0011F8  0E7F               	movlw	127
  5948  0011FA  D02B               	goto	L7
  5949  0011FC                     l4595:
  5950                           
  5951                           ; BSR set to: 0
  5952  0011FC  0100               	movlb	0	; () banked
  5953  0011FE  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5954  001200  D007               	goto	l4597
  5955  001202  0100               	movlb	0	; () banked
  5956  001204  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5957  001206  E111               	bnz	l1068
  5958  001208  0100               	movlb	0	; () banked
  5959  00120A  0595               	decf	___flmul@temp& (0+255),w,b
  5960  00120C  B0D8               	btfsc	status,0,c
  5961  00120E  D00D               	goto	l1068
  5962  001210                     l4597:
  5963                           
  5964                           ; BSR set to: 0
  5965  001210  0E00               	movlw	0
  5966  001212  0100               	movlb	0	; () banked
  5967  001214  6F91               	movwf	___flmul@prod& (0+255),b
  5968  001216  0E00               	movlw	0
  5969  001218  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5970  00121A  0E00               	movlw	0
  5971  00121C  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5972  00121E  0E00               	movlw	0
  5973  001220  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5974  001222  0E00               	movlw	0
  5975  001224  0100               	movlb	0	; () banked
  5976  001226  6F8A               	movwf	___flmul@sign& (0+255),b
  5977  001228  D015               	goto	l4607
  5978  00122A                     l1068:
  5979                           
  5980                           ; BSR set to: 0
  5981  00122A  C095  F090         	movff	___flmul@temp,___flmul@bexp
  5982                           
  5983                           ; BSR set to: 0
  5984  00122E  0EFF               	movlw	255
  5985  001230  0100               	movlb	0	; () banked
  5986  001232  1791               	andwf	___flmul@prod& (0+255),f,b
  5987  001234  0EFF               	movlw	255
  5988  001236  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  5989  001238  0E7F               	movlw	127
  5990  00123A  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  5991  00123C  0E00               	movlw	0
  5992  00123E  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  5993                           
  5994                           ; BSR set to: 0
  5995  001240  0100               	movlb	0	; () banked
  5996  001242  A190               	btfss	___flmul@bexp& (0+255),0,b
  5997  001244  D002               	goto	l4605
  5998                           
  5999                           ; BSR set to: 0
  6000  001246  0100               	movlb	0	; () banked
  6001  001248  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  6002  00124A                     l4605:
  6003                           
  6004                           ; BSR set to: 0
  6005  00124A  0100               	movlb	0	; () banked
  6006  00124C  90D8               	bcf	status,0,c
  6007  00124E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6008  001250  0100               	movlb	0	; () banked
  6009  001252                     L7:
  6010  001252  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6011  001254                     l4607:
  6012                           
  6013                           ; BSR set to: 0
  6014  001254  0100               	movlb	0	; () banked
  6015  001256  518A               	movf	___flmul@sign& (0+255),w,b
  6016  001258  0100               	movlb	0	; () banked
  6017  00125A  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6018                           
  6019                           ; BSR set to: 0
  6020  00125C  C091  F07E         	movff	___flmul@prod,?___flmul
  6021  001260  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6022  001264  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6023  001268  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6024  00126C  0012               	return	
  6025  00126E                     __end_of___flmul:
  6026                           	opt stack 0
  6027                           tblptru	equ	0xFF8
  6028                           tblptrh	equ	0xFF7
  6029                           tblptrl	equ	0xFF6
  6030                           tablat	equ	0xFF5
  6031                           prodh	equ	0xFF4
  6032                           prodl	equ	0xFF3
  6033                           intcon	equ	0xFF2
  6034                           postinc0	equ	0xFEE
  6035                           wreg	equ	0xFE8
  6036                           indf2	equ	0xFDF
  6037                           postinc2	equ	0xFDE
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function ___awmod *****************
  6043 ;; Defined at:
  6044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  dividend        2   24[COMRAM] int 
  6047 ;;  divisor         2   26[COMRAM] int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  sign            1   29[COMRAM] unsigned char 
  6050 ;;  counter         1   28[COMRAM] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2   24[COMRAM] int 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6060 ;;      Params:         4       0       0       0
  6061 ;;      Locals:         2       0       0       0
  6062 ;;      Temps:          0       0       0       0
  6063 ;;      Totals:         6       0       0       0
  6064 ;;Total ram usage:        6 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    4
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_fround
  6071 ;;		_scale
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text17
  6076  002BFA                     __ptext17:
  6077                           	opt stack 0
  6078  002BFA                     ___awmod:
  6079                           	opt stack 23
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;incstack = 0
  6083  002BFA  0E00               	movlw	0
  6084  002BFC  6E41               	movwf	___awmod@sign,c
  6085  002BFE  AE3D               	btfss	___awmod@dividend+1,7,c
  6086  002C00  D006               	goto	l4665
  6087  002C02  6C3C               	negf	___awmod@dividend,c
  6088  002C04  1E3D               	comf	___awmod@dividend+1,f,c
  6089  002C06  B0D8               	btfsc	status,0,c
  6090  002C08  2A3D               	incf	___awmod@dividend+1,f,c
  6091  002C0A  0E01               	movlw	1
  6092  002C0C  6E41               	movwf	___awmod@sign,c
  6093  002C0E                     l4665:
  6094  002C0E  AE3F               	btfss	___awmod@divisor+1,7,c
  6095  002C10  D004               	goto	l4669
  6096  002C12  6C3E               	negf	___awmod@divisor,c
  6097  002C14  1E3F               	comf	___awmod@divisor+1,f,c
  6098  002C16  B0D8               	btfsc	status,0,c
  6099  002C18  2A3F               	incf	___awmod@divisor+1,f,c
  6100  002C1A                     l4669:
  6101  002C1A  503E               	movf	___awmod@divisor,w,c
  6102  002C1C  103F               	iorwf	___awmod@divisor+1,w,c
  6103  002C1E  B4D8               	btfsc	status,2,c
  6104  002C20  D018               	goto	l4685
  6105  002C22  0E01               	movlw	1
  6106  002C24  6E40               	movwf	___awmod@counter,c
  6107  002C26  D004               	goto	l4675
  6108  002C28                     l4673:
  6109  002C28  90D8               	bcf	status,0,c
  6110  002C2A  363E               	rlcf	___awmod@divisor,f,c
  6111  002C2C  363F               	rlcf	___awmod@divisor+1,f,c
  6112  002C2E  2A40               	incf	___awmod@counter,f,c
  6113  002C30                     l4675:
  6114  002C30  AE3F               	btfss	___awmod@divisor+1,7,c
  6115  002C32  D7FA               	goto	l4673
  6116  002C34                     l4677:
  6117  002C34  503E               	movf	___awmod@divisor,w,c
  6118  002C36  5C3C               	subwf	___awmod@dividend,w,c
  6119  002C38  503F               	movf	___awmod@divisor+1,w,c
  6120  002C3A  583D               	subwfb	___awmod@dividend+1,w,c
  6121  002C3C  A0D8               	btfss	status,0,c
  6122  002C3E  D004               	goto	l4681
  6123  002C40  503E               	movf	___awmod@divisor,w,c
  6124  002C42  5E3C               	subwf	___awmod@dividend,f,c
  6125  002C44  503F               	movf	___awmod@divisor+1,w,c
  6126  002C46  5A3D               	subwfb	___awmod@dividend+1,f,c
  6127  002C48                     l4681:
  6128  002C48  90D8               	bcf	status,0,c
  6129  002C4A  323F               	rrcf	___awmod@divisor+1,f,c
  6130  002C4C  323E               	rrcf	___awmod@divisor,f,c
  6131  002C4E  2E40               	decfsz	___awmod@counter,f,c
  6132  002C50  D7F1               	goto	l4677
  6133  002C52                     l4685:
  6134  002C52  5041               	movf	___awmod@sign,w,c
  6135  002C54  B4D8               	btfsc	status,2,c
  6136  002C56  D004               	goto	l4689
  6137  002C58  6C3C               	negf	___awmod@dividend,c
  6138  002C5A  1E3D               	comf	___awmod@dividend+1,f,c
  6139  002C5C  B0D8               	btfsc	status,0,c
  6140  002C5E  2A3D               	incf	___awmod@dividend+1,f,c
  6141  002C60                     l4689:
  6142  002C60  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6143  002C64  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6144  002C68  0012               	return	
  6145  002C6A                     __end_of___awmod:
  6146                           	opt stack 0
  6147                           tblptru	equ	0xFF8
  6148                           tblptrh	equ	0xFF7
  6149                           tblptrl	equ	0xFF6
  6150                           tablat	equ	0xFF5
  6151                           prodh	equ	0xFF4
  6152                           prodl	equ	0xFF3
  6153                           intcon	equ	0xFF2
  6154                           postinc0	equ	0xFEE
  6155                           wreg	equ	0xFE8
  6156                           indf2	equ	0xFDF
  6157                           postinc2	equ	0xFDE
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function ___awdiv *****************
  6163 ;; Defined at:
  6164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  dividend        2   16[BANK0 ] int 
  6167 ;;  divisor         2   18[BANK0 ] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  quotient        2   22[BANK0 ] int 
  6170 ;;  sign            1   21[BANK0 ] unsigned char 
  6171 ;;  counter         1   20[BANK0 ] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2   16[BANK0 ] int 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6181 ;;      Params:         0       4       0       0
  6182 ;;      Locals:         0       4       0       0
  6183 ;;      Temps:          0       0       0       0
  6184 ;;      Totals:         0       8       0       0
  6185 ;;Total ram usage:        8 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    4
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_fround
  6192 ;;		_scale
  6193 ;;		_sprintf
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text18
  6198  0028A6                     __ptext18:
  6199                           	opt stack 0
  6200  0028A6                     ___awdiv:
  6201                           	opt stack 23
  6202                           
  6203                           ;incstack = 0
  6204  0028A6  0E00               	movlw	0
  6205  0028A8  0100               	movlb	0	; () banked
  6206  0028AA  6F75               	movwf	___awdiv@sign& (0+255),b
  6207                           
  6208                           ; BSR set to: 0
  6209  0028AC  0100               	movlb	0	; () banked
  6210  0028AE  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6211  0028B0  D008               	goto	l4621
  6212                           
  6213                           ; BSR set to: 0
  6214  0028B2  0100               	movlb	0	; () banked
  6215  0028B4  6D72               	negf	___awdiv@divisor& (0+255),b
  6216  0028B6  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6217  0028B8  B0D8               	btfsc	status,0,c
  6218  0028BA  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6219                           
  6220                           ; BSR set to: 0
  6221  0028BC  0E01               	movlw	1
  6222  0028BE  0100               	movlb	0	; () banked
  6223  0028C0  6F75               	movwf	___awdiv@sign& (0+255),b
  6224  0028C2                     l4621:
  6225                           
  6226                           ; BSR set to: 0
  6227  0028C2  0100               	movlb	0	; () banked
  6228  0028C4  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6229  0028C6  D008               	goto	l4627
  6230                           
  6231                           ; BSR set to: 0
  6232  0028C8  0100               	movlb	0	; () banked
  6233  0028CA  6D70               	negf	___awdiv@dividend& (0+255),b
  6234  0028CC  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6235  0028CE  B0D8               	btfsc	status,0,c
  6236  0028D0  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  0028D2  0E01               	movlw	1
  6240  0028D4  0100               	movlb	0	; () banked
  6241  0028D6  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6242  0028D8                     l4627:
  6243                           
  6244                           ; BSR set to: 0
  6245  0028D8  0E00               	movlw	0
  6246  0028DA  0100               	movlb	0	; () banked
  6247  0028DC  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6248  0028DE  0E00               	movlw	0
  6249  0028E0  6F76               	movwf	___awdiv@quotient& (0+255),b
  6250                           
  6251                           ; BSR set to: 0
  6252  0028E2  0100               	movlb	0	; () banked
  6253  0028E4  5172               	movf	___awdiv@divisor& (0+255),w,b
  6254  0028E6  0100               	movlb	0	; () banked
  6255  0028E8  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6256  0028EA  B4D8               	btfsc	status,2,c
  6257  0028EC  D02C               	goto	l4649
  6258                           
  6259                           ; BSR set to: 0
  6260  0028EE  0E01               	movlw	1
  6261  0028F0  0100               	movlb	0	; () banked
  6262  0028F2  6F74               	movwf	___awdiv@counter& (0+255),b
  6263  0028F4  D006               	goto	l4635
  6264  0028F6                     l4633:
  6265                           
  6266                           ; BSR set to: 0
  6267  0028F6  0100               	movlb	0	; () banked
  6268  0028F8  90D8               	bcf	status,0,c
  6269  0028FA  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6270  0028FC  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6271  0028FE  0100               	movlb	0	; () banked
  6272  002900  2B74               	incf	___awdiv@counter& (0+255),f,b
  6273  002902                     l4635:
  6274                           
  6275                           ; BSR set to: 0
  6276  002902  0100               	movlb	0	; () banked
  6277  002904  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6278  002906  D7F7               	goto	l4633
  6279  002908                     l4637:
  6280                           
  6281                           ; BSR set to: 0
  6282  002908  0100               	movlb	0	; () banked
  6283  00290A  90D8               	bcf	status,0,c
  6284  00290C  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6285  00290E  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6286                           
  6287                           ; BSR set to: 0
  6288  002910  0100               	movlb	0	; () banked
  6289  002912  5172               	movf	___awdiv@divisor& (0+255),w,b
  6290  002914  0100               	movlb	0	; () banked
  6291  002916  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6292  002918  0100               	movlb	0	; () banked
  6293  00291A  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6294  00291C  0100               	movlb	0	; () banked
  6295  00291E  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6296  002920  A0D8               	btfss	status,0,c
  6297  002922  D00A               	goto	l4645
  6298                           
  6299                           ; BSR set to: 0
  6300  002924  0100               	movlb	0	; () banked
  6301  002926  5172               	movf	___awdiv@divisor& (0+255),w,b
  6302  002928  0100               	movlb	0	; () banked
  6303  00292A  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6304  00292C  0100               	movlb	0	; () banked
  6305  00292E  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6306  002930  0100               	movlb	0	; () banked
  6307  002932  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6308                           
  6309                           ; BSR set to: 0
  6310  002934  0100               	movlb	0	; () banked
  6311  002936  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6312  002938                     l4645:
  6313                           
  6314                           ; BSR set to: 0
  6315  002938  0100               	movlb	0	; () banked
  6316  00293A  90D8               	bcf	status,0,c
  6317  00293C  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6318  00293E  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6319                           
  6320                           ; BSR set to: 0
  6321  002940  0100               	movlb	0	; () banked
  6322  002942  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6323  002944  D7E1               	goto	l4637
  6324  002946                     l4649:
  6325                           
  6326                           ; BSR set to: 0
  6327  002946  0100               	movlb	0	; () banked
  6328  002948  5175               	movf	___awdiv@sign& (0+255),w,b
  6329  00294A  0100               	movlb	0	; () banked
  6330  00294C  B4D8               	btfsc	status,2,c
  6331  00294E  D005               	goto	l4653
  6332                           
  6333                           ; BSR set to: 0
  6334  002950  0100               	movlb	0	; () banked
  6335  002952  6D76               	negf	___awdiv@quotient& (0+255),b
  6336  002954  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6337  002956  B0D8               	btfsc	status,0,c
  6338  002958  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6339  00295A                     l4653:
  6340                           
  6341                           ; BSR set to: 0
  6342  00295A  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6343  00295E  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6344  002962  0012               	return	
  6345  002964                     __end_of___awdiv:
  6346                           	opt stack 0
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           indf2	equ	0xFDF
  6357                           postinc2	equ	0xFDE
  6358                           fsr2h	equ	0xFDA
  6359                           fsr2l	equ	0xFD9
  6360                           status	equ	0xFD8
  6361                           
  6362 ;; *************** function __tdiv_to_l_ *****************
  6363 ;; Defined at:
  6364 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  f1              4   16[BANK0 ] float 
  6367 ;;  f2              4   20[BANK0 ] float 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  quot            4   24[BANK0 ] unsigned long 
  6370 ;;  exp1            1   29[BANK0 ] unsigned char 
  6371 ;;  cntr            1   28[BANK0 ] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  4   16[BANK0 ] unsigned long 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6381 ;;      Params:         0       8       0       0
  6382 ;;      Locals:         0       6       0       0
  6383 ;;      Temps:          3       0       0       0
  6384 ;;      Totals:         3      14       0       0
  6385 ;;Total ram usage:       17 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    4
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_sprintf
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text19
  6396  001F00                     __ptext19:
  6397                           	opt stack 0
  6398  001F00                     __tdiv_to_l_:
  6399                           	opt stack 24
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;incstack = 0
  6403  001F00  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6404  001F04  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6405  001F06  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6406  001F08  0100               	movlb	0	; () banked
  6407  001F0A  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6408  001F0C  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6409  001F0E  E301               	bnc	u5431
  6410  001F10  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6411  001F12                     u5431:
  6412  001F12  503C               	movf	??__tdiv_to_l_,w,c
  6413  001F14  0100               	movlb	0	; () banked
  6414  001F16  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6415  001F18  0100               	movlb	0	; () banked
  6416  001F1A  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6417  001F1C  A4D8               	btfss	status,2,c
  6418  001F1E  D00A               	goto	l4793
  6419                           
  6420                           ; BSR set to: 0
  6421  001F20  0E00               	movlw	0
  6422  001F22  0100               	movlb	0	; () banked
  6423  001F24  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6424  001F26  0E00               	movlw	0
  6425  001F28  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6426  001F2A  0E00               	movlw	0
  6427  001F2C  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6428  001F2E  0E00               	movlw	0
  6429  001F30  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432  001F32  0012               	return	
  6433  001F34                     l4793:
  6434                           
  6435                           ; BSR set to: 0
  6436  001F34  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6437  001F38  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6438  001F3A  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6439  001F3C  0100               	movlb	0	; () banked
  6440  001F3E  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6441  001F40  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6442  001F42  E301               	bnc	u5451
  6443  001F44  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6444  001F46                     u5451:
  6445  001F46  503C               	movf	??__tdiv_to_l_,w,c
  6446  001F48  0100               	movlb	0	; () banked
  6447  001F4A  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6448  001F4C  0100               	movlb	0	; () banked
  6449  001F4E  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6450  001F50  A4D8               	btfss	status,2,c
  6451  001F52  D00A               	goto	l4799
  6452                           
  6453                           ; BSR set to: 0
  6454  001F54  0E00               	movlw	0
  6455  001F56  0100               	movlb	0	; () banked
  6456  001F58  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6457  001F5A  0E00               	movlw	0
  6458  001F5C  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6459  001F5E  0E00               	movlw	0
  6460  001F60  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6461  001F62  0E00               	movlw	0
  6462  001F64  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6463                           
  6464                           ; BSR set to: 0
  6465  001F66  0012               	return	
  6466  001F68                     l4799:
  6467                           
  6468                           ; BSR set to: 0
  6469  001F68  0100               	movlb	0	; () banked
  6470  001F6A  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6471                           
  6472                           ; BSR set to: 0
  6473  001F6C  0EFF               	movlw	255
  6474  001F6E  0100               	movlb	0	; () banked
  6475  001F70  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6476  001F72  0EFF               	movlw	255
  6477  001F74  0100               	movlb	0	; () banked
  6478  001F76  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6479  001F78  0E00               	movlw	0
  6480  001F7A  0100               	movlb	0	; () banked
  6481  001F7C  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6482  001F7E  0100               	movlb	0	; () banked
  6483  001F80  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6484                           
  6485                           ; BSR set to: 0
  6486  001F82  0EFF               	movlw	255
  6487  001F84  0100               	movlb	0	; () banked
  6488  001F86  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6489  001F88  0EFF               	movlw	255
  6490  001F8A  0100               	movlb	0	; () banked
  6491  001F8C  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6492  001F8E  0E00               	movlw	0
  6493  001F90  0100               	movlb	0	; () banked
  6494  001F92  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6495                           
  6496                           ; BSR set to: 0
  6497  001F94  0E00               	movlw	0
  6498  001F96  0100               	movlb	0	; () banked
  6499  001F98  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6500  001F9A  0E00               	movlw	0
  6501  001F9C  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6502  001F9E  0E00               	movlw	0
  6503  001FA0  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6504  001FA2  0E00               	movlw	0
  6505  001FA4  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6506                           
  6507                           ; BSR set to: 0
  6508  001FA6  0E7F               	movlw	127
  6509  001FA8  0100               	movlb	0	; () banked
  6510  001FAA  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6511                           
  6512                           ; BSR set to: 0
  6513  001FAC  0100               	movlb	0	; () banked
  6514  001FAE  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6515  001FB0  0F98               	addlw	152
  6516  001FB2  0100               	movlb	0	; () banked
  6517  001FB4  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6518                           
  6519                           ; BSR set to: 0
  6520  001FB6  0E18               	movlw	24
  6521  001FB8  0100               	movlb	0	; () banked
  6522  001FBA  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6523  001FBC                     l775:
  6524                           
  6525                           ; BSR set to: 0
  6526  001FBC  0100               	movlb	0	; () banked
  6527  001FBE  90D8               	bcf	status,0,c
  6528  001FC0  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6529  001FC2  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6530  001FC4  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6531  001FC6  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6532                           
  6533                           ; BSR set to: 0
  6534  001FC8  0100               	movlb	0	; () banked
  6535  001FCA  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6536  001FCC  0100               	movlb	0	; () banked
  6537  001FCE  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6538  001FD0  0100               	movlb	0	; () banked
  6539  001FD2  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6540  001FD4  0100               	movlb	0	; () banked
  6541  001FD6  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6542  001FD8  0100               	movlb	0	; () banked
  6543  001FDA  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6544  001FDC  0100               	movlb	0	; () banked
  6545  001FDE  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6546  001FE0  A0D8               	btfss	status,0,c
  6547  001FE2  D00E               	goto	l776
  6548                           
  6549                           ; BSR set to: 0
  6550  001FE4  0100               	movlb	0	; () banked
  6551  001FE6  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6552  001FE8  0100               	movlb	0	; () banked
  6553  001FEA  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6554  001FEC  0100               	movlb	0	; () banked
  6555  001FEE  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6556  001FF0  0100               	movlb	0	; () banked
  6557  001FF2  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6558  001FF4  0100               	movlb	0	; () banked
  6559  001FF6  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6560  001FF8  0100               	movlb	0	; () banked
  6561  001FFA  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6562                           
  6563                           ; BSR set to: 0
  6564  001FFC  0100               	movlb	0	; () banked
  6565  001FFE  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6566  002000                     l776:
  6567                           
  6568                           ; BSR set to: 0
  6569  002000  0100               	movlb	0	; () banked
  6570  002002  90D8               	bcf	status,0,c
  6571  002004  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6572  002006  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6573  002008  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576  00200A  0100               	movlb	0	; () banked
  6577  00200C  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6578  00200E  D7D6               	goto	l775
  6579                           
  6580                           ; BSR set to: 0
  6581                           
  6582                           ; BSR set to: 0
  6583  002010  0100               	movlb	0	; () banked
  6584  002012  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6585  002014  D01A               	goto	l4833
  6586                           
  6587                           ; BSR set to: 0
  6588  002016  0100               	movlb	0	; () banked
  6589  002018  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6590  00201A  0A80               	xorlw	128
  6591  00201C  0F97               	addlw	151
  6592  00201E  B0D8               	btfsc	status,0,c
  6593  002020  D00A               	goto	l4829
  6594                           
  6595                           ; BSR set to: 0
  6596  002022  0E00               	movlw	0
  6597  002024  0100               	movlb	0	; () banked
  6598  002026  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6599  002028  0E00               	movlw	0
  6600  00202A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6601  00202C  0E00               	movlw	0
  6602  00202E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6603  002030  0E00               	movlw	0
  6604  002032  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6605                           
  6606                           ; BSR set to: 0
  6607  002034  0012               	return	
  6608  002036                     l4829:
  6609                           
  6610                           ; BSR set to: 0
  6611  002036  0100               	movlb	0	; () banked
  6612  002038  90D8               	bcf	status,0,c
  6613  00203A  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6614  00203C  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6615  00203E  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6616  002040  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6617                           
  6618                           ; BSR set to: 0
  6619  002042  0100               	movlb	0	; () banked
  6620  002044  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6621  002046  D7F7               	goto	l4829
  6622                           
  6623                           ; BSR set to: 0
  6624  002048  D01B               	goto	l782
  6625  00204A                     l4833:
  6626                           
  6627                           ; BSR set to: 0
  6628  00204A  0E17               	movlw	23
  6629  00204C  0100               	movlb	0	; () banked
  6630  00204E  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6631  002050  D012               	goto	l4841
  6632                           
  6633                           ; BSR set to: 0
  6634  002052  0E00               	movlw	0
  6635  002054  0100               	movlb	0	; () banked
  6636  002056  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6637  002058  0E00               	movlw	0
  6638  00205A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6639  00205C  0E00               	movlw	0
  6640  00205E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6641  002060  0E00               	movlw	0
  6642  002062  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6643                           
  6644                           ; BSR set to: 0
  6645  002064  0012               	return	
  6646  002066                     l4839:
  6647                           
  6648                           ; BSR set to: 0
  6649  002066  0100               	movlb	0	; () banked
  6650  002068  90D8               	bcf	status,0,c
  6651  00206A  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6652  00206C  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6653  00206E  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6654  002070  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6655  002072  0100               	movlb	0	; () banked
  6656  002074  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6657  002076                     l4841:
  6658                           
  6659                           ; BSR set to: 0
  6660  002076  0100               	movlb	0	; () banked
  6661  002078  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6662  00207A  0100               	movlb	0	; () banked
  6663  00207C  A4D8               	btfss	status,2,c
  6664  00207E  D7F3               	goto	l4839
  6665  002080                     l782:
  6666                           
  6667                           ; BSR set to: 0
  6668  002080  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6669  002084  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6670  002088  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6671  00208C  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6672                           
  6673                           ; BSR set to: 0
  6674  002090  0012               	return		;funcret
  6675  002092                     __end_of__tdiv_to_l_:
  6676                           	opt stack 0
  6677                           tblptru	equ	0xFF8
  6678                           tblptrh	equ	0xFF7
  6679                           tblptrl	equ	0xFF6
  6680                           tablat	equ	0xFF5
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           postinc0	equ	0xFEE
  6685                           wreg	equ	0xFE8
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function __div_to_l_ *****************
  6693 ;; Defined at:
  6694 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  f1              4   16[BANK0 ] unsigned long 
  6697 ;;  f2              4   20[BANK0 ] unsigned long 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  quot            4   24[COMRAM] unsigned long 
  6700 ;;  exp1            1   29[COMRAM] unsigned char 
  6701 ;;  cntr            1   28[COMRAM] unsigned char 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  4   16[BANK0 ] unsigned long 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6711 ;;      Params:         0       8       0       0
  6712 ;;      Locals:         6       0       0       0
  6713 ;;      Temps:          0       0       0       0
  6714 ;;      Totals:         6       8       0       0
  6715 ;;Total ram usage:       14 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    4
  6718 ;; This function calls:
  6719 ;;		Nothing
  6720 ;; This function is called by:
  6721 ;;		_sprintf
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text20
  6726  002200                     __ptext20:
  6727                           	opt stack 0
  6728  002200                     __div_to_l_:
  6729                           	opt stack 24
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;incstack = 0
  6733  002200  0100               	movlb	0	; () banked
  6734  002202  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6735  002204  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6736  002206  6E41               	movwf	__div_to_l_@exp1,c
  6737  002208  5041               	movf	__div_to_l_@exp1,w,c
  6738  00220A  A4D8               	btfss	status,2,c
  6739  00220C  D00A               	goto	l4849
  6740                           
  6741                           ; BSR set to: 0
  6742  00220E  0E00               	movlw	0
  6743  002210  0100               	movlb	0	; () banked
  6744  002212  6F70               	movwf	?__div_to_l_& (0+255),b
  6745  002214  0E00               	movlw	0
  6746  002216  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6747  002218  0E00               	movlw	0
  6748  00221A  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6749  00221C  0E00               	movlw	0
  6750  00221E  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753  002220  0012               	return	
  6754  002222                     l4849:
  6755                           
  6756                           ; BSR set to: 0
  6757  002222  0100               	movlb	0	; () banked
  6758  002224  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6759  002226  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6760  002228  6E40               	movwf	__div_to_l_@cntr,c
  6761  00222A  5040               	movf	__div_to_l_@cntr,w,c
  6762  00222C  A4D8               	btfss	status,2,c
  6763  00222E  D00A               	goto	l4855
  6764                           
  6765                           ; BSR set to: 0
  6766  002230  0E00               	movlw	0
  6767  002232  0100               	movlb	0	; () banked
  6768  002234  6F70               	movwf	?__div_to_l_& (0+255),b
  6769  002236  0E00               	movlw	0
  6770  002238  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6771  00223A  0E00               	movlw	0
  6772  00223C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6773  00223E  0E00               	movlw	0
  6774  002240  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6775                           
  6776                           ; BSR set to: 0
  6777  002242  0012               	return	
  6778  002244                     l4855:
  6779                           
  6780                           ; BSR set to: 0
  6781  002244  0100               	movlb	0	; () banked
  6782  002246  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6783                           
  6784                           ; BSR set to: 0
  6785  002248  0EFF               	movlw	255
  6786  00224A  0100               	movlb	0	; () banked
  6787  00224C  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6788  00224E  0EFF               	movlw	255
  6789  002250  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6790  002252  0EFF               	movlw	255
  6791  002254  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6792  002256  0E00               	movlw	0
  6793  002258  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6794                           
  6795                           ; BSR set to: 0
  6796  00225A  0100               	movlb	0	; () banked
  6797  00225C  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6798  00225E  0EFF               	movlw	255
  6799  002260  0100               	movlb	0	; () banked
  6800  002262  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6801  002264  0EFF               	movlw	255
  6802  002266  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6803  002268  0EFF               	movlw	255
  6804  00226A  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6805  00226C  0E00               	movlw	0
  6806  00226E  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 0
  6809  002270  0E00               	movlw	0
  6810  002272  6E3C               	movwf	__div_to_l_@quot,c
  6811  002274  0E00               	movlw	0
  6812  002276  6E3D               	movwf	__div_to_l_@quot+1,c
  6813  002278  0E00               	movlw	0
  6814  00227A  6E3E               	movwf	__div_to_l_@quot+2,c
  6815  00227C  0E00               	movlw	0
  6816  00227E  6E3F               	movwf	__div_to_l_@quot+3,c
  6817                           
  6818                           ; BSR set to: 0
  6819  002280  0E7F               	movlw	127
  6820  002282  5E41               	subwf	__div_to_l_@exp1,f,c
  6821                           
  6822                           ; BSR set to: 0
  6823  002284  5040               	movf	__div_to_l_@cntr,w,c
  6824  002286  0FA0               	addlw	160
  6825  002288  5E41               	subwf	__div_to_l_@exp1,f,c
  6826                           
  6827                           ; BSR set to: 0
  6828  00228A  0E20               	movlw	32
  6829  00228C  6E40               	movwf	__div_to_l_@cntr,c
  6830  00228E                     l4869:
  6831                           
  6832                           ; BSR set to: 0
  6833  00228E  90D8               	bcf	status,0,c
  6834  002290  363C               	rlcf	__div_to_l_@quot,f,c
  6835  002292  363D               	rlcf	__div_to_l_@quot+1,f,c
  6836  002294  363E               	rlcf	__div_to_l_@quot+2,f,c
  6837  002296  363F               	rlcf	__div_to_l_@quot+3,f,c
  6838                           
  6839                           ; BSR set to: 0
  6840  002298  0100               	movlb	0	; () banked
  6841  00229A  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6842  00229C  0100               	movlb	0	; () banked
  6843  00229E  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6844  0022A0  0100               	movlb	0	; () banked
  6845  0022A2  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6846  0022A4  0100               	movlb	0	; () banked
  6847  0022A6  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6848  0022A8  0100               	movlb	0	; () banked
  6849  0022AA  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6850  0022AC  0100               	movlb	0	; () banked
  6851  0022AE  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6852  0022B0  0100               	movlb	0	; () banked
  6853  0022B2  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6854  0022B4  0100               	movlb	0	; () banked
  6855  0022B6  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6856  0022B8  A0D8               	btfss	status,0,c
  6857  0022BA  D011               	goto	l4877
  6858                           
  6859                           ; BSR set to: 0
  6860  0022BC  0100               	movlb	0	; () banked
  6861  0022BE  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6862  0022C0  0100               	movlb	0	; () banked
  6863  0022C2  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6864  0022C4  0100               	movlb	0	; () banked
  6865  0022C6  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6866  0022C8  0100               	movlb	0	; () banked
  6867  0022CA  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6868  0022CC  0100               	movlb	0	; () banked
  6869  0022CE  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6870  0022D0  0100               	movlb	0	; () banked
  6871  0022D2  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6872  0022D4  0100               	movlb	0	; () banked
  6873  0022D6  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6874  0022D8  0100               	movlb	0	; () banked
  6875  0022DA  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6876                           
  6877                           ; BSR set to: 0
  6878  0022DC  803C               	bsf	__div_to_l_@quot,0,c
  6879  0022DE                     l4877:
  6880                           
  6881                           ; BSR set to: 0
  6882  0022DE  0100               	movlb	0	; () banked
  6883  0022E0  90D8               	bcf	status,0,c
  6884  0022E2  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6885  0022E4  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6886  0022E6  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6887  0022E8  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6888                           
  6889                           ; BSR set to: 0
  6890  0022EA  2E40               	decfsz	__div_to_l_@cntr,f,c
  6891  0022EC  D7D0               	goto	l4869
  6892                           
  6893                           ; BSR set to: 0
  6894                           
  6895                           ; BSR set to: 0
  6896  0022EE  AE41               	btfss	__div_to_l_@exp1,7,c
  6897  0022F0  D017               	goto	l4893
  6898                           
  6899                           ; BSR set to: 0
  6900  0022F2  5041               	movf	__div_to_l_@exp1,w,c
  6901  0022F4  0A80               	xorlw	128
  6902  0022F6  0F9F               	addlw	159
  6903  0022F8  B0D8               	btfsc	status,0,c
  6904  0022FA  D00A               	goto	l4889
  6905                           
  6906                           ; BSR set to: 0
  6907  0022FC  0E00               	movlw	0
  6908  0022FE  0100               	movlb	0	; () banked
  6909  002300  6F70               	movwf	?__div_to_l_& (0+255),b
  6910  002302  0E00               	movlw	0
  6911  002304  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6912  002306  0E00               	movlw	0
  6913  002308  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6914  00230A  0E00               	movlw	0
  6915  00230C  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6916                           
  6917                           ; BSR set to: 0
  6918  00230E  0012               	return	
  6919  002310                     l4889:
  6920  002310  90D8               	bcf	status,0,c
  6921  002312  323F               	rrcf	__div_to_l_@quot+3,f,c
  6922  002314  323E               	rrcf	__div_to_l_@quot+2,f,c
  6923  002316  323D               	rrcf	__div_to_l_@quot+1,f,c
  6924  002318  323C               	rrcf	__div_to_l_@quot,f,c
  6925  00231A  3E41               	incfsz	__div_to_l_@exp1,f,c
  6926  00231C  D7F9               	goto	l4889
  6927  00231E  D016               	goto	l678
  6928  002320                     l4893:
  6929  002320  0E1F               	movlw	31
  6930  002322  6441               	cpfsgt	__div_to_l_@exp1,c
  6931  002324  D010               	goto	l4901
  6932  002326  0E00               	movlw	0
  6933  002328  0100               	movlb	0	; () banked
  6934  00232A  6F70               	movwf	?__div_to_l_& (0+255),b
  6935  00232C  0E00               	movlw	0
  6936  00232E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6937  002330  0E00               	movlw	0
  6938  002332  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6939  002334  0E00               	movlw	0
  6940  002336  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6941                           
  6942                           ; BSR set to: 0
  6943  002338  0012               	return	
  6944  00233A                     l4899:
  6945  00233A  90D8               	bcf	status,0,c
  6946  00233C  363C               	rlcf	__div_to_l_@quot,f,c
  6947  00233E  363D               	rlcf	__div_to_l_@quot+1,f,c
  6948  002340  363E               	rlcf	__div_to_l_@quot+2,f,c
  6949  002342  363F               	rlcf	__div_to_l_@quot+3,f,c
  6950  002344  0641               	decf	__div_to_l_@exp1,f,c
  6951  002346                     l4901:
  6952  002346  5041               	movf	__div_to_l_@exp1,w,c
  6953  002348  A4D8               	btfss	status,2,c
  6954  00234A  D7F7               	goto	l4899
  6955  00234C                     l678:
  6956  00234C  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  6957  002350  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6958  002354  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6959  002358  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6960  00235C  0012               	return		;funcret
  6961  00235E                     __end_of__div_to_l_:
  6962                           	opt stack 0
  6963                           tblptru	equ	0xFF8
  6964                           tblptrh	equ	0xFF7
  6965                           tblptrl	equ	0xFF6
  6966                           tablat	equ	0xFF5
  6967                           prodh	equ	0xFF4
  6968                           prodl	equ	0xFF3
  6969                           intcon	equ	0xFF2
  6970                           postinc0	equ	0xFEE
  6971                           wreg	equ	0xFE8
  6972                           indf2	equ	0xFDF
  6973                           postinc2	equ	0xFDE
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function ___xxtofl *****************
  6979 ;; Defined at:
  6980 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  sign            1    wreg     unsigned char 
  6983 ;;  val             4   16[BANK0 ] long 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  sign            1   24[BANK0 ] unsigned char 
  6986 ;;  arg             4   26[BANK0 ] unsigned long 
  6987 ;;  exp             1   25[BANK0 ] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  4   16[BANK0 ] unsigned char 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6997 ;;      Params:         0       4       0       0
  6998 ;;      Locals:         0       6       0       0
  6999 ;;      Temps:          0       4       0       0
  7000 ;;      Totals:         0      14       0       0
  7001 ;;Total ram usage:       14 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    4
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_main
  7008 ;;		_LCD_Handler
  7009 ;;		_sprintf
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text21
  7014  001D32                     __ptext21:
  7015                           	opt stack 0
  7016  001D32                     ___xxtofl:
  7017                           	opt stack 26
  7018                           
  7019                           ;incstack = 0
  7020                           ;___xxtofl@sign stored from wreg
  7021  001D32  0100               	movlb	0	; () banked
  7022  001D34  6F78               	movwf	___xxtofl@sign& (0+255),b
  7023  001D36  0100               	movlb	0	; () banked
  7024  001D38  5178               	movf	___xxtofl@sign& (0+255),w,b
  7025  001D3A  0100               	movlb	0	; () banked
  7026  001D3C  B4D8               	btfsc	status,2,c
  7027  001D3E  D01E               	goto	l1073
  7028                           
  7029                           ; BSR set to: 0
  7030  001D40  0100               	movlb	0	; () banked
  7031  001D42  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7032  001D44  D01B               	goto	l1073
  7033                           
  7034                           ; BSR set to: 0
  7035  001D46  C070  F074         	movff	___xxtofl@val,??___xxtofl
  7036  001D4A  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  7037  001D4E  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  7038  001D52  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  7039  001D56  0100               	movlb	0	; () banked
  7040  001D58  1F74               	comf	??___xxtofl& (0+255),f,b
  7041  001D5A  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  7042  001D5C  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  7043  001D5E  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  7044  001D60  2B74               	incf	??___xxtofl& (0+255),f,b
  7045  001D62  0E00               	movlw	0
  7046  001D64  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7047  001D66  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7048  001D68  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7049  001D6A  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  7050  001D6E  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7051  001D72  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7052  001D76  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7053  001D7A  D008               	goto	l5027
  7054  001D7C                     l1073:
  7055                           
  7056                           ; BSR set to: 0
  7057  001D7C  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  7058  001D80  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7059  001D84  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7060  001D88  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7061  001D8C                     l5027:
  7062                           
  7063                           ; BSR set to: 0
  7064  001D8C  0100               	movlb	0	; () banked
  7065  001D8E  5170               	movf	___xxtofl@val& (0+255),w,b
  7066  001D90  0100               	movlb	0	; () banked
  7067  001D92  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7068  001D94  0100               	movlb	0	; () banked
  7069  001D96  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7070  001D98  0100               	movlb	0	; () banked
  7071  001D9A  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7072  001D9C  A4D8               	btfss	status,2,c
  7073  001D9E  D00A               	goto	l5033
  7074                           
  7075                           ; BSR set to: 0
  7076  001DA0  0E00               	movlw	0
  7077  001DA2  0100               	movlb	0	; () banked
  7078  001DA4  6F70               	movwf	?___xxtofl& (0+255),b
  7079  001DA6  0E00               	movlw	0
  7080  001DA8  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  7081  001DAA  0E00               	movlw	0
  7082  001DAC  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  7083  001DAE  0E00               	movlw	0
  7084  001DB0  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  7085                           
  7086                           ; BSR set to: 0
  7087  001DB2  0012               	return	
  7088  001DB4                     l5033:
  7089                           
  7090                           ; BSR set to: 0
  7091  001DB4  0E96               	movlw	150
  7092  001DB6  0100               	movlb	0	; () banked
  7093  001DB8  6F79               	movwf	___xxtofl@exp& (0+255),b
  7094  001DBA  D008               	goto	l5037
  7095  001DBC                     l5035:
  7096                           
  7097                           ; BSR set to: 0
  7098  001DBC  0100               	movlb	0	; () banked
  7099  001DBE  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7100  001DC0  0100               	movlb	0	; () banked
  7101  001DC2  90D8               	bcf	status,0,c
  7102  001DC4  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7103  001DC6  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7104  001DC8  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7105  001DCA  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7106  001DCC                     l5037:
  7107                           
  7108                           ; BSR set to: 0
  7109  001DCC  0E00               	movlw	0
  7110  001DCE  0100               	movlb	0	; () banked
  7111  001DD0  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7112  001DD2  0100               	movlb	0	; () banked
  7113  001DD4  6F74               	movwf	??___xxtofl& (0+255),b
  7114  001DD6  0E00               	movlw	0
  7115  001DD8  0100               	movlb	0	; () banked
  7116  001DDA  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7117  001DDC  0100               	movlb	0	; () banked
  7118  001DDE  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7119  001DE0  0E00               	movlw	0
  7120  001DE2  0100               	movlb	0	; () banked
  7121  001DE4  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7122  001DE6  0100               	movlb	0	; () banked
  7123  001DE8  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7124  001DEA  0EFE               	movlw	254
  7125  001DEC  0100               	movlb	0	; () banked
  7126  001DEE  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7127  001DF0  0100               	movlb	0	; () banked
  7128  001DF2  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7129  001DF4  0100               	movlb	0	; () banked
  7130  001DF6  5174               	movf	??___xxtofl& (0+255),w,b
  7131  001DF8  0100               	movlb	0	; () banked
  7132  001DFA  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7133  001DFC  0100               	movlb	0	; () banked
  7134  001DFE  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7135  001E00  0100               	movlb	0	; () banked
  7136  001E02  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7137  001E04  B4D8               	btfsc	status,2,c
  7138  001E06  D010               	goto	l1080
  7139  001E08  D7D9               	goto	l5035
  7140  001E0A                     l5039:
  7141                           
  7142                           ; BSR set to: 0
  7143  001E0A  0100               	movlb	0	; () banked
  7144  001E0C  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7145                           
  7146                           ; BSR set to: 0
  7147  001E0E  0E01               	movlw	1
  7148  001E10  0100               	movlb	0	; () banked
  7149  001E12  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7150  001E14  0E00               	movlw	0
  7151  001E16  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7152  001E18  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7153  001E1A  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7154                           
  7155                           ; BSR set to: 0
  7156  001E1C  0100               	movlb	0	; () banked
  7157  001E1E  90D8               	bcf	status,0,c
  7158  001E20  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7159  001E22  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7160  001E24  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7161  001E26  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7162  001E28                     l1080:
  7163                           
  7164                           ; BSR set to: 0
  7165  001E28  0E00               	movlw	0
  7166  001E2A  0100               	movlb	0	; () banked
  7167  001E2C  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7168  001E2E  0100               	movlb	0	; () banked
  7169  001E30  6F74               	movwf	??___xxtofl& (0+255),b
  7170  001E32  0E00               	movlw	0
  7171  001E34  0100               	movlb	0	; () banked
  7172  001E36  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7173  001E38  0100               	movlb	0	; () banked
  7174  001E3A  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7175  001E3C  0E00               	movlw	0
  7176  001E3E  0100               	movlb	0	; () banked
  7177  001E40  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7178  001E42  0100               	movlb	0	; () banked
  7179  001E44  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7180  001E46  0EFF               	movlw	255
  7181  001E48  0100               	movlb	0	; () banked
  7182  001E4A  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7183  001E4C  0100               	movlb	0	; () banked
  7184  001E4E  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7185  001E50  0100               	movlb	0	; () banked
  7186  001E52  5174               	movf	??___xxtofl& (0+255),w,b
  7187  001E54  0100               	movlb	0	; () banked
  7188  001E56  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7189  001E58  0100               	movlb	0	; () banked
  7190  001E5A  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7191  001E5C  0100               	movlb	0	; () banked
  7192  001E5E  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7193  001E60  B4D8               	btfsc	status,2,c
  7194  001E62  D009               	goto	l5047
  7195  001E64  D7D2               	goto	l5039
  7196  001E66                     l5045:
  7197                           
  7198                           ; BSR set to: 0
  7199  001E66  0100               	movlb	0	; () banked
  7200  001E68  0779               	decf	___xxtofl@exp& (0+255),f,b
  7201  001E6A  0100               	movlb	0	; () banked
  7202  001E6C  90D8               	bcf	status,0,c
  7203  001E6E  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7204  001E70  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7205  001E72  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7206  001E74  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7207  001E76                     l5047:
  7208                           
  7209                           ; BSR set to: 0
  7210  001E76  0100               	movlb	0	; () banked
  7211  001E78  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7212  001E7A  D004               	goto	l1087
  7213                           
  7214                           ; BSR set to: 0
  7215  001E7C  0E02               	movlw	2
  7216  001E7E  0100               	movlb	0	; () banked
  7217  001E80  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7218  001E82  D7F1               	goto	l5045
  7219  001E84                     l1087:
  7220                           
  7221                           ; BSR set to: 0
  7222  001E84  0100               	movlb	0	; () banked
  7223  001E86  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7224  001E88  D009               	goto	l1088
  7225                           
  7226                           ; BSR set to: 0
  7227  001E8A  0EFF               	movlw	255
  7228  001E8C  0100               	movlb	0	; () banked
  7229  001E8E  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7230  001E90  0EFF               	movlw	255
  7231  001E92  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7232  001E94  0E7F               	movlw	127
  7233  001E96  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7234  001E98  0EFF               	movlw	255
  7235  001E9A  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7236  001E9C                     l1088:
  7237                           
  7238                           ; BSR set to: 0
  7239  001E9C  0100               	movlb	0	; () banked
  7240  001E9E  90D8               	bcf	status,0,c
  7241  001EA0  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7242  001EA2  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7243  001EA6  0100               	movlb	0	; () banked
  7244  001EA8  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7245  001EAA  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7246  001EAC  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7247  001EAE  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7248  001EB2  0100               	movlb	0	; () banked
  7249  001EB4  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7250  001EB6  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7251  001EB8  6B74               	clrf	??___xxtofl& (0+255),b
  7252  001EBA  0100               	movlb	0	; () banked
  7253  001EBC  5174               	movf	??___xxtofl& (0+255),w,b
  7254  001EBE  0100               	movlb	0	; () banked
  7255  001EC0  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7256  001EC2  0100               	movlb	0	; () banked
  7257  001EC4  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7258  001EC6  0100               	movlb	0	; () banked
  7259  001EC8  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7260  001ECA  0100               	movlb	0	; () banked
  7261  001ECC  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7262  001ECE  0100               	movlb	0	; () banked
  7263  001ED0  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7264  001ED2  0100               	movlb	0	; () banked
  7265  001ED4  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7266  001ED6  0100               	movlb	0	; () banked
  7267  001ED8  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7268                           
  7269                           ; BSR set to: 0
  7270  001EDA  0100               	movlb	0	; () banked
  7271  001EDC  5178               	movf	___xxtofl@sign& (0+255),w,b
  7272  001EDE  0100               	movlb	0	; () banked
  7273  001EE0  B4D8               	btfsc	status,2,c
  7274  001EE2  D005               	goto	l5059
  7275                           
  7276                           ; BSR set to: 0
  7277  001EE4  0100               	movlb	0	; () banked
  7278  001EE6  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7279  001EE8  D002               	goto	l5059
  7280                           
  7281                           ; BSR set to: 0
  7282  001EEA  0100               	movlb	0	; () banked
  7283  001EEC  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7284  001EEE                     l5059:
  7285                           
  7286                           ; BSR set to: 0
  7287  001EEE  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7288  001EF2  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7289  001EF6  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7290  001EFA  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7291  001EFE  0012               	return	
  7292  001F00                     __end_of___xxtofl:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           indf2	equ	0xFDF
  7304                           postinc2	equ	0xFDE
  7305                           fsr2h	equ	0xFDA
  7306                           fsr2l	equ	0xFD9
  7307                           status	equ	0xFD8
  7308                           
  7309 ;; *************** function ___llmod *****************
  7310 ;; Defined at:
  7311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  dividend        4   16[BANK0 ] unsigned long 
  7314 ;;  divisor         4   20[BANK0 ] unsigned long 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  counter         1   24[COMRAM] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  4   16[BANK0 ] unsigned long 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7326 ;;      Params:         0       8       0       0
  7327 ;;      Locals:         1       0       0       0
  7328 ;;      Temps:          0       0       0       0
  7329 ;;      Totals:         1       8       0       0
  7330 ;;Total ram usage:        9 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    4
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_sprintf
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text22
  7341  002B66                     __ptext22:
  7342                           	opt stack 0
  7343  002B66                     ___llmod:
  7344                           	opt stack 24
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;incstack = 0
  7348  002B66  0100               	movlb	0	; () banked
  7349  002B68  5174               	movf	___llmod@divisor& (0+255),w,b
  7350  002B6A  0100               	movlb	0	; () banked
  7351  002B6C  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7352  002B6E  0100               	movlb	0	; () banked
  7353  002B70  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7354  002B72  0100               	movlb	0	; () banked
  7355  002B74  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7356  002B76  B4D8               	btfsc	status,2,c
  7357  002B78  D037               	goto	l881
  7358                           
  7359                           ; BSR set to: 0
  7360  002B7A  0E01               	movlw	1
  7361  002B7C  6E3C               	movwf	___llmod@counter,c
  7362  002B7E  D007               	goto	l5011
  7363  002B80                     l5009:
  7364                           
  7365                           ; BSR set to: 0
  7366  002B80  0100               	movlb	0	; () banked
  7367  002B82  90D8               	bcf	status,0,c
  7368  002B84  3774               	rlcf	___llmod@divisor& (0+255),f,b
  7369  002B86  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7370  002B88  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7371  002B8A  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7372  002B8C  2A3C               	incf	___llmod@counter,f,c
  7373  002B8E                     l5011:
  7374                           
  7375                           ; BSR set to: 0
  7376  002B8E  0100               	movlb	0	; () banked
  7377  002B90  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7378  002B92  D7F6               	goto	l5009
  7379  002B94                     l5013:
  7380                           
  7381                           ; BSR set to: 0
  7382  002B94  0100               	movlb	0	; () banked
  7383  002B96  5174               	movf	___llmod@divisor& (0+255),w,b
  7384  002B98  0100               	movlb	0	; () banked
  7385  002B9A  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7386  002B9C  0100               	movlb	0	; () banked
  7387  002B9E  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7388  002BA0  0100               	movlb	0	; () banked
  7389  002BA2  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7390  002BA4  0100               	movlb	0	; () banked
  7391  002BA6  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7392  002BA8  0100               	movlb	0	; () banked
  7393  002BAA  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7394  002BAC  0100               	movlb	0	; () banked
  7395  002BAE  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7396  002BB0  0100               	movlb	0	; () banked
  7397  002BB2  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7398  002BB4  A0D8               	btfss	status,0,c
  7399  002BB6  D010               	goto	l5017
  7400                           
  7401                           ; BSR set to: 0
  7402  002BB8  0100               	movlb	0	; () banked
  7403  002BBA  5174               	movf	___llmod@divisor& (0+255),w,b
  7404  002BBC  0100               	movlb	0	; () banked
  7405  002BBE  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7406  002BC0  0100               	movlb	0	; () banked
  7407  002BC2  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7408  002BC4  0100               	movlb	0	; () banked
  7409  002BC6  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7410  002BC8  0100               	movlb	0	; () banked
  7411  002BCA  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7412  002BCC  0100               	movlb	0	; () banked
  7413  002BCE  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7414  002BD0  0100               	movlb	0	; () banked
  7415  002BD2  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7416  002BD4  0100               	movlb	0	; () banked
  7417  002BD6  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7418  002BD8                     l5017:
  7419                           
  7420                           ; BSR set to: 0
  7421  002BD8  0100               	movlb	0	; () banked
  7422  002BDA  90D8               	bcf	status,0,c
  7423  002BDC  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7424  002BDE  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7425  002BE0  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7426  002BE2  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7427                           
  7428                           ; BSR set to: 0
  7429  002BE4  2E3C               	decfsz	___llmod@counter,f,c
  7430  002BE6  D7D6               	goto	l5013
  7431  002BE8                     l881:
  7432                           
  7433                           ; BSR set to: 0
  7434  002BE8  C070  F070         	movff	___llmod@dividend,?___llmod
  7435  002BEC  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7436  002BF0  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7437  002BF4  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7438                           
  7439                           ; BSR set to: 0
  7440  002BF8  0012               	return		;funcret
  7441  002BFA                     __end_of___llmod:
  7442                           	opt stack 0
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodh	equ	0xFF4
  7448                           prodl	equ	0xFF3
  7449                           intcon	equ	0xFF2
  7450                           postinc0	equ	0xFEE
  7451                           wreg	equ	0xFE8
  7452                           indf2	equ	0xFDF
  7453                           postinc2	equ	0xFDE
  7454                           fsr2h	equ	0xFDA
  7455                           fsr2l	equ	0xFD9
  7456                           status	equ	0xFD8
  7457                           
  7458 ;; *************** function ___lldiv *****************
  7459 ;; Defined at:
  7460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  dividend        4   16[BANK0 ] unsigned long 
  7463 ;;  divisor         4   20[BANK0 ] unsigned long 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  quotient        4   24[COMRAM] unsigned long 
  7466 ;;  counter         1   28[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  4   16[BANK0 ] unsigned long 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7476 ;;      Params:         0       8       0       0
  7477 ;;      Locals:         5       0       0       0
  7478 ;;      Temps:          0       0       0       0
  7479 ;;      Totals:         5       8       0       0
  7480 ;;Total ram usage:       13 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    4
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_sprintf
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text23
  7491  002A20                     __ptext23:
  7492                           	opt stack 0
  7493  002A20                     ___lldiv:
  7494                           	opt stack 24
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;incstack = 0
  7498  002A20  0E00               	movlw	0
  7499  002A22  6E3C               	movwf	___lldiv@quotient,c
  7500  002A24  0E00               	movlw	0
  7501  002A26  6E3D               	movwf	___lldiv@quotient+1,c
  7502  002A28  0E00               	movlw	0
  7503  002A2A  6E3E               	movwf	___lldiv@quotient+2,c
  7504  002A2C  0E00               	movlw	0
  7505  002A2E  6E3F               	movwf	___lldiv@quotient+3,c
  7506  002A30  0100               	movlb	0	; () banked
  7507  002A32  5174               	movf	___lldiv@divisor& (0+255),w,b
  7508  002A34  0100               	movlb	0	; () banked
  7509  002A36  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7510  002A38  0100               	movlb	0	; () banked
  7511  002A3A  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7512  002A3C  0100               	movlb	0	; () banked
  7513  002A3E  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7514  002A40  B4D8               	btfsc	status,2,c
  7515  002A42  D03D               	goto	l871
  7516                           
  7517                           ; BSR set to: 0
  7518  002A44  0E01               	movlw	1
  7519  002A46  6E40               	movwf	___lldiv@counter,c
  7520  002A48  D007               	goto	l4991
  7521  002A4A                     l4989:
  7522                           
  7523                           ; BSR set to: 0
  7524  002A4A  0100               	movlb	0	; () banked
  7525  002A4C  90D8               	bcf	status,0,c
  7526  002A4E  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7527  002A50  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7528  002A52  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7529  002A54  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7530  002A56  2A40               	incf	___lldiv@counter,f,c
  7531  002A58                     l4991:
  7532                           
  7533                           ; BSR set to: 0
  7534  002A58  0100               	movlb	0	; () banked
  7535  002A5A  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7536  002A5C  D7F6               	goto	l4989
  7537  002A5E                     l4993:
  7538                           
  7539                           ; BSR set to: 0
  7540  002A5E  90D8               	bcf	status,0,c
  7541  002A60  363C               	rlcf	___lldiv@quotient,f,c
  7542  002A62  363D               	rlcf	___lldiv@quotient+1,f,c
  7543  002A64  363E               	rlcf	___lldiv@quotient+2,f,c
  7544  002A66  363F               	rlcf	___lldiv@quotient+3,f,c
  7545                           
  7546                           ; BSR set to: 0
  7547  002A68  0100               	movlb	0	; () banked
  7548  002A6A  5174               	movf	___lldiv@divisor& (0+255),w,b
  7549  002A6C  0100               	movlb	0	; () banked
  7550  002A6E  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7551  002A70  0100               	movlb	0	; () banked
  7552  002A72  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7553  002A74  0100               	movlb	0	; () banked
  7554  002A76  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7555  002A78  0100               	movlb	0	; () banked
  7556  002A7A  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7557  002A7C  0100               	movlb	0	; () banked
  7558  002A7E  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7559  002A80  0100               	movlb	0	; () banked
  7560  002A82  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7561  002A84  0100               	movlb	0	; () banked
  7562  002A86  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7563  002A88  A0D8               	btfss	status,0,c
  7564  002A8A  D011               	goto	l5001
  7565                           
  7566                           ; BSR set to: 0
  7567  002A8C  0100               	movlb	0	; () banked
  7568  002A8E  5174               	movf	___lldiv@divisor& (0+255),w,b
  7569  002A90  0100               	movlb	0	; () banked
  7570  002A92  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7571  002A94  0100               	movlb	0	; () banked
  7572  002A96  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7573  002A98  0100               	movlb	0	; () banked
  7574  002A9A  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7575  002A9C  0100               	movlb	0	; () banked
  7576  002A9E  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7577  002AA0  0100               	movlb	0	; () banked
  7578  002AA2  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7579  002AA4  0100               	movlb	0	; () banked
  7580  002AA6  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7581  002AA8  0100               	movlb	0	; () banked
  7582  002AAA  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7583                           
  7584                           ; BSR set to: 0
  7585  002AAC  803C               	bsf	___lldiv@quotient,0,c
  7586  002AAE                     l5001:
  7587                           
  7588                           ; BSR set to: 0
  7589  002AAE  0100               	movlb	0	; () banked
  7590  002AB0  90D8               	bcf	status,0,c
  7591  002AB2  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7592  002AB4  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7593  002AB6  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7594  002AB8  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7595                           
  7596                           ; BSR set to: 0
  7597  002ABA  2E40               	decfsz	___lldiv@counter,f,c
  7598  002ABC  D7D0               	goto	l4993
  7599  002ABE                     l871:
  7600                           
  7601                           ; BSR set to: 0
  7602  002ABE  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7603  002AC2  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7604  002AC6  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7605  002ACA  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7606                           
  7607                           ; BSR set to: 0
  7608  002ACE  0012               	return		;funcret
  7609  002AD0                     __end_of___lldiv:
  7610                           	opt stack 0
  7611                           tblptru	equ	0xFF8
  7612                           tblptrh	equ	0xFF7
  7613                           tblptrl	equ	0xFF6
  7614                           tablat	equ	0xFF5
  7615                           prodh	equ	0xFF4
  7616                           prodl	equ	0xFF3
  7617                           intcon	equ	0xFF2
  7618                           postinc0	equ	0xFEE
  7619                           wreg	equ	0xFE8
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           fsr2h	equ	0xFDA
  7623                           fsr2l	equ	0xFD9
  7624                           status	equ	0xFD8
  7625                           
  7626 ;; *************** function ___fltol *****************
  7627 ;; Defined at:
  7628 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  f1              4   64[BANK0 ] unsigned long 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  exp1            1   73[BANK0 ] unsigned char 
  7633 ;;  sign1           1   72[BANK0 ] unsigned char 
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  4   64[BANK0 ] long 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2, status,0
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7643 ;;      Params:         0       4       0       0
  7644 ;;      Locals:         0       2       0       0
  7645 ;;      Temps:          0       4       0       0
  7646 ;;      Totals:         0      10       0       0
  7647 ;;Total ram usage:       10 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:    4
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;;		_sprintf
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text24
  7659  0025D0                     __ptext24:
  7660                           	opt stack 0
  7661  0025D0                     ___fltol:
  7662                           	opt stack 26
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;incstack = 0
  7666  0025D0  0100               	movlb	0	; () banked
  7667  0025D2  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7668  0025D4  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7669  0025D6  0100               	movlb	0	; () banked
  7670  0025D8  6FA9               	movwf	___fltol@exp1& (0+255),b
  7671  0025DA  0100               	movlb	0	; () banked
  7672  0025DC  51A9               	movf	___fltol@exp1& (0+255),w,b
  7673  0025DE  A4D8               	btfss	status,2,c
  7674  0025E0  D00A               	goto	l4945
  7675                           
  7676                           ; BSR set to: 0
  7677  0025E2  0E00               	movlw	0
  7678  0025E4  0100               	movlb	0	; () banked
  7679  0025E6  6FA0               	movwf	?___fltol& (0+255),b
  7680  0025E8  0E00               	movlw	0
  7681  0025EA  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7682  0025EC  0E00               	movlw	0
  7683  0025EE  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7684  0025F0  0E00               	movlw	0
  7685  0025F2  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7686                           
  7687                           ; BSR set to: 0
  7688  0025F4  0012               	return	
  7689  0025F6                     l4945:
  7690                           
  7691                           ; BSR set to: 0
  7692  0025F6  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7693  0025FA  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7694  0025FE  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7695  002602  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7696  002606  0E20               	movlw	32
  7697  002608  D006               	goto	u5660
  7698  00260A                     u5665:
  7699  00260A  0100               	movlb	0	; () banked
  7700  00260C  90D8               	bcf	status,0,c
  7701  00260E  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7702  002610  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7703  002612  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7704  002614  33A4               	rrcf	??___fltol& (0+255),f,b
  7705  002616                     u5660:
  7706  002616  2EE8               	decfsz	wreg,f,c
  7707  002618  D7F8               	goto	u5665
  7708  00261A  0100               	movlb	0	; () banked
  7709  00261C  51A4               	movf	??___fltol& (0+255),w,b
  7710  00261E  0100               	movlb	0	; () banked
  7711  002620  6FA8               	movwf	___fltol@sign1& (0+255),b
  7712                           
  7713                           ; BSR set to: 0
  7714  002622  0100               	movlb	0	; () banked
  7715  002624  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7716                           
  7717                           ; BSR set to: 0
  7718  002626  0EFF               	movlw	255
  7719  002628  0100               	movlb	0	; () banked
  7720  00262A  17A0               	andwf	___fltol@f1& (0+255),f,b
  7721  00262C  0EFF               	movlw	255
  7722  00262E  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7723  002630  0EFF               	movlw	255
  7724  002632  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7725  002634  0E00               	movlw	0
  7726  002636  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 0
  7729  002638  0E96               	movlw	150
  7730  00263A  0100               	movlb	0	; () banked
  7731  00263C  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7732                           
  7733                           ; BSR set to: 0
  7734  00263E  0100               	movlb	0	; () banked
  7735  002640  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7736  002642  D01A               	goto	l4965
  7737                           
  7738                           ; BSR set to: 0
  7739  002644  0100               	movlb	0	; () banked
  7740  002646  51A9               	movf	___fltol@exp1& (0+255),w,b
  7741  002648  0A80               	xorlw	128
  7742  00264A  0F97               	addlw	151
  7743  00264C  B0D8               	btfsc	status,0,c
  7744  00264E  D00A               	goto	l4961
  7745                           
  7746                           ; BSR set to: 0
  7747  002650  0E00               	movlw	0
  7748  002652  0100               	movlb	0	; () banked
  7749  002654  6FA0               	movwf	?___fltol& (0+255),b
  7750  002656  0E00               	movlw	0
  7751  002658  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7752  00265A  0E00               	movlw	0
  7753  00265C  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7754  00265E  0E00               	movlw	0
  7755  002660  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758  002662  0012               	return	
  7759  002664                     l4961:
  7760                           
  7761                           ; BSR set to: 0
  7762  002664  0100               	movlb	0	; () banked
  7763  002666  90D8               	bcf	status,0,c
  7764  002668  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7765  00266A  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7766  00266C  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7767  00266E  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7768                           
  7769                           ; BSR set to: 0
  7770  002670  0100               	movlb	0	; () banked
  7771  002672  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7772  002674  D7F7               	goto	l4961
  7773                           
  7774                           ; BSR set to: 0
  7775  002676  D01B               	goto	l4975
  7776  002678                     l4965:
  7777                           
  7778                           ; BSR set to: 0
  7779  002678  0E1F               	movlw	31
  7780  00267A  0100               	movlb	0	; () banked
  7781  00267C  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7782  00267E  D012               	goto	l4973
  7783                           
  7784                           ; BSR set to: 0
  7785  002680  0E00               	movlw	0
  7786  002682  0100               	movlb	0	; () banked
  7787  002684  6FA0               	movwf	?___fltol& (0+255),b
  7788  002686  0E00               	movlw	0
  7789  002688  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7790  00268A  0E00               	movlw	0
  7791  00268C  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7792  00268E  0E00               	movlw	0
  7793  002690  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7794                           
  7795                           ; BSR set to: 0
  7796  002692  0012               	return	
  7797  002694                     l4971:
  7798                           
  7799                           ; BSR set to: 0
  7800  002694  0100               	movlb	0	; () banked
  7801  002696  90D8               	bcf	status,0,c
  7802  002698  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7803  00269A  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7804  00269C  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7805  00269E  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7806  0026A0  0100               	movlb	0	; () banked
  7807  0026A2  07A9               	decf	___fltol@exp1& (0+255),f,b
  7808  0026A4                     l4973:
  7809                           
  7810                           ; BSR set to: 0
  7811  0026A4  0100               	movlb	0	; () banked
  7812  0026A6  51A9               	movf	___fltol@exp1& (0+255),w,b
  7813  0026A8  0100               	movlb	0	; () banked
  7814  0026AA  A4D8               	btfss	status,2,c
  7815  0026AC  D7F3               	goto	l4971
  7816  0026AE                     l4975:
  7817                           
  7818                           ; BSR set to: 0
  7819  0026AE  0100               	movlb	0	; () banked
  7820  0026B0  51A8               	movf	___fltol@sign1& (0+255),w,b
  7821  0026B2  0100               	movlb	0	; () banked
  7822  0026B4  B4D8               	btfsc	status,2,c
  7823  0026B6  D009               	goto	l4979
  7824                           
  7825                           ; BSR set to: 0
  7826  0026B8  0100               	movlb	0	; () banked
  7827  0026BA  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7828  0026BC  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7829  0026BE  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7830  0026C0  6DA0               	negf	___fltol@f1& (0+255),b
  7831  0026C2  0E00               	movlw	0
  7832  0026C4  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7833  0026C6  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7834  0026C8  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7835  0026CA                     l4979:
  7836                           
  7837                           ; BSR set to: 0
  7838  0026CA  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7839  0026CE  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7840  0026D2  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7841  0026D6  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7842  0026DA  0012               	return	
  7843  0026DC                     __end_of___fltol:
  7844                           	opt stack 0
  7845                           tblptru	equ	0xFF8
  7846                           tblptrh	equ	0xFF7
  7847                           tblptrl	equ	0xFF6
  7848                           tablat	equ	0xFF5
  7849                           prodh	equ	0xFF4
  7850                           prodl	equ	0xFF3
  7851                           intcon	equ	0xFF2
  7852                           postinc0	equ	0xFEE
  7853                           wreg	equ	0xFE8
  7854                           indf2	equ	0xFDF
  7855                           postinc2	equ	0xFDE
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function ___flsub *****************
  7861 ;; Defined at:
  7862 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  b               4   88[BANK0 ] long 
  7865 ;;  a               4   92[BANK0 ] long 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   88[BANK0 ] long 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7877 ;;      Params:         0       8       0       0
  7878 ;;      Locals:         0       0       0       0
  7879 ;;      Temps:          0       0       0       0
  7880 ;;      Totals:         0       8       0       0
  7881 ;;Total ram usage:        8 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    5
  7884 ;; This function calls:
  7885 ;;		___fladd
  7886 ;; This function is called by:
  7887 ;;		_sprintf
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text25
  7892  002D1C                     __ptext25:
  7893                           	opt stack 0
  7894  002D1C                     ___flsub:
  7895                           	opt stack 23
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;incstack = 0
  7899  002D1C  0E00               	movlw	0
  7900  002D1E  0100               	movlb	0	; () banked
  7901  002D20  1BBC               	xorwf	___flsub@a& (0+255),f,b
  7902  002D22  0E00               	movlw	0
  7903  002D24  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  7904  002D26  0E00               	movlw	0
  7905  002D28  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  7906  002D2A  0E80               	movlw	128
  7907  002D2C  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  7908                           
  7909                           ; BSR set to: 0
  7910  002D2E  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  7911  002D32  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  7912  002D36  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  7913  002D3A  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  7914  002D3E  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  7915  002D42  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  7916  002D46  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  7917  002D4A  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  7918  002D4E  EC90  F004         	call	___fladd	;wreg free
  7919  002D52  C0A4  F0B8         	movff	?___fladd,?___flsub
  7920  002D56  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  7921  002D5A  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  7922  002D5E  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  7923  002D62  0012               	return	
  7924  002D64                     __end_of___flsub:
  7925                           	opt stack 0
  7926                           tblptru	equ	0xFF8
  7927                           tblptrh	equ	0xFF7
  7928                           tblptrl	equ	0xFF6
  7929                           tablat	equ	0xFF5
  7930                           prodh	equ	0xFF4
  7931                           prodl	equ	0xFF3
  7932                           intcon	equ	0xFF2
  7933                           postinc0	equ	0xFEE
  7934                           wreg	equ	0xFE8
  7935                           indf2	equ	0xFDF
  7936                           postinc2	equ	0xFDE
  7937                           fsr2h	equ	0xFDA
  7938                           fsr2l	equ	0xFD9
  7939                           status	equ	0xFD8
  7940                           
  7941 ;; *************** function ___fladd *****************
  7942 ;; Defined at:
  7943 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  b               4   68[BANK0 ] long 
  7946 ;;  a               4   72[BANK0 ] long 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  grs             1   87[BANK0 ] unsigned char 
  7949 ;;  bexp            1   86[BANK0 ] unsigned char 
  7950 ;;  aexp            1   85[BANK0 ] unsigned char 
  7951 ;;  signs           1   84[BANK0 ] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  4   68[BANK0 ] unsigned char 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7961 ;;      Params:         0       8       0       0
  7962 ;;      Locals:         0       4       0       0
  7963 ;;      Temps:          0       8       0       0
  7964 ;;      Totals:         0      20       0       0
  7965 ;;Total ram usage:       20 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    4
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_sprintf
  7972 ;;		___flsub
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text26
  7977  000920                     __ptext26:
  7978                           	opt stack 0
  7979  000920                     ___fladd:
  7980                           	opt stack 23
  7981                           
  7982                           ;incstack = 0
  7983  000920  0100               	movlb	0	; () banked
  7984  000922  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7985  000924  0B80               	andlw	128
  7986  000926  0100               	movlb	0	; () banked
  7987  000928  6FB4               	movwf	___fladd@signs& (0+255),b
  7988  00092A  0100               	movlb	0	; () banked
  7989  00092C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7990  00092E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  7991  000930  0100               	movlb	0	; () banked
  7992  000932  6FB6               	movwf	___fladd@bexp& (0+255),b
  7993                           
  7994                           ; BSR set to: 0
  7995  000934  0100               	movlb	0	; () banked
  7996  000936  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  7997  000938  D002               	goto	l4287
  7998                           
  7999                           ; BSR set to: 0
  8000  00093A  0100               	movlb	0	; () banked
  8001  00093C  81B6               	bsf	___fladd@bexp& (0+255),0,b
  8002  00093E                     l4287:
  8003                           
  8004                           ; BSR set to: 0
  8005  00093E  0100               	movlb	0	; () banked
  8006  000940  51B6               	movf	___fladd@bexp& (0+255),w,b
  8007  000942  0100               	movlb	0	; () banked
  8008  000944  B4D8               	btfsc	status,2,c
  8009  000946  D012               	goto	l4297
  8010                           
  8011                           ; BSR set to: 0
  8012  000948  0100               	movlb	0	; () banked
  8013  00094A  29B6               	incf	___fladd@bexp& (0+255),w,b
  8014  00094C  A4D8               	btfss	status,2,c
  8015  00094E  D009               	goto	l4293
  8016                           
  8017                           ; BSR set to: 0
  8018  000950  0E00               	movlw	0
  8019  000952  0100               	movlb	0	; () banked
  8020  000954  6FA4               	movwf	___fladd@b& (0+255),b
  8021  000956  0E00               	movlw	0
  8022  000958  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8023  00095A  0E00               	movlw	0
  8024  00095C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8025  00095E  0E00               	movlw	0
  8026  000960  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8027  000962                     l4293:
  8028                           
  8029                           ; BSR set to: 0
  8030  000962  0100               	movlb	0	; () banked
  8031  000964  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8032                           
  8033                           ; BSR set to: 0
  8034  000966  0E00               	movlw	0
  8035  000968  0100               	movlb	0	; () banked
  8036  00096A  D008               	goto	L8
  8037  00096C                     l4297:
  8038                           
  8039                           ; BSR set to: 0
  8040  00096C  0E00               	movlw	0
  8041  00096E  0100               	movlb	0	; () banked
  8042  000970  6FA4               	movwf	___fladd@b& (0+255),b
  8043  000972  0E00               	movlw	0
  8044  000974  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8045  000976  0E00               	movlw	0
  8046  000978  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8047  00097A  0E00               	movlw	0
  8048  00097C                     L8:
  8049  00097C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8050                           
  8051                           ; BSR set to: 0
  8052                           
  8053                           ; BSR set to: 0
  8054  00097E  0100               	movlb	0	; () banked
  8055  000980  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8056  000982  0B80               	andlw	128
  8057  000984  0100               	movlb	0	; () banked
  8058  000986  6FB5               	movwf	___fladd@aexp& (0+255),b
  8059                           
  8060                           ; BSR set to: 0
  8061  000988  0100               	movlb	0	; () banked
  8062  00098A  51B4               	movf	___fladd@signs& (0+255),w,b
  8063  00098C  0100               	movlb	0	; () banked
  8064  00098E  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  8065  000990  B4D8               	btfsc	status,2,c
  8066  000992  D002               	goto	l4305
  8067                           
  8068                           ; BSR set to: 0
  8069  000994  0100               	movlb	0	; () banked
  8070  000996  8DB4               	bsf	___fladd@signs& (0+255),6,b
  8071  000998                     l4305:
  8072                           
  8073                           ; BSR set to: 0
  8074  000998  0100               	movlb	0	; () banked
  8075  00099A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8076  00099C  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  8077  00099E  0100               	movlb	0	; () banked
  8078  0009A0  6FB5               	movwf	___fladd@aexp& (0+255),b
  8079                           
  8080                           ; BSR set to: 0
  8081  0009A2  0100               	movlb	0	; () banked
  8082  0009A4  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  8083  0009A6  D002               	goto	l4311
  8084                           
  8085                           ; BSR set to: 0
  8086  0009A8  0100               	movlb	0	; () banked
  8087  0009AA  81B5               	bsf	___fladd@aexp& (0+255),0,b
  8088  0009AC                     l4311:
  8089                           
  8090                           ; BSR set to: 0
  8091  0009AC  0100               	movlb	0	; () banked
  8092  0009AE  51B5               	movf	___fladd@aexp& (0+255),w,b
  8093  0009B0  0100               	movlb	0	; () banked
  8094  0009B2  B4D8               	btfsc	status,2,c
  8095  0009B4  D012               	goto	l4321
  8096                           
  8097                           ; BSR set to: 0
  8098  0009B6  0100               	movlb	0	; () banked
  8099  0009B8  29B5               	incf	___fladd@aexp& (0+255),w,b
  8100  0009BA  A4D8               	btfss	status,2,c
  8101  0009BC  D009               	goto	l4317
  8102                           
  8103                           ; BSR set to: 0
  8104  0009BE  0E00               	movlw	0
  8105  0009C0  0100               	movlb	0	; () banked
  8106  0009C2  6FA8               	movwf	___fladd@a& (0+255),b
  8107  0009C4  0E00               	movlw	0
  8108  0009C6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8109  0009C8  0E00               	movlw	0
  8110  0009CA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8111  0009CC  0E00               	movlw	0
  8112  0009CE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8113  0009D0                     l4317:
  8114                           
  8115                           ; BSR set to: 0
  8116  0009D0  0100               	movlb	0	; () banked
  8117  0009D2  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8118                           
  8119                           ; BSR set to: 0
  8120  0009D4  0E00               	movlw	0
  8121  0009D6  0100               	movlb	0	; () banked
  8122  0009D8  D008               	goto	L9
  8123  0009DA                     l4321:
  8124                           
  8125                           ; BSR set to: 0
  8126  0009DA  0E00               	movlw	0
  8127  0009DC  0100               	movlb	0	; () banked
  8128  0009DE  6FA8               	movwf	___fladd@a& (0+255),b
  8129  0009E0  0E00               	movlw	0
  8130  0009E2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8131  0009E4  0E00               	movlw	0
  8132  0009E6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8133  0009E8  0E00               	movlw	0
  8134  0009EA                     L9:
  8135  0009EA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8136                           
  8137                           ; BSR set to: 0
  8138                           
  8139                           ; BSR set to: 0
  8140  0009EC  0100               	movlb	0	; () banked
  8141  0009EE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8142  0009F0  0100               	movlb	0	; () banked
  8143  0009F2  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8144  0009F4  B0D8               	btfsc	status,0,c
  8145  0009F6  D024               	goto	l4359
  8146                           
  8147                           ; BSR set to: 0
  8148  0009F8  0100               	movlb	0	; () banked
  8149  0009FA  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8150  0009FC  D003               	goto	l4329
  8151                           
  8152                           ; BSR set to: 0
  8153  0009FE  0E80               	movlw	128
  8154  000A00  0100               	movlb	0	; () banked
  8155  000A02  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8156  000A04                     l4329:
  8157                           
  8158                           ; BSR set to: 0
  8159  000A04  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8160                           
  8161                           ; BSR set to: 0
  8162  000A08  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8163                           
  8164                           ; BSR set to: 0
  8165  000A0C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8166                           
  8167                           ; BSR set to: 0
  8168  000A10  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8169                           
  8170                           ; BSR set to: 0
  8171  000A14  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8172                           
  8173                           ; BSR set to: 0
  8174  000A18  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8175                           
  8176                           ; BSR set to: 0
  8177  000A1C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8178                           
  8179                           ; BSR set to: 0
  8180  000A20  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8181                           
  8182                           ; BSR set to: 0
  8183  000A24  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8184                           
  8185                           ; BSR set to: 0
  8186  000A28  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8187                           
  8188                           ; BSR set to: 0
  8189  000A2C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8190                           
  8191                           ; BSR set to: 0
  8192  000A30  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8193                           
  8194                           ; BSR set to: 0
  8195  000A34  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8196                           
  8197                           ; BSR set to: 0
  8198  000A38  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8199                           
  8200                           ; BSR set to: 0
  8201  000A3C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8202  000A40                     l4359:
  8203                           
  8204                           ; BSR set to: 0
  8205  000A40  0E00               	movlw	0
  8206  000A42  0100               	movlb	0	; () banked
  8207  000A44  6FB7               	movwf	___fladd@grs& (0+255),b
  8208                           
  8209                           ; BSR set to: 0
  8210  000A46  0100               	movlb	0	; () banked
  8211  000A48  51B6               	movf	___fladd@bexp& (0+255),w,b
  8212  000A4A  0100               	movlb	0	; () banked
  8213  000A4C  6FAC               	movwf	??___fladd& (0+255),b
  8214  000A4E  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8215  000A50  0100               	movlb	0	; () banked
  8216  000A52  1FAC               	comf	??___fladd& (0+255),f,b
  8217  000A54  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8218  000A56  4BAC               	infsnz	??___fladd& (0+255),f,b
  8219  000A58  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8220  000A5A  0100               	movlb	0	; () banked
  8221  000A5C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8222  000A5E  0100               	movlb	0	; () banked
  8223  000A60  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8224  000A62  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8225  000A64  0100               	movlb	0	; () banked
  8226  000A66  51AC               	movf	??___fladd& (0+255),w,b
  8227  000A68  0100               	movlb	0	; () banked
  8228  000A6A  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8229  000A6C  0100               	movlb	0	; () banked
  8230  000A6E  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8231  000A70  0100               	movlb	0	; () banked
  8232  000A72  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8233  000A74  0100               	movlb	0	; () banked
  8234  000A76  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8235  000A78  D03D               	goto	l966
  8236  000A7A  0100               	movlb	0	; () banked
  8237  000A7C  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8238  000A7E  E105               	bnz	u4730
  8239  000A80  0E1A               	movlw	26
  8240  000A82  0100               	movlb	0	; () banked
  8241  000A84  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8242  000A86  A0D8               	btfss	status,0,c
  8243  000A88  D035               	goto	l966
  8244  000A8A                     u4730:
  8245                           
  8246                           ; BSR set to: 0
  8247  000A8A  0100               	movlb	0	; () banked
  8248  000A8C  51A4               	movf	___fladd@b& (0+255),w,b
  8249  000A8E  0100               	movlb	0	; () banked
  8250  000A90  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8251  000A92  0100               	movlb	0	; () banked
  8252  000A94  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8253  000A96  0100               	movlb	0	; () banked
  8254  000A98  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8255  000A9A  B4D8               	btfsc	status,2,c
  8256  000A9C  D002               	goto	u4740
  8257  000A9E  0E01               	movlw	1
  8258  000AA0  D001               	goto	u4750
  8259  000AA2                     u4740:
  8260  000AA2  0E00               	movlw	0
  8261  000AA4                     u4750:
  8262  000AA4  0100               	movlb	0	; () banked
  8263  000AA6  6FB7               	movwf	___fladd@grs& (0+255),b
  8264                           
  8265                           ; BSR set to: 0
  8266  000AA8  0E00               	movlw	0
  8267  000AAA  0100               	movlb	0	; () banked
  8268  000AAC  6FA4               	movwf	___fladd@b& (0+255),b
  8269  000AAE  0E00               	movlw	0
  8270  000AB0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8271  000AB2  0E00               	movlw	0
  8272  000AB4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8273  000AB6  0E00               	movlw	0
  8274  000AB8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8275                           
  8276                           ; BSR set to: 0
  8277  000ABA  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8278  000ABE  D020               	goto	l965
  8279  000AC0                     l967:
  8280                           
  8281                           ; BSR set to: 0
  8282  000AC0  0100               	movlb	0	; () banked
  8283  000AC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8284  000AC4  D007               	goto	l4371
  8285                           
  8286                           ; BSR set to: 0
  8287  000AC6  0100               	movlb	0	; () banked
  8288  000AC8  90D8               	bcf	status,0,c
  8289  000ACA  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8290  000ACC  0901               	iorlw	1
  8291  000ACE  0100               	movlb	0	; () banked
  8292  000AD0  6FB7               	movwf	___fladd@grs& (0+255),b
  8293  000AD2  D003               	goto	l4373
  8294  000AD4                     l4371:
  8295                           
  8296                           ; BSR set to: 0
  8297  000AD4  0100               	movlb	0	; () banked
  8298  000AD6  90D8               	bcf	status,0,c
  8299  000AD8  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8300  000ADA                     l4373:
  8301                           
  8302                           ; BSR set to: 0
  8303  000ADA  0100               	movlb	0	; () banked
  8304  000ADC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8305  000ADE  D002               	goto	l4377
  8306                           
  8307                           ; BSR set to: 0
  8308  000AE0  0100               	movlb	0	; () banked
  8309  000AE2  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8310  000AE4                     l4377:
  8311                           
  8312                           ; BSR set to: 0
  8313  000AE4  0100               	movlb	0	; () banked
  8314  000AE6  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8315  000AE8  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8316  000AEA  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8317  000AEC  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8318  000AEE  33A4               	rrcf	___fladd@b& (0+255),f,b
  8319                           
  8320                           ; BSR set to: 0
  8321  000AF0  0100               	movlb	0	; () banked
  8322  000AF2  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8323  000AF4                     l966:
  8324                           
  8325                           ; BSR set to: 0
  8326  000AF4  0100               	movlb	0	; () banked
  8327  000AF6  51B5               	movf	___fladd@aexp& (0+255),w,b
  8328  000AF8  0100               	movlb	0	; () banked
  8329  000AFA  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8330  000AFC  A0D8               	btfss	status,0,c
  8331  000AFE  D7E0               	goto	l967
  8332  000B00                     l965:
  8333                           
  8334                           ; BSR set to: 0
  8335  000B00  0100               	movlb	0	; () banked
  8336  000B02  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8337  000B04  D03F               	goto	l4405
  8338                           
  8339                           ; BSR set to: 0
  8340  000B06  0100               	movlb	0	; () banked
  8341  000B08  51B6               	movf	___fladd@bexp& (0+255),w,b
  8342  000B0A  0100               	movlb	0	; () banked
  8343  000B0C  A4D8               	btfss	status,2,c
  8344  000B0E  D00A               	goto	l4387
  8345                           
  8346                           ; BSR set to: 0
  8347  000B10  0E00               	movlw	0
  8348  000B12  0100               	movlb	0	; () banked
  8349  000B14  6FA4               	movwf	?___fladd& (0+255),b
  8350  000B16  0E00               	movlw	0
  8351  000B18  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8352  000B1A  0E00               	movlw	0
  8353  000B1C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8354  000B1E  0E00               	movlw	0
  8355  000B20  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358  000B22  0012               	return	
  8359  000B24                     l4387:
  8360                           
  8361                           ; BSR set to: 0
  8362  000B24  0100               	movlb	0	; () banked
  8363  000B26  51A8               	movf	___fladd@a& (0+255),w,b
  8364  000B28  0100               	movlb	0	; () banked
  8365  000B2A  27A4               	addwf	___fladd@b& (0+255),f,b
  8366  000B2C  0100               	movlb	0	; () banked
  8367  000B2E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8368  000B30  0100               	movlb	0	; () banked
  8369  000B32  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8370  000B34  0100               	movlb	0	; () banked
  8371  000B36  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8372  000B38  0100               	movlb	0	; () banked
  8373  000B3A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8374  000B3C  0100               	movlb	0	; () banked
  8375  000B3E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8376  000B40  0100               	movlb	0	; () banked
  8377  000B42  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8378                           
  8379                           ; BSR set to: 0
  8380  000B44  0100               	movlb	0	; () banked
  8381  000B46  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8382  000B48  D0CC               	goto	l4441
  8383                           
  8384                           ; BSR set to: 0
  8385  000B4A  0100               	movlb	0	; () banked
  8386  000B4C  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8387  000B4E  D009               	goto	l4395
  8388                           
  8389                           ; BSR set to: 0
  8390  000B50  0100               	movlb	0	; () banked
  8391  000B52  90D8               	bcf	status,0,c
  8392  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8393  000B56  0100               	movlb	0	; () banked
  8394  000B58  51B7               	movf	___fladd@grs& (0+255),w,b
  8395  000B5A  0901               	iorlw	1
  8396  000B5C  0100               	movlb	0	; () banked
  8397  000B5E  6FB7               	movwf	___fladd@grs& (0+255),b
  8398  000B60  D003               	goto	l4397
  8399  000B62                     l4395:
  8400                           
  8401                           ; BSR set to: 0
  8402  000B62  0100               	movlb	0	; () banked
  8403  000B64  90D8               	bcf	status,0,c
  8404  000B66  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8405  000B68                     l4397:
  8406                           
  8407                           ; BSR set to: 0
  8408  000B68  0100               	movlb	0	; () banked
  8409  000B6A  A1A4               	btfss	___fladd@b& (0+255),0,b
  8410  000B6C  D002               	goto	l4401
  8411                           
  8412                           ; BSR set to: 0
  8413  000B6E  0100               	movlb	0	; () banked
  8414  000B70  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8415  000B72                     l4401:
  8416                           
  8417                           ; BSR set to: 0
  8418  000B72  0100               	movlb	0	; () banked
  8419  000B74  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8420  000B76  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8421  000B78  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8422  000B7A  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8423  000B7C  33A4               	rrcf	___fladd@b& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 0
  8426  000B7E  0100               	movlb	0	; () banked
  8427  000B80  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8428                           
  8429                           ; BSR set to: 0
  8430  000B82  D0AF               	goto	l4441
  8431  000B84                     l4405:
  8432                           
  8433                           ; BSR set to: 0
  8434  000B84  0100               	movlb	0	; () banked
  8435  000B86  51A8               	movf	___fladd@a& (0+255),w,b
  8436  000B88  0100               	movlb	0	; () banked
  8437  000B8A  5DA4               	subwf	___fladd@b& (0+255),w,b
  8438  000B8C  0100               	movlb	0	; () banked
  8439  000B8E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8440  000B90  0100               	movlb	0	; () banked
  8441  000B92  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8442  000B94  0100               	movlb	0	; () banked
  8443  000B96  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8444  000B98  0100               	movlb	0	; () banked
  8445  000B9A  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8446  000B9C  0100               	movlb	0	; () banked
  8447  000B9E  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8448  000BA0  0A80               	xorlw	128
  8449  000BA2  0100               	movlb	0	; () banked
  8450  000BA4  6FAC               	movwf	??___fladd& (0+255),b
  8451  000BA6  0100               	movlb	0	; () banked
  8452  000BA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8453  000BAA  0A80               	xorlw	128
  8454  000BAC  0100               	movlb	0	; () banked
  8455  000BAE  59AC               	subwfb	??___fladd& (0+255),w,b
  8456  000BB0  B0D8               	btfsc	status,0,c
  8457  000BB2  D050               	goto	l4415
  8458                           
  8459                           ; BSR set to: 0
  8460  000BB4  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8461  000BB8  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8462  000BBC  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8463  000BC0  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8464  000BC4  0100               	movlb	0	; () banked
  8465  000BC6  1FAC               	comf	??___fladd& (0+255),f,b
  8466  000BC8  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8467  000BCA  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8468  000BCC  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8469  000BCE  2BAC               	incf	??___fladd& (0+255),f,b
  8470  000BD0  0E00               	movlw	0
  8471  000BD2  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8472  000BD4  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8473  000BD6  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8474  000BD8  0100               	movlb	0	; () banked
  8475  000BDA  51A8               	movf	___fladd@a& (0+255),w,b
  8476  000BDC  0100               	movlb	0	; () banked
  8477  000BDE  25AC               	addwf	??___fladd& (0+255),w,b
  8478  000BE0  0100               	movlb	0	; () banked
  8479  000BE2  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8480  000BE4  0100               	movlb	0	; () banked
  8481  000BE6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8482  000BE8  0100               	movlb	0	; () banked
  8483  000BEA  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8484  000BEC  0100               	movlb	0	; () banked
  8485  000BEE  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8486  000BF0  0100               	movlb	0	; () banked
  8487  000BF2  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8488  000BF4  0100               	movlb	0	; () banked
  8489  000BF6  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8490  000BF8  0100               	movlb	0	; () banked
  8491  000BFA  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8492  000BFC  0100               	movlb	0	; () banked
  8493  000BFE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8494  000C00  0100               	movlb	0	; () banked
  8495  000C02  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8496  000C04  0100               	movlb	0	; () banked
  8497  000C06  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8498  000C08  0EFF               	movlw	255
  8499  000C0A  0100               	movlb	0	; () banked
  8500  000C0C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8501  000C0E  0100               	movlb	0	; () banked
  8502  000C10  6FA4               	movwf	___fladd@b& (0+255),b
  8503  000C12  0EFF               	movlw	255
  8504  000C14  0100               	movlb	0	; () banked
  8505  000C16  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8506  000C18  0100               	movlb	0	; () banked
  8507  000C1A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8508  000C1C  0EFF               	movlw	255
  8509  000C1E  0100               	movlb	0	; () banked
  8510  000C20  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8511  000C22  0100               	movlb	0	; () banked
  8512  000C24  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8513  000C26  0EFF               	movlw	255
  8514  000C28  0100               	movlb	0	; () banked
  8515  000C2A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8516  000C2C  0100               	movlb	0	; () banked
  8517  000C2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8518  000C30  0E80               	movlw	128
  8519  000C32  0100               	movlb	0	; () banked
  8520  000C34  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 0
  8523  000C36  0100               	movlb	0	; () banked
  8524  000C38  6DB7               	negf	___fladd@grs& (0+255),b
  8525                           
  8526                           ; BSR set to: 0
  8527  000C3A  0100               	movlb	0	; () banked
  8528  000C3C  51B7               	movf	___fladd@grs& (0+255),w,b
  8529  000C3E  0100               	movlb	0	; () banked
  8530  000C40  A4D8               	btfss	status,2,c
  8531  000C42  D018               	goto	l982
  8532                           
  8533                           ; BSR set to: 0
  8534  000C44  0E01               	movlw	1
  8535  000C46  0100               	movlb	0	; () banked
  8536  000C48  27A4               	addwf	___fladd@b& (0+255),f,b
  8537  000C4A  0E00               	movlw	0
  8538  000C4C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8539  000C4E  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8540  000C50  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8541                           
  8542                           ; BSR set to: 0
  8543  000C52  D010               	goto	l982
  8544  000C54                     l4415:
  8545                           
  8546                           ; BSR set to: 0
  8547  000C54  0100               	movlb	0	; () banked
  8548  000C56  51A8               	movf	___fladd@a& (0+255),w,b
  8549  000C58  0100               	movlb	0	; () banked
  8550  000C5A  5FA4               	subwf	___fladd@b& (0+255),f,b
  8551  000C5C  0100               	movlb	0	; () banked
  8552  000C5E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8553  000C60  0100               	movlb	0	; () banked
  8554  000C62  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8555  000C64  0100               	movlb	0	; () banked
  8556  000C66  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8557  000C68  0100               	movlb	0	; () banked
  8558  000C6A  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8559  000C6C  0100               	movlb	0	; () banked
  8560  000C6E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8561  000C70  0100               	movlb	0	; () banked
  8562  000C72  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8563  000C74                     l982:
  8564                           
  8565                           ; BSR set to: 0
  8566  000C74  0100               	movlb	0	; () banked
  8567  000C76  51A4               	movf	___fladd@b& (0+255),w,b
  8568  000C78  0100               	movlb	0	; () banked
  8569  000C7A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8570  000C7C  0100               	movlb	0	; () banked
  8571  000C7E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8572  000C80  0100               	movlb	0	; () banked
  8573  000C82  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8574  000C84  A4D8               	btfss	status,2,c
  8575  000C86  D02A               	goto	l4439
  8576                           
  8577                           ; BSR set to: 0
  8578  000C88  0100               	movlb	0	; () banked
  8579  000C8A  51B7               	movf	___fladd@grs& (0+255),w,b
  8580  000C8C  0100               	movlb	0	; () banked
  8581  000C8E  A4D8               	btfss	status,2,c
  8582  000C90  D025               	goto	l4439
  8583                           
  8584                           ; BSR set to: 0
  8585  000C92  0E00               	movlw	0
  8586  000C94  0100               	movlb	0	; () banked
  8587  000C96  6FA4               	movwf	?___fladd& (0+255),b
  8588  000C98  0E00               	movlw	0
  8589  000C9A  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8590  000C9C  0E00               	movlw	0
  8591  000C9E  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8592  000CA0  0E00               	movlw	0
  8593  000CA2  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8594                           
  8595                           ; BSR set to: 0
  8596  000CA4  0012               	return	
  8597  000CA6                     l4423:
  8598                           
  8599                           ; BSR set to: 0
  8600  000CA6  0100               	movlb	0	; () banked
  8601  000CA8  90D8               	bcf	status,0,c
  8602  000CAA  37A4               	rlcf	___fladd@b& (0+255),f,b
  8603  000CAC  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8604  000CAE  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8605  000CB0  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8606                           
  8607                           ; BSR set to: 0
  8608  000CB2  0100               	movlb	0	; () banked
  8609  000CB4  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8610  000CB6  D002               	goto	l4429
  8611                           
  8612                           ; BSR set to: 0
  8613  000CB8  0100               	movlb	0	; () banked
  8614  000CBA  81A4               	bsf	___fladd@b& (0+255),0,b
  8615  000CBC                     l4429:
  8616                           
  8617                           ; BSR set to: 0
  8618  000CBC  0100               	movlb	0	; () banked
  8619  000CBE  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8620  000CC0  D003               	goto	l4433
  8621                           
  8622                           ; BSR set to: 0
  8623  000CC2  80D8               	bsf	status,0,c
  8624  000CC4  0100               	movlb	0	; () banked
  8625  000CC6  D002               	goto	L10
  8626  000CC8                     l4433:
  8627                           
  8628                           ; BSR set to: 0
  8629  000CC8  0100               	movlb	0	; () banked
  8630  000CCA  90D8               	bcf	status,0,c
  8631  000CCC                     L10:
  8632  000CCC  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8633                           
  8634                           ; BSR set to: 0
  8635                           
  8636                           ; BSR set to: 0
  8637  000CCE  0100               	movlb	0	; () banked
  8638  000CD0  51B6               	movf	___fladd@bexp& (0+255),w,b
  8639  000CD2  0100               	movlb	0	; () banked
  8640  000CD4  B4D8               	btfsc	status,2,c
  8641  000CD6  D002               	goto	l4439
  8642                           
  8643                           ; BSR set to: 0
  8644  000CD8  0100               	movlb	0	; () banked
  8645  000CDA  07B6               	decf	___fladd@bexp& (0+255),f,b
  8646  000CDC                     l4439:
  8647                           
  8648                           ; BSR set to: 0
  8649  000CDC  0100               	movlb	0	; () banked
  8650  000CDE  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8651  000CE0  D7E2               	goto	l4423
  8652  000CE2                     l4441:
  8653                           
  8654                           ; BSR set to: 0
  8655  000CE2  0E00               	movlw	0
  8656  000CE4  0100               	movlb	0	; () banked
  8657  000CE6  6FB5               	movwf	___fladd@aexp& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660  000CE8  0100               	movlb	0	; () banked
  8661  000CEA  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8662  000CEC  D00D               	goto	l991
  8663                           
  8664                           ; BSR set to: 0
  8665  000CEE  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8666  000CF2  0E7F               	movlw	127
  8667  000CF4  0100               	movlb	0	; () banked
  8668  000CF6  17AC               	andwf	??___fladd& (0+255),f,b
  8669  000CF8  A4D8               	btfss	status,2,c
  8670  000CFA  D003               	goto	l4449
  8671                           
  8672                           ; BSR set to: 0
  8673                           
  8674                           ; BSR set to: 0
  8675  000CFC  0100               	movlb	0	; () banked
  8676  000CFE  A1A4               	btfss	___fladd@b& (0+255),0,b
  8677  000D00  D003               	goto	l991
  8678  000D02                     l4449:
  8679                           
  8680                           ; BSR set to: 0
  8681  000D02  0E01               	movlw	1
  8682  000D04  0100               	movlb	0	; () banked
  8683  000D06  6FB5               	movwf	___fladd@aexp& (0+255),b
  8684  000D08                     l991:
  8685                           
  8686                           ; BSR set to: 0
  8687  000D08  0100               	movlb	0	; () banked
  8688  000D0A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8689  000D0C  0100               	movlb	0	; () banked
  8690  000D0E  B4D8               	btfsc	status,2,c
  8691  000D10  D026               	goto	l4459
  8692                           
  8693                           ; BSR set to: 0
  8694  000D12  0E01               	movlw	1
  8695  000D14  0100               	movlb	0	; () banked
  8696  000D16  27A4               	addwf	___fladd@b& (0+255),f,b
  8697  000D18  0E00               	movlw	0
  8698  000D1A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8699  000D1C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8700  000D1E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8701                           
  8702                           ; BSR set to: 0
  8703  000D20  0100               	movlb	0	; () banked
  8704  000D22  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8705  000D24  D01C               	goto	l4459
  8706                           
  8707                           ; BSR set to: 0
  8708  000D26  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8709  000D2A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8710  000D2E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8711  000D32  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8712  000D36  0100               	movlb	0	; () banked
  8713  000D38  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8714  000D3A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8715  000D3C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8716  000D3E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8717  000D40  33AC               	rrcf	??___fladd& (0+255),f,b
  8718  000D42  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8719  000D46  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8720  000D4A  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8721  000D4E  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8722  000D52  0100               	movlb	0	; () banked
  8723  000D54  29B6               	incf	___fladd@bexp& (0+255),w,b
  8724  000D56  B4D8               	btfsc	status,2,c
  8725  000D58  D002               	goto	l4459
  8726                           
  8727                           ; BSR set to: 0
  8728  000D5A  0100               	movlb	0	; () banked
  8729  000D5C  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8730  000D5E                     l4459:
  8731                           
  8732                           ; BSR set to: 0
  8733  000D5E  0100               	movlb	0	; () banked
  8734  000D60  29B6               	incf	___fladd@bexp& (0+255),w,b
  8735  000D62  B4D8               	btfsc	status,2,c
  8736  000D64  D005               	goto	l4463
  8737                           
  8738                           ; BSR set to: 0
  8739  000D66  0100               	movlb	0	; () banked
  8740  000D68  51B6               	movf	___fladd@bexp& (0+255),w,b
  8741  000D6A  0100               	movlb	0	; () banked
  8742  000D6C  A4D8               	btfss	status,2,c
  8743  000D6E  D011               	goto	l4467
  8744  000D70                     l4463:
  8745                           
  8746                           ; BSR set to: 0
  8747  000D70  0E00               	movlw	0
  8748  000D72  0100               	movlb	0	; () banked
  8749  000D74  6FA4               	movwf	___fladd@b& (0+255),b
  8750  000D76  0E00               	movlw	0
  8751  000D78  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8752  000D7A  0E00               	movlw	0
  8753  000D7C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8754  000D7E  0E00               	movlw	0
  8755  000D80  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8756  000D82  0100               	movlb	0	; () banked
  8757  000D84  51B6               	movf	___fladd@bexp& (0+255),w,b
  8758  000D86  0100               	movlb	0	; () banked
  8759  000D88  A4D8               	btfss	status,2,c
  8760  000D8A  D003               	goto	l4467
  8761                           
  8762                           ; BSR set to: 0
  8763  000D8C  0E00               	movlw	0
  8764  000D8E  0100               	movlb	0	; () banked
  8765  000D90  6FB4               	movwf	___fladd@signs& (0+255),b
  8766  000D92                     l4467:
  8767                           
  8768                           ; BSR set to: 0
  8769  000D92  0100               	movlb	0	; () banked
  8770  000D94  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8771  000D96  D003               	goto	l4471
  8772                           
  8773                           ; BSR set to: 0
  8774  000D98  0100               	movlb	0	; () banked
  8775  000D9A  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8776  000D9C  D002               	goto	l4473
  8777  000D9E                     l4471:
  8778                           
  8779                           ; BSR set to: 0
  8780  000D9E  0100               	movlb	0	; () banked
  8781  000DA0  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8782  000DA2                     l4473:
  8783                           
  8784                           ; BSR set to: 0
  8785  000DA2  0100               	movlb	0	; () banked
  8786  000DA4  90D8               	bcf	status,0,c
  8787  000DA6  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8788  000DA8  0100               	movlb	0	; () banked
  8789  000DAA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8790                           
  8791                           ; BSR set to: 0
  8792  000DAC  0100               	movlb	0	; () banked
  8793  000DAE  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8794  000DB0  D002               	goto	l4479
  8795                           
  8796                           ; BSR set to: 0
  8797  000DB2  0100               	movlb	0	; () banked
  8798  000DB4  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8799  000DB6                     l4479:
  8800                           
  8801                           ; BSR set to: 0
  8802  000DB6  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8803  000DBA  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8804  000DBE  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8805  000DC2  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8806  000DC6  0012               	return	
  8807  000DC8                     __end_of___fladd:
  8808                           	opt stack 0
  8809                           tblptru	equ	0xFF8
  8810                           tblptrh	equ	0xFF7
  8811                           tblptrl	equ	0xFF6
  8812                           tablat	equ	0xFF5
  8813                           prodh	equ	0xFF4
  8814                           prodl	equ	0xFF3
  8815                           intcon	equ	0xFF2
  8816                           postinc0	equ	0xFEE
  8817                           wreg	equ	0xFE8
  8818                           indf2	equ	0xFDF
  8819                           postinc2	equ	0xFDE
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function ___flneg *****************
  8825 ;; Defined at:
  8826 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  f1              4   24[COMRAM] unsigned char 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;		None
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  4   24[COMRAM] unsigned char 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8840 ;;      Params:         4       0       0       0
  8841 ;;      Locals:         0       0       0       0
  8842 ;;      Temps:          0       0       0       0
  8843 ;;      Totals:         4       0       0       0
  8844 ;;Total ram usage:        4 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_sprintf
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text27
  8855  002EEE                     __ptext27:
  8856                           	opt stack 0
  8857  002EEE                     ___flneg:
  8858                           	opt stack 24
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;incstack = 0
  8862  002EEE  503C               	movf	___flneg@f1,w,c
  8863  002EF0  103D               	iorwf	___flneg@f1+1,w,c
  8864  002EF2  103E               	iorwf	___flneg@f1+2,w,c
  8865  002EF4  103F               	iorwf	___flneg@f1+3,w,c
  8866  002EF6  B4D8               	btfsc	status,2,c
  8867  002EF8  D008               	goto	l4935
  8868  002EFA  0E00               	movlw	0
  8869  002EFC  1A3C               	xorwf	___flneg@f1,f,c
  8870  002EFE  0E00               	movlw	0
  8871  002F00  1A3D               	xorwf	___flneg@f1+1,f,c
  8872  002F02  0E00               	movlw	0
  8873  002F04  1A3E               	xorwf	___flneg@f1+2,f,c
  8874  002F06  0E80               	movlw	128
  8875  002F08  1A3F               	xorwf	___flneg@f1+3,f,c
  8876  002F0A                     l4935:
  8877  002F0A  C03C  F03C         	movff	___flneg@f1,?___flneg
  8878  002F0E  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8879  002F12  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8880  002F16  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8881  002F1A  0012               	return	
  8882  002F1C                     __end_of___flneg:
  8883                           	opt stack 0
  8884                           tblptru	equ	0xFF8
  8885                           tblptrh	equ	0xFF7
  8886                           tblptrl	equ	0xFF6
  8887                           tablat	equ	0xFF5
  8888                           prodh	equ	0xFF4
  8889                           prodl	equ	0xFF3
  8890                           intcon	equ	0xFF2
  8891                           postinc0	equ	0xFEE
  8892                           wreg	equ	0xFE8
  8893                           indf2	equ	0xFDF
  8894                           postinc2	equ	0xFDE
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function ___flge *****************
  8900 ;; Defined at:
  8901 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  ff1             4   16[BANK0 ] unsigned char 
  8904 ;;  ff2             4   20[BANK0 ] unsigned char 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;		None               void
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8916 ;;      Params:         0       8       0       0
  8917 ;;      Locals:         0       0       0       0
  8918 ;;      Temps:          4       0       0       0
  8919 ;;      Totals:         4       8       0       0
  8920 ;;Total ram usage:       12 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    4
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_sprintf
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text28
  8931  00235E                     __ptext28:
  8932                           	opt stack 0
  8933  00235E                     ___flge:
  8934                           	opt stack 24
  8935                           
  8936                           ;incstack = 0
  8937  00235E  0E00               	movlw	0
  8938  002360  0100               	movlb	0	; () banked
  8939  002362  1570               	andwf	___flge@ff1& (0+255),w,b
  8940  002364  6E3C               	movwf	??___flge& (0+255),c
  8941  002366  0E00               	movlw	0
  8942  002368  0100               	movlb	0	; () banked
  8943  00236A  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  8944  00236C  6E3D               	movwf	(??___flge+1)& (0+255),c
  8945  00236E  0E80               	movlw	128
  8946  002370  0100               	movlb	0	; () banked
  8947  002372  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  8948  002374  6E3E               	movwf	(??___flge+2)& (0+255),c
  8949  002376  0E7F               	movlw	127
  8950  002378  0100               	movlb	0	; () banked
  8951  00237A  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  8952  00237C  6E3F               	movwf	(??___flge+3)& (0+255),c
  8953  00237E  503C               	movf	??___flge,w,c
  8954  002380  103D               	iorwf	??___flge+1,w,c
  8955  002382  103E               	iorwf	??___flge+2,w,c
  8956  002384  103F               	iorwf	??___flge+3,w,c
  8957  002386  A4D8               	btfss	status,2,c
  8958  002388  D009               	goto	l4913
  8959                           
  8960                           ; BSR set to: 0
  8961  00238A  0E00               	movlw	0
  8962  00238C  0100               	movlb	0	; () banked
  8963  00238E  6F70               	movwf	___flge@ff1& (0+255),b
  8964  002390  0E00               	movlw	0
  8965  002392  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8966  002394  0E00               	movlw	0
  8967  002396  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8968  002398  0E00               	movlw	0
  8969  00239A  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8970  00239C                     l4913:
  8971                           
  8972                           ; BSR set to: 0
  8973  00239C  0E00               	movlw	0
  8974  00239E  0100               	movlb	0	; () banked
  8975  0023A0  1574               	andwf	___flge@ff2& (0+255),w,b
  8976  0023A2  6E3C               	movwf	??___flge& (0+255),c
  8977  0023A4  0E00               	movlw	0
  8978  0023A6  0100               	movlb	0	; () banked
  8979  0023A8  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  8980  0023AA  6E3D               	movwf	(??___flge+1)& (0+255),c
  8981  0023AC  0E80               	movlw	128
  8982  0023AE  0100               	movlb	0	; () banked
  8983  0023B0  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  8984  0023B2  6E3E               	movwf	(??___flge+2)& (0+255),c
  8985  0023B4  0E7F               	movlw	127
  8986  0023B6  0100               	movlb	0	; () banked
  8987  0023B8  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  8988  0023BA  6E3F               	movwf	(??___flge+3)& (0+255),c
  8989  0023BC  503C               	movf	??___flge,w,c
  8990  0023BE  103D               	iorwf	??___flge+1,w,c
  8991  0023C0  103E               	iorwf	??___flge+2,w,c
  8992  0023C2  103F               	iorwf	??___flge+3,w,c
  8993  0023C4  A4D8               	btfss	status,2,c
  8994  0023C6  D009               	goto	l4917
  8995                           
  8996                           ; BSR set to: 0
  8997  0023C8  0E00               	movlw	0
  8998  0023CA  0100               	movlb	0	; () banked
  8999  0023CC  6F74               	movwf	___flge@ff2& (0+255),b
  9000  0023CE  0E00               	movlw	0
  9001  0023D0  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9002  0023D2  0E00               	movlw	0
  9003  0023D4  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9004  0023D6  0E00               	movlw	0
  9005  0023D8  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9006  0023DA                     l4917:
  9007                           
  9008                           ; BSR set to: 0
  9009  0023DA  0100               	movlb	0	; () banked
  9010  0023DC  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  9011  0023DE  D021               	goto	l4921
  9012                           
  9013                           ; BSR set to: 0
  9014  0023E0  C070  F03C         	movff	___flge@ff1,??___flge
  9015  0023E4  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  9016  0023E8  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  9017  0023EC  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  9018  0023F0  1E3C               	comf	??___flge,f,c
  9019  0023F2  1E3D               	comf	??___flge+1,f,c
  9020  0023F4  1E3E               	comf	??___flge+2,f,c
  9021  0023F6  1E3F               	comf	??___flge+3,f,c
  9022  0023F8  2A3C               	incf	??___flge,f,c
  9023  0023FA  0E00               	movlw	0
  9024  0023FC  223D               	addwfc	??___flge+1,f,c
  9025  0023FE  223E               	addwfc	??___flge+2,f,c
  9026  002400  223F               	addwfc	??___flge+3,f,c
  9027  002402  0E00               	movlw	0
  9028  002404  243C               	addwf	??___flge,w,c
  9029  002406  0100               	movlb	0	; () banked
  9030  002408  6F70               	movwf	___flge@ff1& (0+255),b
  9031  00240A  0E00               	movlw	0
  9032  00240C  203D               	addwfc	??___flge+1,w,c
  9033  00240E  0100               	movlb	0	; () banked
  9034  002410  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  9035  002412  0E00               	movlw	0
  9036  002414  203E               	addwfc	??___flge+2,w,c
  9037  002416  0100               	movlb	0	; () banked
  9038  002418  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  9039  00241A  0E80               	movlw	128
  9040  00241C  203F               	addwfc	??___flge+3,w,c
  9041  00241E  0100               	movlb	0	; () banked
  9042  002420  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  9043  002422                     l4921:
  9044                           
  9045                           ; BSR set to: 0
  9046  002422  0100               	movlb	0	; () banked
  9047  002424  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  9048  002426  D021               	goto	l688
  9049                           
  9050                           ; BSR set to: 0
  9051  002428  C074  F03C         	movff	___flge@ff2,??___flge
  9052  00242C  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  9053  002430  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  9054  002434  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  9055  002438  1E3C               	comf	??___flge,f,c
  9056  00243A  1E3D               	comf	??___flge+1,f,c
  9057  00243C  1E3E               	comf	??___flge+2,f,c
  9058  00243E  1E3F               	comf	??___flge+3,f,c
  9059  002440  2A3C               	incf	??___flge,f,c
  9060  002442  0E00               	movlw	0
  9061  002444  223D               	addwfc	??___flge+1,f,c
  9062  002446  223E               	addwfc	??___flge+2,f,c
  9063  002448  223F               	addwfc	??___flge+3,f,c
  9064  00244A  0E00               	movlw	0
  9065  00244C  243C               	addwf	??___flge,w,c
  9066  00244E  0100               	movlb	0	; () banked
  9067  002450  6F74               	movwf	___flge@ff2& (0+255),b
  9068  002452  0E00               	movlw	0
  9069  002454  203D               	addwfc	??___flge+1,w,c
  9070  002456  0100               	movlb	0	; () banked
  9071  002458  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9072  00245A  0E00               	movlw	0
  9073  00245C  203E               	addwfc	??___flge+2,w,c
  9074  00245E  0100               	movlb	0	; () banked
  9075  002460  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9076  002462  0E80               	movlw	128
  9077  002464  203F               	addwfc	??___flge+3,w,c
  9078  002466  0100               	movlb	0	; () banked
  9079  002468  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9080  00246A                     l688:
  9081                           
  9082                           ; BSR set to: 0
  9083  00246A  0E00               	movlw	0
  9084  00246C  0100               	movlb	0	; () banked
  9085  00246E  1B70               	xorwf	___flge@ff1& (0+255),f,b
  9086  002470  0E00               	movlw	0
  9087  002472  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9088  002474  0E00               	movlw	0
  9089  002476  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9090  002478  0E80               	movlw	128
  9091  00247A  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9092  00247C  0E00               	movlw	0
  9093  00247E  0100               	movlb	0	; () banked
  9094  002480  1B74               	xorwf	___flge@ff2& (0+255),f,b
  9095  002482  0E00               	movlw	0
  9096  002484  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9097  002486  0E00               	movlw	0
  9098  002488  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9099  00248A  0E80               	movlw	128
  9100  00248C  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9101  00248E  0100               	movlb	0	; () banked
  9102  002490  5174               	movf	___flge@ff2& (0+255),w,b
  9103  002492  0100               	movlb	0	; () banked
  9104  002494  5D70               	subwf	___flge@ff1& (0+255),w,b
  9105  002496  0100               	movlb	0	; () banked
  9106  002498  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  9107  00249A  0100               	movlb	0	; () banked
  9108  00249C  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9109  00249E  0100               	movlb	0	; () banked
  9110  0024A0  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  9111  0024A2  0100               	movlb	0	; () banked
  9112  0024A4  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9113  0024A6  0100               	movlb	0	; () banked
  9114  0024A8  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  9115  0024AA  0100               	movlb	0	; () banked
  9116  0024AC  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9117  0024AE  B0D8               	btfsc	status,0,c
  9118  0024B0  D002               	goto	l4927
  9119                           
  9120                           ; BSR set to: 0
  9121  0024B2  90D8               	bcf	status,0,c
  9122  0024B4  0012               	return	
  9123  0024B6                     l4927:
  9124                           
  9125                           ; BSR set to: 0
  9126  0024B6  80D8               	bsf	status,0,c
  9127                           
  9128                           ; BSR set to: 0
  9129  0024B8  0012               	return	
  9130  0024BA                     __end_of___flge:
  9131                           	opt stack 0
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function ___lwdiv *****************
  9148 ;; Defined at:
  9149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  dividend        2   24[COMRAM] unsigned int 
  9152 ;;  divisor         2   26[COMRAM] unsigned int 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  quotient        2   28[COMRAM] unsigned int 
  9155 ;;  counter         1   30[COMRAM] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  2   24[COMRAM] unsigned int 
  9158 ;; Registers used:
  9159 ;;		wreg, status,2, status,0
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9165 ;;      Params:         4       0       0       0
  9166 ;;      Locals:         3       0       0       0
  9167 ;;      Temps:          0       0       0       0
  9168 ;;      Totals:         7       0       0       0
  9169 ;;Total ram usage:        7 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    4
  9172 ;; This function calls:
  9173 ;;		Nothing
  9174 ;; This function is called by:
  9175 ;;		_LCD_Handler
  9176 ;;		_utoa
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text29
  9181  002CCA                     __ptext29:
  9182                           	opt stack 0
  9183  002CCA                     ___lwdiv:
  9184                           	opt stack 25
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;incstack = 0
  9188  002CCA  0E00               	movlw	0
  9189  002CCC  6E41               	movwf	___lwdiv@quotient+1,c
  9190  002CCE  0E00               	movlw	0
  9191  002CD0  6E40               	movwf	___lwdiv@quotient,c
  9192  002CD2  503E               	movf	___lwdiv@divisor,w,c
  9193  002CD4  103F               	iorwf	___lwdiv@divisor+1,w,c
  9194  002CD6  B4D8               	btfsc	status,2,c
  9195  002CD8  D01C               	goto	l924
  9196  002CDA  0E01               	movlw	1
  9197  002CDC  6E42               	movwf	___lwdiv@counter,c
  9198  002CDE  D004               	goto	l3861
  9199  002CE0                     l3859:
  9200  002CE0  90D8               	bcf	status,0,c
  9201  002CE2  363E               	rlcf	___lwdiv@divisor,f,c
  9202  002CE4  363F               	rlcf	___lwdiv@divisor+1,f,c
  9203  002CE6  2A42               	incf	___lwdiv@counter,f,c
  9204  002CE8                     l3861:
  9205  002CE8  AE3F               	btfss	___lwdiv@divisor+1,7,c
  9206  002CEA  D7FA               	goto	l3859
  9207  002CEC                     l3863:
  9208  002CEC  90D8               	bcf	status,0,c
  9209  002CEE  3640               	rlcf	___lwdiv@quotient,f,c
  9210  002CF0  3641               	rlcf	___lwdiv@quotient+1,f,c
  9211  002CF2  503E               	movf	___lwdiv@divisor,w,c
  9212  002CF4  5C3C               	subwf	___lwdiv@dividend,w,c
  9213  002CF6  503F               	movf	___lwdiv@divisor+1,w,c
  9214  002CF8  583D               	subwfb	___lwdiv@dividend+1,w,c
  9215  002CFA  A0D8               	btfss	status,0,c
  9216  002CFC  D005               	goto	l3871
  9217  002CFE  503E               	movf	___lwdiv@divisor,w,c
  9218  002D00  5E3C               	subwf	___lwdiv@dividend,f,c
  9219  002D02  503F               	movf	___lwdiv@divisor+1,w,c
  9220  002D04  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  9221  002D06  8040               	bsf	___lwdiv@quotient,0,c
  9222  002D08                     l3871:
  9223  002D08  90D8               	bcf	status,0,c
  9224  002D0A  323F               	rrcf	___lwdiv@divisor+1,f,c
  9225  002D0C  323E               	rrcf	___lwdiv@divisor,f,c
  9226  002D0E  2E42               	decfsz	___lwdiv@counter,f,c
  9227  002D10  D7ED               	goto	l3863
  9228  002D12                     l924:
  9229  002D12  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  9230  002D16  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9231  002D1A  0012               	return		;funcret
  9232  002D1C                     __end_of___lwdiv:
  9233                           	opt stack 0
  9234                           tblptru	equ	0xFF8
  9235                           tblptrh	equ	0xFF7
  9236                           tblptrl	equ	0xFF6
  9237                           tablat	equ	0xFF5
  9238                           prodh	equ	0xFF4
  9239                           prodl	equ	0xFF3
  9240                           intcon	equ	0xFF2
  9241                           postinc0	equ	0xFEE
  9242                           wreg	equ	0xFE8
  9243                           indf2	equ	0xFDF
  9244                           postinc2	equ	0xFDE
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _LCD_write_string *****************
  9250 ;; Defined at:
  9251 ;;		line 194 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  9254 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;		None               void
  9259 ;; Registers used:
  9260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9266 ;;      Params:         0       2       0       0
  9267 ;;      Locals:         0       0       0       0
  9268 ;;      Temps:          0       0       0       0
  9269 ;;      Totals:         0       2       0       0
  9270 ;;Total ram usage:        2 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    9
  9273 ;; This function calls:
  9274 ;;		_LCD_write_char
  9275 ;; This function is called by:
  9276 ;;		_LCD_Handler
  9277 ;;		_LCD_write_integer
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text30
  9282  002FC6                     __ptext30:
  9283                           	opt stack 0
  9284  002FC6                     _LCD_write_string:
  9285                           	opt stack 20
  9286                           
  9287                           ;src\LCD_44780.c: 197: while(*buffer){
  9288                           
  9289                           ;incstack = 0
  9290  002FC6  D00A               	goto	l5097
  9291  002FC8                     l5093:
  9292                           
  9293                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9294  002FC8  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9295  002FCC  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9296  002FD0  50DF               	movf	indf2,w,c
  9297  002FD2  EC68  F015         	call	_LCD_write_char
  9298                           
  9299                           ;src\LCD_44780.c: 202: buffer++;
  9300  002FD6  0100               	movlb	0	; () banked
  9301  002FD8  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9302  002FDA  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9303  002FDC                     l5097:
  9304  002FDC  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9305  002FE0  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9306  002FE4  50DF               	movf	indf2,w,c
  9307  002FE6  B4D8               	btfsc	status,2,c
  9308  002FE8  0012               	return	
  9309  002FEA  D7EE               	goto	l5093
  9310  002FEC                     __end_of_LCD_write_string:
  9311                           	opt stack 0
  9312                           tblptru	equ	0xFF8
  9313                           tblptrh	equ	0xFF7
  9314                           tblptrl	equ	0xFF6
  9315                           tablat	equ	0xFF5
  9316                           prodh	equ	0xFF4
  9317                           prodl	equ	0xFF3
  9318                           intcon	equ	0xFF2
  9319                           postinc0	equ	0xFEE
  9320                           wreg	equ	0xFE8
  9321                           indf2	equ	0xFDF
  9322                           postinc2	equ	0xFDE
  9323                           fsr2h	equ	0xFDA
  9324                           fsr2l	equ	0xFD9
  9325                           status	equ	0xFD8
  9326                           
  9327 ;; *************** function _LCD_write_message *****************
  9328 ;; Defined at:
  9329 ;;		line 178 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  9332 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9333 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9334 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;		None               void
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9346 ;;      Params:         0       2       0       0
  9347 ;;      Locals:         0       0       0       0
  9348 ;;      Temps:          0       0       0       0
  9349 ;;      Totals:         0       2       0       0
  9350 ;;Total ram usage:        2 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    9
  9353 ;; This function calls:
  9354 ;;		_LCD_write_char
  9355 ;; This function is called by:
  9356 ;;		_main
  9357 ;;		_LCD_Handler
  9358 ;;		_board_initialization
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text31
  9363  002F48                     __ptext31:
  9364                           	opt stack 0
  9365  002F48                     _LCD_write_message:
  9366                           	opt stack 20
  9367                           
  9368                           ;src\LCD_44780.c: 181: while(*buffer) {
  9369                           
  9370                           ;incstack = 0
  9371  002F48  D00B               	goto	l5089
  9372  002F4A                     l5085:
  9373                           
  9374                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9375  002F4A  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9376  002F4E  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9377  002F52                     	if	0	;tblptru may be non-zero
  9378  002F52                     	endif
  9379  002F52                     	if	0	;tblptru may be non-zero
  9380  002F52                     	endif
  9381  002F52  0008               	tblrd		*
  9382  002F54  50F5               	movf	tablat,w,c
  9383  002F56  EC68  F015         	call	_LCD_write_char
  9384                           
  9385                           ;src\LCD_44780.c: 186: buffer++;
  9386  002F5A  0100               	movlb	0	; () banked
  9387  002F5C  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9388  002F5E  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9389  002F60                     l5089:
  9390  002F60  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9391  002F64  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9392  002F68                     	if	0	;tblptru may be non-zero
  9393  002F68                     	endif
  9394  002F68                     	if	0	;tblptru may be non-zero
  9395  002F68                     	endif
  9396  002F68  0008               	tblrd		*
  9397  002F6A  50F5               	movf	tablat,w,c
  9398  002F6C  0900               	iorlw	0
  9399  002F6E  B4D8               	btfsc	status,2,c
  9400  002F70  0012               	return	
  9401  002F72  D7EB               	goto	l5085
  9402  002F74                     __end_of_LCD_write_message:
  9403                           	opt stack 0
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           postinc0	equ	0xFEE
  9412                           wreg	equ	0xFE8
  9413                           indf2	equ	0xFDF
  9414                           postinc2	equ	0xFDE
  9415                           fsr2h	equ	0xFDA
  9416                           fsr2l	equ	0xFD9
  9417                           status	equ	0xFD8
  9418                           
  9419 ;; *************** function _LCD_write_char *****************
  9420 ;; Defined at:
  9421 ;;		line 145 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  value           1    wreg     unsigned char 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  value           1   25[BANK0 ] unsigned char 
  9426 ;;  D0              1   24[BANK0 ] unsigned char 
  9427 ;;  D1              1   23[BANK0 ] unsigned char 
  9428 ;;  D2              1   22[BANK0 ] unsigned char 
  9429 ;;  D3              1   21[BANK0 ] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;		None               void
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9439 ;;      Params:         0       0       0       0
  9440 ;;      Locals:         0       5       0       0
  9441 ;;      Temps:          0       0       0       0
  9442 ;;      Totals:         0       5       0       0
  9443 ;;Total ram usage:        5 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    8
  9446 ;; This function calls:
  9447 ;;		_LCD_send_command
  9448 ;; This function is called by:
  9449 ;;		_LCD_write_message
  9450 ;;		_LCD_write_string
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text32
  9455  002AD0                     __ptext32:
  9456                           	opt stack 0
  9457  002AD0                     _LCD_write_char:
  9458                           	opt stack 20
  9459                           
  9460                           ;incstack = 0
  9461                           ;LCD_write_char@value stored from wreg
  9462  002AD0  0100               	movlb	0	; () banked
  9463  002AD2  6F79               	movwf	LCD_write_char@value& (0+255),b
  9464                           
  9465                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9466                           ;src\LCD_44780.c: 149: LATAbits.LATA6 = 1;
  9467  002AD4  8C89               	bsf	3977,6,c	;volatile
  9468                           
  9469                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9470  002AD6  0100               	movlb	0	; () banked
  9471  002AD8  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9472  002ADA  0B01               	andlw	1
  9473  002ADC  0100               	movlb	0	; () banked
  9474  002ADE  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9475                           
  9476                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9477  002AE0  0100               	movlb	0	; () banked
  9478  002AE2  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9479  002AE4  46E8               	rlncf	wreg,f,c
  9480  002AE6  0B03               	andlw	3
  9481  002AE8  0B01               	andlw	1
  9482  002AEA  0100               	movlb	0	; () banked
  9483  002AEC  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9484                           
  9485                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9486  002AEE  0100               	movlb	0	; () banked
  9487  002AF0  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9488  002AF2  42E8               	rrncf	wreg,f,c
  9489  002AF4  0B07               	andlw	7
  9490  002AF6  0B01               	andlw	1
  9491  002AF8  0100               	movlb	0	; () banked
  9492  002AFA  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9493                           
  9494                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9495  002AFC  0100               	movlb	0	; () banked
  9496  002AFE  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9497  002B00  0B0F               	andlw	15
  9498  002B02  0B01               	andlw	1
  9499  002B04  0100               	movlb	0	; () banked
  9500  002B06  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9504  002B08  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9505  002B0C  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9506  002B10  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9507  002B14  0100               	movlb	0	; () banked
  9508  002B16  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9509  002B18  ECF9  F016         	call	_LCD_send_command
  9510                           
  9511                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9512  002B1C  0100               	movlb	0	; () banked
  9513  002B1E  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9514  002B20  46E8               	rlncf	wreg,f,c
  9515  002B22  0B1F               	andlw	31
  9516  002B24  0B01               	andlw	1
  9517  002B26  0100               	movlb	0	; () banked
  9518  002B28  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9522  002B2A  0100               	movlb	0	; () banked
  9523  002B2C  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9524  002B2E  42E8               	rrncf	wreg,f,c
  9525  002B30  0B3F               	andlw	63
  9526  002B32  0B01               	andlw	1
  9527  002B34  0100               	movlb	0	; () banked
  9528  002B36  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9532  002B38  0100               	movlb	0	; () banked
  9533  002B3A  90D8               	bcf	status,0,c
  9534  002B3C  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9535  002B3E  0B01               	andlw	1
  9536  002B40  0100               	movlb	0	; () banked
  9537  002B42  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9541  002B44  0100               	movlb	0	; () banked
  9542  002B46  5179               	movf	LCD_write_char@value& (0+255),w,b
  9543  002B48  0B01               	andlw	1
  9544  002B4A  0100               	movlb	0	; () banked
  9545  002B4C  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9549  002B4E  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9550  002B52  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9551  002B56  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9552  002B5A  0100               	movlb	0	; () banked
  9553  002B5C  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9554  002B5E  ECF9  F016         	call	_LCD_send_command
  9555                           
  9556                           ;src\LCD_44780.c: 167: LATAbits.LATA6 = 0;
  9557  002B62  9C89               	bcf	3977,6,c	;volatile
  9558  002B64  0012               	return		;funcret
  9559  002B66                     __end_of_LCD_write_char:
  9560                           	opt stack 0
  9561                           tblptru	equ	0xFF8
  9562                           tblptrh	equ	0xFF7
  9563                           tblptrl	equ	0xFF6
  9564                           tablat	equ	0xFF5
  9565                           prodh	equ	0xFF4
  9566                           prodl	equ	0xFF3
  9567                           intcon	equ	0xFF2
  9568                           postinc0	equ	0xFEE
  9569                           wreg	equ	0xFE8
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           
  9576 ;; *************** function _LCD_goto_line *****************
  9577 ;; Defined at:
  9578 ;;		line 111 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  line            1    wreg     unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  line            1   21[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;		None               void
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9592 ;;      Params:         0       0       0       0
  9593 ;;      Locals:         0       1       0       0
  9594 ;;      Temps:          0       0       0       0
  9595 ;;      Totals:         0       1       0       0
  9596 ;;Total ram usage:        1 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    8
  9599 ;; This function calls:
  9600 ;;		_LCD_send_command
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;;		_LCD_Handler
  9604 ;;		_board_initialization
  9605 ;;		_LCD_goto_xy
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text33
  9610  0026DC                     __ptext33:
  9611                           	opt stack 0
  9612  0026DC                     _LCD_goto_line:
  9613                           	opt stack 21
  9614                           
  9615                           ;incstack = 0
  9616                           ;LCD_goto_line@line stored from wreg
  9617  0026DC  0100               	movlb	0	; () banked
  9618  0026DE  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9619                           
  9620                           ;src\LCD_44780.c: 113: switch(line) {
  9621  0026E0  D064               	goto	l5081
  9622  0026E2                     l5073:
  9623  0026E2  0E00               	movlw	0
  9624  0026E4  0100               	movlb	0	; () banked
  9625  0026E6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9626  0026E8  0E00               	movlw	0
  9627  0026EA  0100               	movlb	0	; () banked
  9628  0026EC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9629  0026EE  0E00               	movlw	0
  9630  0026F0  0100               	movlb	0	; () banked
  9631  0026F2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9632  0026F4  0E01               	movlw	1
  9633  0026F6  ECF9  F016         	call	_LCD_send_command
  9634                           
  9635                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9636  0026FA  0E00               	movlw	0
  9637  0026FC  0100               	movlb	0	; () banked
  9638  0026FE  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9639  002700  0E00               	movlw	0
  9640  002702  0100               	movlb	0	; () banked
  9641  002704  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9642  002706  0E00               	movlw	0
  9643  002708  0100               	movlb	0	; () banked
  9644  00270A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9645  00270C  0E00               	movlw	0
  9646  00270E  ECF9  F016         	call	_LCD_send_command
  9647                           
  9648                           ;src\LCD_44780.c: 117: break;
  9649  002712  0012               	return	
  9650  002714                     l5075:
  9651  002714  0E01               	movlw	1
  9652  002716  0100               	movlb	0	; () banked
  9653  002718  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9654  00271A  0E00               	movlw	0
  9655  00271C  0100               	movlb	0	; () banked
  9656  00271E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9657  002720  0E00               	movlw	0
  9658  002722  0100               	movlb	0	; () banked
  9659  002724  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9660  002726  0E01               	movlw	1
  9661  002728  ECF9  F016         	call	_LCD_send_command
  9662                           
  9663                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9664  00272C  0E00               	movlw	0
  9665  00272E  0100               	movlb	0	; () banked
  9666  002730  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9667  002732  0E00               	movlw	0
  9668  002734  0100               	movlb	0	; () banked
  9669  002736  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9670  002738  0E00               	movlw	0
  9671  00273A  0100               	movlb	0	; () banked
  9672  00273C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9673  00273E  0E00               	movlw	0
  9674  002740  ECF9  F016         	call	_LCD_send_command
  9675                           
  9676                           ;src\LCD_44780.c: 121: break;
  9677  002744  0012               	return	
  9678  002746                     l5077:
  9679  002746  0E00               	movlw	0
  9680  002748  0100               	movlb	0	; () banked
  9681  00274A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9682  00274C  0E00               	movlw	0
  9683  00274E  0100               	movlb	0	; () banked
  9684  002750  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9685  002752  0E01               	movlw	1
  9686  002754  0100               	movlb	0	; () banked
  9687  002756  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9688  002758  0E01               	movlw	1
  9689  00275A  ECF9  F016         	call	_LCD_send_command
  9690                           
  9691                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9692  00275E  0E01               	movlw	1
  9693  002760  0100               	movlb	0	; () banked
  9694  002762  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9695  002764  0E00               	movlw	0
  9696  002766  0100               	movlb	0	; () banked
  9697  002768  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9698  00276A  0E00               	movlw	0
  9699  00276C  0100               	movlb	0	; () banked
  9700  00276E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9701  002770  0E00               	movlw	0
  9702  002772  ECF9  F016         	call	_LCD_send_command
  9703                           
  9704                           ;src\LCD_44780.c: 125: break;
  9705  002776  0012               	return	
  9706  002778                     l5079:
  9707  002778  0E01               	movlw	1
  9708  00277A  0100               	movlb	0	; () banked
  9709  00277C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9710  00277E  0E00               	movlw	0
  9711  002780  0100               	movlb	0	; () banked
  9712  002782  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9713  002784  0E01               	movlw	1
  9714  002786  0100               	movlb	0	; () banked
  9715  002788  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9716  00278A  0E01               	movlw	1
  9717  00278C  ECF9  F016         	call	_LCD_send_command
  9718                           
  9719                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9720  002790  0E01               	movlw	1
  9721  002792  0100               	movlb	0	; () banked
  9722  002794  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9723  002796  0E00               	movlw	0
  9724  002798  0100               	movlb	0	; () banked
  9725  00279A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9726  00279C  0E00               	movlw	0
  9727  00279E  0100               	movlb	0	; () banked
  9728  0027A0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9729  0027A2  0E00               	movlw	0
  9730  0027A4  ECF9  F016         	call	_LCD_send_command
  9731                           
  9732                           ;src\LCD_44780.c: 129: }
  9733  0027A8  0012               	return	
  9734  0027AA                     l5081:
  9735  0027AA  0100               	movlb	0	; () banked
  9736  0027AC  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9737                           
  9738                           ; Switch size 1, requested type "space"
  9739                           ; Number of cases is 4, Range of values is 1 to 4
  9740                           ; switch strategies available:
  9741                           ; Name         Instructions Cycles
  9742                           ; simple_byte           13     7 (average)
  9743                           ;	Chosen strategy is simple_byte
  9744  0027AE  0A01               	xorlw	1	; case 1
  9745  0027B0  B4D8               	btfsc	status,2,c
  9746  0027B2  D797               	goto	l5073
  9747  0027B4  0A03               	xorlw	3	; case 2
  9748  0027B6  B4D8               	btfsc	status,2,c
  9749  0027B8  D7AD               	goto	l5075
  9750  0027BA  0A01               	xorlw	1	; case 3
  9751  0027BC  B4D8               	btfsc	status,2,c
  9752  0027BE  D7C3               	goto	l5077
  9753  0027C0  0A07               	xorlw	7	; case 4
  9754  0027C2  A4D8               	btfss	status,2,c
  9755  0027C4  0012               	return	
  9756  0027C6  D7D8               	goto	l5079
  9757  0027C8                     __end_of_LCD_goto_line:
  9758                           	opt stack 0
  9759                           tblptru	equ	0xFF8
  9760                           tblptrh	equ	0xFF7
  9761                           tblptrl	equ	0xFF6
  9762                           tablat	equ	0xFF5
  9763                           prodh	equ	0xFF4
  9764                           prodl	equ	0xFF3
  9765                           intcon	equ	0xFF2
  9766                           postinc0	equ	0xFEE
  9767                           wreg	equ	0xFE8
  9768                           indf2	equ	0xFDF
  9769                           postinc2	equ	0xFDE
  9770                           fsr2h	equ	0xFDA
  9771                           fsr2l	equ	0xFD9
  9772                           status	equ	0xFD8
  9773                           
  9774 ;; *************** function _LCD_clear *****************
  9775 ;; Defined at:
  9776 ;;		line 257 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;		None               void
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9790 ;;      Params:         0       0       0       0
  9791 ;;      Locals:         0       0       0       0
  9792 ;;      Temps:          0       0       0       0
  9793 ;;      Totals:         0       0       0       0
  9794 ;;Total ram usage:        0 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    8
  9797 ;; This function calls:
  9798 ;;		_LCD_send_command
  9799 ;; This function is called by:
  9800 ;;		_LCD_initialize
  9801 ;;		_main
  9802 ;;		_LCD_Handler
  9803 ;;		_board_initialization
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text34
  9808  002E5A                     __ptext34:
  9809                           	opt stack 0
  9810  002E5A                     _LCD_clear:
  9811                           	opt stack 20
  9812                           
  9813                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9814                           
  9815                           ;incstack = 0
  9816  002E5A  0E00               	movlw	0
  9817  002E5C  0100               	movlb	0	; () banked
  9818  002E5E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9819  002E60  0E00               	movlw	0
  9820  002E62  0100               	movlb	0	; () banked
  9821  002E64  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9822  002E66  0E00               	movlw	0
  9823  002E68  0100               	movlb	0	; () banked
  9824  002E6A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9825  002E6C  0E00               	movlw	0
  9826  002E6E  ECF9  F016         	call	_LCD_send_command
  9827                           
  9828                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9829  002E72  0E00               	movlw	0
  9830  002E74  0100               	movlb	0	; () banked
  9831  002E76  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9832  002E78  0E00               	movlw	0
  9833  002E7A  0100               	movlb	0	; () banked
  9834  002E7C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9835  002E7E  0E01               	movlw	1
  9836  002E80  0100               	movlb	0	; () banked
  9837  002E82  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9838  002E84  0E00               	movlw	0
  9839  002E86  ECF9  F016         	call	_LCD_send_command
  9840  002E8A  0012               	return		;funcret
  9841  002E8C                     __end_of_LCD_clear:
  9842                           	opt stack 0
  9843                           tblptru	equ	0xFF8
  9844                           tblptrh	equ	0xFF7
  9845                           tblptrl	equ	0xFF6
  9846                           tablat	equ	0xFF5
  9847                           prodh	equ	0xFF4
  9848                           prodl	equ	0xFF3
  9849                           intcon	equ	0xFF2
  9850                           postinc0	equ	0xFEE
  9851                           wreg	equ	0xFE8
  9852                           indf2	equ	0xFDF
  9853                           postinc2	equ	0xFDE
  9854                           fsr2h	equ	0xFDA
  9855                           fsr2l	equ	0xFD9
  9856                           status	equ	0xFD8
  9857                           
  9858 ;; *************** function _LCD_send_command *****************
  9859 ;; Defined at:
  9860 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  D3              1    wreg     unsigned char 
  9863 ;;  D2              1   18[BANK0 ] unsigned char 
  9864 ;;  D1              1   19[BANK0 ] unsigned char 
  9865 ;;  D0              1   20[BANK0 ] unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  D3              1   30[COMRAM] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;		None               void
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9877 ;;      Params:         0       3       0       0
  9878 ;;      Locals:         1       0       0       0
  9879 ;;      Temps:          0       0       0       0
  9880 ;;      Totals:         1       3       0       0
  9881 ;;Total ram usage:        4 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    7
  9884 ;; This function calls:
  9885 ;;		_LCD_enable_pulse
  9886 ;; This function is called by:
  9887 ;;		_LCD_goto_line
  9888 ;;		_LCD_write_char
  9889 ;;		_LCD_clear
  9890 ;;		_LCD_cursor
  9891 ;;		_LCD_initialize
  9892 ;;		_LCD_home
  9893 ;;		_LCD_shift
  9894 ;;		_LCD_shift_cursor
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text35
  9899  002DF2                     __ptext35:
  9900                           	opt stack 0
  9901  002DF2                     _LCD_send_command:
  9902                           	opt stack 20
  9903                           
  9904                           ;incstack = 0
  9905                           ;LCD_send_command@D3 stored from wreg
  9906  002DF2  6E42               	movwf	LCD_send_command@D3,c
  9907                           
  9908                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
  9909  002DF4  0100               	movlb	0	; () banked
  9910  002DF6  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
  9911  002DF8  D002               	bra	u4605
  9912  002DFA  948B               	bcf	3979,2,c	;volatile
  9913  002DFC  D001               	bra	u4606
  9914  002DFE                     u4605:
  9915  002DFE  848B               	bsf	3979,2,c	;volatile
  9916  002E00                     u4606:
  9917                           
  9918                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
  9919  002E00  0100               	movlb	0	; () banked
  9920  002E02  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
  9921  002E04  D002               	bra	u4615
  9922  002E06  968B               	bcf	3979,3,c	;volatile
  9923  002E08  D001               	bra	u4616
  9924  002E0A                     u4615:
  9925  002E0A  868B               	bsf	3979,3,c	;volatile
  9926  002E0C                     u4616:
  9927                           
  9928                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
  9929  002E0C  0100               	movlb	0	; () banked
  9930  002E0E  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
  9931  002E10  D002               	bra	u4625
  9932  002E12  908C               	bcf	3980,0,c	;volatile
  9933  002E14  D001               	bra	u4626
  9934  002E16                     u4625:
  9935  002E16  808C               	bsf	3980,0,c	;volatile
  9936  002E18                     u4626:
  9937                           
  9938                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
  9939  002E18  B042               	btfsc	LCD_send_command@D3,0,c
  9940  002E1A  D002               	bra	u4635
  9941  002E1C  928C               	bcf	3980,1,c	;volatile
  9942  002E1E  D001               	bra	u4636
  9943  002E20                     u4635:
  9944  002E20  828C               	bsf	3980,1,c	;volatile
  9945  002E22                     u4636:
  9946                           
  9947                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  9948  002E22  EC09  F018         	call	_LCD_enable_pulse	;wreg free
  9949  002E26  0012               	return		;funcret
  9950  002E28                     __end_of_LCD_send_command:
  9951                           	opt stack 0
  9952                           tblptru	equ	0xFF8
  9953                           tblptrh	equ	0xFF7
  9954                           tblptrl	equ	0xFF6
  9955                           tablat	equ	0xFF5
  9956                           prodh	equ	0xFF4
  9957                           prodl	equ	0xFF3
  9958                           intcon	equ	0xFF2
  9959                           postinc0	equ	0xFEE
  9960                           wreg	equ	0xFE8
  9961                           indf2	equ	0xFDF
  9962                           postinc2	equ	0xFDE
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _LCD_enable_pulse *****************
  9968 ;; Defined at:
  9969 ;;		line 49 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;		None               void
  9976 ;; Registers used:
  9977 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9983 ;;      Params:         0       0       0       0
  9984 ;;      Locals:         0       0       0       0
  9985 ;;      Temps:          0       0       0       0
  9986 ;;      Totals:         0       0       0       0
  9987 ;;Total ram usage:        0 bytes
  9988 ;; Hardware stack levels used:    1
  9989 ;; Hardware stack levels required when called:    6
  9990 ;; This function calls:
  9991 ;;		_delay_ms
  9992 ;; This function is called by:
  9993 ;;		_LCD_send_command
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text36
  9998  003012                     __ptext36:
  9999                           	opt stack 0
 10000  003012                     _LCD_enable_pulse:
 10001                           	opt stack 20
 10002                           
 10003                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 10004                           
 10005                           ;incstack = 0
 10006  003012  828B               	bsf	3979,1,c	;volatile
 10007                           
 10008                           ;src\LCD_44780.c: 52: delay_ms (1);
 10009  003014  0E00               	movlw	0
 10010  003016  0100               	movlb	0	; () banked
 10011  003018  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10012  00301A  0E01               	movlw	1
 10013  00301C  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10014  00301E  EC46  F017         	call	_delay_ms	;wreg free
 10015                           
 10016                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 10017  003022  928B               	bcf	3979,1,c	;volatile
 10018                           
 10019                           ;src\LCD_44780.c: 54: delay_ms (1);
 10020  003024  0E00               	movlw	0
 10021  003026  0100               	movlb	0	; () banked
 10022  003028  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10023  00302A  0E01               	movlw	1
 10024  00302C  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10025  00302E  EC46  F017         	call	_delay_ms	;wreg free
 10026  003032  0012               	return		;funcret
 10027  003034                     __end_of_LCD_enable_pulse:
 10028                           	opt stack 0
 10029                           tblptru	equ	0xFF8
 10030                           tblptrh	equ	0xFF7
 10031                           tblptrl	equ	0xFF6
 10032                           tablat	equ	0xFF5
 10033                           prodh	equ	0xFF4
 10034                           prodl	equ	0xFF3
 10035                           intcon	equ	0xFF2
 10036                           postinc0	equ	0xFEE
 10037                           wreg	equ	0xFE8
 10038                           indf2	equ	0xFDF
 10039                           postinc2	equ	0xFDE
 10040                           fsr2h	equ	0xFDA
 10041                           fsr2l	equ	0xFD9
 10042                           status	equ	0xFD8
 10043                           
 10044 ;; *************** function _delay_ms *****************
 10045 ;; Defined at:
 10046 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  value_ms        2   16[BANK0 ] unsigned int 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;		None               void
 10053 ;; Registers used:
 10054 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10060 ;;      Params:         0       2       0       0
 10061 ;;      Locals:         0       0       0       0
 10062 ;;      Temps:          0       0       0       0
 10063 ;;      Totals:         0       2       0       0
 10064 ;;Total ram usage:        2 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    5
 10067 ;; This function calls:
 10068 ;;		___wmul
 10069 ;; This function is called by:
 10070 ;;		_delay_s
 10071 ;;		_LCD_enable_pulse
 10072 ;;		_LCD_initialize
 10073 ;;		_main
 10074 ;;		_board_initialization
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text37
 10079  002E8C                     __ptext37:
 10080                           	opt stack 0
 10081  002E8C                     _delay_ms:
 10082                           	opt stack 25
 10083                           
 10084                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10085                           
 10086                           ;incstack = 0
 10087  002E8C  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10088  002E90  6A3D               	clrf	___wmul@multiplier+1,c
 10089  002E92  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
 10090  002E96  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10091  002E9A  ECF6  F017         	call	___wmul	;wreg free
 10092  002E9E  C03C  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10093  002EA2  C03D  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10094                           
 10095                           ;src\delay.c: 75: while (clock_counter_reference) {
 10096  002EA6  D006               	goto	l99
 10097  002EA8                     l4265:
 10098                           
 10099                           ;src\delay.c: 85: _delay(240);
 10100  002EA8  0E50               	movlw	80
 10101  002EAA                     u6567:
 10102  002EAA  2EE8               	decfsz	wreg,f,c
 10103  002EAC  D7FE               	goto	u6567
 10104                           
 10105                           ;src\delay.c: 88: clock_counter_reference--;
 10106  002EAE  0644               	decf	_clock_counter_reference,f,c	;volatile
 10107  002EB0  A0D8               	btfss	status,0,c
 10108  002EB2  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10109  002EB4                     l99:
 10110  002EB4  5044               	movf	_clock_counter_reference,w,c	;volatile
 10111  002EB6  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10112  002EB8  B4D8               	btfsc	status,2,c
 10113  002EBA  0012               	return	
 10114  002EBC  D7F5               	goto	l4265
 10115  002EBE                     __end_of_delay_ms:
 10116                           	opt stack 0
 10117                           tblptru	equ	0xFF8
 10118                           tblptrh	equ	0xFF7
 10119                           tblptrl	equ	0xFF6
 10120                           tablat	equ	0xFF5
 10121                           prodh	equ	0xFF4
 10122                           prodl	equ	0xFF3
 10123                           intcon	equ	0xFF2
 10124                           postinc0	equ	0xFEE
 10125                           wreg	equ	0xFE8
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132 ;; *************** function ___wmul *****************
 10133 ;; Defined at:
 10134 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  multiplier      2   24[COMRAM] unsigned int 
 10137 ;;  multiplicand    2   26[COMRAM] unsigned int 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  product         2   28[COMRAM] unsigned int 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  2   24[COMRAM] unsigned int 
 10142 ;; Registers used:
 10143 ;;		wreg, status,2, status,0, prodl, prodh
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10149 ;;      Params:         4       0       0       0
 10150 ;;      Locals:         2       0       0       0
 10151 ;;      Temps:          0       0       0       0
 10152 ;;      Totals:         6       0       0       0
 10153 ;;Total ram usage:        6 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    4
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_delay_ms
 10160 ;;		_sprintf
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text38
 10165  002FEC                     __ptext38:
 10166                           	opt stack 0
 10167  002FEC                     ___wmul:
 10168                           	opt stack 25
 10169                           
 10170                           ;incstack = 0
 10171  002FEC  503C               	movf	___wmul@multiplier,w,c
 10172  002FEE  023E               	mulwf	___wmul@multiplicand,c
 10173  002FF0  CFF3 F040          	movff	prodl,___wmul@product
 10174  002FF4  CFF4 F041          	movff	prodh,___wmul@product+1
 10175  002FF8  503C               	movf	___wmul@multiplier,w,c
 10176  002FFA  023F               	mulwf	___wmul@multiplicand+1,c
 10177  002FFC  50F3               	movf	prodl,w,c
 10178  002FFE  2641               	addwf	___wmul@product+1,f,c
 10179  003000  503D               	movf	___wmul@multiplier+1,w,c
 10180  003002  023E               	mulwf	___wmul@multiplicand,c
 10181  003004  50F3               	movf	prodl,w,c
 10182  003006  2641               	addwf	___wmul@product+1,f,c
 10183  003008  C040  F03C         	movff	___wmul@product,?___wmul
 10184  00300C  C041  F03D         	movff	___wmul@product+1,?___wmul+1
 10185  003010  0012               	return	
 10186  003012                     __end_of___wmul:
 10187                           	opt stack 0
 10188                           tblptru	equ	0xFF8
 10189                           tblptrh	equ	0xFF7
 10190                           tblptrl	equ	0xFF6
 10191                           tablat	equ	0xFF5
 10192                           prodh	equ	0xFF4
 10193                           prodl	equ	0xFF3
 10194                           intcon	equ	0xFF2
 10195                           postinc0	equ	0xFEE
 10196                           wreg	equ	0xFE8
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           fsr2h	equ	0xFDA
 10200                           fsr2l	equ	0xFD9
 10201                           status	equ	0xFD8
 10202                           
 10203 ;; *************** function _Joystick_Polling *****************
 10204 ;; Defined at:
 10205 ;;		line 213 in file "telecomando.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;		None               void
 10212 ;; Registers used:
 10213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10219 ;;      Params:         0       0       0       0
 10220 ;;      Locals:         0       0       0       0
 10221 ;;      Temps:          1       0       0       0
 10222 ;;      Totals:         1       0       0       0
 10223 ;;Total ram usage:        1 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    4
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_main
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text39
 10234  002D64                     __ptext39:
 10235                           	opt stack 0
 10236  002D64                     _Joystick_Polling:
 10237                           	opt stack 26
 10238                           
 10239                           ;telecomando.c: 214: for (i = 0; i < 2; i++) {
 10240                           
 10241                           ;incstack = 0
 10242  002D64  0E00               	movlw	0
 10243  002D66  6E15               	movwf	_i,c	;volatile
 10244  002D68                     l3993:
 10245  002D68  0E01               	movlw	1
 10246  002D6A  6415               	cpfsgt	_i,c	;volatile
 10247  002D6C  D001               	goto	l275
 10248  002D6E  0012               	return	
 10249  002D70                     l275:
 10250                           
 10251                           ;telecomando.c: 215: ADCON0bits.GO = 1;
 10252  002D70  82C2               	bsf	4034,1,c	;volatile
 10253  002D72                     l277:
 10254  002D72  B2C2               	btfsc	4034,1,c	;volatile
 10255  002D74  D7FE               	goto	l277
 10256                           
 10257                           ;telecomando.c: 217: JoystickValues[i] = ADRESH - 128;
 10258  002D76  5015               	movf	_i,w,c	;volatile
 10259  002D78  0D01               	mullw	1
 10260  002D7A  0E22               	movlw	low _JoystickValues
 10261  002D7C  24F3               	addwf	prodl,w,c
 10262  002D7E  6ED9               	movwf	fsr2l,c
 10263  002D80  0E00               	movlw	high _JoystickValues
 10264  002D82  20F4               	addwfc	prodh,w,c
 10265  002D84  6EDA               	movwf	fsr2h,c
 10266  002D86  50C4               	movf	4036,w,c	;volatile
 10267  002D88  0F80               	addlw	128
 10268  002D8A  6EDF               	movwf	indf2,c
 10269                           
 10270                           ;telecomando.c: 218: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10271  002D8C  A4C2               	btfss	4034,2,c	;volatile
 10272  002D8E  D002               	goto	u4180
 10273  002D90  0E01               	movlw	1
 10274  002D92  D001               	goto	u4186
 10275  002D94                     u4180:
 10276  002D94  0E00               	movlw	0
 10277  002D96                     u4186:
 10278  002D96  0AFF               	xorlw	255
 10279  002D98  6E3C               	movwf	??_Joystick_Polling& (0+255),c
 10280  002D9A  463C               	rlncf	??_Joystick_Polling,f,c
 10281  002D9C  463C               	rlncf	??_Joystick_Polling,f,c
 10282  002D9E  50C2               	movf	4034,w,c	;volatile
 10283  002DA0  183C               	xorwf	??_Joystick_Polling,w,c
 10284  002DA2  0BFB               	andlw	-5
 10285  002DA4  183C               	xorwf	??_Joystick_Polling,w,c
 10286  002DA6  6EC2               	movwf	4034,c	;volatile
 10287  002DA8  2A15               	incf	_i,f,c	;volatile
 10288  002DAA  D7DE               	goto	l3993
 10289  002DAC                     __end_of_Joystick_Polling:
 10290                           	opt stack 0
 10291                           tblptru	equ	0xFF8
 10292                           tblptrh	equ	0xFF7
 10293                           tblptrl	equ	0xFF6
 10294                           tablat	equ	0xFF5
 10295                           prodh	equ	0xFF4
 10296                           prodl	equ	0xFF3
 10297                           intcon	equ	0xFF2
 10298                           postinc0	equ	0xFEE
 10299                           wreg	equ	0xFE8
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           fsr2h	equ	0xFDA
 10303                           fsr2l	equ	0xFD9
 10304                           status	equ	0xFD8
 10305                           
 10306 ;; *************** function _ISR_bassa *****************
 10307 ;; Defined at:
 10308 ;;		line 109 in file "telecomando.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;		None
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;		None               void
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10322 ;;      Params:         0       0       0       0
 10323 ;;      Locals:         0       0       0       0
 10324 ;;      Temps:         17       0       0       0
 10325 ;;      Totals:        17       0       0       0
 10326 ;;Total ram usage:       17 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    3
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		Interrupt level 1
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	intcodelo
 10337  000018                     __pintcodelo:
 10338                           	opt stack 0
 10339  000018                     _ISR_bassa:
 10340                           	opt stack 20
 10341                           
 10342                           ;incstack = 0
 10343  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10344  00001A  CFD8 F024          	movff	status,??_ISR_bassa
 10345  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
 10346  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
 10347  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
 10348  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
 10349  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
 10350  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
 10351  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
 10352  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
 10353  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
 10354  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
 10355  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
 10356  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
 10357  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
 10358  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
 10359  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
 10360  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
 10361                           
 10362                           ;telecomando.c: 110: if (PIR2bits.TMR3IF) {
 10363  00005E  A2A1               	btfss	4001,1,c	;volatile
 10364  000060  D00B               	goto	i1l247
 10365                           
 10366                           ;telecomando.c: 111: time_counter++;
 10367  000062  0E01               	movlw	1
 10368  000064  2609               	addwf	_time_counter,f,c	;volatile
 10369  000066  0E00               	movlw	0
 10370  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10371  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10372  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10373                           
 10374                           ;telecomando.c: 112: TMR3H = 0xB1;
 10375  00006E  0EB1               	movlw	177
 10376  000070  6EB3               	movwf	4019,c	;volatile
 10377                           
 10378                           ;telecomando.c: 113: TMR3L = 0xE0;
 10379  000072  0EE0               	movlw	224
 10380  000074  6EB2               	movwf	4018,c	;volatile
 10381                           
 10382                           ;telecomando.c: 114: PIR2bits.TMR3IF = 0;
 10383  000076  92A1               	bcf	4001,1,c	;volatile
 10384  000078                     i1l247:
 10385  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10386  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10387  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10388  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10389  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10390  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10391  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10392  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10393  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10394  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10395  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10396  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10397  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10398  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10399  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10400  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10401  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10402  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10403  0000BE  0010               	retfie	
 10404  0000C0                     __end_of_ISR_bassa:
 10405                           	opt stack 0
 10406                           pclatu	equ	0xFFB
 10407                           pclath	equ	0xFFA
 10408                           tblptru	equ	0xFF8
 10409                           tblptrh	equ	0xFF7
 10410                           tblptrl	equ	0xFF6
 10411                           tablat	equ	0xFF5
 10412                           prodh	equ	0xFF4
 10413                           prodl	equ	0xFF3
 10414                           intcon	equ	0xFF2
 10415                           postinc0	equ	0xFEE
 10416                           fsr0h	equ	0xFEA
 10417                           fsr0l	equ	0xFE9
 10418                           wreg	equ	0xFE8
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           bsr	equ	0xFE0
 10422                           indf2	equ	0xFDF
 10423                           postinc2	equ	0xFDE
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8
 10427                           
 10428 ;; *************** function _ISR_alta *****************
 10429 ;; Defined at:
 10430 ;;		line 94 in file "telecomando.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;		None               void
 10437 ;; Registers used:
 10438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10444 ;;      Params:         0       0       0       0
 10445 ;;      Locals:         1       0       0       0
 10446 ;;      Temps:          0      16       0       0
 10447 ;;      Totals:         1      16       0       0
 10448 ;;Total ram usage:       17 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:    2
 10451 ;; This function calls:
 10452 ;;		_getsUSART
 10453 ;; This function is called by:
 10454 ;;		Interrupt level 2
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	intcode
 10459  000008                     __pintcode:
 10460                           	opt stack 0
 10461  000008                     _ISR_alta:
 10462                           	opt stack 20
 10463                           
 10464                           ;incstack = 0
 10465  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10466  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10467  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10468  000012  EDE4  F013         	call	int_func,f	;refresh shadow registers
 10469                           pclatu	equ	0xFFB
 10470                           pclath	equ	0xFFA
 10471                           tblptru	equ	0xFF8
 10472                           tblptrh	equ	0xFF7
 10473                           tblptrl	equ	0xFF6
 10474                           tablat	equ	0xFF5
 10475                           prodh	equ	0xFF4
 10476                           prodl	equ	0xFF3
 10477                           intcon	equ	0xFF2
 10478                           postinc0	equ	0xFEE
 10479                           fsr0h	equ	0xFEA
 10480                           fsr0l	equ	0xFE9
 10481                           wreg	equ	0xFE8
 10482                           fsr1h	equ	0xFE2
 10483                           fsr1l	equ	0xFE1
 10484                           bsr	equ	0xFE0
 10485                           indf2	equ	0xFDF
 10486                           postinc2	equ	0xFDE
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491                           	psect	intcode_body
 10492  0027C8                     __pintcode_body:
 10493                           	opt stack 20
 10494  0027C8                     int_func:
 10495                           	opt stack 20
 10496  0027C8  0006               	pop		; remove dummy address from shadow register refresh
 10497  0027CA  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10498  0027CE  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10499  0027D2  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10500  0027D6  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10501  0027DA  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10502  0027DE  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10503  0027E2  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10504  0027E6  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10505  0027EA  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10506  0027EE  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10507  0027F2  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10508  0027F6  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10509                           
 10510                           ;telecomando.c: 95: if (PIR1bits.RCIF == 1) {
 10511  0027FA  AA9E               	btfss	3998,5,c	;volatile
 10512  0027FC  D036               	goto	i2l243
 10513                           
 10514                           ;telecomando.c: 96: getsUSART((char*) USART_Rx, 7);
 10515  0027FE  0EE2               	movlw	low _USART_Rx
 10516  002800  6E36               	movwf	getsUSART@buffer,c
 10517  002802  0E00               	movlw	high _USART_Rx
 10518  002804  6E37               	movwf	getsUSART@buffer+1,c
 10519  002806  0E07               	movlw	7
 10520  002808  6E38               	movwf	getsUSART@len,c
 10521  00280A  ECBA  F017         	call	_getsUSART	;wreg free
 10522                           
 10523                           ;telecomando.c: 97: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10524  00280E  0EAA               	movlw	170
 10525  002810  0100               	movlb	0	; () banked
 10526  002812  19E2               	xorwf	_USART_Rx& (0+255),w,b
 10527  002814  A4D8               	btfss	status,2,c
 10528  002816  D028               	goto	i2l5537
 10529                           
 10530                           ; BSR set to: 0
 10531  002818  0EAA               	movlw	170
 10532  00281A  0100               	movlb	0	; () banked
 10533  00281C  19E8               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10534  00281E  A4D8               	btfss	status,2,c
 10535  002820  D023               	goto	i2l5537
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;telecomando.c: 98: actual_dir = USART_Rx[1];
 10539  002822  0100               	movlb	0	; () banked
 10540  002824  A1E3               	btfss	(_USART_Rx+1)& (0+255),0,b
 10541  002826  D002               	goto	i2u637_40
 10542  002828  8043               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10543  00282A  D001               	goto	i2u638_45
 10544  00282C                     i2u637_40:
 10545  00282C  9043               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10546  00282E                     i2u638_45:
 10547                           
 10548                           ;telecomando.c: 99: actual_speed_pk1 = USART_Rx[2];
 10549  00282E  C0E4  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10550                           
 10551                           ;telecomando.c: 100: actual_speed_pk0 = USART_Rx[3];
 10552  002832  C0E5  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10553                           
 10554                           ;telecomando.c: 101: ECU_Check = USART_Rx[4];
 10555  002836  C0E6  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10556                           
 10557                           ;telecomando.c: 102: Battery_Check = USART_Rx[5];
 10558  00283A  C0E7  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10559                           
 10560                           ;telecomando.c: 103: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10561  00283E  0E01               	movlw	1
 10562  002840  6E3B               	movwf	_ISR_alta$1308,c
 10563  002842  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10564  002844  0100               	movlb	0	; () banked
 10565  002846  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10566  002848  6B60               	clrf	??_ISR_alta& (0+255),b
 10567  00284A  0100               	movlb	0	; () banked
 10568  00284C  5160               	movf	??_ISR_alta& (0+255),w,b
 10569  00284E  0100               	movlb	0	; () banked
 10570  002850  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10571  002852  A4D8               	btfss	status,2,c
 10572  002854  D005               	goto	i2l5535
 10573                           
 10574                           ; BSR set to: 0
 10575  002856  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10576  002858  A4D8               	btfss	status,2,c
 10577  00285A  D002               	goto	i2l5535
 10578                           
 10579                           ; BSR set to: 0
 10580  00285C  0E00               	movlw	0
 10581  00285E  6E3B               	movwf	_ISR_alta$1308,c
 10582  002860                     i2l5535:
 10583                           
 10584                           ; BSR set to: 0
 10585  002860  C03B  F0E0         	movff	_ISR_alta$1308,_actual_speed	;volatile
 10586  002864  0100               	movlb	0	; () banked
 10587  002866  6BE1               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10588  002868                     i2l5537:
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;telecomando.c: 104: }
 10592                           ;telecomando.c: 105: PIR1bits.RCIF = 0;
 10593  002868  9A9E               	bcf	3998,5,c	;volatile
 10594  00286A                     i2l243:
 10595  00286A  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10596  00286E  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10597  002872  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10598  002876  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10599  00287A  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10600  00287E  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10601  002882  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10602  002886  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10603  00288A  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10604  00288E  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10605  002892  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10606  002896  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10607  00289A  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10608  00289E  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10609  0028A2  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10610  0028A4  0011               	retfie		f
 10611  0028A6                     __end_of_ISR_alta:
 10612                           	opt stack 0
 10613                           pclatu	equ	0xFFB
 10614                           pclath	equ	0xFFA
 10615                           tblptru	equ	0xFF8
 10616                           tblptrh	equ	0xFF7
 10617                           tblptrl	equ	0xFF6
 10618                           tablat	equ	0xFF5
 10619                           prodh	equ	0xFF4
 10620                           prodl	equ	0xFF3
 10621                           intcon	equ	0xFF2
 10622                           postinc0	equ	0xFEE
 10623                           fsr0h	equ	0xFEA
 10624                           fsr0l	equ	0xFE9
 10625                           wreg	equ	0xFE8
 10626                           fsr1h	equ	0xFE2
 10627                           fsr1l	equ	0xFE1
 10628                           bsr	equ	0xFE0
 10629                           indf2	equ	0xFDF
 10630                           postinc2	equ	0xFDE
 10631                           fsr2h	equ	0xFDA
 10632                           fsr2l	equ	0xFD9
 10633                           status	equ	0xFD8
 10634                           
 10635 ;; *************** function _getsUSART *****************
 10636 ;; Defined at:
 10637 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10640 ;;		 -> USART_Rx(7), 
 10641 ;;  len             1   20[COMRAM] unsigned char 
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;  i               1   22[COMRAM] unsigned char 
 10644 ;;  data            1   21[COMRAM] unsigned char 
 10645 ;; Return value:  Size  Location     Type
 10646 ;;		None               void
 10647 ;; Registers used:
 10648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/0
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10654 ;;      Params:         3       0       0       0
 10655 ;;      Locals:         2       0       0       0
 10656 ;;      Temps:          0       0       0       0
 10657 ;;      Totals:         5       0       0       0
 10658 ;;Total ram usage:        5 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; Hardware stack levels required when called:    1
 10661 ;; This function calls:
 10662 ;;		_ReadUSART
 10663 ;; This function is called by:
 10664 ;;		_ISR_alta
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           	psect	text42
 10669  002F74                     __ptext42:
 10670                           	opt stack 0
 10671  002F74                     _getsUSART:
 10672                           	opt stack 20
 10673                           
 10674                           ;incstack = 0
 10675  002F74  0E00               	movlw	0
 10676  002F76  6E3A               	movwf	getsUSART@i,c
 10677  002F78  D00E               	goto	i2l3893
 10678  002F7A                     i2l395:
 10679  002F7A  AA9E               	btfss	3998,5,c	;volatile
 10680  002F7C  D7FE               	goto	i2l395
 10681  002F7E  EC29  F018         	call	_ReadUSART	;wreg free
 10682  002F82  6E39               	movwf	getsUSART@data,c
 10683  002F84  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10684  002F88  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10685  002F8C  C039  FFDF         	movff	getsUSART@data,indf2
 10686  002F90  4A36               	infsnz	getsUSART@buffer,f,c
 10687  002F92  2A37               	incf	getsUSART@buffer+1,f,c
 10688  002F94  2A3A               	incf	getsUSART@i,f,c
 10689  002F96                     i2l3893:
 10690  002F96  5038               	movf	getsUSART@len,w,c
 10691  002F98  5C3A               	subwf	getsUSART@i,w,c
 10692  002F9A  B0D8               	btfsc	status,0,c
 10693  002F9C  0012               	return	
 10694  002F9E  D7ED               	goto	i2l395
 10695  002FA0                     __end_of_getsUSART:
 10696                           	opt stack 0
 10697                           pclatu	equ	0xFFB
 10698                           pclath	equ	0xFFA
 10699                           tblptru	equ	0xFF8
 10700                           tblptrh	equ	0xFF7
 10701                           tblptrl	equ	0xFF6
 10702                           tablat	equ	0xFF5
 10703                           prodh	equ	0xFF4
 10704                           prodl	equ	0xFF3
 10705                           intcon	equ	0xFF2
 10706                           postinc0	equ	0xFEE
 10707                           fsr0h	equ	0xFEA
 10708                           fsr0l	equ	0xFE9
 10709                           wreg	equ	0xFE8
 10710                           fsr1h	equ	0xFE2
 10711                           fsr1l	equ	0xFE1
 10712                           bsr	equ	0xFE0
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _ReadUSART *****************
 10720 ;; Defined at:
 10721 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;		None
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  data            1   17[COMRAM] unsigned char 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      unsigned char 
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10735 ;;      Params:         0       0       0       0
 10736 ;;      Locals:         1       0       0       0
 10737 ;;      Temps:          0       0       0       0
 10738 ;;      Totals:         1       0       0       0
 10739 ;;Total ram usage:        1 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_getsUSART
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text43
 10749  003052                     __ptext43:
 10750                           	opt stack 0
 10751  003052                     _ReadUSART:
 10752                           	opt stack 20
 10753                           
 10754                           ;incstack = 0
 10755  003052  0EF2               	movlw	242
 10756  003054  1611               	andwf	_USART_Status,f,c
 10757  003056  ACAB               	btfss	4011,6,c	;volatile
 10758  003058  D003               	goto	i2l453
 10759  00305A  9011               	bcf	_USART_Status,0,c
 10760  00305C  B0AB               	btfsc	4011,0,c	;volatile
 10761  00305E  8011               	bsf	_USART_Status,0,c
 10762  003060                     i2l453:
 10763  003060  B4AB               	btfsc	4011,2,c	;volatile
 10764  003062  8411               	bsf	_USART_Status,2,c
 10765  003064  B2AB               	btfsc	4011,1,c	;volatile
 10766  003066  8611               	bsf	_USART_Status,3,c
 10767  003068  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10768  00306C  5035               	movf	ReadUSART@data,w,c
 10769  00306E  0012               	return	
 10770  003070                     __end_of_ReadUSART:
 10771                           	opt stack 0
 10772                           pclatu	equ	0xFFB
 10773                           pclath	equ	0xFFA
 10774                           tblptru	equ	0xFF8
 10775                           tblptrh	equ	0xFF7
 10776                           tblptrl	equ	0xFF6
 10777                           tablat	equ	0xFF5
 10778                           prodh	equ	0xFF4
 10779                           prodl	equ	0xFF3
 10780                           intcon	equ	0xFF2
 10781                           postinc0	equ	0xFEE
 10782                           fsr0h	equ	0xFEA
 10783                           fsr0l	equ	0xFE9
 10784                           wreg	equ	0xFE8
 10785                           fsr1h	equ	0xFE2
 10786                           fsr1l	equ	0xFE1
 10787                           bsr	equ	0xFE0
 10788                           indf2	equ	0xFDF
 10789                           postinc2	equ	0xFDE
 10790                           fsr2h	equ	0xFDA
 10791                           fsr2l	equ	0xFD9
 10792                           status	equ	0xFD8
 10793                           pclatu	equ	0xFFB
 10794                           pclath	equ	0xFFA
 10795                           tblptru	equ	0xFF8
 10796                           tblptrh	equ	0xFF7
 10797                           tblptrl	equ	0xFF6
 10798                           tablat	equ	0xFF5
 10799                           prodh	equ	0xFF4
 10800                           prodl	equ	0xFF3
 10801                           intcon	equ	0xFF2
 10802                           postinc0	equ	0xFEE
 10803                           fsr0h	equ	0xFEA
 10804                           fsr0l	equ	0xFE9
 10805                           wreg	equ	0xFE8
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           bsr	equ	0xFE0
 10809                           indf2	equ	0xFDF
 10810                           postinc2	equ	0xFDE
 10811                           fsr2h	equ	0xFDA
 10812                           fsr2l	equ	0xFD9
 10813                           status	equ	0xFD8
 10814                           
 10815                           	psect	rparam
 10816  0000                     pclatu	equ	0xFFB
 10817                           pclath	equ	0xFFA
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodh	equ	0xFF4
 10823                           prodl	equ	0xFF3
 10824                           intcon	equ	0xFF2
 10825                           postinc0	equ	0xFEE
 10826                           fsr0h	equ	0xFEA
 10827                           fsr0l	equ	0xFE9
 10828                           wreg	equ	0xFE8
 10829                           fsr1h	equ	0xFE2
 10830                           fsr1l	equ	0xFE1
 10831                           bsr	equ	0xFE0
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838                           	psect	temp
 10839  000047                     btemp:
 10840                           	opt stack 0
 10841  000047                     	ds	1
 10842  0000                     int$flags	set	btemp
 10843                           pclatu	equ	0xFFB
 10844                           pclath	equ	0xFFA
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           intcon	equ	0xFF2
 10852                           postinc0	equ	0xFEE
 10853                           fsr0h	equ	0xFEA
 10854                           fsr0l	equ	0xFE9
 10855                           wreg	equ	0xFE8
 10856                           fsr1h	equ	0xFE2
 10857                           fsr1l	equ	0xFE1
 10858                           bsr	equ	0xFE0
 10859                           indf2	equ	0xFDF
 10860                           postinc2	equ	0xFDE
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         77
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    114     144
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Tx(BANK0[7]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(BANK0[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  174742
                                            106 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   59271
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1409
                                             18 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28104
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8996
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           0     0      0     130
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   79612
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9596
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10366
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9377
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8888
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8857
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8857
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1341
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1341
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     72      90       4       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       9        0.0%
DATA                 0      0      FB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 14 21:42:14 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l99 2EB4                    ___awdiv@sign 0075              delay_s@repeat_loop 0073  
                            bsr 000FE0             ___wmul@multiplicand 003E                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_LVP$ON 000000  
                           l251 1754                             l260 1884                             l261 1896  
                           l253 1742                             l430 2CAE                             l423 2C8C  
                           l440 2FA0                             l275 2D70                             l371 0690  
                           l427 2CA0                             l428 2CA2                             l277 2D72  
                           l429 2CAC                             l924 2D12                             l678 234C  
                           l782 2080                             l871 2ABE                             l775 1FBC  
                           l688 246A                             l776 2000                             l881 2BE8  
                           l965 0B00                             l982 0C74                             l966 0AF4  
                           l991 0D08                             l967 0AC0                    getsUSART@len 0038  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 0075  
                           _dir 0219                             _str 0119                    ___awmod@sign 0041  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 008B  
                  ___flmul@bexp 0090                    ___flmul@sign 008A                    ___flmul@temp 0095  
                  ___flmul@prod 0091          __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A9  
                  __CFG_WDT$OFF 000000                            l1051 0E7C                            l1060 1186  
                          l1080 1E28                            l1073 1D7C                            l1058 1118  
                          l1068 122A                            l1087 1E84                            l1088 1E9C  
                          l5001 2AAE                            l5011 2B8E                            l5013 2B94  
                          l4311 09AC                            l3335 307C                            l4401 0B72  
                          l4321 09DA                            l4305 0998                            l5017 2BD8  
                          l5009 2B80                            l5033 1DB4                            l5035 1DBC  
                          l5027 1D8C                            l4405 0B84                            l4317 09D0  
                          l5045 1E66                            l5037 1DCC                            l5301 0726  
                          l5221 03A4                            l5213 0320                            l5205 029C  
                          l4423 0CA6                            l4415 0C54                            l5047 1E76  
                          l5039 1E0A                            l5311 080E                            l5223 03BA  
                          l5143 00D4                            l4265 2EA8                            l5073 26E2  
                          l5081 27AA                            l4433 0CC8                            l4441 0CE2  
                          l4329 0A04                            l4513 0E64                            l5313 081C  
                          l5233 043E                            l5217 0352                            l5321 0844  
                          l5161 015C                            l5065 2F28                            l5075 2714  
                          l4371 0AD4                            l5059 1EEE                            l4523 0EA4  
                          l4515 0E6A                            l4507 0E40                            l5331 0892  
                          l5243 04A8                            l5219 0368                            l5171 0188  
                          l5163 0172                            l5077 2746                            l5085 2F4A  
                          l5093 2FC8                            l4429 0CBC                            l4373 0ADA  
                          l4293 0962                            l4621 28C2                            l4605 124A  
                          l5261 056C                            l5229 040C                            l5173 01AE  
                          l5157 0120                            l5149 00EE                            l5341 08F4  
                          l3805 2C8E                            l5069 2F3A                            l5079 2778  
                          l4471 0D9E                            l4463 0D70                            l4439 0CDC  
                          l4359 0A40                            l4287 093E                            l4607 1254  
                          l4519 0E90                            l5335 08C2                            l5327 086A  
                          l5319 0836                            l5247 0520                            l5167 0182  
                          l5343 0912                            l5089 2F60                            l5097 2FDC  
                          l4473 0DA2                            l4449 0D02                            l4377 0AE4  
                          l4297 096C                            l4633 28F6                            l5265 0598  
                          l5249 0526                            l4467 0D92                            l4459 0D5E  
                          l4395 0B62                            l4387 0B24                            l4635 2902  
                          l4627 28D8                            l4571 112C                            l5339 08EE  
                          l5283 065E                            l5267 05A0                            l5275 0636  
                          l5179 01C8                            l5611 1984                            l3861 2CE8  
                          l4397 0B68                            l4901 2346                            l4653 295A  
                          l4645 2938                            l4637 2908                            l4581 1180  
                          l4565 1102                            l4733 1CE0                            l4725 1C00  
                          l5285 0672                            l5277 0644                            l5189 021A  
                          l5621 1A02                            l3871 2D08                            l3863 2CEC  
                          l4479 0DB6                            l4591 11D6                            l4495 0E0A  
                          l5455 253E                            l5615 198E                            l5607 1970  
                          l5551 173A                            l4921 2422                            l4913 239C  
                          l4841 2076                            l4833 204A                            l4649 2946  
                          l4681 2C48                            l4673 2C28                            l4665 2C0E  
                          l4497 0E10                            l4489 0DE6                            l4753 1496  
                          l5297 06C4                            l5289 0694                            l5457 2550  
                          l3859 2CE0                            l4675 2C30                            l4595 11FC  
                          l4499 0E22                            l4771 16DC                            l4747 13DC  
                          l5459 2560                            l5563 1770                            l4917 23DA  
                          l4829 2036                            l4677 2C34                            l4685 2C52  
                          l4669 2C1A                            l4597 1210                            l4765 1622  
                          l4757 14C2                            l3797 2C80                            l5581 1862  
                          l4927 24B6                            l4935 2F0A                            l4855 2244  
                          l4839 2066                            l4783 304A                            l5583 1870  
                          l3993 2D68                            l4961 2664                            l4945 25F6  
                          l4849 2222                            l4793 1F34                            l4689 2C60  
                          l5585 1876                            l4971 2694                            l5595 1890  
                          l4973 26A4                            l4965 2678                            l4893 2320  
                          l4877 22DE                            l4869 228E                            l4975 26AE  
                          l4991 2A58                            l4799 1F68                            l4993 2A5E  
                          l4889 2310                            l4979 26CA                            l4899 233A  
                          l4989 2A4A                   getsUSART@data 0039                            STR_1 3FBA  
                          STR_2 3F90                            STR_3 3F7B                            STR_4 3FBA  
                          STR_5 3FA5                            STR_6 3FCF                            STR_7 3FF9  
                          STR_8 3FEF                            STR_9 3FFD                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u5110 10A4                            _PIE1 000F9D  
                          u5115 1098                            u4180 2D94                            u3615 308C  
                          u3616 308E                            u4186 2D96                            u6130 0688  
                          u4605 2DFE                            u4606 2E00                            u5190 11EA  
                          u4615 2E0A                            u5431 1F12                            u4616 2E0C  
                          u4625 2E16                            u4626 2E18                            u4730 0A8A  
                          u4635 2E20                            u5451 1F46                            u4636 2E22  
                          u4740 0AA2                            u4750 0AA4                            u6440 1750  
                          u5660 2616                            u6550 1A66                            u6470 1830  
                          u6455 1752                            u6480 1848                            u5665 260A  
                          u6486 184A                            u6567 2EAA                            _main 1708  
     __size_of_LCD_send_command 0036                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0047  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 00C0                   __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032  
                  _sprintf$2513 0100                  delay_s@value_s 0072                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010        __end_of_LCD_enable_pulse 3034                   _LCD_backlight 3082  
       __size_of_LCD_initialize 016E                   ___fltol@sign1 00A8                 __end_of___fladd 0DC8  
                         ?_main 0024                 __end_of___awdiv 2964                 __end_of___flneg 2F1C  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2C6A                 __end_of___flmul 126E  
               __end_of___flsub 2D64                 __end_of___fltol 26DC                 __end_of___lldiv 2AD0  
               ___awdiv@divisor 0072                 __end_of___llmod 2BFA                           _T3CON 000FB1  
               __end_of___lwdiv 2D1C                           i1l247 0078                           i2l243 286A  
                         i2l453 3060                           i2l395 2F7A                 ___awdiv@counter 0074  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR3H 000FB3  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                 __end_of_delay_s 2F48                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000              __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 28A6  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 3F7B                           _scale 126E  
               __end_of_isdigit 3052                  __pbitbssCOMRAM 0218                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 0920                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0024             __size_of_LCD_cursor 0032                  WriteUSART@data 003C  
               __initialization 2DAC                  ?_LCD_backlight 0024                    __end_of_main 1A7C  
 __size_of_board_initialization 00BC                   _LCD_goto_line 26DC               ?_Joystick_Polling 0024  
            ??_Joystick_Polling 003C               ?_LCD_write_string 007A                          ??_main 00CA  
                 __activetblptr 000002                  _JoystickValues 0022              ??_LCD_write_string 0043  
          __size_of__tdiv_to_l_ 0192               __end_of_LCD_clear 2E8C          LCD_write_string@buffer 007A  
                        _ADCON1 000FC1                ___llmod@dividend 0070                          ?_scale 0097  
                        _ADRESH 000FC4                ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000  
               getsUSART@buffer 0036                          i2l5535 2860                          i2l5537 2868  
                        i2l3893 2F96              __size_of_ReadUSART 001E                          _SPBRGH 000FB0  
              __end_of___xxtofl 1F00                 _switch_position 0019                __end_of_delay_ms 2EBE  
                __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0                __end_of__powers_ 3F53  
            __size_of_OpenUSART 0060                  ?_LCD_goto_line 0024                          ___flge 235E  
                     ??___fladd 00AC                _delay_set_quartz 3090                          ___wmul 2FEC  
                     ??___awdiv 0042                       ??___flneg 0040                  __CFG_STVREN$ON 000000  
                     ??___awmod 0040                       ??___flmul 0086                       ??___flsub 0043  
                     ??___fltol 00A4                       ??___lldiv 003C                       ??___llmod 003C  
                     ??___lwdiv 0040         __size_of_LCD_write_char 0096                          _fround 1A7C  
LCD_initialize@quartz_frequency 0077                          clear_0 2DB2                          clear_1 2DBE  
                        clear_2 2DCC                ___awdiv@quotient 0076                 ___awmod@divisor 003E  
                     ??_delay_s 0042            __size_of_LCD_Handler 0116                 ___awmod@counter 0040  
               __CFG_BOREN$BOHW 000000               _JoystickConstants 001A                    __pdataCOMRAM 0046  
                     ??_isdigit 003C                    __mediumconst 3EEA                          tblptrh 000FF7  
                _analogic_brake 0014                          tblptrl 000FF6                          tblptru 000FF8  
           __size_of_USART_Send 0030                       ??_sprintf 00C8                      ___flge@ff1 0070  
                    ___flge@ff2 0074                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070                      __accesstop 0060         __end_of__initialization 2DE4  
                    ___flneg@f1 003C                _LCD_send_command 2DF2                   ___rparam_used 000001  
                    ___fltol@f1 00A0                 ??_LCD_backlight 003C                      _WriteUSART 3070  
                __pcstackCOMRAM 0024                       ?_ISR_alta 0024                   __end_of_scale 1708  
                _LCD_initialize 2092               _LCD_write_message 2F48               __end_of_ReadUSART 3070  
            ?_LCD_write_message 007A                      __div_to_l_ 2200                    ??_LCD_cursor 0043  
                  _actual_speed 00E0              __size_of_getsUSART 002C                   ReadUSART@data 0035  
             __end_of_OpenUSART 2CCA                 __div_to_l_@exp1 0041             ??_LCD_write_message 0043  
               __div_to_l_@cntr 0040                         ??_scale 0043                 __div_to_l_@quot 003C  
                    __pbssBANK0 00D2                      __pbssBANK1 0119                      __pnvCOMRAM 0044  
                    _actual_dir 0218                   __div_to_l_@f1 0070                   __div_to_l_@f2 0074  
               ??_LCD_goto_line 0043              __end_of_LCD_cursor 2E5A          __end_of_LCD_initialize 2200  
                       ?___flge 0070                         ?___wmul 003C                      ??_ISR_alta 0060  
     __end_of_LCD_write_message 2F74               ?_LCD_enable_pulse 0024                   putsUSART@data 003D  
                       ?_fround 0097              ??_LCD_enable_pulse 0042                       ?___xxtofl 0070  
              LCD_cursor@active 0076                       ?_delay_ms 0070              __size_of_putsUSART 0026  
                  ??_USART_Send 003F               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2512 009B                         __Lparam 0000                delay_ms@value_ms 0070  
             __end_of_getsUSART 2FA0                     ?_WriteUSART 0024                 ?_LCD_initialize 0024  
               __size_of___flge 015C                         ___fladd 0920                         ___awdiv 28A6  
                       ___flneg 2EEE                         ___awmod 2BFA                         ___flmul 0DC8  
                       ___flsub 2D1C                         ___fltol 25D0                         ___lldiv 2A20  
               __size_of___wmul 0026                  _LCD_write_char 2AD0                         ___llmod 2B66  
                       ___lwdiv 2CCA                         __pcinit 2DAC                 __size_of_fround 02B6  
                       _delay_s 2F1C                         __ramtop 0300             LCD_write_char@value 0079  
                       __ptext0 1708                         __ptext1 2964                         __ptext2 2F1C  
                       __ptext3 2C6A                         __ptext4 2092                         __ptext5 3090  
                       __ptext6 2E28                         __ptext7 3082                         __ptext8 2EBE  
                       __ptext9 2FA0                       _ECU_Check 0010                     ?__div_to_l_ 0070  
              LCD_write_char@D0 0078                LCD_write_char@D1 0077                LCD_write_char@D2 0076  
              LCD_write_char@D3 0075                         _dpowers 3F53                         _isdigit 3034  
                    ??___xxtofl 0074                ___awmod@dividend 003C                      ??_delay_ms 0042  
  __end_of_board_initialization 2A20       __size_of_Joystick_Polling 0048              __end_of_USART_Send 2EEE  
      __end_of_delay_set_quartz 3098                         _sprintf 00C4                  __pintcode_body 27C8  
                     _LCD_clear 2E5A            end_of_initialization 2DE4       __size_of_LCD_write_string 0026  
                 __Lmediumconst 3EEA                         int_func 27C8                   _Battery_Check 000F  
           LCD_backlight@active 003C                 ___lldiv@divisor 0074              LCD_cursor@blinking 0075  
               ___lldiv@counter 0040          __end_of_LCD_write_char 2B66                       _RCSTAbits 000FAB  
                       postinc0 000FEE                         postinc2 000FDE               __end_of_putsUSART 2FC6  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 003C                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 2E28  
                   ___fladd@grs 00B7                   ___xxtofl@sign 0078                       _TRISCbits 000F94  
                    getsUSART@i 003A             __size_of_WriteUSART 0012                      ?_LCD_clear 0024  
       _clock_counter_reference 0044                     ___flmul@grs 008C                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 015E         LCD_write_integer@F17027 00D2                 ?_LCD_write_char 0024  
                 ??_LCD_Handler 0043                  __end_of___flge 24BA                      ?_ISR_bassa 0024  
                __end_of___wmul 3012                   __pidataCOMRAM 3098               __size_of_ISR_alta 289E  
                __end_of_fround 1D32             start_initialization 2DAC                       _ReadUSART 3052  
           __end_of__tdiv_to_l_ 2092                       _OpenUSART 2C6A                __CFG_OSC$IRCIO67 000000  
               ___llmod@divisor 0074                 ___llmod@counter 003C           __end_of_LCD_backlight 3090  
                      ??___flge 003C            _board_initialization 2964                        ??___wmul 0040  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 0043                   sprintf@tmpval 010E  
                     ___fladd@a 00A8                       ___fladd@b 00A4                      fround@prec 00A3  
           __end_of_LCD_Handler 25D0                       ___flmul@a 0082                       ___flmul@b 007E  
                   __pbssCOMRAM 0001                       ___flsub@a 00BC                       ___flsub@b 00B8  
                    ?_ReadUSART 0024                   __pcstackBANK0 0060                   __pcstackBANK1 0100  
              _Joystick_Polling 2D64               __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022  
                  _isdigit$2119 003D               __size_of_delay_ms 0032                     ??_LCD_clear 0043  
       LCD_write_message@buffer 007A                   _ISR_alta$1308 003B                _LCD_write_string 2FC6  
                    ?_OpenUSART 003C                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 0043       delay_set_quartz@frequency 003C  
              ___lwdiv@dividend 003C              LCD_send_command@D0 0074              LCD_send_command@D1 0073  
            LCD_send_command@D2 0072              LCD_send_command@D3 0042                    ??_WriteUSART 003C  
         __end_of_LCD_goto_line 27C8           ?_board_initialization 0024                       __pintcode 0008  
                 __pmediumconst 3EEA                        ?___fladd 00A4                        ?___awdiv 0070  
                      ?___flneg 003C                        ?___awmod 003C                        ?___flmul 007E  
                      ?___flsub 00B8                        ?___fltol 00A0                        ?___lldiv 0070  
                      ?___llmod 0070                       __npowers_ 3EEB                        ?___lwdiv 003C  
                   ??_ISR_bassa 0024                       _getsUSART 2F74                     __pintcodelo 0018  
                      ?_delay_s 0024                     __tdiv_to_l_ 1F00                    ??__div_to_l_ 003C  
                      ?_isdigit 0024                ___lwdiv@quotient 0040                        ?_sprintf 00C0  
                __size_of_scale 049A              __end_of_WriteUSART 3082               ?_delay_set_quartz 0024  
            ??_delay_set_quartz 003C                  ___wmul@product 0040                        _LATAbits 000F89  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 0046                        _PIE1bits 000F9D  
                      _PIE2bits 000FA0                        _PIR1bits 000F9E              __end_of__div_to_l_ 235E  
                      _PIR2bits 000FA1                        i2u637_40 282C                        i2u638_45 282E  
                     _pr_time_1 0001                       _pr_time_2 0005                       _pr_time_3 00DC  
                     _set_speed 000D                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _ISR_alta 0008                     _LCD_Handler 24BA                      ?_getsUSART 0036  
                      _USART_Rx 00E2                        _USART_Tx 00E9                      _ADCON0bits 000FC2  
                     _putsUSART 2FA0                      _ADCON2bits 000FC0               ___wmul@multiplier 003C  
             ?_LCD_send_command 0072                _actual_speed_pk0 0012                _actual_speed_pk1 0013  
              _actual_speed_kmh 00D8                     ??_ReadUSART 0035              ??_LCD_send_command 0042  
                 _set_speed_pk0 0016                   _set_speed_pk1 0017                     ??_OpenUSART 003E  
              ??_LCD_write_char 0043                 OpenUSART@config 003E               LCD_goto_line@line 0075  
                      __Hrparam 0000          ??_board_initialization 0043                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 002E  
              __size_of___awmod 0070                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00B0                __size_of___llmod 0094  
              __size_of___lwdiv 0052                     _fround$2510 009F                     _fround$2511 009B  
                    ?_putsUSART 003D                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1D32                __size_of_isdigit 001E  
                      _delay_ms 2E8C                 ___lwdiv@divisor 003E                 ___lwdiv@counter 0042  
              _LCD_enable_pulse 3012                        __ptext10 3070                        __ptext11 24BA  
                      __ptext20 2200                        __ptext12 00C4                        __ptext21 1D32  
                      __ptext13 126E                        __ptext30 2FC6                        __ptext22 2B66  
                      __ptext14 3034                        __ptext31 2F48                        __ptext23 2A20  
                      __ptext15 1A7C                        __ptext32 2AD0                        __ptext24 25D0  
                      __ptext16 0DC8                        __ptext33 26DC                        __ptext25 2D1C  
                      __ptext17 2BFA                        __ptext42 2F74                        __ptext34 2E5A  
                      __ptext26 0920                        __ptext18 28A6                        __ptext43 3052  
                      __ptext35 2DF2                        __ptext27 2EEE                        __ptext19 1F00  
                      __ptext36 3012                        __ptext28 235E                        __ptext37 2E8C  
                      __ptext29 2CCA                        __ptext38 2FEC                        __ptext39 2D64  
                      __powers_ 3F1F                __size_of_sprintf 085C                   __size_of_main 0374  
                      _wait_low 021B        __end_of_Joystick_Polling 2DAC                        int$flags 0047  
                   ??_getsUSART 0039        __end_of_LCD_write_string 2FEC                      _LCD_cursor 2E28  
                    _INTCONbits 000FF2                    _set_steering 0018                  OpenUSART@spbrg 003C  
                      isdigit@c 003E                        scale@scl 009F                    _time_counter 0009  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007D                       sprintf@sp 00C0                __tdiv_to_l_@cntr 007C  
              __tdiv_to_l_@quot 0078                ___lldiv@dividend 0070                      _OSCCONbits 000FD3  
                  ?__tdiv_to_l_ 0070                     ??_putsUSART 003F                        sprintf@c 0118  
                      sprintf@f 00C2                ___lldiv@quotient 003C          __size_of_LCD_backlight 000E  
                 ___fladd@signs 00B4                    ___fladd@aexp 00B5                    ___fladd@bexp 00B6  
                  _USART_Status 0011                      _USART_Send 2EBE                    _power_switch 021A  
