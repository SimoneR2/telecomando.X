

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 21:40:41 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0034C0                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  0034C0  10                 	db	16
    73                           
    74                           	psect	mediumconst
    75  003EEA                     __pmediumconst:
    76                           	opt stack 0
    77  003EEA  00                 	db	0
    78  003EEB                     __npowers_:
    79                           	opt stack 0
    80  003EEB  0000               	dw	0
    81  003EED  3F80               	dw	16256
    82  003EEF  CCCD               	dw	52429
    83  003EF1  3DCC               	dw	15820
    84  003EF3  D70A               	dw	55050
    85  003EF5  3C23               	dw	15395
    86  003EF7  126F               	dw	4719
    87  003EF9  3A83               	dw	14979
    88  003EFB  B717               	dw	46871
    89  003EFD  38D1               	dw	14545
    90  003EFF  C5AC               	dw	50604
    91  003F01  3727               	dw	14119
    92  003F03  37BD               	dw	14269
    93  003F05  3586               	dw	13702
    94  003F07  BF95               	dw	49045
    95  003F09  33D6               	dw	13270
    96  003F0B  CC77               	dw	52343
    97  003F0D  322B               	dw	12843
    98  003F0F  705F               	dw	28767
    99  003F11  3089               	dw	12425
   100  003F13  E6FF               	dw	59135
   101  003F15  2EDB               	dw	11995
   102  003F17  E508               	dw	58632
   103  003F19  1E3C               	dw	7740
   104  003F1B  4260               	dw	16992
   105  003F1D  0DA2               	dw	3490
   106  003F1F                     __end_of__npowers_:
   107                           	opt stack 0
   108  003F1F                     __powers_:
   109                           	opt stack 0
   110  003F1F  0000               	dw	0
   111  003F21  3F80               	dw	16256
   112  003F23  0000               	dw	0
   113  003F25  4120               	dw	16672
   114  003F27  0000               	dw	0
   115  003F29  42C8               	dw	17096
   116  003F2B  0000               	dw	0
   117  003F2D  447A               	dw	17530
   118  003F2F  4000               	dw	16384
   119  003F31  461C               	dw	17948
   120  003F33  5000               	dw	20480
   121  003F35  47C3               	dw	18371
   122  003F37  2400               	dw	9216
   123  003F39  4974               	dw	18804
   124  003F3B  9680               	dw	38528
   125  003F3D  4B18               	dw	19224
   126  003F3F  BC20               	dw	48160
   127  003F41  4CBE               	dw	19646
   128  003F43  6B28               	dw	27432
   129  003F45  4E6E               	dw	20078
   130  003F47  02F9               	dw	761
   131  003F49  5015               	dw	20501
   132  003F4B  78EC               	dw	30956
   133  003F4D  60AD               	dw	24749
   134  003F4F  F2CA               	dw	62154
   135  003F51  7149               	dw	29001
   136  003F53                     __end_of__powers_:
   137                           	opt stack 0
   138  003F53                     _dpowers:
   139                           	opt stack 0
   140  003F53  0001               	dw	1
   141  003F55  0000               	dw	0
   142  003F57  000A               	dw	10
   143  003F59  0000               	dw	0
   144  003F5B  0064               	dw	100
   145  003F5D  0000               	dw	0
   146  003F5F  03E8               	dw	1000
   147  003F61  0000               	dw	0
   148  003F63  2710               	dw	10000
   149  003F65  0000               	dw	0
   150  003F67  86A0               	dw	34464
   151  003F69  0001               	dw	1
   152  003F6B  4240               	dw	16960
   153  003F6D  000F               	dw	15
   154  003F6F  9680               	dw	38528
   155  003F71  0098               	dw	152
   156  003F73  E100               	dw	57600
   157  003F75  05F5               	dw	1525
   158  003F77  CA00               	dw	51712
   159  003F79  3B9A               	dw	15258
   160  003F7B                     __end_of_dpowers:
   161                           	opt stack 0
   162  003F7B                     STR_3:
   163  003F7B  54                 	db	84	;'T'
   164  003F7C  75                 	db	117	;'u'
   165  003F7D  72                 	db	114	;'r'
   166  003F7E  6E                 	db	110	;'n'
   167  003F7F  20                 	db	32
   168  003F80  74                 	db	116	;'t'
   169  003F81  68                 	db	104	;'h'
   170  003F82  65                 	db	101	;'e'
   171  003F83  20                 	db	32
   172  003F84  73                 	db	115	;'s'
   173  003F85  77                 	db	119	;'w'
   174  003F86  69                 	db	105	;'i'
   175  003F87  74                 	db	116	;'t'
   176  003F88  63                 	db	99	;'c'
   177  003F89  68                 	db	104	;'h'
   178  003F8A  20                 	db	32
   179  003F8B  4F                 	db	79	;'O'
   180  003F8C  4E                 	db	78	;'N'
   181  003F8D  21                 	db	33
   182  003F8E  20                 	db	32
   183  003F8F  00                 	db	0
   184  003F90                     STR_2:
   185  003F90  3D                 	db	61	;'='
   186  003F91  3D                 	db	61	;'='
   187  003F92  3E                 	db	62	;'>'
   188  003F93  20                 	db	32
   189  003F94  56                 	db	86	;'V'
   190  003F95  45                 	db	69	;'E'
   191  003F96  48                 	db	72	;'H'
   192  003F97  49                 	db	73	;'I'
   193  003F98  43                 	db	67	;'C'
   194  003F99  4C                 	db	76	;'L'
   195  003F9A  45                 	db	69	;'E'
   196  003F9B  20                 	db	32
   197  003F9C  20                 	db	32
   198  003F9D  4F                 	db	79	;'O'
   199  003F9E  46                 	db	70	;'F'
   200  003F9F  46                 	db	70	;'F'
   201  003FA0  20                 	db	32
   202  003FA1  3C                 	db	60	;'<'
   203  003FA2  3D                 	db	61	;'='
   204  003FA3  3D                 	db	61	;'='
   205  003FA4  00                 	db	0
   206  003FA5                     STR_5:
   207  003FA5  3D                 	db	61	;'='
   208  003FA6  3D                 	db	61	;'='
   209  003FA7  3D                 	db	61	;'='
   210  003FA8  20                 	db	32
   211  003FA9  56                 	db	86	;'V'
   212  003FAA  45                 	db	69	;'E'
   213  003FAB  48                 	db	72	;'H'
   214  003FAC  49                 	db	73	;'I'
   215  003FAD  43                 	db	67	;'C'
   216  003FAE  4C                 	db	76	;'L'
   217  003FAF  45                 	db	69	;'E'
   218  003FB0  20                 	db	32
   219  003FB1  44                 	db	68	;'D'
   220  003FB2  41                 	db	65	;'A'
   221  003FB3  54                 	db	84	;'T'
   222  003FB4  41                 	db	65	;'A'
   223  003FB5  20                 	db	32
   224  003FB6  3D                 	db	61	;'='
   225  003FB7  3D                 	db	61	;'='
   226  003FB8  3D                 	db	61	;'='
   227  003FB9  00                 	db	0
   228  003FBA                     STR_1:
   229  003FBA  3D                 	db	61	;'='
   230  003FBB  3D                 	db	61	;'='
   231  003FBC  3D                 	db	61	;'='
   232  003FBD  3D                 	db	61	;'='
   233  003FBE  3D                 	db	61	;'='
   234  003FBF  3D                 	db	61	;'='
   235  003FC0  3D                 	db	61	;'='
   236  003FC1  3D                 	db	61	;'='
   237  003FC2  3D                 	db	61	;'='
   238  003FC3  3D                 	db	61	;'='
   239  003FC4  3D                 	db	61	;'='
   240  003FC5  3D                 	db	61	;'='
   241  003FC6  3D                 	db	61	;'='
   242  003FC7  3D                 	db	61	;'='
   243  003FC8  3D                 	db	61	;'='
   244  003FC9  3D                 	db	61	;'='
   245  003FCA  3D                 	db	61	;'='
   246  003FCB  3D                 	db	61	;'='
   247  003FCC  3D                 	db	61	;'='
   248  003FCD  3D                 	db	61	;'='
   249  003FCE  00                 	db	0
   250  003FCF                     STR_6:
   251  003FCF  44                 	db	68	;'D'
   252  003FD0  69                 	db	105	;'i'
   253  003FD1  72                 	db	114	;'r'
   254  003FD2  65                 	db	101	;'e'
   255  003FD3  63                 	db	99	;'c'
   256  003FD4  74                 	db	116	;'t'
   257  003FD5  69                 	db	105	;'i'
   258  003FD6  6F                 	db	111	;'o'
   259  003FD7  6E                 	db	110	;'n'
   260  003FD8  3A                 	db	58	;':'
   261  003FD9  20                 	db	32
   262  003FDA  00                 	db	0
   263  003FDB                     STR_10:
   264  003FDB  53                 	db	83	;'S'
   265  003FDC  70                 	db	112	;'p'
   266  003FDD  65                 	db	101	;'e'
   267  003FDE  65                 	db	101	;'e'
   268  003FDF  64                 	db	100	;'d'
   269  003FE0  3A                 	db	58	;':'
   270  003FE1  20                 	db	32
   271  003FE2  25                 	db	37
   272  003FE3  2E                 	db	46
   273  003FE4  33                 	db	51	;'3'
   274  003FE5  66                 	db	102	;'f'
   275  003FE6  00                 	db	0
   276  003FE7                     STR_13:
   277  003FE7  57                 	db	87	;'W'
   278  003FE8  61                 	db	97	;'a'
   279  003FE9  69                 	db	105	;'i'
   280  003FEA  74                 	db	116	;'t'
   281  003FEB  2E                 	db	46
   282  003FEC  2E                 	db	46
   283  003FED  2E                 	db	46
   284  003FEE  00                 	db	0
   285  003FEF                     STR_8:
   286  003FEF  42                 	db	66	;'B'
   287  003FF0  4B                 	db	75	;'K'
   288  003FF1  57                 	db	87	;'W'
   289  003FF2  44                 	db	68	;'D'
   290  003FF3  00                 	db	0
   291  003FF4                     STR_11:
   292  003FF4  4B                 	db	75	;'K'
   293  003FF5  6D                 	db	109	;'m'
   294  003FF6  2F                 	db	47
   295  003FF7  68                 	db	104	;'h'
   296  003FF8  00                 	db	0
   297  003FF9                     STR_7:
   298  003FF9  46                 	db	70	;'F'
   299  003FFA  57                 	db	87	;'W'
   300  003FFB  44                 	db	68	;'D'
   301  003FFC  00                 	db	0
   302  003FFD                     STR_9:
   303  003FFD  50                 	db	80	;'P'
   304  003FFE  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  003FFF  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	nvBANK0
   310  0000F5                     __pnvBANK0:
   311                           	opt stack 0
   312  0000F5                     _clock_counter_reference:
   313                           	opt stack 0
   314  0000F5                     	ds	2
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2bits	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _INTCONbits	set	4082
   320  0000                     _IPR1bits	set	3999
   321  0000                     _IPR2bits	set	4002
   322  0000                     _LATA	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _LATD	set	3980
   327  0000                     _LATDbits	set	3980
   328  0000                     _LATE	set	3981
   329  0000                     _LATEbits	set	3981
   330  0000                     _PIE1	set	3997
   331  0000                     _PIE1bits	set	3997
   332  0000                     _PIE2bits	set	4000
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PIR2bits	set	4001
   335  0000                     _PORTAbits	set	3968
   336  0000                     _PORTBbits	set	3969
   337  0000                     _PORTDbits	set	3971
   338  0000                     _RCONbits	set	4048
   339  0000                     _RCREG	set	4014
   340  0000                     _RCSTA	set	4011
   341  0000                     _RCSTAbits	set	4011
   342  0000                     _SPBRG	set	4015
   343  0000                     _SPBRGH	set	4016
   344  0000                     _T3CON	set	4017
   345  0000                     _TMR3H	set	4019
   346  0000                     _TMR3L	set	4018
   347  0000                     _TRISA	set	3986
   348  0000                     _TRISB	set	3987
   349  0000                     _TRISC	set	3988
   350  0000                     _TRISCbits	set	3988
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISE	set	3990
   353  0000                     _TXREG	set	4013
   354  0000                     _TXSTA	set	4012
   355  0000                     _TXSTAbits	set	4012
   356                           
   357                           	psect	cinit
   358  0031F6                     __pcinit:
   359                           	opt stack 0
   360  0031F6                     start_initialization:
   361                           	opt stack 0
   362  0031F6                     __initialization:
   363                           	opt stack 0
   364                           
   365                           ; Clear objects allocated to BANK1 (12 bytes)
   366  0031F6  EE01  F019         	lfsr	0,__pbssBANK1
   367  0031FA  0E0C               	movlw	12
   368  0031FC                     clear_0:
   369  0031FC  6AEE               	clrf	postinc0,c
   370  0031FE  06E8               	decf	wreg,f,c
   371  003200  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (44 bytes)
   374  003202  EE00  F0C9         	lfsr	0,__pbssBANK0
   375  003206  0E2C               	movlw	44
   376  003208                     clear_1:
   377  003208  6AEE               	clrf	postinc0,c
   378  00320A  06E8               	decf	wreg,f,c
   379  00320C  E1FD               	bnz	clear_1
   380                           
   381                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   382  00320E  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   383                           
   384                           ; Clear objects allocated to COMRAM (33 bytes)
   385  003210  EE00  F023         	lfsr	0,__pbssCOMRAM
   386  003214  0E21               	movlw	33
   387  003216                     clear_2:
   388  003216  6AEE               	clrf	postinc0,c
   389  003218  06E8               	decf	wreg,f,c
   390  00321A  E1FD               	bnz	clear_2
   391                           
   392                           ; Initialize objects allocated to COMRAM (1 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  00321C  0EC0               	movlw	low __pidataCOMRAM
   395  00321E  6EF6               	movwf	tblptrl,c
   396  003220  0E34               	movlw	high __pidataCOMRAM
   397  003222  6EF7               	movwf	tblptrh,c
   398  003224  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  003226  6EF8               	movwf	tblptru,c
   400  003228  0009               	tblrd		*+	;fetch initializer
   401  00322A  CFF5 F045          	movff	tablat,__pdataCOMRAM
   402  00322E                     end_of_initialization:
   403                           	opt stack 0
   404  00322E                     __end_of__initialization:
   405                           	opt stack 0
   406  00322E  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   407  003230  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   408  003232  0E00               	movlw	low (__Lmediumconst shr (0+16))
   409  003234  6EF8               	movwf	tblptru,c
   410  003236  0100               	movlb	0
   411  003238  EFA6  F00B         	goto	_main	;jump to C main() function
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419                           	psect	bitbssCOMRAM
   420  000220                     __pbitbssCOMRAM:
   421                           	opt stack 0
   422  000220                     _actual_dir:
   423                           	opt stack 0
   424  000220                     	ds	1
   425  000221                     _power_switch:
   426                           	opt stack 0
   427  000221                     	ds	1
   428  000222                     _wait_low:
   429                           	opt stack 0
   430  000222                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	bssCOMRAM
   439  000023                     __pbssCOMRAM:
   440                           	opt stack 0
   441  000023                     _JoystickConstants:
   442                           	opt stack 0
   443  000023                     	ds	8
   444  00002B                     _pr_time_1:
   445                           	opt stack 0
   446  00002B                     	ds	4
   447  00002F                     _time_counter:
   448                           	opt stack 0
   449  00002F                     	ds	4
   450  000033                     _JoystickValues:
   451                           	opt stack 0
   452  000033                     	ds	2
   453  000035                     _set_speed:
   454                           	opt stack 0
   455  000035                     	ds	2
   456  000037                     _Battery_Check:
   457                           	opt stack 0
   458  000037                     	ds	1
   459  000038                     _ECU_Check:
   460                           	opt stack 0
   461  000038                     	ds	1
   462  000039                     _USART_Status:
   463                           	opt stack 0
   464  000039                     	ds	1
   465  00003A                     _actual_speed_pk0:
   466                           	opt stack 0
   467  00003A                     	ds	1
   468  00003B                     _actual_speed_pk1:
   469                           	opt stack 0
   470  00003B                     	ds	1
   471  00003C                     _analogic_brake:
   472                           	opt stack 0
   473  00003C                     	ds	1
   474  00003D                     _dir:
   475                           	opt stack 0
   476  00003D                     	ds	1
   477  00003E                     _i:
   478                           	opt stack 0
   479  00003E                     	ds	1
   480  00003F                     _set_speed_pk0:
   481                           	opt stack 0
   482  00003F                     	ds	1
   483  000040                     _set_speed_pk1:
   484                           	opt stack 0
   485  000040                     	ds	1
   486  000041                     _set_steering:
   487                           	opt stack 0
   488  000041                     	ds	1
   489  000042                     _spam_counter:
   490                           	opt stack 0
   491  000042                     	ds	1
   492  000043                     _switch_position:
   493                           	opt stack 0
   494  000043                     	ds	1
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	dataCOMRAM
   503  000045                     __pdataCOMRAM:
   504                           	opt stack 0
   505  000045                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  000045                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515                           	psect	bssBANK0
   516  0000C9                     __pbssBANK0:
   517                           	opt stack 0
   518  0000C9                     _USART_Rx:
   519                           	opt stack 0
   520  0000C9                     	ds	8
   521  0000D1                     _USART_Tx_Old:
   522                           	opt stack 0
   523  0000D1                     	ds	8
   524  0000D9                     LCD_write_integer@F17027:
   525                           	opt stack 0
   526  0000D9                     	ds	6
   527  0000DF                     _actual_speed_kmh:
   528                           	opt stack 0
   529  0000DF                     	ds	4
   530  0000E3                     _pr_time_2:
   531                           	opt stack 0
   532  0000E3                     	ds	4
   533  0000E7                     _pr_time_3:
   534                           	opt stack 0
   535  0000E7                     	ds	4
   536  0000EB                     _actual_speed:
   537                           	opt stack 0
   538  0000EB                     	ds	2
   539  0000ED                     _USART_Tx:
   540                           	opt stack 0
   541  0000ED                     	ds	8
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           
   549                           	psect	bssBANK1
   550  000119                     __pbssBANK1:
   551                           	opt stack 0
   552  000119                     _str:
   553                           	opt stack 0
   554  000119                     	ds	12
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           
   562                           	psect	cstackBANK1
   563  000100                     __pcstackBANK1:
   564                           	opt stack 0
   565  000100                     _sprintf$2400:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x0
   569  000100                     	ds	4
   570  000104                     sprintf@ap:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  000104                     	ds	2
   575  000106                     sprintf@flag:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x6
   579  000106                     	ds	2
   580  000108                     sprintf@val:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x8
   584  000108                     	ds	4
   585  00010C                     sprintf@exp:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589  00010C                     	ds	2
   590  00010E                     sprintf@tmpval:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0xE
   594  00010E                     	ds	4
   595  000112                     sprintf@prec:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     sprintf@fval:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x14
   604  000114                     	ds	4
   605  000118                     sprintf@c:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x18
   609  000118                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           	psect	cstackBANK0
   618  000060                     __pcstackBANK0:
   619                           	opt stack 0
   620  000060                     ??_USART_RX:
   621  000060                     ??_Joystick_Polling:
   622  000060                     ??_isdigit:
   623  000060                     ?___wmul:
   624                           	opt stack 0
   625  000060                     ?___awmod:
   626                           	opt stack 0
   627  000060                     ?___lwdiv:
   628                           	opt stack 0
   629  000060                     ?__tdiv_to_l_:
   630                           	opt stack 0
   631  000060                     ?__div_to_l_:
   632                           	opt stack 0
   633  000060                     ?___flneg:
   634                           	opt stack 0
   635  000060                     ?___lldiv:
   636                           	opt stack 0
   637  000060                     ?___llmod:
   638                           	opt stack 0
   639  000060                     delay_set_quartz@frequency:
   640                           	opt stack 0
   641  000060                     LCD_backlight@active:
   642                           	opt stack 0
   643  000060                     WriteUSART@data:
   644                           	opt stack 0
   645  000060                     OpenUSART@spbrg:
   646                           	opt stack 0
   647  000060                     ___wmul@multiplier:
   648                           	opt stack 0
   649  000060                     ___awmod@dividend:
   650                           	opt stack 0
   651  000060                     ___lwdiv@dividend:
   652                           	opt stack 0
   653  000060                     __div_to_l_@f1:
   654                           	opt stack 0
   655  000060                     ___flge@ff1:
   656                           	opt stack 0
   657  000060                     ___flneg@f1:
   658                           	opt stack 0
   659  000060                     __tdiv_to_l_@f1:
   660                           	opt stack 0
   661  000060                     ___lldiv@dividend:
   662                           	opt stack 0
   663  000060                     ___llmod@dividend:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x0
   667  000060                     	ds	1
   668  000061                     _isdigit$2006:
   669                           	opt stack 0
   670  000061                     putsUSART@data:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x1
   674  000061                     	ds	1
   675  000062                     USART_RX@i:
   676                           	opt stack 0
   677  000062                     OpenUSART@config:
   678                           	opt stack 0
   679  000062                     isdigit@c:
   680                           	opt stack 0
   681  000062                     ___wmul@multiplicand:
   682                           	opt stack 0
   683  000062                     ___awmod@divisor:
   684                           	opt stack 0
   685  000062                     ___lwdiv@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x2
   689  000062                     	ds	1
   690  000063                     
   691                           ; 0 bytes @ 0x3
   692  000063                     	ds	1
   693  000064                     ___awmod@counter:
   694                           	opt stack 0
   695  000064                     ___lwdiv@counter:
   696                           	opt stack 0
   697  000064                     ___wmul@product:
   698                           	opt stack 0
   699  000064                     __div_to_l_@f2:
   700                           	opt stack 0
   701  000064                     ___flge@ff2:
   702                           	opt stack 0
   703  000064                     __tdiv_to_l_@f2:
   704                           	opt stack 0
   705  000064                     ___lldiv@divisor:
   706                           	opt stack 0
   707  000064                     ___llmod@divisor:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x4
   711  000064                     	ds	1
   712  000065                     ___awmod@sign:
   713                           	opt stack 0
   714  000065                     ___lwdiv@quotient:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x5
   718  000065                     	ds	1
   719  000066                     ?___awdiv:
   720                           	opt stack 0
   721  000066                     delay_ms@value_ms:
   722                           	opt stack 0
   723  000066                     ___awdiv@dividend:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x6
   727  000066                     	ds	1
   728  000067                     ?___xxtofl:
   729                           	opt stack 0
   730  000067                     ___xxtofl@val:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x7
   734  000067                     	ds	1
   735  000068                     ??_USART_Send:
   736  000068                     ??__tdiv_to_l_:
   737  000068                     ??___flge:
   738  000068                     delay_s@value_s:
   739                           	opt stack 0
   740  000068                     LCD_send_command@D2:
   741                           	opt stack 0
   742  000068                     ___llmod@counter:
   743                           	opt stack 0
   744  000068                     ___awdiv@divisor:
   745                           	opt stack 0
   746  000068                     __div_to_l_@quot:
   747                           	opt stack 0
   748  000068                     ___lldiv@quotient:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x8
   752  000068                     	ds	1
   753  000069                     delay_s@repeat_loop:
   754                           	opt stack 0
   755  000069                     LCD_send_command@D1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x9
   759  000069                     	ds	1
   760  00006A                     LCD_send_command@D0:
   761                           	opt stack 0
   762  00006A                     USART_Send@i:
   763                           	opt stack 0
   764  00006A                     ___awdiv@counter:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0xA
   768  00006A                     	ds	1
   769  00006B                     ??___xxtofl:
   770  00006B                     LCD_send_command@D3:
   771                           	opt stack 0
   772  00006B                     USART_Send@i_1325:
   773                           	opt stack 0
   774  00006B                     ___awdiv@sign:
   775                           	opt stack 0
   776  00006B                     __tdiv_to_l_@quot:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0xB
   780  00006B                     	ds	1
   781  00006C                     LCD_goto_line@line:
   782                           	opt stack 0
   783  00006C                     LCD_write_char@D3:
   784                           	opt stack 0
   785  00006C                     LCD_cursor@blinking:
   786                           	opt stack 0
   787  00006C                     USART_Send@i_1334:
   788                           	opt stack 0
   789  00006C                     __div_to_l_@cntr:
   790                           	opt stack 0
   791  00006C                     ___lldiv@counter:
   792                           	opt stack 0
   793  00006C                     ___awdiv@quotient:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0xC
   797  00006C                     	ds	1
   798  00006D                     LCD_write_char@D2:
   799                           	opt stack 0
   800  00006D                     LCD_cursor@active:
   801                           	opt stack 0
   802  00006D                     __div_to_l_@exp1:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806  00006D                     	ds	1
   807  00006E                     LCD_write_char@D1:
   808                           	opt stack 0
   809  00006E                     LCD_initialize@quartz_frequency:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0xE
   813  00006E                     	ds	1
   814  00006F                     LCD_write_char@D0:
   815                           	opt stack 0
   816  00006F                     __tdiv_to_l_@cntr:
   817                           	opt stack 0
   818  00006F                     ___xxtofl@sign:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0xF
   822  00006F                     	ds	1
   823  000070                     LCD_write_char@value:
   824                           	opt stack 0
   825  000070                     __tdiv_to_l_@exp1:
   826                           	opt stack 0
   827  000070                     ___xxtofl@exp:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x10
   831  000070                     	ds	1
   832  000071                     LCD_write_message@buffer:
   833                           	opt stack 0
   834  000071                     LCD_write_string@buffer:
   835                           	opt stack 0
   836  000071                     ___xxtofl@arg:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x11
   840  000071                     	ds	2
   841  000073                     
   842                           ; 0 bytes @ 0x13
   843  000073                     	ds	2
   844  000075                     ?___flmul:
   845                           	opt stack 0
   846  000075                     ___flmul@b:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x15
   850  000075                     	ds	4
   851  000079                     ___flmul@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x19
   855  000079                     	ds	4
   856  00007D                     ??___flmul:
   857                           
   858                           ; 0 bytes @ 0x1D
   859  00007D                     	ds	4
   860  000081                     ___flmul@sign:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x21
   864  000081                     	ds	1
   865  000082                     ___flmul@aexp:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x22
   869  000082                     	ds	1
   870  000083                     ___flmul@grs:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x23
   874  000083                     	ds	4
   875  000087                     ___flmul@bexp:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x27
   879  000087                     	ds	1
   880  000088                     ___flmul@prod:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x28
   884  000088                     	ds	4
   885  00008C                     ___flmul@temp:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x2C
   889  00008C                     	ds	2
   890  00008E                     ?_fround:
   891                           	opt stack 0
   892  00008E                     ?_scale:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x2E
   896  00008E                     	ds	4
   897  000092                     _fround$2398:
   898                           	opt stack 0
   899  000092                     _scale$2399:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x32
   903  000092                     	ds	4
   904  000096                     scale@scl:
   905                           	opt stack 0
   906  000096                     _fround$2397:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x36
   910  000096                     	ds	1
   911  000097                     ?___fltol:
   912                           	opt stack 0
   913  000097                     ___fltol@f1:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x37
   917  000097                     	ds	3
   918  00009A                     fround@prec:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x3A
   922  00009A                     	ds	1
   923  00009B                     ??___fltol:
   924  00009B                     ?___fladd:
   925                           	opt stack 0
   926  00009B                     ___fladd@b:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x3B
   930  00009B                     	ds	4
   931  00009F                     ___fltol@sign1:
   932                           	opt stack 0
   933  00009F                     ___fladd@a:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x3F
   937  00009F                     	ds	1
   938  0000A0                     ___fltol@exp1:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x40
   942  0000A0                     	ds	3
   943  0000A3                     ??___fladd:
   944                           
   945                           ; 0 bytes @ 0x43
   946  0000A3                     	ds	8
   947  0000AB                     ___fladd@signs:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x4B
   951  0000AB                     	ds	1
   952  0000AC                     ___fladd@aexp:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x4C
   956  0000AC                     	ds	1
   957  0000AD                     ___fladd@bexp:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x4D
   961  0000AD                     	ds	1
   962  0000AE                     ___fladd@grs:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x4E
   966  0000AE                     	ds	1
   967  0000AF                     ?___flsub:
   968                           	opt stack 0
   969  0000AF                     ___flsub@b:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x4F
   973  0000AF                     	ds	4
   974  0000B3                     ___flsub@a:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x53
   978  0000B3                     	ds	4
   979  0000B7                     ?_sprintf:
   980                           	opt stack 0
   981  0000B7                     sprintf@sp:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x57
   985  0000B7                     	ds	2
   986  0000B9                     sprintf@f:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x59
   990  0000B9                     	ds	6
   991  0000BF                     ??_sprintf:
   992                           
   993                           ; 0 bytes @ 0x5F
   994  0000BF                     	ds	2
   995  0000C1                     ??_main:
   996                           
   997                           ; 0 bytes @ 0x61
   998  0000C1                     	ds	8
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           
  1006                           	psect	cstackCOMRAM
  1007  000001                     __pcstackCOMRAM:
  1008                           	opt stack 0
  1009  000001                     ??_ISR_bassa:
  1010  000001                     
  1011                           ; 0 bytes @ 0x0
  1012  000001                     	ds	17
  1013  000012                     ??i2_USART_RX:
  1014                           
  1015                           ; 0 bytes @ 0x11
  1016  000012                     	ds	2
  1017  000014                     i2USART_RX@i:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x13
  1021  000014                     	ds	1
  1022  000015                     ??_ISR_alta:
  1023                           
  1024                           ; 0 bytes @ 0x14
  1025  000015                     	ds	14
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 117 in file "telecomando.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1052 ;;      Params:         0       0       0       0
  1053 ;;      Locals:         0       0       0       0
  1054 ;;      Temps:          0       8       0       0
  1055 ;;      Totals:         0       8       0       0
  1056 ;;Total ram usage:        8 bytes
  1057 ;; Hardware stack levels required when called:   10
  1058 ;; This function calls:
  1059 ;;		_Joystick_Polling
  1060 ;;		_LCD_Handler
  1061 ;;		_LCD_clear
  1062 ;;		_LCD_goto_line
  1063 ;;		_LCD_write_message
  1064 ;;		_PWR_Button_Polling
  1065 ;;		_USART_RX
  1066 ;;		_USART_Send
  1067 ;;		___flmul
  1068 ;;		___fltol
  1069 ;;		___xxtofl
  1070 ;;		_board_initialization
  1071 ;;		_delay_ms
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text0
  1078  00174C                     __ptext0:
  1079                           	opt stack 0
  1080  00174C                     _main:
  1081                           	opt stack 21
  1082                           
  1083                           ;telecomando.c: 118: board_initialization();
  1084                           
  1085                           ;incstack = 0
  1086  00174C  EC4A  F015         	call	_board_initialization	;wreg free
  1087                           
  1088                           ;telecomando.c: 120: PORTDbits.RD7 = 0;
  1089  001750  9E83               	bcf	3971,7,c	;volatile
  1090                           
  1091                           ;telecomando.c: 123: USART_Tx[0] = 0xAA;
  1092  001752  0EAA               	movlw	170
  1093  001754  0100               	movlb	0	; () banked
  1094  001756  6FED               	movwf	_USART_Tx& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;telecomando.c: 124: USART_Tx[1] = 0x01;
  1098  001758  0E01               	movlw	1
  1099  00175A  0100               	movlb	0	; () banked
  1100  00175C  6FEE               	movwf	(_USART_Tx+1)& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;telecomando.c: 125: USART_Tx[2] = 0x01;
  1104  00175E  0E01               	movlw	1
  1105  001760  0100               	movlb	0	; () banked
  1106  001762  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;telecomando.c: 126: USART_Tx[3] = 0x01;
  1110  001764  0E01               	movlw	1
  1111  001766  0100               	movlb	0	; () banked
  1112  001768  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;telecomando.c: 127: USART_Tx[4] = 0x01;
  1116  00176A  0E01               	movlw	1
  1117  00176C  0100               	movlb	0	; () banked
  1118  00176E  6FF1               	movwf	(_USART_Tx+4)& (0+255),b
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;telecomando.c: 128: USART_Tx[5] = 0x01;
  1122  001770  0E01               	movlw	1
  1123  001772  0100               	movlb	0	; () banked
  1124  001774  6FF2               	movwf	(_USART_Tx+5)& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;telecomando.c: 129: USART_Tx[6] = 0xAA;
  1128  001776  0EAA               	movlw	170
  1129  001778  0100               	movlb	0	; () banked
  1130  00177A  6FF3               	movwf	(_USART_Tx+6)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;telecomando.c: 130: USART_Tx[7] = '\0';
  1134  00177C  0E00               	movlw	0
  1135  00177E  0100               	movlb	0	; () banked
  1136  001780  6FF4               	movwf	(_USART_Tx+7)& (0+255),b
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;telecomando.c: 131: JoystickConstants[0] = 0.703;
  1140  001782  0ECF               	movlw	207
  1141  001784  6E23               	movwf	_JoystickConstants,c	;volatile
  1142  001786  0EF7               	movlw	247
  1143  001788  6E24               	movwf	_JoystickConstants+1,c	;volatile
  1144  00178A  0E33               	movlw	51
  1145  00178C  6E25               	movwf	_JoystickConstants+2,c	;volatile
  1146  00178E  0E3F               	movlw	63
  1147  001790  6E26               	movwf	_JoystickConstants+3,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;telecomando.c: 132: JoystickConstants[1] = 35;
  1151  001792  0E00               	movlw	0
  1152  001794  6E27               	movwf	_JoystickConstants+4,c	;volatile
  1153  001796  0E00               	movlw	0
  1154  001798  6E28               	movwf	_JoystickConstants+5,c	;volatile
  1155  00179A  0E0C               	movlw	12
  1156  00179C  6E29               	movwf	_JoystickConstants+6,c	;volatile
  1157  00179E  0E42               	movlw	66
  1158  0017A0  6E2A               	movwf	_JoystickConstants+7,c	;volatile
  1159  0017A2                     l6081:
  1160                           
  1161                           ;telecomando.c: 138: USART_RX();
  1162  0017A2  EC79  F016         	call	_USART_RX	;wreg free
  1163                           
  1164                           ;telecomando.c: 139: PWR_Button_Polling();
  1165  0017A6  EC3A  F01A         	call	_PWR_Button_Polling	;wreg free
  1166                           
  1167                           ;telecomando.c: 141: if (power_switch == 0) {
  1168  0017AA  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1169  0017AC  D094               	goto	l6115
  1170                           
  1171                           ;telecomando.c: 142: dir = 2;
  1172  0017AE  0E02               	movlw	2
  1173  0017B0  6E3D               	movwf	_dir,c	;volatile
  1174                           
  1175                           ;telecomando.c: 143: set_speed = 0;
  1176  0017B2  0E00               	movlw	0
  1177  0017B4  6E36               	movwf	_set_speed+1,c	;volatile
  1178  0017B6  0E00               	movlw	0
  1179  0017B8  6E35               	movwf	_set_speed,c	;volatile
  1180                           
  1181                           ;telecomando.c: 144: set_steering = 90;
  1182  0017BA  0E5A               	movlw	90
  1183  0017BC  6E41               	movwf	_set_steering,c	;volatile
  1184                           
  1185                           ;telecomando.c: 145: analogic_brake = 0;
  1186  0017BE  0E00               	movlw	0
  1187  0017C0  6E3C               	movwf	_analogic_brake,c	;volatile
  1188  0017C2                     l256:
  1189  0017C2  A2AC               	btfss	4012,1,c	;volatile
  1190  0017C4  D7FE               	goto	l256
  1191                           
  1192                           ;telecomando.c: 147: };
  1193                           ;telecomando.c: 148: USART_Send();
  1194  0017C6  EC4E  F012         	call	_USART_Send	;wreg free
  1195                           
  1196                           ;telecomando.c: 149: while (power_switch == 0) {
  1197  0017CA  D082               	goto	l6113
  1198  0017CC                     l6091:
  1199                           
  1200                           ;telecomando.c: 150: LCD_clear();
  1201  0017CC  ECA8  F019         	call	_LCD_clear	;wreg free
  1202                           
  1203                           ;telecomando.c: 151: LCD_goto_line(1);
  1204  0017D0  0E01               	movlw	1
  1205  0017D2  ECD4  F014         	call	_LCD_goto_line
  1206                           
  1207                           ;telecomando.c: 152: LCD_write_message("====================");
  1208  0017D6  0EBA               	movlw	low STR_1
  1209  0017D8  0100               	movlb	0	; () banked
  1210  0017DA  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1211  0017DC  0E3F               	movlw	high STR_1
  1212  0017DE  0100               	movlb	0	; () banked
  1213  0017E0  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1214  0017E2  ECD7  F019         	call	_LCD_write_message	;wreg free
  1215                           
  1216                           ;telecomando.c: 153: LCD_goto_line(2);
  1217  0017E6  0E02               	movlw	2
  1218  0017E8  ECD4  F014         	call	_LCD_goto_line
  1219                           
  1220                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1221  0017EC  0E90               	movlw	low STR_2
  1222  0017EE  0100               	movlb	0	; () banked
  1223  0017F0  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1224  0017F2  0E3F               	movlw	high STR_2
  1225  0017F4  0100               	movlb	0	; () banked
  1226  0017F6  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1227  0017F8  ECD7  F019         	call	_LCD_write_message	;wreg free
  1228                           
  1229                           ;telecomando.c: 155: LCD_goto_line(3);
  1230  0017FC  0E03               	movlw	3
  1231  0017FE  ECD4  F014         	call	_LCD_goto_line
  1232                           
  1233                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1234  001802  0E7B               	movlw	low STR_3
  1235  001804  0100               	movlb	0	; () banked
  1236  001806  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1237  001808  0E3F               	movlw	high STR_3
  1238  00180A  0100               	movlb	0	; () banked
  1239  00180C  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1240  00180E  ECD7  F019         	call	_LCD_write_message	;wreg free
  1241                           
  1242                           ;telecomando.c: 157: LCD_goto_line(4);
  1243  001812  0E04               	movlw	4
  1244  001814  ECD4  F014         	call	_LCD_goto_line
  1245                           
  1246                           ;telecomando.c: 158: LCD_write_message("====================");
  1247  001818  0EBA               	movlw	low STR_1
  1248  00181A  0100               	movlb	0	; () banked
  1249  00181C  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1250  00181E  0E3F               	movlw	high STR_1
  1251  001820  0100               	movlb	0	; () banked
  1252  001822  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1253  001824  ECD7  F019         	call	_LCD_write_message	;wreg free
  1254                           
  1255                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 50) {
  1256  001828  C02B  F0C1         	movff	_pr_time_1,??_main	;volatile
  1257  00182C  C02C  F0C2         	movff	_pr_time_1+1,??_main+1	;volatile
  1258  001830  C02D  F0C3         	movff	_pr_time_1+2,??_main+2	;volatile
  1259  001834  C02E  F0C4         	movff	_pr_time_1+3,??_main+3	;volatile
  1260  001838  0100               	movlb	0	; () banked
  1261  00183A  1FC1               	comf	??_main& (0+255),f,b
  1262  00183C  1FC2               	comf	(??_main+1)& (0+255),f,b
  1263  00183E  1FC3               	comf	(??_main+2)& (0+255),f,b
  1264  001840  1FC4               	comf	(??_main+3)& (0+255),f,b
  1265  001842  2BC1               	incf	??_main& (0+255),f,b
  1266  001844  0E00               	movlw	0
  1267  001846  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1268  001848  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1269  00184A  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1270  00184C  502F               	movf	_time_counter,w,c	;volatile
  1271  00184E  0100               	movlb	0	; () banked
  1272  001850  25C1               	addwf	??_main& (0+255),w,b
  1273  001852  0100               	movlb	0	; () banked
  1274  001854  6FC5               	movwf	(??_main+4)& (0+255),b
  1275  001856  5030               	movf	_time_counter+1,w,c	;volatile
  1276  001858  0100               	movlb	0	; () banked
  1277  00185A  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1278  00185C  0100               	movlb	0	; () banked
  1279  00185E  6FC6               	movwf	(??_main+5)& (0+255),b
  1280  001860  5031               	movf	_time_counter+2,w,c	;volatile
  1281  001862  0100               	movlb	0	; () banked
  1282  001864  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1283  001866  0100               	movlb	0	; () banked
  1284  001868  6FC7               	movwf	(??_main+6)& (0+255),b
  1285  00186A  5032               	movf	_time_counter+3,w,c	;volatile
  1286  00186C  0100               	movlb	0	; () banked
  1287  00186E  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1288  001870  0100               	movlb	0	; () banked
  1289  001872  6FC8               	movwf	(??_main+7)& (0+255),b
  1290  001874  0100               	movlb	0	; () banked
  1291  001876  51C8               	movf	(??_main+7)& (0+255),w,b
  1292  001878  0100               	movlb	0	; () banked
  1293  00187A  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1294  00187C  0100               	movlb	0	; () banked
  1295  00187E  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1296  001880  E105               	bnz	u7360
  1297  001882  0E32               	movlw	50
  1298  001884  0100               	movlb	0	; () banked
  1299  001886  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1300  001888  A0D8               	btfss	status,0,c
  1301  00188A  D019               	goto	l6109
  1302  00188C                     u7360:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1306  00188C  C02F  F02B         	movff	_time_counter,_pr_time_1	;volatile
  1307  001890  C030  F02C         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1308  001894  C031  F02D         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1309  001898  C032  F02E         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1313  00189C  AE83               	btfss	3971,7,c	;volatile
  1314  00189E  D002               	goto	u7370
  1315  0018A0  0E01               	movlw	1
  1316  0018A2  D001               	goto	u7376
  1317  0018A4                     u7370:
  1318  0018A4  0E00               	movlw	0
  1319  0018A6                     u7376:
  1320  0018A6  0AFF               	xorlw	255
  1321  0018A8  0100               	movlb	0	; () banked
  1322  0018AA  6FC1               	movwf	??_main& (0+255),b
  1323  0018AC  0100               	movlb	0	; () banked
  1324  0018AE  33C1               	rrcf	??_main& (0+255),f,b
  1325  0018B0  33C1               	rrcf	??_main& (0+255),f,b
  1326  0018B2  5083               	movf	3971,w,c	;volatile
  1327  0018B4  0100               	movlb	0	; () banked
  1328  0018B6  19C1               	xorwf	??_main& (0+255),w,b
  1329  0018B8  0B7F               	andlw	-129
  1330  0018BA  19C1               	xorwf	??_main& (0+255),w,b
  1331  0018BC  6E83               	movwf	3971,c	;volatile
  1332  0018BE                     l6109:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;telecomando.c: 162: }
  1336                           ;telecomando.c: 163: PWR_Button_Polling();
  1337  0018BE  EC3A  F01A         	call	_PWR_Button_Polling	;wreg free
  1338                           
  1339                           ;telecomando.c: 164: delay_ms(300);
  1340  0018C2  0E01               	movlw	1
  1341  0018C4  0100               	movlb	0	; () banked
  1342  0018C6  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1343  0018C8  0E2C               	movlw	44
  1344  0018CA  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1345  0018CC  EC3B  F019         	call	_delay_ms	;wreg free
  1346  0018D0                     l6113:
  1347  0018D0  A244               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1348  0018D2  D77C               	goto	l6091
  1349                           
  1350                           ;telecomando.c: 165: }
  1351                           ;telecomando.c: 166: PORTDbits.RD7 = 0;
  1352  0018D4  9E83               	bcf	3971,7,c	;volatile
  1353  0018D6                     l6115:
  1354                           
  1355                           ;telecomando.c: 167: }
  1356                           ;telecomando.c: 169: Joystick_Polling();
  1357  0018D6  ECB1  F018         	call	_Joystick_Polling	;wreg free
  1358                           
  1359                           ;telecomando.c: 172: if (PORTAbits.RA2 == 1) {
  1360  0018DA  A480               	btfss	3968,2,c	;volatile
  1361  0018DC  D003               	goto	l263
  1362                           
  1363                           ;telecomando.c: 173: switch_position = 0;
  1364  0018DE  0E00               	movlw	0
  1365  0018E0  6E43               	movwf	_switch_position,c	;volatile
  1366                           
  1367                           ;telecomando.c: 174: } else {
  1368  0018E2  D00A               	goto	l6125
  1369  0018E4                     l263:
  1370                           
  1371                           ;telecomando.c: 175: if (PORTAbits.RA3 == 0) {
  1372  0018E4  B680               	btfsc	3968,3,c	;volatile
  1373  0018E6  D004               	goto	l6123
  1374                           
  1375                           ;telecomando.c: 176: switch_position = 1;
  1376  0018E8  0E01               	movlw	1
  1377  0018EA  6E43               	movwf	_switch_position,c	;volatile
  1378                           
  1379                           ;telecomando.c: 177: dir = 2;
  1380  0018EC  0E02               	movlw	2
  1381  0018EE  D003               	goto	L1
  1382  0018F0                     l6123:
  1383                           
  1384                           ;telecomando.c: 179: switch_position = 2;
  1385  0018F0  0E02               	movlw	2
  1386  0018F2  6E43               	movwf	_switch_position,c	;volatile
  1387                           
  1388                           ;telecomando.c: 180: dir = 1;
  1389  0018F4  0E01               	movlw	1
  1390  0018F6                     L1:
  1391  0018F6  6E3D               	movwf	_dir,c	;volatile
  1392  0018F8                     l6125:
  1393                           
  1394                           ;telecomando.c: 181: }
  1395                           ;telecomando.c: 182: }
  1396                           ;telecomando.c: 184: set_steering = (JoystickValues[0])*(JoystickConstants[0]);
  1397  0018F8  C023  F079         	movff	_JoystickConstants,___flmul@a	;volatile
  1398  0018FC  C024  F07A         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1399  001900  C025  F07B         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1400  001904  C026  F07C         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1401  001908  5033               	movf	_JoystickValues,w,c	;volatile
  1402  00190A  0100               	movlb	0	; () banked
  1403  00190C  6F67               	movwf	___xxtofl@val& (0+255),b
  1404  00190E  6B68               	clrf	(___xxtofl@val+1)& (0+255),b
  1405  001910  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1406  001912  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1407  001914  0E00               	movlw	0
  1408  001916  EC0C  F00F         	call	___xxtofl
  1409  00191A  C067  F075         	movff	?___xxtofl,___flmul@b
  1410  00191E  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1411  001922  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1412  001926  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1413  00192A  EC53  F009         	call	___flmul	;wreg free
  1414  00192E  C075  F097         	movff	?___flmul,___fltol@f1
  1415  001932  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1416  001936  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1417  00193A  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1418  00193E  EC4E  F014         	call	___fltol	;wreg free
  1419  001942  0100               	movlb	0	; () banked
  1420  001944  5197               	movf	?___fltol& (0+255),w,b
  1421  001946  6E41               	movwf	_set_steering,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;telecomando.c: 185: if (switch_position != 0) {
  1425  001948  5043               	movf	_switch_position,w,c	;volatile
  1426  00194A  B4D8               	btfsc	status,2,c
  1427  00194C  D083               	goto	l6139
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;telecomando.c: 186: if (JoystickValues[1] > 132) {
  1431  00194E  0E84               	movlw	132
  1432  001950  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  1433  001952  D041               	goto	l6135
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;telecomando.c: 187: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1437  001954  C027  F079         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1438  001958  C028  F07A         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1439  00195C  C029  F07B         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1440  001960  C02A  F07C         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1441  001964  0E7E               	movlw	126
  1442  001966  0100               	movlb	0	; () banked
  1443  001968  6FC1               	movwf	??_main& (0+255),b
  1444  00196A  0EFF               	movlw	255
  1445  00196C  0100               	movlb	0	; () banked
  1446  00196E  6FC2               	movwf	(??_main+1)& (0+255),b
  1447  001970  5034               	movf	_JoystickValues+1,w,c	;volatile
  1448  001972  0100               	movlb	0	; () banked
  1449  001974  6FC3               	movwf	(??_main+2)& (0+255),b
  1450  001976  6BC4               	clrf	(??_main+3)& (0+255),b
  1451  001978  0100               	movlb	0	; () banked
  1452  00197A  51C1               	movf	??_main& (0+255),w,b
  1453  00197C  0100               	movlb	0	; () banked
  1454  00197E  27C3               	addwf	(??_main+2)& (0+255),f,b
  1455  001980  0100               	movlb	0	; () banked
  1456  001982  51C2               	movf	(??_main+1)& (0+255),w,b
  1457  001984  0100               	movlb	0	; () banked
  1458  001986  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1459  001988  C0C3  F067         	movff	??_main+2,___xxtofl@val
  1460  00198C  C0C4  F068         	movff	??_main+3,___xxtofl@val+1
  1461  001990  0100               	movlb	0	; () banked
  1462  001992  0E00               	movlw	0
  1463  001994  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1464  001996  0EFF               	movlw	-1
  1465  001998  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1466  00199A  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1467  00199C  0E01               	movlw	1
  1468  00199E  EC0C  F00F         	call	___xxtofl
  1469  0019A2  C067  F075         	movff	?___xxtofl,___flmul@b
  1470  0019A6  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1471  0019AA  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1472  0019AE  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1473  0019B2  EC53  F009         	call	___flmul	;wreg free
  1474  0019B6  C075  F097         	movff	?___flmul,___fltol@f1
  1475  0019BA  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1476  0019BE  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1477  0019C2  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1478  0019C6  EC4E  F014         	call	___fltol	;wreg free
  1479  0019CA  C097  F035         	movff	?___fltol,_set_speed	;volatile
  1480  0019CE  C098  F036         	movff	?___fltol+1,_set_speed+1	;volatile
  1481                           
  1482                           ;telecomando.c: 188: analogic_brake = 0;
  1483  0019D2  0E00               	movlw	0
  1484  0019D4  D03E               	goto	L2
  1485  0019D6                     l6135:
  1486                           
  1487                           ;telecomando.c: 190: set_speed = 0;
  1488  0019D6  0E00               	movlw	0
  1489  0019D8  6E36               	movwf	_set_speed+1,c	;volatile
  1490  0019DA  0E00               	movlw	0
  1491  0019DC  6E35               	movwf	_set_speed,c	;volatile
  1492                           
  1493                           ;telecomando.c: 191: analogic_brake = ((130 - JoystickValues[1]))*(1.9);
  1494  0019DE  0E33               	movlw	51
  1495  0019E0  0100               	movlb	0	; () banked
  1496  0019E2  6F79               	movwf	___flmul@a& (0+255),b
  1497  0019E4  0E33               	movlw	51
  1498  0019E6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  1499  0019E8  0EF3               	movlw	243
  1500  0019EA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  1501  0019EC  0E3F               	movlw	63
  1502  0019EE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  1503  0019F0  5034               	movf	_JoystickValues+1,w,c	;volatile
  1504  0019F2  0100               	movlb	0	; () banked
  1505  0019F4  6FC1               	movwf	??_main& (0+255),b
  1506  0019F6  6BC2               	clrf	(??_main+1)& (0+255),b
  1507  0019F8  0100               	movlb	0	; () banked
  1508  0019FA  1FC1               	comf	??_main& (0+255),f,b
  1509  0019FC  1FC2               	comf	(??_main+1)& (0+255),f,b
  1510  0019FE  4BC1               	infsnz	??_main& (0+255),f,b
  1511  001A00  2BC2               	incf	(??_main+1)& (0+255),f,b
  1512  001A02  0E82               	movlw	130
  1513  001A04  0100               	movlb	0	; () banked
  1514  001A06  27C1               	addwf	??_main& (0+255),f,b
  1515  001A08  0E00               	movlw	0
  1516  001A0A  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1517  001A0C  C0C1  F067         	movff	??_main,___xxtofl@val
  1518  001A10  C0C2  F068         	movff	??_main+1,___xxtofl@val+1
  1519  001A14  0100               	movlb	0	; () banked
  1520  001A16  0E00               	movlw	0
  1521  001A18  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1522  001A1A  0EFF               	movlw	-1
  1523  001A1C  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1524  001A1E  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1525  001A20  0E01               	movlw	1
  1526  001A22  EC0C  F00F         	call	___xxtofl
  1527  001A26  C067  F075         	movff	?___xxtofl,___flmul@b
  1528  001A2A  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1529  001A2E  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1530  001A32  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1531  001A36  EC53  F009         	call	___flmul	;wreg free
  1532  001A3A  C075  F097         	movff	?___flmul,___fltol@f1
  1533  001A3E  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1534  001A42  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1535  001A46  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1536  001A4A  EC4E  F014         	call	___fltol	;wreg free
  1537  001A4E  0100               	movlb	0	; () banked
  1538  001A50  5197               	movf	?___fltol& (0+255),w,b
  1539  001A52                     L2:
  1540  001A52  6E3C               	movwf	_analogic_brake,c	;volatile
  1541  001A54                     l6139:
  1542                           
  1543                           ;telecomando.c: 192: }
  1544                           ;telecomando.c: 193: }
  1545                           ;telecomando.c: 195: if ((time_counter - pr_time_2) >= 2) {
  1546  001A54  C0E3  F0C1         	movff	_pr_time_2,??_main	;volatile
  1547  001A58  C0E4  F0C2         	movff	_pr_time_2+1,??_main+1	;volatile
  1548  001A5C  C0E5  F0C3         	movff	_pr_time_2+2,??_main+2	;volatile
  1549  001A60  C0E6  F0C4         	movff	_pr_time_2+3,??_main+3	;volatile
  1550  001A64  0100               	movlb	0	; () banked
  1551  001A66  1FC1               	comf	??_main& (0+255),f,b
  1552  001A68  1FC2               	comf	(??_main+1)& (0+255),f,b
  1553  001A6A  1FC3               	comf	(??_main+2)& (0+255),f,b
  1554  001A6C  1FC4               	comf	(??_main+3)& (0+255),f,b
  1555  001A6E  2BC1               	incf	??_main& (0+255),f,b
  1556  001A70  0E00               	movlw	0
  1557  001A72  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1558  001A74  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1559  001A76  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1560  001A78  502F               	movf	_time_counter,w,c	;volatile
  1561  001A7A  0100               	movlb	0	; () banked
  1562  001A7C  25C1               	addwf	??_main& (0+255),w,b
  1563  001A7E  0100               	movlb	0	; () banked
  1564  001A80  6FC5               	movwf	(??_main+4)& (0+255),b
  1565  001A82  5030               	movf	_time_counter+1,w,c	;volatile
  1566  001A84  0100               	movlb	0	; () banked
  1567  001A86  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1568  001A88  0100               	movlb	0	; () banked
  1569  001A8A  6FC6               	movwf	(??_main+5)& (0+255),b
  1570  001A8C  5031               	movf	_time_counter+2,w,c	;volatile
  1571  001A8E  0100               	movlb	0	; () banked
  1572  001A90  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1573  001A92  0100               	movlb	0	; () banked
  1574  001A94  6FC7               	movwf	(??_main+6)& (0+255),b
  1575  001A96  5032               	movf	_time_counter+3,w,c	;volatile
  1576  001A98  0100               	movlb	0	; () banked
  1577  001A9A  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1578  001A9C  0100               	movlb	0	; () banked
  1579  001A9E  6FC8               	movwf	(??_main+7)& (0+255),b
  1580  001AA0  0100               	movlb	0	; () banked
  1581  001AA2  51C8               	movf	(??_main+7)& (0+255),w,b
  1582  001AA4  0100               	movlb	0	; () banked
  1583  001AA6  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1584  001AA8  0100               	movlb	0	; () banked
  1585  001AAA  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1586  001AAC  E105               	bnz	u7430
  1587  001AAE  0E02               	movlw	2
  1588  001AB0  0100               	movlb	0	; () banked
  1589  001AB2  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1590  001AB4  A0D8               	btfss	status,0,c
  1591  001AB6  D00A               	goto	l6145
  1592  001AB8                     u7430:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;telecomando.c: 196: pr_time_2 = time_counter;
  1596  001AB8  C02F  F0E3         	movff	_time_counter,_pr_time_2	;volatile
  1597  001ABC  C030  F0E4         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1598  001AC0  C031  F0E5         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1599  001AC4  C032  F0E6         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;telecomando.c: 197: USART_Send();
  1603  001AC8  EC4E  F012         	call	_USART_Send	;wreg free
  1604  001ACC                     l6145:
  1605                           
  1606                           ;telecomando.c: 198: }
  1607                           ;telecomando.c: 200: if ((time_counter - pr_time_3) >= 50) {
  1608  001ACC  C0E7  F0C1         	movff	_pr_time_3,??_main	;volatile
  1609  001AD0  C0E8  F0C2         	movff	_pr_time_3+1,??_main+1	;volatile
  1610  001AD4  C0E9  F0C3         	movff	_pr_time_3+2,??_main+2	;volatile
  1611  001AD8  C0EA  F0C4         	movff	_pr_time_3+3,??_main+3	;volatile
  1612  001ADC  0100               	movlb	0	; () banked
  1613  001ADE  1FC1               	comf	??_main& (0+255),f,b
  1614  001AE0  1FC2               	comf	(??_main+1)& (0+255),f,b
  1615  001AE2  1FC3               	comf	(??_main+2)& (0+255),f,b
  1616  001AE4  1FC4               	comf	(??_main+3)& (0+255),f,b
  1617  001AE6  2BC1               	incf	??_main& (0+255),f,b
  1618  001AE8  0E00               	movlw	0
  1619  001AEA  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1620  001AEC  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1621  001AEE  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1622  001AF0  502F               	movf	_time_counter,w,c	;volatile
  1623  001AF2  0100               	movlb	0	; () banked
  1624  001AF4  25C1               	addwf	??_main& (0+255),w,b
  1625  001AF6  0100               	movlb	0	; () banked
  1626  001AF8  6FC5               	movwf	(??_main+4)& (0+255),b
  1627  001AFA  5030               	movf	_time_counter+1,w,c	;volatile
  1628  001AFC  0100               	movlb	0	; () banked
  1629  001AFE  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1630  001B00  0100               	movlb	0	; () banked
  1631  001B02  6FC6               	movwf	(??_main+5)& (0+255),b
  1632  001B04  5031               	movf	_time_counter+2,w,c	;volatile
  1633  001B06  0100               	movlb	0	; () banked
  1634  001B08  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1635  001B0A  0100               	movlb	0	; () banked
  1636  001B0C  6FC7               	movwf	(??_main+6)& (0+255),b
  1637  001B0E  5032               	movf	_time_counter+3,w,c	;volatile
  1638  001B10  0100               	movlb	0	; () banked
  1639  001B12  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1640  001B14  0100               	movlb	0	; () banked
  1641  001B16  6FC8               	movwf	(??_main+7)& (0+255),b
  1642  001B18  0100               	movlb	0	; () banked
  1643  001B1A  51C8               	movf	(??_main+7)& (0+255),w,b
  1644  001B1C  0100               	movlb	0	; () banked
  1645  001B1E  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1646  001B20  0100               	movlb	0	; () banked
  1647  001B22  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1648  001B24  E105               	bnz	u7440
  1649  001B26  0E32               	movlw	50
  1650  001B28  0100               	movlb	0	; () banked
  1651  001B2A  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1652  001B2C  A0D8               	btfss	status,0,c
  1653  001B2E  D639               	goto	l6081
  1654  001B30                     u7440:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;telecomando.c: 201: pr_time_3 = time_counter;
  1658  001B30  C02F  F0E7         	movff	_time_counter,_pr_time_3	;volatile
  1659  001B34  C030  F0E8         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1660  001B38  C031  F0E9         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1661  001B3C  C032  F0EA         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;telecomando.c: 202: LCD_Handler();
  1665  001B40  ECBE  F013         	call	_LCD_Handler	;wreg free
  1666  001B44  D62E               	goto	l6081
  1667  001B46                     __end_of_main:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _board_initialization *****************
  1678 ;; Defined at:
  1679 ;;		line 354 in file "telecomando.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1693 ;;      Params:         0       0       0       0
  1694 ;;      Locals:         0       0       0       0
  1695 ;;      Temps:          0       0       0       0
  1696 ;;      Totals:         0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    9
  1700 ;; This function calls:
  1701 ;;		_LCD_backlight
  1702 ;;		_LCD_clear
  1703 ;;		_LCD_goto_line
  1704 ;;		_LCD_initialize
  1705 ;;		_LCD_write_message
  1706 ;;		_OpenUSART
  1707 ;;		_WriteUSART
  1708 ;;		_delay_ms
  1709 ;;		_delay_s
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text1
  1716  002A94                     __ptext1:
  1717                           	opt stack 0
  1718  002A94                     _board_initialization:
  1719                           	opt stack 21
  1720                           
  1721                           ;telecomando.c: 356: LATA = 0x00;
  1722                           
  1723                           ;incstack = 0
  1724  002A94  0E00               	movlw	0
  1725  002A96  6E89               	movwf	3977,c	;volatile
  1726                           
  1727                           ;telecomando.c: 357: TRISA = 0b00001111;
  1728  002A98  0E0F               	movlw	15
  1729  002A9A  6E92               	movwf	3986,c	;volatile
  1730                           
  1731                           ;telecomando.c: 358: LATB = 0x00;
  1732  002A9C  0E00               	movlw	0
  1733  002A9E  6E8A               	movwf	3978,c	;volatile
  1734                           
  1735                           ;telecomando.c: 359: TRISB = 0xFF;
  1736  002AA0  6893               	setf	3987,c	;volatile
  1737                           
  1738                           ;telecomando.c: 360: LATC = 0x00;
  1739  002AA2  0E00               	movlw	0
  1740  002AA4  6E8B               	movwf	3979,c	;volatile
  1741                           
  1742                           ;telecomando.c: 361: TRISC = 0b10110000;
  1743  002AA6  0EB0               	movlw	176
  1744  002AA8  6E94               	movwf	3988,c	;volatile
  1745                           
  1746                           ;telecomando.c: 362: LATD = 0x00;
  1747  002AAA  0E00               	movlw	0
  1748  002AAC  6E8C               	movwf	3980,c	;volatile
  1749                           
  1750                           ;telecomando.c: 363: TRISD = 0x00;
  1751  002AAE  0E00               	movlw	0
  1752  002AB0  6E95               	movwf	3989,c	;volatile
  1753                           
  1754                           ;telecomando.c: 364: LATE = 0x00;
  1755  002AB2  0E00               	movlw	0
  1756  002AB4  6E8D               	movwf	3981,c	;volatile
  1757                           
  1758                           ;telecomando.c: 365: TRISE = 0x00;
  1759  002AB6  0E00               	movlw	0
  1760  002AB8  6E96               	movwf	3990,c	;volatile
  1761                           
  1762                           ;telecomando.c: 368: PIR1bits.RCIF = 0;
  1763  002ABA  9A9E               	bcf	3998,5,c	;volatile
  1764                           
  1765                           ;telecomando.c: 369: PIR2bits.TMR3IF = 0;
  1766  002ABC  92A1               	bcf	4001,1,c	;volatile
  1767                           
  1768                           ;telecomando.c: 372: RCONbits.IPEN = 1;
  1769  002ABE  8ED0               	bsf	4048,7,c	;volatile
  1770                           
  1771                           ;telecomando.c: 373: IPR1bits.RCIP = 1;
  1772  002AC0  8A9F               	bsf	3999,5,c	;volatile
  1773                           
  1774                           ;telecomando.c: 374: IPR2bits.TMR3IP = 0;
  1775  002AC2  92A2               	bcf	4002,1,c	;volatile
  1776                           
  1777                           ;telecomando.c: 377: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1778  002AC4  0E4F               	movlw	79
  1779  002AC6  16AB               	andwf	4011,f,c	;volatile
  1780  002AC8  9AAC               	bcf	4012,5,c	;volatile
  1781  002ACA  0ECF               	movlw	207
  1782  002ACC  169D               	andwf	3997,f,c	;volatile
  1783                           
  1784                           ;telecomando.c: 378: delay_ms(10);
  1785  002ACE  0E00               	movlw	0
  1786  002AD0  0100               	movlb	0	; () banked
  1787  002AD2  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1788  002AD4  0E0A               	movlw	10
  1789  002AD6  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1790  002AD8  EC3B  F019         	call	_delay_ms	;wreg free
  1791                           
  1792                           ;telecomando.c: 379: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1793                           ;telecomando.c: 380: & 0b11111101 & 0b11111111 & 0b11111111, 25);
  1794  002ADC  0E00               	movlw	0
  1795  002ADE  0100               	movlb	0	; () banked
  1796  002AE0  6F61               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1797  002AE2  0E19               	movlw	25
  1798  002AE4  6F60               	movwf	OpenUSART@spbrg& (0+255),b
  1799  002AE6  0E7C               	movlw	124
  1800  002AE8  EC3E  F018         	call	_OpenUSART
  1801                           
  1802                           ;telecomando.c: 383: ADCON1 = 0b00001101;
  1803  002AEC  0E0D               	movlw	13
  1804  002AEE  6EC1               	movwf	4033,c	;volatile
  1805                           
  1806                           ;telecomando.c: 384: ADCON0bits.CHS2 = 0;
  1807  002AF0  98C2               	bcf	4034,4,c	;volatile
  1808                           
  1809                           ;telecomando.c: 385: ADCON0bits.CHS1 = 0;
  1810  002AF2  96C2               	bcf	4034,3,c	;volatile
  1811                           
  1812                           ;telecomando.c: 386: ADCON0bits.CHS0 = 0;
  1813  002AF4  94C2               	bcf	4034,2,c	;volatile
  1814                           
  1815                           ;telecomando.c: 387: ADCON2bits.ACQT2 = 1;
  1816  002AF6  8AC0               	bsf	4032,5,c	;volatile
  1817                           
  1818                           ;telecomando.c: 388: ADCON2bits.ACQT1 = 1;
  1819  002AF8  88C0               	bsf	4032,4,c	;volatile
  1820                           
  1821                           ;telecomando.c: 389: ADCON2bits.ACQT0 = 0;
  1822  002AFA  96C0               	bcf	4032,3,c	;volatile
  1823                           
  1824                           ;telecomando.c: 390: ADCON2bits.ADCS2 = 1;
  1825  002AFC  84C0               	bsf	4032,2,c	;volatile
  1826                           
  1827                           ;telecomando.c: 391: ADCON2bits.ADCS1 = 0;
  1828  002AFE  92C0               	bcf	4032,1,c	;volatile
  1829                           
  1830                           ;telecomando.c: 392: ADCON2bits.ADCS0 = 1;
  1831  002B00  80C0               	bsf	4032,0,c	;volatile
  1832                           
  1833                           ;telecomando.c: 393: ADCON2bits.ADFM = 0;
  1834  002B02  9EC0               	bcf	4032,7,c	;volatile
  1835                           
  1836                           ;telecomando.c: 394: ADCON0bits.ADON = 1;
  1837  002B04  80C2               	bsf	4034,0,c	;volatile
  1838                           
  1839                           ;telecomando.c: 396: PORTDbits.RD2 = 1;
  1840  002B06  8483               	bsf	3971,2,c	;volatile
  1841                           
  1842                           ;telecomando.c: 397: delay_ms(10);
  1843  002B08  0E00               	movlw	0
  1844  002B0A  0100               	movlb	0	; () banked
  1845  002B0C  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1846  002B0E  0E0A               	movlw	10
  1847  002B10  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1848  002B12  EC3B  F019         	call	_delay_ms	;wreg free
  1849                           
  1850                           ;telecomando.c: 398: PORTDbits.RD3 = 1;
  1851  002B16  8683               	bsf	3971,3,c	;volatile
  1852                           
  1853                           ;telecomando.c: 399: delay_s(1);
  1854  002B18  0E01               	movlw	1
  1855  002B1A  ECC1  F019         	call	_delay_s
  1856                           
  1857                           ;telecomando.c: 401: LCD_initialize(16);
  1858  002B1E  0E10               	movlw	16
  1859  002B20  EC07  F013         	call	_LCD_initialize
  1860                           
  1861                           ;telecomando.c: 402: LCD_backlight(0);
  1862  002B24  0E00               	movlw	0
  1863  002B26  EC52  F01A         	call	_LCD_backlight
  1864                           
  1865                           ;telecomando.c: 403: LCD_clear();
  1866  002B2A  ECA8  F019         	call	_LCD_clear	;wreg free
  1867                           
  1868                           ;telecomando.c: 404: LCD_goto_line(1);
  1869  002B2E  0E01               	movlw	1
  1870  002B30  ECD4  F014         	call	_LCD_goto_line
  1871                           
  1872                           ;telecomando.c: 406: LCD_write_message("Wait...");
  1873  002B34  0EE7               	movlw	low STR_13
  1874  002B36  0100               	movlb	0	; () banked
  1875  002B38  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1876  002B3A  0E3F               	movlw	high STR_13
  1877  002B3C  0100               	movlb	0	; () banked
  1878  002B3E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1879  002B40  ECD7  F019         	call	_LCD_write_message	;wreg free
  1880                           
  1881                           ;telecomando.c: 407: delay_ms(300);
  1882  002B44  0E01               	movlw	1
  1883  002B46  0100               	movlb	0	; () banked
  1884  002B48  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1885  002B4A  0E2C               	movlw	44
  1886  002B4C  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1887  002B4E  EC3B  F019         	call	_delay_ms	;wreg free
  1888                           
  1889                           ;telecomando.c: 409: PORTDbits.RD2 = 0;
  1890  002B52  9483               	bcf	3971,2,c	;volatile
  1891                           
  1892                           ;telecomando.c: 410: PORTDbits.RD3 = 0;
  1893  002B54  9683               	bcf	3971,3,c	;volatile
  1894                           
  1895                           ;telecomando.c: 413: TMR3H = 0x63;
  1896  002B56  0E63               	movlw	99
  1897  002B58  6EB3               	movwf	4019,c	;volatile
  1898                           
  1899                           ;telecomando.c: 414: TMR3L = 0xC0;
  1900  002B5A  0EC0               	movlw	192
  1901  002B5C  6EB2               	movwf	4018,c	;volatile
  1902                           
  1903                           ;telecomando.c: 417: PIE1bits.RCIE = 1;
  1904  002B5E  8A9D               	bsf	3997,5,c	;volatile
  1905                           
  1906                           ;telecomando.c: 418: PIE2bits.TMR3IE = 1;
  1907  002B60  82A0               	bsf	4000,1,c	;volatile
  1908                           
  1909                           ;telecomando.c: 419: INTCONbits.GIEH = 1;
  1910  002B62  8EF2               	bsf	intcon,7,c	;volatile
  1911                           
  1912                           ;telecomando.c: 420: INTCONbits.GIEL = 1;
  1913  002B64  8CF2               	bsf	intcon,6,c	;volatile
  1914                           
  1915                           ;telecomando.c: 422: RCSTAbits.SPEN = 1;
  1916  002B66  8EAB               	bsf	4011,7,c	;volatile
  1917                           
  1918                           ;telecomando.c: 423: T3CON = 0x01;
  1919  002B68  0E01               	movlw	1
  1920  002B6A  6EB1               	movwf	4017,c	;volatile
  1921                           
  1922                           ;telecomando.c: 424: LCD_clear();
  1923  002B6C  ECA8  F019         	call	_LCD_clear	;wreg free
  1924                           
  1925                           ;telecomando.c: 425: WriteUSART(0xaa);
  1926  002B70  0EAA               	movlw	170
  1927  002B72  EC48  F01A         	call	_WriteUSART
  1928  002B76  0012               	return		;funcret
  1929  002B78                     __end_of_board_initialization:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _delay_s *****************
  1941 ;; Defined at:
  1942 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  value_s         1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  value_s         1    8[BANK0 ] unsigned char 
  1947 ;;  repeat_loop     1    9[BANK0 ] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1957 ;;      Params:         0       0       0       0
  1958 ;;      Locals:         0       2       0       0
  1959 ;;      Temps:          0       0       0       0
  1960 ;;      Totals:         0       2       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    5
  1964 ;; This function calls:
  1965 ;;		_delay_ms
  1966 ;; This function is called by:
  1967 ;;		_board_initialization
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text2
  1972  003382                     __ptext2:
  1973                           	opt stack 0
  1974  003382                     _delay_s:
  1975                           	opt stack 24
  1976                           
  1977                           ;incstack = 0
  1978                           ;delay_s@value_s stored from wreg
  1979  003382  0100               	movlb	0	; () banked
  1980  003384  6F68               	movwf	delay_s@value_s& (0+255),b
  1981                           
  1982                           ;src\delay.c: 104: unsigned char repeat_loop;
  1983                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1984  003386  0E00               	movlw	0
  1985  003388  0100               	movlb	0	; () banked
  1986  00338A  6F69               	movwf	delay_s@repeat_loop& (0+255),b
  1987  00338C  D009               	goto	l5361
  1988  00338E                     l5357:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;src\delay.c: 107: delay_ms (1000);
  1992  00338E  0E03               	movlw	3
  1993  003390  0100               	movlb	0	; () banked
  1994  003392  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1995  003394  0EE8               	movlw	232
  1996  003396  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1997  003398  EC3B  F019         	call	_delay_ms	;wreg free
  1998  00339C  0100               	movlb	0	; () banked
  1999  00339E  2B69               	incf	delay_s@repeat_loop& (0+255),f,b
  2000  0033A0                     l5361:
  2001                           
  2002                           ; BSR set to: 0
  2003  0033A0  0100               	movlb	0	; () banked
  2004  0033A2  5168               	movf	delay_s@value_s& (0+255),w,b
  2005  0033A4  0100               	movlb	0	; () banked
  2006  0033A6  5D69               	subwf	delay_s@repeat_loop& (0+255),w,b
  2007  0033A8  B0D8               	btfsc	status,0,c
  2008  0033AA  0012               	return	
  2009  0033AC  D7F0               	goto	l5357
  2010  0033AE                     __end_of_delay_s:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           intcon	equ	0xFF2
  2017                           postinc0	equ	0xFEE
  2018                           wreg	equ	0xFE8
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _OpenUSART *****************
  2022 ;; Defined at:
  2023 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  config          1    wreg     unsigned char 
  2026 ;;  spbrg           2    0[BANK0 ] unsigned int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  config          1    2[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2038 ;;      Params:         0       2       0       0
  2039 ;;      Locals:         0       1       0       0
  2040 ;;      Temps:          0       0       0       0
  2041 ;;      Totals:         0       3       0       0
  2042 ;;Total ram usage:        3 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    3
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_board_initialization
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text3
  2053  00307C                     __ptext3:
  2054                           	opt stack 0
  2055  00307C                     _OpenUSART:
  2056                           	opt stack 26
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;incstack = 0
  2060                           ;OpenUSART@config stored from wreg
  2061  00307C  0100               	movlb	0	; () banked
  2062  00307E  6F62               	movwf	OpenUSART@config& (0+255),b
  2063  003080  0E00               	movlw	0
  2064  003082  6EAC               	movwf	4012,c	;volatile
  2065  003084  0E00               	movlw	0
  2066  003086  6EAB               	movwf	4011,c	;volatile
  2067  003088  0100               	movlb	0	; () banked
  2068  00308A  B162               	btfsc	OpenUSART@config& (0+255),0,b
  2069                           
  2070                           ; BSR set to: 0
  2071  00308C  88AC               	bsf	4012,4,c	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074                           
  2075                           ; BSR set to: 0
  2076  00308E  0100               	movlb	0	; () banked
  2077  003090  A362               	btfss	OpenUSART@config& (0+255),1,b
  2078  003092  D002               	goto	l5655
  2079                           
  2080                           ; BSR set to: 0
  2081  003094  8CAC               	bsf	4012,6,c	;volatile
  2082  003096  8CAB               	bsf	4011,6,c	;volatile
  2083  003098                     l5655:
  2084                           
  2085                           ; BSR set to: 0
  2086  003098  0100               	movlb	0	; () banked
  2087  00309A  B562               	btfsc	OpenUSART@config& (0+255),2,b
  2088                           
  2089                           ; BSR set to: 0
  2090  00309C  8EAC               	bsf	4012,7,c	;volatile
  2091                           
  2092                           ; BSR set to: 0
  2093                           
  2094                           ; BSR set to: 0
  2095  00309E  0100               	movlb	0	; () banked
  2096  0030A0  A762               	btfss	OpenUSART@config& (0+255),3,b
  2097  0030A2  D002               	goto	l450
  2098                           
  2099                           ; BSR set to: 0
  2100  0030A4  88AB               	bsf	4011,4,c	;volatile
  2101  0030A6  D001               	goto	l5663
  2102  0030A8                     l450:
  2103                           
  2104                           ; BSR set to: 0
  2105  0030A8  8AAB               	bsf	4011,5,c	;volatile
  2106  0030AA                     l5663:
  2107                           
  2108                           ; BSR set to: 0
  2109  0030AA  0100               	movlb	0	; () banked
  2110  0030AC  B962               	btfsc	OpenUSART@config& (0+255),4,b
  2111                           
  2112                           ; BSR set to: 0
  2113  0030AE  84AC               	bsf	4012,2,c	;volatile
  2114                           
  2115                           ; BSR set to: 0
  2116  0030B0  989E               	bcf	3998,4,c	;volatile
  2117                           
  2118                           ; BSR set to: 0
  2119  0030B2  0100               	movlb	0	; () banked
  2120  0030B4  BB62               	btfsc	OpenUSART@config& (0+255),5,b
  2121                           
  2122                           ; BSR set to: 0
  2123  0030B6  86AB               	bsf	4011,3,c	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126                           
  2127                           ; BSR set to: 0
  2128  0030B8  0100               	movlb	0	; () banked
  2129  0030BA  AD62               	btfss	OpenUSART@config& (0+255),6,b
  2130  0030BC  D002               	goto	l454
  2131                           
  2132                           ; BSR set to: 0
  2133  0030BE  8A9D               	bsf	3997,5,c	;volatile
  2134  0030C0  D001               	goto	l455
  2135  0030C2                     l454:
  2136                           
  2137                           ; BSR set to: 0
  2138  0030C2  9A9D               	bcf	3997,5,c	;volatile
  2139  0030C4                     l455:
  2140                           
  2141                           ; BSR set to: 0
  2142  0030C4  9A9E               	bcf	3998,5,c	;volatile
  2143                           
  2144                           ; BSR set to: 0
  2145  0030C6  0100               	movlb	0	; () banked
  2146  0030C8  AF62               	btfss	OpenUSART@config& (0+255),7,b
  2147  0030CA  D002               	goto	l456
  2148                           
  2149                           ; BSR set to: 0
  2150  0030CC  889D               	bsf	3997,4,c	;volatile
  2151  0030CE  D001               	goto	l457
  2152  0030D0                     l456:
  2153                           
  2154                           ; BSR set to: 0
  2155  0030D0  989D               	bcf	3997,4,c	;volatile
  2156  0030D2                     l457:
  2157                           
  2158                           ; BSR set to: 0
  2159  0030D2  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162  0030D6  0100               	movlb	0	; () banked
  2163  0030D8  5161               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  2164  0030DA  6EB0               	movwf	4016,c	;volatile
  2165                           
  2166                           ; BSR set to: 0
  2167  0030DC  8AAC               	bsf	4012,5,c	;volatile
  2168                           
  2169                           ; BSR set to: 0
  2170  0030DE  8EAB               	bsf	4011,7,c	;volatile
  2171                           
  2172                           ; BSR set to: 0
  2173  0030E0  9C94               	bcf	3988,6,c	;volatile
  2174                           
  2175                           ; BSR set to: 0
  2176  0030E2  8E94               	bsf	3988,7,c	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179  0030E4  A8AC               	btfss	4012,4,c	;volatile
  2180  0030E6  0012               	return	
  2181                           
  2182                           ; BSR set to: 0
  2183  0030E8  BEAC               	btfsc	4012,7,c	;volatile
  2184  0030EA  0012               	return	
  2185                           
  2186                           ; BSR set to: 0
  2187  0030EC  8C94               	bsf	3988,6,c	;volatile
  2188  0030EE  0012               	return	
  2189  0030F0                     __end_of_OpenUSART:
  2190                           	opt stack 0
  2191                           tblptru	equ	0xFF8
  2192                           tblptrh	equ	0xFF7
  2193                           tblptrl	equ	0xFF6
  2194                           tablat	equ	0xFF5
  2195                           intcon	equ	0xFF2
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _LCD_initialize *****************
  2201 ;; Defined at:
  2202 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  quartz_frequ    1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  quartz_frequ    1   14[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2216 ;;      Params:         0       0       0       0
  2217 ;;      Locals:         0       1       0       0
  2218 ;;      Temps:          0       0       0       0
  2219 ;;      Totals:         0       1       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    8
  2223 ;; This function calls:
  2224 ;;		_LCD_clear
  2225 ;;		_LCD_cursor
  2226 ;;		_LCD_send_command
  2227 ;;		_delay_ms
  2228 ;;		_delay_set_quartz
  2229 ;; This function is called by:
  2230 ;;		_board_initialization
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text4
  2235  00260E                     __ptext4:
  2236                           	opt stack 0
  2237  00260E                     _LCD_initialize:
  2238                           	opt stack 21
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;incstack = 0
  2242                           ;LCD_initialize@quartz_frequency stored from wreg
  2243  00260E  0100               	movlb	0	; () banked
  2244  002610  6F6E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2245                           
  2246                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2247  002612  0100               	movlb	0	; () banked
  2248  002614  516E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2249  002616  EC5B  F01A         	call	_delay_set_quartz
  2250                           
  2251                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2252  00261A  948D               	bcf	3981,2,c	;volatile
  2253                           
  2254                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2255  00261C  928B               	bcf	3979,1,c	;volatile
  2256                           
  2257                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2258  00261E  908B               	bcf	3979,0,c	;volatile
  2259                           
  2260                           ;src\LCD_44780.c: 291: delay_ms (100);
  2261  002620  0E00               	movlw	0
  2262  002622  0100               	movlb	0	; () banked
  2263  002624  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2264  002626  0E64               	movlw	100
  2265  002628  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2266  00262A  EC3B  F019         	call	_delay_ms	;wreg free
  2267                           
  2268                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2269  00262E  0E00               	movlw	0
  2270  002630  0100               	movlb	0	; () banked
  2271  002632  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2272  002634  0E01               	movlw	1
  2273  002636  0100               	movlb	0	; () banked
  2274  002638  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2275  00263A  0E01               	movlw	1
  2276  00263C  0100               	movlb	0	; () banked
  2277  00263E  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2278  002640  0E00               	movlw	0
  2279  002642  EC1E  F019         	call	_LCD_send_command
  2280                           
  2281                           ;src\LCD_44780.c: 293: delay_ms (100);
  2282  002646  0E00               	movlw	0
  2283  002648  0100               	movlb	0	; () banked
  2284  00264A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2285  00264C  0E64               	movlw	100
  2286  00264E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2287  002650  EC3B  F019         	call	_delay_ms	;wreg free
  2288                           
  2289                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2290  002654  0E00               	movlw	0
  2291  002656  0100               	movlb	0	; () banked
  2292  002658  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2293  00265A  0E01               	movlw	1
  2294  00265C  0100               	movlb	0	; () banked
  2295  00265E  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2296  002660  0E01               	movlw	1
  2297  002662  0100               	movlb	0	; () banked
  2298  002664  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2299  002666  0E00               	movlw	0
  2300  002668  EC1E  F019         	call	_LCD_send_command
  2301                           
  2302                           ;src\LCD_44780.c: 295: delay_ms (10);
  2303  00266C  0E00               	movlw	0
  2304  00266E  0100               	movlb	0	; () banked
  2305  002670  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2306  002672  0E0A               	movlw	10
  2307  002674  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2308  002676  EC3B  F019         	call	_delay_ms	;wreg free
  2309                           
  2310                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2311  00267A  0E00               	movlw	0
  2312  00267C  0100               	movlb	0	; () banked
  2313  00267E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2314  002680  0E01               	movlw	1
  2315  002682  0100               	movlb	0	; () banked
  2316  002684  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2317  002686  0E01               	movlw	1
  2318  002688  0100               	movlb	0	; () banked
  2319  00268A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2320  00268C  0E00               	movlw	0
  2321  00268E  EC1E  F019         	call	_LCD_send_command
  2322                           
  2323                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2324  002692  0E00               	movlw	0
  2325  002694  0100               	movlb	0	; () banked
  2326  002696  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2327  002698  0E01               	movlw	1
  2328  00269A  0100               	movlb	0	; () banked
  2329  00269C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2330  00269E  0E00               	movlw	0
  2331  0026A0  0100               	movlb	0	; () banked
  2332  0026A2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2333  0026A4  0E00               	movlw	0
  2334  0026A6  EC1E  F019         	call	_LCD_send_command
  2335                           
  2336                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2337  0026AA  0E00               	movlw	0
  2338  0026AC  0100               	movlb	0	; () banked
  2339  0026AE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2340  0026B0  0E01               	movlw	1
  2341  0026B2  0100               	movlb	0	; () banked
  2342  0026B4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2343  0026B6  0E00               	movlw	0
  2344  0026B8  0100               	movlb	0	; () banked
  2345  0026BA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2346  0026BC  0E00               	movlw	0
  2347  0026BE  EC1E  F019         	call	_LCD_send_command
  2348                           
  2349                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2350  0026C2  0E00               	movlw	0
  2351  0026C4  0100               	movlb	0	; () banked
  2352  0026C6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2353  0026C8  0E00               	movlw	0
  2354  0026CA  0100               	movlb	0	; () banked
  2355  0026CC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2356  0026CE  0E00               	movlw	0
  2357  0026D0  0100               	movlb	0	; () banked
  2358  0026D2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2359  0026D4  0E01               	movlw	1
  2360  0026D6  EC1E  F019         	call	_LCD_send_command
  2361                           
  2362                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2363  0026DA  0E00               	movlw	0
  2364  0026DC  0100               	movlb	0	; () banked
  2365  0026DE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2366  0026E0  0E00               	movlw	0
  2367  0026E2  0100               	movlb	0	; () banked
  2368  0026E4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2369  0026E6  0E00               	movlw	0
  2370  0026E8  0100               	movlb	0	; () banked
  2371  0026EA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2372  0026EC  0E00               	movlw	0
  2373  0026EE  EC1E  F019         	call	_LCD_send_command
  2374                           
  2375                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2376  0026F2  0E00               	movlw	0
  2377  0026F4  0100               	movlb	0	; () banked
  2378  0026F6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2379  0026F8  0E00               	movlw	0
  2380  0026FA  0100               	movlb	0	; () banked
  2381  0026FC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2382  0026FE  0E00               	movlw	0
  2383  002700  0100               	movlb	0	; () banked
  2384  002702  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2385  002704  0E01               	movlw	1
  2386  002706  EC1E  F019         	call	_LCD_send_command
  2387                           
  2388                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2389  00270A  0E00               	movlw	0
  2390  00270C  0100               	movlb	0	; () banked
  2391  00270E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2392  002710  0E00               	movlw	0
  2393  002712  0100               	movlb	0	; () banked
  2394  002714  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2395  002716  0E00               	movlw	0
  2396  002718  0100               	movlb	0	; () banked
  2397  00271A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2398  00271C  0E00               	movlw	0
  2399  00271E  EC1E  F019         	call	_LCD_send_command
  2400                           
  2401                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2402  002722  0E00               	movlw	0
  2403  002724  0100               	movlb	0	; () banked
  2404  002726  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2405  002728  0E00               	movlw	0
  2406  00272A  0100               	movlb	0	; () banked
  2407  00272C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2408  00272E  0E01               	movlw	1
  2409  002730  0100               	movlb	0	; () banked
  2410  002732  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2411  002734  0E00               	movlw	0
  2412  002736  EC1E  F019         	call	_LCD_send_command
  2413                           
  2414                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2415  00273A  0E00               	movlw	0
  2416  00273C  0100               	movlb	0	; () banked
  2417  00273E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2418  002740  0E00               	movlw	0
  2419  002742  0100               	movlb	0	; () banked
  2420  002744  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2421  002746  0E00               	movlw	0
  2422  002748  0100               	movlb	0	; () banked
  2423  00274A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2424  00274C  0E00               	movlw	0
  2425  00274E  EC1E  F019         	call	_LCD_send_command
  2426                           
  2427                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2428  002752  0E01               	movlw	1
  2429  002754  0100               	movlb	0	; () banked
  2430  002756  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2431  002758  0E01               	movlw	1
  2432  00275A  0100               	movlb	0	; () banked
  2433  00275C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2434  00275E  0E00               	movlw	0
  2435  002760  0100               	movlb	0	; () banked
  2436  002762  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2437  002764  0E00               	movlw	0
  2438  002766  EC1E  F019         	call	_LCD_send_command
  2439                           
  2440                           ;src\LCD_44780.c: 312: LCD_clear ();
  2441  00276A  ECA8  F019         	call	_LCD_clear	;wreg free
  2442                           
  2443                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2444  00276E  0E00               	movlw	0
  2445  002770  0100               	movlb	0	; () banked
  2446  002772  6F6C               	movwf	LCD_cursor@blinking& (0+255),b
  2447  002774  0E00               	movlw	0
  2448  002776  EC8F  F019         	call	_LCD_cursor
  2449  00277A  0012               	return		;funcret
  2450  00277C                     __end_of_LCD_initialize:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           intcon	equ	0xFF2
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _delay_set_quartz *****************
  2462 ;; Defined at:
  2463 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  frequency       1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  frequency       1    0[BANK0 ] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2477 ;;      Params:         0       0       0       0
  2478 ;;      Locals:         0       1       0       0
  2479 ;;      Temps:          0       0       0       0
  2480 ;;      Totals:         0       1       0       0
  2481 ;;Total ram usage:        1 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_LCD_initialize
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text5
  2492  0034B6                     __ptext5:
  2493                           	opt stack 0
  2494  0034B6                     _delay_set_quartz:
  2495                           	opt stack 25
  2496                           
  2497                           ;incstack = 0
  2498                           ;delay_set_quartz@frequency stored from wreg
  2499  0034B6  0100               	movlb	0	; () banked
  2500  0034B8  6F60               	movwf	delay_set_quartz@frequency& (0+255),b
  2501                           
  2502                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2503  0034BA  C060  F045         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2504  0034BE  0012               	return		;funcret
  2505  0034C0                     __end_of_delay_set_quartz:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           intcon	equ	0xFF2
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           status	equ	0xFD8
  2515                           
  2516 ;; *************** function _LCD_cursor *****************
  2517 ;; Defined at:
  2518 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  active          1    wreg     unsigned char 
  2521 ;;  blinking        1   12[BANK0 ] unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  active          1   13[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2533 ;;      Params:         0       1       0       0
  2534 ;;      Locals:         0       1       0       0
  2535 ;;      Temps:          0       0       0       0
  2536 ;;      Totals:         0       2       0       0
  2537 ;;Total ram usage:        2 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    7
  2540 ;; This function calls:
  2541 ;;		_LCD_send_command
  2542 ;; This function is called by:
  2543 ;;		_LCD_initialize
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text6
  2548  00331E                     __ptext6:
  2549                           	opt stack 0
  2550  00331E                     _LCD_cursor:
  2551                           	opt stack 21
  2552                           
  2553                           ;incstack = 0
  2554                           ;LCD_cursor@active stored from wreg
  2555  00331E  0100               	movlb	0	; () banked
  2556  003320  6F6D               	movwf	LCD_cursor@active& (0+255),b
  2557                           
  2558                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2559  003322  0E00               	movlw	0
  2560  003324  0100               	movlb	0	; () banked
  2561  003326  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2562  003328  0E00               	movlw	0
  2563  00332A  0100               	movlb	0	; () banked
  2564  00332C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2565  00332E  0E00               	movlw	0
  2566  003330  0100               	movlb	0	; () banked
  2567  003332  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2568  003334  0E00               	movlw	0
  2569  003336  EC1E  F019         	call	_LCD_send_command
  2570                           
  2571                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2572  00333A  0E01               	movlw	1
  2573  00333C  0100               	movlb	0	; () banked
  2574  00333E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2575  003340  C06D  F069         	movff	LCD_cursor@active,LCD_send_command@D1
  2576  003344  C06C  F06A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2577  003348  0E01               	movlw	1
  2578  00334A  EC1E  F019         	call	_LCD_send_command
  2579  00334E  0012               	return		;funcret
  2580  003350                     __end_of_LCD_cursor:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _LCD_backlight *****************
  2592 ;; Defined at:
  2593 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  active          1    wreg     unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  active          1    0[BANK0 ] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2607 ;;      Params:         0       0       0       0
  2608 ;;      Locals:         0       1       0       0
  2609 ;;      Temps:          0       0       0       0
  2610 ;;      Totals:         0       1       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_board_initialization
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text7
  2622  0034A4                     __ptext7:
  2623                           	opt stack 0
  2624  0034A4                     _LCD_backlight:
  2625                           	opt stack 26
  2626                           
  2627                           ;incstack = 0
  2628                           ;LCD_backlight@active stored from wreg
  2629  0034A4  0100               	movlb	0	; () banked
  2630  0034A6  6F60               	movwf	LCD_backlight@active& (0+255),b
  2631                           
  2632                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2633  0034A8  0100               	movlb	0	; () banked
  2634  0034AA  B160               	btfsc	LCD_backlight@active& (0+255),0,b
  2635  0034AC  D002               	bra	u6395
  2636  0034AE  988B               	bcf	3979,4,c	;volatile
  2637  0034B0  D001               	bra	u6396
  2638  0034B2                     u6395:
  2639  0034B2  888B               	bsf	3979,4,c	;volatile
  2640  0034B4                     u6396:
  2641  0034B4  0012               	return		;funcret
  2642  0034B6                     __end_of_LCD_backlight:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           intcon	equ	0xFF2
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _USART_Send *****************
  2654 ;; Defined at:
  2655 ;;		line 230 in file "telecomando.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  i               1   12[BANK0 ] unsigned char 
  2660 ;;  i               1   11[BANK0 ] unsigned char 
  2661 ;;  i               1   10[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2671 ;;      Params:         0       0       0       0
  2672 ;;      Locals:         0       3       0       0
  2673 ;;      Temps:          0       2       0       0
  2674 ;;      Totals:         0       5       0       0
  2675 ;;Total ram usage:        5 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    5
  2678 ;; This function calls:
  2679 ;;		_delay_ms
  2680 ;;		_putsUSART
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text8
  2687  00249C                     __ptext8:
  2688                           	opt stack 0
  2689  00249C                     _USART_Send:
  2690                           	opt stack 25
  2691                           
  2692                           ;telecomando.c: 231: if (switch_position == 2) {
  2693                           
  2694                           ;incstack = 0
  2695  00249C  0E02               	movlw	2
  2696  00249E  1843               	xorwf	_switch_position,w,c	;volatile
  2697  0024A0  A4D8               	btfss	status,2,c
  2698  0024A2  D010               	goto	l5873
  2699                           
  2700                           ;telecomando.c: 232: set_speed = set_speed / 4;
  2701  0024A4  C035  F068         	movff	_set_speed,??_USART_Send	;volatile
  2702  0024A8  C036  F069         	movff	_set_speed+1,??_USART_Send+1	;volatile
  2703  0024AC  0100               	movlb	0	; () banked
  2704  0024AE  90D8               	bcf	status,0,c
  2705  0024B0  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2706  0024B2  3368               	rrcf	??_USART_Send& (0+255),f,b
  2707  0024B4  0100               	movlb	0	; () banked
  2708  0024B6  90D8               	bcf	status,0,c
  2709  0024B8  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2710  0024BA  3368               	rrcf	??_USART_Send& (0+255),f,b
  2711  0024BC  C068  F035         	movff	??_USART_Send,_set_speed	;volatile
  2712  0024C0  C069  F036         	movff	??_USART_Send+1,_set_speed+1	;volatile
  2713  0024C4                     l5873:
  2714                           
  2715                           ;telecomando.c: 233: }
  2716                           ;telecomando.c: 234: set_speed_pk1 = set_speed >> 8;
  2717  0024C4  5036               	movf	_set_speed+1,w,c	;volatile
  2718  0024C6  6E40               	movwf	_set_speed_pk1,c	;volatile
  2719                           
  2720                           ;telecomando.c: 235: if (set_speed_pk1 == 0x00) {
  2721  0024C8  5040               	movf	_set_speed_pk1,w,c	;volatile
  2722  0024CA  A4D8               	btfss	status,2,c
  2723  0024CC  D002               	goto	l5879
  2724                           
  2725                           ;telecomando.c: 236: set_speed_pk1 = 0b10000000;
  2726  0024CE  0E80               	movlw	128
  2727  0024D0  6E40               	movwf	_set_speed_pk1,c	;volatile
  2728  0024D2                     l5879:
  2729                           
  2730                           ;telecomando.c: 237: }
  2731                           ;telecomando.c: 238: set_speed_pk0 = set_speed;
  2732  0024D2  C035  F03F         	movff	_set_speed,_set_speed_pk0	;volatile
  2733                           
  2734                           ;telecomando.c: 239: USART_Tx[1] = dir;
  2735  0024D6  C03D  F0EE         	movff	_dir,_USART_Tx+1	;volatile
  2736                           
  2737                           ;telecomando.c: 240: USART_Tx[2] = set_speed_pk1;
  2738  0024DA  C040  F0EF         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2739                           
  2740                           ;telecomando.c: 241: USART_Tx[3] = set_speed_pk0;
  2741  0024DE  C03F  F0F0         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2742                           
  2743                           ;telecomando.c: 243: if ((switch_position == 0) || ((JoystickValues[1] >= 128)&&(Joystic
      +                          kValues[1] <= 132))) {
  2744  0024E2  5043               	movf	_switch_position,w,c	;volatile
  2745  0024E4  B4D8               	btfsc	status,2,c
  2746  0024E6  D006               	goto	l5891
  2747  0024E8  0E7F               	movlw	127
  2748  0024EA  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  2749  0024EC  D009               	goto	l5893
  2750  0024EE  0E85               	movlw	133
  2751  0024F0  6034               	cpfslt	_JoystickValues+1,c	;volatile
  2752  0024F2  D006               	goto	l5893
  2753  0024F4                     l5891:
  2754                           
  2755                           ;telecomando.c: 244: USART_Tx[2] = 0b10000000;
  2756  0024F4  0E80               	movlw	128
  2757  0024F6  0100               	movlb	0	; () banked
  2758  0024F8  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  2759                           
  2760                           ;telecomando.c: 245: USART_Tx[3] = 0b00000001;
  2761  0024FA  0E01               	movlw	1
  2762  0024FC  0100               	movlb	0	; () banked
  2763  0024FE  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  2764  002500                     l5893:
  2765                           
  2766                           ;telecomando.c: 246: }
  2767                           ;telecomando.c: 247: USART_Tx[4] = set_steering;
  2768  002500  C041  F0F1         	movff	_set_steering,_USART_Tx+4	;volatile
  2769                           
  2770                           ;telecomando.c: 248: USART_Tx[5] = analogic_brake;
  2771  002504  C03C  F0F2         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2772                           
  2773                           ;telecomando.c: 251: for (char i = 0; i < 6; i++) {
  2774  002508  0E00               	movlw	0
  2775  00250A  0100               	movlb	0	; () banked
  2776  00250C  6F6A               	movwf	USART_Send@i& (0+255),b
  2777  00250E                     l5897:
  2778                           
  2779                           ; BSR set to: 0
  2780  00250E  0E05               	movlw	5
  2781  002510  0100               	movlb	0	; () banked
  2782  002512  656A               	cpfsgt	USART_Send@i& (0+255),b
  2783  002514  D001               	goto	l5901
  2784  002516  D01A               	goto	l5909
  2785  002518                     l5901:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;telecomando.c: 252: if (USART_Tx[i] == 0) {
  2789  002518  0100               	movlb	0	; () banked
  2790  00251A  516A               	movf	USART_Send@i& (0+255),w,b
  2791  00251C  0D01               	mullw	1
  2792  00251E  0EED               	movlw	low _USART_Tx
  2793  002520  24F3               	addwf	prodl,w,c
  2794  002522  6ED9               	movwf	fsr2l,c
  2795  002524  0E00               	movlw	high _USART_Tx
  2796  002526  20F4               	addwfc	prodh,w,c
  2797  002528  6EDA               	movwf	fsr2h,c
  2798  00252A  50DF               	movf	indf2,w,c
  2799  00252C  A4D8               	btfss	status,2,c
  2800  00252E  D00B               	goto	l5905
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;telecomando.c: 253: USART_Tx[i] = 1;
  2804  002530  0100               	movlb	0	; () banked
  2805  002532  516A               	movf	USART_Send@i& (0+255),w,b
  2806  002534  0D01               	mullw	1
  2807  002536  0EED               	movlw	low _USART_Tx
  2808  002538  24F3               	addwf	prodl,w,c
  2809  00253A  6ED9               	movwf	fsr2l,c
  2810  00253C  0E00               	movlw	high _USART_Tx
  2811  00253E  20F4               	addwfc	prodh,w,c
  2812  002540  6EDA               	movwf	fsr2h,c
  2813  002542  0E01               	movlw	1
  2814  002544  6EDF               	movwf	indf2,c
  2815  002546                     l5905:
  2816                           
  2817                           ; BSR set to: 0
  2818  002546  0100               	movlb	0	; () banked
  2819  002548  2B6A               	incf	USART_Send@i& (0+255),f,b
  2820  00254A  D7E1               	goto	l5897
  2821  00254C                     l5909:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;telecomando.c: 254: }
  2825                           ;telecomando.c: 256: }
  2826                           ;telecomando.c: 259: spam_counter = 0;
  2827  00254C  0E00               	movlw	0
  2828  00254E  6E42               	movwf	_spam_counter,c	;volatile
  2829                           
  2830                           ;telecomando.c: 260: for (char i = 1; i < 6; i++) {
  2831  002550  0E01               	movlw	1
  2832  002552  0100               	movlb	0	; () banked
  2833  002554  6F6B               	movwf	USART_Send@i_1325& (0+255),b
  2834  002556                     l5911:
  2835                           
  2836                           ; BSR set to: 0
  2837  002556  0E05               	movlw	5
  2838  002558  0100               	movlb	0	; () banked
  2839  00255A  656B               	cpfsgt	USART_Send@i_1325& (0+255),b
  2840  00255C  D001               	goto	l5915
  2841  00255E  D019               	goto	l301
  2842  002560                     l5915:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;telecomando.c: 261: if (USART_Tx[i] == USART_Tx_Old[i]) {
  2846  002560  0100               	movlb	0	; () banked
  2847  002562  516B               	movf	USART_Send@i_1325& (0+255),w,b
  2848  002564  0D01               	mullw	1
  2849  002566  0ED1               	movlw	low _USART_Tx_Old
  2850  002568  24F3               	addwf	prodl,w,c
  2851  00256A  6ED9               	movwf	fsr2l,c
  2852  00256C  0E00               	movlw	high _USART_Tx_Old
  2853  00256E  20F4               	addwfc	prodh,w,c
  2854  002570  6EDA               	movwf	fsr2h,c
  2855  002572  0100               	movlb	0	; () banked
  2856  002574  516B               	movf	USART_Send@i_1325& (0+255),w,b
  2857  002576  0D01               	mullw	1
  2858  002578  0EED               	movlw	low _USART_Tx
  2859  00257A  24F3               	addwf	prodl,w,c
  2860  00257C  6EE1               	movwf	fsr1l,c
  2861  00257E  0E00               	movlw	high _USART_Tx
  2862  002580  20F4               	addwfc	prodh,w,c
  2863  002582  6EE2               	movwf	fsr1h,c
  2864  002584  50DE               	movf	postinc2,w,c
  2865  002586  18E6               	xorwf	postinc1,w,c
  2866  002588  B4D8               	btfsc	status,2,c
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;telecomando.c: 262: spam_counter++;
  2870  00258A  2A42               	incf	_spam_counter,f,c	;volatile
  2871                           
  2872                           ; BSR set to: 0
  2873  00258C  0100               	movlb	0	; () banked
  2874  00258E  2B6B               	incf	USART_Send@i_1325& (0+255),f,b
  2875  002590  D7E2               	goto	l5911
  2876  002592                     l301:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;telecomando.c: 263: }
  2880                           ;telecomando.c: 264: }
  2881                           ;telecomando.c: 265: if ((((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) || (switch_posi
      +                          tion == 0)) {
  2882  002592  A2AC               	btfss	4012,1,c	;volatile
  2883  002594  D004               	goto	l5923
  2884                           
  2885                           ; BSR set to: 0
  2886  002596  0E05               	movlw	5
  2887  002598  1842               	xorwf	_spam_counter,w,c	;volatile
  2888  00259A  A4D8               	btfss	status,2,c
  2889  00259C  D003               	goto	l5925
  2890  00259E                     l5923:
  2891                           
  2892                           ; BSR set to: 0
  2893  00259E  5043               	movf	_switch_position,w,c	;volatile
  2894  0025A0  A4D8               	btfss	status,2,c
  2895  0025A2  0012               	return	
  2896  0025A4                     l5925:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;telecomando.c: 267: if (switch_position == 0) {
  2900  0025A4  5043               	movf	_switch_position,w,c	;volatile
  2901  0025A6  A4D8               	btfss	status,2,c
  2902  0025A8  D007               	goto	l5929
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;telecomando.c: 268: delay_ms(100);
  2906  0025AA  0E00               	movlw	0
  2907  0025AC  0100               	movlb	0	; () banked
  2908  0025AE  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2909  0025B0  0E64               	movlw	100
  2910  0025B2  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2911  0025B4  EC3B  F019         	call	_delay_ms	;wreg free
  2912  0025B8                     l5929:
  2913                           
  2914                           ;telecomando.c: 269: }
  2915                           ;telecomando.c: 270: INTCONbits.GIEH = 0;
  2916  0025B8  9EF2               	bcf	intcon,7,c	;volatile
  2917                           
  2918                           ;telecomando.c: 271: INTCONbits.GIEL = 0;
  2919  0025BA  9CF2               	bcf	intcon,6,c	;volatile
  2920                           
  2921                           ;telecomando.c: 272: putsUSART(USART_Tx);
  2922  0025BC  0EED               	movlw	low _USART_Tx
  2923  0025BE  0100               	movlb	0	; () banked
  2924  0025C0  6F61               	movwf	putsUSART@data& (0+255),b
  2925  0025C2  0E00               	movlw	high _USART_Tx
  2926  0025C4  0100               	movlb	0	; () banked
  2927  0025C6  6F62               	movwf	(putsUSART@data+1)& (0+255),b
  2928  0025C8  EC02  F01A         	call	_putsUSART	;wreg free
  2929                           
  2930                           ;telecomando.c: 274: INTCONbits.GIEH = 1;
  2931  0025CC  8EF2               	bsf	intcon,7,c	;volatile
  2932                           
  2933                           ;telecomando.c: 275: INTCONbits.GIEL = 1;
  2934  0025CE  8CF2               	bsf	intcon,6,c	;volatile
  2935                           
  2936                           ;telecomando.c: 276: for (char i = 0; i < 6; i++) {
  2937  0025D0  0E00               	movlw	0
  2938  0025D2  0100               	movlb	0	; () banked
  2939  0025D4  6F6C               	movwf	USART_Send@i_1334& (0+255),b
  2940  0025D6                     l5941:
  2941                           
  2942                           ; BSR set to: 0
  2943  0025D6  0E05               	movlw	5
  2944  0025D8  0100               	movlb	0	; () banked
  2945  0025DA  656C               	cpfsgt	USART_Send@i_1334& (0+255),b
  2946  0025DC  D001               	goto	l5945
  2947  0025DE  0012               	return	
  2948  0025E0                     l5945:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;telecomando.c: 278: USART_Tx_Old[i] = USART_Tx[i];
  2952  0025E0  0100               	movlb	0	; () banked
  2953  0025E2  516C               	movf	USART_Send@i_1334& (0+255),w,b
  2954  0025E4  0D01               	mullw	1
  2955  0025E6  0EED               	movlw	low _USART_Tx
  2956  0025E8  24F3               	addwf	prodl,w,c
  2957  0025EA  6ED9               	movwf	fsr2l,c
  2958  0025EC  0E00               	movlw	high _USART_Tx
  2959  0025EE  20F4               	addwfc	prodh,w,c
  2960  0025F0  6EDA               	movwf	fsr2h,c
  2961  0025F2  0100               	movlb	0	; () banked
  2962  0025F4  516C               	movf	USART_Send@i_1334& (0+255),w,b
  2963  0025F6  0D01               	mullw	1
  2964  0025F8  0ED1               	movlw	low _USART_Tx_Old
  2965  0025FA  24F3               	addwf	prodl,w,c
  2966  0025FC  6EE1               	movwf	fsr1l,c
  2967  0025FE  0E00               	movlw	high _USART_Tx_Old
  2968  002600  20F4               	addwfc	prodh,w,c
  2969  002602  6EE2               	movwf	fsr1h,c
  2970  002604  CFDF FFE7          	movff	indf2,indf1
  2971                           
  2972                           ; BSR set to: 0
  2973  002608  0100               	movlb	0	; () banked
  2974  00260A  2B6C               	incf	USART_Send@i_1334& (0+255),f,b
  2975  00260C  D7E4               	goto	l5941
  2976  00260E                     __end_of_USART_Send:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           indf1	equ	0xFE7
  2988                           postinc1	equ	0xFE6
  2989                           fsr1h	equ	0xFE2
  2990                           fsr1l	equ	0xFE1
  2991                           indf2	equ	0xFDF
  2992                           postinc2	equ	0xFDE
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _putsUSART *****************
  2998 ;; Defined at:
  2999 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  data            2    1[BANK0 ] PTR unsigned char 
  3002 ;;		 -> USART_Tx(8), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3014 ;;      Params:         0       2       0       0
  3015 ;;      Locals:         0       0       0       0
  3016 ;;      Temps:          0       0       0       0
  3017 ;;      Totals:         0       2       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    4
  3021 ;; This function calls:
  3022 ;;		_WriteUSART
  3023 ;; This function is called by:
  3024 ;;		_USART_Send
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text9
  3029  003404                     __ptext9:
  3030                           	opt stack 0
  3031  003404                     _putsUSART:
  3032                           	opt stack 25
  3033  003404                     l467:
  3034  003404  A2AC               	btfss	4012,1,c	;volatile
  3035  003406  D7FE               	goto	l467
  3036  003408  C061  FFD9         	movff	putsUSART@data,fsr2l
  3037  00340C  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3038  003410  50DF               	movf	indf2,w,c
  3039  003412  EC48  F01A         	call	_WriteUSART
  3040  003416  C061  FFD9         	movff	putsUSART@data,fsr2l
  3041  00341A  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3042  00341E  0100               	movlb	0	; () banked
  3043  003420  4B61               	infsnz	putsUSART@data& (0+255),f,b
  3044  003422  2B62               	incf	(putsUSART@data+1)& (0+255),f,b
  3045  003424  50DF               	movf	indf2,w,c
  3046  003426  B4D8               	btfsc	status,2,c
  3047  003428  0012               	return	
  3048  00342A  D7EC               	goto	l467
  3049  00342C                     __end_of_putsUSART:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           indf1	equ	0xFE7
  3061                           postinc1	equ	0xFE6
  3062                           fsr1h	equ	0xFE2
  3063                           fsr1l	equ	0xFE1
  3064                           indf2	equ	0xFDF
  3065                           postinc2	equ	0xFDE
  3066                           fsr2h	equ	0xFDA
  3067                           fsr2l	equ	0xFD9
  3068                           status	equ	0xFD8
  3069                           
  3070 ;; *************** function _WriteUSART *****************
  3071 ;; Defined at:
  3072 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  data            1    wreg     unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  data            1    0[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;		None               void
  3079 ;; Registers used:
  3080 ;;		wreg
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3086 ;;      Params:         0       0       0       0
  3087 ;;      Locals:         0       1       0       0
  3088 ;;      Temps:          0       0       0       0
  3089 ;;      Totals:         0       1       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_board_initialization
  3097 ;;		_putsUSART
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text10
  3102  003490                     __ptext10:
  3103                           	opt stack 0
  3104  003490                     _WriteUSART:
  3105                           	opt stack 26
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;incstack = 0
  3109                           ;WriteUSART@data stored from wreg
  3110  003490  0100               	movlb	0	; () banked
  3111  003492  6F60               	movwf	WriteUSART@data& (0+255),b
  3112  003494  ACAC               	btfss	4012,6,c	;volatile
  3113  003496  D003               	goto	l5005
  3114  003498  90AC               	bcf	4012,0,c	;volatile
  3115  00349A  B239               	btfsc	_USART_Status,1,c
  3116  00349C  80AC               	bsf	4012,0,c	;volatile
  3117  00349E                     l5005:
  3118  00349E  C060  FFAD         	movff	WriteUSART@data,4013	;volatile
  3119  0034A2  0012               	return		;funcret
  3120  0034A4                     __end_of_WriteUSART:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           indf1	equ	0xFE7
  3132                           postinc1	equ	0xFE6
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _USART_RX *****************
  3142 ;; Defined at:
  3143 ;;		line 283 in file "telecomando.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  i               1    2[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3157 ;;      Params:         0       0       0       0
  3158 ;;      Locals:         0       1       0       0
  3159 ;;      Temps:          0       2       0       0
  3160 ;;      Totals:         0       3       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    3
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text11
  3172  002CF2                     __ptext11:
  3173                           	opt stack 0
  3174  002CF2                     _USART_RX:
  3175                           	opt stack 27
  3176                           
  3177                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
  3178                           
  3179                           ;incstack = 0
  3180  002CF2  AA9E               	btfss	3998,5,c	;volatile
  3181  002CF4  D04F               	goto	l5767
  3182                           
  3183                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
  3184  002CF6  9EF2               	bcf	intcon,7,c	;volatile
  3185                           
  3186                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
  3187  002CF8  9CF2               	bcf	intcon,6,c	;volatile
  3188                           
  3189                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
  3190  002CFA  92A0               	bcf	4000,1,c	;volatile
  3191                           
  3192                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
  3193  002CFC  9A9D               	bcf	3997,5,c	;volatile
  3194                           
  3195                           ;telecomando.c: 290: if (RCREG == 0xAA) {
  3196  002CFE  0EAA               	movlw	170
  3197  002D00  18AE               	xorwf	4014,w,c	;volatile
  3198  002D02  A4D8               	btfss	status,2,c
  3199  002D04  D01A               	goto	l5745
  3200                           
  3201                           ;telecomando.c: 292: for (unsigned char i = 0; i < 7; i++) {
  3202  002D06  0E00               	movlw	0
  3203  002D08  0100               	movlb	0	; () banked
  3204  002D0A  6F62               	movwf	USART_RX@i& (0+255),b
  3205  002D0C                     l5733:
  3206                           
  3207                           ; BSR set to: 0
  3208  002D0C  0E06               	movlw	6
  3209  002D0E  0100               	movlb	0	; () banked
  3210  002D10  6562               	cpfsgt	USART_RX@i& (0+255),b
  3211  002D12  D001               	goto	l316
  3212  002D14  D012               	goto	l5745
  3213  002D16                     l316:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
  3217  002D16  8E83               	bsf	3971,7,c	;volatile
  3218  002D18                     l318:
  3219  002D18  AA9E               	btfss	3998,5,c	;volatile
  3220  002D1A  D7FE               	goto	l318
  3221                           
  3222                           ;telecomando.c: 295: }
  3223                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
  3224  002D1C  0100               	movlb	0	; () banked
  3225  002D1E  5162               	movf	USART_RX@i& (0+255),w,b
  3226  002D20  0D01               	mullw	1
  3227  002D22  0EC9               	movlw	low _USART_Rx
  3228  002D24  24F3               	addwf	prodl,w,c
  3229  002D26  6ED9               	movwf	fsr2l,c
  3230  002D28  0E00               	movlw	high _USART_Rx
  3231  002D2A  20F4               	addwfc	prodh,w,c
  3232  002D2C  6EDA               	movwf	fsr2h,c
  3233  002D2E  CFAE FFDF          	movff	4014,indf2	;volatile
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
  3237  002D32  9A9E               	bcf	3998,5,c	;volatile
  3238                           
  3239                           ; BSR set to: 0
  3240  002D34  0100               	movlb	0	; () banked
  3241  002D36  2B62               	incf	USART_RX@i& (0+255),f,b
  3242  002D38  D7E9               	goto	l5733
  3243  002D3A                     l5745:
  3244                           
  3245                           ;telecomando.c: 299: }
  3246                           ;telecomando.c: 301: }
  3247                           ;telecomando.c: 302: if (USART_Rx[5] == 0xAA) {
  3248  002D3A  0EAA               	movlw	170
  3249  002D3C  0100               	movlb	0	; () banked
  3250  002D3E  19CE               	xorwf	(_USART_Rx+5)& (0+255),w,b
  3251  002D40  A4D8               	btfss	status,2,c
  3252  002D42  D025               	goto	l5761
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
  3256  002D44  0100               	movlb	0	; () banked
  3257  002D46  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
  3258  002D48  D002               	goto	u6940
  3259  002D4A  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3260  002D4C  D001               	goto	u6955
  3261  002D4E                     u6940:
  3262  002D4E  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3263  002D50                     u6955:
  3264                           
  3265                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
  3266  002D50  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
  3267                           
  3268                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
  3269  002D54  0E80               	movlw	128
  3270  002D56  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
  3271  002D58  A4D8               	btfss	status,2,c
  3272  002D5A  D002               	goto	l5753
  3273                           
  3274                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
  3275  002D5C  0E00               	movlw	0
  3276  002D5E  6E3B               	movwf	_actual_speed_pk1,c	;volatile
  3277  002D60                     l5753:
  3278                           
  3279                           ;telecomando.c: 308: }
  3280                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
  3281  002D60  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
  3282                           
  3283                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
  3284  002D64  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
  3285                           
  3286                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
  3287  002D68  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
  3288                           
  3289                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
  3290  002D6C  503A               	movf	_actual_speed_pk0,w,c	;volatile
  3291  002D6E  C03B  F060         	movff	_actual_speed_pk1,??_USART_RX	;volatile
  3292  002D72  0100               	movlb	0	; () banked
  3293  002D74  6B61               	clrf	(??_USART_RX+1)& (0+255),b
  3294  002D76  C060  F061         	movff	??_USART_RX,??_USART_RX+1
  3295  002D7A  0100               	movlb	0	; () banked
  3296  002D7C  6B60               	clrf	??_USART_RX& (0+255),b
  3297  002D7E  0100               	movlb	0	; () banked
  3298  002D80  1160               	iorwf	??_USART_RX& (0+255),w,b
  3299  002D82  0100               	movlb	0	; () banked
  3300  002D84  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
  3301  002D86  0100               	movlb	0	; () banked
  3302  002D88  5161               	movf	(??_USART_RX+1)& (0+255),w,b
  3303  002D8A  0100               	movlb	0	; () banked
  3304  002D8C  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
  3305  002D8E                     l5761:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;telecomando.c: 313: }
  3309                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
  3310  002D8E  9A9E               	bcf	3998,5,c	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
  3314  002D90  8A9D               	bsf	3997,5,c	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
  3318  002D92  82A0               	bsf	4000,1,c	;volatile
  3319  002D94                     l5767:
  3320                           
  3321                           ;telecomando.c: 317: }
  3322                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
  3323  002D94  8EF2               	bsf	intcon,7,c	;volatile
  3324                           
  3325                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
  3326  002D96  8CF2               	bsf	intcon,6,c	;volatile
  3327  002D98  0012               	return		;funcret
  3328  002D9A                     __end_of_USART_RX:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postinc1	equ	0xFE6
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function _PWR_Button_Polling *****************
  3350 ;; Defined at:
  3351 ;;		line 211 in file "telecomando.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		None
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       0       0       0
  3366 ;;      Locals:         0       0       0       0
  3367 ;;      Temps:          0       0       0       0
  3368 ;;      Totals:         0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    3
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text12
  3380  003474                     __ptext12:
  3381                           	opt stack 0
  3382  003474                     _PWR_Button_Polling:
  3383                           	opt stack 27
  3384                           
  3385                           ;telecomando.c: 212: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  3386                           
  3387                           ;incstack = 0
  3388  003474  A681               	btfss	3969,3,c	;volatile
  3389  003476  D002               	goto	l279
  3390  003478  B444               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3391  00347A  0012               	return	
  3392  00347C                     l279:
  3393                           
  3394                           ;telecomando.c: 213: wait_low = 0;
  3395  00347C  9444               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3396                           
  3397                           ;telecomando.c: 214: if (PORTBbits.RB3 == 1) {
  3398  00347E  A681               	btfss	3969,3,c	;volatile
  3399  003480  0012               	return	
  3400                           
  3401                           ;telecomando.c: 215: power_switch = ~power_switch;
  3402  003482  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3403  003484  D002               	goto	u7000
  3404  003486  8244               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3405  003488  D001               	goto	u7015
  3406  00348A                     u7000:
  3407  00348A  9244               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3408  00348C                     u7015:
  3409                           
  3410                           ;telecomando.c: 216: wait_low = 1;
  3411  00348C  8444               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3412  00348E  0012               	return	
  3413  003490                     __end_of_PWR_Button_Polling:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           indf1	equ	0xFE7
  3425                           postinc1	equ	0xFE6
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _LCD_Handler *****************
  3435 ;; Defined at:
  3436 ;;		line 322 in file "telecomando.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;		None               void
  3443 ;; Registers used:
  3444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3450 ;;      Params:         0       0       0       0
  3451 ;;      Locals:         0       0       0       0
  3452 ;;      Temps:          0       0       0       0
  3453 ;;      Totals:         0       0       0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    9
  3457 ;; This function calls:
  3458 ;;		_LCD_clear
  3459 ;;		_LCD_goto_line
  3460 ;;		_LCD_write_message
  3461 ;;		_LCD_write_string
  3462 ;;		___lwdiv
  3463 ;;		___xxtofl
  3464 ;;		_sprintf
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text13
  3471  00277C                     __ptext13:
  3472                           	opt stack 0
  3473  00277C                     _LCD_Handler:
  3474                           	opt stack 21
  3475                           
  3476                           ;telecomando.c: 323: actual_speed_kmh = actual_speed / 278;
  3477                           
  3478                           ;incstack = 0
  3479  00277C  0E01               	movlw	1
  3480  00277E  0100               	movlb	0	; () banked
  3481  002780  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3482  002782  0E16               	movlw	22
  3483  002784  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3484  002786  C0EB  F060         	movff	_actual_speed,___lwdiv@dividend	;volatile
  3485  00278A  C0EC  F061         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  3486  00278E  EC02  F018         	call	___lwdiv	;wreg free
  3487  002792  0100               	movlb	0	; () banked
  3488  002794  C060  F067         	movff	?___lwdiv,___xxtofl@val
  3489  002798  0100               	movlb	0	; () banked
  3490  00279A  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  3491  00279E  0100               	movlb	0	; () banked
  3492  0027A0  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  3493  0027A2  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  3494  0027A4  0E00               	movlw	0
  3495  0027A6  EC0C  F00F         	call	___xxtofl
  3496  0027AA  C067  F0DF         	movff	?___xxtofl,_actual_speed_kmh
  3497  0027AE  C068  F0E0         	movff	?___xxtofl+1,_actual_speed_kmh+1
  3498  0027B2  C069  F0E1         	movff	?___xxtofl+2,_actual_speed_kmh+2
  3499  0027B6  C06A  F0E2         	movff	?___xxtofl+3,_actual_speed_kmh+3
  3500                           
  3501                           ;telecomando.c: 325: LCD_clear();
  3502  0027BA  ECA8  F019         	call	_LCD_clear	;wreg free
  3503                           
  3504                           ;telecomando.c: 326: LCD_goto_line(1);
  3505  0027BE  0E01               	movlw	1
  3506  0027C0  ECD4  F014         	call	_LCD_goto_line
  3507                           
  3508                           ;telecomando.c: 327: LCD_write_message("=== VEHICLE DATA ===");
  3509  0027C4  0EA5               	movlw	low STR_5
  3510  0027C6  0100               	movlb	0	; () banked
  3511  0027C8  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3512  0027CA  0E3F               	movlw	high STR_5
  3513  0027CC  0100               	movlb	0	; () banked
  3514  0027CE  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3515  0027D0  ECD7  F019         	call	_LCD_write_message	;wreg free
  3516                           
  3517                           ;telecomando.c: 329: LCD_goto_line(2);
  3518  0027D4  0E02               	movlw	2
  3519  0027D6  ECD4  F014         	call	_LCD_goto_line
  3520                           
  3521                           ;telecomando.c: 330: LCD_write_message("Direction: ");
  3522  0027DA  0ECF               	movlw	low STR_6
  3523  0027DC  0100               	movlb	0	; () banked
  3524  0027DE  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3525  0027E0  0E3F               	movlw	high STR_6
  3526  0027E2  0100               	movlb	0	; () banked
  3527  0027E4  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3528  0027E6  ECD7  F019         	call	_LCD_write_message	;wreg free
  3529                           
  3530                           ;telecomando.c: 331: if (switch_position != 0) {
  3531  0027EA  5043               	movf	_switch_position,w,c	;volatile
  3532  0027EC  B4D8               	btfsc	status,2,c
  3533  0027EE  D016               	goto	l5985
  3534                           
  3535                           ;telecomando.c: 332: if (dir == 2) {
  3536  0027F0  0E02               	movlw	2
  3537  0027F2  183D               	xorwf	_dir,w,c	;volatile
  3538  0027F4  A4D8               	btfss	status,2,c
  3539  0027F6  D009               	goto	l5983
  3540                           
  3541                           ;telecomando.c: 333: LCD_write_message("FWD");
  3542  0027F8  0EF9               	movlw	low STR_7
  3543  0027FA  0100               	movlb	0	; () banked
  3544  0027FC  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3545  0027FE  0E3F               	movlw	high STR_7
  3546  002800  0100               	movlb	0	; () banked
  3547  002802  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3548  002804  ECD7  F019         	call	_LCD_write_message	;wreg free
  3549                           
  3550                           ;telecomando.c: 334: } else {
  3551  002808  D011               	goto	l5987
  3552  00280A                     l5983:
  3553                           
  3554                           ;telecomando.c: 335: LCD_write_message("BKWD");
  3555  00280A  0EEF               	movlw	low STR_8
  3556  00280C  0100               	movlb	0	; () banked
  3557  00280E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3558  002810  0E3F               	movlw	high STR_8
  3559  002812  0100               	movlb	0	; () banked
  3560  002814  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3561  002816  ECD7  F019         	call	_LCD_write_message	;wreg free
  3562                           
  3563                           ;telecomando.c: 336: }
  3564                           ;telecomando.c: 337: } else {
  3565  00281A  D008               	goto	l5987
  3566  00281C                     l5985:
  3567                           
  3568                           ;telecomando.c: 339: LCD_write_message("P");
  3569  00281C  0EFD               	movlw	low STR_9
  3570  00281E  0100               	movlb	0	; () banked
  3571  002820  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3572  002822  0E3F               	movlw	high STR_9
  3573  002824  0100               	movlb	0	; () banked
  3574  002826  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3575  002828  ECD7  F019         	call	_LCD_write_message	;wreg free
  3576  00282C                     l5987:
  3577                           
  3578                           ;telecomando.c: 340: }
  3579                           ;telecomando.c: 342: LCD_goto_line(3);
  3580  00282C  0E03               	movlw	3
  3581  00282E  ECD4  F014         	call	_LCD_goto_line
  3582                           
  3583                           ;telecomando.c: 343: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  3584  002832  0E19               	movlw	low _str
  3585  002834  0100               	movlb	0	; () banked
  3586  002836  6FB7               	movwf	sprintf@sp& (0+255),b
  3587  002838  0E01               	movlw	high _str
  3588  00283A  0100               	movlb	0	; () banked
  3589  00283C  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  3590  00283E  0EDB               	movlw	low STR_10
  3591  002840  0100               	movlb	0	; () banked
  3592  002842  6FB9               	movwf	sprintf@f& (0+255),b
  3593  002844  0E3F               	movlw	high STR_10
  3594  002846  0100               	movlb	0	; () banked
  3595  002848  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  3596  00284A  C0DF  F0BB         	movff	_actual_speed_kmh,?_sprintf+4
  3597  00284E  C0E0  F0BC         	movff	_actual_speed_kmh+1,?_sprintf+5
  3598  002852  C0E1  F0BD         	movff	_actual_speed_kmh+2,?_sprintf+6
  3599  002856  C0E2  F0BE         	movff	_actual_speed_kmh+3,?_sprintf+7
  3600  00285A  EC62  F000         	call	_sprintf	;wreg free
  3601                           
  3602                           ;telecomando.c: 344: str[11] = '\0';
  3603  00285E  0E00               	movlw	0
  3604  002860  0101               	movlb	1	; () banked
  3605  002862  6F24               	movwf	(_str+11)& (0+255),b
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;telecomando.c: 345: LCD_write_string(str);
  3609  002864  0E19               	movlw	low _str
  3610  002866  0100               	movlb	0	; () banked
  3611  002868  6F71               	movwf	LCD_write_string@buffer& (0+255),b
  3612  00286A  0E01               	movlw	high _str
  3613  00286C  0100               	movlb	0	; () banked
  3614  00286E  6F72               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3615  002870  EC16  F01A         	call	_LCD_write_string	;wreg free
  3616                           
  3617                           ;telecomando.c: 346: LCD_write_message("Km/h");
  3618  002874  0EF4               	movlw	low STR_11
  3619  002876  0100               	movlb	0	; () banked
  3620  002878  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3621  00287A  0E3F               	movlw	high STR_11
  3622  00287C  0100               	movlb	0	; () banked
  3623  00287E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3624  002880  ECD7  F019         	call	_LCD_write_message	;wreg free
  3625                           
  3626                           ;telecomando.c: 350: LCD_goto_line(4);
  3627  002884  0E04               	movlw	4
  3628  002886  ECD4  F014         	call	_LCD_goto_line
  3629                           
  3630                           ;telecomando.c: 351: LCD_write_message("====================");
  3631  00288A  0EBA               	movlw	low STR_1
  3632  00288C  0100               	movlb	0	; () banked
  3633  00288E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3634  002890  0E3F               	movlw	high STR_1
  3635  002892  0100               	movlb	0	; () banked
  3636  002894  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3637  002896  ECD7  F019         	call	_LCD_write_message	;wreg free
  3638  00289A  0012               	return		;funcret
  3639  00289C                     __end_of_LCD_Handler:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           intcon	equ	0xFF2
  3648                           postinc0	equ	0xFEE
  3649                           wreg	equ	0xFE8
  3650                           indf1	equ	0xFE7
  3651                           postinc1	equ	0xFE6
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _sprintf *****************
  3661 ;; Defined at:
  3662 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  3665 ;;		 -> str(12), 
  3666 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  3667 ;;		 -> STR_10(12), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  3670 ;;  tmpval          4   14[BANK1 ] struct .
  3671 ;;  val             4    8[BANK1 ] unsigned long 
  3672 ;;  cp              3    0        PTR const unsigned char 
  3673 ;;  prec            2   18[BANK1 ] int 
  3674 ;;  exp             2   12[BANK1 ] int 
  3675 ;;  flag            2    6[BANK1 ] unsigned short 
  3676 ;;  ap              2    4[BANK1 ] PTR void [1]
  3677 ;;		 -> ?_sprintf(2), 
  3678 ;;  len             2    0        unsigned int 
  3679 ;;  width           2    0        int 
  3680 ;;  c               1   24[BANK1 ] char 
  3681 ;;  d               1    0        unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2   87[BANK0 ] int 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3691 ;;      Params:         0       8       0       0
  3692 ;;      Locals:         0       0      25       0
  3693 ;;      Temps:          0       2       0       0
  3694 ;;      Totals:         0      10      25       0
  3695 ;;Total ram usage:       35 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    5
  3698 ;; This function calls:
  3699 ;;		___awdiv
  3700 ;;		___fladd
  3701 ;;		___flge
  3702 ;;		___flmul
  3703 ;;		___flneg
  3704 ;;		___flsub
  3705 ;;		___fltol
  3706 ;;		___lldiv
  3707 ;;		___llmod
  3708 ;;		___wmul
  3709 ;;		___xxtofl
  3710 ;;		__div_to_l_
  3711 ;;		__tdiv_to_l_
  3712 ;;		_fround
  3713 ;;		_isdigit
  3714 ;;		_scale
  3715 ;; This function is called by:
  3716 ;;		_LCD_Handler
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text14
  3721  0000C4                     __ptext14:
  3722                           	opt stack 0
  3723  0000C4                     _sprintf:
  3724                           	opt stack 24
  3725                           
  3726                           ;doprnt.c: 494: va_list ap;
  3727                           ;doprnt.c: 499: signed char c;
  3728                           ;doprnt.c: 501: int width;
  3729                           ;doprnt.c: 504: int prec;
  3730                           ;doprnt.c: 508: unsigned short flag;
  3731                           ;doprnt.c: 515: char d;
  3732                           ;doprnt.c: 516: double fval;
  3733                           ;doprnt.c: 517: int exp;
  3734                           ;doprnt.c: 523: union {
  3735                           ;doprnt.c: 524: unsigned long vd;
  3736                           ;doprnt.c: 525: double integ;
  3737                           ;doprnt.c: 526: } tmpval;
  3738                           ;doprnt.c: 528: unsigned long val;
  3739                           ;doprnt.c: 529: unsigned len;
  3740                           ;doprnt.c: 530: const char * cp;
  3741                           ;doprnt.c: 533: *ap = __va_start();
  3742                           
  3743                           ;incstack = 0
  3744  0000C4  0EBB               	movlw	low (?_sprintf+4)
  3745  0000C6  0101               	movlb	1	; () banked
  3746  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3747  0000CA  0E00               	movlw	high (?_sprintf+4)
  3748  0000CC  0101               	movlb	1	; () banked
  3749  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3750                           
  3751                           ;doprnt.c: 536: while(c = *f++) {
  3752  0000D0  EF80  F004         	goto	l5639
  3753  0000D4                     l5441:
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;doprnt.c: 538: if(c != '%')
  3757  0000D4  0E25               	movlw	37
  3758  0000D6  0101               	movlb	1	; () banked
  3759  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3760  0000DA  B4D8               	btfsc	status,2,c
  3761  0000DC  D008               	goto	l5447
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;doprnt.c: 540: {
  3765                           ;doprnt.c: 541: ((*sp++ = (c)));
  3766  0000DE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3767  0000E2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3768  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3769  0000EA  EF7D  F004         	goto	l5637
  3770  0000EE                     l5447:
  3771                           
  3772                           ;doprnt.c: 543: }
  3773                           ;doprnt.c: 548: flag = 0;
  3774  0000EE  0E00               	movlw	0
  3775  0000F0  0101               	movlb	1	; () banked
  3776  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3777  0000F4  0E00               	movlw	0
  3778  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3779                           
  3780                           ; BSR set to: 1
  3781                           ;doprnt.c: 611: if(*f == '.') {
  3782  0000F8  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3783  0000FC  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3784  000100                     	if	0	;tblptru may be non-zero
  3785  000100                     	endif
  3786  000100                     	if	0	;tblptru may be non-zero
  3787  000100                     	endif
  3788  000100  0008               	tblrd		*
  3789  000102  50F5               	movf	tablat,w,c
  3790  000104  0A2E               	xorlw	46
  3791  000106  A4D8               	btfss	status,2,c
  3792  000108  D039               	goto	l5461
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;doprnt.c: 612: flag |= 0x4000;
  3796  00010A  0101               	movlb	1	; () banked
  3797  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3798                           
  3799                           ;doprnt.c: 613: f++;
  3800  00010E  0100               	movlb	0	; () banked
  3801  000110  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3802  000112  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;doprnt.c: 620: {
  3806                           ;doprnt.c: 621: prec = 0;
  3807  000114  0E00               	movlw	0
  3808  000116  0101               	movlb	1	; () banked
  3809  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3810  00011A  0E00               	movlw	0
  3811  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3812                           
  3813                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3814  00011E  D023               	goto	l5459
  3815  000120                     l5455:
  3816                           
  3817                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3818  000120  C112  F060         	movff	sprintf@prec,___wmul@multiplier
  3819  000124  C113  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  3820  000128  0E00               	movlw	0
  3821  00012A  0100               	movlb	0	; () banked
  3822  00012C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3823  00012E  0E0A               	movlw	10
  3824  000130  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3825  000132  EC74  F019         	call	___wmul	;wreg free
  3826  000136  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3827  00013A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3828  00013E                     	if	0	;tblptru may be non-zero
  3829  00013E                     	endif
  3830  00013E                     	if	0	;tblptru may be non-zero
  3831  00013E                     	endif
  3832  00013E  0008               	tblrd		*
  3833  000140  50F5               	movf	tablat,w,c
  3834  000142  0100               	movlb	0	; () banked
  3835  000144  2760               	addwf	?___wmul& (0+255),f,b
  3836  000146  0E00               	movlw	0
  3837  000148  0100               	movlb	0	; () banked
  3838  00014A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  3839  00014C  0ED0               	movlw	208
  3840  00014E  0100               	movlb	0	; () banked
  3841  000150  2560               	addwf	?___wmul& (0+255),w,b
  3842  000152  0101               	movlb	1	; () banked
  3843  000154  6F12               	movwf	sprintf@prec& (0+255),b
  3844  000156  0EFF               	movlw	255
  3845  000158  0100               	movlb	0	; () banked
  3846  00015A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3847  00015C  0101               	movlb	1	; () banked
  3848  00015E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3849                           
  3850                           ; BSR set to: 1
  3851  000160  0100               	movlb	0	; () banked
  3852  000162  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3853  000164  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3854  000166                     l5459:
  3855  000166  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3856  00016A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3857  00016E                     	if	0	;tblptru may be non-zero
  3858  00016E                     	endif
  3859  00016E                     	if	0	;tblptru may be non-zero
  3860  00016E                     	endif
  3861  00016E  0008               	tblrd		*
  3862  000170  50F5               	movf	tablat,w,c
  3863  000172  ECED  F019         	call	_isdigit
  3864  000176  A0D8               	btfss	status,0,c
  3865  000178  D00C               	goto	l5469
  3866  00017A  D7D2               	goto	l5455
  3867  00017C                     l5461:
  3868                           
  3869                           ;doprnt.c: 626: prec = 0;
  3870  00017C  0E00               	movlw	0
  3871  00017E  0101               	movlb	1	; () banked
  3872  000180  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3873  000182  0E00               	movlw	0
  3874  000184  6F12               	movwf	sprintf@prec& (0+255),b
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;doprnt.c: 628: flag |= 0x1000;
  3878  000186  0101               	movlb	1	; () banked
  3879  000188  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;doprnt.c: 630: }
  3883                           ;doprnt.c: 635: switch(c = *f++) {
  3884  00018A  D003               	goto	l5469
  3885  00018C                     l5465:
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;doprnt.c: 663: flag |= 0x400;
  3889  00018C  0101               	movlb	1	; () banked
  3890  00018E  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3891                           
  3892                           ;doprnt.c: 664: break;
  3893  000190  D013               	goto	l5471
  3894  000192                     l5469:
  3895  000192  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3896  000196  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3897  00019A  0100               	movlb	0	; () banked
  3898  00019C  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3899  00019E  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3900  0001A0                     	if	0	;tblptru may be non-zero
  3901  0001A0                     	endif
  3902  0001A0                     	if	0	;tblptru may be non-zero
  3903  0001A0                     	endif
  3904  0001A0  0008               	tblrd		*
  3905  0001A2  CFF5 F118          	movff	tablat,sprintf@c
  3906  0001A6  0101               	movlb	1	; () banked
  3907  0001A8  5118               	movf	sprintf@c& (0+255),w,b
  3908                           
  3909                           ; Switch size 1, requested type "space"
  3910                           ; Number of cases is 2, Range of values is 0 to 102
  3911                           ; switch strategies available:
  3912                           ; Name         Instructions Cycles
  3913                           ; simple_byte            7     4 (average)
  3914                           ;	Chosen strategy is simple_byte
  3915  0001AA  0A00               	xorlw	0	; case 0
  3916  0001AC  B4D8               	btfsc	status,2,c
  3917  0001AE  D3B7               	goto	l5641
  3918  0001B0  0A66               	xorlw	102	; case 102
  3919  0001B2  B4D8               	btfsc	status,2,c
  3920  0001B4  D7EB               	goto	l5465
  3921  0001B6  D3A4               	goto	l5639
  3922  0001B8                     l5471:
  3923                           
  3924                           ; BSR set to: 1
  3925                           ;doprnt.c: 825: if(flag & (0x700)) {
  3926  0001B8  0E07               	movlw	7
  3927  0001BA  0101               	movlb	1	; () banked
  3928  0001BC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3929  0001BE  B4D8               	btfsc	status,2,c
  3930  0001C0  D347               	goto	l5619
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;doprnt.c: 827: if(flag & 0x1000)
  3934  0001C2  0101               	movlb	1	; () banked
  3935  0001C4  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3936  0001C6  D005               	goto	l5477
  3937                           
  3938                           ; BSR set to: 1
  3939                           ;doprnt.c: 829: prec = 6;
  3940  0001C8  0E00               	movlw	0
  3941  0001CA  0101               	movlb	1	; () banked
  3942  0001CC  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3943  0001CE  0E06               	movlw	6
  3944  0001D0  6F12               	movwf	sprintf@prec& (0+255),b
  3945  0001D2                     l5477:
  3946                           
  3947                           ; BSR set to: 1
  3948                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3949  0001D2  C104  FFD9         	movff	sprintf@ap,fsr2l
  3950  0001D6  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3951  0001DA  CFDE F114          	movff	postinc2,sprintf@fval
  3952  0001DE  CFDE F115          	movff	postinc2,sprintf@fval+1
  3953  0001E2  CFDE F116          	movff	postinc2,sprintf@fval+2
  3954  0001E6  CFDE F117          	movff	postinc2,sprintf@fval+3
  3955                           
  3956                           ; BSR set to: 1
  3957  0001EA  0E04               	movlw	4
  3958  0001EC  0101               	movlb	1	; () banked
  3959  0001EE  2704               	addwf	sprintf@ap& (0+255),f,b
  3960  0001F0  0E00               	movlw	0
  3961  0001F2  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3962                           
  3963                           ; BSR set to: 1
  3964                           ;doprnt.c: 831: if(fval < 0.0) {
  3965  0001F4  0101               	movlb	1	; () banked
  3966  0001F6  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3967  0001F8  D015               	goto	l5487
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;doprnt.c: 832: fval = -fval;
  3971  0001FA  C114  F060         	movff	sprintf@fval,___flneg@f1
  3972  0001FE  C115  F061         	movff	sprintf@fval+1,___flneg@f1+1
  3973  000202  C116  F062         	movff	sprintf@fval+2,___flneg@f1+2
  3974  000206  C117  F063         	movff	sprintf@fval+3,___flneg@f1+3
  3975  00020A  EC58  F019         	call	___flneg	;wreg free
  3976  00020E  C060  F114         	movff	?___flneg,sprintf@fval
  3977  000212  C061  F115         	movff	?___flneg+1,sprintf@fval+1
  3978  000216  C062  F116         	movff	?___flneg+2,sprintf@fval+2
  3979  00021A  C063  F117         	movff	?___flneg+3,sprintf@fval+3
  3980                           
  3981                           ;doprnt.c: 833: flag |= 0x03;
  3982  00021E  0E03               	movlw	3
  3983  000220  0101               	movlb	1	; () banked
  3984  000222  1306               	iorwf	sprintf@flag& (0+255),f,b
  3985  000224                     l5487:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;doprnt.c: 834: }
  3989                           ;doprnt.c: 835: exp = 0;
  3990  000224  0E00               	movlw	0
  3991  000226  0101               	movlb	1	; () banked
  3992  000228  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3993  00022A  0E00               	movlw	0
  3994  00022C  6F0C               	movwf	sprintf@exp& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;doprnt.c: 836: if( fval!=0) {
  3998  00022E  0101               	movlb	1	; () banked
  3999  000230  5114               	movf	sprintf@fval& (0+255),w,b
  4000  000232  0101               	movlb	1	; () banked
  4001  000234  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4002  000236  0101               	movlb	1	; () banked
  4003  000238  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4004  00023A  0101               	movlb	1	; () banked
  4005  00023C  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4006  00023E  B4D8               	btfsc	status,2,c
  4007  000240  D08E               	goto	l5515
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4011  000242  0101               	movlb	1	; () banked
  4012  000244  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4013  000246  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4014  000248  0F82               	addlw	130
  4015  00024A  0101               	movlb	1	; () banked
  4016  00024C  6F0C               	movwf	sprintf@exp& (0+255),b
  4017  00024E  0101               	movlb	1	; () banked
  4018  000250  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  4019  000252  0EFF               	movlw	255
  4020  000254  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;doprnt.c: 838: exp--;
  4024  000256  0101               	movlb	1	; () banked
  4025  000258  070C               	decf	sprintf@exp& (0+255),f,b
  4026  00025A  A0D8               	btfss	status,0,c
  4027  00025C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;doprnt.c: 839: exp *= 3;
  4031  00025E  C10C  F060         	movff	sprintf@exp,___wmul@multiplier
  4032  000262  C10D  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  4033  000266  0E00               	movlw	0
  4034  000268  0100               	movlb	0	; () banked
  4035  00026A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4036  00026C  0E03               	movlw	3
  4037  00026E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4038  000270  EC74  F019         	call	___wmul	;wreg free
  4039  000274  C060  F10C         	movff	?___wmul,sprintf@exp
  4040  000278  C061  F10D         	movff	?___wmul+1,sprintf@exp+1
  4041                           
  4042                           ;doprnt.c: 840: exp /= 10;
  4043  00027C  C10C  F066         	movff	sprintf@exp,___awdiv@dividend
  4044  000280  C10D  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  4045  000284  0E00               	movlw	0
  4046  000286  0100               	movlb	0	; () banked
  4047  000288  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4048  00028A  0E0A               	movlw	10
  4049  00028C  6F68               	movwf	___awdiv@divisor& (0+255),b
  4050  00028E  ECBC  F015         	call	___awdiv	;wreg free
  4051  000292  C066  F10C         	movff	?___awdiv,sprintf@exp
  4052  000296  C067  F10D         	movff	?___awdiv+1,sprintf@exp+1
  4053                           
  4054                           ;doprnt.c: 841: if(exp < 0)
  4055  00029A  0101               	movlb	1	; () banked
  4056  00029C  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  4057  00029E  D004               	goto	l5503
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;doprnt.c: 842: exp--;
  4061  0002A0  0101               	movlb	1	; () banked
  4062  0002A2  070C               	decf	sprintf@exp& (0+255),f,b
  4063  0002A4  A0D8               	btfss	status,0,c
  4064  0002A6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4065  0002A8                     l5503:
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4069  0002A8  0101               	movlb	1	; () banked
  4070  0002AA  510C               	movf	sprintf@exp& (0+255),w,b
  4071  0002AC  0800               	sublw	0
  4072  0002AE  EC96  F004         	call	_scale
  4073  0002B2  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4074  0002B6  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4075  0002BA  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4076  0002BE  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4077                           
  4078                           ;doprnt.c: 847: tmpval.integ *= fval;
  4079  0002C2  C10E  F075         	movff	sprintf@tmpval,___flmul@b
  4080  0002C6  C10F  F076         	movff	sprintf@tmpval+1,___flmul@b+1
  4081  0002CA  C110  F077         	movff	sprintf@tmpval+2,___flmul@b+2
  4082  0002CE  C111  F078         	movff	sprintf@tmpval+3,___flmul@b+3
  4083  0002D2  C114  F079         	movff	sprintf@fval,___flmul@a
  4084  0002D6  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4085  0002DA  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4086  0002DE  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4087  0002E2  EC53  F009         	call	___flmul	;wreg free
  4088  0002E6  C075  F10E         	movff	?___flmul,sprintf@tmpval
  4089  0002EA  C076  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  4090  0002EE  C077  F110         	movff	?___flmul+2,sprintf@tmpval+2
  4091  0002F2  C078  F111         	movff	?___flmul+3,sprintf@tmpval+3
  4092                           
  4093                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4094  0002F6  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4095  0002FA  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4096  0002FE  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4097  000302  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4098  000306  0E00               	movlw	0
  4099  000308  0100               	movlb	0	; () banked
  4100  00030A  6F64               	movwf	___flge@ff2& (0+255),b
  4101  00030C  0E00               	movlw	0
  4102  00030E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4103  000310  0E80               	movlw	128
  4104  000312  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4105  000314  0E3F               	movlw	63
  4106  000316  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4107  000318  ECC2  F010         	call	___flge	;wreg free
  4108  00031C  0100               	movlb	0	; () banked
  4109  00031E  B0D8               	btfsc	status,0,c
  4110  000320  D005               	goto	l5511
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;doprnt.c: 849: exp--;
  4114  000322  0101               	movlb	1	; () banked
  4115  000324  070C               	decf	sprintf@exp& (0+255),f,b
  4116  000326  A0D8               	btfss	status,0,c
  4117  000328  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4118  00032A  D019               	goto	l5515
  4119  00032C                     l5511:
  4120                           
  4121                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4122  00032C  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4123  000330  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4124  000334  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4125  000338  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4126  00033C  0E00               	movlw	0
  4127  00033E  0100               	movlb	0	; () banked
  4128  000340  6F64               	movwf	___flge@ff2& (0+255),b
  4129  000342  0E00               	movlw	0
  4130  000344  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4131  000346  0E20               	movlw	32
  4132  000348  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4133  00034A  0E41               	movlw	65
  4134  00034C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4135  00034E  ECC2  F010         	call	___flge	;wreg free
  4136  000352  0100               	movlb	0	; () banked
  4137  000354  A0D8               	btfss	status,0,c
  4138  000356  D003               	goto	l5515
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;doprnt.c: 851: exp++;
  4142  000358  0101               	movlb	1	; () banked
  4143  00035A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  4144  00035C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  4145  00035E                     l5515:
  4146                           
  4147                           ;doprnt.c: 852: }
  4148                           ;doprnt.c: 1112: if(prec <= 12)
  4149  00035E  0101               	movlb	1	; () banked
  4150  000360  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4151  000362  D008               	goto	l5517
  4152  000364  0101               	movlb	1	; () banked
  4153  000366  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4154  000368  E123               	bnz	l5519
  4155  00036A  0E0D               	movlw	13
  4156  00036C  0101               	movlb	1	; () banked
  4157  00036E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4158  000370  B0D8               	btfsc	status,0,c
  4159  000372  D01E               	goto	l5519
  4160  000374                     l5517:
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;doprnt.c: 1113: fval += fround(prec);
  4164  000374  C114  F09B         	movff	sprintf@fval,___fladd@b
  4165  000378  C115  F09C         	movff	sprintf@fval+1,___fladd@b+1
  4166  00037C  C116  F09D         	movff	sprintf@fval+2,___fladd@b+2
  4167  000380  C117  F09E         	movff	sprintf@fval+3,___fladd@b+3
  4168  000384  0101               	movlb	1	; () banked
  4169  000386  5112               	movf	sprintf@prec& (0+255),w,b
  4170  000388  ECA3  F00D         	call	_fround
  4171  00038C  C08E  F09F         	movff	?_fround,___fladd@a
  4172  000390  C08F  F0A0         	movff	?_fround+1,___fladd@a+1
  4173  000394  C090  F0A1         	movff	?_fround+2,___fladd@a+2
  4174  000398  C091  F0A2         	movff	?_fround+3,___fladd@a+3
  4175  00039C  ECFF  F006         	call	___fladd	;wreg free
  4176  0003A0  C09B  F114         	movff	?___fladd,sprintf@fval
  4177  0003A4  C09C  F115         	movff	?___fladd+1,sprintf@fval+1
  4178  0003A8  C09D  F116         	movff	?___fladd+2,sprintf@fval+2
  4179  0003AC  C09E  F117         	movff	?___fladd+3,sprintf@fval+3
  4180  0003B0                     l5519:
  4181                           
  4182                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4183  0003B0  0101               	movlb	1	; () banked
  4184  0003B2  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4185  0003B4  D008               	goto	l5521
  4186  0003B6  0101               	movlb	1	; () banked
  4187  0003B8  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4188  0003BA  E12E               	bnz	l5527
  4189  0003BC  0E0A               	movlw	10
  4190  0003BE  0101               	movlb	1	; () banked
  4191  0003C0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4192  0003C2  B0D8               	btfsc	status,0,c
  4193  0003C4  D029               	goto	l5527
  4194  0003C6                     l5521:
  4195                           
  4196                           ; BSR set to: 1
  4197  0003C6  0101               	movlb	1	; () banked
  4198  0003C8  5114               	movf	sprintf@fval& (0+255),w,b
  4199  0003CA  0101               	movlb	1	; () banked
  4200  0003CC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4201  0003CE  0101               	movlb	1	; () banked
  4202  0003D0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4203  0003D2  0101               	movlb	1	; () banked
  4204  0003D4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4205  0003D6  B4D8               	btfsc	status,2,c
  4206  0003D8  D06D               	goto	l5541
  4207                           
  4208                           ; BSR set to: 1
  4209  0003DA  C114  F097         	movff	sprintf@fval,___fltol@f1
  4210  0003DE  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4211  0003E2  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4212  0003E6  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4213  0003EA  EC4E  F014         	call	___fltol	;wreg free
  4214  0003EE  0100               	movlb	0	; () banked
  4215  0003F0  5197               	movf	?___fltol& (0+255),w,b
  4216  0003F2  0100               	movlb	0	; () banked
  4217  0003F4  1198               	iorwf	(?___fltol+1)& (0+255),w,b
  4218  0003F6  0100               	movlb	0	; () banked
  4219  0003F8  1199               	iorwf	(?___fltol+2)& (0+255),w,b
  4220  0003FA  0100               	movlb	0	; () banked
  4221  0003FC  119A               	iorwf	(?___fltol+3)& (0+255),w,b
  4222  0003FE  A4D8               	btfss	status,2,c
  4223  000400  D059               	goto	l5541
  4224                           
  4225                           ; BSR set to: 0
  4226  000402  0101               	movlb	1	; () banked
  4227  000404  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4228  000406  D056               	goto	l5541
  4229  000408  0101               	movlb	1	; () banked
  4230  00040A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4231  00040C  E105               	bnz	l5527
  4232  00040E  0E02               	movlw	2
  4233  000410  0101               	movlb	1	; () banked
  4234  000412  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4235  000414  A0D8               	btfss	status,0,c
  4236  000416  D04E               	goto	l5541
  4237  000418                     l5527:
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4241  000418  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4242  00041C  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4243  000420  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4244  000424  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4245  000428  0E5F               	movlw	95
  4246  00042A  0100               	movlb	0	; () banked
  4247  00042C  6F64               	movwf	___flge@ff2& (0+255),b
  4248  00042E  0E70               	movlw	112
  4249  000430  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4250  000432  0E89               	movlw	137
  4251  000434  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4252  000436  0E40               	movlw	64
  4253  000438  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4254  00043A  ECC2  F010         	call	___flge	;wreg free
  4255  00043E  0100               	movlb	0	; () banked
  4256  000440  B0D8               	btfsc	status,0,c
  4257  000442  D003               	goto	l5531
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4261  000444  0101               	movlb	1	; () banked
  4262  000446  0EF7               	movlw	247
  4263  000448  D002               	goto	L3
  4264  00044A                     l5531:
  4265                           
  4266                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4267  00044A  0101               	movlb	1	; () banked
  4268  00044C  0EF8               	movlw	248
  4269  00044E                     L3:
  4270  00044E  270C               	addwf	sprintf@exp& (0+255),f,b
  4271  000450  0EFF               	movlw	255
  4272  000452  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4276                           
  4277                           ; BSR set to: 1
  4278  000454  0101               	movlb	1	; () banked
  4279  000456  510C               	movf	sprintf@exp& (0+255),w,b
  4280  000458  EC96  F004         	call	_scale
  4281  00045C  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4282  000460  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4283  000464  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4284  000468  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4285  00046C  C114  F060         	movff	sprintf@fval,__div_to_l_@f1
  4286  000470  C115  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4287  000474  C116  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4288  000478  C117  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  4289  00047C  C10E  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  4290  000480  C10F  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  4291  000484  C110  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  4292  000488  C111  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  4293  00048C  EC8A  F011         	call	__div_to_l_	;wreg free
  4294  000490  C060  F108         	movff	?__div_to_l_,sprintf@val
  4295  000494  C061  F109         	movff	?__div_to_l_+1,sprintf@val+1
  4296  000498  C062  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  4297  00049C  C063  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  4298                           
  4299                           ;doprnt.c: 1129: fval = 0.0;
  4300  0004A0  0E00               	movlw	0
  4301  0004A2  0101               	movlb	1	; () banked
  4302  0004A4  6F14               	movwf	sprintf@fval& (0+255),b
  4303  0004A6  0E00               	movlw	0
  4304  0004A8  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  4305  0004AA  0E00               	movlw	0
  4306  0004AC  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  4307  0004AE  0E00               	movlw	0
  4308  0004B0  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  4309                           
  4310                           ;doprnt.c: 1130: } else {
  4311  0004B2  D03C               	goto	l5545
  4312  0004B4                     l5541:
  4313                           
  4314                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4315  0004B4  C114  F097         	movff	sprintf@fval,___fltol@f1
  4316  0004B8  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4317  0004BC  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4318  0004C0  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4319  0004C4  EC4E  F014         	call	___fltol	;wreg free
  4320  0004C8  C097  F108         	movff	?___fltol,sprintf@val
  4321  0004CC  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4322  0004D0  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4323  0004D4  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4324                           
  4325                           ;doprnt.c: 1132: fval -= (double)val;
  4326  0004D8  C114  F0AF         	movff	sprintf@fval,___flsub@b
  4327  0004DC  C115  F0B0         	movff	sprintf@fval+1,___flsub@b+1
  4328  0004E0  C116  F0B1         	movff	sprintf@fval+2,___flsub@b+2
  4329  0004E4  C117  F0B2         	movff	sprintf@fval+3,___flsub@b+3
  4330  0004E8  C108  F067         	movff	sprintf@val,___xxtofl@val
  4331  0004EC  C109  F068         	movff	sprintf@val+1,___xxtofl@val+1
  4332  0004F0  C10A  F069         	movff	sprintf@val+2,___xxtofl@val+2
  4333  0004F4  C10B  F06A         	movff	sprintf@val+3,___xxtofl@val+3
  4334  0004F8  0E00               	movlw	0
  4335  0004FA  EC0C  F00F         	call	___xxtofl
  4336  0004FE  C067  F0B3         	movff	?___xxtofl,___flsub@a
  4337  000502  C068  F0B4         	movff	?___xxtofl+1,___flsub@a+1
  4338  000506  C069  F0B5         	movff	?___xxtofl+2,___flsub@a+2
  4339  00050A  C06A  F0B6         	movff	?___xxtofl+3,___flsub@a+3
  4340  00050E  ECD7  F018         	call	___flsub	;wreg free
  4341  000512  C0AF  F114         	movff	?___flsub,sprintf@fval
  4342  000516  C0B0  F115         	movff	?___flsub+1,sprintf@fval+1
  4343  00051A  C0B1  F116         	movff	?___flsub+2,sprintf@fval+2
  4344  00051E  C0B2  F117         	movff	?___flsub+3,sprintf@fval+3
  4345                           
  4346                           ;doprnt.c: 1133: exp = 0;
  4347  000522  0E00               	movlw	0
  4348  000524  0101               	movlb	1	; () banked
  4349  000526  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  4350  000528  0E00               	movlw	0
  4351  00052A  6F0C               	movwf	sprintf@exp& (0+255),b
  4352  00052C                     l5545:
  4353                           
  4354                           ; BSR set to: 1
  4355                           ;doprnt.c: 1134: }
  4356                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4357  00052C  0E01               	movlw	1
  4358  00052E  0101               	movlb	1	; () banked
  4359  000530  6F18               	movwf	sprintf@c& (0+255),b
  4360  000532                     l5547:
  4361                           
  4362                           ; BSR set to: 1
  4363  000532  0E0A               	movlw	10
  4364  000534  0101               	movlb	1	; () banked
  4365  000536  1918               	xorwf	sprintf@c& (0+255),w,b
  4366  000538  B4D8               	btfsc	status,2,c
  4367  00053A  D01E               	goto	l5559
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;doprnt.c: 1137: if(val < dpowers[c])
  4371                           
  4372                           ; BSR set to: 1
  4373                           
  4374                           ; BSR set to: 1
  4375  00053C  0101               	movlb	1	; () banked
  4376  00053E  5118               	movf	sprintf@c& (0+255),w,b
  4377  000540  0D04               	mullw	4
  4378  000542  0E53               	movlw	low _dpowers
  4379  000544  24F3               	addwf	prodl,w,c
  4380  000546  6EF6               	movwf	tblptrl,c
  4381  000548  0E3F               	movlw	high _dpowers
  4382  00054A  20F4               	addwfc	prodh,w,c
  4383  00054C  6EF7               	movwf	tblptrh,c
  4384  00054E                     	if	0	;There are less than 3 active tblptr bytes
  4385  00054E                     	endif
  4386  00054E  0009               	tblrd		*+
  4387  000550  50F5               	movf	tablat,w,c
  4388  000552  0101               	movlb	1	; () banked
  4389  000554  5D08               	subwf	sprintf@val& (0+255),w,b
  4390  000556  0009               	tblrd		*+
  4391  000558  50F5               	movf	tablat,w,c
  4392  00055A  0101               	movlb	1	; () banked
  4393  00055C  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  4394  00055E  0009               	tblrd		*+
  4395  000560  50F5               	movf	tablat,w,c
  4396  000562  0101               	movlb	1	; () banked
  4397  000564  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  4398  000566  0009               	tblrd		*+
  4399  000568  50F5               	movf	tablat,w,c
  4400  00056A  0101               	movlb	1	; () banked
  4401  00056C  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  4402  00056E  A0D8               	btfss	status,0,c
  4403  000570  D003               	goto	l5559
  4404                           
  4405                           ; BSR set to: 1
  4406                           
  4407                           ; BSR set to: 1
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;doprnt.c: 1138: break;
  4411  000572  0101               	movlb	1	; () banked
  4412  000574  2B18               	incf	sprintf@c& (0+255),f,b
  4413  000576  D7DD               	goto	l5547
  4414  000578                     l5559:
  4415                           
  4416                           ; BSR set to: 1
  4417                           ;doprnt.c: 1175: {
  4418                           ;doprnt.c: 1188: if(flag & 0x03)
  4419  000578  0E03               	movlw	3
  4420  00057A  0101               	movlb	1	; () banked
  4421  00057C  1506               	andwf	sprintf@flag& (0+255),w,b
  4422  00057E  0100               	movlb	0	; () banked
  4423  000580  6FBF               	movwf	??_sprintf& (0+255),b
  4424  000582  0E00               	movlw	0
  4425  000584  0101               	movlb	1	; () banked
  4426  000586  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4427  000588  0100               	movlb	0	; () banked
  4428  00058A  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4429  00058C  0100               	movlb	0	; () banked
  4430  00058E  51BF               	movf	??_sprintf& (0+255),w,b
  4431  000590  0100               	movlb	0	; () banked
  4432  000592  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4433  000594  B4D8               	btfsc	status,2,c
  4434  000596  D055               	goto	l5573
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4438  000598  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4439  00059C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4440  0005A0  0E2D               	movlw	45
  4441  0005A2  D04D               	goto	L4
  4442  0005A4                     l5563:
  4443                           
  4444                           ; BSR set to: 0
  4445  0005A4  0100               	movlb	0	; () banked
  4446  0005A6  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4447  0005A8  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;doprnt.c: 1195: }
  4451                           ;doprnt.c: 1196: while(c--) {
  4452  0005AA  D04B               	goto	l5573
  4453  0005AC                     l5565:
  4454                           
  4455                           ;doprnt.c: 1200: {
  4456                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4457  0005AC  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4458  0005B0  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4459  0005B4  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4460  0005B8  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4461  0005BC  0101               	movlb	1	; () banked
  4462  0005BE  5118               	movf	sprintf@c& (0+255),w,b
  4463  0005C0  0D04               	mullw	4
  4464  0005C2  0E53               	movlw	low _dpowers
  4465  0005C4  24F3               	addwf	prodl,w,c
  4466  0005C6  6EF6               	movwf	tblptrl,c
  4467  0005C8  0E3F               	movlw	high _dpowers
  4468  0005CA  20F4               	addwfc	prodh,w,c
  4469  0005CC  6EF7               	movwf	tblptrh,c
  4470  0005CE                     	if	0	;There are less than 3 active tblptr bytes
  4471  0005CE                     	endif
  4472  0005CE  0009               	tblrd		*+
  4473  0005D0  CFF5 F064          	movff	tablat,___lldiv@divisor
  4474  0005D4  0009               	tblrd		*+
  4475  0005D6  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4476  0005DA  0009               	tblrd		*+
  4477  0005DC  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4478  0005E0  000A               	tblrd		*-
  4479  0005E2  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4480  0005E6  EC1B  F016         	call	___lldiv	;wreg free
  4481  0005EA  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4482  0005EE  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4483  0005F2  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4484  0005F6  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4485                           
  4486                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4487  0005FA  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4488  0005FE  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4489  000602  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4490  000606  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4491  00060A  0E0A               	movlw	10
  4492  00060C  0100               	movlb	0	; () banked
  4493  00060E  6F64               	movwf	___llmod@divisor& (0+255),b
  4494  000610  0E00               	movlw	0
  4495  000612  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4496  000614  0E00               	movlw	0
  4497  000616  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4498  000618  0E00               	movlw	0
  4499  00061A  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4500  00061C  EC1E  F017         	call	___llmod	;wreg free
  4501  000620  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4502  000624  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4503  000628  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4504  00062C  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4505                           
  4506                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4507  000630  0101               	movlb	1	; () banked
  4508  000632  510E               	movf	sprintf@tmpval& (0+255),w,b
  4509  000634  0F30               	addlw	48
  4510  000636  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4511  00063A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4512  00063E                     L4:
  4513  00063E  6EDF               	movwf	indf2,c
  4514  000640  D7B1               	goto	l5563
  4515  000642                     l5573:
  4516                           
  4517                           ; BSR set to: 0
  4518  000642  0101               	movlb	1	; () banked
  4519  000644  0718               	decf	sprintf@c& (0+255),f,b
  4520  000646  0101               	movlb	1	; () banked
  4521  000648  2918               	incf	sprintf@c& (0+255),w,b
  4522  00064A  B4D8               	btfsc	status,2,c
  4523  00064C  D00E               	goto	l5581
  4524  00064E  D7AE               	goto	l5565
  4525  000650                     l5575:
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4529  000650  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4530  000654  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4531  000658  0E30               	movlw	48
  4532  00065A  6EDF               	movwf	indf2,c
  4533                           
  4534                           ; BSR set to: 1
  4535  00065C  0100               	movlb	0	; () banked
  4536  00065E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4537  000660  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;doprnt.c: 1209: exp--;
  4541  000662  0101               	movlb	1	; () banked
  4542  000664  070C               	decf	sprintf@exp& (0+255),f,b
  4543  000666  A0D8               	btfss	status,0,c
  4544  000668  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4545  00066A                     l5581:
  4546                           
  4547                           ; BSR set to: 1
  4548  00066A  0101               	movlb	1	; () banked
  4549  00066C  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4550  00066E  D007               	goto	l5583
  4551  000670  0101               	movlb	1	; () banked
  4552  000672  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4553  000674  E1ED               	bnz	l5575
  4554  000676  0101               	movlb	1	; () banked
  4555  000678  050C               	decf	sprintf@exp& (0+255),w,b
  4556  00067A  B0D8               	btfsc	status,0,c
  4557  00067C  D7E9               	goto	l5575
  4558  00067E                     l5583:
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;doprnt.c: 1210: }
  4562                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4563  00067E  0101               	movlb	1	; () banked
  4564  000680  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4565  000682  D00C               	goto	l411
  4566  000684  0101               	movlb	1	; () banked
  4567  000686  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4568  000688  E105               	bnz	u6640
  4569  00068A  0E09               	movlw	9
  4570  00068C  0101               	movlb	1	; () banked
  4571  00068E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4572  000690  A0D8               	btfss	status,0,c
  4573  000692  D004               	goto	l411
  4574  000694                     u6640:
  4575                           
  4576                           ; BSR set to: 1
  4577                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4578  000694  0E08               	movlw	8
  4579  000696  0101               	movlb	1	; () banked
  4580  000698  6F18               	movwf	sprintf@c& (0+255),b
  4581  00069A  D002               	goto	l5587
  4582  00069C                     l411:
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;doprnt.c: 1213: else
  4586                           ;doprnt.c: 1214: c = prec;
  4587  00069C  C112  F118         	movff	sprintf@prec,sprintf@c
  4588  0006A0                     l5587:
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;doprnt.c: 1215: prec -= c;
  4592  0006A0  0101               	movlb	1	; () banked
  4593  0006A2  5118               	movf	sprintf@c& (0+255),w,b
  4594  0006A4  0101               	movlb	1	; () banked
  4595  0006A6  5F12               	subwf	sprintf@prec& (0+255),f,b
  4596  0006A8  0E00               	movlw	0
  4597  0006AA  0101               	movlb	1	; () banked
  4598  0006AC  BF18               	btfsc	sprintf@c& (0+255),7,b
  4599  0006AE  0EFF               	movlw	255
  4600  0006B0  0101               	movlb	1	; () banked
  4601  0006B2  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4602                           
  4603                           ; BSR set to: 1
  4604                           ;doprnt.c: 1219: if(c)
  4605  0006B4  0101               	movlb	1	; () banked
  4606  0006B6  5118               	movf	sprintf@c& (0+255),w,b
  4607  0006B8  0101               	movlb	1	; () banked
  4608  0006BA  B4D8               	btfsc	status,2,c
  4609  0006BC  D009               	goto	l5595
  4610                           
  4611                           ; BSR set to: 1
  4612                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4613  0006BE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4614  0006C2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4615  0006C6  0E2E               	movlw	46
  4616  0006C8  6EDF               	movwf	indf2,c
  4617                           
  4618                           ; BSR set to: 1
  4619  0006CA  0100               	movlb	0	; () banked
  4620  0006CC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4621  0006CE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4622  0006D0                     l5595:
  4623                           
  4624                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4625  0006D0  0101               	movlb	1	; () banked
  4626  0006D2  5118               	movf	sprintf@c& (0+255),w,b
  4627  0006D4  EC96  F004         	call	_scale
  4628  0006D8  C08E  F100         	movff	?_scale,_sprintf$2400
  4629  0006DC  C08F  F101         	movff	?_scale+1,_sprintf$2400+1
  4630  0006E0  C090  F102         	movff	?_scale+2,_sprintf$2400+2
  4631  0006E4  C091  F103         	movff	?_scale+3,_sprintf$2400+3
  4632                           
  4633                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4634  0006E8  C114  F079         	movff	sprintf@fval,___flmul@a
  4635  0006EC  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4636  0006F0  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4637  0006F4  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4638  0006F8  C100  F075         	movff	_sprintf$2400,___flmul@b
  4639  0006FC  C101  F076         	movff	_sprintf$2400+1,___flmul@b+1
  4640  000700  C102  F077         	movff	_sprintf$2400+2,___flmul@b+2
  4641  000704  C103  F078         	movff	_sprintf$2400+3,___flmul@b+3
  4642  000708  EC53  F009         	call	___flmul	;wreg free
  4643  00070C  C075  F097         	movff	?___flmul,___fltol@f1
  4644  000710  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  4645  000714  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  4646  000718  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  4647  00071C  EC4E  F014         	call	___fltol	;wreg free
  4648  000720  C097  F108         	movff	?___fltol,sprintf@val
  4649  000724  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4650  000728  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4651  00072C  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4652                           
  4653                           ;doprnt.c: 1228: while(c--) {
  4654  000730  D074               	goto	l5609
  4655  000732                     l5599:
  4656                           
  4657                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4658  000732  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4659  000736  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4660  00073A  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4661  00073E  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4662  000742  0101               	movlb	1	; () banked
  4663  000744  5118               	movf	sprintf@c& (0+255),w,b
  4664  000746  0D04               	mullw	4
  4665  000748  0E53               	movlw	low _dpowers
  4666  00074A  24F3               	addwf	prodl,w,c
  4667  00074C  6EF6               	movwf	tblptrl,c
  4668  00074E  0E3F               	movlw	high _dpowers
  4669  000750  20F4               	addwfc	prodh,w,c
  4670  000752  6EF7               	movwf	tblptrh,c
  4671  000754                     	if	0	;There are less than 3 active tblptr bytes
  4672  000754                     	endif
  4673  000754  0009               	tblrd		*+
  4674  000756  CFF5 F064          	movff	tablat,___lldiv@divisor
  4675  00075A  0009               	tblrd		*+
  4676  00075C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4677  000760  0009               	tblrd		*+
  4678  000762  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4679  000766  000A               	tblrd		*-
  4680  000768  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4681  00076C  EC1B  F016         	call	___lldiv	;wreg free
  4682  000770  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4683  000774  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4684  000778  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4685  00077C  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4686                           
  4687                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4688  000780  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4689  000784  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4690  000788  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4691  00078C  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4692  000790  0E0A               	movlw	10
  4693  000792  0100               	movlb	0	; () banked
  4694  000794  6F64               	movwf	___llmod@divisor& (0+255),b
  4695  000796  0E00               	movlw	0
  4696  000798  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4697  00079A  0E00               	movlw	0
  4698  00079C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4699  00079E  0E00               	movlw	0
  4700  0007A0  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4701  0007A2  EC1E  F017         	call	___llmod	;wreg free
  4702  0007A6  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4703  0007AA  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4704  0007AE  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4705  0007B2  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4706                           
  4707                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4708  0007B6  0101               	movlb	1	; () banked
  4709  0007B8  510E               	movf	sprintf@tmpval& (0+255),w,b
  4710  0007BA  0F30               	addlw	48
  4711  0007BC  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4712  0007C0  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4713  0007C4  6EDF               	movwf	indf2,c
  4714                           
  4715                           ; BSR set to: 1
  4716  0007C6  0100               	movlb	0	; () banked
  4717  0007C8  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4718  0007CA  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;doprnt.c: 1232: val %= dpowers[c];
  4722  0007CC  C108  F060         	movff	sprintf@val,___llmod@dividend
  4723  0007D0  C109  F061         	movff	sprintf@val+1,___llmod@dividend+1
  4724  0007D4  C10A  F062         	movff	sprintf@val+2,___llmod@dividend+2
  4725  0007D8  C10B  F063         	movff	sprintf@val+3,___llmod@dividend+3
  4726  0007DC  0101               	movlb	1	; () banked
  4727  0007DE  5118               	movf	sprintf@c& (0+255),w,b
  4728  0007E0  0D04               	mullw	4
  4729  0007E2  0E53               	movlw	low _dpowers
  4730  0007E4  24F3               	addwf	prodl,w,c
  4731  0007E6  6EF6               	movwf	tblptrl,c
  4732  0007E8  0E3F               	movlw	high _dpowers
  4733  0007EA  20F4               	addwfc	prodh,w,c
  4734  0007EC  6EF7               	movwf	tblptrh,c
  4735  0007EE                     	if	0	;There are less than 3 active tblptr bytes
  4736  0007EE                     	endif
  4737  0007EE  0009               	tblrd		*+
  4738  0007F0  CFF5 F064          	movff	tablat,___llmod@divisor
  4739  0007F4  0009               	tblrd		*+
  4740  0007F6  CFF5 F065          	movff	tablat,___llmod@divisor+1
  4741  0007FA  0009               	tblrd		*+
  4742  0007FC  CFF5 F066          	movff	tablat,___llmod@divisor+2
  4743  000800  000A               	tblrd		*-
  4744  000802  CFF5 F067          	movff	tablat,___llmod@divisor+3
  4745  000806  EC1E  F017         	call	___llmod	;wreg free
  4746  00080A  C060  F108         	movff	?___llmod,sprintf@val
  4747  00080E  C061  F109         	movff	?___llmod+1,sprintf@val+1
  4748  000812  C062  F10A         	movff	?___llmod+2,sprintf@val+2
  4749  000816  C063  F10B         	movff	?___llmod+3,sprintf@val+3
  4750  00081A                     l5609:
  4751  00081A  0101               	movlb	1	; () banked
  4752  00081C  0718               	decf	sprintf@c& (0+255),f,b
  4753  00081E  0101               	movlb	1	; () banked
  4754  000820  2918               	incf	sprintf@c& (0+255),w,b
  4755  000822  B4D8               	btfsc	status,2,c
  4756  000824  D00E               	goto	l5617
  4757  000826  D785               	goto	l5599
  4758  000828                     l5611:
  4759                           
  4760                           ; BSR set to: 1
  4761                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4762  000828  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4763  00082C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4764  000830  0E30               	movlw	48
  4765  000832  6EDF               	movwf	indf2,c
  4766                           
  4767                           ; BSR set to: 1
  4768  000834  0100               	movlb	0	; () banked
  4769  000836  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4770  000838  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;doprnt.c: 1237: prec--;
  4774  00083A  0101               	movlb	1	; () banked
  4775  00083C  0712               	decf	sprintf@prec& (0+255),f,b
  4776  00083E  A0D8               	btfss	status,0,c
  4777  000840  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4778  000842                     l5617:
  4779                           
  4780                           ; BSR set to: 1
  4781  000842  0101               	movlb	1	; () banked
  4782  000844  5112               	movf	sprintf@prec& (0+255),w,b
  4783  000846  0101               	movlb	1	; () banked
  4784  000848  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4785  00084A  B4D8               	btfsc	status,2,c
  4786  00084C  D059               	goto	l5639
  4787  00084E  D7EC               	goto	l5611
  4788  000850                     l5619:
  4789                           
  4790                           ; BSR set to: 1
  4791                           ;doprnt.c: 1246: }
  4792                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4793  000850  0101               	movlb	1	; () banked
  4794  000852  5112               	movf	sprintf@prec& (0+255),w,b
  4795  000854  0101               	movlb	1	; () banked
  4796  000856  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4797  000858  A4D8               	btfss	status,2,c
  4798  00085A  D00D               	goto	l5625
  4799                           
  4800                           ; BSR set to: 1
  4801  00085C  0101               	movlb	1	; () banked
  4802  00085E  5108               	movf	sprintf@val& (0+255),w,b
  4803  000860  0101               	movlb	1	; () banked
  4804  000862  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4805  000864  0101               	movlb	1	; () banked
  4806  000866  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4807  000868  0101               	movlb	1	; () banked
  4808  00086A  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4809  00086C  A4D8               	btfss	status,2,c
  4810  00086E  D003               	goto	l5625
  4811                           
  4812                           ; BSR set to: 1
  4813                           ;doprnt.c: 1291: prec++;
  4814  000870  0101               	movlb	1	; () banked
  4815  000872  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4816  000874  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4817  000876                     l5625:
  4818                           
  4819                           ; BSR set to: 1
  4820                           ;doprnt.c: 1339: if(c < prec)
  4821  000876  0E80               	movlw	128
  4822  000878  0101               	movlb	1	; () banked
  4823  00087A  BF18               	btfsc	sprintf@c& (0+255),7,b
  4824  00087C  0E7F               	movlw	127
  4825  00087E  0100               	movlb	0	; () banked
  4826  000880  6FBF               	movwf	??_sprintf& (0+255),b
  4827  000882  0101               	movlb	1	; () banked
  4828  000884  5112               	movf	sprintf@prec& (0+255),w,b
  4829  000886  0101               	movlb	1	; () banked
  4830  000888  5D18               	subwf	sprintf@c& (0+255),w,b
  4831  00088A  0101               	movlb	1	; () banked
  4832  00088C  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4833  00088E  0A80               	xorlw	128
  4834  000890  0100               	movlb	0	; () banked
  4835  000892  59BF               	subwfb	??_sprintf& (0+255),w,b
  4836  000894  B0D8               	btfsc	status,0,c
  4837  000896  D003               	goto	l5629
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;doprnt.c: 1340: c = prec;
  4841  000898  C112  F118         	movff	sprintf@prec,sprintf@c
  4842  00089C  D018               	goto	l5633
  4843  00089E                     l5629:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;doprnt.c: 1341: else if(prec < c)
  4847  00089E  0101               	movlb	1	; () banked
  4848  0008A0  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4849  0008A2  0A80               	xorlw	128
  4850  0008A4  0100               	movlb	0	; () banked
  4851  0008A6  6FBF               	movwf	??_sprintf& (0+255),b
  4852  0008A8  0101               	movlb	1	; () banked
  4853  0008AA  5118               	movf	sprintf@c& (0+255),w,b
  4854  0008AC  0101               	movlb	1	; () banked
  4855  0008AE  5D12               	subwf	sprintf@prec& (0+255),w,b
  4856  0008B0  0E80               	movlw	128
  4857  0008B2  0101               	movlb	1	; () banked
  4858  0008B4  BF18               	btfsc	sprintf@c& (0+255),7,b
  4859  0008B6  0E7F               	movlw	127
  4860  0008B8  0100               	movlb	0	; () banked
  4861  0008BA  59BF               	subwfb	??_sprintf& (0+255),w,b
  4862  0008BC  B0D8               	btfsc	status,0,c
  4863  0008BE  D007               	goto	l5633
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;doprnt.c: 1342: prec = c;
  4867  0008C0  0101               	movlb	1	; () banked
  4868  0008C2  5118               	movf	sprintf@c& (0+255),w,b
  4869  0008C4  0101               	movlb	1	; () banked
  4870  0008C6  6F12               	movwf	sprintf@prec& (0+255),b
  4871  0008C8  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4872  0008CA  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4873  0008CC  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4874  0008CE                     l5633:
  4875                           
  4876                           ;doprnt.c: 1422: {
  4877                           ;doprnt.c: 1438: if(flag & 0x03)
  4878  0008CE  0E03               	movlw	3
  4879  0008D0  0101               	movlb	1	; () banked
  4880  0008D2  1506               	andwf	sprintf@flag& (0+255),w,b
  4881  0008D4  0100               	movlb	0	; () banked
  4882  0008D6  6FBF               	movwf	??_sprintf& (0+255),b
  4883  0008D8  0E00               	movlw	0
  4884  0008DA  0101               	movlb	1	; () banked
  4885  0008DC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4886  0008DE  0100               	movlb	0	; () banked
  4887  0008E0  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4888  0008E2  0100               	movlb	0	; () banked
  4889  0008E4  51BF               	movf	??_sprintf& (0+255),w,b
  4890  0008E6  0100               	movlb	0	; () banked
  4891  0008E8  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4892  0008EA  B4D8               	btfsc	status,2,c
  4893  0008EC  D009               	goto	l5639
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4897  0008EE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4898  0008F2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4899  0008F6  0E2D               	movlw	45
  4900  0008F8  6EDF               	movwf	indf2,c
  4901  0008FA                     l5637:
  4902                           
  4903                           ; BSR set to: 0
  4904  0008FA  0100               	movlb	0	; () banked
  4905  0008FC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4906  0008FE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4907  000900                     l5639:
  4908  000900  C0B9  FFF6         	movff	sprintf@f,tblptrl
  4909  000904  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  4910  000908  0100               	movlb	0	; () banked
  4911  00090A  4BB9               	infsnz	sprintf@f& (0+255),f,b
  4912  00090C  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  4913  00090E                     	if	0	;tblptru may be non-zero
  4914  00090E                     	endif
  4915  00090E                     	if	0	;tblptru may be non-zero
  4916  00090E                     	endif
  4917  00090E  0008               	tblrd		*
  4918  000910  CFF5 F118          	movff	tablat,sprintf@c
  4919  000914  0101               	movlb	1	; () banked
  4920  000916  5118               	movf	sprintf@c& (0+255),w,b
  4921  000918  A4D8               	btfss	status,2,c
  4922  00091A  EF6A  F000         	goto	l5441
  4923  00091E                     l5641:
  4924                           
  4925                           ; BSR set to: 1
  4926                           ;doprnt.c: 1538: *sp = 0;
  4927  00091E  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4928  000922  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4929  000926  0E00               	movlw	0
  4930  000928  6EDF               	movwf	indf2,c
  4931  00092A  0012               	return	
  4932  00092C                     __end_of_sprintf:
  4933                           	opt stack 0
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           prodh	equ	0xFF4
  4939                           prodl	equ	0xFF3
  4940                           intcon	equ	0xFF2
  4941                           postinc0	equ	0xFEE
  4942                           wreg	equ	0xFE8
  4943                           indf1	equ	0xFE7
  4944                           postinc1	equ	0xFE6
  4945                           fsr1h	equ	0xFE2
  4946                           fsr1l	equ	0xFE1
  4947                           indf2	equ	0xFDF
  4948                           postinc2	equ	0xFDE
  4949                           fsr2h	equ	0xFDA
  4950                           fsr2l	equ	0xFD9
  4951                           status	equ	0xFD8
  4952                           
  4953 ;; *************** function _scale *****************
  4954 ;; Defined at:
  4955 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  scl             1    wreg     char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  scl             1   54[BANK0 ] char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  4   46[BANK0 ] char 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4969 ;;      Params:         0       4       0       0
  4970 ;;      Locals:         0       5       0       0
  4971 ;;      Temps:          0       0       0       0
  4972 ;;      Totals:         0       9       0       0
  4973 ;;Total ram usage:        9 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    4
  4976 ;; This function calls:
  4977 ;;		___awdiv
  4978 ;;		___awmod
  4979 ;;		___flmul
  4980 ;; This function is called by:
  4981 ;;		_sprintf
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text15
  4986  00092C                     __ptext15:
  4987                           	opt stack 0
  4988  00092C                     _scale:
  4989                           	opt stack 24
  4990                           
  4991                           ; BSR set to: 1
  4992                           ;incstack = 0
  4993                           ;scale@scl stored from wreg
  4994  00092C  0100               	movlb	0	; () banked
  4995  00092E  6F96               	movwf	scale@scl& (0+255),b
  4996                           
  4997                           ;doprnt.c: 428: if(scl < 0) {
  4998  000930  0100               	movlb	0	; () banked
  4999  000932  AF96               	btfss	scale@scl& (0+255),7,b
  5000  000934  D133               	goto	l5049
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;doprnt.c: 429: scl = -scl;
  5004  000936  0100               	movlb	0	; () banked
  5005  000938  6D96               	negf	scale@scl& (0+255),b
  5006                           
  5007                           ;doprnt.c: 430: if(scl>=110)
  5008  00093A  0100               	movlb	0	; () banked
  5009  00093C  5196               	movf	scale@scl& (0+255),w,b
  5010  00093E  0A80               	xorlw	128
  5011  000940  0F12               	addlw	-238
  5012  000942  A0D8               	btfss	status,0,c
  5013  000944  D0B2               	goto	l5039
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5017  000946  0E00               	movlw	0
  5018  000948  0100               	movlb	0	; () banked
  5019  00094A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5020  00094C  0E0A               	movlw	10
  5021  00094E  6F68               	movwf	___awdiv@divisor& (0+255),b
  5022  000950  0E00               	movlw	0
  5023  000952  0100               	movlb	0	; () banked
  5024  000954  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5025  000956  0E64               	movlw	100
  5026  000958  6F62               	movwf	___awmod@divisor& (0+255),b
  5027  00095A  0100               	movlb	0	; () banked
  5028  00095C  5196               	movf	scale@scl& (0+255),w,b
  5029  00095E  0100               	movlb	0	; () banked
  5030  000960  6F60               	movwf	___awmod@dividend& (0+255),b
  5031  000962  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5032  000964  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5033  000966  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5034  000968  ECCD  F016         	call	___awmod	;wreg free
  5035  00096C  C060  F066         	movff	?___awmod,___awdiv@dividend
  5036  000970  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5037  000974  ECBC  F015         	call	___awdiv	;wreg free
  5038  000978  0100               	movlb	0	; () banked
  5039  00097A  90D8               	bcf	status,0,c
  5040  00097C  3766               	rlcf	?___awdiv& (0+255),f,b
  5041  00097E  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5042  000980  0100               	movlb	0	; () banked
  5043  000982  90D8               	bcf	status,0,c
  5044  000984  3766               	rlcf	?___awdiv& (0+255),f,b
  5045  000986  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5046  000988  0E24               	movlw	36
  5047  00098A  0100               	movlb	0	; () banked
  5048  00098C  2766               	addwf	?___awdiv& (0+255),f,b
  5049  00098E  0E00               	movlw	0
  5050  000990  0100               	movlb	0	; () banked
  5051  000992  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5052  000994  0EEB               	movlw	low __npowers_
  5053  000996  0100               	movlb	0	; () banked
  5054  000998  2566               	addwf	?___awdiv& (0+255),w,b
  5055  00099A  6EF6               	movwf	tblptrl,c
  5056  00099C  0E3E               	movlw	high __npowers_
  5057  00099E  0100               	movlb	0	; () banked
  5058  0009A0  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5059  0009A2  6EF7               	movwf	tblptrh,c
  5060  0009A4                     	if	0	;There are less than 3 active tblptr bytes
  5061  0009A4                     	endif
  5062  0009A4  0009               	tblrd		*+
  5063  0009A6  CFF5 F079          	movff	tablat,___flmul@a
  5064  0009AA  0009               	tblrd		*+
  5065  0009AC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5066  0009B0  0009               	tblrd		*+
  5067  0009B2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5068  0009B6  000A               	tblrd		*-
  5069  0009B8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5070  0009BC  0E00               	movlw	0
  5071  0009BE  0100               	movlb	0	; () banked
  5072  0009C0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5073  0009C2  0E64               	movlw	100
  5074  0009C4  6F68               	movwf	___awdiv@divisor& (0+255),b
  5075  0009C6  0100               	movlb	0	; () banked
  5076  0009C8  5196               	movf	scale@scl& (0+255),w,b
  5077  0009CA  0100               	movlb	0	; () banked
  5078  0009CC  6F66               	movwf	___awdiv@dividend& (0+255),b
  5079  0009CE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5080  0009D0  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5081  0009D2  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5082  0009D4  ECBC  F015         	call	___awdiv	;wreg free
  5083  0009D8  0100               	movlb	0	; () banked
  5084  0009DA  90D8               	bcf	status,0,c
  5085  0009DC  3766               	rlcf	?___awdiv& (0+255),f,b
  5086  0009DE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5087  0009E0  0100               	movlb	0	; () banked
  5088  0009E2  90D8               	bcf	status,0,c
  5089  0009E4  3766               	rlcf	?___awdiv& (0+255),f,b
  5090  0009E6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5091  0009E8  0E48               	movlw	72
  5092  0009EA  0100               	movlb	0	; () banked
  5093  0009EC  2766               	addwf	?___awdiv& (0+255),f,b
  5094  0009EE  0E00               	movlw	0
  5095  0009F0  0100               	movlb	0	; () banked
  5096  0009F2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5097  0009F4  0EEB               	movlw	low __npowers_
  5098  0009F6  0100               	movlb	0	; () banked
  5099  0009F8  2566               	addwf	?___awdiv& (0+255),w,b
  5100  0009FA  6EF6               	movwf	tblptrl,c
  5101  0009FC  0E3E               	movlw	high __npowers_
  5102  0009FE  0100               	movlb	0	; () banked
  5103  000A00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5104  000A02  6EF7               	movwf	tblptrh,c
  5105  000A04                     	if	0	;There are less than 3 active tblptr bytes
  5106  000A04                     	endif
  5107  000A04  0009               	tblrd		*+
  5108  000A06  CFF5 F075          	movff	tablat,___flmul@b
  5109  000A0A  0009               	tblrd		*+
  5110  000A0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5111  000A10  0009               	tblrd		*+
  5112  000A12  CFF5 F077          	movff	tablat,___flmul@b+2
  5113  000A16  000A               	tblrd		*-
  5114  000A18  CFF5 F078          	movff	tablat,___flmul@b+3
  5115  000A1C  EC53  F009         	call	___flmul	;wreg free
  5116  000A20  C075  F092         	movff	?___flmul,_scale$2399
  5117  000A24  C076  F093         	movff	?___flmul+1,_scale$2399+1
  5118  000A28  C077  F094         	movff	?___flmul+2,_scale$2399+2
  5119  000A2C  C078  F095         	movff	?___flmul+3,_scale$2399+3
  5120                           
  5121                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5122  000A30  C092  F075         	movff	_scale$2399,___flmul@b
  5123  000A34  C093  F076         	movff	_scale$2399+1,___flmul@b+1
  5124  000A38  C094  F077         	movff	_scale$2399+2,___flmul@b+2
  5125  000A3C  C095  F078         	movff	_scale$2399+3,___flmul@b+3
  5126  000A40  0E00               	movlw	0
  5127  000A42  0100               	movlb	0	; () banked
  5128  000A44  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5129  000A46  0E0A               	movlw	10
  5130  000A48  6F62               	movwf	___awmod@divisor& (0+255),b
  5131  000A4A  0100               	movlb	0	; () banked
  5132  000A4C  5196               	movf	scale@scl& (0+255),w,b
  5133  000A4E  0100               	movlb	0	; () banked
  5134  000A50  6F60               	movwf	___awmod@dividend& (0+255),b
  5135  000A52  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5136  000A54  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5137  000A56  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5138  000A58  ECCD  F016         	call	___awmod	;wreg free
  5139  000A5C  0100               	movlb	0	; () banked
  5140  000A5E  90D8               	bcf	status,0,c
  5141  000A60  3760               	rlcf	?___awmod& (0+255),f,b
  5142  000A62  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5143  000A64  0100               	movlb	0	; () banked
  5144  000A66  90D8               	bcf	status,0,c
  5145  000A68  3760               	rlcf	?___awmod& (0+255),f,b
  5146  000A6A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5147  000A6C  0EEB               	movlw	low __npowers_
  5148  000A6E  0100               	movlb	0	; () banked
  5149  000A70  2560               	addwf	?___awmod& (0+255),w,b
  5150  000A72  6EF6               	movwf	tblptrl,c
  5151  000A74  0E3E               	movlw	high __npowers_
  5152  000A76  0100               	movlb	0	; () banked
  5153  000A78  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5154  000A7A  6EF7               	movwf	tblptrh,c
  5155  000A7C                     	if	0	;There are less than 3 active tblptr bytes
  5156  000A7C                     	endif
  5157  000A7C  0009               	tblrd		*+
  5158  000A7E  CFF5 F079          	movff	tablat,___flmul@a
  5159  000A82  0009               	tblrd		*+
  5160  000A84  CFF5 F07A          	movff	tablat,___flmul@a+1
  5161  000A88  0009               	tblrd		*+
  5162  000A8A  CFF5 F07B          	movff	tablat,___flmul@a+2
  5163  000A8E  000A               	tblrd		*-
  5164  000A90  CFF5 F07C          	movff	tablat,___flmul@a+3
  5165  000A94  EC53  F009         	call	___flmul	;wreg free
  5166  000A98  C075  F08E         	movff	?___flmul,?_scale
  5167  000A9C  C076  F08F         	movff	?___flmul+1,?_scale+1
  5168  000AA0  C077  F090         	movff	?___flmul+2,?_scale+2
  5169  000AA4  C078  F091         	movff	?___flmul+3,?_scale+3
  5170  000AA8  0012               	return	
  5171  000AAA                     l5039:
  5172                           
  5173                           ;doprnt.c: 432: else if(scl > 10)
  5174  000AAA  0100               	movlb	0	; () banked
  5175  000AAC  5196               	movf	scale@scl& (0+255),w,b
  5176  000AAE  0A80               	xorlw	128
  5177  000AB0  0F75               	addlw	-139
  5178  000AB2  A0D8               	btfss	status,0,c
  5179  000AB4  D05D               	goto	l5045
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5183  000AB6  0E00               	movlw	0
  5184  000AB8  0100               	movlb	0	; () banked
  5185  000ABA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5186  000ABC  0E0A               	movlw	10
  5187  000ABE  6F68               	movwf	___awdiv@divisor& (0+255),b
  5188  000AC0  0100               	movlb	0	; () banked
  5189  000AC2  5196               	movf	scale@scl& (0+255),w,b
  5190  000AC4  0100               	movlb	0	; () banked
  5191  000AC6  6F66               	movwf	___awdiv@dividend& (0+255),b
  5192  000AC8  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5193  000ACA  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5194  000ACC  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5195  000ACE  ECBC  F015         	call	___awdiv	;wreg free
  5196  000AD2  0100               	movlb	0	; () banked
  5197  000AD4  90D8               	bcf	status,0,c
  5198  000AD6  3766               	rlcf	?___awdiv& (0+255),f,b
  5199  000AD8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5200  000ADA  0100               	movlb	0	; () banked
  5201  000ADC  90D8               	bcf	status,0,c
  5202  000ADE  3766               	rlcf	?___awdiv& (0+255),f,b
  5203  000AE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5204  000AE2  0E24               	movlw	36
  5205  000AE4  0100               	movlb	0	; () banked
  5206  000AE6  2766               	addwf	?___awdiv& (0+255),f,b
  5207  000AE8  0E00               	movlw	0
  5208  000AEA  0100               	movlb	0	; () banked
  5209  000AEC  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5210  000AEE  0EEB               	movlw	low __npowers_
  5211  000AF0  0100               	movlb	0	; () banked
  5212  000AF2  2566               	addwf	?___awdiv& (0+255),w,b
  5213  000AF4  6EF6               	movwf	tblptrl,c
  5214  000AF6  0E3E               	movlw	high __npowers_
  5215  000AF8  0100               	movlb	0	; () banked
  5216  000AFA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5217  000AFC  6EF7               	movwf	tblptrh,c
  5218  000AFE                     	if	0	;There are less than 3 active tblptr bytes
  5219  000AFE                     	endif
  5220  000AFE  0009               	tblrd		*+
  5221  000B00  CFF5 F075          	movff	tablat,___flmul@b
  5222  000B04  0009               	tblrd		*+
  5223  000B06  CFF5 F076          	movff	tablat,___flmul@b+1
  5224  000B0A  0009               	tblrd		*+
  5225  000B0C  CFF5 F077          	movff	tablat,___flmul@b+2
  5226  000B10  000A               	tblrd		*-
  5227  000B12  CFF5 F078          	movff	tablat,___flmul@b+3
  5228  000B16  0E00               	movlw	0
  5229  000B18  0100               	movlb	0	; () banked
  5230  000B1A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5231  000B1C  0E0A               	movlw	10
  5232  000B1E  6F62               	movwf	___awmod@divisor& (0+255),b
  5233  000B20  0100               	movlb	0	; () banked
  5234  000B22  5196               	movf	scale@scl& (0+255),w,b
  5235  000B24  0100               	movlb	0	; () banked
  5236  000B26  6F60               	movwf	___awmod@dividend& (0+255),b
  5237  000B28  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5238  000B2A  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5239  000B2C  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5240  000B2E  ECCD  F016         	call	___awmod	;wreg free
  5241  000B32  0100               	movlb	0	; () banked
  5242  000B34  90D8               	bcf	status,0,c
  5243  000B36  3760               	rlcf	?___awmod& (0+255),f,b
  5244  000B38  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5245  000B3A  0100               	movlb	0	; () banked
  5246  000B3C  90D8               	bcf	status,0,c
  5247  000B3E  3760               	rlcf	?___awmod& (0+255),f,b
  5248  000B40  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5249  000B42  0EEB               	movlw	low __npowers_
  5250  000B44  0100               	movlb	0	; () banked
  5251  000B46  2560               	addwf	?___awmod& (0+255),w,b
  5252  000B48  6EF6               	movwf	tblptrl,c
  5253  000B4A  0E3E               	movlw	high __npowers_
  5254  000B4C  0100               	movlb	0	; () banked
  5255  000B4E  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5256  000B50  6EF7               	movwf	tblptrh,c
  5257  000B52                     	if	0	;There are less than 3 active tblptr bytes
  5258  000B52                     	endif
  5259  000B52  0009               	tblrd		*+
  5260  000B54  CFF5 F079          	movff	tablat,___flmul@a
  5261  000B58  0009               	tblrd		*+
  5262  000B5A  CFF5 F07A          	movff	tablat,___flmul@a+1
  5263  000B5E  0009               	tblrd		*+
  5264  000B60  CFF5 F07B          	movff	tablat,___flmul@a+2
  5265  000B64  000A               	tblrd		*-
  5266  000B66  CFF5 F07C          	movff	tablat,___flmul@a+3
  5267  000B6A  EC53  F009         	call	___flmul	;wreg free
  5268  000B6E  D794               	goto	L5
  5269  000B70                     l5045:
  5270                           
  5271                           ;doprnt.c: 434: return _npowers_[scl];
  5272  000B70  0100               	movlb	0	; () banked
  5273  000B72  5196               	movf	scale@scl& (0+255),w,b
  5274  000B74  0D04               	mullw	4
  5275  000B76  0EEB               	movlw	low __npowers_
  5276  000B78  24F3               	addwf	prodl,w,c
  5277  000B7A  6EF6               	movwf	tblptrl,c
  5278  000B7C  0E3E               	movlw	high __npowers_
  5279  000B7E  20F4               	addwfc	prodh,w,c
  5280  000B80  6EF7               	movwf	tblptrh,c
  5281  000B82                     	if	0	;There are less than 3 active tblptr bytes
  5282  000B82                     	endif
  5283  000B82  0009               	tblrd		*+
  5284  000B84  CFF5 F08E          	movff	tablat,?_scale
  5285  000B88  0009               	tblrd		*+
  5286  000B8A  CFF5 F08F          	movff	tablat,?_scale+1
  5287  000B8E  0009               	tblrd		*+
  5288  000B90  CFF5 F090          	movff	tablat,?_scale+2
  5289  000B94  000A               	tblrd		*-
  5290  000B96  CFF5 F091          	movff	tablat,?_scale+3
  5291                           
  5292                           ; BSR set to: 0
  5293  000B9A  0012               	return	
  5294  000B9C                     l5049:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;doprnt.c: 435: }
  5298                           ;doprnt.c: 436: if(scl>=110)
  5299  000B9C  0100               	movlb	0	; () banked
  5300  000B9E  5196               	movf	scale@scl& (0+255),w,b
  5301  000BA0  0A80               	xorlw	128
  5302  000BA2  0F12               	addlw	-238
  5303  000BA4  A0D8               	btfss	status,0,c
  5304  000BA6  D0B2               	goto	l5057
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5308  000BA8  0E00               	movlw	0
  5309  000BAA  0100               	movlb	0	; () banked
  5310  000BAC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5311  000BAE  0E0A               	movlw	10
  5312  000BB0  6F68               	movwf	___awdiv@divisor& (0+255),b
  5313  000BB2  0E00               	movlw	0
  5314  000BB4  0100               	movlb	0	; () banked
  5315  000BB6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5316  000BB8  0E64               	movlw	100
  5317  000BBA  6F62               	movwf	___awmod@divisor& (0+255),b
  5318  000BBC  0100               	movlb	0	; () banked
  5319  000BBE  5196               	movf	scale@scl& (0+255),w,b
  5320  000BC0  0100               	movlb	0	; () banked
  5321  000BC2  6F60               	movwf	___awmod@dividend& (0+255),b
  5322  000BC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5323  000BC6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5324  000BC8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5325  000BCA  ECCD  F016         	call	___awmod	;wreg free
  5326  000BCE  C060  F066         	movff	?___awmod,___awdiv@dividend
  5327  000BD2  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5328  000BD6  ECBC  F015         	call	___awdiv	;wreg free
  5329  000BDA  0100               	movlb	0	; () banked
  5330  000BDC  90D8               	bcf	status,0,c
  5331  000BDE  3766               	rlcf	?___awdiv& (0+255),f,b
  5332  000BE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5333  000BE2  0100               	movlb	0	; () banked
  5334  000BE4  90D8               	bcf	status,0,c
  5335  000BE6  3766               	rlcf	?___awdiv& (0+255),f,b
  5336  000BE8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5337  000BEA  0E24               	movlw	36
  5338  000BEC  0100               	movlb	0	; () banked
  5339  000BEE  2766               	addwf	?___awdiv& (0+255),f,b
  5340  000BF0  0E00               	movlw	0
  5341  000BF2  0100               	movlb	0	; () banked
  5342  000BF4  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5343  000BF6  0E1F               	movlw	low __powers_
  5344  000BF8  0100               	movlb	0	; () banked
  5345  000BFA  2566               	addwf	?___awdiv& (0+255),w,b
  5346  000BFC  6EF6               	movwf	tblptrl,c
  5347  000BFE  0E3F               	movlw	high __powers_
  5348  000C00  0100               	movlb	0	; () banked
  5349  000C02  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5350  000C04  6EF7               	movwf	tblptrh,c
  5351  000C06                     	if	0	;There are less than 3 active tblptr bytes
  5352  000C06                     	endif
  5353  000C06  0009               	tblrd		*+
  5354  000C08  CFF5 F079          	movff	tablat,___flmul@a
  5355  000C0C  0009               	tblrd		*+
  5356  000C0E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5357  000C12  0009               	tblrd		*+
  5358  000C14  CFF5 F07B          	movff	tablat,___flmul@a+2
  5359  000C18  000A               	tblrd		*-
  5360  000C1A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5361  000C1E  0E00               	movlw	0
  5362  000C20  0100               	movlb	0	; () banked
  5363  000C22  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5364  000C24  0E64               	movlw	100
  5365  000C26  6F68               	movwf	___awdiv@divisor& (0+255),b
  5366  000C28  0100               	movlb	0	; () banked
  5367  000C2A  5196               	movf	scale@scl& (0+255),w,b
  5368  000C2C  0100               	movlb	0	; () banked
  5369  000C2E  6F66               	movwf	___awdiv@dividend& (0+255),b
  5370  000C30  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5371  000C32  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5372  000C34  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5373  000C36  ECBC  F015         	call	___awdiv	;wreg free
  5374  000C3A  0100               	movlb	0	; () banked
  5375  000C3C  90D8               	bcf	status,0,c
  5376  000C3E  3766               	rlcf	?___awdiv& (0+255),f,b
  5377  000C40  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5378  000C42  0100               	movlb	0	; () banked
  5379  000C44  90D8               	bcf	status,0,c
  5380  000C46  3766               	rlcf	?___awdiv& (0+255),f,b
  5381  000C48  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5382  000C4A  0E48               	movlw	72
  5383  000C4C  0100               	movlb	0	; () banked
  5384  000C4E  2766               	addwf	?___awdiv& (0+255),f,b
  5385  000C50  0E00               	movlw	0
  5386  000C52  0100               	movlb	0	; () banked
  5387  000C54  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5388  000C56  0E1F               	movlw	low __powers_
  5389  000C58  0100               	movlb	0	; () banked
  5390  000C5A  2566               	addwf	?___awdiv& (0+255),w,b
  5391  000C5C  6EF6               	movwf	tblptrl,c
  5392  000C5E  0E3F               	movlw	high __powers_
  5393  000C60  0100               	movlb	0	; () banked
  5394  000C62  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5395  000C64  6EF7               	movwf	tblptrh,c
  5396  000C66                     	if	0	;There are less than 3 active tblptr bytes
  5397  000C66                     	endif
  5398  000C66  0009               	tblrd		*+
  5399  000C68  CFF5 F075          	movff	tablat,___flmul@b
  5400  000C6C  0009               	tblrd		*+
  5401  000C6E  CFF5 F076          	movff	tablat,___flmul@b+1
  5402  000C72  0009               	tblrd		*+
  5403  000C74  CFF5 F077          	movff	tablat,___flmul@b+2
  5404  000C78  000A               	tblrd		*-
  5405  000C7A  CFF5 F078          	movff	tablat,___flmul@b+3
  5406  000C7E  EC53  F009         	call	___flmul	;wreg free
  5407  000C82  C075  F092         	movff	?___flmul,_scale$2399
  5408  000C86  C076  F093         	movff	?___flmul+1,_scale$2399+1
  5409  000C8A  C077  F094         	movff	?___flmul+2,_scale$2399+2
  5410  000C8E  C078  F095         	movff	?___flmul+3,_scale$2399+3
  5411                           
  5412                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5413  000C92  C092  F075         	movff	_scale$2399,___flmul@b
  5414  000C96  C093  F076         	movff	_scale$2399+1,___flmul@b+1
  5415  000C9A  C094  F077         	movff	_scale$2399+2,___flmul@b+2
  5416  000C9E  C095  F078         	movff	_scale$2399+3,___flmul@b+3
  5417  000CA2  0E00               	movlw	0
  5418  000CA4  0100               	movlb	0	; () banked
  5419  000CA6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5420  000CA8  0E0A               	movlw	10
  5421  000CAA  6F62               	movwf	___awmod@divisor& (0+255),b
  5422  000CAC  0100               	movlb	0	; () banked
  5423  000CAE  5196               	movf	scale@scl& (0+255),w,b
  5424  000CB0  0100               	movlb	0	; () banked
  5425  000CB2  6F60               	movwf	___awmod@dividend& (0+255),b
  5426  000CB4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5427  000CB6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5428  000CB8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5429  000CBA  ECCD  F016         	call	___awmod	;wreg free
  5430  000CBE  0100               	movlb	0	; () banked
  5431  000CC0  90D8               	bcf	status,0,c
  5432  000CC2  3760               	rlcf	?___awmod& (0+255),f,b
  5433  000CC4  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5434  000CC6  0100               	movlb	0	; () banked
  5435  000CC8  90D8               	bcf	status,0,c
  5436  000CCA  3760               	rlcf	?___awmod& (0+255),f,b
  5437  000CCC  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5438  000CCE  0E1F               	movlw	low __powers_
  5439  000CD0  0100               	movlb	0	; () banked
  5440  000CD2  2560               	addwf	?___awmod& (0+255),w,b
  5441  000CD4  6EF6               	movwf	tblptrl,c
  5442  000CD6  0E3F               	movlw	high __powers_
  5443  000CD8  0100               	movlb	0	; () banked
  5444  000CDA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5445  000CDC  6EF7               	movwf	tblptrh,c
  5446  000CDE                     	if	0	;There are less than 3 active tblptr bytes
  5447  000CDE                     	endif
  5448  000CDE  0009               	tblrd		*+
  5449  000CE0  CFF5 F079          	movff	tablat,___flmul@a
  5450  000CE4  0009               	tblrd		*+
  5451  000CE6  CFF5 F07A          	movff	tablat,___flmul@a+1
  5452  000CEA  0009               	tblrd		*+
  5453  000CEC  CFF5 F07B          	movff	tablat,___flmul@a+2
  5454  000CF0  000A               	tblrd		*-
  5455  000CF2  CFF5 F07C          	movff	tablat,___flmul@a+3
  5456  000CF6  EC53  F009         	call	___flmul	;wreg free
  5457  000CFA  C075  F08E         	movff	?___flmul,?_scale
  5458  000CFE  C076  F08F         	movff	?___flmul+1,?_scale+1
  5459  000D02  C077  F090         	movff	?___flmul+2,?_scale+2
  5460  000D06  C078  F091         	movff	?___flmul+3,?_scale+3
  5461  000D0A  0012               	return	
  5462  000D0C                     l5057:
  5463                           
  5464                           ;doprnt.c: 438: else if(scl > 10)
  5465  000D0C  0100               	movlb	0	; () banked
  5466  000D0E  5196               	movf	scale@scl& (0+255),w,b
  5467  000D10  0A80               	xorlw	128
  5468  000D12  0F75               	addlw	-139
  5469  000D14  A0D8               	btfss	status,0,c
  5470  000D16  D05D               	goto	l5063
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5474  000D18  0E00               	movlw	0
  5475  000D1A  0100               	movlb	0	; () banked
  5476  000D1C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5477  000D1E  0E0A               	movlw	10
  5478  000D20  6F68               	movwf	___awdiv@divisor& (0+255),b
  5479  000D22  0100               	movlb	0	; () banked
  5480  000D24  5196               	movf	scale@scl& (0+255),w,b
  5481  000D26  0100               	movlb	0	; () banked
  5482  000D28  6F66               	movwf	___awdiv@dividend& (0+255),b
  5483  000D2A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5484  000D2C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5485  000D2E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5486  000D30  ECBC  F015         	call	___awdiv	;wreg free
  5487  000D34  0100               	movlb	0	; () banked
  5488  000D36  90D8               	bcf	status,0,c
  5489  000D38  3766               	rlcf	?___awdiv& (0+255),f,b
  5490  000D3A  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5491  000D3C  0100               	movlb	0	; () banked
  5492  000D3E  90D8               	bcf	status,0,c
  5493  000D40  3766               	rlcf	?___awdiv& (0+255),f,b
  5494  000D42  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5495  000D44  0E24               	movlw	36
  5496  000D46  0100               	movlb	0	; () banked
  5497  000D48  2766               	addwf	?___awdiv& (0+255),f,b
  5498  000D4A  0E00               	movlw	0
  5499  000D4C  0100               	movlb	0	; () banked
  5500  000D4E  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5501  000D50  0E1F               	movlw	low __powers_
  5502  000D52  0100               	movlb	0	; () banked
  5503  000D54  2566               	addwf	?___awdiv& (0+255),w,b
  5504  000D56  6EF6               	movwf	tblptrl,c
  5505  000D58  0E3F               	movlw	high __powers_
  5506  000D5A  0100               	movlb	0	; () banked
  5507  000D5C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5508  000D5E  6EF7               	movwf	tblptrh,c
  5509  000D60                     	if	0	;There are less than 3 active tblptr bytes
  5510  000D60                     	endif
  5511  000D60  0009               	tblrd		*+
  5512  000D62  CFF5 F075          	movff	tablat,___flmul@b
  5513  000D66  0009               	tblrd		*+
  5514  000D68  CFF5 F076          	movff	tablat,___flmul@b+1
  5515  000D6C  0009               	tblrd		*+
  5516  000D6E  CFF5 F077          	movff	tablat,___flmul@b+2
  5517  000D72  000A               	tblrd		*-
  5518  000D74  CFF5 F078          	movff	tablat,___flmul@b+3
  5519  000D78  0E00               	movlw	0
  5520  000D7A  0100               	movlb	0	; () banked
  5521  000D7C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5522  000D7E  0E0A               	movlw	10
  5523  000D80  6F62               	movwf	___awmod@divisor& (0+255),b
  5524  000D82  0100               	movlb	0	; () banked
  5525  000D84  5196               	movf	scale@scl& (0+255),w,b
  5526  000D86  0100               	movlb	0	; () banked
  5527  000D88  6F60               	movwf	___awmod@dividend& (0+255),b
  5528  000D8A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5529  000D8C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5530  000D8E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5531  000D90  ECCD  F016         	call	___awmod	;wreg free
  5532  000D94  0100               	movlb	0	; () banked
  5533  000D96  90D8               	bcf	status,0,c
  5534  000D98  3760               	rlcf	?___awmod& (0+255),f,b
  5535  000D9A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5536  000D9C  0100               	movlb	0	; () banked
  5537  000D9E  90D8               	bcf	status,0,c
  5538  000DA0  3760               	rlcf	?___awmod& (0+255),f,b
  5539  000DA2  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5540  000DA4  0E1F               	movlw	low __powers_
  5541  000DA6  0100               	movlb	0	; () banked
  5542  000DA8  2560               	addwf	?___awmod& (0+255),w,b
  5543  000DAA  6EF6               	movwf	tblptrl,c
  5544  000DAC  0E3F               	movlw	high __powers_
  5545  000DAE  0100               	movlb	0	; () banked
  5546  000DB0  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5547  000DB2  6EF7               	movwf	tblptrh,c
  5548  000DB4                     	if	0	;There are less than 3 active tblptr bytes
  5549  000DB4                     	endif
  5550  000DB4  0009               	tblrd		*+
  5551  000DB6  CFF5 F079          	movff	tablat,___flmul@a
  5552  000DBA  0009               	tblrd		*+
  5553  000DBC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5554  000DC0  0009               	tblrd		*+
  5555  000DC2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5556  000DC6  000A               	tblrd		*-
  5557  000DC8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5558  000DCC  EC53  F009         	call	___flmul	;wreg free
  5559  000DD0  D794               	goto	L6
  5560  000DD2                     l5063:
  5561                           
  5562                           ;doprnt.c: 440: return _powers_[scl];
  5563  000DD2  0100               	movlb	0	; () banked
  5564  000DD4  5196               	movf	scale@scl& (0+255),w,b
  5565  000DD6  0D04               	mullw	4
  5566  000DD8  0E1F               	movlw	low __powers_
  5567  000DDA  24F3               	addwf	prodl,w,c
  5568  000DDC  6EF6               	movwf	tblptrl,c
  5569  000DDE  0E3F               	movlw	high __powers_
  5570  000DE0  20F4               	addwfc	prodh,w,c
  5571  000DE2  6EF7               	movwf	tblptrh,c
  5572  000DE4                     	if	0	;There are less than 3 active tblptr bytes
  5573  000DE4                     	endif
  5574  000DE4  0009               	tblrd		*+
  5575  000DE6  CFF5 F08E          	movff	tablat,?_scale
  5576  000DEA  0009               	tblrd		*+
  5577  000DEC  CFF5 F08F          	movff	tablat,?_scale+1
  5578  000DF0  0009               	tblrd		*+
  5579  000DF2  CFF5 F090          	movff	tablat,?_scale+2
  5580  000DF6  000A               	tblrd		*-
  5581  000DF8  CFF5 F091          	movff	tablat,?_scale+3
  5582  000DFC  0012               	return	
  5583  000DFE                     __end_of_scale:
  5584                           	opt stack 0
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           postinc0	equ	0xFEE
  5593                           wreg	equ	0xFE8
  5594                           indf1	equ	0xFE7
  5595                           postinc1	equ	0xFE6
  5596                           fsr1h	equ	0xFE2
  5597                           fsr1l	equ	0xFE1
  5598                           indf2	equ	0xFDF
  5599                           postinc2	equ	0xFDE
  5600                           fsr2h	equ	0xFDA
  5601                           fsr2l	equ	0xFD9
  5602                           status	equ	0xFD8
  5603                           
  5604 ;; *************** function _isdigit *****************
  5605 ;; Defined at:
  5606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  c               1    wreg     unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  c               1    2[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5620 ;;      Params:         0       0       0       0
  5621 ;;      Locals:         0       2       0       0
  5622 ;;      Temps:          0       1       0       0
  5623 ;;      Totals:         0       3       0       0
  5624 ;;Total ram usage:        3 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    3
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_sprintf
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text16
  5635  0033DA                     __ptext16:
  5636                           	opt stack 0
  5637  0033DA                     _isdigit:
  5638                           	opt stack 25
  5639                           
  5640                           ;incstack = 0
  5641                           ;isdigit@c stored from wreg
  5642  0033DA  0100               	movlb	0	; () banked
  5643  0033DC  6F62               	movwf	isdigit@c& (0+255),b
  5644  0033DE  0E00               	movlw	0
  5645  0033E0  0100               	movlb	0	; () banked
  5646  0033E2  6F61               	movwf	_isdigit$2006& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649  0033E4  0E3A               	movlw	58
  5650  0033E6  0100               	movlb	0	; () banked
  5651  0033E8  6162               	cpfslt	isdigit@c& (0+255),b
  5652  0033EA  D007               	goto	l5075
  5653                           
  5654                           ; BSR set to: 0
  5655  0033EC  0E2F               	movlw	47
  5656  0033EE  0100               	movlb	0	; () banked
  5657  0033F0  6562               	cpfsgt	isdigit@c& (0+255),b
  5658  0033F2  D003               	goto	l5075
  5659                           
  5660                           ; BSR set to: 0
  5661  0033F4  0E01               	movlw	1
  5662  0033F6  0100               	movlb	0	; () banked
  5663  0033F8  6F61               	movwf	_isdigit$2006& (0+255),b
  5664  0033FA                     l5075:
  5665                           
  5666                           ; BSR set to: 0
  5667  0033FA  C061  F060         	movff	_isdigit$2006,??_isdigit
  5668  0033FE  0100               	movlb	0	; () banked
  5669  003400  3160               	rrcf	??_isdigit& (0+255),w,b
  5670  003402  0012               	return	
  5671  003404                     __end_of_isdigit:
  5672                           	opt stack 0
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           indf1	equ	0xFE7
  5683                           postinc1	equ	0xFE6
  5684                           fsr1h	equ	0xFE2
  5685                           fsr1l	equ	0xFE1
  5686                           indf2	equ	0xFDF
  5687                           postinc2	equ	0xFDE
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _fround *****************
  5693 ;; Defined at:
  5694 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  prec            1    wreg     unsigned char 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  prec            1   58[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  4   46[BANK0 ] unsigned char 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5708 ;;      Params:         0       4       0       0
  5709 ;;      Locals:         0       9       0       0
  5710 ;;      Temps:          0       0       0       0
  5711 ;;      Totals:         0      13       0       0
  5712 ;;Total ram usage:       13 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		___awdiv
  5717 ;;		___awmod
  5718 ;;		___flmul
  5719 ;; This function is called by:
  5720 ;;		_sprintf
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text17
  5725  001B46                     __ptext17:
  5726                           	opt stack 0
  5727  001B46                     _fround:
  5728                           	opt stack 24
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;incstack = 0
  5732                           ;fround@prec stored from wreg
  5733  001B46  0100               	movlb	0	; () banked
  5734  001B48  6F9A               	movwf	fround@prec& (0+255),b
  5735                           
  5736                           ;doprnt.c: 413: if(prec>=110)
  5737  001B4A  0E6D               	movlw	109
  5738  001B4C  0100               	movlb	0	; () banked
  5739  001B4E  659A               	cpfsgt	fround@prec& (0+255),b
  5740  001B50  D0C4               	goto	l5017
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5744  001B52  0E00               	movlw	0
  5745  001B54  0100               	movlb	0	; () banked
  5746  001B56  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5747  001B58  0E0A               	movlw	10
  5748  001B5A  6F68               	movwf	___awdiv@divisor& (0+255),b
  5749  001B5C  0E00               	movlw	0
  5750  001B5E  0100               	movlb	0	; () banked
  5751  001B60  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5752  001B62  0E64               	movlw	100
  5753  001B64  6F62               	movwf	___awmod@divisor& (0+255),b
  5754  001B66  C09A  F060         	movff	fround@prec,___awmod@dividend
  5755  001B6A  0100               	movlb	0	; () banked
  5756  001B6C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5757  001B6E  ECCD  F016         	call	___awmod	;wreg free
  5758  001B72  C060  F066         	movff	?___awmod,___awdiv@dividend
  5759  001B76  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5760  001B7A  ECBC  F015         	call	___awdiv	;wreg free
  5761  001B7E  0100               	movlb	0	; () banked
  5762  001B80  90D8               	bcf	status,0,c
  5763  001B82  3766               	rlcf	?___awdiv& (0+255),f,b
  5764  001B84  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5765  001B86  0100               	movlb	0	; () banked
  5766  001B88  90D8               	bcf	status,0,c
  5767  001B8A  3766               	rlcf	?___awdiv& (0+255),f,b
  5768  001B8C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5769  001B8E  0E24               	movlw	36
  5770  001B90  0100               	movlb	0	; () banked
  5771  001B92  2766               	addwf	?___awdiv& (0+255),f,b
  5772  001B94  0E00               	movlw	0
  5773  001B96  0100               	movlb	0	; () banked
  5774  001B98  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5775  001B9A  0EEB               	movlw	low __npowers_
  5776  001B9C  0100               	movlb	0	; () banked
  5777  001B9E  2566               	addwf	?___awdiv& (0+255),w,b
  5778  001BA0  6EF6               	movwf	tblptrl,c
  5779  001BA2  0E3E               	movlw	high __npowers_
  5780  001BA4  0100               	movlb	0	; () banked
  5781  001BA6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5782  001BA8  6EF7               	movwf	tblptrh,c
  5783  001BAA                     	if	0	;There are less than 3 active tblptr bytes
  5784  001BAA                     	endif
  5785  001BAA  0009               	tblrd		*+
  5786  001BAC  CFF5 F079          	movff	tablat,___flmul@a
  5787  001BB0  0009               	tblrd		*+
  5788  001BB2  CFF5 F07A          	movff	tablat,___flmul@a+1
  5789  001BB6  0009               	tblrd		*+
  5790  001BB8  CFF5 F07B          	movff	tablat,___flmul@a+2
  5791  001BBC  000A               	tblrd		*-
  5792  001BBE  CFF5 F07C          	movff	tablat,___flmul@a+3
  5793  001BC2  0E00               	movlw	0
  5794  001BC4  0100               	movlb	0	; () banked
  5795  001BC6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5796  001BC8  0E64               	movlw	100
  5797  001BCA  6F68               	movwf	___awdiv@divisor& (0+255),b
  5798  001BCC  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5799  001BD0  0100               	movlb	0	; () banked
  5800  001BD2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5801  001BD4  ECBC  F015         	call	___awdiv	;wreg free
  5802  001BD8  0100               	movlb	0	; () banked
  5803  001BDA  90D8               	bcf	status,0,c
  5804  001BDC  3766               	rlcf	?___awdiv& (0+255),f,b
  5805  001BDE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5806  001BE0  0100               	movlb	0	; () banked
  5807  001BE2  90D8               	bcf	status,0,c
  5808  001BE4  3766               	rlcf	?___awdiv& (0+255),f,b
  5809  001BE6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5810  001BE8  0E48               	movlw	72
  5811  001BEA  0100               	movlb	0	; () banked
  5812  001BEC  2766               	addwf	?___awdiv& (0+255),f,b
  5813  001BEE  0E00               	movlw	0
  5814  001BF0  0100               	movlb	0	; () banked
  5815  001BF2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5816  001BF4  0EEB               	movlw	low __npowers_
  5817  001BF6  0100               	movlb	0	; () banked
  5818  001BF8  2566               	addwf	?___awdiv& (0+255),w,b
  5819  001BFA  6EF6               	movwf	tblptrl,c
  5820  001BFC  0E3E               	movlw	high __npowers_
  5821  001BFE  0100               	movlb	0	; () banked
  5822  001C00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5823  001C02  6EF7               	movwf	tblptrh,c
  5824  001C04                     	if	0	;There are less than 3 active tblptr bytes
  5825  001C04                     	endif
  5826  001C04  0009               	tblrd		*+
  5827  001C06  CFF5 F075          	movff	tablat,___flmul@b
  5828  001C0A  0009               	tblrd		*+
  5829  001C0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5830  001C10  0009               	tblrd		*+
  5831  001C12  CFF5 F077          	movff	tablat,___flmul@b+2
  5832  001C16  000A               	tblrd		*-
  5833  001C18  CFF5 F078          	movff	tablat,___flmul@b+3
  5834  001C1C  EC53  F009         	call	___flmul	;wreg free
  5835  001C20  C075  F096         	movff	?___flmul,_fround$2397
  5836  001C24  C076  F097         	movff	?___flmul+1,_fround$2397+1
  5837  001C28  C077  F098         	movff	?___flmul+2,_fround$2397+2
  5838  001C2C  C078  F099         	movff	?___flmul+3,_fround$2397+3
  5839                           
  5840                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5841  001C30  0E00               	movlw	0
  5842  001C32  0100               	movlb	0	; () banked
  5843  001C34  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5844  001C36  0E0A               	movlw	10
  5845  001C38  6F62               	movwf	___awmod@divisor& (0+255),b
  5846  001C3A  C09A  F060         	movff	fround@prec,___awmod@dividend
  5847  001C3E  0100               	movlb	0	; () banked
  5848  001C40  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5849  001C42  ECCD  F016         	call	___awmod	;wreg free
  5850  001C46  0100               	movlb	0	; () banked
  5851  001C48  90D8               	bcf	status,0,c
  5852  001C4A  3760               	rlcf	?___awmod& (0+255),f,b
  5853  001C4C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5854  001C4E  0100               	movlb	0	; () banked
  5855  001C50  90D8               	bcf	status,0,c
  5856  001C52  3760               	rlcf	?___awmod& (0+255),f,b
  5857  001C54  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5858  001C56  0EEB               	movlw	low __npowers_
  5859  001C58  0100               	movlb	0	; () banked
  5860  001C5A  2560               	addwf	?___awmod& (0+255),w,b
  5861  001C5C  6EF6               	movwf	tblptrl,c
  5862  001C5E  0E3E               	movlw	high __npowers_
  5863  001C60  0100               	movlb	0	; () banked
  5864  001C62  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5865  001C64  6EF7               	movwf	tblptrh,c
  5866  001C66                     	if	0	;There are less than 3 active tblptr bytes
  5867  001C66                     	endif
  5868  001C66  0009               	tblrd		*+
  5869  001C68  CFF5 F079          	movff	tablat,___flmul@a
  5870  001C6C  0009               	tblrd		*+
  5871  001C6E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5872  001C72  0009               	tblrd		*+
  5873  001C74  CFF5 F07B          	movff	tablat,___flmul@a+2
  5874  001C78  000A               	tblrd		*-
  5875  001C7A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5876  001C7E  C096  F075         	movff	_fround$2397,___flmul@b
  5877  001C82  C097  F076         	movff	_fround$2397+1,___flmul@b+1
  5878  001C86  C098  F077         	movff	_fround$2397+2,___flmul@b+2
  5879  001C8A  C099  F078         	movff	_fround$2397+3,___flmul@b+3
  5880  001C8E  EC53  F009         	call	___flmul	;wreg free
  5881  001C92  C075  F092         	movff	?___flmul,_fround$2398
  5882  001C96  C076  F093         	movff	?___flmul+1,_fround$2398+1
  5883  001C9A  C077  F094         	movff	?___flmul+2,_fround$2398+2
  5884  001C9E  C078  F095         	movff	?___flmul+3,_fround$2398+3
  5885                           
  5886                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5887  001CA2  C092  F075         	movff	_fround$2398,___flmul@b
  5888  001CA6  C093  F076         	movff	_fround$2398+1,___flmul@b+1
  5889  001CAA  C094  F077         	movff	_fround$2398+2,___flmul@b+2
  5890  001CAE  C095  F078         	movff	_fround$2398+3,___flmul@b+3
  5891  001CB2  0E00               	movlw	0
  5892  001CB4  0100               	movlb	0	; () banked
  5893  001CB6  6F79               	movwf	___flmul@a& (0+255),b
  5894  001CB8  0E00               	movlw	0
  5895  001CBA  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5896  001CBC  0E00               	movlw	0
  5897  001CBE  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5898  001CC0  0E3F               	movlw	63
  5899  001CC2  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5900  001CC4  EC53  F009         	call	___flmul	;wreg free
  5901  001CC8  C075  F08E         	movff	?___flmul,?_fround
  5902  001CCC  C076  F08F         	movff	?___flmul+1,?_fround+1
  5903  001CD0  C077  F090         	movff	?___flmul+2,?_fround+2
  5904  001CD4  C078  F091         	movff	?___flmul+3,?_fround+3
  5905  001CD8  0012               	return	
  5906  001CDA                     l5017:
  5907                           
  5908                           ;doprnt.c: 415: else if(prec > 10)
  5909  001CDA  0E0A               	movlw	10
  5910  001CDC  0100               	movlb	0	; () banked
  5911  001CDE  659A               	cpfsgt	fround@prec& (0+255),b
  5912  001CE0  D072               	goto	l5025
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5916  001CE2  0E00               	movlw	0
  5917  001CE4  0100               	movlb	0	; () banked
  5918  001CE6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5919  001CE8  0E0A               	movlw	10
  5920  001CEA  6F62               	movwf	___awmod@divisor& (0+255),b
  5921  001CEC  C09A  F060         	movff	fround@prec,___awmod@dividend
  5922  001CF0  0100               	movlb	0	; () banked
  5923  001CF2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5924  001CF4  ECCD  F016         	call	___awmod	;wreg free
  5925  001CF8  0100               	movlb	0	; () banked
  5926  001CFA  90D8               	bcf	status,0,c
  5927  001CFC  3760               	rlcf	?___awmod& (0+255),f,b
  5928  001CFE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5929  001D00  0100               	movlb	0	; () banked
  5930  001D02  90D8               	bcf	status,0,c
  5931  001D04  3760               	rlcf	?___awmod& (0+255),f,b
  5932  001D06  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5933  001D08  0EEB               	movlw	low __npowers_
  5934  001D0A  0100               	movlb	0	; () banked
  5935  001D0C  2560               	addwf	?___awmod& (0+255),w,b
  5936  001D0E  6EF6               	movwf	tblptrl,c
  5937  001D10  0E3E               	movlw	high __npowers_
  5938  001D12  0100               	movlb	0	; () banked
  5939  001D14  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5940  001D16  6EF7               	movwf	tblptrh,c
  5941  001D18                     	if	0	;There are less than 3 active tblptr bytes
  5942  001D18                     	endif
  5943  001D18  0009               	tblrd		*+
  5944  001D1A  CFF5 F079          	movff	tablat,___flmul@a
  5945  001D1E  0009               	tblrd		*+
  5946  001D20  CFF5 F07A          	movff	tablat,___flmul@a+1
  5947  001D24  0009               	tblrd		*+
  5948  001D26  CFF5 F07B          	movff	tablat,___flmul@a+2
  5949  001D2A  000A               	tblrd		*-
  5950  001D2C  CFF5 F07C          	movff	tablat,___flmul@a+3
  5951  001D30  0E00               	movlw	0
  5952  001D32  0100               	movlb	0	; () banked
  5953  001D34  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5954  001D36  0E0A               	movlw	10
  5955  001D38  6F68               	movwf	___awdiv@divisor& (0+255),b
  5956  001D3A  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5957  001D3E  0100               	movlb	0	; () banked
  5958  001D40  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5959  001D42  ECBC  F015         	call	___awdiv	;wreg free
  5960  001D46  0100               	movlb	0	; () banked
  5961  001D48  90D8               	bcf	status,0,c
  5962  001D4A  3766               	rlcf	?___awdiv& (0+255),f,b
  5963  001D4C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5964  001D4E  0100               	movlb	0	; () banked
  5965  001D50  90D8               	bcf	status,0,c
  5966  001D52  3766               	rlcf	?___awdiv& (0+255),f,b
  5967  001D54  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5968  001D56  0E24               	movlw	36
  5969  001D58  0100               	movlb	0	; () banked
  5970  001D5A  2766               	addwf	?___awdiv& (0+255),f,b
  5971  001D5C  0E00               	movlw	0
  5972  001D5E  0100               	movlb	0	; () banked
  5973  001D60  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5974  001D62  0EEB               	movlw	low __npowers_
  5975  001D64  0100               	movlb	0	; () banked
  5976  001D66  2566               	addwf	?___awdiv& (0+255),w,b
  5977  001D68  6EF6               	movwf	tblptrl,c
  5978  001D6A  0E3E               	movlw	high __npowers_
  5979  001D6C  0100               	movlb	0	; () banked
  5980  001D6E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5981  001D70  6EF7               	movwf	tblptrh,c
  5982  001D72                     	if	0	;There are less than 3 active tblptr bytes
  5983  001D72                     	endif
  5984  001D72  0009               	tblrd		*+
  5985  001D74  CFF5 F075          	movff	tablat,___flmul@b
  5986  001D78  0009               	tblrd		*+
  5987  001D7A  CFF5 F076          	movff	tablat,___flmul@b+1
  5988  001D7E  0009               	tblrd		*+
  5989  001D80  CFF5 F077          	movff	tablat,___flmul@b+2
  5990  001D84  000A               	tblrd		*-
  5991  001D86  CFF5 F078          	movff	tablat,___flmul@b+3
  5992  001D8A  EC53  F009         	call	___flmul	;wreg free
  5993  001D8E  C075  F096         	movff	?___flmul,_fround$2397
  5994  001D92  C076  F097         	movff	?___flmul+1,_fround$2397+1
  5995  001D96  C077  F098         	movff	?___flmul+2,_fround$2397+2
  5996  001D9A  C078  F099         	movff	?___flmul+3,_fround$2397+3
  5997                           
  5998                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5999  001D9E  C096  F075         	movff	_fround$2397,___flmul@b
  6000  001DA2  C097  F076         	movff	_fround$2397+1,___flmul@b+1
  6001  001DA6  C098  F077         	movff	_fround$2397+2,___flmul@b+2
  6002  001DAA  C099  F078         	movff	_fround$2397+3,___flmul@b+3
  6003  001DAE  0E00               	movlw	0
  6004  001DB0  0100               	movlb	0	; () banked
  6005  001DB2  6F79               	movwf	___flmul@a& (0+255),b
  6006  001DB4  0E00               	movlw	0
  6007  001DB6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6008  001DB8  0E00               	movlw	0
  6009  001DBA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6010  001DBC  0E3F               	movlw	63
  6011  001DBE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6012  001DC0  EC53  F009         	call	___flmul	;wreg free
  6013  001DC4  D781               	goto	L7
  6014  001DC6                     l5025:
  6015                           
  6016                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6017  001DC6  0100               	movlb	0	; () banked
  6018  001DC8  519A               	movf	fround@prec& (0+255),w,b
  6019  001DCA  0D04               	mullw	4
  6020  001DCC  0EEB               	movlw	low __npowers_
  6021  001DCE  24F3               	addwf	prodl,w,c
  6022  001DD0  6EF6               	movwf	tblptrl,c
  6023  001DD2  0E3E               	movlw	high __npowers_
  6024  001DD4  20F4               	addwfc	prodh,w,c
  6025  001DD6  6EF7               	movwf	tblptrh,c
  6026  001DD8                     	if	0	;There are less than 3 active tblptr bytes
  6027  001DD8                     	endif
  6028  001DD8  0009               	tblrd		*+
  6029  001DDA  CFF5 F075          	movff	tablat,___flmul@b
  6030  001DDE  0009               	tblrd		*+
  6031  001DE0  CFF5 F076          	movff	tablat,___flmul@b+1
  6032  001DE4  0009               	tblrd		*+
  6033  001DE6  CFF5 F077          	movff	tablat,___flmul@b+2
  6034  001DEA  000A               	tblrd		*-
  6035  001DEC  CFF5 F078          	movff	tablat,___flmul@b+3
  6036  001DF0  0E00               	movlw	0
  6037  001DF2  0100               	movlb	0	; () banked
  6038  001DF4  6F79               	movwf	___flmul@a& (0+255),b
  6039  001DF6  0E00               	movlw	0
  6040  001DF8  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6041  001DFA  0E00               	movlw	0
  6042  001DFC  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6043  001DFE  0E3F               	movlw	63
  6044  001E00  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6045  001E02  EC53  F009         	call	___flmul	;wreg free
  6046  001E06  C075  F08E         	movff	?___flmul,?_fround
  6047  001E0A  C076  F08F         	movff	?___flmul+1,?_fround+1
  6048  001E0E  C077  F090         	movff	?___flmul+2,?_fround+2
  6049  001E12  C078  F091         	movff	?___flmul+3,?_fround+3
  6050  001E16  0012               	return	
  6051  001E18                     __end_of_fround:
  6052                           	opt stack 0
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           prodh	equ	0xFF4
  6058                           prodl	equ	0xFF3
  6059                           intcon	equ	0xFF2
  6060                           postinc0	equ	0xFEE
  6061                           wreg	equ	0xFE8
  6062                           indf1	equ	0xFE7
  6063                           postinc1	equ	0xFE6
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function ___flmul *****************
  6073 ;; Defined at:
  6074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  b               4   21[BANK0 ] unsigned char 
  6077 ;;  a               4   25[BANK0 ] unsigned char 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  prod            4   40[BANK0 ] struct .
  6080 ;;  grs             4   35[BANK0 ] unsigned long 
  6081 ;;  temp            2   44[BANK0 ] struct .
  6082 ;;  bexp            1   39[BANK0 ] unsigned char 
  6083 ;;  aexp            1   34[BANK0 ] unsigned char 
  6084 ;;  sign            1   33[BANK0 ] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  4   21[BANK0 ] unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, prodl, prodh
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6094 ;;      Params:         0       8       0       0
  6095 ;;      Locals:         0      13       0       0
  6096 ;;      Temps:          0       4       0       0
  6097 ;;      Totals:         0      25       0       0
  6098 ;;Total ram usage:       25 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    3
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;;		_fround
  6106 ;;		_scale
  6107 ;;		_sprintf
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text18
  6112  0012A6                     __ptext18:
  6113                           	opt stack 0
  6114  0012A6                     ___flmul:
  6115                           	opt stack 27
  6116                           
  6117                           ;incstack = 0
  6118  0012A6  0100               	movlb	0	; () banked
  6119  0012A8  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6120  0012AA  0B80               	andlw	128
  6121  0012AC  0100               	movlb	0	; () banked
  6122  0012AE  6F81               	movwf	___flmul@sign& (0+255),b
  6123  0012B0  0100               	movlb	0	; () banked
  6124  0012B2  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6125  0012B4  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  6126  0012B6  0100               	movlb	0	; () banked
  6127  0012B8  6F87               	movwf	___flmul@bexp& (0+255),b
  6128                           
  6129                           ; BSR set to: 0
  6130  0012BA  0100               	movlb	0	; () banked
  6131  0012BC  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  6132  0012BE  D002               	goto	l4771
  6133                           
  6134                           ; BSR set to: 0
  6135  0012C0  0100               	movlb	0	; () banked
  6136  0012C2  8187               	bsf	___flmul@bexp& (0+255),0,b
  6137  0012C4                     l4771:
  6138                           
  6139                           ; BSR set to: 0
  6140  0012C4  0100               	movlb	0	; () banked
  6141  0012C6  5187               	movf	___flmul@bexp& (0+255),w,b
  6142  0012C8  0100               	movlb	0	; () banked
  6143  0012CA  B4D8               	btfsc	status,2,c
  6144  0012CC  D010               	goto	l4779
  6145                           
  6146                           ; BSR set to: 0
  6147  0012CE  0100               	movlb	0	; () banked
  6148  0012D0  2987               	incf	___flmul@bexp& (0+255),w,b
  6149  0012D2  A4D8               	btfss	status,2,c
  6150  0012D4  D009               	goto	l4777
  6151                           
  6152                           ; BSR set to: 0
  6153  0012D6  0E00               	movlw	0
  6154  0012D8  0100               	movlb	0	; () banked
  6155  0012DA  6F75               	movwf	___flmul@b& (0+255),b
  6156  0012DC  0E00               	movlw	0
  6157  0012DE  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6158  0012E0  0E00               	movlw	0
  6159  0012E2  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6160  0012E4  0E00               	movlw	0
  6161  0012E6  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6162  0012E8                     l4777:
  6163                           
  6164                           ; BSR set to: 0
  6165  0012E8  0100               	movlb	0	; () banked
  6166  0012EA  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  6167  0012EC  D009               	goto	l4781
  6168  0012EE                     l4779:
  6169                           
  6170                           ; BSR set to: 0
  6171  0012EE  0E00               	movlw	0
  6172  0012F0  0100               	movlb	0	; () banked
  6173  0012F2  6F75               	movwf	___flmul@b& (0+255),b
  6174  0012F4  0E00               	movlw	0
  6175  0012F6  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6176  0012F8  0E00               	movlw	0
  6177  0012FA  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6178  0012FC  0E00               	movlw	0
  6179  0012FE  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6180  001300                     l4781:
  6181                           
  6182                           ; BSR set to: 0
  6183  001300  0100               	movlb	0	; () banked
  6184  001302  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6185  001304  0B80               	andlw	128
  6186  001306  0100               	movlb	0	; () banked
  6187  001308  1B81               	xorwf	___flmul@sign& (0+255),f,b
  6188                           
  6189                           ; BSR set to: 0
  6190  00130A  0100               	movlb	0	; () banked
  6191  00130C  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6192  00130E  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  6193  001310  0100               	movlb	0	; () banked
  6194  001312  6F82               	movwf	___flmul@aexp& (0+255),b
  6195                           
  6196                           ; BSR set to: 0
  6197  001314  0100               	movlb	0	; () banked
  6198  001316  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  6199  001318  D002               	goto	l4789
  6200                           
  6201                           ; BSR set to: 0
  6202  00131A  0100               	movlb	0	; () banked
  6203  00131C  8182               	bsf	___flmul@aexp& (0+255),0,b
  6204  00131E                     l4789:
  6205                           
  6206                           ; BSR set to: 0
  6207  00131E  0100               	movlb	0	; () banked
  6208  001320  5182               	movf	___flmul@aexp& (0+255),w,b
  6209  001322  0100               	movlb	0	; () banked
  6210  001324  B4D8               	btfsc	status,2,c
  6211  001326  D010               	goto	l4797
  6212                           
  6213                           ; BSR set to: 0
  6214  001328  0100               	movlb	0	; () banked
  6215  00132A  2982               	incf	___flmul@aexp& (0+255),w,b
  6216  00132C  A4D8               	btfss	status,2,c
  6217  00132E  D009               	goto	l4795
  6218                           
  6219                           ; BSR set to: 0
  6220  001330  0E00               	movlw	0
  6221  001332  0100               	movlb	0	; () banked
  6222  001334  6F79               	movwf	___flmul@a& (0+255),b
  6223  001336  0E00               	movlw	0
  6224  001338  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6225  00133A  0E00               	movlw	0
  6226  00133C  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6227  00133E  0E00               	movlw	0
  6228  001340  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6229  001342                     l4795:
  6230                           
  6231                           ; BSR set to: 0
  6232  001342  0100               	movlb	0	; () banked
  6233  001344  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  6234  001346  D009               	goto	l1065
  6235  001348                     l4797:
  6236                           
  6237                           ; BSR set to: 0
  6238  001348  0E00               	movlw	0
  6239  00134A  0100               	movlb	0	; () banked
  6240  00134C  6F79               	movwf	___flmul@a& (0+255),b
  6241  00134E  0E00               	movlw	0
  6242  001350  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6243  001352  0E00               	movlw	0
  6244  001354  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6245  001356  0E00               	movlw	0
  6246  001358  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6247  00135A                     l1065:
  6248                           
  6249                           ; BSR set to: 0
  6250  00135A  0100               	movlb	0	; () banked
  6251  00135C  5182               	movf	___flmul@aexp& (0+255),w,b
  6252  00135E  0100               	movlb	0	; () banked
  6253  001360  B4D8               	btfsc	status,2,c
  6254  001362  D005               	goto	l4801
  6255                           
  6256                           ; BSR set to: 0
  6257  001364  0100               	movlb	0	; () banked
  6258  001366  5187               	movf	___flmul@bexp& (0+255),w,b
  6259  001368  0100               	movlb	0	; () banked
  6260  00136A  A4D8               	btfss	status,2,c
  6261  00136C  D00A               	goto	l4805
  6262  00136E                     l4801:
  6263                           
  6264                           ; BSR set to: 0
  6265  00136E  0E00               	movlw	0
  6266  001370  0100               	movlb	0	; () banked
  6267  001372  6F75               	movwf	?___flmul& (0+255),b
  6268  001374  0E00               	movlw	0
  6269  001376  6F76               	movwf	(?___flmul+1)& (0+255),b
  6270  001378  0E00               	movlw	0
  6271  00137A  6F77               	movwf	(?___flmul+2)& (0+255),b
  6272  00137C  0E00               	movlw	0
  6273  00137E  6F78               	movwf	(?___flmul+3)& (0+255),b
  6274                           
  6275                           ; BSR set to: 0
  6276  001380  0012               	return	
  6277  001382                     l4805:
  6278                           
  6279                           ; BSR set to: 0
  6280  001382  0100               	movlb	0	; () banked
  6281  001384  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6282  001386  0100               	movlb	0	; () banked
  6283  001388  0375               	mulwf	___flmul@b& (0+255),b
  6284  00138A  CFF3 F08C          	movff	prodl,___flmul@temp
  6285  00138E  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6286                           
  6287                           ; BSR set to: 0
  6288  001392  0100               	movlb	0	; () banked
  6289  001394  518C               	movf	___flmul@temp& (0+255),w,b
  6290  001396  0100               	movlb	0	; () banked
  6291  001398  6F83               	movwf	___flmul@grs& (0+255),b
  6292  00139A  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  6293  00139C  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  6294  00139E  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297  0013A0  0100               	movlb	0	; () banked
  6298  0013A2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6299  0013A4  0100               	movlb	0	; () banked
  6300  0013A6  6F88               	movwf	___flmul@prod& (0+255),b
  6301  0013A8  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  6302  0013AA  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  6303  0013AC  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  6304  0013AE  0100               	movlb	0	; () banked
  6305  0013B0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6306  0013B2  0100               	movlb	0	; () banked
  6307  0013B4  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6308  0013B6  CFF3 F08C          	movff	prodl,___flmul@temp
  6309  0013BA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6310                           
  6311                           ; BSR set to: 0
  6312  0013BE  0100               	movlb	0	; () banked
  6313  0013C0  518C               	movf	___flmul@temp& (0+255),w,b
  6314  0013C2  0100               	movlb	0	; () banked
  6315  0013C4  2783               	addwf	___flmul@grs& (0+255),f,b
  6316  0013C6  0E00               	movlw	0
  6317  0013C8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6318  0013CA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6319  0013CC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6320                           
  6321                           ; BSR set to: 0
  6322  0013CE  0100               	movlb	0	; () banked
  6323  0013D0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6324  0013D2  0100               	movlb	0	; () banked
  6325  0013D4  2788               	addwf	___flmul@prod& (0+255),f,b
  6326  0013D6  0E00               	movlw	0
  6327  0013D8  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6328  0013DA  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6329  0013DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6330  0013DE  0100               	movlb	0	; () banked
  6331  0013E0  5179               	movf	___flmul@a& (0+255),w,b
  6332  0013E2  0100               	movlb	0	; () banked
  6333  0013E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6334  0013E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6335  0013EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6336                           
  6337                           ; BSR set to: 0
  6338  0013EE  0100               	movlb	0	; () banked
  6339  0013F0  518C               	movf	___flmul@temp& (0+255),w,b
  6340  0013F2  0100               	movlb	0	; () banked
  6341  0013F4  2783               	addwf	___flmul@grs& (0+255),f,b
  6342  0013F6  0E00               	movlw	0
  6343  0013F8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6344  0013FA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6345  0013FC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6346                           
  6347                           ; BSR set to: 0
  6348  0013FE  0100               	movlb	0	; () banked
  6349  001400  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6350  001402  0100               	movlb	0	; () banked
  6351  001404  2788               	addwf	___flmul@prod& (0+255),f,b
  6352  001406  0E00               	movlw	0
  6353  001408  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6354  00140A  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6355  00140C  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6356                           
  6357                           ; BSR set to: 0
  6358  00140E  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6359  001412  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6360  001416  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6361  00141A  0100               	movlb	0	; () banked
  6362  00141C  6B83               	clrf	___flmul@grs& (0+255),b
  6363                           
  6364                           ; BSR set to: 0
  6365  00141E  0100               	movlb	0	; () banked
  6366  001420  5179               	movf	___flmul@a& (0+255),w,b
  6367  001422  0100               	movlb	0	; () banked
  6368  001424  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6369  001426  CFF3 F08C          	movff	prodl,___flmul@temp
  6370  00142A  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6371                           
  6372                           ; BSR set to: 0
  6373  00142E  0100               	movlb	0	; () banked
  6374  001430  518C               	movf	___flmul@temp& (0+255),w,b
  6375  001432  0100               	movlb	0	; () banked
  6376  001434  2783               	addwf	___flmul@grs& (0+255),f,b
  6377  001436  0100               	movlb	0	; () banked
  6378  001438  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6379  00143A  0100               	movlb	0	; () banked
  6380  00143C  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6381  00143E  0E00               	movlw	0
  6382  001440  0100               	movlb	0	; () banked
  6383  001442  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6384  001444  0E00               	movlw	0
  6385  001446  0100               	movlb	0	; () banked
  6386  001448  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6387                           
  6388                           ; BSR set to: 0
  6389  00144A  0100               	movlb	0	; () banked
  6390  00144C  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6391  00144E  0100               	movlb	0	; () banked
  6392  001450  0375               	mulwf	___flmul@b& (0+255),b
  6393  001452  CFF3 F08C          	movff	prodl,___flmul@temp
  6394  001456  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6395                           
  6396                           ; BSR set to: 0
  6397  00145A  0100               	movlb	0	; () banked
  6398  00145C  518C               	movf	___flmul@temp& (0+255),w,b
  6399  00145E  0100               	movlb	0	; () banked
  6400  001460  2783               	addwf	___flmul@grs& (0+255),f,b
  6401  001462  0100               	movlb	0	; () banked
  6402  001464  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6403  001466  0100               	movlb	0	; () banked
  6404  001468  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6405  00146A  0E00               	movlw	0
  6406  00146C  0100               	movlb	0	; () banked
  6407  00146E  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6408  001470  0E00               	movlw	0
  6409  001472  0100               	movlb	0	; () banked
  6410  001474  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6411                           
  6412                           ; BSR set to: 0
  6413  001476  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6414  00147A  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6415  00147E  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6416  001482  0100               	movlb	0	; () banked
  6417  001484  6B83               	clrf	___flmul@grs& (0+255),b
  6418  001486  0100               	movlb	0	; () banked
  6419  001488  5179               	movf	___flmul@a& (0+255),w,b
  6420  00148A  0100               	movlb	0	; () banked
  6421  00148C  0375               	mulwf	___flmul@b& (0+255),b
  6422  00148E  CFF3 F08C          	movff	prodl,___flmul@temp
  6423  001492  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6424                           
  6425                           ; BSR set to: 0
  6426  001496  0100               	movlb	0	; () banked
  6427  001498  518C               	movf	___flmul@temp& (0+255),w,b
  6428  00149A  0100               	movlb	0	; () banked
  6429  00149C  2783               	addwf	___flmul@grs& (0+255),f,b
  6430  00149E  0100               	movlb	0	; () banked
  6431  0014A0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6432  0014A2  0100               	movlb	0	; () banked
  6433  0014A4  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6434  0014A6  0E00               	movlw	0
  6435  0014A8  0100               	movlb	0	; () banked
  6436  0014AA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6437  0014AC  0E00               	movlw	0
  6438  0014AE  0100               	movlb	0	; () banked
  6439  0014B0  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6440                           
  6441                           ; BSR set to: 0
  6442  0014B2  0100               	movlb	0	; () banked
  6443  0014B4  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6444  0014B6  0100               	movlb	0	; () banked
  6445  0014B8  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6446  0014BA  CFF3 F08C          	movff	prodl,___flmul@temp
  6447  0014BE  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6448  0014C2  0100               	movlb	0	; () banked
  6449  0014C4  518C               	movf	___flmul@temp& (0+255),w,b
  6450  0014C6  0100               	movlb	0	; () banked
  6451  0014C8  2788               	addwf	___flmul@prod& (0+255),f,b
  6452  0014CA  0100               	movlb	0	; () banked
  6453  0014CC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6454  0014CE  0100               	movlb	0	; () banked
  6455  0014D0  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6456  0014D2  0E00               	movlw	0
  6457  0014D4  0100               	movlb	0	; () banked
  6458  0014D6  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6459  0014D8  0E00               	movlw	0
  6460  0014DA  0100               	movlb	0	; () banked
  6461  0014DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6462                           
  6463                           ; BSR set to: 0
  6464  0014DE  0100               	movlb	0	; () banked
  6465  0014E0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6466  0014E2  0100               	movlb	0	; () banked
  6467  0014E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6468  0014E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6469  0014EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6470                           
  6471                           ; BSR set to: 0
  6472  0014EE  0100               	movlb	0	; () banked
  6473  0014F0  518C               	movf	___flmul@temp& (0+255),w,b
  6474  0014F2  0100               	movlb	0	; () banked
  6475  0014F4  2788               	addwf	___flmul@prod& (0+255),f,b
  6476  0014F6  0100               	movlb	0	; () banked
  6477  0014F8  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6478  0014FA  0100               	movlb	0	; () banked
  6479  0014FC  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6480  0014FE  0E00               	movlw	0
  6481  001500  0100               	movlb	0	; () banked
  6482  001502  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6483  001504  0E00               	movlw	0
  6484  001506  0100               	movlb	0	; () banked
  6485  001508  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6486  00150A  0100               	movlb	0	; () banked
  6487  00150C  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6488  00150E  0100               	movlb	0	; () banked
  6489  001510  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6490  001512  CFF3 F08C          	movff	prodl,___flmul@temp
  6491  001516  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6492                           
  6493                           ; BSR set to: 0
  6494  00151A  0100               	movlb	0	; () banked
  6495  00151C  518C               	movf	___flmul@temp& (0+255),w,b
  6496  00151E  0100               	movlb	0	; () banked
  6497  001520  6F7D               	movwf	??___flmul& (0+255),b
  6498  001522  0100               	movlb	0	; () banked
  6499  001524  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6500  001526  0100               	movlb	0	; () banked
  6501  001528  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6502  00152A  0100               	movlb	0	; () banked
  6503  00152C  6B7F               	clrf	(??___flmul+2)& (0+255),b
  6504  00152E  0100               	movlb	0	; () banked
  6505  001530  6B80               	clrf	(??___flmul+3)& (0+255),b
  6506  001532  C07F  F080         	movff	??___flmul+2,??___flmul+3
  6507  001536  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  6508  00153A  C07D  F07E         	movff	??___flmul,??___flmul+1
  6509  00153E  0100               	movlb	0	; () banked
  6510  001540  6B7D               	clrf	??___flmul& (0+255),b
  6511  001542  0100               	movlb	0	; () banked
  6512  001544  517D               	movf	??___flmul& (0+255),w,b
  6513  001546  0100               	movlb	0	; () banked
  6514  001548  2788               	addwf	___flmul@prod& (0+255),f,b
  6515  00154A  0100               	movlb	0	; () banked
  6516  00154C  517E               	movf	(??___flmul+1)& (0+255),w,b
  6517  00154E  0100               	movlb	0	; () banked
  6518  001550  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6519  001552  0100               	movlb	0	; () banked
  6520  001554  517F               	movf	(??___flmul+2)& (0+255),w,b
  6521  001556  0100               	movlb	0	; () banked
  6522  001558  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6523  00155A  0100               	movlb	0	; () banked
  6524  00155C  5180               	movf	(??___flmul+3)& (0+255),w,b
  6525  00155E  0100               	movlb	0	; () banked
  6526  001560  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6527                           
  6528                           ; BSR set to: 0
  6529  001562  C083  F07D         	movff	___flmul@grs,??___flmul
  6530  001566  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  6531  00156A  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  6532  00156E  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  6533  001572  0E19               	movlw	25
  6534  001574  D006               	goto	u5570
  6535  001576                     u5575:
  6536  001576  0100               	movlb	0	; () banked
  6537  001578  90D8               	bcf	status,0,c
  6538  00157A  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6539  00157C  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6540  00157E  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6541  001580  337D               	rrcf	??___flmul& (0+255),f,b
  6542  001582                     u5570:
  6543  001582  2EE8               	decfsz	wreg,f,c
  6544  001584  D7F8               	goto	u5575
  6545  001586  0100               	movlb	0	; () banked
  6546  001588  517D               	movf	??___flmul& (0+255),w,b
  6547  00158A  0100               	movlb	0	; () banked
  6548  00158C  2788               	addwf	___flmul@prod& (0+255),f,b
  6549  00158E  0100               	movlb	0	; () banked
  6550  001590  517E               	movf	(??___flmul+1)& (0+255),w,b
  6551  001592  0100               	movlb	0	; () banked
  6552  001594  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6553  001596  0100               	movlb	0	; () banked
  6554  001598  517F               	movf	(??___flmul+2)& (0+255),w,b
  6555  00159A  0100               	movlb	0	; () banked
  6556  00159C  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6557  00159E  0100               	movlb	0	; () banked
  6558  0015A0  5180               	movf	(??___flmul+3)& (0+255),w,b
  6559  0015A2  0100               	movlb	0	; () banked
  6560  0015A4  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6561                           
  6562                           ; BSR set to: 0
  6563  0015A6  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6564  0015AA  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6565  0015AE  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6566  0015B2  0100               	movlb	0	; () banked
  6567  0015B4  6B83               	clrf	___flmul@grs& (0+255),b
  6568                           
  6569                           ; BSR set to: 0
  6570  0015B6  0100               	movlb	0	; () banked
  6571  0015B8  5182               	movf	___flmul@aexp& (0+255),w,b
  6572  0015BA  C087  F07D         	movff	___flmul@bexp,??___flmul
  6573  0015BE  0100               	movlb	0	; () banked
  6574  0015C0  6B7E               	clrf	(??___flmul+1)& (0+255),b
  6575  0015C2  0100               	movlb	0	; () banked
  6576  0015C4  277D               	addwf	??___flmul& (0+255),f,b
  6577  0015C6  0E00               	movlw	0
  6578  0015C8  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  6579  0015CA  0E82               	movlw	130
  6580  0015CC  0100               	movlb	0	; () banked
  6581  0015CE  257D               	addwf	??___flmul& (0+255),w,b
  6582  0015D0  0100               	movlb	0	; () banked
  6583  0015D2  6F8C               	movwf	___flmul@temp& (0+255),b
  6584  0015D4  0EFF               	movlw	255
  6585  0015D6  0100               	movlb	0	; () banked
  6586  0015D8  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  6587  0015DA  0100               	movlb	0	; () banked
  6588  0015DC  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  6589  0015DE  D015               	goto	l4853
  6590  0015E0                     l4847:
  6591                           
  6592                           ; BSR set to: 0
  6593  0015E0  0100               	movlb	0	; () banked
  6594  0015E2  90D8               	bcf	status,0,c
  6595  0015E4  3788               	rlcf	___flmul@prod& (0+255),f,b
  6596  0015E6  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6597  0015E8  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6598  0015EA  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6599                           
  6600                           ; BSR set to: 0
  6601  0015EC  0100               	movlb	0	; () banked
  6602  0015EE  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6603  0015F0  D002               	goto	l1072
  6604                           
  6605                           ; BSR set to: 0
  6606  0015F2  0100               	movlb	0	; () banked
  6607  0015F4  8188               	bsf	___flmul@prod& (0+255),0,b
  6608  0015F6                     l1072:
  6609                           
  6610                           ; BSR set to: 0
  6611  0015F6  0100               	movlb	0	; () banked
  6612  0015F8  90D8               	bcf	status,0,c
  6613  0015FA  3783               	rlcf	___flmul@grs& (0+255),f,b
  6614  0015FC  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6615  0015FE  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6616  001600  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6617  001602  0100               	movlb	0	; () banked
  6618  001604  078C               	decf	___flmul@temp& (0+255),f,b
  6619  001606  A0D8               	btfss	status,0,c
  6620  001608  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  6621  00160A                     l4853:
  6622                           
  6623                           ; BSR set to: 0
  6624  00160A  0100               	movlb	0	; () banked
  6625  00160C  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  6626  00160E  D7E8               	goto	l4847
  6627                           
  6628                           ; BSR set to: 0
  6629                           
  6630                           ; BSR set to: 0
  6631  001610  0E00               	movlw	0
  6632  001612  0100               	movlb	0	; () banked
  6633  001614  6F82               	movwf	___flmul@aexp& (0+255),b
  6634                           
  6635                           ; BSR set to: 0
  6636  001616  0100               	movlb	0	; () banked
  6637  001618  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6638  00161A  D024               	goto	l1074
  6639                           
  6640                           ; BSR set to: 0
  6641  00161C  0EFF               	movlw	255
  6642  00161E  0100               	movlb	0	; () banked
  6643  001620  1583               	andwf	___flmul@grs& (0+255),w,b
  6644  001622  0100               	movlb	0	; () banked
  6645  001624  6F7D               	movwf	??___flmul& (0+255),b
  6646  001626  0EFF               	movlw	255
  6647  001628  0100               	movlb	0	; () banked
  6648  00162A  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  6649  00162C  0100               	movlb	0	; () banked
  6650  00162E  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6651  001630  0EFF               	movlw	255
  6652  001632  0100               	movlb	0	; () banked
  6653  001634  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  6654  001636  0100               	movlb	0	; () banked
  6655  001638  6F7F               	movwf	(??___flmul+2)& (0+255),b
  6656  00163A  0E7F               	movlw	127
  6657  00163C  0100               	movlb	0	; () banked
  6658  00163E  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  6659  001640  0100               	movlb	0	; () banked
  6660  001642  6F80               	movwf	(??___flmul+3)& (0+255),b
  6661  001644  0100               	movlb	0	; () banked
  6662  001646  517D               	movf	??___flmul& (0+255),w,b
  6663  001648  0100               	movlb	0	; () banked
  6664  00164A  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  6665  00164C  0100               	movlb	0	; () banked
  6666  00164E  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  6667  001650  0100               	movlb	0	; () banked
  6668  001652  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  6669  001654  A4D8               	btfss	status,2,c
  6670  001656  D003               	goto	l4863
  6671                           
  6672                           ; BSR set to: 0
  6673                           
  6674                           ; BSR set to: 0
  6675  001658  0100               	movlb	0	; () banked
  6676  00165A  A188               	btfss	___flmul@prod& (0+255),0,b
  6677  00165C  D003               	goto	l1074
  6678  00165E                     l4863:
  6679                           
  6680                           ; BSR set to: 0
  6681  00165E  0E01               	movlw	1
  6682  001660  0100               	movlb	0	; () banked
  6683  001662  6F82               	movwf	___flmul@aexp& (0+255),b
  6684  001664                     l1074:
  6685                           
  6686                           ; BSR set to: 0
  6687  001664  0100               	movlb	0	; () banked
  6688  001666  5182               	movf	___flmul@aexp& (0+255),w,b
  6689  001668  0100               	movlb	0	; () banked
  6690  00166A  B4D8               	btfsc	status,2,c
  6691  00166C  D023               	goto	l4873
  6692                           
  6693                           ; BSR set to: 0
  6694  00166E  0E01               	movlw	1
  6695  001670  0100               	movlb	0	; () banked
  6696  001672  2788               	addwf	___flmul@prod& (0+255),f,b
  6697  001674  0E00               	movlw	0
  6698  001676  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6699  001678  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6700  00167A  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6701                           
  6702                           ; BSR set to: 0
  6703  00167C  0100               	movlb	0	; () banked
  6704  00167E  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  6705  001680  D019               	goto	l4873
  6706                           
  6707                           ; BSR set to: 0
  6708  001682  C088  F07D         	movff	___flmul@prod,??___flmul
  6709  001686  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  6710  00168A  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  6711  00168E  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  6712  001692  0100               	movlb	0	; () banked
  6713  001694  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  6714  001696  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6715  001698  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6716  00169A  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6717  00169C  337D               	rrcf	??___flmul& (0+255),f,b
  6718  00169E  C07D  F088         	movff	??___flmul,___flmul@prod
  6719  0016A2  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  6720  0016A6  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  6721  0016AA  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  6722                           
  6723                           ; BSR set to: 0
  6724  0016AE  0100               	movlb	0	; () banked
  6725  0016B0  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  6726  0016B2  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  6727  0016B4                     l4873:
  6728                           
  6729                           ; BSR set to: 0
  6730  0016B4  0100               	movlb	0	; () banked
  6731  0016B6  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6732  0016B8  D010               	goto	l4877
  6733  0016BA  0100               	movlb	0	; () banked
  6734  0016BC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6735  0016BE  E104               	bnz	u5650
  6736  0016C0  0100               	movlb	0	; () banked
  6737  0016C2  298C               	incf	___flmul@temp& (0+255),w,b
  6738  0016C4  A0D8               	btfss	status,0,c
  6739  0016C6  D009               	goto	l4877
  6740  0016C8                     u5650:
  6741                           
  6742                           ; BSR set to: 0
  6743  0016C8  0E00               	movlw	0
  6744  0016CA  0100               	movlb	0	; () banked
  6745  0016CC  6F88               	movwf	___flmul@prod& (0+255),b
  6746  0016CE  0E00               	movlw	0
  6747  0016D0  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6748  0016D2  0E80               	movlw	128
  6749  0016D4  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6750  0016D6  0E7F               	movlw	127
  6751  0016D8  D02B               	goto	L8
  6752  0016DA                     l4877:
  6753                           
  6754                           ; BSR set to: 0
  6755  0016DA  0100               	movlb	0	; () banked
  6756  0016DC  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6757  0016DE  D007               	goto	l4879
  6758  0016E0  0100               	movlb	0	; () banked
  6759  0016E2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6760  0016E4  E111               	bnz	l1082
  6761  0016E6  0100               	movlb	0	; () banked
  6762  0016E8  058C               	decf	___flmul@temp& (0+255),w,b
  6763  0016EA  B0D8               	btfsc	status,0,c
  6764  0016EC  D00D               	goto	l1082
  6765  0016EE                     l4879:
  6766                           
  6767                           ; BSR set to: 0
  6768  0016EE  0E00               	movlw	0
  6769  0016F0  0100               	movlb	0	; () banked
  6770  0016F2  6F88               	movwf	___flmul@prod& (0+255),b
  6771  0016F4  0E00               	movlw	0
  6772  0016F6  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6773  0016F8  0E00               	movlw	0
  6774  0016FA  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6775  0016FC  0E00               	movlw	0
  6776  0016FE  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6777  001700  0E00               	movlw	0
  6778  001702  0100               	movlb	0	; () banked
  6779  001704  6F81               	movwf	___flmul@sign& (0+255),b
  6780  001706  D015               	goto	l4889
  6781  001708                     l1082:
  6782                           
  6783                           ; BSR set to: 0
  6784  001708  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  6785                           
  6786                           ; BSR set to: 0
  6787  00170C  0EFF               	movlw	255
  6788  00170E  0100               	movlb	0	; () banked
  6789  001710  1788               	andwf	___flmul@prod& (0+255),f,b
  6790  001712  0EFF               	movlw	255
  6791  001714  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  6792  001716  0E7F               	movlw	127
  6793  001718  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  6794  00171A  0E00               	movlw	0
  6795  00171C  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  6796                           
  6797                           ; BSR set to: 0
  6798  00171E  0100               	movlb	0	; () banked
  6799  001720  A187               	btfss	___flmul@bexp& (0+255),0,b
  6800  001722  D002               	goto	l4887
  6801                           
  6802                           ; BSR set to: 0
  6803  001724  0100               	movlb	0	; () banked
  6804  001726  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  6805  001728                     l4887:
  6806                           
  6807                           ; BSR set to: 0
  6808  001728  0100               	movlb	0	; () banked
  6809  00172A  90D8               	bcf	status,0,c
  6810  00172C  3187               	rrcf	___flmul@bexp& (0+255),w,b
  6811  00172E  0100               	movlb	0	; () banked
  6812  001730                     L8:
  6813  001730  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6814  001732                     l4889:
  6815                           
  6816                           ; BSR set to: 0
  6817  001732  0100               	movlb	0	; () banked
  6818  001734  5181               	movf	___flmul@sign& (0+255),w,b
  6819  001736  0100               	movlb	0	; () banked
  6820  001738  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6821                           
  6822                           ; BSR set to: 0
  6823  00173A  C088  F075         	movff	___flmul@prod,?___flmul
  6824  00173E  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  6825  001742  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  6826  001746  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  6827  00174A  0012               	return	
  6828  00174C                     __end_of___flmul:
  6829                           	opt stack 0
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           intcon	equ	0xFF2
  6837                           postinc0	equ	0xFEE
  6838                           wreg	equ	0xFE8
  6839                           indf1	equ	0xFE7
  6840                           postinc1	equ	0xFE6
  6841                           fsr1h	equ	0xFE2
  6842                           fsr1l	equ	0xFE1
  6843                           indf2	equ	0xFDF
  6844                           postinc2	equ	0xFDE
  6845                           fsr2h	equ	0xFDA
  6846                           fsr2l	equ	0xFD9
  6847                           status	equ	0xFD8
  6848                           
  6849 ;; *************** function ___awmod *****************
  6850 ;; Defined at:
  6851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  dividend        2    0[BANK0 ] int 
  6854 ;;  divisor         2    2[BANK0 ] int 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  sign            1    5[BANK0 ] unsigned char 
  6857 ;;  counter         1    4[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  2    0[BANK0 ] int 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6867 ;;      Params:         0       4       0       0
  6868 ;;      Locals:         0       2       0       0
  6869 ;;      Temps:          0       0       0       0
  6870 ;;      Totals:         0       6       0       0
  6871 ;;Total ram usage:        6 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    3
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_fround
  6878 ;;		_scale
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text19
  6883  002D9A                     __ptext19:
  6884                           	opt stack 0
  6885  002D9A                     ___awmod:
  6886                           	opt stack 24
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;incstack = 0
  6890  002D9A  0E00               	movlw	0
  6891  002D9C  0100               	movlb	0	; () banked
  6892  002D9E  6F65               	movwf	___awmod@sign& (0+255),b
  6893                           
  6894                           ; BSR set to: 0
  6895  002DA0  0100               	movlb	0	; () banked
  6896  002DA2  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6897  002DA4  D008               	goto	l4947
  6898                           
  6899                           ; BSR set to: 0
  6900  002DA6  0100               	movlb	0	; () banked
  6901  002DA8  6D60               	negf	___awmod@dividend& (0+255),b
  6902  002DAA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6903  002DAC  B0D8               	btfsc	status,0,c
  6904  002DAE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6905                           
  6906                           ; BSR set to: 0
  6907  002DB0  0E01               	movlw	1
  6908  002DB2  0100               	movlb	0	; () banked
  6909  002DB4  6F65               	movwf	___awmod@sign& (0+255),b
  6910  002DB6                     l4947:
  6911                           
  6912                           ; BSR set to: 0
  6913  002DB6  0100               	movlb	0	; () banked
  6914  002DB8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6915  002DBA  D005               	goto	l4951
  6916                           
  6917                           ; BSR set to: 0
  6918  002DBC  0100               	movlb	0	; () banked
  6919  002DBE  6D62               	negf	___awmod@divisor& (0+255),b
  6920  002DC0  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6921  002DC2  B0D8               	btfsc	status,0,c
  6922  002DC4  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6923  002DC6                     l4951:
  6924                           
  6925                           ; BSR set to: 0
  6926  002DC6  0100               	movlb	0	; () banked
  6927  002DC8  5162               	movf	___awmod@divisor& (0+255),w,b
  6928  002DCA  0100               	movlb	0	; () banked
  6929  002DCC  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6930  002DCE  B4D8               	btfsc	status,2,c
  6931  002DD0  D026               	goto	l4967
  6932                           
  6933                           ; BSR set to: 0
  6934  002DD2  0E01               	movlw	1
  6935  002DD4  0100               	movlb	0	; () banked
  6936  002DD6  6F64               	movwf	___awmod@counter& (0+255),b
  6937  002DD8  D006               	goto	l4957
  6938  002DDA                     l4955:
  6939                           
  6940                           ; BSR set to: 0
  6941  002DDA  0100               	movlb	0	; () banked
  6942  002DDC  90D8               	bcf	status,0,c
  6943  002DDE  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6944  002DE0  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6945  002DE2  0100               	movlb	0	; () banked
  6946  002DE4  2B64               	incf	___awmod@counter& (0+255),f,b
  6947  002DE6                     l4957:
  6948                           
  6949                           ; BSR set to: 0
  6950  002DE6  0100               	movlb	0	; () banked
  6951  002DE8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6952  002DEA  D7F7               	goto	l4955
  6953  002DEC                     l4959:
  6954                           
  6955                           ; BSR set to: 0
  6956  002DEC  0100               	movlb	0	; () banked
  6957  002DEE  5162               	movf	___awmod@divisor& (0+255),w,b
  6958  002DF0  0100               	movlb	0	; () banked
  6959  002DF2  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6960  002DF4  0100               	movlb	0	; () banked
  6961  002DF6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6962  002DF8  0100               	movlb	0	; () banked
  6963  002DFA  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6964  002DFC  A0D8               	btfss	status,0,c
  6965  002DFE  D008               	goto	l4963
  6966                           
  6967                           ; BSR set to: 0
  6968  002E00  0100               	movlb	0	; () banked
  6969  002E02  5162               	movf	___awmod@divisor& (0+255),w,b
  6970  002E04  0100               	movlb	0	; () banked
  6971  002E06  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6972  002E08  0100               	movlb	0	; () banked
  6973  002E0A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6974  002E0C  0100               	movlb	0	; () banked
  6975  002E0E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6976  002E10                     l4963:
  6977                           
  6978                           ; BSR set to: 0
  6979  002E10  0100               	movlb	0	; () banked
  6980  002E12  90D8               	bcf	status,0,c
  6981  002E14  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6982  002E16  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6983                           
  6984                           ; BSR set to: 0
  6985  002E18  0100               	movlb	0	; () banked
  6986  002E1A  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6987  002E1C  D7E7               	goto	l4959
  6988  002E1E                     l4967:
  6989                           
  6990                           ; BSR set to: 0
  6991  002E1E  0100               	movlb	0	; () banked
  6992  002E20  5165               	movf	___awmod@sign& (0+255),w,b
  6993  002E22  0100               	movlb	0	; () banked
  6994  002E24  B4D8               	btfsc	status,2,c
  6995  002E26  D005               	goto	l4971
  6996                           
  6997                           ; BSR set to: 0
  6998  002E28  0100               	movlb	0	; () banked
  6999  002E2A  6D60               	negf	___awmod@dividend& (0+255),b
  7000  002E2C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7001  002E2E  B0D8               	btfsc	status,0,c
  7002  002E30  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7003  002E32                     l4971:
  7004                           
  7005                           ; BSR set to: 0
  7006  002E32  C060  F060         	movff	___awmod@dividend,?___awmod
  7007  002E36  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7008  002E3A  0012               	return	
  7009  002E3C                     __end_of___awmod:
  7010                           	opt stack 0
  7011                           tblptru	equ	0xFF8
  7012                           tblptrh	equ	0xFF7
  7013                           tblptrl	equ	0xFF6
  7014                           tablat	equ	0xFF5
  7015                           prodh	equ	0xFF4
  7016                           prodl	equ	0xFF3
  7017                           intcon	equ	0xFF2
  7018                           postinc0	equ	0xFEE
  7019                           wreg	equ	0xFE8
  7020                           indf1	equ	0xFE7
  7021                           postinc1	equ	0xFE6
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function ___awdiv *****************
  7031 ;; Defined at:
  7032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  dividend        2    6[BANK0 ] int 
  7035 ;;  divisor         2    8[BANK0 ] int 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  quotient        2   12[BANK0 ] int 
  7038 ;;  sign            1   11[BANK0 ] unsigned char 
  7039 ;;  counter         1   10[BANK0 ] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  2    6[BANK0 ] int 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7049 ;;      Params:         0       4       0       0
  7050 ;;      Locals:         0       4       0       0
  7051 ;;      Temps:          0       0       0       0
  7052 ;;      Totals:         0       8       0       0
  7053 ;;Total ram usage:        8 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    3
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_fround
  7060 ;;		_scale
  7061 ;;		_sprintf
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text20
  7066  002B78                     __ptext20:
  7067                           	opt stack 0
  7068  002B78                     ___awdiv:
  7069                           	opt stack 24
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;incstack = 0
  7073  002B78  0E00               	movlw	0
  7074  002B7A  0100               	movlb	0	; () banked
  7075  002B7C  6F6B               	movwf	___awdiv@sign& (0+255),b
  7076                           
  7077                           ; BSR set to: 0
  7078  002B7E  0100               	movlb	0	; () banked
  7079  002B80  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7080  002B82  D008               	goto	l4903
  7081                           
  7082                           ; BSR set to: 0
  7083  002B84  0100               	movlb	0	; () banked
  7084  002B86  6D68               	negf	___awdiv@divisor& (0+255),b
  7085  002B88  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7086  002B8A  B0D8               	btfsc	status,0,c
  7087  002B8C  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7088                           
  7089                           ; BSR set to: 0
  7090  002B8E  0E01               	movlw	1
  7091  002B90  0100               	movlb	0	; () banked
  7092  002B92  6F6B               	movwf	___awdiv@sign& (0+255),b
  7093  002B94                     l4903:
  7094                           
  7095                           ; BSR set to: 0
  7096  002B94  0100               	movlb	0	; () banked
  7097  002B96  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7098  002B98  D008               	goto	l4909
  7099                           
  7100                           ; BSR set to: 0
  7101  002B9A  0100               	movlb	0	; () banked
  7102  002B9C  6D66               	negf	___awdiv@dividend& (0+255),b
  7103  002B9E  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7104  002BA0  B0D8               	btfsc	status,0,c
  7105  002BA2  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7106                           
  7107                           ; BSR set to: 0
  7108  002BA4  0E01               	movlw	1
  7109  002BA6  0100               	movlb	0	; () banked
  7110  002BA8  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  7111  002BAA                     l4909:
  7112                           
  7113                           ; BSR set to: 0
  7114  002BAA  0E00               	movlw	0
  7115  002BAC  0100               	movlb	0	; () banked
  7116  002BAE  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  7117  002BB0  0E00               	movlw	0
  7118  002BB2  6F6C               	movwf	___awdiv@quotient& (0+255),b
  7119                           
  7120                           ; BSR set to: 0
  7121  002BB4  0100               	movlb	0	; () banked
  7122  002BB6  5168               	movf	___awdiv@divisor& (0+255),w,b
  7123  002BB8  0100               	movlb	0	; () banked
  7124  002BBA  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7125  002BBC  B4D8               	btfsc	status,2,c
  7126  002BBE  D02C               	goto	l4931
  7127                           
  7128                           ; BSR set to: 0
  7129  002BC0  0E01               	movlw	1
  7130  002BC2  0100               	movlb	0	; () banked
  7131  002BC4  6F6A               	movwf	___awdiv@counter& (0+255),b
  7132  002BC6  D006               	goto	l4917
  7133  002BC8                     l4915:
  7134                           
  7135                           ; BSR set to: 0
  7136  002BC8  0100               	movlb	0	; () banked
  7137  002BCA  90D8               	bcf	status,0,c
  7138  002BCC  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  7139  002BCE  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7140  002BD0  0100               	movlb	0	; () banked
  7141  002BD2  2B6A               	incf	___awdiv@counter& (0+255),f,b
  7142  002BD4                     l4917:
  7143                           
  7144                           ; BSR set to: 0
  7145  002BD4  0100               	movlb	0	; () banked
  7146  002BD6  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7147  002BD8  D7F7               	goto	l4915
  7148  002BDA                     l4919:
  7149                           
  7150                           ; BSR set to: 0
  7151  002BDA  0100               	movlb	0	; () banked
  7152  002BDC  90D8               	bcf	status,0,c
  7153  002BDE  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  7154  002BE0  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7155                           
  7156                           ; BSR set to: 0
  7157  002BE2  0100               	movlb	0	; () banked
  7158  002BE4  5168               	movf	___awdiv@divisor& (0+255),w,b
  7159  002BE6  0100               	movlb	0	; () banked
  7160  002BE8  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  7161  002BEA  0100               	movlb	0	; () banked
  7162  002BEC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7163  002BEE  0100               	movlb	0	; () banked
  7164  002BF0  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7165  002BF2  A0D8               	btfss	status,0,c
  7166  002BF4  D00A               	goto	l4927
  7167                           
  7168                           ; BSR set to: 0
  7169  002BF6  0100               	movlb	0	; () banked
  7170  002BF8  5168               	movf	___awdiv@divisor& (0+255),w,b
  7171  002BFA  0100               	movlb	0	; () banked
  7172  002BFC  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  7173  002BFE  0100               	movlb	0	; () banked
  7174  002C00  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7175  002C02  0100               	movlb	0	; () banked
  7176  002C04  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7177                           
  7178                           ; BSR set to: 0
  7179  002C06  0100               	movlb	0	; () banked
  7180  002C08  816C               	bsf	___awdiv@quotient& (0+255),0,b
  7181  002C0A                     l4927:
  7182                           
  7183                           ; BSR set to: 0
  7184  002C0A  0100               	movlb	0	; () banked
  7185  002C0C  90D8               	bcf	status,0,c
  7186  002C0E  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7187  002C10  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  7188                           
  7189                           ; BSR set to: 0
  7190  002C12  0100               	movlb	0	; () banked
  7191  002C14  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  7192  002C16  D7E1               	goto	l4919
  7193  002C18                     l4931:
  7194                           
  7195                           ; BSR set to: 0
  7196  002C18  0100               	movlb	0	; () banked
  7197  002C1A  516B               	movf	___awdiv@sign& (0+255),w,b
  7198  002C1C  0100               	movlb	0	; () banked
  7199  002C1E  B4D8               	btfsc	status,2,c
  7200  002C20  D005               	goto	l4935
  7201                           
  7202                           ; BSR set to: 0
  7203  002C22  0100               	movlb	0	; () banked
  7204  002C24  6D6C               	negf	___awdiv@quotient& (0+255),b
  7205  002C26  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7206  002C28  B0D8               	btfsc	status,0,c
  7207  002C2A  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7208  002C2C                     l4935:
  7209                           
  7210                           ; BSR set to: 0
  7211  002C2C  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  7212  002C30  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  7213  002C34  0012               	return	
  7214  002C36                     __end_of___awdiv:
  7215                           	opt stack 0
  7216                           tblptru	equ	0xFF8
  7217                           tblptrh	equ	0xFF7
  7218                           tblptrl	equ	0xFF6
  7219                           tablat	equ	0xFF5
  7220                           prodh	equ	0xFF4
  7221                           prodl	equ	0xFF3
  7222                           intcon	equ	0xFF2
  7223                           postinc0	equ	0xFEE
  7224                           wreg	equ	0xFE8
  7225                           indf1	equ	0xFE7
  7226                           postinc1	equ	0xFE6
  7227                           fsr1h	equ	0xFE2
  7228                           fsr1l	equ	0xFE1
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8
  7234                           
  7235 ;; *************** function __tdiv_to_l_ *****************
  7236 ;; Defined at:
  7237 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  f1              4    0[BANK0 ] float 
  7240 ;;  f2              4    4[BANK0 ] float 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  quot            4   11[BANK0 ] unsigned long 
  7243 ;;  exp1            1   16[BANK0 ] unsigned char 
  7244 ;;  cntr            1   15[BANK0 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  4    0[BANK0 ] unsigned long 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7254 ;;      Params:         0       8       0       0
  7255 ;;      Locals:         0       6       0       0
  7256 ;;      Temps:          0       3       0       0
  7257 ;;      Totals:         0      17       0       0
  7258 ;;Total ram usage:       17 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    3
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_sprintf
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text21
  7269  001FE6                     __ptext21:
  7270                           	opt stack 0
  7271  001FE6                     __tdiv_to_l_:
  7272                           	opt stack 25
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;incstack = 0
  7276  001FE6  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7277  001FEA  0100               	movlb	0	; () banked
  7278  001FEC  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7279  001FEE  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7280  001FF0  0100               	movlb	0	; () banked
  7281  001FF2  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7282  001FF4  0100               	movlb	0	; () banked
  7283  001FF6  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7284  001FF8  E301               	bnc	u5911
  7285  001FFA  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7286  001FFC                     u5911:
  7287  001FFC  0100               	movlb	0	; () banked
  7288  001FFE  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7289  002000  0100               	movlb	0	; () banked
  7290  002002  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7291  002004  0100               	movlb	0	; () banked
  7292  002006  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7293  002008  A4D8               	btfss	status,2,c
  7294  00200A  D00A               	goto	l5085
  7295                           
  7296                           ; BSR set to: 0
  7297  00200C  0E00               	movlw	0
  7298  00200E  0100               	movlb	0	; () banked
  7299  002010  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7300  002012  0E00               	movlw	0
  7301  002014  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7302  002016  0E00               	movlw	0
  7303  002018  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7304  00201A  0E00               	movlw	0
  7305  00201C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7306                           
  7307                           ; BSR set to: 0
  7308  00201E  0012               	return	
  7309  002020                     l5085:
  7310                           
  7311                           ; BSR set to: 0
  7312  002020  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7313  002024  0100               	movlb	0	; () banked
  7314  002026  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7315  002028  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7316  00202A  0100               	movlb	0	; () banked
  7317  00202C  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7318  00202E  0100               	movlb	0	; () banked
  7319  002030  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7320  002032  E301               	bnc	u5931
  7321  002034  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7322  002036                     u5931:
  7323  002036  0100               	movlb	0	; () banked
  7324  002038  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7325  00203A  0100               	movlb	0	; () banked
  7326  00203C  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7327  00203E  0100               	movlb	0	; () banked
  7328  002040  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7329  002042  A4D8               	btfss	status,2,c
  7330  002044  D00A               	goto	l5091
  7331                           
  7332                           ; BSR set to: 0
  7333  002046  0E00               	movlw	0
  7334  002048  0100               	movlb	0	; () banked
  7335  00204A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7336  00204C  0E00               	movlw	0
  7337  00204E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7338  002050  0E00               	movlw	0
  7339  002052  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7340  002054  0E00               	movlw	0
  7341  002056  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7342                           
  7343                           ; BSR set to: 0
  7344  002058  0012               	return	
  7345  00205A                     l5091:
  7346                           
  7347                           ; BSR set to: 0
  7348  00205A  0100               	movlb	0	; () banked
  7349  00205C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7350                           
  7351                           ; BSR set to: 0
  7352  00205E  0EFF               	movlw	255
  7353  002060  0100               	movlb	0	; () banked
  7354  002062  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7355  002064  0EFF               	movlw	255
  7356  002066  0100               	movlb	0	; () banked
  7357  002068  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7358  00206A  0E00               	movlw	0
  7359  00206C  0100               	movlb	0	; () banked
  7360  00206E  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7361  002070  0100               	movlb	0	; () banked
  7362  002072  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7363                           
  7364                           ; BSR set to: 0
  7365  002074  0EFF               	movlw	255
  7366  002076  0100               	movlb	0	; () banked
  7367  002078  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7368  00207A  0EFF               	movlw	255
  7369  00207C  0100               	movlb	0	; () banked
  7370  00207E  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7371  002080  0E00               	movlw	0
  7372  002082  0100               	movlb	0	; () banked
  7373  002084  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7374                           
  7375                           ; BSR set to: 0
  7376  002086  0E00               	movlw	0
  7377  002088  0100               	movlb	0	; () banked
  7378  00208A  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  7379  00208C  0E00               	movlw	0
  7380  00208E  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7381  002090  0E00               	movlw	0
  7382  002092  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7383  002094  0E00               	movlw	0
  7384  002096  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387  002098  0E7F               	movlw	127
  7388  00209A  0100               	movlb	0	; () banked
  7389  00209C  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7390                           
  7391                           ; BSR set to: 0
  7392  00209E  0100               	movlb	0	; () banked
  7393  0020A0  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7394  0020A2  0F98               	addlw	152
  7395  0020A4  0100               	movlb	0	; () banked
  7396  0020A6  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7397                           
  7398                           ; BSR set to: 0
  7399  0020A8  0E18               	movlw	24
  7400  0020AA  0100               	movlb	0	; () banked
  7401  0020AC  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7402  0020AE                     l789:
  7403                           
  7404                           ; BSR set to: 0
  7405  0020AE  0100               	movlb	0	; () banked
  7406  0020B0  90D8               	bcf	status,0,c
  7407  0020B2  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7408  0020B4  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7409  0020B6  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7410  0020B8  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 0
  7413  0020BA  0100               	movlb	0	; () banked
  7414  0020BC  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7415  0020BE  0100               	movlb	0	; () banked
  7416  0020C0  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7417  0020C2  0100               	movlb	0	; () banked
  7418  0020C4  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7419  0020C6  0100               	movlb	0	; () banked
  7420  0020C8  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7421  0020CA  0100               	movlb	0	; () banked
  7422  0020CC  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7423  0020CE  0100               	movlb	0	; () banked
  7424  0020D0  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7425  0020D2  A0D8               	btfss	status,0,c
  7426  0020D4  D00E               	goto	l790
  7427                           
  7428                           ; BSR set to: 0
  7429  0020D6  0100               	movlb	0	; () banked
  7430  0020D8  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7431  0020DA  0100               	movlb	0	; () banked
  7432  0020DC  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7433  0020DE  0100               	movlb	0	; () banked
  7434  0020E0  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7435  0020E2  0100               	movlb	0	; () banked
  7436  0020E4  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7437  0020E6  0100               	movlb	0	; () banked
  7438  0020E8  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7439  0020EA  0100               	movlb	0	; () banked
  7440  0020EC  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7441                           
  7442                           ; BSR set to: 0
  7443  0020EE  0100               	movlb	0	; () banked
  7444  0020F0  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7445  0020F2                     l790:
  7446                           
  7447                           ; BSR set to: 0
  7448  0020F2  0100               	movlb	0	; () banked
  7449  0020F4  90D8               	bcf	status,0,c
  7450  0020F6  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7451  0020F8  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7452  0020FA  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7453                           
  7454                           ; BSR set to: 0
  7455  0020FC  0100               	movlb	0	; () banked
  7456  0020FE  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7457  002100  D7D6               	goto	l789
  7458                           
  7459                           ; BSR set to: 0
  7460                           
  7461                           ; BSR set to: 0
  7462  002102  0100               	movlb	0	; () banked
  7463  002104  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7464  002106  D01A               	goto	l5125
  7465                           
  7466                           ; BSR set to: 0
  7467  002108  0100               	movlb	0	; () banked
  7468  00210A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7469  00210C  0A80               	xorlw	128
  7470  00210E  0F97               	addlw	151
  7471  002110  B0D8               	btfsc	status,0,c
  7472  002112  D00A               	goto	l5121
  7473                           
  7474                           ; BSR set to: 0
  7475  002114  0E00               	movlw	0
  7476  002116  0100               	movlb	0	; () banked
  7477  002118  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7478  00211A  0E00               	movlw	0
  7479  00211C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7480  00211E  0E00               	movlw	0
  7481  002120  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7482  002122  0E00               	movlw	0
  7483  002124  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7484                           
  7485                           ; BSR set to: 0
  7486  002126  0012               	return	
  7487  002128                     l5121:
  7488                           
  7489                           ; BSR set to: 0
  7490  002128  0100               	movlb	0	; () banked
  7491  00212A  90D8               	bcf	status,0,c
  7492  00212C  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7493  00212E  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7494  002130  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7495  002132  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498  002134  0100               	movlb	0	; () banked
  7499  002136  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7500  002138  D7F7               	goto	l5121
  7501                           
  7502                           ; BSR set to: 0
  7503  00213A  D01B               	goto	l796
  7504  00213C                     l5125:
  7505                           
  7506                           ; BSR set to: 0
  7507  00213C  0E17               	movlw	23
  7508  00213E  0100               	movlb	0	; () banked
  7509  002140  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7510  002142  D012               	goto	l5133
  7511                           
  7512                           ; BSR set to: 0
  7513  002144  0E00               	movlw	0
  7514  002146  0100               	movlb	0	; () banked
  7515  002148  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7516  00214A  0E00               	movlw	0
  7517  00214C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7518  00214E  0E00               	movlw	0
  7519  002150  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7520  002152  0E00               	movlw	0
  7521  002154  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7522                           
  7523                           ; BSR set to: 0
  7524  002156  0012               	return	
  7525  002158                     l5131:
  7526                           
  7527                           ; BSR set to: 0
  7528  002158  0100               	movlb	0	; () banked
  7529  00215A  90D8               	bcf	status,0,c
  7530  00215C  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7531  00215E  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7532  002160  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7533  002162  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7534  002164  0100               	movlb	0	; () banked
  7535  002166  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7536  002168                     l5133:
  7537                           
  7538                           ; BSR set to: 0
  7539  002168  0100               	movlb	0	; () banked
  7540  00216A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7541  00216C  0100               	movlb	0	; () banked
  7542  00216E  A4D8               	btfss	status,2,c
  7543  002170  D7F3               	goto	l5131
  7544  002172                     l796:
  7545                           
  7546                           ; BSR set to: 0
  7547  002172  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7548  002176  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7549  00217A  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7550  00217E  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7551                           
  7552                           ; BSR set to: 0
  7553  002182  0012               	return		;funcret
  7554  002184                     __end_of__tdiv_to_l_:
  7555                           	opt stack 0
  7556                           tblptru	equ	0xFF8
  7557                           tblptrh	equ	0xFF7
  7558                           tblptrl	equ	0xFF6
  7559                           tablat	equ	0xFF5
  7560                           prodh	equ	0xFF4
  7561                           prodl	equ	0xFF3
  7562                           intcon	equ	0xFF2
  7563                           postinc0	equ	0xFEE
  7564                           wreg	equ	0xFE8
  7565                           indf1	equ	0xFE7
  7566                           postinc1	equ	0xFE6
  7567                           fsr1h	equ	0xFE2
  7568                           fsr1l	equ	0xFE1
  7569                           indf2	equ	0xFDF
  7570                           postinc2	equ	0xFDE
  7571                           fsr2h	equ	0xFDA
  7572                           fsr2l	equ	0xFD9
  7573                           status	equ	0xFD8
  7574                           
  7575 ;; *************** function __div_to_l_ *****************
  7576 ;; Defined at:
  7577 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  f1              4    0[BANK0 ] unsigned long 
  7580 ;;  f2              4    4[BANK0 ] unsigned long 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  quot            4    8[BANK0 ] unsigned long 
  7583 ;;  exp1            1   13[BANK0 ] unsigned char 
  7584 ;;  cntr            1   12[BANK0 ] unsigned char 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  4    0[BANK0 ] unsigned long 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7594 ;;      Params:         0       8       0       0
  7595 ;;      Locals:         0       6       0       0
  7596 ;;      Temps:          0       0       0       0
  7597 ;;      Totals:         0      14       0       0
  7598 ;;Total ram usage:       14 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    3
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_sprintf
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text22
  7609  002314                     __ptext22:
  7610                           	opt stack 0
  7611  002314                     __div_to_l_:
  7612                           	opt stack 25
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;incstack = 0
  7616  002314  0100               	movlb	0	; () banked
  7617  002316  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7618  002318  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7619  00231A  0100               	movlb	0	; () banked
  7620  00231C  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  7621  00231E  0100               	movlb	0	; () banked
  7622  002320  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7623  002322  A4D8               	btfss	status,2,c
  7624  002324  D00A               	goto	l5141
  7625                           
  7626                           ; BSR set to: 0
  7627  002326  0E00               	movlw	0
  7628  002328  0100               	movlb	0	; () banked
  7629  00232A  6F60               	movwf	?__div_to_l_& (0+255),b
  7630  00232C  0E00               	movlw	0
  7631  00232E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7632  002330  0E00               	movlw	0
  7633  002332  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7634  002334  0E00               	movlw	0
  7635  002336  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7636                           
  7637                           ; BSR set to: 0
  7638  002338  0012               	return	
  7639  00233A                     l5141:
  7640                           
  7641                           ; BSR set to: 0
  7642  00233A  0100               	movlb	0	; () banked
  7643  00233C  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7644  00233E  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7645  002340  0100               	movlb	0	; () banked
  7646  002342  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7647  002344  0100               	movlb	0	; () banked
  7648  002346  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7649  002348  A4D8               	btfss	status,2,c
  7650  00234A  D00A               	goto	l5147
  7651                           
  7652                           ; BSR set to: 0
  7653  00234C  0E00               	movlw	0
  7654  00234E  0100               	movlb	0	; () banked
  7655  002350  6F60               	movwf	?__div_to_l_& (0+255),b
  7656  002352  0E00               	movlw	0
  7657  002354  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7658  002356  0E00               	movlw	0
  7659  002358  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7660  00235A  0E00               	movlw	0
  7661  00235C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7662                           
  7663                           ; BSR set to: 0
  7664  00235E  0012               	return	
  7665  002360                     l5147:
  7666                           
  7667                           ; BSR set to: 0
  7668  002360  0100               	movlb	0	; () banked
  7669  002362  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7670                           
  7671                           ; BSR set to: 0
  7672  002364  0EFF               	movlw	255
  7673  002366  0100               	movlb	0	; () banked
  7674  002368  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  7675  00236A  0EFF               	movlw	255
  7676  00236C  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7677  00236E  0EFF               	movlw	255
  7678  002370  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7679  002372  0E00               	movlw	0
  7680  002374  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683  002376  0100               	movlb	0	; () banked
  7684  002378  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7685  00237A  0EFF               	movlw	255
  7686  00237C  0100               	movlb	0	; () banked
  7687  00237E  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  7688  002380  0EFF               	movlw	255
  7689  002382  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7690  002384  0EFF               	movlw	255
  7691  002386  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7692  002388  0E00               	movlw	0
  7693  00238A  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7694                           
  7695                           ; BSR set to: 0
  7696  00238C  0E00               	movlw	0
  7697  00238E  0100               	movlb	0	; () banked
  7698  002390  6F68               	movwf	__div_to_l_@quot& (0+255),b
  7699  002392  0E00               	movlw	0
  7700  002394  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7701  002396  0E00               	movlw	0
  7702  002398  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7703  00239A  0E00               	movlw	0
  7704  00239C  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7705                           
  7706                           ; BSR set to: 0
  7707  00239E  0E7F               	movlw	127
  7708  0023A0  0100               	movlb	0	; () banked
  7709  0023A2  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7710                           
  7711                           ; BSR set to: 0
  7712  0023A4  0100               	movlb	0	; () banked
  7713  0023A6  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7714  0023A8  0FA0               	addlw	160
  7715  0023AA  0100               	movlb	0	; () banked
  7716  0023AC  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7717                           
  7718                           ; BSR set to: 0
  7719  0023AE  0E20               	movlw	32
  7720  0023B0  0100               	movlb	0	; () banked
  7721  0023B2  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7722  0023B4                     l5161:
  7723                           
  7724                           ; BSR set to: 0
  7725  0023B4  0100               	movlb	0	; () banked
  7726  0023B6  90D8               	bcf	status,0,c
  7727  0023B8  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7728  0023BA  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7729  0023BC  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7730  0023BE  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7731                           
  7732                           ; BSR set to: 0
  7733  0023C0  0100               	movlb	0	; () banked
  7734  0023C2  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7735  0023C4  0100               	movlb	0	; () banked
  7736  0023C6  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  7737  0023C8  0100               	movlb	0	; () banked
  7738  0023CA  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7739  0023CC  0100               	movlb	0	; () banked
  7740  0023CE  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7741  0023D0  0100               	movlb	0	; () banked
  7742  0023D2  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7743  0023D4  0100               	movlb	0	; () banked
  7744  0023D6  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7745  0023D8  0100               	movlb	0	; () banked
  7746  0023DA  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7747  0023DC  0100               	movlb	0	; () banked
  7748  0023DE  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7749  0023E0  A0D8               	btfss	status,0,c
  7750  0023E2  D012               	goto	l5169
  7751                           
  7752                           ; BSR set to: 0
  7753  0023E4  0100               	movlb	0	; () banked
  7754  0023E6  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7755  0023E8  0100               	movlb	0	; () banked
  7756  0023EA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  7757  0023EC  0100               	movlb	0	; () banked
  7758  0023EE  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7759  0023F0  0100               	movlb	0	; () banked
  7760  0023F2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7761  0023F4  0100               	movlb	0	; () banked
  7762  0023F6  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7763  0023F8  0100               	movlb	0	; () banked
  7764  0023FA  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7765  0023FC  0100               	movlb	0	; () banked
  7766  0023FE  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7767  002400  0100               	movlb	0	; () banked
  7768  002402  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7769                           
  7770                           ; BSR set to: 0
  7771  002404  0100               	movlb	0	; () banked
  7772  002406  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  7773  002408                     l5169:
  7774                           
  7775                           ; BSR set to: 0
  7776  002408  0100               	movlb	0	; () banked
  7777  00240A  90D8               	bcf	status,0,c
  7778  00240C  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  7779  00240E  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7780  002410  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7781  002412  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7782                           
  7783                           ; BSR set to: 0
  7784  002414  0100               	movlb	0	; () banked
  7785  002416  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7786  002418  D7CD               	goto	l5161
  7787                           
  7788                           ; BSR set to: 0
  7789                           
  7790                           ; BSR set to: 0
  7791  00241A  0100               	movlb	0	; () banked
  7792  00241C  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  7793  00241E  D01A               	goto	l5185
  7794                           
  7795                           ; BSR set to: 0
  7796  002420  0100               	movlb	0	; () banked
  7797  002422  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7798  002424  0A80               	xorlw	128
  7799  002426  0F9F               	addlw	159
  7800  002428  B0D8               	btfsc	status,0,c
  7801  00242A  D00A               	goto	l5181
  7802                           
  7803                           ; BSR set to: 0
  7804  00242C  0E00               	movlw	0
  7805  00242E  0100               	movlb	0	; () banked
  7806  002430  6F60               	movwf	?__div_to_l_& (0+255),b
  7807  002432  0E00               	movlw	0
  7808  002434  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7809  002436  0E00               	movlw	0
  7810  002438  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7811  00243A  0E00               	movlw	0
  7812  00243C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7813                           
  7814                           ; BSR set to: 0
  7815  00243E  0012               	return	
  7816  002440                     l5181:
  7817                           
  7818                           ; BSR set to: 0
  7819  002440  0100               	movlb	0	; () banked
  7820  002442  90D8               	bcf	status,0,c
  7821  002444  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7822  002446  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7823  002448  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7824  00244A  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  7825                           
  7826                           ; BSR set to: 0
  7827  00244C  0100               	movlb	0	; () banked
  7828  00244E  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7829  002450  D7F7               	goto	l5181
  7830                           
  7831                           ; BSR set to: 0
  7832  002452  D01B               	goto	l692
  7833  002454                     l5185:
  7834                           
  7835                           ; BSR set to: 0
  7836  002454  0E1F               	movlw	31
  7837  002456  0100               	movlb	0	; () banked
  7838  002458  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7839  00245A  D012               	goto	l5193
  7840                           
  7841                           ; BSR set to: 0
  7842  00245C  0E00               	movlw	0
  7843  00245E  0100               	movlb	0	; () banked
  7844  002460  6F60               	movwf	?__div_to_l_& (0+255),b
  7845  002462  0E00               	movlw	0
  7846  002464  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7847  002466  0E00               	movlw	0
  7848  002468  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7849  00246A  0E00               	movlw	0
  7850  00246C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7851                           
  7852                           ; BSR set to: 0
  7853  00246E  0012               	return	
  7854  002470                     l5191:
  7855                           
  7856                           ; BSR set to: 0
  7857  002470  0100               	movlb	0	; () banked
  7858  002472  90D8               	bcf	status,0,c
  7859  002474  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7860  002476  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7861  002478  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7862  00247A  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7863  00247C  0100               	movlb	0	; () banked
  7864  00247E  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  7865  002480                     l5193:
  7866                           
  7867                           ; BSR set to: 0
  7868  002480  0100               	movlb	0	; () banked
  7869  002482  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7870  002484  0100               	movlb	0	; () banked
  7871  002486  A4D8               	btfss	status,2,c
  7872  002488  D7F3               	goto	l5191
  7873  00248A                     l692:
  7874                           
  7875                           ; BSR set to: 0
  7876  00248A  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  7877  00248E  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7878  002492  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7879  002496  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7880                           
  7881                           ; BSR set to: 0
  7882  00249A  0012               	return		;funcret
  7883  00249C                     __end_of__div_to_l_:
  7884                           	opt stack 0
  7885                           tblptru	equ	0xFF8
  7886                           tblptrh	equ	0xFF7
  7887                           tblptrl	equ	0xFF6
  7888                           tablat	equ	0xFF5
  7889                           prodh	equ	0xFF4
  7890                           prodl	equ	0xFF3
  7891                           intcon	equ	0xFF2
  7892                           postinc0	equ	0xFEE
  7893                           wreg	equ	0xFE8
  7894                           indf1	equ	0xFE7
  7895                           postinc1	equ	0xFE6
  7896                           fsr1h	equ	0xFE2
  7897                           fsr1l	equ	0xFE1
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function ___xxtofl *****************
  7905 ;; Defined at:
  7906 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  sign            1    wreg     unsigned char 
  7909 ;;  val             4    7[BANK0 ] long 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  sign            1   15[BANK0 ] unsigned char 
  7912 ;;  arg             4   17[BANK0 ] unsigned long 
  7913 ;;  exp             1   16[BANK0 ] unsigned char 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  4    7[BANK0 ] unsigned char 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7923 ;;      Params:         0       4       0       0
  7924 ;;      Locals:         0       6       0       0
  7925 ;;      Temps:          0       4       0       0
  7926 ;;      Totals:         0      14       0       0
  7927 ;;Total ram usage:       14 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    3
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_main
  7934 ;;		_LCD_Handler
  7935 ;;		_sprintf
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text23
  7940  001E18                     __ptext23:
  7941                           	opt stack 0
  7942  001E18                     ___xxtofl:
  7943                           	opt stack 27
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;incstack = 0
  7947                           ;___xxtofl@sign stored from wreg
  7948  001E18  0100               	movlb	0	; () banked
  7949  001E1A  6F6F               	movwf	___xxtofl@sign& (0+255),b
  7950  001E1C  0100               	movlb	0	; () banked
  7951  001E1E  516F               	movf	___xxtofl@sign& (0+255),w,b
  7952  001E20  0100               	movlb	0	; () banked
  7953  001E22  B4D8               	btfsc	status,2,c
  7954  001E24  D01E               	goto	l1087
  7955                           
  7956                           ; BSR set to: 0
  7957  001E26  0100               	movlb	0	; () banked
  7958  001E28  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7959  001E2A  D01B               	goto	l1087
  7960                           
  7961                           ; BSR set to: 0
  7962  001E2C  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  7963  001E30  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  7964  001E34  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  7965  001E38  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  7966  001E3C  0100               	movlb	0	; () banked
  7967  001E3E  1F6B               	comf	??___xxtofl& (0+255),f,b
  7968  001E40  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  7969  001E42  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  7970  001E44  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  7971  001E46  2B6B               	incf	??___xxtofl& (0+255),f,b
  7972  001E48  0E00               	movlw	0
  7973  001E4A  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7974  001E4C  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7975  001E4E  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7976  001E50  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  7977  001E54  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  7978  001E58  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  7979  001E5C  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  7980  001E60  D008               	goto	l5319
  7981  001E62                     l1087:
  7982                           
  7983                           ; BSR set to: 0
  7984  001E62  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  7985  001E66  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7986  001E6A  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7987  001E6E  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7988  001E72                     l5319:
  7989                           
  7990                           ; BSR set to: 0
  7991  001E72  0100               	movlb	0	; () banked
  7992  001E74  5167               	movf	___xxtofl@val& (0+255),w,b
  7993  001E76  0100               	movlb	0	; () banked
  7994  001E78  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7995  001E7A  0100               	movlb	0	; () banked
  7996  001E7C  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7997  001E7E  0100               	movlb	0	; () banked
  7998  001E80  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7999  001E82  A4D8               	btfss	status,2,c
  8000  001E84  D00A               	goto	l5325
  8001                           
  8002                           ; BSR set to: 0
  8003  001E86  0E00               	movlw	0
  8004  001E88  0100               	movlb	0	; () banked
  8005  001E8A  6F67               	movwf	?___xxtofl& (0+255),b
  8006  001E8C  0E00               	movlw	0
  8007  001E8E  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  8008  001E90  0E00               	movlw	0
  8009  001E92  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  8010  001E94  0E00               	movlw	0
  8011  001E96  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  8012                           
  8013                           ; BSR set to: 0
  8014  001E98  0012               	return	
  8015  001E9A                     l5325:
  8016                           
  8017                           ; BSR set to: 0
  8018  001E9A  0E96               	movlw	150
  8019  001E9C  0100               	movlb	0	; () banked
  8020  001E9E  6F70               	movwf	___xxtofl@exp& (0+255),b
  8021  001EA0  D008               	goto	l5329
  8022  001EA2                     l5327:
  8023                           
  8024                           ; BSR set to: 0
  8025  001EA2  0100               	movlb	0	; () banked
  8026  001EA4  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8027  001EA6  0100               	movlb	0	; () banked
  8028  001EA8  90D8               	bcf	status,0,c
  8029  001EAA  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8030  001EAC  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8031  001EAE  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8032  001EB0  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8033  001EB2                     l5329:
  8034                           
  8035                           ; BSR set to: 0
  8036  001EB2  0E00               	movlw	0
  8037  001EB4  0100               	movlb	0	; () banked
  8038  001EB6  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8039  001EB8  0100               	movlb	0	; () banked
  8040  001EBA  6F6B               	movwf	??___xxtofl& (0+255),b
  8041  001EBC  0E00               	movlw	0
  8042  001EBE  0100               	movlb	0	; () banked
  8043  001EC0  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8044  001EC2  0100               	movlb	0	; () banked
  8045  001EC4  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8046  001EC6  0E00               	movlw	0
  8047  001EC8  0100               	movlb	0	; () banked
  8048  001ECA  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8049  001ECC  0100               	movlb	0	; () banked
  8050  001ECE  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8051  001ED0  0EFE               	movlw	254
  8052  001ED2  0100               	movlb	0	; () banked
  8053  001ED4  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8054  001ED6  0100               	movlb	0	; () banked
  8055  001ED8  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8056  001EDA  0100               	movlb	0	; () banked
  8057  001EDC  516B               	movf	??___xxtofl& (0+255),w,b
  8058  001EDE  0100               	movlb	0	; () banked
  8059  001EE0  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8060  001EE2  0100               	movlb	0	; () banked
  8061  001EE4  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8062  001EE6  0100               	movlb	0	; () banked
  8063  001EE8  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8064  001EEA  B4D8               	btfsc	status,2,c
  8065  001EEC  D010               	goto	l1094
  8066  001EEE  D7D9               	goto	l5327
  8067  001EF0                     l5331:
  8068                           
  8069                           ; BSR set to: 0
  8070  001EF0  0100               	movlb	0	; () banked
  8071  001EF2  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8072                           
  8073                           ; BSR set to: 0
  8074  001EF4  0E01               	movlw	1
  8075  001EF6  0100               	movlb	0	; () banked
  8076  001EF8  2771               	addwf	___xxtofl@arg& (0+255),f,b
  8077  001EFA  0E00               	movlw	0
  8078  001EFC  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8079  001EFE  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8080  001F00  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083  001F02  0100               	movlb	0	; () banked
  8084  001F04  90D8               	bcf	status,0,c
  8085  001F06  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8086  001F08  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8087  001F0A  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8088  001F0C  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8089  001F0E                     l1094:
  8090                           
  8091                           ; BSR set to: 0
  8092  001F0E  0E00               	movlw	0
  8093  001F10  0100               	movlb	0	; () banked
  8094  001F12  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8095  001F14  0100               	movlb	0	; () banked
  8096  001F16  6F6B               	movwf	??___xxtofl& (0+255),b
  8097  001F18  0E00               	movlw	0
  8098  001F1A  0100               	movlb	0	; () banked
  8099  001F1C  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8100  001F1E  0100               	movlb	0	; () banked
  8101  001F20  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8102  001F22  0E00               	movlw	0
  8103  001F24  0100               	movlb	0	; () banked
  8104  001F26  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8105  001F28  0100               	movlb	0	; () banked
  8106  001F2A  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8107  001F2C  0EFF               	movlw	255
  8108  001F2E  0100               	movlb	0	; () banked
  8109  001F30  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8110  001F32  0100               	movlb	0	; () banked
  8111  001F34  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8112  001F36  0100               	movlb	0	; () banked
  8113  001F38  516B               	movf	??___xxtofl& (0+255),w,b
  8114  001F3A  0100               	movlb	0	; () banked
  8115  001F3C  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8116  001F3E  0100               	movlb	0	; () banked
  8117  001F40  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8118  001F42  0100               	movlb	0	; () banked
  8119  001F44  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8120  001F46  B4D8               	btfsc	status,2,c
  8121  001F48  D009               	goto	l5339
  8122  001F4A  D7D2               	goto	l5331
  8123  001F4C                     l5337:
  8124                           
  8125                           ; BSR set to: 0
  8126  001F4C  0100               	movlb	0	; () banked
  8127  001F4E  0770               	decf	___xxtofl@exp& (0+255),f,b
  8128  001F50  0100               	movlb	0	; () banked
  8129  001F52  90D8               	bcf	status,0,c
  8130  001F54  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  8131  001F56  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8132  001F58  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8133  001F5A  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8134  001F5C                     l5339:
  8135                           
  8136                           ; BSR set to: 0
  8137  001F5C  0100               	movlb	0	; () banked
  8138  001F5E  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8139  001F60  D004               	goto	l1101
  8140                           
  8141                           ; BSR set to: 0
  8142  001F62  0E02               	movlw	2
  8143  001F64  0100               	movlb	0	; () banked
  8144  001F66  6170               	cpfslt	___xxtofl@exp& (0+255),b
  8145  001F68  D7F1               	goto	l5337
  8146  001F6A                     l1101:
  8147                           
  8148                           ; BSR set to: 0
  8149  001F6A  0100               	movlb	0	; () banked
  8150  001F6C  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  8151  001F6E  D009               	goto	l1102
  8152                           
  8153                           ; BSR set to: 0
  8154  001F70  0EFF               	movlw	255
  8155  001F72  0100               	movlb	0	; () banked
  8156  001F74  1771               	andwf	___xxtofl@arg& (0+255),f,b
  8157  001F76  0EFF               	movlw	255
  8158  001F78  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8159  001F7A  0E7F               	movlw	127
  8160  001F7C  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8161  001F7E  0EFF               	movlw	255
  8162  001F80  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8163  001F82                     l1102:
  8164                           
  8165                           ; BSR set to: 0
  8166  001F82  0100               	movlb	0	; () banked
  8167  001F84  90D8               	bcf	status,0,c
  8168  001F86  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  8169  001F88  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  8170  001F8C  0100               	movlb	0	; () banked
  8171  001F8E  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8172  001F90  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8173  001F92  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  8174  001F94  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  8175  001F98  0100               	movlb	0	; () banked
  8176  001F9A  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8177  001F9C  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8178  001F9E  6B6B               	clrf	??___xxtofl& (0+255),b
  8179  001FA0  0100               	movlb	0	; () banked
  8180  001FA2  516B               	movf	??___xxtofl& (0+255),w,b
  8181  001FA4  0100               	movlb	0	; () banked
  8182  001FA6  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  8183  001FA8  0100               	movlb	0	; () banked
  8184  001FAA  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  8185  001FAC  0100               	movlb	0	; () banked
  8186  001FAE  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8187  001FB0  0100               	movlb	0	; () banked
  8188  001FB2  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  8189  001FB4  0100               	movlb	0	; () banked
  8190  001FB6  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8191  001FB8  0100               	movlb	0	; () banked
  8192  001FBA  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  8193  001FBC  0100               	movlb	0	; () banked
  8194  001FBE  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8195                           
  8196                           ; BSR set to: 0
  8197  001FC0  0100               	movlb	0	; () banked
  8198  001FC2  516F               	movf	___xxtofl@sign& (0+255),w,b
  8199  001FC4  0100               	movlb	0	; () banked
  8200  001FC6  B4D8               	btfsc	status,2,c
  8201  001FC8  D005               	goto	l5351
  8202                           
  8203                           ; BSR set to: 0
  8204  001FCA  0100               	movlb	0	; () banked
  8205  001FCC  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8206  001FCE  D002               	goto	l5351
  8207                           
  8208                           ; BSR set to: 0
  8209  001FD0  0100               	movlb	0	; () banked
  8210  001FD2  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8211  001FD4                     l5351:
  8212                           
  8213                           ; BSR set to: 0
  8214  001FD4  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  8215  001FD8  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  8216  001FDC  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  8217  001FE0  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8218  001FE4  0012               	return	
  8219  001FE6                     __end_of___xxtofl:
  8220                           	opt stack 0
  8221                           tblptru	equ	0xFF8
  8222                           tblptrh	equ	0xFF7
  8223                           tblptrl	equ	0xFF6
  8224                           tablat	equ	0xFF5
  8225                           prodh	equ	0xFF4
  8226                           prodl	equ	0xFF3
  8227                           intcon	equ	0xFF2
  8228                           postinc0	equ	0xFEE
  8229                           wreg	equ	0xFE8
  8230                           indf1	equ	0xFE7
  8231                           postinc1	equ	0xFE6
  8232                           fsr1h	equ	0xFE2
  8233                           fsr1l	equ	0xFE1
  8234                           indf2	equ	0xFDF
  8235                           postinc2	equ	0xFDE
  8236                           fsr2h	equ	0xFDA
  8237                           fsr2l	equ	0xFD9
  8238                           status	equ	0xFD8
  8239                           
  8240 ;; *************** function ___llmod *****************
  8241 ;; Defined at:
  8242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  dividend        4    0[BANK0 ] unsigned long 
  8245 ;;  divisor         4    4[BANK0 ] unsigned long 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  counter         1    8[BANK0 ] unsigned char 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  4    0[BANK0 ] unsigned long 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8257 ;;      Params:         0       8       0       0
  8258 ;;      Locals:         0       1       0       0
  8259 ;;      Temps:          0       0       0       0
  8260 ;;      Totals:         0       9       0       0
  8261 ;;Total ram usage:        9 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    3
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_sprintf
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text24
  8272  002E3C                     __ptext24:
  8273                           	opt stack 0
  8274  002E3C                     ___llmod:
  8275                           	opt stack 25
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;incstack = 0
  8279  002E3C  0100               	movlb	0	; () banked
  8280  002E3E  5164               	movf	___llmod@divisor& (0+255),w,b
  8281  002E40  0100               	movlb	0	; () banked
  8282  002E42  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8283  002E44  0100               	movlb	0	; () banked
  8284  002E46  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8285  002E48  0100               	movlb	0	; () banked
  8286  002E4A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8287  002E4C  B4D8               	btfsc	status,2,c
  8288  002E4E  D03A               	goto	l895
  8289                           
  8290                           ; BSR set to: 0
  8291  002E50  0E01               	movlw	1
  8292  002E52  0100               	movlb	0	; () banked
  8293  002E54  6F68               	movwf	___llmod@counter& (0+255),b
  8294  002E56  D008               	goto	l5303
  8295  002E58                     l5301:
  8296                           
  8297                           ; BSR set to: 0
  8298  002E58  0100               	movlb	0	; () banked
  8299  002E5A  90D8               	bcf	status,0,c
  8300  002E5C  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8301  002E5E  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8302  002E60  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8303  002E62  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8304  002E64  0100               	movlb	0	; () banked
  8305  002E66  2B68               	incf	___llmod@counter& (0+255),f,b
  8306  002E68                     l5303:
  8307                           
  8308                           ; BSR set to: 0
  8309  002E68  0100               	movlb	0	; () banked
  8310  002E6A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8311  002E6C  D7F5               	goto	l5301
  8312  002E6E                     l5305:
  8313                           
  8314                           ; BSR set to: 0
  8315  002E6E  0100               	movlb	0	; () banked
  8316  002E70  5164               	movf	___llmod@divisor& (0+255),w,b
  8317  002E72  0100               	movlb	0	; () banked
  8318  002E74  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8319  002E76  0100               	movlb	0	; () banked
  8320  002E78  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8321  002E7A  0100               	movlb	0	; () banked
  8322  002E7C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8323  002E7E  0100               	movlb	0	; () banked
  8324  002E80  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8325  002E82  0100               	movlb	0	; () banked
  8326  002E84  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8327  002E86  0100               	movlb	0	; () banked
  8328  002E88  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8329  002E8A  0100               	movlb	0	; () banked
  8330  002E8C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8331  002E8E  A0D8               	btfss	status,0,c
  8332  002E90  D010               	goto	l5309
  8333                           
  8334                           ; BSR set to: 0
  8335  002E92  0100               	movlb	0	; () banked
  8336  002E94  5164               	movf	___llmod@divisor& (0+255),w,b
  8337  002E96  0100               	movlb	0	; () banked
  8338  002E98  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8339  002E9A  0100               	movlb	0	; () banked
  8340  002E9C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8341  002E9E  0100               	movlb	0	; () banked
  8342  002EA0  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8343  002EA2  0100               	movlb	0	; () banked
  8344  002EA4  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8345  002EA6  0100               	movlb	0	; () banked
  8346  002EA8  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8347  002EAA  0100               	movlb	0	; () banked
  8348  002EAC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8349  002EAE  0100               	movlb	0	; () banked
  8350  002EB0  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8351  002EB2                     l5309:
  8352                           
  8353                           ; BSR set to: 0
  8354  002EB2  0100               	movlb	0	; () banked
  8355  002EB4  90D8               	bcf	status,0,c
  8356  002EB6  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8357  002EB8  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8358  002EBA  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8359  002EBC  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8360                           
  8361                           ; BSR set to: 0
  8362  002EBE  0100               	movlb	0	; () banked
  8363  002EC0  2F68               	decfsz	___llmod@counter& (0+255),f,b
  8364  002EC2  D7D5               	goto	l5305
  8365  002EC4                     l895:
  8366                           
  8367                           ; BSR set to: 0
  8368  002EC4  C060  F060         	movff	___llmod@dividend,?___llmod
  8369  002EC8  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8370  002ECC  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8371  002ED0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8372                           
  8373                           ; BSR set to: 0
  8374  002ED4  0012               	return		;funcret
  8375  002ED6                     __end_of___llmod:
  8376                           	opt stack 0
  8377                           tblptru	equ	0xFF8
  8378                           tblptrh	equ	0xFF7
  8379                           tblptrl	equ	0xFF6
  8380                           tablat	equ	0xFF5
  8381                           prodh	equ	0xFF4
  8382                           prodl	equ	0xFF3
  8383                           intcon	equ	0xFF2
  8384                           postinc0	equ	0xFEE
  8385                           wreg	equ	0xFE8
  8386                           indf1	equ	0xFE7
  8387                           postinc1	equ	0xFE6
  8388                           fsr1h	equ	0xFE2
  8389                           fsr1l	equ	0xFE1
  8390                           indf2	equ	0xFDF
  8391                           postinc2	equ	0xFDE
  8392                           fsr2h	equ	0xFDA
  8393                           fsr2l	equ	0xFD9
  8394                           status	equ	0xFD8
  8395                           
  8396 ;; *************** function ___lldiv *****************
  8397 ;; Defined at:
  8398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  dividend        4    0[BANK0 ] unsigned long 
  8401 ;;  divisor         4    4[BANK0 ] unsigned long 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;  quotient        4    8[BANK0 ] unsigned long 
  8404 ;;  counter         1   12[BANK0 ] unsigned char 
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  4    0[BANK0 ] unsigned long 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8414 ;;      Params:         0       8       0       0
  8415 ;;      Locals:         0       5       0       0
  8416 ;;      Temps:          0       0       0       0
  8417 ;;      Totals:         0      13       0       0
  8418 ;;Total ram usage:       13 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    3
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_sprintf
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text25
  8429  002C36                     __ptext25:
  8430                           	opt stack 0
  8431  002C36                     ___lldiv:
  8432                           	opt stack 25
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;incstack = 0
  8436  002C36  0E00               	movlw	0
  8437  002C38  0100               	movlb	0	; () banked
  8438  002C3A  6F68               	movwf	___lldiv@quotient& (0+255),b
  8439  002C3C  0E00               	movlw	0
  8440  002C3E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8441  002C40  0E00               	movlw	0
  8442  002C42  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8443  002C44  0E00               	movlw	0
  8444  002C46  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8445                           
  8446                           ; BSR set to: 0
  8447  002C48  0100               	movlb	0	; () banked
  8448  002C4A  5164               	movf	___lldiv@divisor& (0+255),w,b
  8449  002C4C  0100               	movlb	0	; () banked
  8450  002C4E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8451  002C50  0100               	movlb	0	; () banked
  8452  002C52  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8453  002C54  0100               	movlb	0	; () banked
  8454  002C56  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8455  002C58  B4D8               	btfsc	status,2,c
  8456  002C5A  D042               	goto	l885
  8457                           
  8458                           ; BSR set to: 0
  8459  002C5C  0E01               	movlw	1
  8460  002C5E  0100               	movlb	0	; () banked
  8461  002C60  6F6C               	movwf	___lldiv@counter& (0+255),b
  8462  002C62  D008               	goto	l5283
  8463  002C64                     l5281:
  8464                           
  8465                           ; BSR set to: 0
  8466  002C64  0100               	movlb	0	; () banked
  8467  002C66  90D8               	bcf	status,0,c
  8468  002C68  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8469  002C6A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8470  002C6C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8471  002C6E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8472  002C70  0100               	movlb	0	; () banked
  8473  002C72  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8474  002C74                     l5283:
  8475                           
  8476                           ; BSR set to: 0
  8477  002C74  0100               	movlb	0	; () banked
  8478  002C76  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8479  002C78  D7F5               	goto	l5281
  8480  002C7A                     l5285:
  8481                           
  8482                           ; BSR set to: 0
  8483  002C7A  0100               	movlb	0	; () banked
  8484  002C7C  90D8               	bcf	status,0,c
  8485  002C7E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8486  002C80  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8487  002C82  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8488  002C84  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8489                           
  8490                           ; BSR set to: 0
  8491  002C86  0100               	movlb	0	; () banked
  8492  002C88  5164               	movf	___lldiv@divisor& (0+255),w,b
  8493  002C8A  0100               	movlb	0	; () banked
  8494  002C8C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8495  002C8E  0100               	movlb	0	; () banked
  8496  002C90  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8497  002C92  0100               	movlb	0	; () banked
  8498  002C94  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8499  002C96  0100               	movlb	0	; () banked
  8500  002C98  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8501  002C9A  0100               	movlb	0	; () banked
  8502  002C9C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8503  002C9E  0100               	movlb	0	; () banked
  8504  002CA0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8505  002CA2  0100               	movlb	0	; () banked
  8506  002CA4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8507  002CA6  A0D8               	btfss	status,0,c
  8508  002CA8  D012               	goto	l5293
  8509                           
  8510                           ; BSR set to: 0
  8511  002CAA  0100               	movlb	0	; () banked
  8512  002CAC  5164               	movf	___lldiv@divisor& (0+255),w,b
  8513  002CAE  0100               	movlb	0	; () banked
  8514  002CB0  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8515  002CB2  0100               	movlb	0	; () banked
  8516  002CB4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8517  002CB6  0100               	movlb	0	; () banked
  8518  002CB8  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8519  002CBA  0100               	movlb	0	; () banked
  8520  002CBC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8521  002CBE  0100               	movlb	0	; () banked
  8522  002CC0  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8523  002CC2  0100               	movlb	0	; () banked
  8524  002CC4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8525  002CC6  0100               	movlb	0	; () banked
  8526  002CC8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8527                           
  8528                           ; BSR set to: 0
  8529  002CCA  0100               	movlb	0	; () banked
  8530  002CCC  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8531  002CCE                     l5293:
  8532                           
  8533                           ; BSR set to: 0
  8534  002CCE  0100               	movlb	0	; () banked
  8535  002CD0  90D8               	bcf	status,0,c
  8536  002CD2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8537  002CD4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8538  002CD6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8539  002CD8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8540                           
  8541                           ; BSR set to: 0
  8542  002CDA  0100               	movlb	0	; () banked
  8543  002CDC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8544  002CDE  D7CD               	goto	l5285
  8545  002CE0                     l885:
  8546                           
  8547                           ; BSR set to: 0
  8548  002CE0  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8549  002CE4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8550  002CE8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8551  002CEC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8552                           
  8553                           ; BSR set to: 0
  8554  002CF0  0012               	return		;funcret
  8555  002CF2                     __end_of___lldiv:
  8556                           	opt stack 0
  8557                           tblptru	equ	0xFF8
  8558                           tblptrh	equ	0xFF7
  8559                           tblptrl	equ	0xFF6
  8560                           tablat	equ	0xFF5
  8561                           prodh	equ	0xFF4
  8562                           prodl	equ	0xFF3
  8563                           intcon	equ	0xFF2
  8564                           postinc0	equ	0xFEE
  8565                           wreg	equ	0xFE8
  8566                           indf1	equ	0xFE7
  8567                           postinc1	equ	0xFE6
  8568                           fsr1h	equ	0xFE2
  8569                           fsr1l	equ	0xFE1
  8570                           indf2	equ	0xFDF
  8571                           postinc2	equ	0xFDE
  8572                           fsr2h	equ	0xFDA
  8573                           fsr2l	equ	0xFD9
  8574                           status	equ	0xFD8
  8575                           
  8576 ;; *************** function ___fltol *****************
  8577 ;; Defined at:
  8578 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  f1              4   55[BANK0 ] unsigned long 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  exp1            1   64[BANK0 ] unsigned char 
  8583 ;;  sign1           1   63[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  4   55[BANK0 ] long 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8593 ;;      Params:         0       4       0       0
  8594 ;;      Locals:         0       2       0       0
  8595 ;;      Temps:          0       4       0       0
  8596 ;;      Totals:         0      10       0       0
  8597 ;;Total ram usage:       10 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    3
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;;		_sprintf
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text26
  8609  00289C                     __ptext26:
  8610                           	opt stack 0
  8611  00289C                     ___fltol:
  8612                           	opt stack 27
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;incstack = 0
  8616  00289C  0100               	movlb	0	; () banked
  8617  00289E  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8618  0028A0  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8619  0028A2  0100               	movlb	0	; () banked
  8620  0028A4  6FA0               	movwf	___fltol@exp1& (0+255),b
  8621  0028A6  0100               	movlb	0	; () banked
  8622  0028A8  51A0               	movf	___fltol@exp1& (0+255),w,b
  8623  0028AA  A4D8               	btfss	status,2,c
  8624  0028AC  D00A               	goto	l5237
  8625                           
  8626                           ; BSR set to: 0
  8627  0028AE  0E00               	movlw	0
  8628  0028B0  0100               	movlb	0	; () banked
  8629  0028B2  6F97               	movwf	?___fltol& (0+255),b
  8630  0028B4  0E00               	movlw	0
  8631  0028B6  6F98               	movwf	(?___fltol+1)& (0+255),b
  8632  0028B8  0E00               	movlw	0
  8633  0028BA  6F99               	movwf	(?___fltol+2)& (0+255),b
  8634  0028BC  0E00               	movlw	0
  8635  0028BE  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638  0028C0  0012               	return	
  8639  0028C2                     l5237:
  8640                           
  8641                           ; BSR set to: 0
  8642  0028C2  C097  F09B         	movff	___fltol@f1,??___fltol
  8643  0028C6  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  8644  0028CA  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  8645  0028CE  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  8646  0028D2  0E20               	movlw	32
  8647  0028D4  D006               	goto	u6140
  8648  0028D6                     u6145:
  8649  0028D6  0100               	movlb	0	; () banked
  8650  0028D8  90D8               	bcf	status,0,c
  8651  0028DA  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  8652  0028DC  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  8653  0028DE  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  8654  0028E0  339B               	rrcf	??___fltol& (0+255),f,b
  8655  0028E2                     u6140:
  8656  0028E2  2EE8               	decfsz	wreg,f,c
  8657  0028E4  D7F8               	goto	u6145
  8658  0028E6  0100               	movlb	0	; () banked
  8659  0028E8  519B               	movf	??___fltol& (0+255),w,b
  8660  0028EA  0100               	movlb	0	; () banked
  8661  0028EC  6F9F               	movwf	___fltol@sign1& (0+255),b
  8662                           
  8663                           ; BSR set to: 0
  8664  0028EE  0100               	movlb	0	; () banked
  8665  0028F0  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  8666                           
  8667                           ; BSR set to: 0
  8668  0028F2  0EFF               	movlw	255
  8669  0028F4  0100               	movlb	0	; () banked
  8670  0028F6  1797               	andwf	___fltol@f1& (0+255),f,b
  8671  0028F8  0EFF               	movlw	255
  8672  0028FA  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  8673  0028FC  0EFF               	movlw	255
  8674  0028FE  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  8675  002900  0E00               	movlw	0
  8676  002902  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8677                           
  8678                           ; BSR set to: 0
  8679  002904  0E96               	movlw	150
  8680  002906  0100               	movlb	0	; () banked
  8681  002908  5FA0               	subwf	___fltol@exp1& (0+255),f,b
  8682                           
  8683                           ; BSR set to: 0
  8684  00290A  0100               	movlb	0	; () banked
  8685  00290C  AFA0               	btfss	___fltol@exp1& (0+255),7,b
  8686  00290E  D01A               	goto	l5257
  8687                           
  8688                           ; BSR set to: 0
  8689  002910  0100               	movlb	0	; () banked
  8690  002912  51A0               	movf	___fltol@exp1& (0+255),w,b
  8691  002914  0A80               	xorlw	128
  8692  002916  0F97               	addlw	151
  8693  002918  B0D8               	btfsc	status,0,c
  8694  00291A  D00A               	goto	l5253
  8695                           
  8696                           ; BSR set to: 0
  8697  00291C  0E00               	movlw	0
  8698  00291E  0100               	movlb	0	; () banked
  8699  002920  6F97               	movwf	?___fltol& (0+255),b
  8700  002922  0E00               	movlw	0
  8701  002924  6F98               	movwf	(?___fltol+1)& (0+255),b
  8702  002926  0E00               	movlw	0
  8703  002928  6F99               	movwf	(?___fltol+2)& (0+255),b
  8704  00292A  0E00               	movlw	0
  8705  00292C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708  00292E  0012               	return	
  8709  002930                     l5253:
  8710                           
  8711                           ; BSR set to: 0
  8712  002930  0100               	movlb	0	; () banked
  8713  002932  90D8               	bcf	status,0,c
  8714  002934  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8715  002936  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8716  002938  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8717  00293A  3397               	rrcf	___fltol@f1& (0+255),f,b
  8718                           
  8719                           ; BSR set to: 0
  8720  00293C  0100               	movlb	0	; () banked
  8721  00293E  3FA0               	incfsz	___fltol@exp1& (0+255),f,b
  8722  002940  D7F7               	goto	l5253
  8723                           
  8724                           ; BSR set to: 0
  8725  002942  D01B               	goto	l5267
  8726  002944                     l5257:
  8727                           
  8728                           ; BSR set to: 0
  8729  002944  0E1F               	movlw	31
  8730  002946  0100               	movlb	0	; () banked
  8731  002948  65A0               	cpfsgt	___fltol@exp1& (0+255),b
  8732  00294A  D012               	goto	l5265
  8733                           
  8734                           ; BSR set to: 0
  8735  00294C  0E00               	movlw	0
  8736  00294E  0100               	movlb	0	; () banked
  8737  002950  6F97               	movwf	?___fltol& (0+255),b
  8738  002952  0E00               	movlw	0
  8739  002954  6F98               	movwf	(?___fltol+1)& (0+255),b
  8740  002956  0E00               	movlw	0
  8741  002958  6F99               	movwf	(?___fltol+2)& (0+255),b
  8742  00295A  0E00               	movlw	0
  8743  00295C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8744                           
  8745                           ; BSR set to: 0
  8746  00295E  0012               	return	
  8747  002960                     l5263:
  8748                           
  8749                           ; BSR set to: 0
  8750  002960  0100               	movlb	0	; () banked
  8751  002962  90D8               	bcf	status,0,c
  8752  002964  3797               	rlcf	___fltol@f1& (0+255),f,b
  8753  002966  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8754  002968  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8755  00296A  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8756  00296C  0100               	movlb	0	; () banked
  8757  00296E  07A0               	decf	___fltol@exp1& (0+255),f,b
  8758  002970                     l5265:
  8759                           
  8760                           ; BSR set to: 0
  8761  002970  0100               	movlb	0	; () banked
  8762  002972  51A0               	movf	___fltol@exp1& (0+255),w,b
  8763  002974  0100               	movlb	0	; () banked
  8764  002976  A4D8               	btfss	status,2,c
  8765  002978  D7F3               	goto	l5263
  8766  00297A                     l5267:
  8767                           
  8768                           ; BSR set to: 0
  8769  00297A  0100               	movlb	0	; () banked
  8770  00297C  519F               	movf	___fltol@sign1& (0+255),w,b
  8771  00297E  0100               	movlb	0	; () banked
  8772  002980  B4D8               	btfsc	status,2,c
  8773  002982  D009               	goto	l5271
  8774                           
  8775                           ; BSR set to: 0
  8776  002984  0100               	movlb	0	; () banked
  8777  002986  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  8778  002988  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  8779  00298A  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  8780  00298C  6D97               	negf	___fltol@f1& (0+255),b
  8781  00298E  0E00               	movlw	0
  8782  002990  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8783  002992  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8784  002994  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8785  002996                     l5271:
  8786                           
  8787                           ; BSR set to: 0
  8788  002996  C097  F097         	movff	___fltol@f1,?___fltol
  8789  00299A  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  8790  00299E  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  8791  0029A2  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  8792  0029A6  0012               	return	
  8793  0029A8                     __end_of___fltol:
  8794                           	opt stack 0
  8795                           tblptru	equ	0xFF8
  8796                           tblptrh	equ	0xFF7
  8797                           tblptrl	equ	0xFF6
  8798                           tablat	equ	0xFF5
  8799                           prodh	equ	0xFF4
  8800                           prodl	equ	0xFF3
  8801                           intcon	equ	0xFF2
  8802                           postinc0	equ	0xFEE
  8803                           wreg	equ	0xFE8
  8804                           indf1	equ	0xFE7
  8805                           postinc1	equ	0xFE6
  8806                           fsr1h	equ	0xFE2
  8807                           fsr1l	equ	0xFE1
  8808                           indf2	equ	0xFDF
  8809                           postinc2	equ	0xFDE
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8
  8813                           
  8814 ;; *************** function ___flsub *****************
  8815 ;; Defined at:
  8816 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  b               4   79[BANK0 ] long 
  8819 ;;  a               4   83[BANK0 ] long 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  4   79[BANK0 ] long 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8831 ;;      Params:         0       8       0       0
  8832 ;;      Locals:         0       0       0       0
  8833 ;;      Temps:          0       0       0       0
  8834 ;;      Totals:         0       8       0       0
  8835 ;;Total ram usage:        8 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    4
  8838 ;; This function calls:
  8839 ;;		___fladd
  8840 ;; This function is called by:
  8841 ;;		_sprintf
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text27
  8846  0031AE                     __ptext27:
  8847                           	opt stack 0
  8848  0031AE                     ___flsub:
  8849                           	opt stack 24
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;incstack = 0
  8853  0031AE  0E00               	movlw	0
  8854  0031B0  0100               	movlb	0	; () banked
  8855  0031B2  1BB3               	xorwf	___flsub@a& (0+255),f,b
  8856  0031B4  0E00               	movlw	0
  8857  0031B6  1BB4               	xorwf	(___flsub@a+1)& (0+255),f,b
  8858  0031B8  0E00               	movlw	0
  8859  0031BA  1BB5               	xorwf	(___flsub@a+2)& (0+255),f,b
  8860  0031BC  0E80               	movlw	128
  8861  0031BE  1BB6               	xorwf	(___flsub@a+3)& (0+255),f,b
  8862                           
  8863                           ; BSR set to: 0
  8864  0031C0  C0AF  F09B         	movff	___flsub@b,___fladd@b
  8865  0031C4  C0B0  F09C         	movff	___flsub@b+1,___fladd@b+1
  8866  0031C8  C0B1  F09D         	movff	___flsub@b+2,___fladd@b+2
  8867  0031CC  C0B2  F09E         	movff	___flsub@b+3,___fladd@b+3
  8868  0031D0  C0B3  F09F         	movff	___flsub@a,___fladd@a
  8869  0031D4  C0B4  F0A0         	movff	___flsub@a+1,___fladd@a+1
  8870  0031D8  C0B5  F0A1         	movff	___flsub@a+2,___fladd@a+2
  8871  0031DC  C0B6  F0A2         	movff	___flsub@a+3,___fladd@a+3
  8872  0031E0  ECFF  F006         	call	___fladd	;wreg free
  8873  0031E4  C09B  F0AF         	movff	?___fladd,?___flsub
  8874  0031E8  C09C  F0B0         	movff	?___fladd+1,?___flsub+1
  8875  0031EC  C09D  F0B1         	movff	?___fladd+2,?___flsub+2
  8876  0031F0  C09E  F0B2         	movff	?___fladd+3,?___flsub+3
  8877  0031F4  0012               	return	
  8878  0031F6                     __end_of___flsub:
  8879                           	opt stack 0
  8880                           tblptru	equ	0xFF8
  8881                           tblptrh	equ	0xFF7
  8882                           tblptrl	equ	0xFF6
  8883                           tablat	equ	0xFF5
  8884                           prodh	equ	0xFF4
  8885                           prodl	equ	0xFF3
  8886                           intcon	equ	0xFF2
  8887                           postinc0	equ	0xFEE
  8888                           wreg	equ	0xFE8
  8889                           indf1	equ	0xFE7
  8890                           postinc1	equ	0xFE6
  8891                           fsr1h	equ	0xFE2
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           postinc2	equ	0xFDE
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function ___fladd *****************
  8900 ;; Defined at:
  8901 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  b               4   59[BANK0 ] long 
  8904 ;;  a               4   63[BANK0 ] long 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  grs             1   78[BANK0 ] unsigned char 
  8907 ;;  bexp            1   77[BANK0 ] unsigned char 
  8908 ;;  aexp            1   76[BANK0 ] unsigned char 
  8909 ;;  signs           1   75[BANK0 ] unsigned char 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  4   59[BANK0 ] unsigned char 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8919 ;;      Params:         0       8       0       0
  8920 ;;      Locals:         0       4       0       0
  8921 ;;      Temps:          0       8       0       0
  8922 ;;      Totals:         0      20       0       0
  8923 ;;Total ram usage:       20 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    3
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_sprintf
  8930 ;;		___flsub
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text28
  8935  000DFE                     __ptext28:
  8936                           	opt stack 0
  8937  000DFE                     ___fladd:
  8938                           	opt stack 24
  8939                           
  8940                           ;incstack = 0
  8941  000DFE  0100               	movlb	0	; () banked
  8942  000E00  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8943  000E02  0B80               	andlw	128
  8944  000E04  0100               	movlb	0	; () banked
  8945  000E06  6FAB               	movwf	___fladd@signs& (0+255),b
  8946  000E08  0100               	movlb	0	; () banked
  8947  000E0A  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8948  000E0C  259E               	addwf	(___fladd@b+3)& (0+255),w,b
  8949  000E0E  0100               	movlb	0	; () banked
  8950  000E10  6FAD               	movwf	___fladd@bexp& (0+255),b
  8951                           
  8952                           ; BSR set to: 0
  8953  000E12  0100               	movlb	0	; () banked
  8954  000E14  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  8955  000E16  D002               	goto	l4569
  8956                           
  8957                           ; BSR set to: 0
  8958  000E18  0100               	movlb	0	; () banked
  8959  000E1A  81AD               	bsf	___fladd@bexp& (0+255),0,b
  8960  000E1C                     l4569:
  8961                           
  8962                           ; BSR set to: 0
  8963  000E1C  0100               	movlb	0	; () banked
  8964  000E1E  51AD               	movf	___fladd@bexp& (0+255),w,b
  8965  000E20  0100               	movlb	0	; () banked
  8966  000E22  B4D8               	btfsc	status,2,c
  8967  000E24  D012               	goto	l4579
  8968                           
  8969                           ; BSR set to: 0
  8970  000E26  0100               	movlb	0	; () banked
  8971  000E28  29AD               	incf	___fladd@bexp& (0+255),w,b
  8972  000E2A  A4D8               	btfss	status,2,c
  8973  000E2C  D009               	goto	l4575
  8974                           
  8975                           ; BSR set to: 0
  8976  000E2E  0E00               	movlw	0
  8977  000E30  0100               	movlb	0	; () banked
  8978  000E32  6F9B               	movwf	___fladd@b& (0+255),b
  8979  000E34  0E00               	movlw	0
  8980  000E36  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  8981  000E38  0E00               	movlw	0
  8982  000E3A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  8983  000E3C  0E00               	movlw	0
  8984  000E3E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  8985  000E40                     l4575:
  8986                           
  8987                           ; BSR set to: 0
  8988  000E40  0100               	movlb	0	; () banked
  8989  000E42  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  8990                           
  8991                           ; BSR set to: 0
  8992  000E44  0E00               	movlw	0
  8993  000E46  0100               	movlb	0	; () banked
  8994  000E48  D008               	goto	L9
  8995  000E4A                     l4579:
  8996                           
  8997                           ; BSR set to: 0
  8998  000E4A  0E00               	movlw	0
  8999  000E4C  0100               	movlb	0	; () banked
  9000  000E4E  6F9B               	movwf	___fladd@b& (0+255),b
  9001  000E50  0E00               	movlw	0
  9002  000E52  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9003  000E54  0E00               	movlw	0
  9004  000E56  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9005  000E58  0E00               	movlw	0
  9006  000E5A                     L9:
  9007  000E5A  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9008                           
  9009                           ; BSR set to: 0
  9010                           
  9011                           ; BSR set to: 0
  9012  000E5C  0100               	movlb	0	; () banked
  9013  000E5E  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9014  000E60  0B80               	andlw	128
  9015  000E62  0100               	movlb	0	; () banked
  9016  000E64  6FAC               	movwf	___fladd@aexp& (0+255),b
  9017                           
  9018                           ; BSR set to: 0
  9019  000E66  0100               	movlb	0	; () banked
  9020  000E68  51AB               	movf	___fladd@signs& (0+255),w,b
  9021  000E6A  0100               	movlb	0	; () banked
  9022  000E6C  19AC               	xorwf	___fladd@aexp& (0+255),w,b
  9023  000E6E  B4D8               	btfsc	status,2,c
  9024  000E70  D002               	goto	l4587
  9025                           
  9026                           ; BSR set to: 0
  9027  000E72  0100               	movlb	0	; () banked
  9028  000E74  8DAB               	bsf	___fladd@signs& (0+255),6,b
  9029  000E76                     l4587:
  9030                           
  9031                           ; BSR set to: 0
  9032  000E76  0100               	movlb	0	; () banked
  9033  000E78  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9034  000E7A  25A2               	addwf	(___fladd@a+3)& (0+255),w,b
  9035  000E7C  0100               	movlb	0	; () banked
  9036  000E7E  6FAC               	movwf	___fladd@aexp& (0+255),b
  9037                           
  9038                           ; BSR set to: 0
  9039  000E80  0100               	movlb	0	; () banked
  9040  000E82  AFA1               	btfss	(___fladd@a+2)& (0+255),7,b
  9041  000E84  D002               	goto	l4593
  9042                           
  9043                           ; BSR set to: 0
  9044  000E86  0100               	movlb	0	; () banked
  9045  000E88  81AC               	bsf	___fladd@aexp& (0+255),0,b
  9046  000E8A                     l4593:
  9047                           
  9048                           ; BSR set to: 0
  9049  000E8A  0100               	movlb	0	; () banked
  9050  000E8C  51AC               	movf	___fladd@aexp& (0+255),w,b
  9051  000E8E  0100               	movlb	0	; () banked
  9052  000E90  B4D8               	btfsc	status,2,c
  9053  000E92  D012               	goto	l4603
  9054                           
  9055                           ; BSR set to: 0
  9056  000E94  0100               	movlb	0	; () banked
  9057  000E96  29AC               	incf	___fladd@aexp& (0+255),w,b
  9058  000E98  A4D8               	btfss	status,2,c
  9059  000E9A  D009               	goto	l4599
  9060                           
  9061                           ; BSR set to: 0
  9062  000E9C  0E00               	movlw	0
  9063  000E9E  0100               	movlb	0	; () banked
  9064  000EA0  6F9F               	movwf	___fladd@a& (0+255),b
  9065  000EA2  0E00               	movlw	0
  9066  000EA4  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9067  000EA6  0E00               	movlw	0
  9068  000EA8  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9069  000EAA  0E00               	movlw	0
  9070  000EAC  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9071  000EAE                     l4599:
  9072                           
  9073                           ; BSR set to: 0
  9074  000EAE  0100               	movlb	0	; () banked
  9075  000EB0  8FA1               	bsf	(___fladd@a+2)& (0+255),7,b
  9076                           
  9077                           ; BSR set to: 0
  9078  000EB2  0E00               	movlw	0
  9079  000EB4  0100               	movlb	0	; () banked
  9080  000EB6  D008               	goto	L10
  9081  000EB8                     l4603:
  9082                           
  9083                           ; BSR set to: 0
  9084  000EB8  0E00               	movlw	0
  9085  000EBA  0100               	movlb	0	; () banked
  9086  000EBC  6F9F               	movwf	___fladd@a& (0+255),b
  9087  000EBE  0E00               	movlw	0
  9088  000EC0  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9089  000EC2  0E00               	movlw	0
  9090  000EC4  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9091  000EC6  0E00               	movlw	0
  9092  000EC8                     L10:
  9093  000EC8  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096                           
  9097                           ; BSR set to: 0
  9098  000ECA  0100               	movlb	0	; () banked
  9099  000ECC  51AD               	movf	___fladd@bexp& (0+255),w,b
  9100  000ECE  0100               	movlb	0	; () banked
  9101  000ED0  5DAC               	subwf	___fladd@aexp& (0+255),w,b
  9102  000ED2  B0D8               	btfsc	status,0,c
  9103  000ED4  D024               	goto	l4641
  9104                           
  9105                           ; BSR set to: 0
  9106  000ED6  0100               	movlb	0	; () banked
  9107  000ED8  ADAB               	btfss	___fladd@signs& (0+255),6,b
  9108  000EDA  D003               	goto	l4611
  9109                           
  9110                           ; BSR set to: 0
  9111  000EDC  0E80               	movlw	128
  9112  000EDE  0100               	movlb	0	; () banked
  9113  000EE0  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9114  000EE2                     l4611:
  9115                           
  9116                           ; BSR set to: 0
  9117  000EE2  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
  9118                           
  9119                           ; BSR set to: 0
  9120  000EE6  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9121                           
  9122                           ; BSR set to: 0
  9123  000EEA  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
  9124                           
  9125                           ; BSR set to: 0
  9126  000EEE  C09B  F0AE         	movff	___fladd@b,___fladd@grs
  9127                           
  9128                           ; BSR set to: 0
  9129  000EF2  C09F  F09B         	movff	___fladd@a,___fladd@b
  9130                           
  9131                           ; BSR set to: 0
  9132  000EF6  C0AE  F09F         	movff	___fladd@grs,___fladd@a
  9133                           
  9134                           ; BSR set to: 0
  9135  000EFA  C09C  F0AE         	movff	___fladd@b+1,___fladd@grs
  9136                           
  9137                           ; BSR set to: 0
  9138  000EFE  C0A0  F09C         	movff	___fladd@a+1,___fladd@b+1
  9139                           
  9140                           ; BSR set to: 0
  9141  000F02  C0AE  F0A0         	movff	___fladd@grs,___fladd@a+1
  9142                           
  9143                           ; BSR set to: 0
  9144  000F06  C09D  F0AE         	movff	___fladd@b+2,___fladd@grs
  9145                           
  9146                           ; BSR set to: 0
  9147  000F0A  C0A1  F09D         	movff	___fladd@a+2,___fladd@b+2
  9148                           
  9149                           ; BSR set to: 0
  9150  000F0E  C0AE  F0A1         	movff	___fladd@grs,___fladd@a+2
  9151                           
  9152                           ; BSR set to: 0
  9153  000F12  C09E  F0AE         	movff	___fladd@b+3,___fladd@grs
  9154                           
  9155                           ; BSR set to: 0
  9156  000F16  C0A2  F09E         	movff	___fladd@a+3,___fladd@b+3
  9157                           
  9158                           ; BSR set to: 0
  9159  000F1A  C0AE  F0A2         	movff	___fladd@grs,___fladd@a+3
  9160  000F1E                     l4641:
  9161                           
  9162                           ; BSR set to: 0
  9163  000F1E  0E00               	movlw	0
  9164  000F20  0100               	movlb	0	; () banked
  9165  000F22  6FAE               	movwf	___fladd@grs& (0+255),b
  9166                           
  9167                           ; BSR set to: 0
  9168  000F24  0100               	movlb	0	; () banked
  9169  000F26  51AD               	movf	___fladd@bexp& (0+255),w,b
  9170  000F28  0100               	movlb	0	; () banked
  9171  000F2A  6FA3               	movwf	??___fladd& (0+255),b
  9172  000F2C  6BA4               	clrf	(??___fladd+1)& (0+255),b
  9173  000F2E  0100               	movlb	0	; () banked
  9174  000F30  1FA3               	comf	??___fladd& (0+255),f,b
  9175  000F32  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9176  000F34  4BA3               	infsnz	??___fladd& (0+255),f,b
  9177  000F36  2BA4               	incf	(??___fladd+1)& (0+255),f,b
  9178  000F38  0100               	movlb	0	; () banked
  9179  000F3A  51AC               	movf	___fladd@aexp& (0+255),w,b
  9180  000F3C  0100               	movlb	0	; () banked
  9181  000F3E  6FA5               	movwf	(??___fladd+2)& (0+255),b
  9182  000F40  6BA6               	clrf	(??___fladd+3)& (0+255),b
  9183  000F42  0100               	movlb	0	; () banked
  9184  000F44  51A3               	movf	??___fladd& (0+255),w,b
  9185  000F46  0100               	movlb	0	; () banked
  9186  000F48  27A5               	addwf	(??___fladd+2)& (0+255),f,b
  9187  000F4A  0100               	movlb	0	; () banked
  9188  000F4C  51A4               	movf	(??___fladd+1)& (0+255),w,b
  9189  000F4E  0100               	movlb	0	; () banked
  9190  000F50  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9191  000F52  0100               	movlb	0	; () banked
  9192  000F54  BFA6               	btfsc	(??___fladd+3)& (0+255),7,b
  9193  000F56  D03D               	goto	l980
  9194  000F58  0100               	movlb	0	; () banked
  9195  000F5A  51A6               	movf	(??___fladd+3)& (0+255),w,b
  9196  000F5C  E105               	bnz	u5190
  9197  000F5E  0E1A               	movlw	26
  9198  000F60  0100               	movlb	0	; () banked
  9199  000F62  5DA5               	subwf	(??___fladd+2)& (0+255),w,b
  9200  000F64  A0D8               	btfss	status,0,c
  9201  000F66  D035               	goto	l980
  9202  000F68                     u5190:
  9203                           
  9204                           ; BSR set to: 0
  9205  000F68  0100               	movlb	0	; () banked
  9206  000F6A  519B               	movf	___fladd@b& (0+255),w,b
  9207  000F6C  0100               	movlb	0	; () banked
  9208  000F6E  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9209  000F70  0100               	movlb	0	; () banked
  9210  000F72  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9211  000F74  0100               	movlb	0	; () banked
  9212  000F76  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9213  000F78  B4D8               	btfsc	status,2,c
  9214  000F7A  D002               	goto	u5200
  9215  000F7C  0E01               	movlw	1
  9216  000F7E  D001               	goto	u5210
  9217  000F80                     u5200:
  9218  000F80  0E00               	movlw	0
  9219  000F82                     u5210:
  9220  000F82  0100               	movlb	0	; () banked
  9221  000F84  6FAE               	movwf	___fladd@grs& (0+255),b
  9222                           
  9223                           ; BSR set to: 0
  9224  000F86  0E00               	movlw	0
  9225  000F88  0100               	movlb	0	; () banked
  9226  000F8A  6F9B               	movwf	___fladd@b& (0+255),b
  9227  000F8C  0E00               	movlw	0
  9228  000F8E  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9229  000F90  0E00               	movlw	0
  9230  000F92  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9231  000F94  0E00               	movlw	0
  9232  000F96  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9233                           
  9234                           ; BSR set to: 0
  9235  000F98  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9236  000F9C  D020               	goto	l979
  9237  000F9E                     l981:
  9238                           
  9239                           ; BSR set to: 0
  9240  000F9E  0100               	movlb	0	; () banked
  9241  000FA0  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9242  000FA2  D007               	goto	l4653
  9243                           
  9244                           ; BSR set to: 0
  9245  000FA4  0100               	movlb	0	; () banked
  9246  000FA6  90D8               	bcf	status,0,c
  9247  000FA8  31AE               	rrcf	___fladd@grs& (0+255),w,b
  9248  000FAA  0901               	iorlw	1
  9249  000FAC  0100               	movlb	0	; () banked
  9250  000FAE  6FAE               	movwf	___fladd@grs& (0+255),b
  9251  000FB0  D003               	goto	l4655
  9252  000FB2                     l4653:
  9253                           
  9254                           ; BSR set to: 0
  9255  000FB2  0100               	movlb	0	; () banked
  9256  000FB4  90D8               	bcf	status,0,c
  9257  000FB6  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9258  000FB8                     l4655:
  9259                           
  9260                           ; BSR set to: 0
  9261  000FB8  0100               	movlb	0	; () banked
  9262  000FBA  A19B               	btfss	___fladd@b& (0+255),0,b
  9263  000FBC  D002               	goto	l4659
  9264                           
  9265                           ; BSR set to: 0
  9266  000FBE  0100               	movlb	0	; () banked
  9267  000FC0  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9268  000FC2                     l4659:
  9269                           
  9270                           ; BSR set to: 0
  9271  000FC2  0100               	movlb	0	; () banked
  9272  000FC4  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9273  000FC6  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9274  000FC8  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9275  000FCA  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9276  000FCC  339B               	rrcf	___fladd@b& (0+255),f,b
  9277                           
  9278                           ; BSR set to: 0
  9279  000FCE  0100               	movlb	0	; () banked
  9280  000FD0  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9281  000FD2                     l980:
  9282                           
  9283                           ; BSR set to: 0
  9284  000FD2  0100               	movlb	0	; () banked
  9285  000FD4  51AC               	movf	___fladd@aexp& (0+255),w,b
  9286  000FD6  0100               	movlb	0	; () banked
  9287  000FD8  5DAD               	subwf	___fladd@bexp& (0+255),w,b
  9288  000FDA  A0D8               	btfss	status,0,c
  9289  000FDC  D7E0               	goto	l981
  9290  000FDE                     l979:
  9291                           
  9292                           ; BSR set to: 0
  9293  000FDE  0100               	movlb	0	; () banked
  9294  000FE0  BDAB               	btfsc	___fladd@signs& (0+255),6,b
  9295  000FE2  D03F               	goto	l4687
  9296                           
  9297                           ; BSR set to: 0
  9298  000FE4  0100               	movlb	0	; () banked
  9299  000FE6  51AD               	movf	___fladd@bexp& (0+255),w,b
  9300  000FE8  0100               	movlb	0	; () banked
  9301  000FEA  A4D8               	btfss	status,2,c
  9302  000FEC  D00A               	goto	l4669
  9303                           
  9304                           ; BSR set to: 0
  9305  000FEE  0E00               	movlw	0
  9306  000FF0  0100               	movlb	0	; () banked
  9307  000FF2  6F9B               	movwf	?___fladd& (0+255),b
  9308  000FF4  0E00               	movlw	0
  9309  000FF6  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9310  000FF8  0E00               	movlw	0
  9311  000FFA  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9312  000FFC  0E00               	movlw	0
  9313  000FFE  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9314                           
  9315                           ; BSR set to: 0
  9316  001000  0012               	return	
  9317  001002                     l4669:
  9318                           
  9319                           ; BSR set to: 0
  9320  001002  0100               	movlb	0	; () banked
  9321  001004  519F               	movf	___fladd@a& (0+255),w,b
  9322  001006  0100               	movlb	0	; () banked
  9323  001008  279B               	addwf	___fladd@b& (0+255),f,b
  9324  00100A  0100               	movlb	0	; () banked
  9325  00100C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9326  00100E  0100               	movlb	0	; () banked
  9327  001010  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9328  001012  0100               	movlb	0	; () banked
  9329  001014  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9330  001016  0100               	movlb	0	; () banked
  9331  001018  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9332  00101A  0100               	movlb	0	; () banked
  9333  00101C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9334  00101E  0100               	movlb	0	; () banked
  9335  001020  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9336                           
  9337                           ; BSR set to: 0
  9338  001022  0100               	movlb	0	; () banked
  9339  001024  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9340  001026  D0CC               	goto	l4723
  9341                           
  9342                           ; BSR set to: 0
  9343  001028  0100               	movlb	0	; () banked
  9344  00102A  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9345  00102C  D009               	goto	l4677
  9346                           
  9347                           ; BSR set to: 0
  9348  00102E  0100               	movlb	0	; () banked
  9349  001030  90D8               	bcf	status,0,c
  9350  001032  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9351  001034  0100               	movlb	0	; () banked
  9352  001036  51AE               	movf	___fladd@grs& (0+255),w,b
  9353  001038  0901               	iorlw	1
  9354  00103A  0100               	movlb	0	; () banked
  9355  00103C  6FAE               	movwf	___fladd@grs& (0+255),b
  9356  00103E  D003               	goto	l4679
  9357  001040                     l4677:
  9358                           
  9359                           ; BSR set to: 0
  9360  001040  0100               	movlb	0	; () banked
  9361  001042  90D8               	bcf	status,0,c
  9362  001044  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9363  001046                     l4679:
  9364                           
  9365                           ; BSR set to: 0
  9366  001046  0100               	movlb	0	; () banked
  9367  001048  A19B               	btfss	___fladd@b& (0+255),0,b
  9368  00104A  D002               	goto	l4683
  9369                           
  9370                           ; BSR set to: 0
  9371  00104C  0100               	movlb	0	; () banked
  9372  00104E  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9373  001050                     l4683:
  9374                           
  9375                           ; BSR set to: 0
  9376  001050  0100               	movlb	0	; () banked
  9377  001052  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9378  001054  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9379  001056  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9380  001058  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9381  00105A  339B               	rrcf	___fladd@b& (0+255),f,b
  9382                           
  9383                           ; BSR set to: 0
  9384  00105C  0100               	movlb	0	; () banked
  9385  00105E  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9386                           
  9387                           ; BSR set to: 0
  9388  001060  D0AF               	goto	l4723
  9389  001062                     l4687:
  9390                           
  9391                           ; BSR set to: 0
  9392  001062  0100               	movlb	0	; () banked
  9393  001064  519F               	movf	___fladd@a& (0+255),w,b
  9394  001066  0100               	movlb	0	; () banked
  9395  001068  5D9B               	subwf	___fladd@b& (0+255),w,b
  9396  00106A  0100               	movlb	0	; () banked
  9397  00106C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9398  00106E  0100               	movlb	0	; () banked
  9399  001070  599C               	subwfb	(___fladd@b+1)& (0+255),w,b
  9400  001072  0100               	movlb	0	; () banked
  9401  001074  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9402  001076  0100               	movlb	0	; () banked
  9403  001078  599D               	subwfb	(___fladd@b+2)& (0+255),w,b
  9404  00107A  0100               	movlb	0	; () banked
  9405  00107C  519E               	movf	(___fladd@b+3)& (0+255),w,b
  9406  00107E  0A80               	xorlw	128
  9407  001080  0100               	movlb	0	; () banked
  9408  001082  6FA3               	movwf	??___fladd& (0+255),b
  9409  001084  0100               	movlb	0	; () banked
  9410  001086  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9411  001088  0A80               	xorlw	128
  9412  00108A  0100               	movlb	0	; () banked
  9413  00108C  59A3               	subwfb	??___fladd& (0+255),w,b
  9414  00108E  B0D8               	btfsc	status,0,c
  9415  001090  D050               	goto	l4697
  9416                           
  9417                           ; BSR set to: 0
  9418  001092  C09B  F0A3         	movff	___fladd@b,??___fladd
  9419  001096  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9420  00109A  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9421  00109E  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9422  0010A2  0100               	movlb	0	; () banked
  9423  0010A4  1FA3               	comf	??___fladd& (0+255),f,b
  9424  0010A6  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9425  0010A8  1FA5               	comf	(??___fladd+2)& (0+255),f,b
  9426  0010AA  1FA6               	comf	(??___fladd+3)& (0+255),f,b
  9427  0010AC  2BA3               	incf	??___fladd& (0+255),f,b
  9428  0010AE  0E00               	movlw	0
  9429  0010B0  23A4               	addwfc	(??___fladd+1)& (0+255),f,b
  9430  0010B2  23A5               	addwfc	(??___fladd+2)& (0+255),f,b
  9431  0010B4  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9432  0010B6  0100               	movlb	0	; () banked
  9433  0010B8  519F               	movf	___fladd@a& (0+255),w,b
  9434  0010BA  0100               	movlb	0	; () banked
  9435  0010BC  25A3               	addwf	??___fladd& (0+255),w,b
  9436  0010BE  0100               	movlb	0	; () banked
  9437  0010C0  6FA7               	movwf	(??___fladd+4)& (0+255),b
  9438  0010C2  0100               	movlb	0	; () banked
  9439  0010C4  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9440  0010C6  0100               	movlb	0	; () banked
  9441  0010C8  21A4               	addwfc	(??___fladd+1)& (0+255),w,b
  9442  0010CA  0100               	movlb	0	; () banked
  9443  0010CC  6FA8               	movwf	(??___fladd+5)& (0+255),b
  9444  0010CE  0100               	movlb	0	; () banked
  9445  0010D0  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9446  0010D2  0100               	movlb	0	; () banked
  9447  0010D4  21A5               	addwfc	(??___fladd+2)& (0+255),w,b
  9448  0010D6  0100               	movlb	0	; () banked
  9449  0010D8  6FA9               	movwf	(??___fladd+6)& (0+255),b
  9450  0010DA  0100               	movlb	0	; () banked
  9451  0010DC  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9452  0010DE  0100               	movlb	0	; () banked
  9453  0010E0  21A6               	addwfc	(??___fladd+3)& (0+255),w,b
  9454  0010E2  0100               	movlb	0	; () banked
  9455  0010E4  6FAA               	movwf	(??___fladd+7)& (0+255),b
  9456  0010E6  0EFF               	movlw	255
  9457  0010E8  0100               	movlb	0	; () banked
  9458  0010EA  25A7               	addwf	(??___fladd+4)& (0+255),w,b
  9459  0010EC  0100               	movlb	0	; () banked
  9460  0010EE  6F9B               	movwf	___fladd@b& (0+255),b
  9461  0010F0  0EFF               	movlw	255
  9462  0010F2  0100               	movlb	0	; () banked
  9463  0010F4  21A8               	addwfc	(??___fladd+5)& (0+255),w,b
  9464  0010F6  0100               	movlb	0	; () banked
  9465  0010F8  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9466  0010FA  0EFF               	movlw	255
  9467  0010FC  0100               	movlb	0	; () banked
  9468  0010FE  21A9               	addwfc	(??___fladd+6)& (0+255),w,b
  9469  001100  0100               	movlb	0	; () banked
  9470  001102  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9471  001104  0EFF               	movlw	255
  9472  001106  0100               	movlb	0	; () banked
  9473  001108  21AA               	addwfc	(??___fladd+7)& (0+255),w,b
  9474  00110A  0100               	movlb	0	; () banked
  9475  00110C  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9476  00110E  0E80               	movlw	128
  9477  001110  0100               	movlb	0	; () banked
  9478  001112  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9479                           
  9480                           ; BSR set to: 0
  9481  001114  0100               	movlb	0	; () banked
  9482  001116  6DAE               	negf	___fladd@grs& (0+255),b
  9483                           
  9484                           ; BSR set to: 0
  9485  001118  0100               	movlb	0	; () banked
  9486  00111A  51AE               	movf	___fladd@grs& (0+255),w,b
  9487  00111C  0100               	movlb	0	; () banked
  9488  00111E  A4D8               	btfss	status,2,c
  9489  001120  D018               	goto	l996
  9490                           
  9491                           ; BSR set to: 0
  9492  001122  0E01               	movlw	1
  9493  001124  0100               	movlb	0	; () banked
  9494  001126  279B               	addwf	___fladd@b& (0+255),f,b
  9495  001128  0E00               	movlw	0
  9496  00112A  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9497  00112C  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9498  00112E  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9499                           
  9500                           ; BSR set to: 0
  9501  001130  D010               	goto	l996
  9502  001132                     l4697:
  9503                           
  9504                           ; BSR set to: 0
  9505  001132  0100               	movlb	0	; () banked
  9506  001134  519F               	movf	___fladd@a& (0+255),w,b
  9507  001136  0100               	movlb	0	; () banked
  9508  001138  5F9B               	subwf	___fladd@b& (0+255),f,b
  9509  00113A  0100               	movlb	0	; () banked
  9510  00113C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9511  00113E  0100               	movlb	0	; () banked
  9512  001140  5B9C               	subwfb	(___fladd@b+1)& (0+255),f,b
  9513  001142  0100               	movlb	0	; () banked
  9514  001144  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9515  001146  0100               	movlb	0	; () banked
  9516  001148  5B9D               	subwfb	(___fladd@b+2)& (0+255),f,b
  9517  00114A  0100               	movlb	0	; () banked
  9518  00114C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9519  00114E  0100               	movlb	0	; () banked
  9520  001150  5B9E               	subwfb	(___fladd@b+3)& (0+255),f,b
  9521  001152                     l996:
  9522                           
  9523                           ; BSR set to: 0
  9524  001152  0100               	movlb	0	; () banked
  9525  001154  519B               	movf	___fladd@b& (0+255),w,b
  9526  001156  0100               	movlb	0	; () banked
  9527  001158  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9528  00115A  0100               	movlb	0	; () banked
  9529  00115C  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9530  00115E  0100               	movlb	0	; () banked
  9531  001160  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9532  001162  A4D8               	btfss	status,2,c
  9533  001164  D02A               	goto	l4721
  9534                           
  9535                           ; BSR set to: 0
  9536  001166  0100               	movlb	0	; () banked
  9537  001168  51AE               	movf	___fladd@grs& (0+255),w,b
  9538  00116A  0100               	movlb	0	; () banked
  9539  00116C  A4D8               	btfss	status,2,c
  9540  00116E  D025               	goto	l4721
  9541                           
  9542                           ; BSR set to: 0
  9543  001170  0E00               	movlw	0
  9544  001172  0100               	movlb	0	; () banked
  9545  001174  6F9B               	movwf	?___fladd& (0+255),b
  9546  001176  0E00               	movlw	0
  9547  001178  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9548  00117A  0E00               	movlw	0
  9549  00117C  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9550  00117E  0E00               	movlw	0
  9551  001180  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9552                           
  9553                           ; BSR set to: 0
  9554  001182  0012               	return	
  9555  001184                     l4705:
  9556                           
  9557                           ; BSR set to: 0
  9558  001184  0100               	movlb	0	; () banked
  9559  001186  90D8               	bcf	status,0,c
  9560  001188  379B               	rlcf	___fladd@b& (0+255),f,b
  9561  00118A  379C               	rlcf	(___fladd@b+1)& (0+255),f,b
  9562  00118C  379D               	rlcf	(___fladd@b+2)& (0+255),f,b
  9563  00118E  379E               	rlcf	(___fladd@b+3)& (0+255),f,b
  9564                           
  9565                           ; BSR set to: 0
  9566  001190  0100               	movlb	0	; () banked
  9567  001192  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9568  001194  D002               	goto	l4711
  9569                           
  9570                           ; BSR set to: 0
  9571  001196  0100               	movlb	0	; () banked
  9572  001198  819B               	bsf	___fladd@b& (0+255),0,b
  9573  00119A                     l4711:
  9574                           
  9575                           ; BSR set to: 0
  9576  00119A  0100               	movlb	0	; () banked
  9577  00119C  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9578  00119E  D003               	goto	l4715
  9579                           
  9580                           ; BSR set to: 0
  9581  0011A0  80D8               	bsf	status,0,c
  9582  0011A2  0100               	movlb	0	; () banked
  9583  0011A4  D002               	goto	L11
  9584  0011A6                     l4715:
  9585                           
  9586                           ; BSR set to: 0
  9587  0011A6  0100               	movlb	0	; () banked
  9588  0011A8  90D8               	bcf	status,0,c
  9589  0011AA                     L11:
  9590  0011AA  37AE               	rlcf	___fladd@grs& (0+255),f,b
  9591                           
  9592                           ; BSR set to: 0
  9593                           
  9594                           ; BSR set to: 0
  9595  0011AC  0100               	movlb	0	; () banked
  9596  0011AE  51AD               	movf	___fladd@bexp& (0+255),w,b
  9597  0011B0  0100               	movlb	0	; () banked
  9598  0011B2  B4D8               	btfsc	status,2,c
  9599  0011B4  D002               	goto	l4721
  9600                           
  9601                           ; BSR set to: 0
  9602  0011B6  0100               	movlb	0	; () banked
  9603  0011B8  07AD               	decf	___fladd@bexp& (0+255),f,b
  9604  0011BA                     l4721:
  9605                           
  9606                           ; BSR set to: 0
  9607  0011BA  0100               	movlb	0	; () banked
  9608  0011BC  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  9609  0011BE  D7E2               	goto	l4705
  9610  0011C0                     l4723:
  9611                           
  9612                           ; BSR set to: 0
  9613  0011C0  0E00               	movlw	0
  9614  0011C2  0100               	movlb	0	; () banked
  9615  0011C4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9616                           
  9617                           ; BSR set to: 0
  9618  0011C6  0100               	movlb	0	; () banked
  9619  0011C8  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9620  0011CA  D00D               	goto	l1005
  9621                           
  9622                           ; BSR set to: 0
  9623  0011CC  C0AE  F0A3         	movff	___fladd@grs,??___fladd
  9624  0011D0  0E7F               	movlw	127
  9625  0011D2  0100               	movlb	0	; () banked
  9626  0011D4  17A3               	andwf	??___fladd& (0+255),f,b
  9627  0011D6  A4D8               	btfss	status,2,c
  9628  0011D8  D003               	goto	l4731
  9629                           
  9630                           ; BSR set to: 0
  9631                           
  9632                           ; BSR set to: 0
  9633  0011DA  0100               	movlb	0	; () banked
  9634  0011DC  A19B               	btfss	___fladd@b& (0+255),0,b
  9635  0011DE  D003               	goto	l1005
  9636  0011E0                     l4731:
  9637                           
  9638                           ; BSR set to: 0
  9639  0011E0  0E01               	movlw	1
  9640  0011E2  0100               	movlb	0	; () banked
  9641  0011E4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9642  0011E6                     l1005:
  9643                           
  9644                           ; BSR set to: 0
  9645  0011E6  0100               	movlb	0	; () banked
  9646  0011E8  51AC               	movf	___fladd@aexp& (0+255),w,b
  9647  0011EA  0100               	movlb	0	; () banked
  9648  0011EC  B4D8               	btfsc	status,2,c
  9649  0011EE  D026               	goto	l4741
  9650                           
  9651                           ; BSR set to: 0
  9652  0011F0  0E01               	movlw	1
  9653  0011F2  0100               	movlb	0	; () banked
  9654  0011F4  279B               	addwf	___fladd@b& (0+255),f,b
  9655  0011F6  0E00               	movlw	0
  9656  0011F8  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9657  0011FA  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9658  0011FC  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9659                           
  9660                           ; BSR set to: 0
  9661  0011FE  0100               	movlb	0	; () banked
  9662  001200  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9663  001202  D01C               	goto	l4741
  9664                           
  9665                           ; BSR set to: 0
  9666  001204  C09B  F0A3         	movff	___fladd@b,??___fladd
  9667  001208  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9668  00120C  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9669  001210  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9670  001214  0100               	movlb	0	; () banked
  9671  001216  35A6               	rlcf	(??___fladd+3)& (0+255),w,b
  9672  001218  33A6               	rrcf	(??___fladd+3)& (0+255),f,b
  9673  00121A  33A5               	rrcf	(??___fladd+2)& (0+255),f,b
  9674  00121C  33A4               	rrcf	(??___fladd+1)& (0+255),f,b
  9675  00121E  33A3               	rrcf	??___fladd& (0+255),f,b
  9676  001220  C0A3  F09B         	movff	??___fladd,___fladd@b
  9677  001224  C0A4  F09C         	movff	??___fladd+1,___fladd@b+1
  9678  001228  C0A5  F09D         	movff	??___fladd+2,___fladd@b+2
  9679  00122C  C0A6  F09E         	movff	??___fladd+3,___fladd@b+3
  9680  001230  0100               	movlb	0	; () banked
  9681  001232  29AD               	incf	___fladd@bexp& (0+255),w,b
  9682  001234  B4D8               	btfsc	status,2,c
  9683  001236  D002               	goto	l4741
  9684                           
  9685                           ; BSR set to: 0
  9686  001238  0100               	movlb	0	; () banked
  9687  00123A  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9688  00123C                     l4741:
  9689                           
  9690                           ; BSR set to: 0
  9691  00123C  0100               	movlb	0	; () banked
  9692  00123E  29AD               	incf	___fladd@bexp& (0+255),w,b
  9693  001240  B4D8               	btfsc	status,2,c
  9694  001242  D005               	goto	l4745
  9695                           
  9696                           ; BSR set to: 0
  9697  001244  0100               	movlb	0	; () banked
  9698  001246  51AD               	movf	___fladd@bexp& (0+255),w,b
  9699  001248  0100               	movlb	0	; () banked
  9700  00124A  A4D8               	btfss	status,2,c
  9701  00124C  D011               	goto	l4749
  9702  00124E                     l4745:
  9703                           
  9704                           ; BSR set to: 0
  9705  00124E  0E00               	movlw	0
  9706  001250  0100               	movlb	0	; () banked
  9707  001252  6F9B               	movwf	___fladd@b& (0+255),b
  9708  001254  0E00               	movlw	0
  9709  001256  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9710  001258  0E00               	movlw	0
  9711  00125A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9712  00125C  0E00               	movlw	0
  9713  00125E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9714  001260  0100               	movlb	0	; () banked
  9715  001262  51AD               	movf	___fladd@bexp& (0+255),w,b
  9716  001264  0100               	movlb	0	; () banked
  9717  001266  A4D8               	btfss	status,2,c
  9718  001268  D003               	goto	l4749
  9719                           
  9720                           ; BSR set to: 0
  9721  00126A  0E00               	movlw	0
  9722  00126C  0100               	movlb	0	; () banked
  9723  00126E  6FAB               	movwf	___fladd@signs& (0+255),b
  9724  001270                     l4749:
  9725                           
  9726                           ; BSR set to: 0
  9727  001270  0100               	movlb	0	; () banked
  9728  001272  A1AD               	btfss	___fladd@bexp& (0+255),0,b
  9729  001274  D003               	goto	l4753
  9730                           
  9731                           ; BSR set to: 0
  9732  001276  0100               	movlb	0	; () banked
  9733  001278  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  9734  00127A  D002               	goto	l4755
  9735  00127C                     l4753:
  9736                           
  9737                           ; BSR set to: 0
  9738  00127C  0100               	movlb	0	; () banked
  9739  00127E  9F9D               	bcf	(___fladd@b+2)& (0+255),7,b
  9740  001280                     l4755:
  9741                           
  9742                           ; BSR set to: 0
  9743  001280  0100               	movlb	0	; () banked
  9744  001282  90D8               	bcf	status,0,c
  9745  001284  31AD               	rrcf	___fladd@bexp& (0+255),w,b
  9746  001286  0100               	movlb	0	; () banked
  9747  001288  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9748                           
  9749                           ; BSR set to: 0
  9750  00128A  0100               	movlb	0	; () banked
  9751  00128C  AFAB               	btfss	___fladd@signs& (0+255),7,b
  9752  00128E  D002               	goto	l4761
  9753                           
  9754                           ; BSR set to: 0
  9755  001290  0100               	movlb	0	; () banked
  9756  001292  8F9E               	bsf	(___fladd@b+3)& (0+255),7,b
  9757  001294                     l4761:
  9758                           
  9759                           ; BSR set to: 0
  9760  001294  C09B  F09B         	movff	___fladd@b,?___fladd
  9761  001298  C09C  F09C         	movff	___fladd@b+1,?___fladd+1
  9762  00129C  C09D  F09D         	movff	___fladd@b+2,?___fladd+2
  9763  0012A0  C09E  F09E         	movff	___fladd@b+3,?___fladd+3
  9764  0012A4  0012               	return	
  9765  0012A6                     __end_of___fladd:
  9766                           	opt stack 0
  9767                           tblptru	equ	0xFF8
  9768                           tblptrh	equ	0xFF7
  9769                           tblptrl	equ	0xFF6
  9770                           tablat	equ	0xFF5
  9771                           prodh	equ	0xFF4
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           indf1	equ	0xFE7
  9777                           postinc1	equ	0xFE6
  9778                           fsr1h	equ	0xFE2
  9779                           fsr1l	equ	0xFE1
  9780                           indf2	equ	0xFDF
  9781                           postinc2	equ	0xFDE
  9782                           fsr2h	equ	0xFDA
  9783                           fsr2l	equ	0xFD9
  9784                           status	equ	0xFD8
  9785                           
  9786 ;; *************** function ___flneg *****************
  9787 ;; Defined at:
  9788 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  f1              4    0[BANK0 ] unsigned char 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  4    0[BANK0 ] unsigned char 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9802 ;;      Params:         0       4       0       0
  9803 ;;      Locals:         0       0       0       0
  9804 ;;      Temps:          0       0       0       0
  9805 ;;      Totals:         0       4       0       0
  9806 ;;Total ram usage:        4 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:    3
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_sprintf
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text29
  9817  0032B0                     __ptext29:
  9818                           	opt stack 0
  9819  0032B0                     ___flneg:
  9820                           	opt stack 25
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;incstack = 0
  9824  0032B0  0100               	movlb	0	; () banked
  9825  0032B2  5160               	movf	___flneg@f1& (0+255),w,b
  9826  0032B4  0100               	movlb	0	; () banked
  9827  0032B6  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9828  0032B8  0100               	movlb	0	; () banked
  9829  0032BA  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9830  0032BC  0100               	movlb	0	; () banked
  9831  0032BE  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9832  0032C0  B4D8               	btfsc	status,2,c
  9833  0032C2  D009               	goto	l5227
  9834                           
  9835                           ; BSR set to: 0
  9836  0032C4  0E00               	movlw	0
  9837  0032C6  0100               	movlb	0	; () banked
  9838  0032C8  1B60               	xorwf	___flneg@f1& (0+255),f,b
  9839  0032CA  0E00               	movlw	0
  9840  0032CC  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9841  0032CE  0E00               	movlw	0
  9842  0032D0  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9843  0032D2  0E80               	movlw	128
  9844  0032D4  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9845  0032D6                     l5227:
  9846                           
  9847                           ; BSR set to: 0
  9848  0032D6  C060  F060         	movff	___flneg@f1,?___flneg
  9849  0032DA  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  9850  0032DE  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  9851  0032E2  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  9852  0032E6  0012               	return	
  9853  0032E8                     __end_of___flneg:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           intcon	equ	0xFF2
  9862                           postinc0	equ	0xFEE
  9863                           wreg	equ	0xFE8
  9864                           indf1	equ	0xFE7
  9865                           postinc1	equ	0xFE6
  9866                           fsr1h	equ	0xFE2
  9867                           fsr1l	equ	0xFE1
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           fsr2h	equ	0xFDA
  9871                           fsr2l	equ	0xFD9
  9872                           status	equ	0xFD8
  9873                           
  9874 ;; *************** function ___flge *****************
  9875 ;; Defined at:
  9876 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  ff1             4    0[BANK0 ] unsigned char 
  9879 ;;  ff2             4    4[BANK0 ] unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;		None               void
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9891 ;;      Params:         0       8       0       0
  9892 ;;      Locals:         0       0       0       0
  9893 ;;      Temps:          0       4       0       0
  9894 ;;      Totals:         0      12       0       0
  9895 ;;Total ram usage:       12 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; Hardware stack levels required when called:    3
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_sprintf
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text30
  9906  002184                     __ptext30:
  9907                           	opt stack 0
  9908  002184                     ___flge:
  9909                           	opt stack 25
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;incstack = 0
  9913  002184  0E00               	movlw	0
  9914  002186  0100               	movlb	0	; () banked
  9915  002188  1560               	andwf	___flge@ff1& (0+255),w,b
  9916  00218A  0100               	movlb	0	; () banked
  9917  00218C  6F68               	movwf	??___flge& (0+255),b
  9918  00218E  0E00               	movlw	0
  9919  002190  0100               	movlb	0	; () banked
  9920  002192  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  9921  002194  0100               	movlb	0	; () banked
  9922  002196  6F69               	movwf	(??___flge+1)& (0+255),b
  9923  002198  0E80               	movlw	128
  9924  00219A  0100               	movlb	0	; () banked
  9925  00219C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  9926  00219E  0100               	movlb	0	; () banked
  9927  0021A0  6F6A               	movwf	(??___flge+2)& (0+255),b
  9928  0021A2  0E7F               	movlw	127
  9929  0021A4  0100               	movlb	0	; () banked
  9930  0021A6  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  9931  0021A8  0100               	movlb	0	; () banked
  9932  0021AA  6F6B               	movwf	(??___flge+3)& (0+255),b
  9933  0021AC  0100               	movlb	0	; () banked
  9934  0021AE  5168               	movf	??___flge& (0+255),w,b
  9935  0021B0  0100               	movlb	0	; () banked
  9936  0021B2  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9937  0021B4  0100               	movlb	0	; () banked
  9938  0021B6  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9939  0021B8  0100               	movlb	0	; () banked
  9940  0021BA  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9941  0021BC  A4D8               	btfss	status,2,c
  9942  0021BE  D009               	goto	l5205
  9943                           
  9944                           ; BSR set to: 0
  9945  0021C0  0E00               	movlw	0
  9946  0021C2  0100               	movlb	0	; () banked
  9947  0021C4  6F60               	movwf	___flge@ff1& (0+255),b
  9948  0021C6  0E00               	movlw	0
  9949  0021C8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  9950  0021CA  0E00               	movlw	0
  9951  0021CC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  9952  0021CE  0E00               	movlw	0
  9953  0021D0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  9954  0021D2                     l5205:
  9955                           
  9956                           ; BSR set to: 0
  9957  0021D2  0E00               	movlw	0
  9958  0021D4  0100               	movlb	0	; () banked
  9959  0021D6  1564               	andwf	___flge@ff2& (0+255),w,b
  9960  0021D8  0100               	movlb	0	; () banked
  9961  0021DA  6F68               	movwf	??___flge& (0+255),b
  9962  0021DC  0E00               	movlw	0
  9963  0021DE  0100               	movlb	0	; () banked
  9964  0021E0  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  9965  0021E2  0100               	movlb	0	; () banked
  9966  0021E4  6F69               	movwf	(??___flge+1)& (0+255),b
  9967  0021E6  0E80               	movlw	128
  9968  0021E8  0100               	movlb	0	; () banked
  9969  0021EA  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  9970  0021EC  0100               	movlb	0	; () banked
  9971  0021EE  6F6A               	movwf	(??___flge+2)& (0+255),b
  9972  0021F0  0E7F               	movlw	127
  9973  0021F2  0100               	movlb	0	; () banked
  9974  0021F4  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  9975  0021F6  0100               	movlb	0	; () banked
  9976  0021F8  6F6B               	movwf	(??___flge+3)& (0+255),b
  9977  0021FA  0100               	movlb	0	; () banked
  9978  0021FC  5168               	movf	??___flge& (0+255),w,b
  9979  0021FE  0100               	movlb	0	; () banked
  9980  002200  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9981  002202  0100               	movlb	0	; () banked
  9982  002204  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9983  002206  0100               	movlb	0	; () banked
  9984  002208  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9985  00220A  A4D8               	btfss	status,2,c
  9986  00220C  D009               	goto	l5209
  9987                           
  9988                           ; BSR set to: 0
  9989  00220E  0E00               	movlw	0
  9990  002210  0100               	movlb	0	; () banked
  9991  002212  6F64               	movwf	___flge@ff2& (0+255),b
  9992  002214  0E00               	movlw	0
  9993  002216  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9994  002218  0E00               	movlw	0
  9995  00221A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9996  00221C  0E00               	movlw	0
  9997  00221E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9998  002220                     l5209:
  9999                           
 10000                           ; BSR set to: 0
 10001  002220  0100               	movlb	0	; () banked
 10002  002222  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 10003  002224  D026               	goto	l5213
 10004                           
 10005                           ; BSR set to: 0
 10006  002226  C060  F068         	movff	___flge@ff1,??___flge
 10007  00222A  C061  F069         	movff	___flge@ff1+1,??___flge+1
 10008  00222E  C062  F06A         	movff	___flge@ff1+2,??___flge+2
 10009  002232  C063  F06B         	movff	___flge@ff1+3,??___flge+3
 10010  002236  0100               	movlb	0	; () banked
 10011  002238  1F68               	comf	??___flge& (0+255),f,b
 10012  00223A  1F69               	comf	(??___flge+1)& (0+255),f,b
 10013  00223C  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10014  00223E  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10015  002240  2B68               	incf	??___flge& (0+255),f,b
 10016  002242  0E00               	movlw	0
 10017  002244  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10018  002246  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10019  002248  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10020  00224A  0E00               	movlw	0
 10021  00224C  0100               	movlb	0	; () banked
 10022  00224E  2568               	addwf	??___flge& (0+255),w,b
 10023  002250  0100               	movlb	0	; () banked
 10024  002252  6F60               	movwf	___flge@ff1& (0+255),b
 10025  002254  0E00               	movlw	0
 10026  002256  0100               	movlb	0	; () banked
 10027  002258  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10028  00225A  0100               	movlb	0	; () banked
 10029  00225C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 10030  00225E  0E00               	movlw	0
 10031  002260  0100               	movlb	0	; () banked
 10032  002262  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10033  002264  0100               	movlb	0	; () banked
 10034  002266  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 10035  002268  0E80               	movlw	128
 10036  00226A  0100               	movlb	0	; () banked
 10037  00226C  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10038  00226E  0100               	movlb	0	; () banked
 10039  002270  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 10040  002272                     l5213:
 10041                           
 10042                           ; BSR set to: 0
 10043  002272  0100               	movlb	0	; () banked
 10044  002274  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 10045  002276  D026               	goto	l702
 10046                           
 10047                           ; BSR set to: 0
 10048  002278  C064  F068         	movff	___flge@ff2,??___flge
 10049  00227C  C065  F069         	movff	___flge@ff2+1,??___flge+1
 10050  002280  C066  F06A         	movff	___flge@ff2+2,??___flge+2
 10051  002284  C067  F06B         	movff	___flge@ff2+3,??___flge+3
 10052  002288  0100               	movlb	0	; () banked
 10053  00228A  1F68               	comf	??___flge& (0+255),f,b
 10054  00228C  1F69               	comf	(??___flge+1)& (0+255),f,b
 10055  00228E  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10056  002290  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10057  002292  2B68               	incf	??___flge& (0+255),f,b
 10058  002294  0E00               	movlw	0
 10059  002296  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10060  002298  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10061  00229A  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10062  00229C  0E00               	movlw	0
 10063  00229E  0100               	movlb	0	; () banked
 10064  0022A0  2568               	addwf	??___flge& (0+255),w,b
 10065  0022A2  0100               	movlb	0	; () banked
 10066  0022A4  6F64               	movwf	___flge@ff2& (0+255),b
 10067  0022A6  0E00               	movlw	0
 10068  0022A8  0100               	movlb	0	; () banked
 10069  0022AA  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10070  0022AC  0100               	movlb	0	; () banked
 10071  0022AE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 10072  0022B0  0E00               	movlw	0
 10073  0022B2  0100               	movlb	0	; () banked
 10074  0022B4  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10075  0022B6  0100               	movlb	0	; () banked
 10076  0022B8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 10077  0022BA  0E80               	movlw	128
 10078  0022BC  0100               	movlb	0	; () banked
 10079  0022BE  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10080  0022C0  0100               	movlb	0	; () banked
 10081  0022C2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10082  0022C4                     l702:
 10083                           
 10084                           ; BSR set to: 0
 10085  0022C4  0E00               	movlw	0
 10086  0022C6  0100               	movlb	0	; () banked
 10087  0022C8  1B60               	xorwf	___flge@ff1& (0+255),f,b
 10088  0022CA  0E00               	movlw	0
 10089  0022CC  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10090  0022CE  0E00               	movlw	0
 10091  0022D0  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10092  0022D2  0E80               	movlw	128
 10093  0022D4  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10094  0022D6  0E00               	movlw	0
 10095  0022D8  0100               	movlb	0	; () banked
 10096  0022DA  1B64               	xorwf	___flge@ff2& (0+255),f,b
 10097  0022DC  0E00               	movlw	0
 10098  0022DE  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10099  0022E0  0E00               	movlw	0
 10100  0022E2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10101  0022E4  0E80               	movlw	128
 10102  0022E6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10103  0022E8  0100               	movlb	0	; () banked
 10104  0022EA  5164               	movf	___flge@ff2& (0+255),w,b
 10105  0022EC  0100               	movlb	0	; () banked
 10106  0022EE  5D60               	subwf	___flge@ff1& (0+255),w,b
 10107  0022F0  0100               	movlb	0	; () banked
 10108  0022F2  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 10109  0022F4  0100               	movlb	0	; () banked
 10110  0022F6  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10111  0022F8  0100               	movlb	0	; () banked
 10112  0022FA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 10113  0022FC  0100               	movlb	0	; () banked
 10114  0022FE  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10115  002300  0100               	movlb	0	; () banked
 10116  002302  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 10117  002304  0100               	movlb	0	; () banked
 10118  002306  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10119  002308  B0D8               	btfsc	status,0,c
 10120  00230A  D002               	goto	l5219
 10121                           
 10122                           ; BSR set to: 0
 10123  00230C  90D8               	bcf	status,0,c
 10124  00230E  0012               	return	
 10125  002310                     l5219:
 10126                           
 10127                           ; BSR set to: 0
 10128  002310  80D8               	bsf	status,0,c
 10129                           
 10130                           ; BSR set to: 0
 10131  002312  0012               	return	
 10132  002314                     __end_of___flge:
 10133                           	opt stack 0
 10134                           tblptru	equ	0xFF8
 10135                           tblptrh	equ	0xFF7
 10136                           tblptrl	equ	0xFF6
 10137                           tablat	equ	0xFF5
 10138                           prodh	equ	0xFF4
 10139                           prodl	equ	0xFF3
 10140                           intcon	equ	0xFF2
 10141                           postinc0	equ	0xFEE
 10142                           wreg	equ	0xFE8
 10143                           indf1	equ	0xFE7
 10144                           postinc1	equ	0xFE6
 10145                           fsr1h	equ	0xFE2
 10146                           fsr1l	equ	0xFE1
 10147                           indf2	equ	0xFDF
 10148                           postinc2	equ	0xFDE
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function ___lwdiv *****************
 10154 ;; Defined at:
 10155 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  dividend        2    0[BANK0 ] unsigned int 
 10158 ;;  divisor         2    2[BANK0 ] unsigned int 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  quotient        2    5[BANK0 ] unsigned int 
 10161 ;;  counter         1    4[BANK0 ] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  2    0[BANK0 ] unsigned int 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10171 ;;      Params:         0       4       0       0
 10172 ;;      Locals:         0       3       0       0
 10173 ;;      Temps:          0       0       0       0
 10174 ;;      Totals:         0       7       0       0
 10175 ;;Total ram usage:        7 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    3
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_LCD_Handler
 10182 ;;		_utoa
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text31
 10187  003004                     __ptext31:
 10188                           	opt stack 0
 10189  003004                     ___lwdiv:
 10190                           	opt stack 26
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;incstack = 0
 10194  003004  0E00               	movlw	0
 10195  003006  0100               	movlb	0	; () banked
 10196  003008  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10197  00300A  0E00               	movlw	0
 10198  00300C  6F65               	movwf	___lwdiv@quotient& (0+255),b
 10199                           
 10200                           ; BSR set to: 0
 10201  00300E  0100               	movlb	0	; () banked
 10202  003010  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10203  003012  0100               	movlb	0	; () banked
 10204  003014  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10205  003016  B4D8               	btfsc	status,2,c
 10206  003018  D02C               	goto	l938
 10207                           
 10208                           ; BSR set to: 0
 10209  00301A  0E01               	movlw	1
 10210  00301C  0100               	movlb	0	; () banked
 10211  00301E  6F64               	movwf	___lwdiv@counter& (0+255),b
 10212  003020  D006               	goto	l5703
 10213  003022                     l5701:
 10214                           
 10215                           ; BSR set to: 0
 10216  003022  0100               	movlb	0	; () banked
 10217  003024  90D8               	bcf	status,0,c
 10218  003026  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 10219  003028  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10220  00302A  0100               	movlb	0	; () banked
 10221  00302C  2B64               	incf	___lwdiv@counter& (0+255),f,b
 10222  00302E                     l5703:
 10223                           
 10224                           ; BSR set to: 0
 10225  00302E  0100               	movlb	0	; () banked
 10226  003030  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10227  003032  D7F7               	goto	l5701
 10228  003034                     l5705:
 10229                           
 10230                           ; BSR set to: 0
 10231  003034  0100               	movlb	0	; () banked
 10232  003036  90D8               	bcf	status,0,c
 10233  003038  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 10234  00303A  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237  00303C  0100               	movlb	0	; () banked
 10238  00303E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10239  003040  0100               	movlb	0	; () banked
 10240  003042  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 10241  003044  0100               	movlb	0	; () banked
 10242  003046  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10243  003048  0100               	movlb	0	; () banked
 10244  00304A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10245  00304C  A0D8               	btfss	status,0,c
 10246  00304E  D00A               	goto	l5713
 10247                           
 10248                           ; BSR set to: 0
 10249  003050  0100               	movlb	0	; () banked
 10250  003052  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10251  003054  0100               	movlb	0	; () banked
 10252  003056  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 10253  003058  0100               	movlb	0	; () banked
 10254  00305A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10255  00305C  0100               	movlb	0	; () banked
 10256  00305E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10257                           
 10258                           ; BSR set to: 0
 10259  003060  0100               	movlb	0	; () banked
 10260  003062  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 10261  003064                     l5713:
 10262                           
 10263                           ; BSR set to: 0
 10264  003064  0100               	movlb	0	; () banked
 10265  003066  90D8               	bcf	status,0,c
 10266  003068  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10267  00306A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 10268                           
 10269                           ; BSR set to: 0
 10270  00306C  0100               	movlb	0	; () banked
 10271  00306E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 10272  003070  D7E1               	goto	l5705
 10273  003072                     l938:
 10274                           
 10275                           ; BSR set to: 0
 10276  003072  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 10277  003076  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10278                           
 10279                           ; BSR set to: 0
 10280  00307A  0012               	return		;funcret
 10281  00307C                     __end_of___lwdiv:
 10282                           	opt stack 0
 10283                           tblptru	equ	0xFF8
 10284                           tblptrh	equ	0xFF7
 10285                           tblptrl	equ	0xFF6
 10286                           tablat	equ	0xFF5
 10287                           prodh	equ	0xFF4
 10288                           prodl	equ	0xFF3
 10289                           intcon	equ	0xFF2
 10290                           postinc0	equ	0xFEE
 10291                           wreg	equ	0xFE8
 10292                           indf1	equ	0xFE7
 10293                           postinc1	equ	0xFE6
 10294                           fsr1h	equ	0xFE2
 10295                           fsr1l	equ	0xFE1
 10296                           indf2	equ	0xFDF
 10297                           postinc2	equ	0xFDE
 10298                           fsr2h	equ	0xFDA
 10299                           fsr2l	equ	0xFD9
 10300                           status	equ	0xFD8
 10301                           
 10302 ;; *************** function _LCD_write_string *****************
 10303 ;; Defined at:
 10304 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  buffer          2   17[BANK0 ] PTR unsigned char 
 10307 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;		None               void
 10312 ;; Registers used:
 10313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10319 ;;      Params:         0       2       0       0
 10320 ;;      Locals:         0       0       0       0
 10321 ;;      Temps:          0       0       0       0
 10322 ;;      Totals:         0       2       0       0
 10323 ;;Total ram usage:        2 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    8
 10326 ;; This function calls:
 10327 ;;		_LCD_write_char
 10328 ;; This function is called by:
 10329 ;;		_LCD_Handler
 10330 ;;		_LCD_write_integer
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text32
 10335  00342C                     __ptext32:
 10336                           	opt stack 0
 10337  00342C                     _LCD_write_string:
 10338                           	opt stack 21
 10339                           
 10340                           ;src\LCD_44780.c: 197: while(*buffer){
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;incstack = 0
 10344  00342C  D00A               	goto	l5389
 10345  00342E                     l5385:
 10346                           
 10347                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10348  00342E  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10349  003432  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10350  003436  50DF               	movf	indf2,w,c
 10351  003438  ECB7  F017         	call	_LCD_write_char
 10352                           
 10353                           ;src\LCD_44780.c: 202: buffer++;
 10354  00343C  0100               	movlb	0	; () banked
 10355  00343E  4B71               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10356  003440  2B72               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10357  003442                     l5389:
 10358  003442  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10359  003446  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10360  00344A  50DF               	movf	indf2,w,c
 10361  00344C  B4D8               	btfsc	status,2,c
 10362  00344E  0012               	return	
 10363  003450  D7EE               	goto	l5385
 10364  003452                     __end_of_LCD_write_string:
 10365                           	opt stack 0
 10366                           tblptru	equ	0xFF8
 10367                           tblptrh	equ	0xFF7
 10368                           tblptrl	equ	0xFF6
 10369                           tablat	equ	0xFF5
 10370                           prodh	equ	0xFF4
 10371                           prodl	equ	0xFF3
 10372                           intcon	equ	0xFF2
 10373                           postinc0	equ	0xFEE
 10374                           wreg	equ	0xFE8
 10375                           indf1	equ	0xFE7
 10376                           postinc1	equ	0xFE6
 10377                           fsr1h	equ	0xFE2
 10378                           fsr1l	equ	0xFE1
 10379                           indf2	equ	0xFDF
 10380                           postinc2	equ	0xFDE
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function _LCD_write_message *****************
 10386 ;; Defined at:
 10387 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  buffer          2   17[BANK0 ] PTR const unsigned char 
 10390 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
 10391 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
 10392 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;		None
 10395 ;; Return value:  Size  Location     Type
 10396 ;;		None               void
 10397 ;; Registers used:
 10398 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10404 ;;      Params:         0       2       0       0
 10405 ;;      Locals:         0       0       0       0
 10406 ;;      Temps:          0       0       0       0
 10407 ;;      Totals:         0       2       0       0
 10408 ;;Total ram usage:        2 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:    8
 10411 ;; This function calls:
 10412 ;;		_LCD_write_char
 10413 ;; This function is called by:
 10414 ;;		_main
 10415 ;;		_LCD_Handler
 10416 ;;		_board_initialization
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text33
 10421  0033AE                     __ptext33:
 10422                           	opt stack 0
 10423  0033AE                     _LCD_write_message:
 10424                           	opt stack 21
 10425                           
 10426                           ;src\LCD_44780.c: 181: while(*buffer) {
 10427                           
 10428                           ;incstack = 0
 10429  0033AE  D00B               	goto	l5381
 10430  0033B0                     l5377:
 10431                           
 10432                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 10433  0033B0  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10434  0033B4  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10435  0033B8                     	if	0	;tblptru may be non-zero
 10436  0033B8                     	endif
 10437  0033B8                     	if	0	;tblptru may be non-zero
 10438  0033B8                     	endif
 10439  0033B8  0008               	tblrd		*
 10440  0033BA  50F5               	movf	tablat,w,c
 10441  0033BC  ECB7  F017         	call	_LCD_write_char
 10442                           
 10443                           ;src\LCD_44780.c: 186: buffer++;
 10444  0033C0  0100               	movlb	0	; () banked
 10445  0033C2  4B71               	infsnz	LCD_write_message@buffer& (0+255),f,b
 10446  0033C4  2B72               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 10447  0033C6                     l5381:
 10448  0033C6  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10449  0033CA  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10450  0033CE                     	if	0	;tblptru may be non-zero
 10451  0033CE                     	endif
 10452  0033CE                     	if	0	;tblptru may be non-zero
 10453  0033CE                     	endif
 10454  0033CE  0008               	tblrd		*
 10455  0033D0  50F5               	movf	tablat,w,c
 10456  0033D2  0900               	iorlw	0
 10457  0033D4  B4D8               	btfsc	status,2,c
 10458  0033D6  0012               	return	
 10459  0033D8  D7EB               	goto	l5377
 10460  0033DA                     __end_of_LCD_write_message:
 10461                           	opt stack 0
 10462                           tblptru	equ	0xFF8
 10463                           tblptrh	equ	0xFF7
 10464                           tblptrl	equ	0xFF6
 10465                           tablat	equ	0xFF5
 10466                           prodh	equ	0xFF4
 10467                           prodl	equ	0xFF3
 10468                           intcon	equ	0xFF2
 10469                           postinc0	equ	0xFEE
 10470                           wreg	equ	0xFE8
 10471                           indf1	equ	0xFE7
 10472                           postinc1	equ	0xFE6
 10473                           fsr1h	equ	0xFE2
 10474                           fsr1l	equ	0xFE1
 10475                           indf2	equ	0xFDF
 10476                           postinc2	equ	0xFDE
 10477                           fsr2h	equ	0xFDA
 10478                           fsr2l	equ	0xFD9
 10479                           status	equ	0xFD8
 10480                           
 10481 ;; *************** function _LCD_write_char *****************
 10482 ;; Defined at:
 10483 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  value           1    wreg     unsigned char 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;  value           1   16[BANK0 ] unsigned char 
 10488 ;;  D0              1   15[BANK0 ] unsigned char 
 10489 ;;  D1              1   14[BANK0 ] unsigned char 
 10490 ;;  D2              1   13[BANK0 ] unsigned char 
 10491 ;;  D3              1   12[BANK0 ] unsigned char 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;		None               void
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10501 ;;      Params:         0       0       0       0
 10502 ;;      Locals:         0       5       0       0
 10503 ;;      Temps:          0       0       0       0
 10504 ;;      Totals:         0       5       0       0
 10505 ;;Total ram usage:        5 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    7
 10508 ;; This function calls:
 10509 ;;		_LCD_send_command
 10510 ;; This function is called by:
 10511 ;;		_LCD_write_message
 10512 ;;		_LCD_write_string
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text34
 10517  002F6E                     __ptext34:
 10518                           	opt stack 0
 10519  002F6E                     _LCD_write_char:
 10520                           	opt stack 21
 10521                           
 10522                           ;incstack = 0
 10523                           ;LCD_write_char@value stored from wreg
 10524  002F6E  0100               	movlb	0	; () banked
 10525  002F70  6F70               	movwf	LCD_write_char@value& (0+255),b
 10526                           
 10527                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 10528                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 10529  002F72  848D               	bsf	3981,2,c	;volatile
 10530                           
 10531                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10532  002F74  0100               	movlb	0	; () banked
 10533  002F76  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10534  002F78  0B01               	andlw	1
 10535  002F7A  0100               	movlb	0	; () banked
 10536  002F7C  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10537                           
 10538                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 10539  002F7E  0100               	movlb	0	; () banked
 10540  002F80  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10541  002F82  46E8               	rlncf	wreg,f,c
 10542  002F84  0B03               	andlw	3
 10543  002F86  0B01               	andlw	1
 10544  002F88  0100               	movlb	0	; () banked
 10545  002F8A  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10546                           
 10547                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 10548  002F8C  0100               	movlb	0	; () banked
 10549  002F8E  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10550  002F90  42E8               	rrncf	wreg,f,c
 10551  002F92  0B07               	andlw	7
 10552  002F94  0B01               	andlw	1
 10553  002F96  0100               	movlb	0	; () banked
 10554  002F98  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10555                           
 10556                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 10557  002F9A  0100               	movlb	0	; () banked
 10558  002F9C  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10559  002F9E  0B0F               	andlw	15
 10560  002FA0  0B01               	andlw	1
 10561  002FA2  0100               	movlb	0	; () banked
 10562  002FA4  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 10566  002FA6  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10567  002FAA  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10568  002FAE  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10569  002FB2  0100               	movlb	0	; () banked
 10570  002FB4  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10571  002FB6  EC1E  F019         	call	_LCD_send_command
 10572                           
 10573                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 10574  002FBA  0100               	movlb	0	; () banked
 10575  002FBC  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10576  002FBE  46E8               	rlncf	wreg,f,c
 10577  002FC0  0B1F               	andlw	31
 10578  002FC2  0B01               	andlw	1
 10579  002FC4  0100               	movlb	0	; () banked
 10580  002FC6  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 10584  002FC8  0100               	movlb	0	; () banked
 10585  002FCA  4170               	rrncf	LCD_write_char@value& (0+255),w,b
 10586  002FCC  42E8               	rrncf	wreg,f,c
 10587  002FCE  0B3F               	andlw	63
 10588  002FD0  0B01               	andlw	1
 10589  002FD2  0100               	movlb	0	; () banked
 10590  002FD4  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 10594  002FD6  0100               	movlb	0	; () banked
 10595  002FD8  90D8               	bcf	status,0,c
 10596  002FDA  3170               	rrcf	LCD_write_char@value& (0+255),w,b
 10597  002FDC  0B01               	andlw	1
 10598  002FDE  0100               	movlb	0	; () banked
 10599  002FE0  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 10603  002FE2  0100               	movlb	0	; () banked
 10604  002FE4  5170               	movf	LCD_write_char@value& (0+255),w,b
 10605  002FE6  0B01               	andlw	1
 10606  002FE8  0100               	movlb	0	; () banked
 10607  002FEA  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 10611  002FEC  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10612  002FF0  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10613  002FF4  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10614  002FF8  0100               	movlb	0	; () banked
 10615  002FFA  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10616  002FFC  EC1E  F019         	call	_LCD_send_command
 10617                           
 10618                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 10619  003000  948D               	bcf	3981,2,c	;volatile
 10620  003002  0012               	return		;funcret
 10621  003004                     __end_of_LCD_write_char:
 10622                           	opt stack 0
 10623                           tblptru	equ	0xFF8
 10624                           tblptrh	equ	0xFF7
 10625                           tblptrl	equ	0xFF6
 10626                           tablat	equ	0xFF5
 10627                           prodh	equ	0xFF4
 10628                           prodl	equ	0xFF3
 10629                           intcon	equ	0xFF2
 10630                           postinc0	equ	0xFEE
 10631                           wreg	equ	0xFE8
 10632                           indf1	equ	0xFE7
 10633                           postinc1	equ	0xFE6
 10634                           fsr1h	equ	0xFE2
 10635                           fsr1l	equ	0xFE1
 10636                           indf2	equ	0xFDF
 10637                           postinc2	equ	0xFDE
 10638                           fsr2h	equ	0xFDA
 10639                           fsr2l	equ	0xFD9
 10640                           status	equ	0xFD8
 10641                           
 10642 ;; *************** function _LCD_goto_line *****************
 10643 ;; Defined at:
 10644 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  line            1    wreg     unsigned char 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;  line            1   12[BANK0 ] unsigned char 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;		None               void
 10651 ;; Registers used:
 10652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10658 ;;      Params:         0       0       0       0
 10659 ;;      Locals:         0       1       0       0
 10660 ;;      Temps:          0       0       0       0
 10661 ;;      Totals:         0       1       0       0
 10662 ;;Total ram usage:        1 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; Hardware stack levels required when called:    7
 10665 ;; This function calls:
 10666 ;;		_LCD_send_command
 10667 ;; This function is called by:
 10668 ;;		_main
 10669 ;;		_LCD_Handler
 10670 ;;		_board_initialization
 10671 ;;		_LCD_goto_xy
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text35
 10676  0029A8                     __ptext35:
 10677                           	opt stack 0
 10678  0029A8                     _LCD_goto_line:
 10679                           	opt stack 22
 10680                           
 10681                           ;incstack = 0
 10682                           ;LCD_goto_line@line stored from wreg
 10683  0029A8  0100               	movlb	0	; () banked
 10684  0029AA  6F6C               	movwf	LCD_goto_line@line& (0+255),b
 10685                           
 10686                           ;src\LCD_44780.c: 113: switch(line) {
 10687  0029AC  D064               	goto	l5373
 10688  0029AE                     l5365:
 10689  0029AE  0E00               	movlw	0
 10690  0029B0  0100               	movlb	0	; () banked
 10691  0029B2  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10692  0029B4  0E00               	movlw	0
 10693  0029B6  0100               	movlb	0	; () banked
 10694  0029B8  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10695  0029BA  0E00               	movlw	0
 10696  0029BC  0100               	movlb	0	; () banked
 10697  0029BE  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10698  0029C0  0E01               	movlw	1
 10699  0029C2  EC1E  F019         	call	_LCD_send_command
 10700                           
 10701                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10702  0029C6  0E00               	movlw	0
 10703  0029C8  0100               	movlb	0	; () banked
 10704  0029CA  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10705  0029CC  0E00               	movlw	0
 10706  0029CE  0100               	movlb	0	; () banked
 10707  0029D0  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10708  0029D2  0E00               	movlw	0
 10709  0029D4  0100               	movlb	0	; () banked
 10710  0029D6  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10711  0029D8  0E00               	movlw	0
 10712  0029DA  EC1E  F019         	call	_LCD_send_command
 10713                           
 10714                           ;src\LCD_44780.c: 117: break;
 10715  0029DE  0012               	return	
 10716  0029E0                     l5367:
 10717  0029E0  0E01               	movlw	1
 10718  0029E2  0100               	movlb	0	; () banked
 10719  0029E4  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10720  0029E6  0E00               	movlw	0
 10721  0029E8  0100               	movlb	0	; () banked
 10722  0029EA  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10723  0029EC  0E00               	movlw	0
 10724  0029EE  0100               	movlb	0	; () banked
 10725  0029F0  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10726  0029F2  0E01               	movlw	1
 10727  0029F4  EC1E  F019         	call	_LCD_send_command
 10728                           
 10729                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10730  0029F8  0E00               	movlw	0
 10731  0029FA  0100               	movlb	0	; () banked
 10732  0029FC  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10733  0029FE  0E00               	movlw	0
 10734  002A00  0100               	movlb	0	; () banked
 10735  002A02  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10736  002A04  0E00               	movlw	0
 10737  002A06  0100               	movlb	0	; () banked
 10738  002A08  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10739  002A0A  0E00               	movlw	0
 10740  002A0C  EC1E  F019         	call	_LCD_send_command
 10741                           
 10742                           ;src\LCD_44780.c: 121: break;
 10743  002A10  0012               	return	
 10744  002A12                     l5369:
 10745  002A12  0E00               	movlw	0
 10746  002A14  0100               	movlb	0	; () banked
 10747  002A16  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10748  002A18  0E00               	movlw	0
 10749  002A1A  0100               	movlb	0	; () banked
 10750  002A1C  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10751  002A1E  0E01               	movlw	1
 10752  002A20  0100               	movlb	0	; () banked
 10753  002A22  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10754  002A24  0E01               	movlw	1
 10755  002A26  EC1E  F019         	call	_LCD_send_command
 10756                           
 10757                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10758  002A2A  0E01               	movlw	1
 10759  002A2C  0100               	movlb	0	; () banked
 10760  002A2E  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10761  002A30  0E00               	movlw	0
 10762  002A32  0100               	movlb	0	; () banked
 10763  002A34  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10764  002A36  0E00               	movlw	0
 10765  002A38  0100               	movlb	0	; () banked
 10766  002A3A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10767  002A3C  0E00               	movlw	0
 10768  002A3E  EC1E  F019         	call	_LCD_send_command
 10769                           
 10770                           ;src\LCD_44780.c: 125: break;
 10771  002A42  0012               	return	
 10772  002A44                     l5371:
 10773  002A44  0E01               	movlw	1
 10774  002A46  0100               	movlb	0	; () banked
 10775  002A48  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10776  002A4A  0E00               	movlw	0
 10777  002A4C  0100               	movlb	0	; () banked
 10778  002A4E  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10779  002A50  0E01               	movlw	1
 10780  002A52  0100               	movlb	0	; () banked
 10781  002A54  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10782  002A56  0E01               	movlw	1
 10783  002A58  EC1E  F019         	call	_LCD_send_command
 10784                           
 10785                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10786  002A5C  0E01               	movlw	1
 10787  002A5E  0100               	movlb	0	; () banked
 10788  002A60  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10789  002A62  0E00               	movlw	0
 10790  002A64  0100               	movlb	0	; () banked
 10791  002A66  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10792  002A68  0E00               	movlw	0
 10793  002A6A  0100               	movlb	0	; () banked
 10794  002A6C  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10795  002A6E  0E00               	movlw	0
 10796  002A70  EC1E  F019         	call	_LCD_send_command
 10797                           
 10798                           ;src\LCD_44780.c: 129: }
 10799  002A74  0012               	return	
 10800  002A76                     l5373:
 10801  002A76  0100               	movlb	0	; () banked
 10802  002A78  516C               	movf	LCD_goto_line@line& (0+255),w,b
 10803                           
 10804                           ; Switch size 1, requested type "space"
 10805                           ; Number of cases is 4, Range of values is 1 to 4
 10806                           ; switch strategies available:
 10807                           ; Name         Instructions Cycles
 10808                           ; simple_byte           13     7 (average)
 10809                           ;	Chosen strategy is simple_byte
 10810  002A7A  0A01               	xorlw	1	; case 1
 10811  002A7C  B4D8               	btfsc	status,2,c
 10812  002A7E  D797               	goto	l5365
 10813  002A80  0A03               	xorlw	3	; case 2
 10814  002A82  B4D8               	btfsc	status,2,c
 10815  002A84  D7AD               	goto	l5367
 10816  002A86  0A01               	xorlw	1	; case 3
 10817  002A88  B4D8               	btfsc	status,2,c
 10818  002A8A  D7C3               	goto	l5369
 10819  002A8C  0A07               	xorlw	7	; case 4
 10820  002A8E  A4D8               	btfss	status,2,c
 10821  002A90  0012               	return	
 10822  002A92  D7D8               	goto	l5371
 10823  002A94                     __end_of_LCD_goto_line:
 10824                           	opt stack 0
 10825                           tblptru	equ	0xFF8
 10826                           tblptrh	equ	0xFF7
 10827                           tblptrl	equ	0xFF6
 10828                           tablat	equ	0xFF5
 10829                           prodh	equ	0xFF4
 10830                           prodl	equ	0xFF3
 10831                           intcon	equ	0xFF2
 10832                           postinc0	equ	0xFEE
 10833                           wreg	equ	0xFE8
 10834                           indf1	equ	0xFE7
 10835                           postinc1	equ	0xFE6
 10836                           fsr1h	equ	0xFE2
 10837                           fsr1l	equ	0xFE1
 10838                           indf2	equ	0xFDF
 10839                           postinc2	equ	0xFDE
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8
 10843                           
 10844 ;; *************** function _LCD_clear *****************
 10845 ;; Defined at:
 10846 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;		None
 10851 ;; Return value:  Size  Location     Type
 10852 ;;		None               void
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10860 ;;      Params:         0       0       0       0
 10861 ;;      Locals:         0       0       0       0
 10862 ;;      Temps:          0       0       0       0
 10863 ;;      Totals:         0       0       0       0
 10864 ;;Total ram usage:        0 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    7
 10867 ;; This function calls:
 10868 ;;		_LCD_send_command
 10869 ;; This function is called by:
 10870 ;;		_LCD_initialize
 10871 ;;		_main
 10872 ;;		_LCD_Handler
 10873 ;;		_board_initialization
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text36
 10878  003350                     __ptext36:
 10879                           	opt stack 0
 10880  003350                     _LCD_clear:
 10881                           	opt stack 21
 10882                           
 10883                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10884                           
 10885                           ;incstack = 0
 10886  003350  0E00               	movlw	0
 10887  003352  0100               	movlb	0	; () banked
 10888  003354  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10889  003356  0E00               	movlw	0
 10890  003358  0100               	movlb	0	; () banked
 10891  00335A  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10892  00335C  0E00               	movlw	0
 10893  00335E  0100               	movlb	0	; () banked
 10894  003360  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10895  003362  0E00               	movlw	0
 10896  003364  EC1E  F019         	call	_LCD_send_command
 10897                           
 10898                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10899  003368  0E00               	movlw	0
 10900  00336A  0100               	movlb	0	; () banked
 10901  00336C  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10902  00336E  0E00               	movlw	0
 10903  003370  0100               	movlb	0	; () banked
 10904  003372  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10905  003374  0E01               	movlw	1
 10906  003376  0100               	movlb	0	; () banked
 10907  003378  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10908  00337A  0E00               	movlw	0
 10909  00337C  EC1E  F019         	call	_LCD_send_command
 10910  003380  0012               	return		;funcret
 10911  003382                     __end_of_LCD_clear:
 10912                           	opt stack 0
 10913                           tblptru	equ	0xFF8
 10914                           tblptrh	equ	0xFF7
 10915                           tblptrl	equ	0xFF6
 10916                           tablat	equ	0xFF5
 10917                           prodh	equ	0xFF4
 10918                           prodl	equ	0xFF3
 10919                           intcon	equ	0xFF2
 10920                           postinc0	equ	0xFEE
 10921                           wreg	equ	0xFE8
 10922                           indf1	equ	0xFE7
 10923                           postinc1	equ	0xFE6
 10924                           fsr1h	equ	0xFE2
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           postinc2	equ	0xFDE
 10928                           fsr2h	equ	0xFDA
 10929                           fsr2l	equ	0xFD9
 10930                           status	equ	0xFD8
 10931                           
 10932 ;; *************** function _LCD_send_command *****************
 10933 ;; Defined at:
 10934 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  D3              1    wreg     unsigned char 
 10937 ;;  D2              1    8[BANK0 ] unsigned char 
 10938 ;;  D1              1    9[BANK0 ] unsigned char 
 10939 ;;  D0              1   10[BANK0 ] unsigned char 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  D3              1   11[BANK0 ] unsigned char 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;		None               void
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10951 ;;      Params:         0       3       0       0
 10952 ;;      Locals:         0       1       0       0
 10953 ;;      Temps:          0       0       0       0
 10954 ;;      Totals:         0       4       0       0
 10955 ;;Total ram usage:        4 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    6
 10958 ;; This function calls:
 10959 ;;		_LCD_enable_pulse
 10960 ;; This function is called by:
 10961 ;;		_LCD_goto_line
 10962 ;;		_LCD_write_char
 10963 ;;		_LCD_clear
 10964 ;;		_LCD_cursor
 10965 ;;		_LCD_initialize
 10966 ;;		_LCD_home
 10967 ;;		_LCD_shift
 10968 ;;		_LCD_shift_cursor
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           	psect	text37
 10973  00323C                     __ptext37:
 10974                           	opt stack 0
 10975  00323C                     _LCD_send_command:
 10976                           	opt stack 21
 10977                           
 10978                           ;incstack = 0
 10979                           ;LCD_send_command@D3 stored from wreg
 10980  00323C  0100               	movlb	0	; () banked
 10981  00323E  6F6B               	movwf	LCD_send_command@D3& (0+255),b
 10982                           
 10983                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 10984  003240  0100               	movlb	0	; () banked
 10985  003242  B16A               	btfsc	LCD_send_command@D0& (0+255),0,b
 10986  003244  D002               	bra	u5065
 10987  003246  948B               	bcf	3979,2,c	;volatile
 10988  003248  D001               	bra	u5066
 10989  00324A                     u5065:
 10990  00324A  848B               	bsf	3979,2,c	;volatile
 10991  00324C                     u5066:
 10992                           
 10993                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 10994  00324C  0100               	movlb	0	; () banked
 10995  00324E  B169               	btfsc	LCD_send_command@D1& (0+255),0,b
 10996  003250  D002               	bra	u5075
 10997  003252  968B               	bcf	3979,3,c	;volatile
 10998  003254  D001               	bra	u5076
 10999  003256                     u5075:
 11000  003256  868B               	bsf	3979,3,c	;volatile
 11001  003258                     u5076:
 11002                           
 11003                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 11004  003258  0100               	movlb	0	; () banked
 11005  00325A  B168               	btfsc	LCD_send_command@D2& (0+255),0,b
 11006  00325C  D002               	bra	u5085
 11007  00325E  908C               	bcf	3980,0,c	;volatile
 11008  003260  D001               	bra	u5086
 11009  003262                     u5085:
 11010  003262  808C               	bsf	3980,0,c	;volatile
 11011  003264                     u5086:
 11012                           
 11013                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 11014  003264  0100               	movlb	0	; () banked
 11015  003266  B16B               	btfsc	LCD_send_command@D3& (0+255),0,b
 11016  003268  D002               	bra	u5095
 11017  00326A  928C               	bcf	3980,1,c	;volatile
 11018  00326C  D001               	bra	u5096
 11019  00326E                     u5095:
 11020  00326E  828C               	bsf	3980,1,c	;volatile
 11021  003270                     u5096:
 11022                           
 11023                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11024  003270  EC29  F01A         	call	_LCD_enable_pulse	;wreg free
 11025  003274  0012               	return		;funcret
 11026  003276                     __end_of_LCD_send_command:
 11027                           	opt stack 0
 11028                           tblptru	equ	0xFF8
 11029                           tblptrh	equ	0xFF7
 11030                           tblptrl	equ	0xFF6
 11031                           tablat	equ	0xFF5
 11032                           prodh	equ	0xFF4
 11033                           prodl	equ	0xFF3
 11034                           intcon	equ	0xFF2
 11035                           postinc0	equ	0xFEE
 11036                           wreg	equ	0xFE8
 11037                           indf1	equ	0xFE7
 11038                           postinc1	equ	0xFE6
 11039                           fsr1h	equ	0xFE2
 11040                           fsr1l	equ	0xFE1
 11041                           indf2	equ	0xFDF
 11042                           postinc2	equ	0xFDE
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function _LCD_enable_pulse *****************
 11048 ;; Defined at:
 11049 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;		None               void
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11063 ;;      Params:         0       0       0       0
 11064 ;;      Locals:         0       0       0       0
 11065 ;;      Temps:          0       0       0       0
 11066 ;;      Totals:         0       0       0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    5
 11070 ;; This function calls:
 11071 ;;		_delay_ms
 11072 ;; This function is called by:
 11073 ;;		_LCD_send_command
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text38
 11078  003452                     __ptext38:
 11079                           	opt stack 0
 11080  003452                     _LCD_enable_pulse:
 11081                           	opt stack 21
 11082                           
 11083                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 11084                           
 11085                           ;incstack = 0
 11086  003452  828B               	bsf	3979,1,c	;volatile
 11087                           
 11088                           ;src\LCD_44780.c: 52: delay_ms (1);
 11089  003454  0E00               	movlw	0
 11090  003456  0100               	movlb	0	; () banked
 11091  003458  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11092  00345A  0E01               	movlw	1
 11093  00345C  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11094  00345E  EC3B  F019         	call	_delay_ms	;wreg free
 11095                           
 11096                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 11097  003462  928B               	bcf	3979,1,c	;volatile
 11098                           
 11099                           ;src\LCD_44780.c: 54: delay_ms (1);
 11100  003464  0E00               	movlw	0
 11101  003466  0100               	movlb	0	; () banked
 11102  003468  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11103  00346A  0E01               	movlw	1
 11104  00346C  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11105  00346E  EC3B  F019         	call	_delay_ms	;wreg free
 11106  003472  0012               	return		;funcret
 11107  003474                     __end_of_LCD_enable_pulse:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           intcon	equ	0xFF2
 11116                           postinc0	equ	0xFEE
 11117                           wreg	equ	0xFE8
 11118                           indf1	equ	0xFE7
 11119                           postinc1	equ	0xFE6
 11120                           fsr1h	equ	0xFE2
 11121                           fsr1l	equ	0xFE1
 11122                           indf2	equ	0xFDF
 11123                           postinc2	equ	0xFDE
 11124                           fsr2h	equ	0xFDA
 11125                           fsr2l	equ	0xFD9
 11126                           status	equ	0xFD8
 11127                           
 11128 ;; *************** function _delay_ms *****************
 11129 ;; Defined at:
 11130 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  value_ms        2    6[BANK0 ] unsigned int 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;		None
 11135 ;; Return value:  Size  Location     Type
 11136 ;;		None               void
 11137 ;; Registers used:
 11138 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11144 ;;      Params:         0       2       0       0
 11145 ;;      Locals:         0       0       0       0
 11146 ;;      Temps:          0       0       0       0
 11147 ;;      Totals:         0       2       0       0
 11148 ;;Total ram usage:        2 bytes
 11149 ;; Hardware stack levels used:    1
 11150 ;; Hardware stack levels required when called:    4
 11151 ;; This function calls:
 11152 ;;		___wmul
 11153 ;; This function is called by:
 11154 ;;		_delay_s
 11155 ;;		_LCD_enable_pulse
 11156 ;;		_LCD_initialize
 11157 ;;		_main
 11158 ;;		_USART_Send
 11159 ;;		_board_initialization
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text39
 11164  003276                     __ptext39:
 11165                           	opt stack 0
 11166  003276                     _delay_ms:
 11167                           	opt stack 26
 11168                           
 11169                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11170                           
 11171                           ;incstack = 0
 11172  003276  C045  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11173  00327A  0100               	movlb	0	; () banked
 11174  00327C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 11175  00327E  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 11176  003282  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11177  003286  EC74  F019         	call	___wmul	;wreg free
 11178  00328A  C060  F0F5         	movff	?___wmul,_clock_counter_reference	;volatile
 11179  00328E  C061  F0F6         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11180                           
 11181                           ;src\delay.c: 75: while (clock_counter_reference) {
 11182  003292  D007               	goto	l103
 11183  003294                     l4547:
 11184                           
 11185                           ;src\delay.c: 85: _delay(240);
 11186  003294  0E50               	movlw	80
 11187  003296                     u7487:
 11188  003296  2EE8               	decfsz	wreg,f,c
 11189  003298  D7FE               	goto	u7487
 11190                           
 11191                           ;src\delay.c: 88: clock_counter_reference--;
 11192  00329A  0100               	movlb	0	; () banked
 11193  00329C  07F5               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11194  00329E  A0D8               	btfss	status,0,c
 11195  0032A0  07F6               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11196  0032A2                     l103:
 11197  0032A2  0100               	movlb	0	; () banked
 11198  0032A4  51F5               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11199  0032A6  0100               	movlb	0	; () banked
 11200  0032A8  11F6               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11201  0032AA  B4D8               	btfsc	status,2,c
 11202  0032AC  0012               	return	
 11203  0032AE  D7F2               	goto	l4547
 11204  0032B0                     __end_of_delay_ms:
 11205                           	opt stack 0
 11206                           tblptru	equ	0xFF8
 11207                           tblptrh	equ	0xFF7
 11208                           tblptrl	equ	0xFF6
 11209                           tablat	equ	0xFF5
 11210                           prodh	equ	0xFF4
 11211                           prodl	equ	0xFF3
 11212                           intcon	equ	0xFF2
 11213                           postinc0	equ	0xFEE
 11214                           wreg	equ	0xFE8
 11215                           indf1	equ	0xFE7
 11216                           postinc1	equ	0xFE6
 11217                           fsr1h	equ	0xFE2
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           fsr2h	equ	0xFDA
 11222                           fsr2l	equ	0xFD9
 11223                           status	equ	0xFD8
 11224                           
 11225 ;; *************** function ___wmul *****************
 11226 ;; Defined at:
 11227 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11230 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  product         2    4[BANK0 ] unsigned int 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  2    0[BANK0 ] unsigned int 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0, prodl, prodh
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11242 ;;      Params:         0       4       0       0
 11243 ;;      Locals:         0       2       0       0
 11244 ;;      Temps:          0       0       0       0
 11245 ;;      Totals:         0       6       0       0
 11246 ;;Total ram usage:        6 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    3
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_delay_ms
 11253 ;;		_sprintf
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text40
 11258  0032E8                     __ptext40:
 11259                           	opt stack 0
 11260  0032E8                     ___wmul:
 11261                           	opt stack 26
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;incstack = 0
 11265  0032E8  0100               	movlb	0	; () banked
 11266  0032EA  5160               	movf	___wmul@multiplier& (0+255),w,b
 11267  0032EC  0100               	movlb	0	; () banked
 11268  0032EE  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11269  0032F0  CFF3 F064          	movff	prodl,___wmul@product
 11270  0032F4  CFF4 F065          	movff	prodh,___wmul@product+1
 11271  0032F8  0100               	movlb	0	; () banked
 11272  0032FA  5160               	movf	___wmul@multiplier& (0+255),w,b
 11273  0032FC  0100               	movlb	0	; () banked
 11274  0032FE  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11275  003300  50F3               	movf	prodl,w,c
 11276  003302  0100               	movlb	0	; () banked
 11277  003304  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11278  003306  0100               	movlb	0	; () banked
 11279  003308  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11280  00330A  0100               	movlb	0	; () banked
 11281  00330C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11282  00330E  50F3               	movf	prodl,w,c
 11283  003310  0100               	movlb	0	; () banked
 11284  003312  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11285                           
 11286                           ; BSR set to: 0
 11287  003314  C064  F060         	movff	___wmul@product,?___wmul
 11288  003318  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11289  00331C  0012               	return	
 11290  00331E                     __end_of___wmul:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           postinc0	equ	0xFEE
 11300                           wreg	equ	0xFE8
 11301                           indf1	equ	0xFE7
 11302                           postinc1	equ	0xFE6
 11303                           fsr1h	equ	0xFE2
 11304                           fsr1l	equ	0xFE1
 11305                           indf2	equ	0xFDF
 11306                           postinc2	equ	0xFDE
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _Joystick_Polling *****************
 11312 ;; Defined at:
 11313 ;;		line 221 in file "telecomando.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;		None               void
 11320 ;; Registers used:
 11321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11327 ;;      Params:         0       0       0       0
 11328 ;;      Locals:         0       0       0       0
 11329 ;;      Temps:          0       1       0       0
 11330 ;;      Totals:         0       1       0       0
 11331 ;;Total ram usage:        1 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    3
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		_main
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text41
 11342  003162                     __ptext41:
 11343                           	opt stack 0
 11344  003162                     _Joystick_Polling:
 11345                           	opt stack 27
 11346                           
 11347                           ;telecomando.c: 222: for (i = 0; i < 2; i++) {
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;incstack = 0
 11351  003162  0E00               	movlw	0
 11352  003164  6E3E               	movwf	_i,c	;volatile
 11353  003166                     l5953:
 11354  003166  0E01               	movlw	1
 11355  003168  643E               	cpfsgt	_i,c	;volatile
 11356  00316A  D001               	goto	l284
 11357  00316C  0012               	return	
 11358  00316E                     l284:
 11359                           
 11360                           ;telecomando.c: 223: ADCON0bits.GO = 1;
 11361  00316E  82C2               	bsf	4034,1,c	;volatile
 11362  003170                     l286:
 11363  003170  B2C2               	btfsc	4034,1,c	;volatile
 11364  003172  D7FE               	goto	l286
 11365                           
 11366                           ;telecomando.c: 225: JoystickValues[i] = ADRESH;
 11367  003174  503E               	movf	_i,w,c	;volatile
 11368  003176  0D01               	mullw	1
 11369  003178  0E33               	movlw	low _JoystickValues
 11370  00317A  24F3               	addwf	prodl,w,c
 11371  00317C  6ED9               	movwf	fsr2l,c
 11372  00317E  0E00               	movlw	high _JoystickValues
 11373  003180  20F4               	addwfc	prodh,w,c
 11374  003182  6EDA               	movwf	fsr2h,c
 11375  003184  CFC4 FFDF          	movff	4036,indf2	;volatile
 11376                           
 11377                           ;telecomando.c: 226: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 11378  003188  A4C2               	btfss	4034,2,c	;volatile
 11379  00318A  D002               	goto	u7210
 11380  00318C  0E01               	movlw	1
 11381  00318E  D001               	goto	u7216
 11382  003190                     u7210:
 11383  003190  0E00               	movlw	0
 11384  003192                     u7216:
 11385  003192  0AFF               	xorlw	255
 11386  003194  0100               	movlb	0	; () banked
 11387  003196  6F60               	movwf	??_Joystick_Polling& (0+255),b
 11388  003198  0100               	movlb	0	; () banked
 11389  00319A  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11390  00319C  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11391  00319E  50C2               	movf	4034,w,c	;volatile
 11392  0031A0  0100               	movlb	0	; () banked
 11393  0031A2  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11394  0031A4  0BFB               	andlw	-5
 11395  0031A6  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11396  0031A8  6EC2               	movwf	4034,c	;volatile
 11397                           
 11398                           ; BSR set to: 0
 11399  0031AA  2A3E               	incf	_i,f,c	;volatile
 11400  0031AC  D7DC               	goto	l5953
 11401  0031AE                     __end_of_Joystick_Polling:
 11402                           	opt stack 0
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           postinc0	equ	0xFEE
 11411                           wreg	equ	0xFE8
 11412                           indf1	equ	0xFE7
 11413                           postinc1	equ	0xFE6
 11414                           fsr1h	equ	0xFE2
 11415                           fsr1l	equ	0xFE1
 11416                           indf2	equ	0xFDF
 11417                           postinc2	equ	0xFDE
 11418                           fsr2h	equ	0xFDA
 11419                           fsr2l	equ	0xFD9
 11420                           status	equ	0xFD8
 11421                           
 11422 ;; *************** function _ISR_bassa *****************
 11423 ;; Defined at:
 11424 ;;		line 104 in file "telecomando.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;		None
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;		None               void
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11438 ;;      Params:         0       0       0       0
 11439 ;;      Locals:         0       0       0       0
 11440 ;;      Temps:         17       0       0       0
 11441 ;;      Totals:        17       0       0       0
 11442 ;;Total ram usage:       17 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:    2
 11445 ;; This function calls:
 11446 ;;		Nothing
 11447 ;; This function is called by:
 11448 ;;		Interrupt level 1
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	intcodelo
 11453  000018                     __pintcodelo:
 11454                           	opt stack 0
 11455  000018                     _ISR_bassa:
 11456                           	opt stack 21
 11457                           
 11458                           ;incstack = 0
 11459  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11460  00001A  CFD8 F001          	movff	status,??_ISR_bassa
 11461  00001E  CFE8 F002          	movff	wreg,??_ISR_bassa+1
 11462  000022  CFE0 F003          	movff	bsr,??_ISR_bassa+2
 11463  000026  CFFA F004          	movff	pclath,??_ISR_bassa+3
 11464  00002A  CFFB F005          	movff	pclatu,??_ISR_bassa+4
 11465  00002E  CFE9 F006          	movff	fsr0l,??_ISR_bassa+5
 11466  000032  CFEA F007          	movff	fsr0h,??_ISR_bassa+6
 11467  000036  CFE1 F008          	movff	fsr1l,??_ISR_bassa+7
 11468  00003A  CFE2 F009          	movff	fsr1h,??_ISR_bassa+8
 11469  00003E  CFD9 F00A          	movff	fsr2l,??_ISR_bassa+9
 11470  000042  CFDA F00B          	movff	fsr2h,??_ISR_bassa+10
 11471  000046  CFF3 F00C          	movff	prodl,??_ISR_bassa+11
 11472  00004A  CFF4 F00D          	movff	prodh,??_ISR_bassa+12
 11473  00004E  CFF6 F00E          	movff	tblptrl,??_ISR_bassa+13
 11474  000052  CFF7 F00F          	movff	tblptrh,??_ISR_bassa+14
 11475  000056  CFF8 F010          	movff	tblptru,??_ISR_bassa+15
 11476  00005A  CFF5 F011          	movff	tablat,??_ISR_bassa+16
 11477                           
 11478                           ;telecomando.c: 105: if (PIR2bits.TMR3IF) {
 11479  00005E  A2A1               	btfss	4001,1,c	;volatile
 11480  000060  D00B               	goto	i1l251
 11481                           
 11482                           ;telecomando.c: 106: time_counter++;
 11483  000062  0E01               	movlw	1
 11484  000064  262F               	addwf	_time_counter,f,c	;volatile
 11485  000066  0E00               	movlw	0
 11486  000068  2230               	addwfc	_time_counter+1,f,c	;volatile
 11487  00006A  2231               	addwfc	_time_counter+2,f,c	;volatile
 11488  00006C  2232               	addwfc	_time_counter+3,f,c	;volatile
 11489                           
 11490                           ;telecomando.c: 107: TMR3H = 0x63;
 11491  00006E  0E63               	movlw	99
 11492  000070  6EB3               	movwf	4019,c	;volatile
 11493                           
 11494                           ;telecomando.c: 108: TMR3L = 0xC0;
 11495  000072  0EC0               	movlw	192
 11496  000074  6EB2               	movwf	4018,c	;volatile
 11497                           
 11498                           ;telecomando.c: 109: PIR2bits.TMR3IF = 0;
 11499  000076  92A1               	bcf	4001,1,c	;volatile
 11500  000078                     i1l251:
 11501  000078  C011  FFF5         	movff	??_ISR_bassa+16,tablat
 11502  00007C  C010  FFF8         	movff	??_ISR_bassa+15,tblptru
 11503  000080  C00F  FFF7         	movff	??_ISR_bassa+14,tblptrh
 11504  000084  C00E  FFF6         	movff	??_ISR_bassa+13,tblptrl
 11505  000088  C00D  FFF4         	movff	??_ISR_bassa+12,prodh
 11506  00008C  C00C  FFF3         	movff	??_ISR_bassa+11,prodl
 11507  000090  C00B  FFDA         	movff	??_ISR_bassa+10,fsr2h
 11508  000094  C00A  FFD9         	movff	??_ISR_bassa+9,fsr2l
 11509  000098  C009  FFE2         	movff	??_ISR_bassa+8,fsr1h
 11510  00009C  C008  FFE1         	movff	??_ISR_bassa+7,fsr1l
 11511  0000A0  C007  FFEA         	movff	??_ISR_bassa+6,fsr0h
 11512  0000A4  C006  FFE9         	movff	??_ISR_bassa+5,fsr0l
 11513  0000A8  C005  FFFB         	movff	??_ISR_bassa+4,pclatu
 11514  0000AC  C004  FFFA         	movff	??_ISR_bassa+3,pclath
 11515  0000B0  C003  FFE0         	movff	??_ISR_bassa+2,bsr
 11516  0000B4  C002  FFE8         	movff	??_ISR_bassa+1,wreg
 11517  0000B8  C001  FFD8         	movff	??_ISR_bassa,status
 11518  0000BC  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11519  0000BE  0010               	retfie	
 11520  0000C0                     __end_of_ISR_bassa:
 11521                           	opt stack 0
 11522                           pclatu	equ	0xFFB
 11523                           pclath	equ	0xFFA
 11524                           tblptru	equ	0xFF8
 11525                           tblptrh	equ	0xFF7
 11526                           tblptrl	equ	0xFF6
 11527                           tablat	equ	0xFF5
 11528                           prodh	equ	0xFF4
 11529                           prodl	equ	0xFF3
 11530                           intcon	equ	0xFF2
 11531                           postinc0	equ	0xFEE
 11532                           fsr0h	equ	0xFEA
 11533                           fsr0l	equ	0xFE9
 11534                           wreg	equ	0xFE8
 11535                           indf1	equ	0xFE7
 11536                           postinc1	equ	0xFE6
 11537                           fsr1h	equ	0xFE2
 11538                           fsr1l	equ	0xFE1
 11539                           bsr	equ	0xFE0
 11540                           indf2	equ	0xFDF
 11541                           postinc2	equ	0xFDE
 11542                           fsr2h	equ	0xFDA
 11543                           fsr2l	equ	0xFD9
 11544                           status	equ	0xFD8
 11545                           
 11546 ;; *************** function _ISR_alta *****************
 11547 ;; Defined at:
 11548 ;;		line 99 in file "telecomando.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;		None               void
 11555 ;; Registers used:
 11556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11562 ;;      Params:         0       0       0       0
 11563 ;;      Locals:         0       0       0       0
 11564 ;;      Temps:         14       0       0       0
 11565 ;;      Totals:        14       0       0       0
 11566 ;;Total ram usage:       14 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    1
 11569 ;; This function calls:
 11570 ;;		i2_USART_RX
 11571 ;; This function is called by:
 11572 ;;		Interrupt level 2
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	intcode
 11577  000008                     __pintcode:
 11578                           	opt stack 0
 11579  000008                     _ISR_alta:
 11580                           	opt stack 21
 11581                           
 11582                           ;incstack = 0
 11583  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11584  00000A  CFFA F015          	movff	pclath,??_ISR_alta
 11585  00000E  CFFB F016          	movff	pclatu,??_ISR_alta+1
 11586  000012  ED78  F018         	call	int_func,f	;refresh shadow registers
 11587                           pclatu	equ	0xFFB
 11588                           pclath	equ	0xFFA
 11589                           tblptru	equ	0xFF8
 11590                           tblptrh	equ	0xFF7
 11591                           tblptrl	equ	0xFF6
 11592                           tablat	equ	0xFF5
 11593                           prodh	equ	0xFF4
 11594                           prodl	equ	0xFF3
 11595                           intcon	equ	0xFF2
 11596                           postinc0	equ	0xFEE
 11597                           fsr0h	equ	0xFEA
 11598                           fsr0l	equ	0xFE9
 11599                           wreg	equ	0xFE8
 11600                           indf1	equ	0xFE7
 11601                           postinc1	equ	0xFE6
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           bsr	equ	0xFE0
 11605                           indf2	equ	0xFDF
 11606                           postinc2	equ	0xFDE
 11607                           fsr2h	equ	0xFDA
 11608                           fsr2l	equ	0xFD9
 11609                           status	equ	0xFD8
 11610                           
 11611                           	psect	intcode_body
 11612  0030F0                     __pintcode_body:
 11613                           	opt stack 21
 11614  0030F0                     int_func:
 11615                           	opt stack 21
 11616  0030F0  0006               	pop		; remove dummy address from shadow register refresh
 11617  0030F2  CFE9 F017          	movff	fsr0l,??_ISR_alta+2
 11618  0030F6  CFEA F018          	movff	fsr0h,??_ISR_alta+3
 11619  0030FA  CFE1 F019          	movff	fsr1l,??_ISR_alta+4
 11620  0030FE  CFE2 F01A          	movff	fsr1h,??_ISR_alta+5
 11621  003102  CFD9 F01B          	movff	fsr2l,??_ISR_alta+6
 11622  003106  CFDA F01C          	movff	fsr2h,??_ISR_alta+7
 11623  00310A  CFF3 F01D          	movff	prodl,??_ISR_alta+8
 11624  00310E  CFF4 F01E          	movff	prodh,??_ISR_alta+9
 11625  003112  CFF6 F01F          	movff	tblptrl,??_ISR_alta+10
 11626  003116  CFF7 F020          	movff	tblptrh,??_ISR_alta+11
 11627  00311A  CFF8 F021          	movff	tblptru,??_ISR_alta+12
 11628  00311E  CFF5 F022          	movff	tablat,??_ISR_alta+13
 11629                           
 11630                           ;telecomando.c: 100: USART_RX();
 11631  003122  EC6B  F017         	call	i2_USART_RX	;wreg free
 11632  003126  C022  FFF5         	movff	??_ISR_alta+13,tablat
 11633  00312A  C021  FFF8         	movff	??_ISR_alta+12,tblptru
 11634  00312E  C020  FFF7         	movff	??_ISR_alta+11,tblptrh
 11635  003132  C01F  FFF6         	movff	??_ISR_alta+10,tblptrl
 11636  003136  C01E  FFF4         	movff	??_ISR_alta+9,prodh
 11637  00313A  C01D  FFF3         	movff	??_ISR_alta+8,prodl
 11638  00313E  C01C  FFDA         	movff	??_ISR_alta+7,fsr2h
 11639  003142  C01B  FFD9         	movff	??_ISR_alta+6,fsr2l
 11640  003146  C01A  FFE2         	movff	??_ISR_alta+5,fsr1h
 11641  00314A  C019  FFE1         	movff	??_ISR_alta+4,fsr1l
 11642  00314E  C018  FFEA         	movff	??_ISR_alta+3,fsr0h
 11643  003152  C017  FFE9         	movff	??_ISR_alta+2,fsr0l
 11644  003156  C016  FFFB         	movff	??_ISR_alta+1,pclatu
 11645  00315A  C015  FFFA         	movff	??_ISR_alta,pclath
 11646  00315E  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11647  003160  0011               	retfie		f
 11648  003162                     __end_of_ISR_alta:
 11649                           	opt stack 0
 11650                           pclatu	equ	0xFFB
 11651                           pclath	equ	0xFFA
 11652                           tblptru	equ	0xFF8
 11653                           tblptrh	equ	0xFF7
 11654                           tblptrl	equ	0xFF6
 11655                           tablat	equ	0xFF5
 11656                           prodh	equ	0xFF4
 11657                           prodl	equ	0xFF3
 11658                           intcon	equ	0xFF2
 11659                           postinc0	equ	0xFEE
 11660                           fsr0h	equ	0xFEA
 11661                           fsr0l	equ	0xFE9
 11662                           wreg	equ	0xFE8
 11663                           indf1	equ	0xFE7
 11664                           postinc1	equ	0xFE6
 11665                           fsr1h	equ	0xFE2
 11666                           fsr1l	equ	0xFE1
 11667                           bsr	equ	0xFE0
 11668                           indf2	equ	0xFDF
 11669                           postinc2	equ	0xFDE
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function i2_USART_RX *****************
 11675 ;; Defined at:
 11676 ;;		line 283 in file "telecomando.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  USART_RX        1   19[COMRAM] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;		None               void
 11683 ;; Registers used:
 11684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11690 ;;      Params:         0       0       0       0
 11691 ;;      Locals:         1       0       0       0
 11692 ;;      Temps:          2       0       0       0
 11693 ;;      Totals:         3       0       0       0
 11694 ;;Total ram usage:        3 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; This function calls:
 11697 ;;		Nothing
 11698 ;; This function is called by:
 11699 ;;		_ISR_alta
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text44
 11704  002ED6                     __ptext44:
 11705                           	opt stack 0
 11706  002ED6                     i2_USART_RX:
 11707                           	opt stack 21
 11708                           
 11709                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
 11710                           
 11711                           ;incstack = 0
 11712  002ED6  AA9E               	btfss	3998,5,c	;volatile
 11713  002ED8  D047               	goto	i2l4333
 11714                           
 11715                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
 11716  002EDA  9EF2               	bcf	intcon,7,c	;volatile
 11717                           
 11718                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
 11719  002EDC  9CF2               	bcf	intcon,6,c	;volatile
 11720                           
 11721                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
 11722  002EDE  92A0               	bcf	4000,1,c	;volatile
 11723                           
 11724                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
 11725  002EE0  9A9D               	bcf	3997,5,c	;volatile
 11726                           
 11727                           ;telecomando.c: 290: if (RCREG == 0xAA) {
 11728  002EE2  0EAA               	movlw	170
 11729  002EE4  18AE               	xorwf	4014,w,c	;volatile
 11730  002EE6  A4D8               	btfss	status,2,c
 11731  002EE8  D016               	goto	i2l4311
 11732                           
 11733                           ;telecomando.c: 292: for (unsigned char i = 0; i < 7; i++) {
 11734  002EEA  0E00               	movlw	0
 11735  002EEC  6E14               	movwf	i2USART_RX@i,c
 11736  002EEE                     i2l4299:
 11737  002EEE  0E06               	movlw	6
 11738  002EF0  6414               	cpfsgt	i2USART_RX@i,c
 11739  002EF2  D001               	goto	i2l316
 11740  002EF4  D010               	goto	i2l4311
 11741  002EF6                     i2l316:
 11742                           
 11743                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
 11744  002EF6  8E83               	bsf	3971,7,c	;volatile
 11745  002EF8                     i2l318:
 11746  002EF8  AA9E               	btfss	3998,5,c	;volatile
 11747  002EFA  D7FE               	goto	i2l318
 11748                           
 11749                           ;telecomando.c: 295: }
 11750                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
 11751  002EFC  5014               	movf	i2USART_RX@i,w,c
 11752  002EFE  0D01               	mullw	1
 11753  002F00  0EC9               	movlw	low _USART_Rx
 11754  002F02  24F3               	addwf	prodl,w,c
 11755  002F04  6ED9               	movwf	fsr2l,c
 11756  002F06  0E00               	movlw	high _USART_Rx
 11757  002F08  20F4               	addwfc	prodh,w,c
 11758  002F0A  6EDA               	movwf	fsr2h,c
 11759  002F0C  CFAE FFDF          	movff	4014,indf2	;volatile
 11760                           
 11761                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
 11762  002F10  9A9E               	bcf	3998,5,c	;volatile
 11763  002F12  2A14               	incf	i2USART_RX@i,f,c
 11764  002F14  D7EC               	goto	i2l4299
 11765  002F16                     i2l4311:
 11766                           
 11767                           ;telecomando.c: 299: }
 11768                           ;telecomando.c: 301: }
 11769                           ;telecomando.c: 302: if (USART_Rx[5] == 0xAA) {
 11770  002F16  0EAA               	movlw	170
 11771  002F18  0100               	movlb	0	; () banked
 11772  002F1A  19CE               	xorwf	(_USART_Rx+5)& (0+255),w,b
 11773  002F1C  A4D8               	btfss	status,2,c
 11774  002F1E  D021               	goto	i2l4327
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
 11778  002F20  0100               	movlb	0	; () banked
 11779  002F22  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
 11780  002F24  D002               	goto	i2u476_40
 11781  002F26  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11782  002F28  D001               	goto	i2u477_45
 11783  002F2A                     i2u476_40:
 11784  002F2A  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11785  002F2C                     i2u477_45:
 11786                           
 11787                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
 11788  002F2C  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 11789                           
 11790                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
 11791  002F30  0E80               	movlw	128
 11792  002F32  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
 11793  002F34  A4D8               	btfss	status,2,c
 11794  002F36  D002               	goto	i2l4319
 11795                           
 11796                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
 11797  002F38  0E00               	movlw	0
 11798  002F3A  6E3B               	movwf	_actual_speed_pk1,c	;volatile
 11799  002F3C                     i2l4319:
 11800                           
 11801                           ;telecomando.c: 308: }
 11802                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
 11803  002F3C  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 11804                           
 11805                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
 11806  002F40  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
 11807                           
 11808                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
 11809  002F44  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
 11810                           
 11811                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
 11812  002F48  503A               	movf	_actual_speed_pk0,w,c	;volatile
 11813  002F4A  C03B  F012         	movff	_actual_speed_pk1,??i2_USART_RX	;volatile
 11814  002F4E  6A13               	clrf	(??i2_USART_RX+1)& (0+255),c
 11815  002F50  C012  F013         	movff	??i2_USART_RX,??i2_USART_RX+1
 11816  002F54  6A12               	clrf	??i2_USART_RX,c
 11817  002F56  1012               	iorwf	??i2_USART_RX,w,c
 11818  002F58  0100               	movlb	0	; () banked
 11819  002F5A  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
 11820  002F5C  5013               	movf	??i2_USART_RX+1,w,c
 11821  002F5E  0100               	movlb	0	; () banked
 11822  002F60  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
 11823  002F62                     i2l4327:
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;telecomando.c: 313: }
 11827                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
 11828  002F62  9A9E               	bcf	3998,5,c	;volatile
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
 11832  002F64  8A9D               	bsf	3997,5,c	;volatile
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
 11836  002F66  82A0               	bsf	4000,1,c	;volatile
 11837  002F68                     i2l4333:
 11838                           
 11839                           ;telecomando.c: 317: }
 11840                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
 11841  002F68  8EF2               	bsf	intcon,7,c	;volatile
 11842                           
 11843                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
 11844  002F6A  8CF2               	bsf	intcon,6,c	;volatile
 11845  002F6C  0012               	return		;funcret
 11846  002F6E                     __end_ofi2_USART_RX:
 11847                           	opt stack 0
 11848                           pclatu	equ	0xFFB
 11849                           pclath	equ	0xFFA
 11850                           tblptru	equ	0xFF8
 11851                           tblptrh	equ	0xFF7
 11852                           tblptrl	equ	0xFF6
 11853                           tablat	equ	0xFF5
 11854                           prodh	equ	0xFF4
 11855                           prodl	equ	0xFF3
 11856                           intcon	equ	0xFF2
 11857                           postinc0	equ	0xFEE
 11858                           fsr0h	equ	0xFEA
 11859                           fsr0l	equ	0xFE9
 11860                           wreg	equ	0xFE8
 11861                           indf1	equ	0xFE7
 11862                           postinc1	equ	0xFE6
 11863                           fsr1h	equ	0xFE2
 11864                           fsr1l	equ	0xFE1
 11865                           bsr	equ	0xFE0
 11866                           indf2	equ	0xFDF
 11867                           postinc2	equ	0xFDE
 11868                           fsr2h	equ	0xFDA
 11869                           fsr2l	equ	0xFD9
 11870                           status	equ	0xFD8
 11871                           pclatu	equ	0xFFB
 11872                           pclath	equ	0xFFA
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           postinc0	equ	0xFEE
 11881                           fsr0h	equ	0xFEA
 11882                           fsr0l	equ	0xFE9
 11883                           wreg	equ	0xFE8
 11884                           indf1	equ	0xFE7
 11885                           postinc1	equ	0xFE6
 11886                           fsr1h	equ	0xFE2
 11887                           fsr1l	equ	0xFE1
 11888                           bsr	equ	0xFE0
 11889                           indf2	equ	0xFDF
 11890                           postinc2	equ	0xFDE
 11891                           fsr2h	equ	0xFDA
 11892                           fsr2l	equ	0xFD9
 11893                           status	equ	0xFD8
 11894                           
 11895                           	psect	rparam
 11896  0000                     pclatu	equ	0xFFB
 11897                           pclath	equ	0xFFA
 11898                           tblptru	equ	0xFF8
 11899                           tblptrh	equ	0xFF7
 11900                           tblptrl	equ	0xFF6
 11901                           tablat	equ	0xFF5
 11902                           prodh	equ	0xFF4
 11903                           prodl	equ	0xFF3
 11904                           intcon	equ	0xFF2
 11905                           postinc0	equ	0xFEE
 11906                           fsr0h	equ	0xFEA
 11907                           fsr0l	equ	0xFE9
 11908                           wreg	equ	0xFE8
 11909                           indf1	equ	0xFE7
 11910                           postinc1	equ	0xFE6
 11911                           fsr1h	equ	0xFE2
 11912                           fsr1l	equ	0xFE1
 11913                           bsr	equ	0xFE0
 11914                           indf2	equ	0xFDF
 11915                           postinc2	equ	0xFDE
 11916                           fsr2h	equ	0xFDA
 11917                           fsr2l	equ	0xFD9
 11918                           status	equ	0xFD8
 11919                           
 11920                           	psect	temp
 11921  000046                     btemp:
 11922                           	opt stack 0
 11923  000046                     	ds	1
 11924  0000                     int$flags	set	btemp
 11925                           pclatu	equ	0xFFB
 11926                           pclath	equ	0xFFA
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           postinc0	equ	0xFEE
 11935                           fsr0h	equ	0xFEA
 11936                           fsr0l	equ	0xFE9
 11937                           wreg	equ	0xFE8
 11938                           indf1	equ	0xFE7
 11939                           postinc1	equ	0xFE6
 11940                           fsr1h	equ	0xFE2
 11941                           fsr1l	equ	0xFE1
 11942                           bsr	equ	0xFE0
 11943                           indf2	equ	0xFDF
 11944                           postinc2	equ	0xFDE
 11945                           fsr2h	equ	0xFDA
 11946                           fsr2l	equ	0xFD9
 11947                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         89
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      69
    BANK0           160    105     151
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_USART_RX

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _USART_Send->_delay_ms
    _putsUSART->_WriteUSART
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  182064
                                             97 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                           _USART_RX
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   61502
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                         _WriteUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1640
                                              8 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                             14 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                             12 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           5     5      0    2132
                                              8 BANK0      5     5      0
                           _delay_ms
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     170
                                              1 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX                                             3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   81370
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             87 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             21 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             79 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             59 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     639
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9827
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                             12 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                             12 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                              8 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1572
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            14    14      0      68
                                             20 COMRAM    14    14      0
                         i2_USART_RX
 ---------------------------------------------------------------------------------
 (10) i2_USART_RX                                          3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   _USART_RX
   _USART_Send
     _delay_ms
       ___wmul
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _WriteUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   i2_USART_RX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     69      97       4       94.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      45       1       73.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101       9        0.0%
DATA                 0      0     101      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 21:40:41 2016

                             _i 003E       __size_of_delay_set_quartz 000A                    ?_LCD_Handler 0001  
                  ___awdiv@sign 006B              delay_s@repeat_loop 0069                              bsr 000FE0  
           ___wmul@multiplicand 0062                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                             l103 32A2  
                           l301 2592                             l411 069C                             l316 2D16  
                           l318 2D18                             l263 18E4                             l256 17C2  
                           l450 30A8                             l284 316E                             l286 3170  
                           l702 22C4                             l454 30C2                             l279 347C  
                           l455 30C4                             l456 30D0                             l457 30D2  
                           l467 3404                             l692 248A                             l790 20F2  
                           l938 3072                             l980 0FD2                             l796 2172  
                           l981 0F9E                             l885 2CE0                             l789 20AE  
                           l895 2EC4                             l979 0FDE            ??_PWR_Button_Polling 0060  
                           l996 1152                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 006C                             _dir 003D                             _str 0119  
                  ___awmod@sign 0065                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0082                    ___flmul@bexp 0087                    ___flmul@sign 0081  
                  ___flmul@temp 008C                    ___flmul@prod 0088                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A0                    __CFG_WDT$OFF 000000  
                          l1005 11E6                            l1101 1F6A                            l1102 1F82  
                          l1072 15F6                            l1065 135A                            l1082 1708  
                          l1074 1664                            l1094 1F0E                            l1087 1E62  
                          l5005 349E                            l5121 2128                            l5025 1DC6  
                          l5017 1CDA                            l5131 2158                            l5213 2272  
                          l5205 21D2                            l5301 2E58                            l5141 233A  
                          l5133 2168                            l5125 213C                            l5045 0B70  
                          l5303 2E68                            l5063 0DD2                            l5039 0AAA  
                          l5209 2220                            l5305 2E6E                            l5161 23B4  
                          l5057 0D0C                            l5049 0B9C                            l6113 18D0  
                          l5219 2310                            l5227 32D6                            l4611 0EE2  
                          l4603 0EB8                            l5331 1EF0                            l5147 2360  
                          l5091 205A                            l5075 33FA                            l6123 18F0  
                          l6115 18D6                            l5253 2930                            l5237 28C2  
                          l5309 2EB2                            l5325 1E9A                            l5181 2440  
                          l5085 2020                            l6125 18F8                            l6109 18BE  
                          l4711 119A                            l5271 2996                            l5263 2960  
                          l5351 1FD4                            l5327 1EA2                            l5319 1E72  
                          l5191 2470                            l5511 032C                            l5503 02A8  
                          l6135 19D6                            l4705 1184                            l4721 11BA  
                          l4641 0F1E                            l5265 2970                            l5257 2944  
                          l5281 2C64                            l5337 1F4C                            l5329 1EB2  
                          l5193 2480                            l5185 2454                            l5169 2408  
                          l4801 136E                            l5521 03C6                            l5441 00D4  
                          l5361 33A0                            l6145 1ACC                            l6081 17A2  
                          l4547 3294                            l5371 2A44                            l4731 11E0  
                          l4715 11A6                            l4723 11C0                            l5267 297A  
                          l5283 2C74                            l5339 1F5C                            l5611 0828  
                          l5531 044A                            l5515 035E                            l6139 1A54  
                          l6091 17CC                            l5365 29AE                            l5373 2A76  
                          l5381 33C6                            l5701 3022                            l4741 123C  
                          l4653 0FB2                            l5293 2CCE                            l5285 2C7A  
                          l4805 1382                            l5541 04B4                            l5517 0374  
                          l5461 017C                            l5357 338E                            l5367 29E0  
                          l5703 302E                            l4655 0FB8                            l4575 0E40  
                          l4903 2B94                            l5527 0418                            l5519 03B0  
                          l5471 01B8                            l5455 0120                            l5447 00EE  
                          l5369 2A12                            l5377 33B0                            l5385 342E  
                          l5713 3064                            l5705 3034                            l4761 1294  
                          l4753 127C                            l4745 124E                            l4593 0E8A  
                          l4569 0E1C                            l5633 08CE                            l5625 0876  
                          l5617 0842                            l5609 081A                            l5545 052C  
                          l5465 018C                            l5641 091E                            l4755 1280  
                          l4683 1050                            l4659 0FC2                            l4587 0E76  
                          l4579 0E4A                            l4915 2BC8                            l4931 2C18  
                          l4771 12C4                            l5563 05A4                            l5547 0532  
                          l5619 0850                            l5459 0166                            l5389 3442  
                          l4749 1270                            l4677 1040                            l4669 1002  
                          l4917 2BD4                            l4909 2BAA                            l4853 160A  
                          l4781 1300                            l5637 08FA                            l5629 089E  
                          l5581 066A                            l5565 05AC                            l5573 0642  
                          l5477 01D2                            l5469 0192                            l5733 2D0C  
                          l5901 2518                            l4679 1046                            l4687 1062  
                          l4599 0EAE                            l4935 2C2C                            l4927 2C0A  
                          l4919 2BDA                            l4951 2DC6                            l4863 165E  
                          l4847 15E0                            l5583 067E                            l5575 0650  
                          l5559 0578                            l5487 0224                            l5639 0900  
                          l5911 2556                            l5663 30AA                            l5655 3098  
                          l4697 1132                            l4873 16B4                            l4777 12E8  
                          l5753 2D60                            l5761 2D8E                            l5745 2D3A  
                          l5905 2546                            l4971 2E32                            l4963 2E10  
                          l4955 2DDA                            l4947 2DB6                            l4795 1342  
                          l4779 12EE                            l5595 06D0                            l5587 06A0  
                          l5923 259E                            l5915 2560                            l4957 2DE6  
                          l4877 16DA                            l4797 1348                            l4789 131E  
                          l5941 25D6                            l5925 25A4                            l5909 254C  
                          l4959 2DEC                            l4967 2E1E                            l4887 1728  
                          l4879 16EE                            l5599 0732                            l5767 2D94  
                          l5953 3166                            l4889 1732                            l5945 25E0  
                          l5929 25B8                            l5873 24C4                            l5891 24F4  
                          l5893 2500                            l5983 280A                            l5879 24D2  
                          l5985 281C                            l5897 250E                            l5987 282C  
                          STR_1 3FBA                            STR_2 3F90                            STR_3 3F7B  
                          STR_4 3FBA                            STR_5 3FA5                            STR_6 3FCF  
                          STR_7 3FF9                            STR_8 3FEF                            STR_9 3FFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            _PIE1 000F9D  
                          u5200 0F80                            u5210 0F82                            u7000 348A  
                          u5065 324A                            u5066 324C                            u5075 3256  
                          u5076 3258                            u6140 28E2                            u5085 3262  
                          u5086 3264                            u5190 0F68                            u5095 326E  
                          u7015 348C                            u5096 3270                            u6145 28D6  
                          u7210 3190                            u7216 3192                            u5650 16C8  
                          u5570 1582                            u7430 1AB8                            u5911 1FFC  
                          u5575 1576                            u6640 0694                            u7440 1B30  
                          u7360 188C                            u7370 18A4                            u5931 2036  
                          u6395 34B2                            u6396 34B4                            u7376 18A6  
                          u6940 2D4E                            u7487 3296                            u6955 2D50  
                          _main 174C       __size_of_LCD_send_command 003A                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0046                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00C0  
                 __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032                    _sprintf$2400 0100  
                delay_s@value_s 0068                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 3474                   _LCD_backlight 34A4         __size_of_LCD_initialize 016E  
                   ?i2_USART_RX 0001                   ___fltol@sign1 009F                 __end_of___fladd 12A6  
                         ?_main 0001                 __end_of___awdiv 2C36                 __end_of___flneg 32E8  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2E3C                 __end_of___flmul 174C  
               __end_of___flsub 31F6                 __end_of___fltol 29A8                 __end_of___lldiv 2CF2  
               ___awdiv@divisor 0068                 __end_of___llmod 2ED6                           _T3CON 000FB1  
               __end_of___lwdiv 307C                           i1l251 0078                           i2l316 2EF6  
                         i2l318 2EF8                 ___awdiv@counter 006A                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR3H 000FB3                           _TMR3L 000FB2  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
               __end_of_delay_s 33AE                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 3162                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 3F7B                           _scale 092C                 __end_of_isdigit 3404  
              __end_of_USART_RX 2D9A                  __pbitbssCOMRAM 0220                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 092C                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0001             __size_of_LCD_cursor 0032                  WriteUSART@data 0060  
               __initialization 31F6                  ?_LCD_backlight 0001                    __end_of_main 1B46  
 __size_of_board_initialization 00E4                   _LCD_goto_line 29A8               ?_Joystick_Polling 0001  
            ??_Joystick_Polling 0060               ?_LCD_write_string 0071                          ??_main 00C1  
                 __activetblptr 000002                  _JoystickValues 0033              ??_LCD_write_string 0073  
          __size_of__tdiv_to_l_ 019E               __end_of_LCD_clear 3382          LCD_write_string@buffer 0071  
                        _ADCON1 000FC1                ___llmod@dividend 0060                          ?_scale 008E  
                        _ADRESH 000FC4                ___awdiv@dividend 0066                 __CFG_BBSIZ$1024 000000  
                        i2l4311 2F16                          i2l4333 2F68                          i2l4319 2F3C  
                        i2l4327 2F62                          i2l4299 2EEE                          _SPBRGH 000FB0  
           __size_ofi2_USART_RX 0098                __end_of___xxtofl 1FE6                 _switch_position 0043  
              __end_of_delay_ms 32B0                  __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0  
              __end_of__powers_ 3F53              __size_of_OpenUSART 0074                  ?_LCD_goto_line 0001  
                        ___flge 2184                       ??___fladd 00A3                _delay_set_quartz 34B6  
                        ___wmul 32E8                       ??___awdiv 006A                       ??___flneg 0064  
                __CFG_STVREN$ON 000000                       ??___awmod 0064                       ??___flmul 007D  
                     ??___flsub 00B7                       ??___fltol 009B                       ??___lldiv 0068  
                     ??___llmod 0068                       ??___lwdiv 0064         __size_of_LCD_write_char 0096  
                        _fround 1B46  LCD_initialize@quartz_frequency 006E                          clear_0 31FC  
                        clear_1 3208                          clear_2 3216                ___awdiv@quotient 006C  
               ___awmod@divisor 0062                       ??_delay_s 0068            __size_of_LCD_Handler 0120  
               ___awmod@counter 0064                 __CFG_BOREN$BOHW 000000               _JoystickConstants 0023  
                  __pdataCOMRAM 0045                       ??_isdigit 0060                    __mediumconst 3EEA  
                        tblptrh 000FF7                  _analogic_brake 003C                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0172                       ??_sprintf 00BF  
                    ___flge@ff1 0060                      ___flge@ff2 0064                    ___xxtofl@arg 0071  
                  ___xxtofl@exp 0070                    ___xxtofl@val 0067                      __accesstop 0060  
       __end_of__initialization 322E                      ___flneg@f1 0060                _LCD_send_command 323C  
                 ___rparam_used 000001                      ___fltol@f1 0097                 ??_LCD_backlight 0060  
                    _WriteUSART 3490                  __pcstackCOMRAM 0001                       ?_ISR_alta 0001  
                 __end_of_scale 0DFE                  _LCD_initialize 260E               _LCD_write_message 33AE  
                     ?_USART_RX 0001              ?_LCD_write_message 0071                      __div_to_l_ 2314  
                  ??_LCD_cursor 006D                    _actual_speed 00EB               __end_of_OpenUSART 30F0  
               __div_to_l_@exp1 006D             ??_LCD_write_message 0073                 __div_to_l_@cntr 006C  
                       ??_scale 0092                 __div_to_l_@quot 0068                      __pbssBANK0 00C9  
                    __pbssBANK1 0119                      _actual_dir 0220                   __div_to_l_@f1 0060  
                 __div_to_l_@f2 0064                 ??_LCD_goto_line 006C              __end_of_LCD_cursor 3350  
        __end_of_LCD_initialize 277C                         ?___flge 0060                         ?___wmul 0060  
                    ??_ISR_alta 0015       __end_of_LCD_write_message 33DA               ?_LCD_enable_pulse 0001  
                 putsUSART@data 0061                         ?_fround 008E                    ??i2_USART_RX 0012  
                    ??_USART_RX 0060              ??_LCD_enable_pulse 0068     __size_of_PWR_Button_Polling 001C  
                     ?___xxtofl 0067                LCD_cursor@active 006D                       ?_delay_ms 0066  
            __size_of_putsUSART 0028                       USART_RX@i 0062              __end_ofi2_USART_RX 2F6E  
                  ??_USART_Send 0068               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2399 0092                         __Lparam 0000                delay_ms@value_ms 0066  
                   ?_WriteUSART 0001                 ?_LCD_initialize 0001                 __size_of___flge 0190  
                       ___fladd 0DFE                         ___awdiv 2B78                         ___flneg 32B0  
                       ___awmod 2D9A                         ___flmul 12A6                         ___flsub 31AE  
                       ___fltol 289C                         ___lldiv 2C36                 __size_of___wmul 0036  
                _LCD_write_char 2F6E                         ___llmod 2E3C                         ___lwdiv 3004  
                       __pcinit 31F6                 __size_of_fround 02D2                         _delay_s 3382  
                       __ramtop 0300             LCD_write_char@value 0070                         __ptext0 174C  
                       __ptext1 2A94                         __ptext2 3382                         __ptext3 307C  
                       __ptext4 260E                         __ptext5 34B6                         __ptext6 331E  
                       __ptext7 34A4                         __ptext8 249C                         __ptext9 3404  
                     _ECU_Check 0038                     ?__div_to_l_ 0060                LCD_write_char@D0 006F  
              LCD_write_char@D1 006E                LCD_write_char@D2 006D                LCD_write_char@D3 006C  
                       _dpowers 3F53                         _isdigit 33DA                      ??___xxtofl 006B  
              ___awmod@dividend 0060                      ??_delay_ms 0068    __end_of_board_initialization 2B78  
     __size_of_Joystick_Polling 004C              __end_of_USART_Send 260E        __end_of_delay_set_quartz 34C0  
                       _sprintf 00C4                  __pintcode_body 30F0                       _LCD_clear 3350  
          end_of_initialization 322E       __size_of_LCD_write_string 0026                   __Lmediumconst 3EEA  
                       int_func 30F0                   _Battery_Check 0037             LCD_backlight@active 0060  
               ___lldiv@divisor 0064              LCD_cursor@blinking 006C                 ___lldiv@counter 006C  
        __end_of_LCD_write_char 3004                       _RCSTAbits 000FAB                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE               __end_of_putsUSART 342C  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0060                  __tdiv_to_l_@f2 0064  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 0068                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 3276  
                   ___fladd@grs 00AE                   ___xxtofl@sign 006F                       _TRISCbits 000F94  
           __size_of_WriteUSART 0014                      ?_LCD_clear 0001         _clock_counter_reference 00F5  
                   ___flmul@grs 0083                       _TXSTAbits 000FAC             __size_of__div_to_l_ 0188  
       LCD_write_integer@F17027 00D9                 ?_LCD_write_char 0001                   ??_LCD_Handler 00C1  
                __end_of___flge 2314                      ?_ISR_bassa 0001                  __end_of___wmul 331E  
                 __pidataCOMRAM 34C0               __size_of_ISR_alta 315A                  __end_of_fround 1E18  
                   USART_Send@i 006A               __size_of_USART_RX 00A8             start_initialization 31F6  
           __end_of__tdiv_to_l_ 2184                       _OpenUSART 307C                 ___llmod@divisor 0064  
               ___llmod@counter 0068           __end_of_LCD_backlight 34B6                        ??___flge 0068  
          _board_initialization 2A94                        ??___wmul 0064                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0092                   sprintf@tmpval 010E                       ___fladd@a 009F  
                     ___fladd@b 009B                      fround@prec 009A             __end_of_LCD_Handler 289C  
                     ___flmul@a 0079                       ___flmul@b 0075                     __pbssCOMRAM 0023  
                     ___flsub@a 00B3                       ___flsub@b 00AF                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 3162               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$2006 0061               __size_of_delay_ms 003A  
                   ??_LCD_clear 006C         LCD_write_message@buffer 0071                _LCD_write_string 342C  
                    ?_OpenUSART 0060                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 006E                       __pnvBANK0 00F5  
     delay_set_quartz@frequency 0060                ___lwdiv@dividend 0060              LCD_send_command@D0 006A  
            LCD_send_command@D1 0069              LCD_send_command@D2 0068              LCD_send_command@D3 006B  
                  ??_WriteUSART 0060           __end_of_LCD_goto_line 2A94           ?_board_initialization 0001  
                     __pintcode 0008                   __pmediumconst 3EEA                        ?___fladd 009B  
                      ?___awdiv 0066                        ?___flneg 0060                        ?___awmod 0060  
                      ?___flmul 0075                        ?___flsub 00AF                        ?___fltol 0097  
                      ?___lldiv 0060                        ?___llmod 0060                       __npowers_ 3EEB  
                      ?___lwdiv 0060                     ??_ISR_bassa 0001                     __pintcodelo 0018  
    __end_of_PWR_Button_Polling 3490                        ?_delay_s 0001                     __tdiv_to_l_ 1FE6  
                  ??__div_to_l_ 0068                        ?_isdigit 0001                ___lwdiv@quotient 0065  
                      ?_sprintf 00B7                  __size_of_scale 04D2              __end_of_WriteUSART 34A4  
             ?_delay_set_quartz 0001              ??_delay_set_quartz 0060                  ___wmul@product 0064  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2    _delay_quartz_frequency_value 0045  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 249C                        _PIR2bits 000FA1                        i2u476_40 2F2A  
                      i2u477_45 2F2C                       _pr_time_1 002B                       _pr_time_2 00E3  
                     _pr_time_3 00E7                       _set_speed 0035                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _ISR_alta 0008                     _LCD_Handler 277C  
                      _USART_RX 2CF2                        _USART_Rx 00C9                        _USART_Tx 00ED  
                    _ADCON0bits 000FC2                       _putsUSART 3404                      _ADCON2bits 000FC0  
             ___wmul@multiplier 0060               ?_LCD_send_command 0068                USART_Send@i_1325 006B  
              USART_Send@i_1334 006C                _actual_speed_pk0 003A                _actual_speed_pk1 003B  
              _actual_speed_kmh 00DF              ??_LCD_send_command 006B                   _set_speed_pk0 003F  
                 _set_speed_pk1 0040                     ??_OpenUSART 0062                ??_LCD_write_char 006C  
                   i2USART_RX@i 0014                 OpenUSART@config 0062               LCD_goto_line@line 006C  
                      __Hrparam 0000          ??_board_initialization 0073                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 0038  
              __size_of___awmod 00A2                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00BC                __size_of___llmod 009A  
              __size_of___lwdiv 0078                     _fround$2397 0096                     _fround$2398 0092  
                    ?_putsUSART 0061                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1E18                __size_of_isdigit 002A  
                      _delay_ms 3276                 ___lwdiv@divisor 0062                 ___lwdiv@counter 0064  
              _LCD_enable_pulse 3452                        __ptext10 3490                        __ptext11 2CF2  
                      __ptext20 2B78                        __ptext12 3474                        __ptext21 1FE6  
                      __ptext13 277C                        __ptext30 2184                        __ptext22 2314  
                      __ptext14 00C4                        __ptext31 3004                        __ptext23 1E18  
                      __ptext15 092C                        __ptext40 32E8                        __ptext32 342C  
                      __ptext24 2E3C                        __ptext16 33DA                        __ptext41 3162  
                      __ptext33 33AE                        __ptext25 2C36                        __ptext17 1B46  
                      __ptext34 2F6E                        __ptext26 289C                        __ptext18 12A6  
                      __ptext35 29A8                        __ptext27 31AE                        __ptext19 2D9A  
                      __ptext44 2ED6                        __ptext36 3350                        __ptext28 0DFE  
                      __ptext37 323C                        __ptext29 32B0                        __ptext38 3452  
                      __ptext39 3276                        __powers_ 3F1F                __size_of_sprintf 0868  
                 __size_of_main 03FA                        _wait_low 0222        __end_of_Joystick_Polling 31AE  
                      int$flags 0046        __end_of_LCD_write_string 3452                      _LCD_cursor 331E  
                    _INTCONbits 000FF2                    _set_steering 0041                  OpenUSART@spbrg 0060  
                      isdigit@c 0062                        scale@scl 0096                    _time_counter 002F  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 0070                       sprintf@sp 00B7                __tdiv_to_l_@cntr 006F  
              __tdiv_to_l_@quot 006B                ___lldiv@dividend 0060                    _spam_counter 0042  
                    i2_USART_RX 2ED6                    ?__tdiv_to_l_ 0060                     ??_putsUSART 0063  
                      sprintf@c 0118                        sprintf@f 00B9                ___lldiv@quotient 0068  
        __size_of_LCD_backlight 0012                   ___fladd@signs 00AB              _PWR_Button_Polling 3474  
                  ___fladd@aexp 00AC                    ___fladd@bexp 00AD             ?_PWR_Button_Polling 0001  
                  _USART_Tx_Old 00D1                    _USART_Status 0039                      _USART_Send 249C  
                  _power_switch 0221  
