

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 20 15:57:32 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  00310E                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  00310E  10                 	db	16
    72                           
    73                           	psect	mediumconst
    74  003EEA                     __pmediumconst:
    75                           	opt stack 0
    76  003EEA  00                 	db	0
    77  003EEB                     __npowers_:
    78                           	opt stack 0
    79  003EEB  0000               	dw	0
    80  003EED  3F80               	dw	16256
    81  003EEF  CCCD               	dw	52429
    82  003EF1  3DCC               	dw	15820
    83  003EF3  D70A               	dw	55050
    84  003EF5  3C23               	dw	15395
    85  003EF7  126F               	dw	4719
    86  003EF9  3A83               	dw	14979
    87  003EFB  B717               	dw	46871
    88  003EFD  38D1               	dw	14545
    89  003EFF  C5AC               	dw	50604
    90  003F01  3727               	dw	14119
    91  003F03  37BD               	dw	14269
    92  003F05  3586               	dw	13702
    93  003F07  BF95               	dw	49045
    94  003F09  33D6               	dw	13270
    95  003F0B  CC77               	dw	52343
    96  003F0D  322B               	dw	12843
    97  003F0F  705F               	dw	28767
    98  003F11  3089               	dw	12425
    99  003F13  E6FF               	dw	59135
   100  003F15  2EDB               	dw	11995
   101  003F17  E508               	dw	58632
   102  003F19  1E3C               	dw	7740
   103  003F1B  4260               	dw	16992
   104  003F1D  0DA2               	dw	3490
   105  003F1F                     __end_of__npowers_:
   106                           	opt stack 0
   107  003F1F                     __powers_:
   108                           	opt stack 0
   109  003F1F  0000               	dw	0
   110  003F21  3F80               	dw	16256
   111  003F23  0000               	dw	0
   112  003F25  4120               	dw	16672
   113  003F27  0000               	dw	0
   114  003F29  42C8               	dw	17096
   115  003F2B  0000               	dw	0
   116  003F2D  447A               	dw	17530
   117  003F2F  4000               	dw	16384
   118  003F31  461C               	dw	17948
   119  003F33  5000               	dw	20480
   120  003F35  47C3               	dw	18371
   121  003F37  2400               	dw	9216
   122  003F39  4974               	dw	18804
   123  003F3B  9680               	dw	38528
   124  003F3D  4B18               	dw	19224
   125  003F3F  BC20               	dw	48160
   126  003F41  4CBE               	dw	19646
   127  003F43  6B28               	dw	27432
   128  003F45  4E6E               	dw	20078
   129  003F47  02F9               	dw	761
   130  003F49  5015               	dw	20501
   131  003F4B  78EC               	dw	30956
   132  003F4D  60AD               	dw	24749
   133  003F4F  F2CA               	dw	62154
   134  003F51  7149               	dw	29001
   135  003F53                     __end_of__powers_:
   136                           	opt stack 0
   137  003F53                     _dpowers:
   138                           	opt stack 0
   139  003F53  0001               	dw	1
   140  003F55  0000               	dw	0
   141  003F57  000A               	dw	10
   142  003F59  0000               	dw	0
   143  003F5B  0064               	dw	100
   144  003F5D  0000               	dw	0
   145  003F5F  03E8               	dw	1000
   146  003F61  0000               	dw	0
   147  003F63  2710               	dw	10000
   148  003F65  0000               	dw	0
   149  003F67  86A0               	dw	34464
   150  003F69  0001               	dw	1
   151  003F6B  4240               	dw	16960
   152  003F6D  000F               	dw	15
   153  003F6F  9680               	dw	38528
   154  003F71  0098               	dw	152
   155  003F73  E100               	dw	57600
   156  003F75  05F5               	dw	1525
   157  003F77  CA00               	dw	51712
   158  003F79  3B9A               	dw	15258
   159  003F7B                     __end_of_dpowers:
   160                           	opt stack 0
   161  003F7B                     STR_3:
   162  003F7B  54                 	db	84	;'T'
   163  003F7C  75                 	db	117	;'u'
   164  003F7D  72                 	db	114	;'r'
   165  003F7E  6E                 	db	110	;'n'
   166  003F7F  20                 	db	32
   167  003F80  74                 	db	116	;'t'
   168  003F81  68                 	db	104	;'h'
   169  003F82  65                 	db	101	;'e'
   170  003F83  20                 	db	32
   171  003F84  73                 	db	115	;'s'
   172  003F85  77                 	db	119	;'w'
   173  003F86  69                 	db	105	;'i'
   174  003F87  74                 	db	116	;'t'
   175  003F88  63                 	db	99	;'c'
   176  003F89  68                 	db	104	;'h'
   177  003F8A  20                 	db	32
   178  003F8B  4F                 	db	79	;'O'
   179  003F8C  4E                 	db	78	;'N'
   180  003F8D  21                 	db	33
   181  003F8E  20                 	db	32
   182  003F8F  00                 	db	0
   183  003F90                     STR_2:
   184  003F90  3D                 	db	61	;'='
   185  003F91  3D                 	db	61	;'='
   186  003F92  3E                 	db	62	;'>'
   187  003F93  20                 	db	32
   188  003F94  56                 	db	86	;'V'
   189  003F95  45                 	db	69	;'E'
   190  003F96  48                 	db	72	;'H'
   191  003F97  49                 	db	73	;'I'
   192  003F98  43                 	db	67	;'C'
   193  003F99  4C                 	db	76	;'L'
   194  003F9A  45                 	db	69	;'E'
   195  003F9B  20                 	db	32
   196  003F9C  20                 	db	32
   197  003F9D  4F                 	db	79	;'O'
   198  003F9E  46                 	db	70	;'F'
   199  003F9F  46                 	db	70	;'F'
   200  003FA0  20                 	db	32
   201  003FA1  3C                 	db	60	;'<'
   202  003FA2  3D                 	db	61	;'='
   203  003FA3  3D                 	db	61	;'='
   204  003FA4  00                 	db	0
   205  003FA5                     STR_5:
   206  003FA5  3D                 	db	61	;'='
   207  003FA6  3D                 	db	61	;'='
   208  003FA7  3D                 	db	61	;'='
   209  003FA8  20                 	db	32
   210  003FA9  56                 	db	86	;'V'
   211  003FAA  45                 	db	69	;'E'
   212  003FAB  48                 	db	72	;'H'
   213  003FAC  49                 	db	73	;'I'
   214  003FAD  43                 	db	67	;'C'
   215  003FAE  4C                 	db	76	;'L'
   216  003FAF  45                 	db	69	;'E'
   217  003FB0  20                 	db	32
   218  003FB1  44                 	db	68	;'D'
   219  003FB2  41                 	db	65	;'A'
   220  003FB3  54                 	db	84	;'T'
   221  003FB4  41                 	db	65	;'A'
   222  003FB5  20                 	db	32
   223  003FB6  3D                 	db	61	;'='
   224  003FB7  3D                 	db	61	;'='
   225  003FB8  3D                 	db	61	;'='
   226  003FB9  00                 	db	0
   227  003FBA                     STR_1:
   228  003FBA  3D                 	db	61	;'='
   229  003FBB  3D                 	db	61	;'='
   230  003FBC  3D                 	db	61	;'='
   231  003FBD  3D                 	db	61	;'='
   232  003FBE  3D                 	db	61	;'='
   233  003FBF  3D                 	db	61	;'='
   234  003FC0  3D                 	db	61	;'='
   235  003FC1  3D                 	db	61	;'='
   236  003FC2  3D                 	db	61	;'='
   237  003FC3  3D                 	db	61	;'='
   238  003FC4  3D                 	db	61	;'='
   239  003FC5  3D                 	db	61	;'='
   240  003FC6  3D                 	db	61	;'='
   241  003FC7  3D                 	db	61	;'='
   242  003FC8  3D                 	db	61	;'='
   243  003FC9  3D                 	db	61	;'='
   244  003FCA  3D                 	db	61	;'='
   245  003FCB  3D                 	db	61	;'='
   246  003FCC  3D                 	db	61	;'='
   247  003FCD  3D                 	db	61	;'='
   248  003FCE  00                 	db	0
   249  003FCF                     STR_6:
   250  003FCF  44                 	db	68	;'D'
   251  003FD0  69                 	db	105	;'i'
   252  003FD1  72                 	db	114	;'r'
   253  003FD2  65                 	db	101	;'e'
   254  003FD3  63                 	db	99	;'c'
   255  003FD4  74                 	db	116	;'t'
   256  003FD5  69                 	db	105	;'i'
   257  003FD6  6F                 	db	111	;'o'
   258  003FD7  6E                 	db	110	;'n'
   259  003FD8  3A                 	db	58	;':'
   260  003FD9  20                 	db	32
   261  003FDA  00                 	db	0
   262  003FDB                     STR_10:
   263  003FDB  53                 	db	83	;'S'
   264  003FDC  70                 	db	112	;'p'
   265  003FDD  65                 	db	101	;'e'
   266  003FDE  65                 	db	101	;'e'
   267  003FDF  64                 	db	100	;'d'
   268  003FE0  3A                 	db	58	;':'
   269  003FE1  20                 	db	32
   270  003FE2  25                 	db	37
   271  003FE3  2E                 	db	46
   272  003FE4  33                 	db	51	;'3'
   273  003FE5  66                 	db	102	;'f'
   274  003FE6  00                 	db	0
   275  003FE7                     STR_13:
   276  003FE7  57                 	db	87	;'W'
   277  003FE8  61                 	db	97	;'a'
   278  003FE9  69                 	db	105	;'i'
   279  003FEA  74                 	db	116	;'t'
   280  003FEB  2E                 	db	46
   281  003FEC  2E                 	db	46
   282  003FED  2E                 	db	46
   283  003FEE  00                 	db	0
   284  003FEF                     STR_8:
   285  003FEF  42                 	db	66	;'B'
   286  003FF0  4B                 	db	75	;'K'
   287  003FF1  57                 	db	87	;'W'
   288  003FF2  44                 	db	68	;'D'
   289  003FF3  00                 	db	0
   290  003FF4                     STR_11:
   291  003FF4  4B                 	db	75	;'K'
   292  003FF5  6D                 	db	109	;'m'
   293  003FF6  2F                 	db	47
   294  003FF7  68                 	db	104	;'h'
   295  003FF8  00                 	db	0
   296  003FF9                     STR_7:
   297  003FF9  46                 	db	70	;'F'
   298  003FFA  57                 	db	87	;'W'
   299  003FFB  44                 	db	68	;'D'
   300  003FFC  00                 	db	0
   301  003FFD                     STR_9:
   302  003FFD  50                 	db	80	;'P'
   303  003FFE  00                 	db	0
   304  0000                     
   305                           ; #config settings
   306  003FFF  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	nvCOMRAM
   309  000044                     __pnvCOMRAM:
   310                           	opt stack 0
   311  000044                     _clock_counter_reference:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  0000                     _ADCON0bits	set	4034
   315  0000                     _ADCON1	set	4033
   316  0000                     _ADCON2bits	set	4032
   317  0000                     _ADRESH	set	4036
   318  0000                     _INTCONbits	set	4082
   319  0000                     _IPR1bits	set	3999
   320  0000                     _IPR2bits	set	4002
   321  0000                     _LATA	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATC	set	3979
   324  0000                     _LATCbits	set	3979
   325  0000                     _LATD	set	3980
   326  0000                     _LATDbits	set	3980
   327  0000                     _LATE	set	3981
   328  0000                     _LATEbits	set	3981
   329  0000                     _PIE1	set	3997
   330  0000                     _PIE1bits	set	3997
   331  0000                     _PIE2bits	set	4000
   332  0000                     _PIR1bits	set	3998
   333  0000                     _PIR2bits	set	4001
   334  0000                     _PORTAbits	set	3968
   335  0000                     _PORTBbits	set	3969
   336  0000                     _PORTDbits	set	3971
   337  0000                     _RCONbits	set	4048
   338  0000                     _RCREG	set	4014
   339  0000                     _RCSTA	set	4011
   340  0000                     _RCSTAbits	set	4011
   341  0000                     _SPBRG	set	4015
   342  0000                     _SPBRGH	set	4016
   343  0000                     _T3CON	set	4017
   344  0000                     _TMR3H	set	4019
   345  0000                     _TMR3L	set	4018
   346  0000                     _TRISA	set	3986
   347  0000                     _TRISB	set	3987
   348  0000                     _TRISC	set	3988
   349  0000                     _TRISCbits	set	3988
   350  0000                     _TRISD	set	3989
   351  0000                     _TRISE	set	3990
   352  0000                     _TXREG	set	4013
   353  0000                     _TXSTA	set	4012
   354  0000                     _TXSTAbits	set	4012
   355                           
   356                           	psect	cinit
   357  002E52                     __pcinit:
   358                           	opt stack 0
   359  002E52                     start_initialization:
   360                           	opt stack 0
   361  002E52                     __initialization:
   362                           	opt stack 0
   363                           
   364                           ; Clear objects allocated to BANK1 (12 bytes)
   365  002E52  EE01  F021         	lfsr	0,__pbssBANK1
   366  002E56  0E0C               	movlw	12
   367  002E58                     clear_0:
   368  002E58  6AEE               	clrf	postinc0,c
   369  002E5A  06E8               	decf	wreg,f,c
   370  002E5C  E1FD               	bnz	clear_0
   371                           
   372                           ; Clear objects allocated to BANK0 (32 bytes)
   373  002E5E  EE00  F0CA         	lfsr	0,__pbssBANK0
   374  002E62  0E20               	movlw	32
   375  002E64                     clear_1:
   376  002E64  6AEE               	clrf	postinc0,c
   377  002E66  06E8               	decf	wreg,f,c
   378  002E68  E1FD               	bnz	clear_1
   379                           
   380                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   381  002E6A  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   382                           
   383                           ; Clear objects allocated to COMRAM (35 bytes)
   384  002E6C  EE00  F001         	lfsr	0,__pbssCOMRAM
   385  002E70  0E23               	movlw	35
   386  002E72                     clear_2:
   387  002E72  6AEE               	clrf	postinc0,c
   388  002E74  06E8               	decf	wreg,f,c
   389  002E76  E1FD               	bnz	clear_2
   390                           
   391                           ; Initialize objects allocated to COMRAM (1 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393  002E78  0E0E               	movlw	low __pidataCOMRAM
   394  002E7A  6EF6               	movwf	tblptrl,c
   395  002E7C  0E31               	movlw	high __pidataCOMRAM
   396  002E7E  6EF7               	movwf	tblptrh,c
   397  002E80  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398  002E82  6EF8               	movwf	tblptru,c
   399  002E84  0009               	tblrd		*+	;fetch initializer
   400  002E86  CFF5 F046          	movff	tablat,__pdataCOMRAM
   401  002E8A                     end_of_initialization:
   402                           	opt stack 0
   403  002E8A                     __end_of__initialization:
   404                           	opt stack 0
   405  002E8A  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   406  002E8C  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   407  002E8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   408  002E90  6EF8               	movwf	tblptru,c
   409  002E92  0100               	movlb	0
   410  002E94  EF84  F00B         	goto	_main	;jump to C main() function
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	bitbssCOMRAM
   419  000218                     __pbitbssCOMRAM:
   420                           	opt stack 0
   421  000218                     _actual_dir:
   422                           	opt stack 0
   423  000218                     	ds	1
   424  000219                     _dir:
   425                           	opt stack 0
   426  000219                     	ds	1
   427  00021A                     _power_switch:
   428                           	opt stack 0
   429  00021A                     	ds	1
   430  00021B                     _wait_low:
   431                           	opt stack 0
   432  00021B                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           
   440                           	psect	bssCOMRAM
   441  000001                     __pbssCOMRAM:
   442                           	opt stack 0
   443  000001                     _pr_time_1:
   444                           	opt stack 0
   445  000001                     	ds	4
   446  000005                     _pr_time_2:
   447                           	opt stack 0
   448  000005                     	ds	4
   449  000009                     _time_counter:
   450                           	opt stack 0
   451  000009                     	ds	4
   452  00000D                     _set_speed:
   453                           	opt stack 0
   454  00000D                     	ds	2
   455  00000F                     _Battery_Check:
   456                           	opt stack 0
   457  00000F                     	ds	1
   458  000010                     _ECU_Check:
   459                           	opt stack 0
   460  000010                     	ds	1
   461  000011                     _USART_Status:
   462                           	opt stack 0
   463  000011                     	ds	1
   464  000012                     _actual_speed_pk0:
   465                           	opt stack 0
   466  000012                     	ds	1
   467  000013                     _actual_speed_pk1:
   468                           	opt stack 0
   469  000013                     	ds	1
   470  000014                     _analogic_brake:
   471                           	opt stack 0
   472  000014                     	ds	1
   473  000015                     _i:
   474                           	opt stack 0
   475  000015                     	ds	1
   476  000016                     _set_speed_pk0:
   477                           	opt stack 0
   478  000016                     	ds	1
   479  000017                     _set_speed_pk1:
   480                           	opt stack 0
   481  000017                     	ds	1
   482  000018                     _set_steering:
   483                           	opt stack 0
   484  000018                     	ds	1
   485  000019                     _switch_position:
   486                           	opt stack 0
   487  000019                     	ds	1
   488  00001A                     _JoystickConstants:
   489                           	opt stack 0
   490  00001A                     	ds	8
   491  000022                     _JoystickValues:
   492                           	opt stack 0
   493  000022                     	ds	2
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           
   501                           	psect	dataCOMRAM
   502  000046                     __pdataCOMRAM:
   503                           	opt stack 0
   504  000046                     _delay_quartz_frequency_value:
   505                           	opt stack 0
   506  000046                     	ds	1
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           
   514                           	psect	bssBANK0
   515  0000CA                     __pbssBANK0:
   516                           	opt stack 0
   517  0000CA                     LCD_write_integer@F17027:
   518                           	opt stack 0
   519  0000CA                     	ds	6
   520  0000D0                     _actual_speed_kmh:
   521                           	opt stack 0
   522  0000D0                     	ds	4
   523  0000D4                     _pr_time_3:
   524                           	opt stack 0
   525  0000D4                     	ds	4
   526  0000D8                     _actual_speed:
   527                           	opt stack 0
   528  0000D8                     	ds	2
   529  0000DA                     _USART_Rx:
   530                           	opt stack 0
   531  0000DA                     	ds	8
   532  0000E2                     _USART_Tx:
   533                           	opt stack 0
   534  0000E2                     	ds	8
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           
   542                           	psect	bssBANK1
   543  000121                     __pbssBANK1:
   544                           	opt stack 0
   545  000121                     _str:
   546                           	opt stack 0
   547  000121                     	ds	12
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           
   555                           	psect	cstackBANK1
   556  000100                     __pcstackBANK1:
   557                           	opt stack 0
   558  000100                     _sprintf$2463:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0x0
   562  000100                     	ds	4
   563  000104                     sprintf@ap:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x4
   567  000104                     	ds	2
   568  000106                     sprintf@flag:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x6
   572  000106                     	ds	2
   573  000108                     sprintf@val:
   574                           	opt stack 0
   575                           
   576                           ; 4 bytes @ 0x8
   577  000108                     	ds	4
   578  00010C                     sprintf@exp:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0xC
   582  00010C                     	ds	2
   583  00010E                     sprintf@tmpval:
   584                           	opt stack 0
   585                           
   586                           ; 4 bytes @ 0xE
   587  00010E                     	ds	4
   588  000112                     sprintf@prec:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x12
   592  000112                     	ds	2
   593  000114                     sprintf@fval:
   594                           	opt stack 0
   595                           
   596                           ; 4 bytes @ 0x14
   597  000114                     	ds	4
   598  000118                     sprintf@c:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x18
   602  000118                     	ds	1
   603  000119                     ??_main:
   604                           
   605                           ; 0 bytes @ 0x19
   606  000119                     	ds	8
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           
   614                           	psect	cstackBANK0
   615  000060                     __pcstackBANK0:
   616                           	opt stack 0
   617  000060                     ??_ISR_alta:
   618                           
   619                           ; 0 bytes @ 0x0
   620  000060                     	ds	16
   621  000070                     ?___awdiv:
   622                           	opt stack 0
   623  000070                     ?__tdiv_to_l_:
   624                           	opt stack 0
   625  000070                     ?__div_to_l_:
   626                           	opt stack 0
   627  000070                     ?___lldiv:
   628                           	opt stack 0
   629  000070                     ?___llmod:
   630                           	opt stack 0
   631  000070                     ?___xxtofl:
   632                           	opt stack 0
   633  000070                     delay_ms@value_ms:
   634                           	opt stack 0
   635  000070                     ___awdiv@dividend:
   636                           	opt stack 0
   637  000070                     __div_to_l_@f1:
   638                           	opt stack 0
   639  000070                     ___flge@ff1:
   640                           	opt stack 0
   641  000070                     __tdiv_to_l_@f1:
   642                           	opt stack 0
   643  000070                     ___lldiv@dividend:
   644                           	opt stack 0
   645  000070                     ___llmod@dividend:
   646                           	opt stack 0
   647  000070                     ___xxtofl@val:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x10
   651  000070                     	ds	2
   652  000072                     delay_s@value_s:
   653                           	opt stack 0
   654  000072                     LCD_send_command@D2:
   655                           	opt stack 0
   656  000072                     ___awdiv@divisor:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x12
   660  000072                     	ds	1
   661  000073                     delay_s@repeat_loop:
   662                           	opt stack 0
   663  000073                     LCD_send_command@D1:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x13
   667  000073                     	ds	1
   668  000074                     ??___xxtofl:
   669  000074                     LCD_send_command@D0:
   670                           	opt stack 0
   671  000074                     ___awdiv@counter:
   672                           	opt stack 0
   673  000074                     __div_to_l_@f2:
   674                           	opt stack 0
   675  000074                     ___flge@ff2:
   676                           	opt stack 0
   677  000074                     __tdiv_to_l_@f2:
   678                           	opt stack 0
   679  000074                     ___lldiv@divisor:
   680                           	opt stack 0
   681  000074                     ___llmod@divisor:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0x14
   685  000074                     	ds	1
   686  000075                     LCD_goto_line@line:
   687                           	opt stack 0
   688  000075                     LCD_write_char@D3:
   689                           	opt stack 0
   690  000075                     LCD_cursor@blinking:
   691                           	opt stack 0
   692  000075                     ___awdiv@sign:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x15
   696  000075                     	ds	1
   697  000076                     LCD_write_char@D2:
   698                           	opt stack 0
   699  000076                     LCD_cursor@active:
   700                           	opt stack 0
   701  000076                     ___awdiv@quotient:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x16
   705  000076                     	ds	1
   706  000077                     LCD_write_char@D1:
   707                           	opt stack 0
   708  000077                     LCD_initialize@quartz_frequency:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x17
   712  000077                     	ds	1
   713  000078                     LCD_write_char@D0:
   714                           	opt stack 0
   715  000078                     ___xxtofl@sign:
   716                           	opt stack 0
   717  000078                     __tdiv_to_l_@quot:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x18
   721  000078                     	ds	1
   722  000079                     LCD_write_char@value:
   723                           	opt stack 0
   724  000079                     ___xxtofl@exp:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x19
   728  000079                     	ds	1
   729  00007A                     LCD_write_message@buffer:
   730                           	opt stack 0
   731  00007A                     LCD_write_string@buffer:
   732                           	opt stack 0
   733  00007A                     ___xxtofl@arg:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x1A
   737  00007A                     	ds	2
   738  00007C                     __tdiv_to_l_@cntr:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x1C
   742  00007C                     	ds	1
   743  00007D                     __tdiv_to_l_@exp1:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x1D
   747  00007D                     	ds	1
   748  00007E                     ?___flmul:
   749                           	opt stack 0
   750  00007E                     ___flmul@b:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x1E
   754  00007E                     	ds	4
   755  000082                     ___flmul@a:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x22
   759  000082                     	ds	4
   760  000086                     ??___flmul:
   761                           
   762                           ; 0 bytes @ 0x26
   763  000086                     	ds	4
   764  00008A                     ___flmul@sign:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x2A
   768  00008A                     	ds	1
   769  00008B                     ___flmul@aexp:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x2B
   773  00008B                     	ds	1
   774  00008C                     ___flmul@grs:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x2C
   778  00008C                     	ds	4
   779  000090                     ___flmul@bexp:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x30
   783  000090                     	ds	1
   784  000091                     ___flmul@prod:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x31
   788  000091                     	ds	4
   789  000095                     ___flmul@temp:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x35
   793  000095                     	ds	2
   794  000097                     ?_fround:
   795                           	opt stack 0
   796  000097                     ?_scale:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x37
   800  000097                     	ds	4
   801  00009B                     _fround$2461:
   802                           	opt stack 0
   803  00009B                     _scale$2462:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x3B
   807  00009B                     	ds	4
   808  00009F                     scale@scl:
   809                           	opt stack 0
   810  00009F                     _fround$2460:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x3F
   814  00009F                     	ds	1
   815  0000A0                     ?___fltol:
   816                           	opt stack 0
   817  0000A0                     ___fltol@f1:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x40
   821  0000A0                     	ds	3
   822  0000A3                     fround@prec:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x43
   826  0000A3                     	ds	1
   827  0000A4                     ??___fltol:
   828  0000A4                     ?___fladd:
   829                           	opt stack 0
   830  0000A4                     ___fladd@b:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x44
   834  0000A4                     	ds	4
   835  0000A8                     ___fltol@sign1:
   836                           	opt stack 0
   837  0000A8                     ___fladd@a:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x48
   841  0000A8                     	ds	1
   842  0000A9                     ___fltol@exp1:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x49
   846  0000A9                     	ds	3
   847  0000AC                     ??___fladd:
   848                           
   849                           ; 0 bytes @ 0x4C
   850  0000AC                     	ds	8
   851  0000B4                     ___fladd@signs:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x54
   855  0000B4                     	ds	1
   856  0000B5                     ___fladd@aexp:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x55
   860  0000B5                     	ds	1
   861  0000B6                     ___fladd@bexp:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x56
   865  0000B6                     	ds	1
   866  0000B7                     ___fladd@grs:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x57
   870  0000B7                     	ds	1
   871  0000B8                     ?___flsub:
   872                           	opt stack 0
   873  0000B8                     ___flsub@b:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0x58
   877  0000B8                     	ds	4
   878  0000BC                     ___flsub@a:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x5C
   882  0000BC                     	ds	4
   883  0000C0                     ?_sprintf:
   884                           	opt stack 0
   885  0000C0                     sprintf@sp:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x60
   889  0000C0                     	ds	2
   890  0000C2                     sprintf@f:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x62
   894  0000C2                     	ds	6
   895  0000C8                     ??_sprintf:
   896                           
   897                           ; 0 bytes @ 0x68
   898  0000C8                     	ds	2
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           
   906                           	psect	cstackCOMRAM
   907  000024                     __pcstackCOMRAM:
   908                           	opt stack 0
   909  000024                     ??_ISR_bassa:
   910  000024                     
   911                           ; 1 bytes @ 0x0
   912  000024                     	ds	17
   913  000035                     ReadUSART@data:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x11
   917  000035                     	ds	1
   918  000036                     getsUSART@buffer:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x12
   922  000036                     	ds	2
   923  000038                     getsUSART@len:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x14
   927  000038                     	ds	1
   928  000039                     getsUSART@data:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x15
   932  000039                     	ds	1
   933  00003A                     getsUSART@i:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x16
   937  00003A                     	ds	1
   938  00003B                     _ISR_alta$1263:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x17
   942  00003B                     	ds	1
   943  00003C                     ??_Joystick_Polling:
   944  00003C                     ??_isdigit:
   945  00003C                     ??__tdiv_to_l_:
   946  00003C                     ??___flge:
   947  00003C                     ?___wmul:
   948                           	opt stack 0
   949  00003C                     ?___awmod:
   950                           	opt stack 0
   951  00003C                     ?___lwdiv:
   952                           	opt stack 0
   953  00003C                     ?___flneg:
   954                           	opt stack 0
   955  00003C                     delay_set_quartz@frequency:
   956                           	opt stack 0
   957  00003C                     LCD_backlight@active:
   958                           	opt stack 0
   959  00003C                     WriteUSART@data:
   960                           	opt stack 0
   961  00003C                     ___llmod@counter:
   962                           	opt stack 0
   963  00003C                     OpenUSART@spbrg:
   964                           	opt stack 0
   965  00003C                     ___wmul@multiplier:
   966                           	opt stack 0
   967  00003C                     ___awmod@dividend:
   968                           	opt stack 0
   969  00003C                     ___lwdiv@dividend:
   970                           	opt stack 0
   971  00003C                     __div_to_l_@quot:
   972                           	opt stack 0
   973  00003C                     ___flneg@f1:
   974                           	opt stack 0
   975  00003C                     ___lldiv@quotient:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x18
   979  00003C                     	ds	1
   980  00003D                     _isdigit$2069:
   981                           	opt stack 0
   982  00003D                     putsUSART@data:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x19
   986  00003D                     	ds	1
   987  00003E                     OpenUSART@config:
   988                           	opt stack 0
   989  00003E                     isdigit@c:
   990                           	opt stack 0
   991  00003E                     ___wmul@multiplicand:
   992                           	opt stack 0
   993  00003E                     ___awmod@divisor:
   994                           	opt stack 0
   995  00003E                     ___lwdiv@divisor:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x1A
   999  00003E                     	ds	1
  1000  00003F                     USART_Send@i:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x1B
  1004  00003F                     	ds	1
  1005  000040                     ___awmod@counter:
  1006                           	opt stack 0
  1007  000040                     __div_to_l_@cntr:
  1008                           	opt stack 0
  1009  000040                     ___lldiv@counter:
  1010                           	opt stack 0
  1011  000040                     ___wmul@product:
  1012                           	opt stack 0
  1013  000040                     ___lwdiv@quotient:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x1C
  1017  000040                     	ds	1
  1018  000041                     ___awmod@sign:
  1019                           	opt stack 0
  1020  000041                     __div_to_l_@exp1:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x1D
  1024  000041                     	ds	1
  1025  000042                     LCD_send_command@D3:
  1026                           	opt stack 0
  1027  000042                     ___lwdiv@counter:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x1E
  1031  000042                     	ds	1
  1032  000043                     tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           
  1039                           ; 0 bytes @ 0x1F
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 122 in file "telecomando.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;		None               void
  1052 ;; Registers used:
  1053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1059 ;;      Params:         0       0       0       0
  1060 ;;      Locals:         0       0       0       0
  1061 ;;      Temps:          0       0       8       0
  1062 ;;      Totals:         0       0       8       0
  1063 ;;Total ram usage:        8 bytes
  1064 ;; Hardware stack levels required when called:   11
  1065 ;; This function calls:
  1066 ;;		_Joystick_Polling
  1067 ;;		_LCD_Handler
  1068 ;;		_LCD_clear
  1069 ;;		_LCD_goto_line
  1070 ;;		_LCD_write_message
  1071 ;;		_USART_Send
  1072 ;;		___flmul
  1073 ;;		___fltol
  1074 ;;		___xxtofl
  1075 ;;		_board_initialization
  1076 ;;		_delay_ms
  1077 ;; This function is called by:
  1078 ;;		Startup code after reset
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text0
  1083  001708                     __ptext0:
  1084                           	opt stack 0
  1085  001708                     _main:
  1086                           	opt stack 20
  1087                           
  1088                           ;telecomando.c: 123: board_initialization();
  1089                           
  1090                           ;incstack = 0
  1091  001708  EC66  F014         	call	_board_initialization	;wreg free
  1092                           
  1093                           ;telecomando.c: 127: USART_Tx[0] = 0xAA;
  1094  00170C  0EAA               	movlw	170
  1095  00170E  0100               	movlb	0	; () banked
  1096  001710  6FE2               	movwf	_USART_Tx& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;telecomando.c: 128: USART_Tx[1] = 0x01;
  1100  001712  0E01               	movlw	1
  1101  001714  0100               	movlb	0	; () banked
  1102  001716  6FE3               	movwf	(_USART_Tx+1)& (0+255),b
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;telecomando.c: 129: USART_Tx[2] = 0x01;
  1106  001718  0E01               	movlw	1
  1107  00171A  0100               	movlb	0	; () banked
  1108  00171C  6FE4               	movwf	(_USART_Tx+2)& (0+255),b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;telecomando.c: 130: USART_Tx[3] = 0x01;
  1112  00171E  0E01               	movlw	1
  1113  001720  0100               	movlb	0	; () banked
  1114  001722  6FE5               	movwf	(_USART_Tx+3)& (0+255),b
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;telecomando.c: 131: USART_Tx[4] = 0x01;
  1118  001724  0E01               	movlw	1
  1119  001726  0100               	movlb	0	; () banked
  1120  001728  6FE6               	movwf	(_USART_Tx+4)& (0+255),b
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;telecomando.c: 132: USART_Tx[5] = 0x01;
  1124  00172A  0E01               	movlw	1
  1125  00172C  0100               	movlb	0	; () banked
  1126  00172E  6FE7               	movwf	(_USART_Tx+5)& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;telecomando.c: 133: USART_Tx[6] = 0xAA;
  1130  001730  0EAA               	movlw	170
  1131  001732  0100               	movlb	0	; () banked
  1132  001734  6FE8               	movwf	(_USART_Tx+6)& (0+255),b
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;telecomando.c: 134: USART_Tx[7] = '\0';
  1136  001736  0E00               	movlw	0
  1137  001738  0100               	movlb	0	; () banked
  1138  00173A  6FE9               	movwf	(_USART_Tx+7)& (0+255),b
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;telecomando.c: 135: JoystickConstants[0] = 0.703;
  1142  00173C  0ECF               	movlw	207
  1143  00173E  6E1A               	movwf	_JoystickConstants,c	;volatile
  1144  001740  0EF7               	movlw	247
  1145  001742  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1146  001744  0E33               	movlw	51
  1147  001746  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1148  001748  0E3F               	movlw	63
  1149  00174A  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;telecomando.c: 136: JoystickConstants[1] = 34;
  1153  00174C  0E00               	movlw	0
  1154  00174E  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1155  001750  0E00               	movlw	0
  1156  001752  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1157  001754  0E08               	movlw	8
  1158  001756  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1159  001758  0E42               	movlw	66
  1160  00175A  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1161  00175C                     l5625:
  1162                           
  1163                           ;telecomando.c: 142: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  1164  00175C  A681               	btfss	3969,3,c	;volatile
  1165  00175E  D002               	goto	l251
  1166  001760  B643               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1167  001762  D009               	goto	l249
  1168  001764                     l251:
  1169                           
  1170                           ;telecomando.c: 143: wait_low = 0;
  1171  001764  9643               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1172                           
  1173                           ;telecomando.c: 144: if (PORTBbits.RB3 == 1) {
  1174  001766  A681               	btfss	3969,3,c	;volatile
  1175  001768  D006               	goto	l249
  1176                           
  1177                           ;telecomando.c: 145: power_switch = ~power_switch;
  1178  00176A  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1179  00176C  D002               	goto	u6520
  1180  00176E  8443               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1181  001770  D001               	goto	u6535
  1182  001772                     u6520:
  1183  001772  9443               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1184  001774                     u6535:
  1185                           
  1186                           ;telecomando.c: 146: wait_low = 1;
  1187  001774  8643               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1188  001776                     l249:
  1189                           
  1190                           ;telecomando.c: 147: }
  1191                           ;telecomando.c: 148: }
  1192                           ;telecomando.c: 150: if (power_switch == 0) {
  1193  001776  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1194  001778  D08F               	goto	l5659
  1195                           
  1196                           ;telecomando.c: 151: dir = 1;
  1197  00177A  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1198                           
  1199                           ;telecomando.c: 152: set_speed = 0;
  1200  00177C  0E00               	movlw	0
  1201  00177E  6E0E               	movwf	_set_speed+1,c	;volatile
  1202  001780  0E00               	movlw	0
  1203  001782  6E0D               	movwf	_set_speed,c	;volatile
  1204                           
  1205                           ;telecomando.c: 153: set_steering = 90;
  1206  001784  0E5A               	movlw	90
  1207  001786  6E18               	movwf	_set_steering,c	;volatile
  1208                           
  1209                           ;telecomando.c: 154: analogic_brake = 0;
  1210  001788  0E00               	movlw	0
  1211  00178A  6E14               	movwf	_analogic_brake,c	;volatile
  1212                           
  1213                           ;telecomando.c: 155: USART_Send();
  1214  00178C  EC51  F016         	call	_USART_Send	;wreg free
  1215                           
  1216                           ;telecomando.c: 156: while (power_switch == 0) {
  1217  001790  D080               	goto	l5657
  1218  001792                     l5637:
  1219                           
  1220                           ;telecomando.c: 157: LCD_clear();
  1221  001792  EC80  F017         	call	_LCD_clear	;wreg free
  1222                           
  1223                           ;telecomando.c: 158: LCD_goto_line(1);
  1224  001796  0E01               	movlw	1
  1225  001798  EC81  F013         	call	_LCD_goto_line
  1226                           
  1227                           ;telecomando.c: 159: LCD_write_message("====================");
  1228  00179C  0EBA               	movlw	low STR_1
  1229  00179E  0100               	movlb	0	; () banked
  1230  0017A0  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1231  0017A2  0E3F               	movlw	high STR_1
  1232  0017A4  0100               	movlb	0	; () banked
  1233  0017A6  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1234  0017A8  ECDF  F017         	call	_LCD_write_message	;wreg free
  1235                           
  1236                           ;telecomando.c: 160: LCD_goto_line(2);
  1237  0017AC  0E02               	movlw	2
  1238  0017AE  EC81  F013         	call	_LCD_goto_line
  1239                           
  1240                           ;telecomando.c: 161: LCD_write_message("==> VEHICLE  OFF <==");
  1241  0017B2  0E90               	movlw	low STR_2
  1242  0017B4  0100               	movlb	0	; () banked
  1243  0017B6  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1244  0017B8  0E3F               	movlw	high STR_2
  1245  0017BA  0100               	movlb	0	; () banked
  1246  0017BC  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1247  0017BE  ECDF  F017         	call	_LCD_write_message	;wreg free
  1248                           
  1249                           ;telecomando.c: 162: LCD_goto_line(3);
  1250  0017C2  0E03               	movlw	3
  1251  0017C4  EC81  F013         	call	_LCD_goto_line
  1252                           
  1253                           ;telecomando.c: 163: LCD_write_message("Turn the switch ON! ");
  1254  0017C8  0E7B               	movlw	low STR_3
  1255  0017CA  0100               	movlb	0	; () banked
  1256  0017CC  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1257  0017CE  0E3F               	movlw	high STR_3
  1258  0017D0  0100               	movlb	0	; () banked
  1259  0017D2  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1260  0017D4  ECDF  F017         	call	_LCD_write_message	;wreg free
  1261                           
  1262                           ;telecomando.c: 164: LCD_goto_line(4);
  1263  0017D8  0E04               	movlw	4
  1264  0017DA  EC81  F013         	call	_LCD_goto_line
  1265                           
  1266                           ;telecomando.c: 165: LCD_write_message("====================");
  1267  0017DE  0EBA               	movlw	low STR_1
  1268  0017E0  0100               	movlb	0	; () banked
  1269  0017E2  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1270  0017E4  0E3F               	movlw	high STR_1
  1271  0017E6  0100               	movlb	0	; () banked
  1272  0017E8  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1273  0017EA  ECDF  F017         	call	_LCD_write_message	;wreg free
  1274                           
  1275                           ;telecomando.c: 166: if ((time_counter - pr_time_1) >= 50) {
  1276  0017EE  C001  F119         	movff	_pr_time_1,??_main	;volatile
  1277  0017F2  C002  F11A         	movff	_pr_time_1+1,??_main+1	;volatile
  1278  0017F6  C003  F11B         	movff	_pr_time_1+2,??_main+2	;volatile
  1279  0017FA  C004  F11C         	movff	_pr_time_1+3,??_main+3	;volatile
  1280  0017FE  0101               	movlb	1	; () banked
  1281  001800  1F19               	comf	??_main& (0+255),f,b
  1282  001802  1F1A               	comf	(??_main+1)& (0+255),f,b
  1283  001804  1F1B               	comf	(??_main+2)& (0+255),f,b
  1284  001806  1F1C               	comf	(??_main+3)& (0+255),f,b
  1285  001808  2B19               	incf	??_main& (0+255),f,b
  1286  00180A  0E00               	movlw	0
  1287  00180C  231A               	addwfc	(??_main+1)& (0+255),f,b
  1288  00180E  231B               	addwfc	(??_main+2)& (0+255),f,b
  1289  001810  231C               	addwfc	(??_main+3)& (0+255),f,b
  1290  001812  5009               	movf	_time_counter,w,c	;volatile
  1291  001814  0101               	movlb	1	; () banked
  1292  001816  2519               	addwf	??_main& (0+255),w,b
  1293  001818  0101               	movlb	1	; () banked
  1294  00181A  6F1D               	movwf	(??_main+4)& (0+255),b
  1295  00181C  500A               	movf	_time_counter+1,w,c	;volatile
  1296  00181E  0101               	movlb	1	; () banked
  1297  001820  211A               	addwfc	(??_main+1)& (0+255),w,b
  1298  001822  0101               	movlb	1	; () banked
  1299  001824  6F1E               	movwf	(??_main+5)& (0+255),b
  1300  001826  500B               	movf	_time_counter+2,w,c	;volatile
  1301  001828  0101               	movlb	1	; () banked
  1302  00182A  211B               	addwfc	(??_main+2)& (0+255),w,b
  1303  00182C  0101               	movlb	1	; () banked
  1304  00182E  6F1F               	movwf	(??_main+6)& (0+255),b
  1305  001830  500C               	movf	_time_counter+3,w,c	;volatile
  1306  001832  0101               	movlb	1	; () banked
  1307  001834  211C               	addwfc	(??_main+3)& (0+255),w,b
  1308  001836  0101               	movlb	1	; () banked
  1309  001838  6F20               	movwf	(??_main+7)& (0+255),b
  1310  00183A  0101               	movlb	1	; () banked
  1311  00183C  5120               	movf	(??_main+7)& (0+255),w,b
  1312  00183E  0101               	movlb	1	; () banked
  1313  001840  111F               	iorwf	(??_main+6)& (0+255),w,b
  1314  001842  0101               	movlb	1	; () banked
  1315  001844  111E               	iorwf	(??_main+5)& (0+255),w,b
  1316  001846  E105               	bnz	u6550
  1317  001848  0E32               	movlw	50
  1318  00184A  0101               	movlb	1	; () banked
  1319  00184C  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1320  00184E  A0D8               	btfss	status,0,c
  1321  001850  D019               	goto	l5655
  1322  001852                     u6550:
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;telecomando.c: 167: pr_time_1 = time_counter;
  1326  001852  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1327  001856  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1328  00185A  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1329  00185E  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;telecomando.c: 168: PORTDbits.RD7 = ~PORTDbits.RD7;
  1333  001862  AE83               	btfss	3971,7,c	;volatile
  1334  001864  D002               	goto	u6560
  1335  001866  0E01               	movlw	1
  1336  001868  D001               	goto	u6566
  1337  00186A                     u6560:
  1338  00186A  0E00               	movlw	0
  1339  00186C                     u6566:
  1340  00186C  0AFF               	xorlw	255
  1341  00186E  0101               	movlb	1	; () banked
  1342  001870  6F19               	movwf	??_main& (0+255),b
  1343  001872  0101               	movlb	1	; () banked
  1344  001874  3319               	rrcf	??_main& (0+255),f,b
  1345  001876  3319               	rrcf	??_main& (0+255),f,b
  1346  001878  5083               	movf	3971,w,c	;volatile
  1347  00187A  0101               	movlb	1	; () banked
  1348  00187C  1919               	xorwf	??_main& (0+255),w,b
  1349  00187E  0B7F               	andlw	-129
  1350  001880  1919               	xorwf	??_main& (0+255),w,b
  1351  001882  6E83               	movwf	3971,c	;volatile
  1352  001884                     l5655:
  1353                           
  1354                           ; BSR set to: 1
  1355                           ;telecomando.c: 169: }
  1356                           ;telecomando.c: 170: delay_ms(300);
  1357  001884  0E01               	movlw	1
  1358  001886  0100               	movlb	0	; () banked
  1359  001888  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1360  00188A  0E2C               	movlw	44
  1361  00188C  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1362  00188E  EC99  F017         	call	_delay_ms	;wreg free
  1363  001892                     l5657:
  1364  001892  A443               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1365  001894  D77E               	goto	l5637
  1366                           
  1367                           ;telecomando.c: 171: }
  1368                           ;telecomando.c: 172: PORTDbits.RD7 = 0;
  1369  001896  9E83               	bcf	3971,7,c	;volatile
  1370  001898                     l5659:
  1371                           
  1372                           ;telecomando.c: 173: }
  1373                           ;telecomando.c: 175: Joystick_Polling();
  1374  001898  EC05  F017         	call	_Joystick_Polling	;wreg free
  1375                           
  1376                           ;telecomando.c: 178: if (PORTAbits.RA2 == 1) {
  1377  00189C  A480               	btfss	3968,2,c	;volatile
  1378  00189E  D003               	goto	l258
  1379                           
  1380                           ;telecomando.c: 179: switch_position = 0;
  1381  0018A0  0E00               	movlw	0
  1382  0018A2  6E19               	movwf	_switch_position,c	;volatile
  1383                           
  1384                           ;telecomando.c: 180: } else {
  1385  0018A4  D009               	goto	l259
  1386  0018A6                     l258:
  1387                           
  1388                           ;telecomando.c: 181: if (PORTAbits.RA3 == 0) {
  1389  0018A6  B680               	btfsc	3968,3,c	;volatile
  1390  0018A8  D004               	goto	l5669
  1391                           
  1392                           ;telecomando.c: 182: switch_position = 1;
  1393  0018AA  0E01               	movlw	1
  1394  0018AC  6E19               	movwf	_switch_position,c	;volatile
  1395                           
  1396                           ;telecomando.c: 183: dir = 1;
  1397  0018AE  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1398                           
  1399                           ;telecomando.c: 184: } else {
  1400  0018B0  D003               	goto	l259
  1401  0018B2                     l5669:
  1402                           
  1403                           ;telecomando.c: 185: switch_position = 2;
  1404  0018B2  0E02               	movlw	2
  1405  0018B4  6E19               	movwf	_switch_position,c	;volatile
  1406                           
  1407                           ;telecomando.c: 186: dir = 0;
  1408  0018B6  9243               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1409  0018B8                     l259:
  1410                           
  1411                           ;telecomando.c: 187: }
  1412                           ;telecomando.c: 188: }
  1413                           ;telecomando.c: 190: if (switch_position != 0) {
  1414  0018B8  5019               	movf	_switch_position,w,c	;volatile
  1415  0018BA  B4D8               	btfsc	status,2,c
  1416  0018BC  D074               	goto	l5685
  1417                           
  1418                           ;telecomando.c: 191: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1419  0018BE  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1420  0018C2  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1421  0018C6  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1422  0018CA  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1423  0018CE  C022  F119         	movff	_JoystickValues,??_main	;volatile
  1424  0018D2  0101               	movlb	1	; () banked
  1425  0018D4  6B1A               	clrf	(??_main+1)& (0+255),b
  1426  0018D6  BF19               	btfsc	??_main& (0+255),7,b
  1427  0018D8  071A               	decf	(??_main+1)& (0+255),f,b
  1428  0018DA  0E80               	movlw	128
  1429  0018DC  0101               	movlb	1	; () banked
  1430  0018DE  2719               	addwf	??_main& (0+255),f,b
  1431  0018E0  0E00               	movlw	0
  1432  0018E2  231A               	addwfc	(??_main+1)& (0+255),f,b
  1433  0018E4  C119  F070         	movff	??_main,___xxtofl@val
  1434  0018E8  C11A  F071         	movff	??_main+1,___xxtofl@val+1
  1435  0018EC  0100               	movlb	0	; () banked
  1436  0018EE  0E00               	movlw	0
  1437  0018F0  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1438  0018F2  0EFF               	movlw	-1
  1439  0018F4  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1440  0018F6  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1441  0018F8  0E01               	movlw	1
  1442  0018FA  ECAC  F00E         	call	___xxtofl
  1443  0018FE  C070  F07E         	movff	?___xxtofl,___flmul@b
  1444  001902  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1445  001906  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1446  00190A  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1447  00190E  ECE4  F006         	call	___flmul	;wreg free
  1448  001912  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1449  001916  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1450  00191A  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1451  00191E  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1452  001922  ECFB  F012         	call	___fltol	;wreg free
  1453  001926  0100               	movlb	0	; () banked
  1454  001928  51A0               	movf	?___fltol& (0+255),w,b
  1455  00192A  6E18               	movwf	_set_steering,c	;volatile
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;telecomando.c: 192: if (JoystickValues[1] > 0) {
  1459  00192C  5023               	movf	_JoystickValues+1,w,c	;volatile
  1460  00192E  0A80               	xorlw	128
  1461  001930  0F7F               	addlw	-129
  1462  001932  A0D8               	btfss	status,0,c
  1463  001934  D02E               	goto	l5681
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;telecomando.c: 193: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1467  001936  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1468  00193A  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1469  00193E  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1470  001942  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1471  001946  5023               	movf	_JoystickValues+1,w,c	;volatile
  1472  001948  0100               	movlb	0	; () banked
  1473  00194A  6F70               	movwf	___xxtofl@val& (0+255),b
  1474  00194C  0E00               	movlw	0
  1475  00194E  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1476  001950  0EFF               	movlw	-1
  1477  001952  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1478  001954  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1479  001956  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1480  001958  0E01               	movlw	1
  1481  00195A  ECAC  F00E         	call	___xxtofl
  1482  00195E  C070  F07E         	movff	?___xxtofl,___flmul@b
  1483  001962  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1484  001966  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1485  00196A  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1486  00196E  ECE4  F006         	call	___flmul	;wreg free
  1487  001972  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1488  001976  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1489  00197A  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1490  00197E  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1491  001982  ECFB  F012         	call	___fltol	;wreg free
  1492  001986  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1493  00198A  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1494                           
  1495                           ;telecomando.c: 194: analogic_brake = 0;
  1496  00198E  0E00               	movlw	0
  1497  001990  D008               	goto	L1
  1498  001992                     l5681:
  1499                           
  1500                           ;telecomando.c: 196: set_speed = 0;
  1501  001992  0E00               	movlw	0
  1502  001994  6E0E               	movwf	_set_speed+1,c	;volatile
  1503  001996  0E00               	movlw	0
  1504  001998  6E0D               	movwf	_set_speed,c	;volatile
  1505                           
  1506                           ;telecomando.c: 197: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1507  00199A  5023               	movf	_JoystickValues+1,w,c	;volatile
  1508  00199C  0D02               	mullw	2
  1509  00199E  28F3               	incf	prodl,w,c
  1510  0019A0  0800               	sublw	0
  1511  0019A2                     L1:
  1512  0019A2  6E14               	movwf	_analogic_brake,c	;volatile
  1513                           
  1514                           ;telecomando.c: 198: }
  1515                           ;telecomando.c: 199: } else {
  1516  0019A4  D005               	goto	l5689
  1517  0019A6                     l5685:
  1518                           
  1519                           ;telecomando.c: 200: set_speed = 0;
  1520  0019A6  0E00               	movlw	0
  1521  0019A8  6E0E               	movwf	_set_speed+1,c	;volatile
  1522  0019AA  0E00               	movlw	0
  1523  0019AC  6E0D               	movwf	_set_speed,c	;volatile
  1524                           
  1525                           ;telecomando.c: 201: analogic_brake = 255;
  1526  0019AE  6814               	setf	_analogic_brake,c	;volatile
  1527  0019B0                     l5689:
  1528                           
  1529                           ;telecomando.c: 202: }
  1530                           ;telecomando.c: 204: if ((time_counter - pr_time_2) >= 10) {
  1531  0019B0  C005  F119         	movff	_pr_time_2,??_main	;volatile
  1532  0019B4  C006  F11A         	movff	_pr_time_2+1,??_main+1	;volatile
  1533  0019B8  C007  F11B         	movff	_pr_time_2+2,??_main+2	;volatile
  1534  0019BC  C008  F11C         	movff	_pr_time_2+3,??_main+3	;volatile
  1535  0019C0  0101               	movlb	1	; () banked
  1536  0019C2  1F19               	comf	??_main& (0+255),f,b
  1537  0019C4  1F1A               	comf	(??_main+1)& (0+255),f,b
  1538  0019C6  1F1B               	comf	(??_main+2)& (0+255),f,b
  1539  0019C8  1F1C               	comf	(??_main+3)& (0+255),f,b
  1540  0019CA  2B19               	incf	??_main& (0+255),f,b
  1541  0019CC  0E00               	movlw	0
  1542  0019CE  231A               	addwfc	(??_main+1)& (0+255),f,b
  1543  0019D0  231B               	addwfc	(??_main+2)& (0+255),f,b
  1544  0019D2  231C               	addwfc	(??_main+3)& (0+255),f,b
  1545  0019D4  5009               	movf	_time_counter,w,c	;volatile
  1546  0019D6  0101               	movlb	1	; () banked
  1547  0019D8  2519               	addwf	??_main& (0+255),w,b
  1548  0019DA  0101               	movlb	1	; () banked
  1549  0019DC  6F1D               	movwf	(??_main+4)& (0+255),b
  1550  0019DE  500A               	movf	_time_counter+1,w,c	;volatile
  1551  0019E0  0101               	movlb	1	; () banked
  1552  0019E2  211A               	addwfc	(??_main+1)& (0+255),w,b
  1553  0019E4  0101               	movlb	1	; () banked
  1554  0019E6  6F1E               	movwf	(??_main+5)& (0+255),b
  1555  0019E8  500B               	movf	_time_counter+2,w,c	;volatile
  1556  0019EA  0101               	movlb	1	; () banked
  1557  0019EC  211B               	addwfc	(??_main+2)& (0+255),w,b
  1558  0019EE  0101               	movlb	1	; () banked
  1559  0019F0  6F1F               	movwf	(??_main+6)& (0+255),b
  1560  0019F2  500C               	movf	_time_counter+3,w,c	;volatile
  1561  0019F4  0101               	movlb	1	; () banked
  1562  0019F6  211C               	addwfc	(??_main+3)& (0+255),w,b
  1563  0019F8  0101               	movlb	1	; () banked
  1564  0019FA  6F20               	movwf	(??_main+7)& (0+255),b
  1565  0019FC  0101               	movlb	1	; () banked
  1566  0019FE  5120               	movf	(??_main+7)& (0+255),w,b
  1567  001A00  0101               	movlb	1	; () banked
  1568  001A02  111F               	iorwf	(??_main+6)& (0+255),w,b
  1569  001A04  0101               	movlb	1	; () banked
  1570  001A06  111E               	iorwf	(??_main+5)& (0+255),w,b
  1571  001A08  E105               	bnz	u6620
  1572  001A0A  0E0A               	movlw	10
  1573  001A0C  0101               	movlb	1	; () banked
  1574  001A0E  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1575  001A10  A0D8               	btfss	status,0,c
  1576  001A12  D00A               	goto	l5695
  1577  001A14                     u6620:
  1578                           
  1579                           ; BSR set to: 1
  1580                           ;telecomando.c: 205: pr_time_2 = time_counter;
  1581  001A14  C009  F005         	movff	_time_counter,_pr_time_2	;volatile
  1582  001A18  C00A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1583  001A1C  C00B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1584  001A20  C00C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1585                           
  1586                           ; BSR set to: 1
  1587                           ;telecomando.c: 206: USART_Send();
  1588  001A24  EC51  F016         	call	_USART_Send	;wreg free
  1589  001A28                     l5695:
  1590                           
  1591                           ;telecomando.c: 207: }
  1592                           ;telecomando.c: 209: if ((time_counter - pr_time_3) >= 50) {
  1593  001A28  C0D4  F119         	movff	_pr_time_3,??_main	;volatile
  1594  001A2C  C0D5  F11A         	movff	_pr_time_3+1,??_main+1	;volatile
  1595  001A30  C0D6  F11B         	movff	_pr_time_3+2,??_main+2	;volatile
  1596  001A34  C0D7  F11C         	movff	_pr_time_3+3,??_main+3	;volatile
  1597  001A38  0101               	movlb	1	; () banked
  1598  001A3A  1F19               	comf	??_main& (0+255),f,b
  1599  001A3C  1F1A               	comf	(??_main+1)& (0+255),f,b
  1600  001A3E  1F1B               	comf	(??_main+2)& (0+255),f,b
  1601  001A40  1F1C               	comf	(??_main+3)& (0+255),f,b
  1602  001A42  2B19               	incf	??_main& (0+255),f,b
  1603  001A44  0E00               	movlw	0
  1604  001A46  231A               	addwfc	(??_main+1)& (0+255),f,b
  1605  001A48  231B               	addwfc	(??_main+2)& (0+255),f,b
  1606  001A4A  231C               	addwfc	(??_main+3)& (0+255),f,b
  1607  001A4C  5009               	movf	_time_counter,w,c	;volatile
  1608  001A4E  0101               	movlb	1	; () banked
  1609  001A50  2519               	addwf	??_main& (0+255),w,b
  1610  001A52  0101               	movlb	1	; () banked
  1611  001A54  6F1D               	movwf	(??_main+4)& (0+255),b
  1612  001A56  500A               	movf	_time_counter+1,w,c	;volatile
  1613  001A58  0101               	movlb	1	; () banked
  1614  001A5A  211A               	addwfc	(??_main+1)& (0+255),w,b
  1615  001A5C  0101               	movlb	1	; () banked
  1616  001A5E  6F1E               	movwf	(??_main+5)& (0+255),b
  1617  001A60  500B               	movf	_time_counter+2,w,c	;volatile
  1618  001A62  0101               	movlb	1	; () banked
  1619  001A64  211B               	addwfc	(??_main+2)& (0+255),w,b
  1620  001A66  0101               	movlb	1	; () banked
  1621  001A68  6F1F               	movwf	(??_main+6)& (0+255),b
  1622  001A6A  500C               	movf	_time_counter+3,w,c	;volatile
  1623  001A6C  0101               	movlb	1	; () banked
  1624  001A6E  211C               	addwfc	(??_main+3)& (0+255),w,b
  1625  001A70  0101               	movlb	1	; () banked
  1626  001A72  6F20               	movwf	(??_main+7)& (0+255),b
  1627  001A74  0101               	movlb	1	; () banked
  1628  001A76  5120               	movf	(??_main+7)& (0+255),w,b
  1629  001A78  0101               	movlb	1	; () banked
  1630  001A7A  111F               	iorwf	(??_main+6)& (0+255),w,b
  1631  001A7C  0101               	movlb	1	; () banked
  1632  001A7E  111E               	iorwf	(??_main+5)& (0+255),w,b
  1633  001A80  E105               	bnz	u6630
  1634  001A82  0E32               	movlw	50
  1635  001A84  0101               	movlb	1	; () banked
  1636  001A86  5D1D               	subwf	(??_main+4)& (0+255),w,b
  1637  001A88  A0D8               	btfss	status,0,c
  1638  001A8A  D668               	goto	l5625
  1639  001A8C                     u6630:
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;telecomando.c: 210: pr_time_3 = time_counter;
  1643  001A8C  C009  F0D4         	movff	_time_counter,_pr_time_3	;volatile
  1644  001A90  C00A  F0D5         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1645  001A94  C00B  F0D6         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1646  001A98  C00C  F0D7         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1647                           
  1648                           ; BSR set to: 1
  1649                           ;telecomando.c: 211: LCD_Handler();
  1650  001A9C  EC70  F012         	call	_LCD_Handler	;wreg free
  1651  001AA0  D65D               	goto	l5625
  1652  001AA2                     __end_of_main:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodl	equ	0xFF3
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _board_initialization *****************
  1664 ;; Defined at:
  1665 ;;		line 276 in file "telecomando.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1679 ;;      Params:         0       0       0       0
  1680 ;;      Locals:         0       0       0       0
  1681 ;;      Temps:          0       0       0       0
  1682 ;;      Totals:         0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:   10
  1686 ;; This function calls:
  1687 ;;		_LCD_backlight
  1688 ;;		_LCD_clear
  1689 ;;		_LCD_goto_line
  1690 ;;		_LCD_initialize
  1691 ;;		_LCD_write_message
  1692 ;;		_OpenUSART
  1693 ;;		_delay_ms
  1694 ;;		_delay_s
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text1
  1701  0028CC                     __ptext1:
  1702                           	opt stack 0
  1703  0028CC                     _board_initialization:
  1704                           	opt stack 20
  1705                           
  1706                           ;telecomando.c: 278: LATA = 0x00;
  1707                           
  1708                           ;incstack = 0
  1709  0028CC  0E00               	movlw	0
  1710  0028CE  6E89               	movwf	3977,c	;volatile
  1711                           
  1712                           ;telecomando.c: 279: TRISA = 0b00001111;
  1713  0028D0  0E0F               	movlw	15
  1714  0028D2  6E92               	movwf	3986,c	;volatile
  1715                           
  1716                           ;telecomando.c: 280: LATB = 0x00;
  1717  0028D4  0E00               	movlw	0
  1718  0028D6  6E8A               	movwf	3978,c	;volatile
  1719                           
  1720                           ;telecomando.c: 281: TRISB = 0xFF;
  1721  0028D8  6893               	setf	3987,c	;volatile
  1722                           
  1723                           ;telecomando.c: 282: LATC = 0x00;
  1724  0028DA  0E00               	movlw	0
  1725  0028DC  6E8B               	movwf	3979,c	;volatile
  1726                           
  1727                           ;telecomando.c: 283: TRISC = 0b10110000;
  1728  0028DE  0EB0               	movlw	176
  1729  0028E0  6E94               	movwf	3988,c	;volatile
  1730                           
  1731                           ;telecomando.c: 284: LATD = 0x00;
  1732  0028E2  0E00               	movlw	0
  1733  0028E4  6E8C               	movwf	3980,c	;volatile
  1734                           
  1735                           ;telecomando.c: 285: TRISD = 0x00;
  1736  0028E6  0E00               	movlw	0
  1737  0028E8  6E95               	movwf	3989,c	;volatile
  1738                           
  1739                           ;telecomando.c: 286: LATE = 0x00;
  1740  0028EA  0E00               	movlw	0
  1741  0028EC  6E8D               	movwf	3981,c	;volatile
  1742                           
  1743                           ;telecomando.c: 287: TRISE = 0x00;
  1744  0028EE  0E00               	movlw	0
  1745  0028F0  6E96               	movwf	3990,c	;volatile
  1746                           
  1747                           ;telecomando.c: 290: PIR1bits.RCIF = 0;
  1748  0028F2  9A9E               	bcf	3998,5,c	;volatile
  1749                           
  1750                           ;telecomando.c: 291: PIR2bits.TMR3IF = 0;
  1751  0028F4  92A1               	bcf	4001,1,c	;volatile
  1752                           
  1753                           ;telecomando.c: 294: RCONbits.IPEN = 1;
  1754  0028F6  8ED0               	bsf	4048,7,c	;volatile
  1755                           
  1756                           ;telecomando.c: 295: IPR1bits.RCIP = 1;
  1757  0028F8  8A9F               	bsf	3999,5,c	;volatile
  1758                           
  1759                           ;telecomando.c: 296: IPR2bits.TMR3IP = 0;
  1760  0028FA  92A2               	bcf	4002,1,c	;volatile
  1761                           
  1762                           ;telecomando.c: 299: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1763  0028FC  0E4F               	movlw	79
  1764  0028FE  16AB               	andwf	4011,f,c	;volatile
  1765  002900  9AAC               	bcf	4012,5,c	;volatile
  1766  002902  0ECF               	movlw	207
  1767  002904  169D               	andwf	3997,f,c	;volatile
  1768                           
  1769                           ;telecomando.c: 300: delay_ms(10);
  1770  002906  0E00               	movlw	0
  1771  002908  0100               	movlb	0	; () banked
  1772  00290A  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1773  00290C  0E0A               	movlw	10
  1774  00290E  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1775  002910  EC99  F017         	call	_delay_ms	;wreg free
  1776                           
  1777                           ;telecomando.c: 301: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1778                           ;telecomando.c: 302: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1779  002914  0E00               	movlw	0
  1780  002916  6E3D               	movwf	OpenUSART@spbrg+1,c
  1781  002918  0E67               	movlw	103
  1782  00291A  6E3C               	movwf	OpenUSART@spbrg,c
  1783  00291C  0E7C               	movlw	124
  1784  00291E  EC88  F016         	call	_OpenUSART
  1785                           
  1786                           ;telecomando.c: 305: ADCON1 = 0b00001101;
  1787  002922  0E0D               	movlw	13
  1788  002924  6EC1               	movwf	4033,c	;volatile
  1789                           
  1790                           ;telecomando.c: 306: ADCON0bits.CHS2 = 0;
  1791  002926  98C2               	bcf	4034,4,c	;volatile
  1792                           
  1793                           ;telecomando.c: 307: ADCON0bits.CHS1 = 0;
  1794  002928  96C2               	bcf	4034,3,c	;volatile
  1795                           
  1796                           ;telecomando.c: 308: ADCON0bits.CHS0 = 0;
  1797  00292A  94C2               	bcf	4034,2,c	;volatile
  1798                           
  1799                           ;telecomando.c: 309: ADCON2bits.ACQT2 = 1;
  1800  00292C  8AC0               	bsf	4032,5,c	;volatile
  1801                           
  1802                           ;telecomando.c: 310: ADCON2bits.ACQT1 = 1;
  1803  00292E  88C0               	bsf	4032,4,c	;volatile
  1804                           
  1805                           ;telecomando.c: 311: ADCON2bits.ACQT0 = 0;
  1806  002930  96C0               	bcf	4032,3,c	;volatile
  1807                           
  1808                           ;telecomando.c: 312: ADCON2bits.ADCS2 = 1;
  1809  002932  84C0               	bsf	4032,2,c	;volatile
  1810                           
  1811                           ;telecomando.c: 313: ADCON2bits.ADCS1 = 0;
  1812  002934  92C0               	bcf	4032,1,c	;volatile
  1813                           
  1814                           ;telecomando.c: 314: ADCON2bits.ADCS0 = 1;
  1815  002936  80C0               	bsf	4032,0,c	;volatile
  1816                           
  1817                           ;telecomando.c: 315: ADCON2bits.ADFM = 0;
  1818  002938  9EC0               	bcf	4032,7,c	;volatile
  1819                           
  1820                           ;telecomando.c: 316: ADCON0bits.ADON = 1;
  1821  00293A  80C2               	bsf	4034,0,c	;volatile
  1822                           
  1823                           ;telecomando.c: 318: PORTDbits.RD2 = 1;
  1824  00293C  8483               	bsf	3971,2,c	;volatile
  1825                           
  1826                           ;telecomando.c: 319: delay_ms(10);
  1827  00293E  0E00               	movlw	0
  1828  002940  0100               	movlb	0	; () banked
  1829  002942  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1830  002944  0E0A               	movlw	10
  1831  002946  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1832  002948  EC99  F017         	call	_delay_ms	;wreg free
  1833                           
  1834                           ;telecomando.c: 320: PORTDbits.RD3 = 1;
  1835  00294C  8683               	bsf	3971,3,c	;volatile
  1836                           
  1837                           ;telecomando.c: 321: delay_s(1);
  1838  00294E  0E01               	movlw	1
  1839  002950  ECC9  F017         	call	_delay_s
  1840                           
  1841                           ;telecomando.c: 323: LCD_initialize(16);
  1842  002954  0E10               	movlw	16
  1843  002956  EC5C  F010         	call	_LCD_initialize
  1844                           
  1845                           ;telecomando.c: 324: LCD_backlight(0);
  1846  00295A  0E00               	movlw	0
  1847  00295C  EC7C  F018         	call	_LCD_backlight
  1848                           
  1849                           ;telecomando.c: 325: LCD_clear();
  1850  002960  EC80  F017         	call	_LCD_clear	;wreg free
  1851                           
  1852                           ;telecomando.c: 326: LCD_goto_line(1);
  1853  002964  0E01               	movlw	1
  1854  002966  EC81  F013         	call	_LCD_goto_line
  1855                           
  1856                           ;telecomando.c: 328: LCD_write_message("Wait...");
  1857  00296A  0EE7               	movlw	low STR_13
  1858  00296C  0100               	movlb	0	; () banked
  1859  00296E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1860  002970  0E3F               	movlw	high STR_13
  1861  002972  0100               	movlb	0	; () banked
  1862  002974  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1863  002976  ECDF  F017         	call	_LCD_write_message	;wreg free
  1864                           
  1865                           ;telecomando.c: 330: PORTDbits.RD2 = 0;
  1866  00297A  9483               	bcf	3971,2,c	;volatile
  1867                           
  1868                           ;telecomando.c: 331: PORTDbits.RD3 = 0;
  1869  00297C  9683               	bcf	3971,3,c	;volatile
  1870                           
  1871                           ;telecomando.c: 334: TMR3H = 0x63;
  1872  00297E  0E63               	movlw	99
  1873  002980  6EB3               	movwf	4019,c	;volatile
  1874                           
  1875                           ;telecomando.c: 335: TMR3L = 0xC0;
  1876  002982  0EC0               	movlw	192
  1877  002984  6EB2               	movwf	4018,c	;volatile
  1878                           
  1879                           ;telecomando.c: 338: PIE1bits.RCIE = 1;
  1880  002986  8A9D               	bsf	3997,5,c	;volatile
  1881                           
  1882                           ;telecomando.c: 339: PIE2bits.TMR3IE = 1;
  1883  002988  82A0               	bsf	4000,1,c	;volatile
  1884                           
  1885                           ;telecomando.c: 340: INTCONbits.GIEH = 1;
  1886  00298A  8EF2               	bsf	intcon,7,c	;volatile
  1887                           
  1888                           ;telecomando.c: 341: INTCONbits.GIEL = 1;
  1889  00298C  8CF2               	bsf	intcon,6,c	;volatile
  1890                           
  1891                           ;telecomando.c: 343: RCSTAbits.SPEN = 1;
  1892  00298E  8EAB               	bsf	4011,7,c	;volatile
  1893                           
  1894                           ;telecomando.c: 344: T3CON = 0x01;
  1895  002990  0E01               	movlw	1
  1896  002992  6EB1               	movwf	4017,c	;volatile
  1897                           
  1898                           ;telecomando.c: 345: LCD_clear();
  1899  002994  EC80  F017         	call	_LCD_clear	;wreg free
  1900  002998  0012               	return		;funcret
  1901  00299A                     __end_of_board_initialization:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           prodl	equ	0xFF3
  1908                           intcon	equ	0xFF2
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _delay_s *****************
  1914 ;; Defined at:
  1915 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  value_s         1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  value_s         1   18[BANK0 ] unsigned char 
  1920 ;;  repeat_loop     1   19[BANK0 ] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;		None               void
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1930 ;;      Params:         0       0       0       0
  1931 ;;      Locals:         0       2       0       0
  1932 ;;      Temps:          0       0       0       0
  1933 ;;      Totals:         0       2       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    6
  1937 ;; This function calls:
  1938 ;;		_delay_ms
  1939 ;; This function is called by:
  1940 ;;		_board_initialization
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text2
  1945  002F92                     __ptext2:
  1946                           	opt stack 0
  1947  002F92                     _delay_s:
  1948                           	opt stack 23
  1949                           
  1950                           ;incstack = 0
  1951                           ;delay_s@value_s stored from wreg
  1952  002F92  0100               	movlb	0	; () banked
  1953  002F94  6F72               	movwf	delay_s@value_s& (0+255),b
  1954                           
  1955                           ;src\delay.c: 104: unsigned char repeat_loop;
  1956                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1957  002F96  0E00               	movlw	0
  1958  002F98  0100               	movlb	0	; () banked
  1959  002F9A  6F73               	movwf	delay_s@repeat_loop& (0+255),b
  1960  002F9C  D009               	goto	l5127
  1961  002F9E                     l5123:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;src\delay.c: 107: delay_ms (1000);
  1965  002F9E  0E03               	movlw	3
  1966  002FA0  0100               	movlb	0	; () banked
  1967  002FA2  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1968  002FA4  0EE8               	movlw	232
  1969  002FA6  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1970  002FA8  EC99  F017         	call	_delay_ms	;wreg free
  1971  002FAC  0100               	movlb	0	; () banked
  1972  002FAE  2B73               	incf	delay_s@repeat_loop& (0+255),f,b
  1973  002FB0                     l5127:
  1974                           
  1975                           ; BSR set to: 0
  1976  002FB0  0100               	movlb	0	; () banked
  1977  002FB2  5172               	movf	delay_s@value_s& (0+255),w,b
  1978  002FB4  0100               	movlb	0	; () banked
  1979  002FB6  5D73               	subwf	delay_s@repeat_loop& (0+255),w,b
  1980  002FB8  B0D8               	btfsc	status,0,c
  1981  002FBA  0012               	return	
  1982  002FBC  D7F0               	goto	l5123
  1983  002FBE                     __end_of_delay_s:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodl	equ	0xFF3
  1990                           intcon	equ	0xFF2
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _OpenUSART *****************
  1996 ;; Defined at:
  1997 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  config          1    wreg     unsigned char 
  2000 ;;  spbrg           2   24[COMRAM] unsigned int 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  config          1   26[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;		None               void
  2005 ;; Registers used:
  2006 ;;		wreg, status,2
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2012 ;;      Params:         2       0       0       0
  2013 ;;      Locals:         1       0       0       0
  2014 ;;      Temps:          0       0       0       0
  2015 ;;      Totals:         3       0       0       0
  2016 ;;Total ram usage:        3 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    4
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_board_initialization
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text3
  2027  002D10                     __ptext3:
  2028                           	opt stack 0
  2029  002D10                     _OpenUSART:
  2030                           	opt stack 25
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;incstack = 0
  2034                           ;OpenUSART@config stored from wreg
  2035  002D10  6E3E               	movwf	OpenUSART@config,c
  2036  002D12  0E00               	movlw	0
  2037  002D14  6EAC               	movwf	4012,c	;volatile
  2038  002D16  0E00               	movlw	0
  2039  002D18  6EAB               	movwf	4011,c	;volatile
  2040  002D1A  B03E               	btfsc	OpenUSART@config,0,c
  2041  002D1C  88AC               	bsf	4012,4,c	;volatile
  2042  002D1E  A23E               	btfss	OpenUSART@config,1,c
  2043  002D20  D002               	goto	l3827
  2044  002D22  8CAC               	bsf	4012,6,c	;volatile
  2045  002D24  8CAB               	bsf	4011,6,c	;volatile
  2046  002D26                     l3827:
  2047  002D26  B43E               	btfsc	OpenUSART@config,2,c
  2048  002D28  8EAC               	bsf	4012,7,c	;volatile
  2049  002D2A  A63E               	btfss	OpenUSART@config,3,c
  2050  002D2C  D002               	goto	l425
  2051  002D2E  88AB               	bsf	4011,4,c	;volatile
  2052  002D30  D001               	goto	l3835
  2053  002D32                     l425:
  2054  002D32  8AAB               	bsf	4011,5,c	;volatile
  2055  002D34                     l3835:
  2056  002D34  B83E               	btfsc	OpenUSART@config,4,c
  2057  002D36  84AC               	bsf	4012,2,c	;volatile
  2058  002D38  989E               	bcf	3998,4,c	;volatile
  2059  002D3A  BA3E               	btfsc	OpenUSART@config,5,c
  2060  002D3C  86AB               	bsf	4011,3,c	;volatile
  2061  002D3E  AC3E               	btfss	OpenUSART@config,6,c
  2062  002D40  D002               	goto	l429
  2063  002D42  8A9D               	bsf	3997,5,c	;volatile
  2064  002D44  D001               	goto	l430
  2065  002D46                     l429:
  2066  002D46  9A9D               	bcf	3997,5,c	;volatile
  2067  002D48                     l430:
  2068  002D48  9A9E               	bcf	3998,5,c	;volatile
  2069  002D4A  AE3E               	btfss	OpenUSART@config,7,c
  2070  002D4C  D002               	goto	l431
  2071  002D4E  889D               	bsf	3997,4,c	;volatile
  2072  002D50  D001               	goto	l432
  2073  002D52                     l431:
  2074  002D52  989D               	bcf	3997,4,c	;volatile
  2075  002D54                     l432:
  2076  002D54  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2077  002D58  503D               	movf	OpenUSART@spbrg+1,w,c
  2078  002D5A  6EB0               	movwf	4016,c	;volatile
  2079  002D5C  8AAC               	bsf	4012,5,c	;volatile
  2080  002D5E  8EAB               	bsf	4011,7,c	;volatile
  2081  002D60  9C94               	bcf	3988,6,c	;volatile
  2082  002D62  8E94               	bsf	3988,7,c	;volatile
  2083  002D64  A8AC               	btfss	4012,4,c	;volatile
  2084  002D66  0012               	return	
  2085  002D68  BEAC               	btfsc	4012,7,c	;volatile
  2086  002D6A  0012               	return	
  2087  002D6C  8C94               	bsf	3988,6,c	;volatile
  2088  002D6E  0012               	return	
  2089  002D70                     __end_of_OpenUSART:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodl	equ	0xFF3
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _LCD_initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  quartz_frequ    1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;		None               void
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2117 ;;      Params:         0       0       0       0
  2118 ;;      Locals:         0       1       0       0
  2119 ;;      Temps:          0       0       0       0
  2120 ;;      Totals:         0       1       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    9
  2124 ;; This function calls:
  2125 ;;		_LCD_clear
  2126 ;;		_LCD_cursor
  2127 ;;		_LCD_send_command
  2128 ;;		_delay_ms
  2129 ;;		_delay_set_quartz
  2130 ;; This function is called by:
  2131 ;;		_board_initialization
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text4
  2136  0020B8                     __ptext4:
  2137                           	opt stack 0
  2138  0020B8                     _LCD_initialize:
  2139                           	opt stack 20
  2140                           
  2141                           ;incstack = 0
  2142                           ;LCD_initialize@quartz_frequency stored from wreg
  2143  0020B8  0100               	movlb	0	; () banked
  2144  0020BA  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2145                           
  2146                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2147  0020BC  0100               	movlb	0	; () banked
  2148  0020BE  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2149  0020C0  EC83  F018         	call	_delay_set_quartz
  2150                           
  2151                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2152  0020C4  948D               	bcf	3981,2,c	;volatile
  2153                           
  2154                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2155  0020C6  928B               	bcf	3979,1,c	;volatile
  2156                           
  2157                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2158  0020C8  908B               	bcf	3979,0,c	;volatile
  2159                           
  2160                           ;src\LCD_44780.c: 291: delay_ms (100);
  2161  0020CA  0E00               	movlw	0
  2162  0020CC  0100               	movlb	0	; () banked
  2163  0020CE  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2164  0020D0  0E64               	movlw	100
  2165  0020D2  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2166  0020D4  EC99  F017         	call	_delay_ms	;wreg free
  2167                           
  2168                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2169  0020D8  0E00               	movlw	0
  2170  0020DA  0100               	movlb	0	; () banked
  2171  0020DC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2172  0020DE  0E01               	movlw	1
  2173  0020E0  0100               	movlb	0	; () banked
  2174  0020E2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2175  0020E4  0E01               	movlw	1
  2176  0020E6  0100               	movlb	0	; () banked
  2177  0020E8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2178  0020EA  0E00               	movlw	0
  2179  0020EC  EC4C  F017         	call	_LCD_send_command
  2180                           
  2181                           ;src\LCD_44780.c: 293: delay_ms (100);
  2182  0020F0  0E00               	movlw	0
  2183  0020F2  0100               	movlb	0	; () banked
  2184  0020F4  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2185  0020F6  0E64               	movlw	100
  2186  0020F8  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2187  0020FA  EC99  F017         	call	_delay_ms	;wreg free
  2188                           
  2189                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2190  0020FE  0E00               	movlw	0
  2191  002100  0100               	movlb	0	; () banked
  2192  002102  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2193  002104  0E01               	movlw	1
  2194  002106  0100               	movlb	0	; () banked
  2195  002108  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2196  00210A  0E01               	movlw	1
  2197  00210C  0100               	movlb	0	; () banked
  2198  00210E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2199  002110  0E00               	movlw	0
  2200  002112  EC4C  F017         	call	_LCD_send_command
  2201                           
  2202                           ;src\LCD_44780.c: 295: delay_ms (10);
  2203  002116  0E00               	movlw	0
  2204  002118  0100               	movlb	0	; () banked
  2205  00211A  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2206  00211C  0E0A               	movlw	10
  2207  00211E  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2208  002120  EC99  F017         	call	_delay_ms	;wreg free
  2209                           
  2210                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2211  002124  0E00               	movlw	0
  2212  002126  0100               	movlb	0	; () banked
  2213  002128  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2214  00212A  0E01               	movlw	1
  2215  00212C  0100               	movlb	0	; () banked
  2216  00212E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2217  002130  0E01               	movlw	1
  2218  002132  0100               	movlb	0	; () banked
  2219  002134  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2220  002136  0E00               	movlw	0
  2221  002138  EC4C  F017         	call	_LCD_send_command
  2222                           
  2223                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2224  00213C  0E00               	movlw	0
  2225  00213E  0100               	movlb	0	; () banked
  2226  002140  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2227  002142  0E01               	movlw	1
  2228  002144  0100               	movlb	0	; () banked
  2229  002146  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2230  002148  0E00               	movlw	0
  2231  00214A  0100               	movlb	0	; () banked
  2232  00214C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2233  00214E  0E00               	movlw	0
  2234  002150  EC4C  F017         	call	_LCD_send_command
  2235                           
  2236                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2237  002154  0E00               	movlw	0
  2238  002156  0100               	movlb	0	; () banked
  2239  002158  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2240  00215A  0E01               	movlw	1
  2241  00215C  0100               	movlb	0	; () banked
  2242  00215E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2243  002160  0E00               	movlw	0
  2244  002162  0100               	movlb	0	; () banked
  2245  002164  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2246  002166  0E00               	movlw	0
  2247  002168  EC4C  F017         	call	_LCD_send_command
  2248                           
  2249                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2250  00216C  0E00               	movlw	0
  2251  00216E  0100               	movlb	0	; () banked
  2252  002170  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2253  002172  0E00               	movlw	0
  2254  002174  0100               	movlb	0	; () banked
  2255  002176  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2256  002178  0E00               	movlw	0
  2257  00217A  0100               	movlb	0	; () banked
  2258  00217C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2259  00217E  0E01               	movlw	1
  2260  002180  EC4C  F017         	call	_LCD_send_command
  2261                           
  2262                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2263  002184  0E00               	movlw	0
  2264  002186  0100               	movlb	0	; () banked
  2265  002188  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2266  00218A  0E00               	movlw	0
  2267  00218C  0100               	movlb	0	; () banked
  2268  00218E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2269  002190  0E00               	movlw	0
  2270  002192  0100               	movlb	0	; () banked
  2271  002194  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2272  002196  0E00               	movlw	0
  2273  002198  EC4C  F017         	call	_LCD_send_command
  2274                           
  2275                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2276  00219C  0E00               	movlw	0
  2277  00219E  0100               	movlb	0	; () banked
  2278  0021A0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2279  0021A2  0E00               	movlw	0
  2280  0021A4  0100               	movlb	0	; () banked
  2281  0021A6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2282  0021A8  0E00               	movlw	0
  2283  0021AA  0100               	movlb	0	; () banked
  2284  0021AC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2285  0021AE  0E01               	movlw	1
  2286  0021B0  EC4C  F017         	call	_LCD_send_command
  2287                           
  2288                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2289  0021B4  0E00               	movlw	0
  2290  0021B6  0100               	movlb	0	; () banked
  2291  0021B8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2292  0021BA  0E00               	movlw	0
  2293  0021BC  0100               	movlb	0	; () banked
  2294  0021BE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2295  0021C0  0E00               	movlw	0
  2296  0021C2  0100               	movlb	0	; () banked
  2297  0021C4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2298  0021C6  0E00               	movlw	0
  2299  0021C8  EC4C  F017         	call	_LCD_send_command
  2300                           
  2301                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2302  0021CC  0E00               	movlw	0
  2303  0021CE  0100               	movlb	0	; () banked
  2304  0021D0  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2305  0021D2  0E00               	movlw	0
  2306  0021D4  0100               	movlb	0	; () banked
  2307  0021D6  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2308  0021D8  0E01               	movlw	1
  2309  0021DA  0100               	movlb	0	; () banked
  2310  0021DC  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2311  0021DE  0E00               	movlw	0
  2312  0021E0  EC4C  F017         	call	_LCD_send_command
  2313                           
  2314                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2315  0021E4  0E00               	movlw	0
  2316  0021E6  0100               	movlb	0	; () banked
  2317  0021E8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2318  0021EA  0E00               	movlw	0
  2319  0021EC  0100               	movlb	0	; () banked
  2320  0021EE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2321  0021F0  0E00               	movlw	0
  2322  0021F2  0100               	movlb	0	; () banked
  2323  0021F4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2324  0021F6  0E00               	movlw	0
  2325  0021F8  EC4C  F017         	call	_LCD_send_command
  2326                           
  2327                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2328  0021FC  0E01               	movlw	1
  2329  0021FE  0100               	movlb	0	; () banked
  2330  002200  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2331  002202  0E01               	movlw	1
  2332  002204  0100               	movlb	0	; () banked
  2333  002206  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2334  002208  0E00               	movlw	0
  2335  00220A  0100               	movlb	0	; () banked
  2336  00220C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2337  00220E  0E00               	movlw	0
  2338  002210  EC4C  F017         	call	_LCD_send_command
  2339                           
  2340                           ;src\LCD_44780.c: 312: LCD_clear ();
  2341  002214  EC80  F017         	call	_LCD_clear	;wreg free
  2342                           
  2343                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2344  002218  0E00               	movlw	0
  2345  00221A  0100               	movlb	0	; () banked
  2346  00221C  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  2347  00221E  0E00               	movlw	0
  2348  002220  EC67  F017         	call	_LCD_cursor
  2349  002224  0012               	return		;funcret
  2350  002226                     __end_of_LCD_initialize:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodl	equ	0xFF3
  2357                           intcon	equ	0xFF2
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function _delay_set_quartz *****************
  2363 ;; Defined at:
  2364 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  frequency       1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  frequency       1   24[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2378 ;;      Params:         0       0       0       0
  2379 ;;      Locals:         1       0       0       0
  2380 ;;      Temps:          0       0       0       0
  2381 ;;      Totals:         1       0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    4
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_LCD_initialize
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text5
  2393  003106                     __ptext5:
  2394                           	opt stack 0
  2395  003106                     _delay_set_quartz:
  2396                           	opt stack 24
  2397                           
  2398                           ;incstack = 0
  2399                           ;delay_set_quartz@frequency stored from wreg
  2400  003106  6E3C               	movwf	delay_set_quartz@frequency,c
  2401                           
  2402                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2403  003108  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2404  00310C  0012               	return		;funcret
  2405  00310E                     __end_of_delay_set_quartz:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           prodl	equ	0xFF3
  2412                           intcon	equ	0xFF2
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _LCD_cursor *****************
  2418 ;; Defined at:
  2419 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  active          1    wreg     unsigned char 
  2422 ;;  blinking        1   21[BANK0 ] unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  active          1   22[BANK0 ] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;		None               void
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2434 ;;      Params:         0       1       0       0
  2435 ;;      Locals:         0       1       0       0
  2436 ;;      Temps:          0       0       0       0
  2437 ;;      Totals:         0       2       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    8
  2441 ;; This function calls:
  2442 ;;		_LCD_send_command
  2443 ;; This function is called by:
  2444 ;;		_LCD_initialize
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text6
  2449  002ECE                     __ptext6:
  2450                           	opt stack 0
  2451  002ECE                     _LCD_cursor:
  2452                           	opt stack 20
  2453                           
  2454                           ;incstack = 0
  2455                           ;LCD_cursor@active stored from wreg
  2456  002ECE  0100               	movlb	0	; () banked
  2457  002ED0  6F76               	movwf	LCD_cursor@active& (0+255),b
  2458                           
  2459                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2460  002ED2  0E00               	movlw	0
  2461  002ED4  0100               	movlb	0	; () banked
  2462  002ED6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2463  002ED8  0E00               	movlw	0
  2464  002EDA  0100               	movlb	0	; () banked
  2465  002EDC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2466  002EDE  0E00               	movlw	0
  2467  002EE0  0100               	movlb	0	; () banked
  2468  002EE2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2469  002EE4  0E00               	movlw	0
  2470  002EE6  EC4C  F017         	call	_LCD_send_command
  2471                           
  2472                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2473  002EEA  0E01               	movlw	1
  2474  002EEC  0100               	movlb	0	; () banked
  2475  002EEE  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2476  002EF0  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2477  002EF4  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2478  002EF8  0E01               	movlw	1
  2479  002EFA  EC4C  F017         	call	_LCD_send_command
  2480  002EFE  0012               	return		;funcret
  2481  002F00                     __end_of_LCD_cursor:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _LCD_backlight *****************
  2494 ;; Defined at:
  2495 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  active          1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  active          1   24[COMRAM] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;		None               void
  2502 ;; Registers used:
  2503 ;;		wreg
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2509 ;;      Params:         0       0       0       0
  2510 ;;      Locals:         1       0       0       0
  2511 ;;      Temps:          0       0       0       0
  2512 ;;      Totals:         1       0       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    4
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_board_initialization
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text7
  2524  0030F8                     __ptext7:
  2525                           	opt stack 0
  2526  0030F8                     _LCD_backlight:
  2527                           	opt stack 25
  2528                           
  2529                           ;incstack = 0
  2530                           ;LCD_backlight@active stored from wreg
  2531  0030F8  6E3C               	movwf	LCD_backlight@active,c
  2532                           
  2533                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2534  0030FA  B03C               	btfsc	LCD_backlight@active,0,c
  2535  0030FC  D002               	bra	u3655
  2536  0030FE  988B               	bcf	3979,4,c	;volatile
  2537  003100  D001               	bra	u3656
  2538  003102                     u3655:
  2539  003102  888B               	bsf	3979,4,c	;volatile
  2540  003104                     u3656:
  2541  003104  0012               	return		;funcret
  2542  003106                     __end_of_LCD_backlight:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _USART_Send *****************
  2555 ;; Defined at:
  2556 ;;		line 229 in file "telecomando.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  i               1   27[COMRAM] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;		None               void
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2570 ;;      Params:         0       0       0       0
  2571 ;;      Locals:         1       0       0       0
  2572 ;;      Temps:          0       0       0       0
  2573 ;;      Totals:         1       0       0       0
  2574 ;;Total ram usage:        1 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    6
  2577 ;; This function calls:
  2578 ;;		_putsUSART
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text8
  2585  002CA2                     __ptext8:
  2586                           	opt stack 0
  2587  002CA2                     _USART_Send:
  2588                           	opt stack 24
  2589                           
  2590                           ;telecomando.c: 230: set_speed_pk1 = set_speed >> 8;
  2591                           
  2592                           ;incstack = 0
  2593  002CA2  500E               	movf	_set_speed+1,w,c	;volatile
  2594  002CA4  6E17               	movwf	_set_speed_pk1,c	;volatile
  2595                           
  2596                           ;telecomando.c: 231: set_speed_pk0 = set_speed;
  2597  002CA6  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2598                           
  2599                           ;telecomando.c: 232: USART_Tx[1] = dir;
  2600  002CAA  0E00               	movlw	0
  2601  002CAC  B243               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2602  002CAE  0E01               	movlw	1
  2603  002CB0  0100               	movlb	0	; () banked
  2604  002CB2  6FE3               	movwf	(_USART_Tx+1)& (0+255),b
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;telecomando.c: 233: USART_Tx[2] = set_speed_pk1;
  2608  002CB4  C017  F0E4         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;telecomando.c: 234: USART_Tx[3] = set_speed_pk0;
  2612  002CB8  C016  F0E5         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;telecomando.c: 235: USART_Tx[4] = set_steering;
  2616  002CBC  C018  F0E6         	movff	_set_steering,_USART_Tx+4	;volatile
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;telecomando.c: 236: USART_Tx[5] = analogic_brake;
  2620  002CC0  C014  F0E7         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2621                           
  2622                           ;telecomando.c: 237: for (char i = 0; i<6; i++){
  2623  002CC4  0E00               	movlw	0
  2624  002CC6  6E3F               	movwf	USART_Send@i,c
  2625  002CC8                     l4025:
  2626                           
  2627                           ; BSR set to: 0
  2628  002CC8  0E05               	movlw	5
  2629  002CCA  643F               	cpfsgt	USART_Send@i,c
  2630  002CCC  D001               	goto	l4029
  2631  002CCE  D017               	goto	l282
  2632  002CD0                     l4029:
  2633                           
  2634                           ;telecomando.c: 238: if (USART_Tx[i] == 0){
  2635  002CD0  503F               	movf	USART_Send@i,w,c
  2636  002CD2  0D01               	mullw	1
  2637  002CD4  0EE2               	movlw	low _USART_Tx
  2638  002CD6  24F3               	addwf	prodl,w,c
  2639  002CD8  6ED9               	movwf	fsr2l,c
  2640  002CDA  0E00               	movlw	high _USART_Tx
  2641  002CDC  20F4               	addwfc	prodh,w,c
  2642  002CDE  6EDA               	movwf	fsr2h,c
  2643  002CE0  50DF               	movf	indf2,w,c
  2644  002CE2  A4D8               	btfss	status,2,c
  2645  002CE4  D00A               	goto	l4033
  2646                           
  2647                           ;telecomando.c: 239: USART_Tx[i] = 1;
  2648  002CE6  503F               	movf	USART_Send@i,w,c
  2649  002CE8  0D01               	mullw	1
  2650  002CEA  0EE2               	movlw	low _USART_Tx
  2651  002CEC  24F3               	addwf	prodl,w,c
  2652  002CEE  6ED9               	movwf	fsr2l,c
  2653  002CF0  0E00               	movlw	high _USART_Tx
  2654  002CF2  20F4               	addwfc	prodh,w,c
  2655  002CF4  6EDA               	movwf	fsr2h,c
  2656  002CF6  0E01               	movlw	1
  2657  002CF8  6EDF               	movwf	indf2,c
  2658  002CFA                     l4033:
  2659  002CFA  2A3F               	incf	USART_Send@i,f,c
  2660  002CFC  D7E5               	goto	l4025
  2661  002CFE                     l282:
  2662                           
  2663                           ;telecomando.c: 240: }
  2664                           ;telecomando.c: 241: }
  2665                           ;telecomando.c: 242: if ((!TXSTAbits.TRMT)!= 1){
  2666  002CFE  A2AC               	btfss	4012,1,c	;volatile
  2667  002D00  0012               	return	
  2668                           
  2669                           ;telecomando.c: 243: putsUSART(USART_Tx);
  2670  002D02  0EE2               	movlw	low _USART_Tx
  2671  002D04  6E3D               	movwf	putsUSART@data,c
  2672  002D06  0E00               	movlw	high _USART_Tx
  2673  002D08  6E3E               	movwf	putsUSART@data+1,c
  2674  002D0A  EC0B  F018         	call	_putsUSART	;wreg free
  2675  002D0E  0012               	return	
  2676  002D10                     __end_of_USART_Send:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           indf2	equ	0xFDF
  2688                           fsr2h	equ	0xFDA
  2689                           fsr2l	equ	0xFD9
  2690                           status	equ	0xFD8
  2691                           
  2692 ;; *************** function _putsUSART *****************
  2693 ;; Defined at:
  2694 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  data            2   25[COMRAM] PTR unsigned char 
  2697 ;;		 -> USART_Tx(8), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2709 ;;      Params:         2       0       0       0
  2710 ;;      Locals:         0       0       0       0
  2711 ;;      Temps:          0       0       0       0
  2712 ;;      Totals:         2       0       0       0
  2713 ;;Total ram usage:        2 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_WriteUSART
  2718 ;; This function is called by:
  2719 ;;		_USART_Send
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text9
  2724  003016                     __ptext9:
  2725                           	opt stack 0
  2726  003016                     _putsUSART:
  2727                           	opt stack 24
  2728  003016                     l442:
  2729  003016  A2AC               	btfss	4012,1,c	;volatile
  2730  003018  D7FE               	goto	l442
  2731  00301A  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2732  00301E  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2733  003022  50DF               	movf	indf2,w,c
  2734  003024  EC73  F018         	call	_WriteUSART
  2735  003028  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2736  00302C  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2737  003030  4A3D               	infsnz	putsUSART@data,f,c
  2738  003032  2A3E               	incf	putsUSART@data+1,f,c
  2739  003034  50DF               	movf	indf2,w,c
  2740  003036  B4D8               	btfsc	status,2,c
  2741  003038  0012               	return	
  2742  00303A  D7ED               	goto	l442
  2743  00303C                     __end_of_putsUSART:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           indf2	equ	0xFDF
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function _WriteUSART *****************
  2760 ;; Defined at:
  2761 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  data            1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  data            1   24[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2775 ;;      Params:         0       0       0       0
  2776 ;;      Locals:         1       0       0       0
  2777 ;;      Temps:          0       0       0       0
  2778 ;;      Totals:         1       0       0       0
  2779 ;;Total ram usage:        1 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    4
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_putsUSART
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text10
  2790  0030E6                     __ptext10:
  2791                           	opt stack 0
  2792  0030E6                     _WriteUSART:
  2793                           	opt stack 24
  2794                           
  2795                           ;incstack = 0
  2796                           ;WriteUSART@data stored from wreg
  2797  0030E6  6E3C               	movwf	WriteUSART@data,c
  2798  0030E8  ACAC               	btfss	4012,6,c	;volatile
  2799  0030EA  D003               	goto	l3365
  2800  0030EC  90AC               	bcf	4012,0,c	;volatile
  2801  0030EE  B211               	btfsc	_USART_Status,1,c
  2802  0030F0  80AC               	bsf	4012,0,c	;volatile
  2803  0030F2                     l3365:
  2804  0030F2  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2805  0030F6  0012               	return		;funcret
  2806  0030F8                     __end_of_WriteUSART:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           prodh	equ	0xFF4
  2813                           prodl	equ	0xFF3
  2814                           intcon	equ	0xFF2
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           indf2	equ	0xFDF
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _LCD_Handler *****************
  2823 ;; Defined at:
  2824 ;;		line 247 in file "telecomando.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;		None               void
  2831 ;; Registers used:
  2832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2838 ;;      Params:         0       0       0       0
  2839 ;;      Locals:         0       0       0       0
  2840 ;;      Temps:          0       0       0       0
  2841 ;;      Totals:         0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:   10
  2845 ;; This function calls:
  2846 ;;		_LCD_clear
  2847 ;;		_LCD_goto_line
  2848 ;;		_LCD_write_message
  2849 ;;		_LCD_write_string
  2850 ;;		___lwdiv
  2851 ;;		___xxtofl
  2852 ;;		_sprintf
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text11
  2859  0024E0                     __ptext11:
  2860                           	opt stack 0
  2861  0024E0                     _LCD_Handler:
  2862                           	opt stack 20
  2863                           
  2864                           ;telecomando.c: 248: actual_speed_kmh = actual_speed / 278;
  2865                           
  2866                           ;incstack = 0
  2867  0024E0  0E01               	movlw	1
  2868  0024E2  6E3F               	movwf	___lwdiv@divisor+1,c
  2869  0024E4  0E16               	movlw	22
  2870  0024E6  6E3E               	movwf	___lwdiv@divisor,c
  2871  0024E8  C0D8  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2872  0024EC  C0D9  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2873  0024F0  ECB8  F016         	call	___lwdiv	;wreg free
  2874  0024F4  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2875  0024F8  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2876  0024FC  0100               	movlb	0	; () banked
  2877  0024FE  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2878  002500  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2879  002502  0E00               	movlw	0
  2880  002504  ECAC  F00E         	call	___xxtofl
  2881  002508  C070  F0D0         	movff	?___xxtofl,_actual_speed_kmh
  2882  00250C  C071  F0D1         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2883  002510  C072  F0D2         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2884  002514  C073  F0D3         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2885                           
  2886                           ;telecomando.c: 250: LCD_clear();
  2887  002518  EC80  F017         	call	_LCD_clear	;wreg free
  2888                           
  2889                           ;telecomando.c: 251: LCD_goto_line(1);
  2890  00251C  0E01               	movlw	1
  2891  00251E  EC81  F013         	call	_LCD_goto_line
  2892                           
  2893                           ;telecomando.c: 252: LCD_write_message("=== VEHICLE DATA ===");
  2894  002522  0EA5               	movlw	low STR_5
  2895  002524  0100               	movlb	0	; () banked
  2896  002526  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2897  002528  0E3F               	movlw	high STR_5
  2898  00252A  0100               	movlb	0	; () banked
  2899  00252C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2900  00252E  ECDF  F017         	call	_LCD_write_message	;wreg free
  2901                           
  2902                           ;telecomando.c: 254: LCD_goto_line(2);
  2903  002532  0E02               	movlw	2
  2904  002534  EC81  F013         	call	_LCD_goto_line
  2905                           
  2906                           ;telecomando.c: 255: LCD_write_message("Direction: ");
  2907  002538  0ECF               	movlw	low STR_6
  2908  00253A  0100               	movlb	0	; () banked
  2909  00253C  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2910  00253E  0E3F               	movlw	high STR_6
  2911  002540  0100               	movlb	0	; () banked
  2912  002542  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2913  002544  ECDF  F017         	call	_LCD_write_message	;wreg free
  2914                           
  2915                           ;telecomando.c: 256: if (switch_position != 0) {
  2916  002548  5019               	movf	_switch_position,w,c	;volatile
  2917  00254A  B4D8               	btfsc	status,2,c
  2918  00254C  D014               	goto	l5521
  2919                           
  2920                           ;telecomando.c: 257: if (dir == 1) {
  2921  00254E  A243               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2922  002550  D009               	goto	l5519
  2923                           
  2924                           ;telecomando.c: 258: LCD_write_message("FWD");
  2925  002552  0EF9               	movlw	low STR_7
  2926  002554  0100               	movlb	0	; () banked
  2927  002556  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2928  002558  0E3F               	movlw	high STR_7
  2929  00255A  0100               	movlb	0	; () banked
  2930  00255C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2931  00255E  ECDF  F017         	call	_LCD_write_message	;wreg free
  2932                           
  2933                           ;telecomando.c: 259: } else {
  2934  002562  D011               	goto	l5523
  2935  002564                     l5519:
  2936                           
  2937                           ;telecomando.c: 260: LCD_write_message("BKWD");
  2938  002564  0EEF               	movlw	low STR_8
  2939  002566  0100               	movlb	0	; () banked
  2940  002568  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2941  00256A  0E3F               	movlw	high STR_8
  2942  00256C  0100               	movlb	0	; () banked
  2943  00256E  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2944  002570  ECDF  F017         	call	_LCD_write_message	;wreg free
  2945                           
  2946                           ;telecomando.c: 261: }
  2947                           ;telecomando.c: 262: } else {
  2948  002574  D008               	goto	l5523
  2949  002576                     l5521:
  2950                           
  2951                           ;telecomando.c: 263: LCD_write_message("P");
  2952  002576  0EFD               	movlw	low STR_9
  2953  002578  0100               	movlb	0	; () banked
  2954  00257A  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2955  00257C  0E3F               	movlw	high STR_9
  2956  00257E  0100               	movlb	0	; () banked
  2957  002580  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2958  002582  ECDF  F017         	call	_LCD_write_message	;wreg free
  2959  002586                     l5523:
  2960                           
  2961                           ;telecomando.c: 264: }
  2962                           ;telecomando.c: 266: LCD_goto_line(3);
  2963  002586  0E03               	movlw	3
  2964  002588  EC81  F013         	call	_LCD_goto_line
  2965                           
  2966                           ;telecomando.c: 267: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2967  00258C  0E21               	movlw	low _str
  2968  00258E  0100               	movlb	0	; () banked
  2969  002590  6FC0               	movwf	sprintf@sp& (0+255),b
  2970  002592  0E01               	movlw	high _str
  2971  002594  0100               	movlb	0	; () banked
  2972  002596  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2973  002598  0EDB               	movlw	low STR_10
  2974  00259A  0100               	movlb	0	; () banked
  2975  00259C  6FC2               	movwf	sprintf@f& (0+255),b
  2976  00259E  0E3F               	movlw	high STR_10
  2977  0025A0  0100               	movlb	0	; () banked
  2978  0025A2  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2979  0025A4  C0D0  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2980  0025A8  C0D1  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2981  0025AC  C0D2  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2982  0025B0  C0D3  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2983  0025B4  EC62  F000         	call	_sprintf	;wreg free
  2984                           
  2985                           ;telecomando.c: 268: str[11] = '\0';
  2986  0025B8  0E00               	movlw	0
  2987  0025BA  0101               	movlb	1	; () banked
  2988  0025BC  6F2C               	movwf	(_str+11)& (0+255),b
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;telecomando.c: 269: LCD_write_string(str);
  2992  0025BE  0E21               	movlw	low _str
  2993  0025C0  0100               	movlb	0	; () banked
  2994  0025C2  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2995  0025C4  0E01               	movlw	high _str
  2996  0025C6  0100               	movlb	0	; () banked
  2997  0025C8  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2998  0025CA  EC1E  F018         	call	_LCD_write_string	;wreg free
  2999                           
  3000                           ;telecomando.c: 270: LCD_write_message("Km/h");
  3001  0025CE  0EF4               	movlw	low STR_11
  3002  0025D0  0100               	movlb	0	; () banked
  3003  0025D2  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  3004  0025D4  0E3F               	movlw	high STR_11
  3005  0025D6  0100               	movlb	0	; () banked
  3006  0025D8  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3007  0025DA  ECDF  F017         	call	_LCD_write_message	;wreg free
  3008                           
  3009                           ;telecomando.c: 272: LCD_goto_line(4);
  3010  0025DE  0E04               	movlw	4
  3011  0025E0  EC81  F013         	call	_LCD_goto_line
  3012                           
  3013                           ;telecomando.c: 273: LCD_write_message("====================");
  3014  0025E4  0EBA               	movlw	low STR_1
  3015  0025E6  0100               	movlb	0	; () banked
  3016  0025E8  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  3017  0025EA  0E3F               	movlw	high STR_1
  3018  0025EC  0100               	movlb	0	; () banked
  3019  0025EE  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3020  0025F0  ECDF  F017         	call	_LCD_write_message	;wreg free
  3021  0025F4  0012               	return		;funcret
  3022  0025F6                     __end_of_LCD_Handler:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           intcon	equ	0xFF2
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           indf2	equ	0xFDF
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _sprintf *****************
  3039 ;; Defined at:
  3040 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  3043 ;;		 -> str(12), 
  3044 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  3045 ;;		 -> STR_10(12), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  3048 ;;  tmpval          4   14[BANK1 ] struct .
  3049 ;;  val             4    8[BANK1 ] unsigned long 
  3050 ;;  cp              3    0        PTR const unsigned char 
  3051 ;;  prec            2   18[BANK1 ] int 
  3052 ;;  exp             2   12[BANK1 ] int 
  3053 ;;  flag            2    6[BANK1 ] unsigned short 
  3054 ;;  ap              2    4[BANK1 ] PTR void [1]
  3055 ;;		 -> ?_sprintf(2), 
  3056 ;;  len             2    0        unsigned int 
  3057 ;;  width           2    0        int 
  3058 ;;  c               1   24[BANK1 ] char 
  3059 ;;  d               1    0        unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2   96[BANK0 ] int 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3069 ;;      Params:         0       8       0       0
  3070 ;;      Locals:         0       0      25       0
  3071 ;;      Temps:          0       2       0       0
  3072 ;;      Totals:         0      10      25       0
  3073 ;;Total ram usage:       35 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    6
  3076 ;; This function calls:
  3077 ;;		___awdiv
  3078 ;;		___fladd
  3079 ;;		___flge
  3080 ;;		___flmul
  3081 ;;		___flneg
  3082 ;;		___flsub
  3083 ;;		___fltol
  3084 ;;		___lldiv
  3085 ;;		___llmod
  3086 ;;		___wmul
  3087 ;;		___xxtofl
  3088 ;;		__div_to_l_
  3089 ;;		__tdiv_to_l_
  3090 ;;		_fround
  3091 ;;		_isdigit
  3092 ;;		_scale
  3093 ;; This function is called by:
  3094 ;;		_LCD_Handler
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text12
  3099  0000C4                     __ptext12:
  3100                           	opt stack 0
  3101  0000C4                     _sprintf:
  3102                           	opt stack 23
  3103                           
  3104                           ;doprnt.c: 494: va_list ap;
  3105                           ;doprnt.c: 499: signed char c;
  3106                           ;doprnt.c: 501: int width;
  3107                           ;doprnt.c: 504: int prec;
  3108                           ;doprnt.c: 508: unsigned short flag;
  3109                           ;doprnt.c: 515: char d;
  3110                           ;doprnt.c: 516: double fval;
  3111                           ;doprnt.c: 517: int exp;
  3112                           ;doprnt.c: 523: union {
  3113                           ;doprnt.c: 524: unsigned long vd;
  3114                           ;doprnt.c: 525: double integ;
  3115                           ;doprnt.c: 526: } tmpval;
  3116                           ;doprnt.c: 528: unsigned long val;
  3117                           ;doprnt.c: 529: unsigned len;
  3118                           ;doprnt.c: 530: const char * cp;
  3119                           ;doprnt.c: 533: *ap = __va_start();
  3120                           
  3121                           ;incstack = 0
  3122  0000C4  0EC4               	movlw	low (?_sprintf+4)
  3123  0000C6  0101               	movlb	1	; () banked
  3124  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3125  0000CA  0E00               	movlw	high (?_sprintf+4)
  3126  0000CC  0101               	movlb	1	; () banked
  3127  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3128                           
  3129                           ;doprnt.c: 536: while(c = *f++) {
  3130  0000D0  EF7A  F004         	goto	l5399
  3131  0000D4                     l5201:
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;doprnt.c: 538: if(c != '%')
  3135  0000D4  0E25               	movlw	37
  3136  0000D6  0101               	movlb	1	; () banked
  3137  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3138  0000DA  B4D8               	btfsc	status,2,c
  3139  0000DC  D008               	goto	l5207
  3140                           
  3141                           ; BSR set to: 1
  3142                           ;doprnt.c: 540: {
  3143                           ;doprnt.c: 541: ((*sp++ = (c)));
  3144  0000DE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3145  0000E2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3146  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3147  0000EA  EF77  F004         	goto	l5397
  3148  0000EE                     l5207:
  3149                           
  3150                           ;doprnt.c: 543: }
  3151                           ;doprnt.c: 548: flag = 0;
  3152  0000EE  0E00               	movlw	0
  3153  0000F0  0101               	movlb	1	; () banked
  3154  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3155  0000F4  0E00               	movlw	0
  3156  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;doprnt.c: 611: if(*f == '.') {
  3160  0000F8  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3161  0000FC  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3162  000100                     	if	0	;tblptru may be non-zero
  3163  000100                     	endif
  3164  000100                     	if	0	;tblptru may be non-zero
  3165  000100                     	endif
  3166  000100  0008               	tblrd		*
  3167  000102  50F5               	movf	tablat,w,c
  3168  000104  0A2E               	xorlw	46
  3169  000106  A4D8               	btfss	status,2,c
  3170  000108  D034               	goto	l5221
  3171                           
  3172                           ; BSR set to: 1
  3173                           ;doprnt.c: 612: flag |= 0x4000;
  3174  00010A  0101               	movlb	1	; () banked
  3175  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3176                           
  3177                           ;doprnt.c: 613: f++;
  3178  00010E  0100               	movlb	0	; () banked
  3179  000110  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3180  000112  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;doprnt.c: 620: {
  3184                           ;doprnt.c: 621: prec = 0;
  3185  000114  0E00               	movlw	0
  3186  000116  0101               	movlb	1	; () banked
  3187  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3188  00011A  0E00               	movlw	0
  3189  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3190                           
  3191                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3192  00011E  D01E               	goto	l5219
  3193  000120                     l5215:
  3194                           
  3195                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3196  000120  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  3197  000124  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  3198  000128  0E00               	movlw	0
  3199  00012A  6E3F               	movwf	___wmul@multiplicand+1,c
  3200  00012C  0E0A               	movlw	10
  3201  00012E  6E3E               	movwf	___wmul@multiplicand,c
  3202  000130  EC31  F018         	call	___wmul	;wreg free
  3203  000134  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3204  000138  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3205  00013C                     	if	0	;tblptru may be non-zero
  3206  00013C                     	endif
  3207  00013C                     	if	0	;tblptru may be non-zero
  3208  00013C                     	endif
  3209  00013C  0008               	tblrd		*
  3210  00013E  50F5               	movf	tablat,w,c
  3211  000140  263C               	addwf	?___wmul,f,c
  3212  000142  0E00               	movlw	0
  3213  000144  223D               	addwfc	?___wmul+1,f,c
  3214  000146  0ED0               	movlw	208
  3215  000148  243C               	addwf	?___wmul,w,c
  3216  00014A  0101               	movlb	1	; () banked
  3217  00014C  6F12               	movwf	sprintf@prec& (0+255),b
  3218  00014E  0EFF               	movlw	255
  3219  000150  203D               	addwfc	?___wmul+1,w,c
  3220  000152  0101               	movlb	1	; () banked
  3221  000154  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3222                           
  3223                           ; BSR set to: 1
  3224  000156  0100               	movlb	0	; () banked
  3225  000158  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3226  00015A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3227  00015C                     l5219:
  3228  00015C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3229  000160  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3230  000164                     	if	0	;tblptru may be non-zero
  3231  000164                     	endif
  3232  000164                     	if	0	;tblptru may be non-zero
  3233  000164                     	endif
  3234  000164  0008               	tblrd		*
  3235  000166  50F5               	movf	tablat,w,c
  3236  000168  EC55  F018         	call	_isdigit
  3237  00016C  A0D8               	btfss	status,0,c
  3238  00016E  D00C               	goto	l5229
  3239  000170  D7D7               	goto	l5215
  3240  000172                     l5221:
  3241                           
  3242                           ;doprnt.c: 626: prec = 0;
  3243  000172  0E00               	movlw	0
  3244  000174  0101               	movlb	1	; () banked
  3245  000176  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3246  000178  0E00               	movlw	0
  3247  00017A  6F12               	movwf	sprintf@prec& (0+255),b
  3248                           
  3249                           ; BSR set to: 1
  3250                           ;doprnt.c: 628: flag |= 0x1000;
  3251  00017C  0101               	movlb	1	; () banked
  3252  00017E  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;doprnt.c: 630: }
  3256                           ;doprnt.c: 635: switch(c = *f++) {
  3257  000180  D003               	goto	l5229
  3258  000182                     l5225:
  3259                           
  3260                           ; BSR set to: 1
  3261                           ;doprnt.c: 663: flag |= 0x400;
  3262  000182  0101               	movlb	1	; () banked
  3263  000184  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3264                           
  3265                           ;doprnt.c: 664: break;
  3266  000186  D013               	goto	l5231
  3267  000188                     l5229:
  3268  000188  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3269  00018C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3270  000190  0100               	movlb	0	; () banked
  3271  000192  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3272  000194  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3273  000196                     	if	0	;tblptru may be non-zero
  3274  000196                     	endif
  3275  000196                     	if	0	;tblptru may be non-zero
  3276  000196                     	endif
  3277  000196  0008               	tblrd		*
  3278  000198  CFF5 F118          	movff	tablat,sprintf@c
  3279  00019C  0101               	movlb	1	; () banked
  3280  00019E  5118               	movf	sprintf@c& (0+255),w,b
  3281                           
  3282                           ; Switch size 1, requested type "space"
  3283                           ; Number of cases is 2, Range of values is 0 to 102
  3284                           ; switch strategies available:
  3285                           ; Name         Instructions Cycles
  3286                           ; simple_byte            7     4 (average)
  3287                           ;	Chosen strategy is simple_byte
  3288  0001A0  0A00               	xorlw	0	; case 0
  3289  0001A2  B4D8               	btfsc	status,2,c
  3290  0001A4  D3B6               	goto	l5401
  3291  0001A6  0A66               	xorlw	102	; case 102
  3292  0001A8  B4D8               	btfsc	status,2,c
  3293  0001AA  D7EB               	goto	l5225
  3294  0001AC  D3A3               	goto	l5399
  3295  0001AE                     l5231:
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;doprnt.c: 825: if(flag & (0x700)) {
  3299  0001AE  0E07               	movlw	7
  3300  0001B0  0101               	movlb	1	; () banked
  3301  0001B2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3302  0001B4  B4D8               	btfsc	status,2,c
  3303  0001B6  D346               	goto	l5379
  3304                           
  3305                           ; BSR set to: 1
  3306                           ;doprnt.c: 827: if(flag & 0x1000)
  3307  0001B8  0101               	movlb	1	; () banked
  3308  0001BA  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3309  0001BC  D005               	goto	l5237
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;doprnt.c: 829: prec = 6;
  3313  0001BE  0E00               	movlw	0
  3314  0001C0  0101               	movlb	1	; () banked
  3315  0001C2  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3316  0001C4  0E06               	movlw	6
  3317  0001C6  6F12               	movwf	sprintf@prec& (0+255),b
  3318  0001C8                     l5237:
  3319                           
  3320                           ; BSR set to: 1
  3321                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3322  0001C8  C104  FFD9         	movff	sprintf@ap,fsr2l
  3323  0001CC  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3324  0001D0  CFDE F114          	movff	postinc2,sprintf@fval
  3325  0001D4  CFDE F115          	movff	postinc2,sprintf@fval+1
  3326  0001D8  CFDE F116          	movff	postinc2,sprintf@fval+2
  3327  0001DC  CFDE F117          	movff	postinc2,sprintf@fval+3
  3328                           
  3329                           ; BSR set to: 1
  3330  0001E0  0E04               	movlw	4
  3331  0001E2  0101               	movlb	1	; () banked
  3332  0001E4  2704               	addwf	sprintf@ap& (0+255),f,b
  3333  0001E6  0E00               	movlw	0
  3334  0001E8  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;doprnt.c: 831: if(fval < 0.0) {
  3338  0001EA  0101               	movlb	1	; () banked
  3339  0001EC  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3340  0001EE  D015               	goto	l5247
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;doprnt.c: 832: fval = -fval;
  3344  0001F0  C114  F03C         	movff	sprintf@fval,___flneg@f1
  3345  0001F4  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  3346  0001F8  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  3347  0001FC  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  3348  000200  ECB2  F017         	call	___flneg	;wreg free
  3349  000204  C03C  F114         	movff	?___flneg,sprintf@fval
  3350  000208  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  3351  00020C  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  3352  000210  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  3353                           
  3354                           ;doprnt.c: 833: flag |= 0x03;
  3355  000214  0E03               	movlw	3
  3356  000216  0101               	movlb	1	; () banked
  3357  000218  1306               	iorwf	sprintf@flag& (0+255),f,b
  3358  00021A                     l5247:
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;doprnt.c: 834: }
  3362                           ;doprnt.c: 835: exp = 0;
  3363  00021A  0E00               	movlw	0
  3364  00021C  0101               	movlb	1	; () banked
  3365  00021E  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3366  000220  0E00               	movlw	0
  3367  000222  6F0C               	movwf	sprintf@exp& (0+255),b
  3368                           
  3369                           ; BSR set to: 1
  3370                           ;doprnt.c: 836: if( fval!=0) {
  3371  000224  0101               	movlb	1	; () banked
  3372  000226  5114               	movf	sprintf@fval& (0+255),w,b
  3373  000228  0101               	movlb	1	; () banked
  3374  00022A  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3375  00022C  0101               	movlb	1	; () banked
  3376  00022E  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3377  000230  0101               	movlb	1	; () banked
  3378  000232  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3379  000234  B4D8               	btfsc	status,2,c
  3380  000236  D08D               	goto	l5275
  3381                           
  3382                           ; BSR set to: 1
  3383                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3384  000238  0101               	movlb	1	; () banked
  3385  00023A  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3386  00023C  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3387  00023E  0F82               	addlw	130
  3388  000240  0101               	movlb	1	; () banked
  3389  000242  6F0C               	movwf	sprintf@exp& (0+255),b
  3390  000244  0101               	movlb	1	; () banked
  3391  000246  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3392  000248  0EFF               	movlw	255
  3393  00024A  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3394                           
  3395                           ; BSR set to: 1
  3396                           ;doprnt.c: 838: exp--;
  3397  00024C  0101               	movlb	1	; () banked
  3398  00024E  070C               	decf	sprintf@exp& (0+255),f,b
  3399  000250  A0D8               	btfss	status,0,c
  3400  000252  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3401                           
  3402                           ; BSR set to: 1
  3403                           ;doprnt.c: 839: exp *= 3;
  3404  000254  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  3405  000258  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3406  00025C  0E00               	movlw	0
  3407  00025E  6E3F               	movwf	___wmul@multiplicand+1,c
  3408  000260  0E03               	movlw	3
  3409  000262  6E3E               	movwf	___wmul@multiplicand,c
  3410  000264  EC31  F018         	call	___wmul	;wreg free
  3411  000268  C03C  F10C         	movff	?___wmul,sprintf@exp
  3412  00026C  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  3413                           
  3414                           ;doprnt.c: 840: exp /= 10;
  3415  000270  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  3416  000274  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3417  000278  0E00               	movlw	0
  3418  00027A  0100               	movlb	0	; () banked
  3419  00027C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3420  00027E  0E0A               	movlw	10
  3421  000280  6F72               	movwf	___awdiv@divisor& (0+255),b
  3422  000282  ECCD  F014         	call	___awdiv	;wreg free
  3423  000286  C070  F10C         	movff	?___awdiv,sprintf@exp
  3424  00028A  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3425                           
  3426                           ;doprnt.c: 841: if(exp < 0)
  3427  00028E  0101               	movlb	1	; () banked
  3428  000290  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3429  000292  D004               	goto	l5263
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;doprnt.c: 842: exp--;
  3433  000294  0101               	movlb	1	; () banked
  3434  000296  070C               	decf	sprintf@exp& (0+255),f,b
  3435  000298  A0D8               	btfss	status,0,c
  3436  00029A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3437  00029C                     l5263:
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3441  00029C  0101               	movlb	1	; () banked
  3442  00029E  510C               	movf	sprintf@exp& (0+255),w,b
  3443  0002A0  0800               	sublw	0
  3444  0002A2  EC37  F009         	call	_scale
  3445  0002A6  C097  F10E         	movff	?_scale,sprintf@tmpval
  3446  0002AA  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3447  0002AE  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3448  0002B2  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3449                           
  3450                           ;doprnt.c: 847: tmpval.integ *= fval;
  3451  0002B6  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  3452  0002BA  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3453  0002BE  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3454  0002C2  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3455  0002C6  C114  F082         	movff	sprintf@fval,___flmul@a
  3456  0002CA  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3457  0002CE  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3458  0002D2  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3459  0002D6  ECE4  F006         	call	___flmul	;wreg free
  3460  0002DA  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  3461  0002DE  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3462  0002E2  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3463  0002E6  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3464                           
  3465                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3466  0002EA  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3467  0002EE  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3468  0002F2  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3469  0002F6  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3470  0002FA  0E00               	movlw	0
  3471  0002FC  0100               	movlb	0	; () banked
  3472  0002FE  6F74               	movwf	___flge@ff2& (0+255),b
  3473  000300  0E00               	movlw	0
  3474  000302  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3475  000304  0E80               	movlw	128
  3476  000306  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3477  000308  0E3F               	movlw	63
  3478  00030A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3479  00030C  ECC2  F011         	call	___flge	;wreg free
  3480  000310  0100               	movlb	0	; () banked
  3481  000312  B0D8               	btfsc	status,0,c
  3482  000314  D005               	goto	l5271
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;doprnt.c: 849: exp--;
  3486  000316  0101               	movlb	1	; () banked
  3487  000318  070C               	decf	sprintf@exp& (0+255),f,b
  3488  00031A  A0D8               	btfss	status,0,c
  3489  00031C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3490  00031E  D019               	goto	l5275
  3491  000320                     l5271:
  3492                           
  3493                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3494  000320  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3495  000324  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3496  000328  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3497  00032C  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3498  000330  0E00               	movlw	0
  3499  000332  0100               	movlb	0	; () banked
  3500  000334  6F74               	movwf	___flge@ff2& (0+255),b
  3501  000336  0E00               	movlw	0
  3502  000338  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3503  00033A  0E20               	movlw	32
  3504  00033C  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3505  00033E  0E41               	movlw	65
  3506  000340  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3507  000342  ECC2  F011         	call	___flge	;wreg free
  3508  000346  0100               	movlb	0	; () banked
  3509  000348  A0D8               	btfss	status,0,c
  3510  00034A  D003               	goto	l5275
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;doprnt.c: 851: exp++;
  3514  00034C  0101               	movlb	1	; () banked
  3515  00034E  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3516  000350  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3517  000352                     l5275:
  3518                           
  3519                           ;doprnt.c: 852: }
  3520                           ;doprnt.c: 1112: if(prec <= 12)
  3521  000352  0101               	movlb	1	; () banked
  3522  000354  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3523  000356  D008               	goto	l5277
  3524  000358  0101               	movlb	1	; () banked
  3525  00035A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3526  00035C  E123               	bnz	l5279
  3527  00035E  0E0D               	movlw	13
  3528  000360  0101               	movlb	1	; () banked
  3529  000362  5D12               	subwf	sprintf@prec& (0+255),w,b
  3530  000364  B0D8               	btfsc	status,0,c
  3531  000366  D01E               	goto	l5279
  3532  000368                     l5277:
  3533                           
  3534                           ; BSR set to: 1
  3535                           ;doprnt.c: 1113: fval += fround(prec);
  3536  000368  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3537  00036C  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3538  000370  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3539  000374  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3540  000378  0101               	movlb	1	; () banked
  3541  00037A  5112               	movf	sprintf@prec& (0+255),w,b
  3542  00037C  EC51  F00D         	call	_fround
  3543  000380  C097  F0A8         	movff	?_fround,___fladd@a
  3544  000384  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3545  000388  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3546  00038C  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3547  000390  EC90  F004         	call	___fladd	;wreg free
  3548  000394  C0A4  F114         	movff	?___fladd,sprintf@fval
  3549  000398  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3550  00039C  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3551  0003A0  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3552  0003A4                     l5279:
  3553                           
  3554                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3555  0003A4  0101               	movlb	1	; () banked
  3556  0003A6  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3557  0003A8  D008               	goto	l5281
  3558  0003AA  0101               	movlb	1	; () banked
  3559  0003AC  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3560  0003AE  E12E               	bnz	l5287
  3561  0003B0  0E0A               	movlw	10
  3562  0003B2  0101               	movlb	1	; () banked
  3563  0003B4  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3564  0003B6  B0D8               	btfsc	status,0,c
  3565  0003B8  D029               	goto	l5287
  3566  0003BA                     l5281:
  3567                           
  3568                           ; BSR set to: 1
  3569  0003BA  0101               	movlb	1	; () banked
  3570  0003BC  5114               	movf	sprintf@fval& (0+255),w,b
  3571  0003BE  0101               	movlb	1	; () banked
  3572  0003C0  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3573  0003C2  0101               	movlb	1	; () banked
  3574  0003C4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3575  0003C6  0101               	movlb	1	; () banked
  3576  0003C8  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3577  0003CA  B4D8               	btfsc	status,2,c
  3578  0003CC  D06D               	goto	l5301
  3579                           
  3580                           ; BSR set to: 1
  3581  0003CE  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3582  0003D2  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3583  0003D6  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3584  0003DA  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3585  0003DE  ECFB  F012         	call	___fltol	;wreg free
  3586  0003E2  0100               	movlb	0	; () banked
  3587  0003E4  51A0               	movf	?___fltol& (0+255),w,b
  3588  0003E6  0100               	movlb	0	; () banked
  3589  0003E8  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3590  0003EA  0100               	movlb	0	; () banked
  3591  0003EC  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3592  0003EE  0100               	movlb	0	; () banked
  3593  0003F0  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3594  0003F2  A4D8               	btfss	status,2,c
  3595  0003F4  D059               	goto	l5301
  3596                           
  3597                           ; BSR set to: 0
  3598  0003F6  0101               	movlb	1	; () banked
  3599  0003F8  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3600  0003FA  D056               	goto	l5301
  3601  0003FC  0101               	movlb	1	; () banked
  3602  0003FE  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3603  000400  E105               	bnz	l5287
  3604  000402  0E02               	movlw	2
  3605  000404  0101               	movlb	1	; () banked
  3606  000406  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3607  000408  A0D8               	btfss	status,0,c
  3608  00040A  D04E               	goto	l5301
  3609  00040C                     l5287:
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3613  00040C  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3614  000410  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3615  000414  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3616  000418  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3617  00041C  0E5F               	movlw	95
  3618  00041E  0100               	movlb	0	; () banked
  3619  000420  6F74               	movwf	___flge@ff2& (0+255),b
  3620  000422  0E70               	movlw	112
  3621  000424  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3622  000426  0E89               	movlw	137
  3623  000428  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3624  00042A  0E40               	movlw	64
  3625  00042C  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3626  00042E  ECC2  F011         	call	___flge	;wreg free
  3627  000432  0100               	movlb	0	; () banked
  3628  000434  B0D8               	btfsc	status,0,c
  3629  000436  D003               	goto	l5291
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3633  000438  0101               	movlb	1	; () banked
  3634  00043A  0EF7               	movlw	247
  3635  00043C  D002               	goto	L2
  3636  00043E                     l5291:
  3637                           
  3638                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3639  00043E  0101               	movlb	1	; () banked
  3640  000440  0EF8               	movlw	248
  3641  000442                     L2:
  3642  000442  270C               	addwf	sprintf@exp& (0+255),f,b
  3643  000444  0EFF               	movlw	255
  3644  000446  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3645                           
  3646                           ; BSR set to: 1
  3647                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3648                           
  3649                           ; BSR set to: 1
  3650  000448  0101               	movlb	1	; () banked
  3651  00044A  510C               	movf	sprintf@exp& (0+255),w,b
  3652  00044C  EC37  F009         	call	_scale
  3653  000450  C097  F10E         	movff	?_scale,sprintf@tmpval
  3654  000454  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3655  000458  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3656  00045C  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3657  000460  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3658  000464  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3659  000468  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3660  00046C  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3661  000470  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3662  000474  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3663  000478  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3664  00047C  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3665  000480  EC13  F011         	call	__div_to_l_	;wreg free
  3666  000484  C070  F108         	movff	?__div_to_l_,sprintf@val
  3667  000488  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3668  00048C  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3669  000490  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3670                           
  3671                           ;doprnt.c: 1129: fval = 0.0;
  3672  000494  0E00               	movlw	0
  3673  000496  0101               	movlb	1	; () banked
  3674  000498  6F14               	movwf	sprintf@fval& (0+255),b
  3675  00049A  0E00               	movlw	0
  3676  00049C  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3677  00049E  0E00               	movlw	0
  3678  0004A0  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3679  0004A2  0E00               	movlw	0
  3680  0004A4  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3681                           
  3682                           ;doprnt.c: 1130: } else {
  3683  0004A6  D03C               	goto	l5305
  3684  0004A8                     l5301:
  3685                           
  3686                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3687  0004A8  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3688  0004AC  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3689  0004B0  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3690  0004B4  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3691  0004B8  ECFB  F012         	call	___fltol	;wreg free
  3692  0004BC  C0A0  F108         	movff	?___fltol,sprintf@val
  3693  0004C0  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3694  0004C4  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3695  0004C8  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3696                           
  3697                           ;doprnt.c: 1132: fval -= (double)val;
  3698  0004CC  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3699  0004D0  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3700  0004D4  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3701  0004D8  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3702  0004DC  C108  F070         	movff	sprintf@val,___xxtofl@val
  3703  0004E0  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3704  0004E4  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3705  0004E8  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3706  0004EC  0E00               	movlw	0
  3707  0004EE  ECAC  F00E         	call	___xxtofl
  3708  0004F2  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3709  0004F6  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3710  0004FA  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3711  0004FE  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3712  000502  ECE1  F016         	call	___flsub	;wreg free
  3713  000506  C0B8  F114         	movff	?___flsub,sprintf@fval
  3714  00050A  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3715  00050E  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3716  000512  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3717                           
  3718                           ;doprnt.c: 1133: exp = 0;
  3719  000516  0E00               	movlw	0
  3720  000518  0101               	movlb	1	; () banked
  3721  00051A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3722  00051C  0E00               	movlw	0
  3723  00051E  6F0C               	movwf	sprintf@exp& (0+255),b
  3724  000520                     l5305:
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;doprnt.c: 1134: }
  3728                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3729  000520  0E01               	movlw	1
  3730  000522  0101               	movlb	1	; () banked
  3731  000524  6F18               	movwf	sprintf@c& (0+255),b
  3732  000526                     l5307:
  3733                           
  3734                           ; BSR set to: 1
  3735  000526  0E0A               	movlw	10
  3736  000528  0101               	movlb	1	; () banked
  3737  00052A  1918               	xorwf	sprintf@c& (0+255),w,b
  3738  00052C  B4D8               	btfsc	status,2,c
  3739  00052E  D01E               	goto	l5319
  3740                           
  3741                           ; BSR set to: 1
  3742                           ;doprnt.c: 1137: if(val < dpowers[c])
  3743                           
  3744                           ; BSR set to: 1
  3745                           
  3746                           ; BSR set to: 1
  3747  000530  0101               	movlb	1	; () banked
  3748  000532  5118               	movf	sprintf@c& (0+255),w,b
  3749  000534  0D04               	mullw	4
  3750  000536  0E53               	movlw	low _dpowers
  3751  000538  24F3               	addwf	prodl,w,c
  3752  00053A  6EF6               	movwf	tblptrl,c
  3753  00053C  0E3F               	movlw	high _dpowers
  3754  00053E  20F4               	addwfc	prodh,w,c
  3755  000540  6EF7               	movwf	tblptrh,c
  3756  000542                     	if	0	;There are less than 3 active tblptr bytes
  3757  000542                     	endif
  3758  000542  0009               	tblrd		*+
  3759  000544  50F5               	movf	tablat,w,c
  3760  000546  0101               	movlb	1	; () banked
  3761  000548  5D08               	subwf	sprintf@val& (0+255),w,b
  3762  00054A  0009               	tblrd		*+
  3763  00054C  50F5               	movf	tablat,w,c
  3764  00054E  0101               	movlb	1	; () banked
  3765  000550  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3766  000552  0009               	tblrd		*+
  3767  000554  50F5               	movf	tablat,w,c
  3768  000556  0101               	movlb	1	; () banked
  3769  000558  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3770  00055A  0009               	tblrd		*+
  3771  00055C  50F5               	movf	tablat,w,c
  3772  00055E  0101               	movlb	1	; () banked
  3773  000560  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3774  000562  A0D8               	btfss	status,0,c
  3775  000564  D003               	goto	l5319
  3776                           
  3777                           ; BSR set to: 1
  3778                           
  3779                           ; BSR set to: 1
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;doprnt.c: 1138: break;
  3783  000566  0101               	movlb	1	; () banked
  3784  000568  2B18               	incf	sprintf@c& (0+255),f,b
  3785  00056A  D7DD               	goto	l5307
  3786  00056C                     l5319:
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;doprnt.c: 1175: {
  3790                           ;doprnt.c: 1188: if(flag & 0x03)
  3791  00056C  0E03               	movlw	3
  3792  00056E  0101               	movlb	1	; () banked
  3793  000570  1506               	andwf	sprintf@flag& (0+255),w,b
  3794  000572  0100               	movlb	0	; () banked
  3795  000574  6FC8               	movwf	??_sprintf& (0+255),b
  3796  000576  0E00               	movlw	0
  3797  000578  0101               	movlb	1	; () banked
  3798  00057A  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3799  00057C  0100               	movlb	0	; () banked
  3800  00057E  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3801  000580  0100               	movlb	0	; () banked
  3802  000582  51C8               	movf	??_sprintf& (0+255),w,b
  3803  000584  0100               	movlb	0	; () banked
  3804  000586  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3805  000588  B4D8               	btfsc	status,2,c
  3806  00058A  D055               	goto	l5333
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3810  00058C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3811  000590  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3812  000594  0E2D               	movlw	45
  3813  000596  D04D               	goto	L3
  3814  000598                     l5323:
  3815                           
  3816                           ; BSR set to: 0
  3817  000598  0100               	movlb	0	; () banked
  3818  00059A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3819  00059C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;doprnt.c: 1195: }
  3823                           ;doprnt.c: 1196: while(c--) {
  3824  00059E  D04B               	goto	l5333
  3825  0005A0                     l5325:
  3826                           
  3827                           ;doprnt.c: 1200: {
  3828                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3829  0005A0  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3830  0005A4  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3831  0005A8  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3832  0005AC  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3833  0005B0  0101               	movlb	1	; () banked
  3834  0005B2  5118               	movf	sprintf@c& (0+255),w,b
  3835  0005B4  0D04               	mullw	4
  3836  0005B6  0E53               	movlw	low _dpowers
  3837  0005B8  24F3               	addwf	prodl,w,c
  3838  0005BA  6EF6               	movwf	tblptrl,c
  3839  0005BC  0E3F               	movlw	high _dpowers
  3840  0005BE  20F4               	addwfc	prodh,w,c
  3841  0005C0  6EF7               	movwf	tblptrh,c
  3842  0005C2                     	if	0	;There are less than 3 active tblptr bytes
  3843  0005C2                     	endif
  3844  0005C2  0009               	tblrd		*+
  3845  0005C4  CFF5 F074          	movff	tablat,___lldiv@divisor
  3846  0005C8  0009               	tblrd		*+
  3847  0005CA  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3848  0005CE  0009               	tblrd		*+
  3849  0005D0  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3850  0005D4  000A               	tblrd		*-
  3851  0005D6  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3852  0005DA  EC2C  F015         	call	___lldiv	;wreg free
  3853  0005DE  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3854  0005E2  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3855  0005E6  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3856  0005EA  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3857                           
  3858                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3859  0005EE  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3860  0005F2  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3861  0005F6  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3862  0005FA  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3863  0005FE  0E0A               	movlw	10
  3864  000600  0100               	movlb	0	; () banked
  3865  000602  6F74               	movwf	___llmod@divisor& (0+255),b
  3866  000604  0E00               	movlw	0
  3867  000606  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3868  000608  0E00               	movlw	0
  3869  00060A  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3870  00060C  0E00               	movlw	0
  3871  00060E  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3872  000610  ECCF  F015         	call	___llmod	;wreg free
  3873  000614  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3874  000618  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3875  00061C  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3876  000620  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3877                           
  3878                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3879  000624  0101               	movlb	1	; () banked
  3880  000626  510E               	movf	sprintf@tmpval& (0+255),w,b
  3881  000628  0F30               	addlw	48
  3882  00062A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3883  00062E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3884  000632                     L3:
  3885  000632  6EDF               	movwf	indf2,c
  3886  000634  D7B1               	goto	l5323
  3887  000636                     l5333:
  3888                           
  3889                           ; BSR set to: 0
  3890  000636  0101               	movlb	1	; () banked
  3891  000638  0718               	decf	sprintf@c& (0+255),f,b
  3892  00063A  0101               	movlb	1	; () banked
  3893  00063C  2918               	incf	sprintf@c& (0+255),w,b
  3894  00063E  B4D8               	btfsc	status,2,c
  3895  000640  D00E               	goto	l5341
  3896  000642  D7AE               	goto	l5325
  3897  000644                     l5335:
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3901  000644  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3902  000648  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3903  00064C  0E30               	movlw	48
  3904  00064E  6EDF               	movwf	indf2,c
  3905                           
  3906                           ; BSR set to: 1
  3907  000650  0100               	movlb	0	; () banked
  3908  000652  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3909  000654  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;doprnt.c: 1209: exp--;
  3913  000656  0101               	movlb	1	; () banked
  3914  000658  070C               	decf	sprintf@exp& (0+255),f,b
  3915  00065A  A0D8               	btfss	status,0,c
  3916  00065C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3917  00065E                     l5341:
  3918                           
  3919                           ; BSR set to: 1
  3920  00065E  0101               	movlb	1	; () banked
  3921  000660  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3922  000662  D007               	goto	l5343
  3923  000664  0101               	movlb	1	; () banked
  3924  000666  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3925  000668  E1ED               	bnz	l5335
  3926  00066A  0101               	movlb	1	; () banked
  3927  00066C  050C               	decf	sprintf@exp& (0+255),w,b
  3928  00066E  B0D8               	btfsc	status,0,c
  3929  000670  D7E9               	goto	l5335
  3930  000672                     l5343:
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;doprnt.c: 1210: }
  3934                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3935  000672  0101               	movlb	1	; () banked
  3936  000674  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3937  000676  D00C               	goto	l373
  3938  000678  0101               	movlb	1	; () banked
  3939  00067A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3940  00067C  E105               	bnz	u6210
  3941  00067E  0E09               	movlw	9
  3942  000680  0101               	movlb	1	; () banked
  3943  000682  5D12               	subwf	sprintf@prec& (0+255),w,b
  3944  000684  A0D8               	btfss	status,0,c
  3945  000686  D004               	goto	l373
  3946  000688                     u6210:
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3950  000688  0E08               	movlw	8
  3951  00068A  0101               	movlb	1	; () banked
  3952  00068C  6F18               	movwf	sprintf@c& (0+255),b
  3953  00068E  D002               	goto	l5347
  3954  000690                     l373:
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;doprnt.c: 1213: else
  3958                           ;doprnt.c: 1214: c = prec;
  3959  000690  C112  F118         	movff	sprintf@prec,sprintf@c
  3960  000694                     l5347:
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;doprnt.c: 1215: prec -= c;
  3964  000694  0101               	movlb	1	; () banked
  3965  000696  5118               	movf	sprintf@c& (0+255),w,b
  3966  000698  0101               	movlb	1	; () banked
  3967  00069A  5F12               	subwf	sprintf@prec& (0+255),f,b
  3968  00069C  0E00               	movlw	0
  3969  00069E  0101               	movlb	1	; () banked
  3970  0006A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3971  0006A2  0EFF               	movlw	255
  3972  0006A4  0101               	movlb	1	; () banked
  3973  0006A6  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;doprnt.c: 1219: if(c)
  3977  0006A8  0101               	movlb	1	; () banked
  3978  0006AA  5118               	movf	sprintf@c& (0+255),w,b
  3979  0006AC  0101               	movlb	1	; () banked
  3980  0006AE  B4D8               	btfsc	status,2,c
  3981  0006B0  D009               	goto	l5355
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3985  0006B2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3986  0006B6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3987  0006BA  0E2E               	movlw	46
  3988  0006BC  6EDF               	movwf	indf2,c
  3989                           
  3990                           ; BSR set to: 1
  3991  0006BE  0100               	movlb	0	; () banked
  3992  0006C0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3993  0006C2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3994  0006C4                     l5355:
  3995                           
  3996                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3997  0006C4  0101               	movlb	1	; () banked
  3998  0006C6  5118               	movf	sprintf@c& (0+255),w,b
  3999  0006C8  EC37  F009         	call	_scale
  4000  0006CC  C097  F100         	movff	?_scale,_sprintf$2463
  4001  0006D0  C098  F101         	movff	?_scale+1,_sprintf$2463+1
  4002  0006D4  C099  F102         	movff	?_scale+2,_sprintf$2463+2
  4003  0006D8  C09A  F103         	movff	?_scale+3,_sprintf$2463+3
  4004                           
  4005                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4006  0006DC  C114  F082         	movff	sprintf@fval,___flmul@a
  4007  0006E0  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  4008  0006E4  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  4009  0006E8  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  4010  0006EC  C100  F07E         	movff	_sprintf$2463,___flmul@b
  4011  0006F0  C101  F07F         	movff	_sprintf$2463+1,___flmul@b+1
  4012  0006F4  C102  F080         	movff	_sprintf$2463+2,___flmul@b+2
  4013  0006F8  C103  F081         	movff	_sprintf$2463+3,___flmul@b+3
  4014  0006FC  ECE4  F006         	call	___flmul	;wreg free
  4015  000700  C07E  F0A0         	movff	?___flmul,___fltol@f1
  4016  000704  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  4017  000708  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  4018  00070C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  4019  000710  ECFB  F012         	call	___fltol	;wreg free
  4020  000714  C0A0  F108         	movff	?___fltol,sprintf@val
  4021  000718  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  4022  00071C  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  4023  000720  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  4024                           
  4025                           ;doprnt.c: 1228: while(c--) {
  4026  000724  D074               	goto	l5369
  4027  000726                     l5359:
  4028                           
  4029                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4030  000726  C108  F070         	movff	sprintf@val,___lldiv@dividend
  4031  00072A  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  4032  00072E  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  4033  000732  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  4034  000736  0101               	movlb	1	; () banked
  4035  000738  5118               	movf	sprintf@c& (0+255),w,b
  4036  00073A  0D04               	mullw	4
  4037  00073C  0E53               	movlw	low _dpowers
  4038  00073E  24F3               	addwf	prodl,w,c
  4039  000740  6EF6               	movwf	tblptrl,c
  4040  000742  0E3F               	movlw	high _dpowers
  4041  000744  20F4               	addwfc	prodh,w,c
  4042  000746  6EF7               	movwf	tblptrh,c
  4043  000748                     	if	0	;There are less than 3 active tblptr bytes
  4044  000748                     	endif
  4045  000748  0009               	tblrd		*+
  4046  00074A  CFF5 F074          	movff	tablat,___lldiv@divisor
  4047  00074E  0009               	tblrd		*+
  4048  000750  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  4049  000754  0009               	tblrd		*+
  4050  000756  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  4051  00075A  000A               	tblrd		*-
  4052  00075C  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  4053  000760  EC2C  F015         	call	___lldiv	;wreg free
  4054  000764  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  4055  000768  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4056  00076C  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4057  000770  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4058                           
  4059                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4060  000774  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  4061  000778  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4062  00077C  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4063  000780  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4064  000784  0E0A               	movlw	10
  4065  000786  0100               	movlb	0	; () banked
  4066  000788  6F74               	movwf	___llmod@divisor& (0+255),b
  4067  00078A  0E00               	movlw	0
  4068  00078C  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  4069  00078E  0E00               	movlw	0
  4070  000790  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  4071  000792  0E00               	movlw	0
  4072  000794  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  4073  000796  ECCF  F015         	call	___llmod	;wreg free
  4074  00079A  C070  F10E         	movff	?___llmod,sprintf@tmpval
  4075  00079E  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4076  0007A2  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4077  0007A6  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4078                           
  4079                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4080  0007AA  0101               	movlb	1	; () banked
  4081  0007AC  510E               	movf	sprintf@tmpval& (0+255),w,b
  4082  0007AE  0F30               	addlw	48
  4083  0007B0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4084  0007B4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4085  0007B8  6EDF               	movwf	indf2,c
  4086                           
  4087                           ; BSR set to: 1
  4088  0007BA  0100               	movlb	0	; () banked
  4089  0007BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4090  0007BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;doprnt.c: 1232: val %= dpowers[c];
  4094  0007C0  C108  F070         	movff	sprintf@val,___llmod@dividend
  4095  0007C4  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  4096  0007C8  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  4097  0007CC  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  4098  0007D0  0101               	movlb	1	; () banked
  4099  0007D2  5118               	movf	sprintf@c& (0+255),w,b
  4100  0007D4  0D04               	mullw	4
  4101  0007D6  0E53               	movlw	low _dpowers
  4102  0007D8  24F3               	addwf	prodl,w,c
  4103  0007DA  6EF6               	movwf	tblptrl,c
  4104  0007DC  0E3F               	movlw	high _dpowers
  4105  0007DE  20F4               	addwfc	prodh,w,c
  4106  0007E0  6EF7               	movwf	tblptrh,c
  4107  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  4108  0007E2                     	endif
  4109  0007E2  0009               	tblrd		*+
  4110  0007E4  CFF5 F074          	movff	tablat,___llmod@divisor
  4111  0007E8  0009               	tblrd		*+
  4112  0007EA  CFF5 F075          	movff	tablat,___llmod@divisor+1
  4113  0007EE  0009               	tblrd		*+
  4114  0007F0  CFF5 F076          	movff	tablat,___llmod@divisor+2
  4115  0007F4  000A               	tblrd		*-
  4116  0007F6  CFF5 F077          	movff	tablat,___llmod@divisor+3
  4117  0007FA  ECCF  F015         	call	___llmod	;wreg free
  4118  0007FE  C070  F108         	movff	?___llmod,sprintf@val
  4119  000802  C071  F109         	movff	?___llmod+1,sprintf@val+1
  4120  000806  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  4121  00080A  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  4122  00080E                     l5369:
  4123  00080E  0101               	movlb	1	; () banked
  4124  000810  0718               	decf	sprintf@c& (0+255),f,b
  4125  000812  0101               	movlb	1	; () banked
  4126  000814  2918               	incf	sprintf@c& (0+255),w,b
  4127  000816  B4D8               	btfsc	status,2,c
  4128  000818  D00E               	goto	l5377
  4129  00081A  D785               	goto	l5359
  4130  00081C                     l5371:
  4131                           
  4132                           ; BSR set to: 1
  4133                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4134  00081C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4135  000820  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4136  000824  0E30               	movlw	48
  4137  000826  6EDF               	movwf	indf2,c
  4138                           
  4139                           ; BSR set to: 1
  4140  000828  0100               	movlb	0	; () banked
  4141  00082A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4142  00082C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;doprnt.c: 1237: prec--;
  4146  00082E  0101               	movlb	1	; () banked
  4147  000830  0712               	decf	sprintf@prec& (0+255),f,b
  4148  000832  A0D8               	btfss	status,0,c
  4149  000834  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4150  000836                     l5377:
  4151                           
  4152                           ; BSR set to: 1
  4153  000836  0101               	movlb	1	; () banked
  4154  000838  5112               	movf	sprintf@prec& (0+255),w,b
  4155  00083A  0101               	movlb	1	; () banked
  4156  00083C  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4157  00083E  B4D8               	btfsc	status,2,c
  4158  000840  D059               	goto	l5399
  4159  000842  D7EC               	goto	l5371
  4160  000844                     l5379:
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;doprnt.c: 1246: }
  4164                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4165  000844  0101               	movlb	1	; () banked
  4166  000846  5112               	movf	sprintf@prec& (0+255),w,b
  4167  000848  0101               	movlb	1	; () banked
  4168  00084A  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4169  00084C  A4D8               	btfss	status,2,c
  4170  00084E  D00D               	goto	l5385
  4171                           
  4172                           ; BSR set to: 1
  4173  000850  0101               	movlb	1	; () banked
  4174  000852  5108               	movf	sprintf@val& (0+255),w,b
  4175  000854  0101               	movlb	1	; () banked
  4176  000856  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4177  000858  0101               	movlb	1	; () banked
  4178  00085A  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4179  00085C  0101               	movlb	1	; () banked
  4180  00085E  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4181  000860  A4D8               	btfss	status,2,c
  4182  000862  D003               	goto	l5385
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;doprnt.c: 1291: prec++;
  4186  000864  0101               	movlb	1	; () banked
  4187  000866  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4188  000868  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4189  00086A                     l5385:
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;doprnt.c: 1339: if(c < prec)
  4193  00086A  0E80               	movlw	128
  4194  00086C  0101               	movlb	1	; () banked
  4195  00086E  BF18               	btfsc	sprintf@c& (0+255),7,b
  4196  000870  0E7F               	movlw	127
  4197  000872  0100               	movlb	0	; () banked
  4198  000874  6FC8               	movwf	??_sprintf& (0+255),b
  4199  000876  0101               	movlb	1	; () banked
  4200  000878  5112               	movf	sprintf@prec& (0+255),w,b
  4201  00087A  0101               	movlb	1	; () banked
  4202  00087C  5D18               	subwf	sprintf@c& (0+255),w,b
  4203  00087E  0101               	movlb	1	; () banked
  4204  000880  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4205  000882  0A80               	xorlw	128
  4206  000884  0100               	movlb	0	; () banked
  4207  000886  59C8               	subwfb	??_sprintf& (0+255),w,b
  4208  000888  B0D8               	btfsc	status,0,c
  4209  00088A  D003               	goto	l5389
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;doprnt.c: 1340: c = prec;
  4213  00088C  C112  F118         	movff	sprintf@prec,sprintf@c
  4214  000890  D018               	goto	l5393
  4215  000892                     l5389:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;doprnt.c: 1341: else if(prec < c)
  4219  000892  0101               	movlb	1	; () banked
  4220  000894  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4221  000896  0A80               	xorlw	128
  4222  000898  0100               	movlb	0	; () banked
  4223  00089A  6FC8               	movwf	??_sprintf& (0+255),b
  4224  00089C  0101               	movlb	1	; () banked
  4225  00089E  5118               	movf	sprintf@c& (0+255),w,b
  4226  0008A0  0101               	movlb	1	; () banked
  4227  0008A2  5D12               	subwf	sprintf@prec& (0+255),w,b
  4228  0008A4  0E80               	movlw	128
  4229  0008A6  0101               	movlb	1	; () banked
  4230  0008A8  BF18               	btfsc	sprintf@c& (0+255),7,b
  4231  0008AA  0E7F               	movlw	127
  4232  0008AC  0100               	movlb	0	; () banked
  4233  0008AE  59C8               	subwfb	??_sprintf& (0+255),w,b
  4234  0008B0  B0D8               	btfsc	status,0,c
  4235  0008B2  D007               	goto	l5393
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;doprnt.c: 1342: prec = c;
  4239  0008B4  0101               	movlb	1	; () banked
  4240  0008B6  5118               	movf	sprintf@c& (0+255),w,b
  4241  0008B8  0101               	movlb	1	; () banked
  4242  0008BA  6F12               	movwf	sprintf@prec& (0+255),b
  4243  0008BC  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4244  0008BE  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4245  0008C0  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4246  0008C2                     l5393:
  4247                           
  4248                           ;doprnt.c: 1422: {
  4249                           ;doprnt.c: 1438: if(flag & 0x03)
  4250  0008C2  0E03               	movlw	3
  4251  0008C4  0101               	movlb	1	; () banked
  4252  0008C6  1506               	andwf	sprintf@flag& (0+255),w,b
  4253  0008C8  0100               	movlb	0	; () banked
  4254  0008CA  6FC8               	movwf	??_sprintf& (0+255),b
  4255  0008CC  0E00               	movlw	0
  4256  0008CE  0101               	movlb	1	; () banked
  4257  0008D0  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4258  0008D2  0100               	movlb	0	; () banked
  4259  0008D4  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  4260  0008D6  0100               	movlb	0	; () banked
  4261  0008D8  51C8               	movf	??_sprintf& (0+255),w,b
  4262  0008DA  0100               	movlb	0	; () banked
  4263  0008DC  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  4264  0008DE  B4D8               	btfsc	status,2,c
  4265  0008E0  D009               	goto	l5399
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4269  0008E2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4270  0008E6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4271  0008EA  0E2D               	movlw	45
  4272  0008EC  6EDF               	movwf	indf2,c
  4273  0008EE                     l5397:
  4274                           
  4275                           ; BSR set to: 0
  4276  0008EE  0100               	movlb	0	; () banked
  4277  0008F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4278  0008F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4279  0008F4                     l5399:
  4280  0008F4  C0C2  FFF6         	movff	sprintf@f,tblptrl
  4281  0008F8  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  4282  0008FC  0100               	movlb	0	; () banked
  4283  0008FE  4BC2               	infsnz	sprintf@f& (0+255),f,b
  4284  000900  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  4285  000902                     	if	0	;tblptru may be non-zero
  4286  000902                     	endif
  4287  000902                     	if	0	;tblptru may be non-zero
  4288  000902                     	endif
  4289  000902  0008               	tblrd		*
  4290  000904  CFF5 F118          	movff	tablat,sprintf@c
  4291  000908  0101               	movlb	1	; () banked
  4292  00090A  5118               	movf	sprintf@c& (0+255),w,b
  4293  00090C  A4D8               	btfss	status,2,c
  4294  00090E  EF6A  F000         	goto	l5201
  4295  000912                     l5401:
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;doprnt.c: 1538: *sp = 0;
  4299  000912  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4300  000916  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4301  00091A  0E00               	movlw	0
  4302  00091C  6EDF               	movwf	indf2,c
  4303  00091E  0012               	return	
  4304  000920                     __end_of_sprintf:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           prodh	equ	0xFF4
  4311                           prodl	equ	0xFF3
  4312                           intcon	equ	0xFF2
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           indf2	equ	0xFDF
  4316                           postinc2	equ	0xFDE
  4317                           fsr2h	equ	0xFDA
  4318                           fsr2l	equ	0xFD9
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function _scale *****************
  4322 ;; Defined at:
  4323 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  scl             1    wreg     char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  scl             1   63[BANK0 ] char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  4   55[BANK0 ] char 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4337 ;;      Params:         0       4       0       0
  4338 ;;      Locals:         0       5       0       0
  4339 ;;      Temps:          0       0       0       0
  4340 ;;      Totals:         0       9       0       0
  4341 ;;Total ram usage:        9 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    5
  4344 ;; This function calls:
  4345 ;;		___awdiv
  4346 ;;		___awmod
  4347 ;;		___flmul
  4348 ;; This function is called by:
  4349 ;;		_sprintf
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text13
  4354  00126E                     __ptext13:
  4355                           	opt stack 0
  4356  00126E                     _scale:
  4357                           	opt stack 23
  4358                           
  4359                           ; BSR set to: 1
  4360                           ;incstack = 0
  4361                           ;scale@scl stored from wreg
  4362  00126E  0100               	movlb	0	; () banked
  4363  001270  6F9F               	movwf	scale@scl& (0+255),b
  4364                           
  4365                           ;doprnt.c: 428: if(scl < 0) {
  4366  001272  0100               	movlb	0	; () banked
  4367  001274  AF9F               	btfss	scale@scl& (0+255),7,b
  4368  001276  D125               	goto	l4815
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;doprnt.c: 429: scl = -scl;
  4372  001278  0100               	movlb	0	; () banked
  4373  00127A  6D9F               	negf	scale@scl& (0+255),b
  4374                           
  4375                           ;doprnt.c: 430: if(scl>=110)
  4376  00127C  0100               	movlb	0	; () banked
  4377  00127E  519F               	movf	scale@scl& (0+255),w,b
  4378  001280  0A80               	xorlw	128
  4379  001282  0F12               	addlw	-238
  4380  001284  A0D8               	btfss	status,0,c
  4381  001286  D0AA               	goto	l4805
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4385  001288  0E00               	movlw	0
  4386  00128A  0100               	movlb	0	; () banked
  4387  00128C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4388  00128E  0E0A               	movlw	10
  4389  001290  6F72               	movwf	___awdiv@divisor& (0+255),b
  4390  001292  0E00               	movlw	0
  4391  001294  6E3F               	movwf	___awmod@divisor+1,c
  4392  001296  0E64               	movlw	100
  4393  001298  6E3E               	movwf	___awmod@divisor,c
  4394  00129A  0100               	movlb	0	; () banked
  4395  00129C  519F               	movf	scale@scl& (0+255),w,b
  4396  00129E  6E3C               	movwf	___awmod@dividend,c
  4397  0012A0  6A3D               	clrf	___awmod@dividend+1,c
  4398  0012A2  BE3C               	btfsc	___awmod@dividend,7,c
  4399  0012A4  063D               	decf	___awmod@dividend+1,f,c
  4400  0012A6  EC19  F016         	call	___awmod	;wreg free
  4401  0012AA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4402  0012AE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4403  0012B2  ECCD  F014         	call	___awdiv	;wreg free
  4404  0012B6  0100               	movlb	0	; () banked
  4405  0012B8  90D8               	bcf	status,0,c
  4406  0012BA  3770               	rlcf	?___awdiv& (0+255),f,b
  4407  0012BC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4408  0012BE  0100               	movlb	0	; () banked
  4409  0012C0  90D8               	bcf	status,0,c
  4410  0012C2  3770               	rlcf	?___awdiv& (0+255),f,b
  4411  0012C4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4412  0012C6  0E24               	movlw	36
  4413  0012C8  0100               	movlb	0	; () banked
  4414  0012CA  2770               	addwf	?___awdiv& (0+255),f,b
  4415  0012CC  0E00               	movlw	0
  4416  0012CE  0100               	movlb	0	; () banked
  4417  0012D0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4418  0012D2  0EEB               	movlw	low __npowers_
  4419  0012D4  0100               	movlb	0	; () banked
  4420  0012D6  2570               	addwf	?___awdiv& (0+255),w,b
  4421  0012D8  6EF6               	movwf	tblptrl,c
  4422  0012DA  0E3E               	movlw	high __npowers_
  4423  0012DC  0100               	movlb	0	; () banked
  4424  0012DE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4425  0012E0  6EF7               	movwf	tblptrh,c
  4426  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4427  0012E2                     	endif
  4428  0012E2  0009               	tblrd		*+
  4429  0012E4  CFF5 F082          	movff	tablat,___flmul@a
  4430  0012E8  0009               	tblrd		*+
  4431  0012EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4432  0012EE  0009               	tblrd		*+
  4433  0012F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4434  0012F4  000A               	tblrd		*-
  4435  0012F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4436  0012FA  0E00               	movlw	0
  4437  0012FC  0100               	movlb	0	; () banked
  4438  0012FE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4439  001300  0E64               	movlw	100
  4440  001302  6F72               	movwf	___awdiv@divisor& (0+255),b
  4441  001304  0100               	movlb	0	; () banked
  4442  001306  519F               	movf	scale@scl& (0+255),w,b
  4443  001308  0100               	movlb	0	; () banked
  4444  00130A  6F70               	movwf	___awdiv@dividend& (0+255),b
  4445  00130C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4446  00130E  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4447  001310  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4448  001312  ECCD  F014         	call	___awdiv	;wreg free
  4449  001316  0100               	movlb	0	; () banked
  4450  001318  90D8               	bcf	status,0,c
  4451  00131A  3770               	rlcf	?___awdiv& (0+255),f,b
  4452  00131C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4453  00131E  0100               	movlb	0	; () banked
  4454  001320  90D8               	bcf	status,0,c
  4455  001322  3770               	rlcf	?___awdiv& (0+255),f,b
  4456  001324  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4457  001326  0E48               	movlw	72
  4458  001328  0100               	movlb	0	; () banked
  4459  00132A  2770               	addwf	?___awdiv& (0+255),f,b
  4460  00132C  0E00               	movlw	0
  4461  00132E  0100               	movlb	0	; () banked
  4462  001330  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4463  001332  0EEB               	movlw	low __npowers_
  4464  001334  0100               	movlb	0	; () banked
  4465  001336  2570               	addwf	?___awdiv& (0+255),w,b
  4466  001338  6EF6               	movwf	tblptrl,c
  4467  00133A  0E3E               	movlw	high __npowers_
  4468  00133C  0100               	movlb	0	; () banked
  4469  00133E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4470  001340  6EF7               	movwf	tblptrh,c
  4471  001342                     	if	0	;There are less than 3 active tblptr bytes
  4472  001342                     	endif
  4473  001342  0009               	tblrd		*+
  4474  001344  CFF5 F07E          	movff	tablat,___flmul@b
  4475  001348  0009               	tblrd		*+
  4476  00134A  CFF5 F07F          	movff	tablat,___flmul@b+1
  4477  00134E  0009               	tblrd		*+
  4478  001350  CFF5 F080          	movff	tablat,___flmul@b+2
  4479  001354  000A               	tblrd		*-
  4480  001356  CFF5 F081          	movff	tablat,___flmul@b+3
  4481  00135A  ECE4  F006         	call	___flmul	;wreg free
  4482  00135E  C07E  F09B         	movff	?___flmul,_scale$2462
  4483  001362  C07F  F09C         	movff	?___flmul+1,_scale$2462+1
  4484  001366  C080  F09D         	movff	?___flmul+2,_scale$2462+2
  4485  00136A  C081  F09E         	movff	?___flmul+3,_scale$2462+3
  4486                           
  4487                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4488  00136E  C09B  F07E         	movff	_scale$2462,___flmul@b
  4489  001372  C09C  F07F         	movff	_scale$2462+1,___flmul@b+1
  4490  001376  C09D  F080         	movff	_scale$2462+2,___flmul@b+2
  4491  00137A  C09E  F081         	movff	_scale$2462+3,___flmul@b+3
  4492  00137E  0E00               	movlw	0
  4493  001380  6E3F               	movwf	___awmod@divisor+1,c
  4494  001382  0E0A               	movlw	10
  4495  001384  6E3E               	movwf	___awmod@divisor,c
  4496  001386  0100               	movlb	0	; () banked
  4497  001388  519F               	movf	scale@scl& (0+255),w,b
  4498  00138A  6E3C               	movwf	___awmod@dividend,c
  4499  00138C  6A3D               	clrf	___awmod@dividend+1,c
  4500  00138E  BE3C               	btfsc	___awmod@dividend,7,c
  4501  001390  063D               	decf	___awmod@dividend+1,f,c
  4502  001392  EC19  F016         	call	___awmod	;wreg free
  4503  001396  90D8               	bcf	status,0,c
  4504  001398  363C               	rlcf	?___awmod,f,c
  4505  00139A  363D               	rlcf	?___awmod+1,f,c
  4506  00139C  90D8               	bcf	status,0,c
  4507  00139E  363C               	rlcf	?___awmod,f,c
  4508  0013A0  363D               	rlcf	?___awmod+1,f,c
  4509  0013A2  0EEB               	movlw	low __npowers_
  4510  0013A4  243C               	addwf	?___awmod,w,c
  4511  0013A6  6EF6               	movwf	tblptrl,c
  4512  0013A8  0E3E               	movlw	high __npowers_
  4513  0013AA  203D               	addwfc	?___awmod+1,w,c
  4514  0013AC  6EF7               	movwf	tblptrh,c
  4515  0013AE                     	if	0	;There are less than 3 active tblptr bytes
  4516  0013AE                     	endif
  4517  0013AE  0009               	tblrd		*+
  4518  0013B0  CFF5 F082          	movff	tablat,___flmul@a
  4519  0013B4  0009               	tblrd		*+
  4520  0013B6  CFF5 F083          	movff	tablat,___flmul@a+1
  4521  0013BA  0009               	tblrd		*+
  4522  0013BC  CFF5 F084          	movff	tablat,___flmul@a+2
  4523  0013C0  000A               	tblrd		*-
  4524  0013C2  CFF5 F085          	movff	tablat,___flmul@a+3
  4525  0013C6  ECE4  F006         	call	___flmul	;wreg free
  4526  0013CA  C07E  F097         	movff	?___flmul,?_scale
  4527  0013CE  C07F  F098         	movff	?___flmul+1,?_scale+1
  4528  0013D2  C080  F099         	movff	?___flmul+2,?_scale+2
  4529  0013D6  C081  F09A         	movff	?___flmul+3,?_scale+3
  4530  0013DA  0012               	return	
  4531  0013DC                     l4805:
  4532                           
  4533                           ;doprnt.c: 432: else if(scl > 10)
  4534  0013DC  0100               	movlb	0	; () banked
  4535  0013DE  519F               	movf	scale@scl& (0+255),w,b
  4536  0013E0  0A80               	xorlw	128
  4537  0013E2  0F75               	addlw	-139
  4538  0013E4  A0D8               	btfss	status,0,c
  4539  0013E6  D057               	goto	l4811
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4543  0013E8  0E00               	movlw	0
  4544  0013EA  0100               	movlb	0	; () banked
  4545  0013EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4546  0013EE  0E0A               	movlw	10
  4547  0013F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4548  0013F2  0100               	movlb	0	; () banked
  4549  0013F4  519F               	movf	scale@scl& (0+255),w,b
  4550  0013F6  0100               	movlb	0	; () banked
  4551  0013F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4552  0013FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4553  0013FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4554  0013FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4555  001400  ECCD  F014         	call	___awdiv	;wreg free
  4556  001404  0100               	movlb	0	; () banked
  4557  001406  90D8               	bcf	status,0,c
  4558  001408  3770               	rlcf	?___awdiv& (0+255),f,b
  4559  00140A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4560  00140C  0100               	movlb	0	; () banked
  4561  00140E  90D8               	bcf	status,0,c
  4562  001410  3770               	rlcf	?___awdiv& (0+255),f,b
  4563  001412  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4564  001414  0E24               	movlw	36
  4565  001416  0100               	movlb	0	; () banked
  4566  001418  2770               	addwf	?___awdiv& (0+255),f,b
  4567  00141A  0E00               	movlw	0
  4568  00141C  0100               	movlb	0	; () banked
  4569  00141E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4570  001420  0EEB               	movlw	low __npowers_
  4571  001422  0100               	movlb	0	; () banked
  4572  001424  2570               	addwf	?___awdiv& (0+255),w,b
  4573  001426  6EF6               	movwf	tblptrl,c
  4574  001428  0E3E               	movlw	high __npowers_
  4575  00142A  0100               	movlb	0	; () banked
  4576  00142C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4577  00142E  6EF7               	movwf	tblptrh,c
  4578  001430                     	if	0	;There are less than 3 active tblptr bytes
  4579  001430                     	endif
  4580  001430  0009               	tblrd		*+
  4581  001432  CFF5 F07E          	movff	tablat,___flmul@b
  4582  001436  0009               	tblrd		*+
  4583  001438  CFF5 F07F          	movff	tablat,___flmul@b+1
  4584  00143C  0009               	tblrd		*+
  4585  00143E  CFF5 F080          	movff	tablat,___flmul@b+2
  4586  001442  000A               	tblrd		*-
  4587  001444  CFF5 F081          	movff	tablat,___flmul@b+3
  4588  001448  0E00               	movlw	0
  4589  00144A  6E3F               	movwf	___awmod@divisor+1,c
  4590  00144C  0E0A               	movlw	10
  4591  00144E  6E3E               	movwf	___awmod@divisor,c
  4592  001450  0100               	movlb	0	; () banked
  4593  001452  519F               	movf	scale@scl& (0+255),w,b
  4594  001454  6E3C               	movwf	___awmod@dividend,c
  4595  001456  6A3D               	clrf	___awmod@dividend+1,c
  4596  001458  BE3C               	btfsc	___awmod@dividend,7,c
  4597  00145A  063D               	decf	___awmod@dividend+1,f,c
  4598  00145C  EC19  F016         	call	___awmod	;wreg free
  4599  001460  90D8               	bcf	status,0,c
  4600  001462  363C               	rlcf	?___awmod,f,c
  4601  001464  363D               	rlcf	?___awmod+1,f,c
  4602  001466  90D8               	bcf	status,0,c
  4603  001468  363C               	rlcf	?___awmod,f,c
  4604  00146A  363D               	rlcf	?___awmod+1,f,c
  4605  00146C  0EEB               	movlw	low __npowers_
  4606  00146E  243C               	addwf	?___awmod,w,c
  4607  001470  6EF6               	movwf	tblptrl,c
  4608  001472  0E3E               	movlw	high __npowers_
  4609  001474  203D               	addwfc	?___awmod+1,w,c
  4610  001476  6EF7               	movwf	tblptrh,c
  4611  001478                     	if	0	;There are less than 3 active tblptr bytes
  4612  001478                     	endif
  4613  001478  0009               	tblrd		*+
  4614  00147A  CFF5 F082          	movff	tablat,___flmul@a
  4615  00147E  0009               	tblrd		*+
  4616  001480  CFF5 F083          	movff	tablat,___flmul@a+1
  4617  001484  0009               	tblrd		*+
  4618  001486  CFF5 F084          	movff	tablat,___flmul@a+2
  4619  00148A  000A               	tblrd		*-
  4620  00148C  CFF5 F085          	movff	tablat,___flmul@a+3
  4621  001490  ECE4  F006         	call	___flmul	;wreg free
  4622  001494  D79A               	goto	L4
  4623  001496                     l4811:
  4624                           
  4625                           ;doprnt.c: 434: return _npowers_[scl];
  4626  001496  0100               	movlb	0	; () banked
  4627  001498  519F               	movf	scale@scl& (0+255),w,b
  4628  00149A  0D04               	mullw	4
  4629  00149C  0EEB               	movlw	low __npowers_
  4630  00149E  24F3               	addwf	prodl,w,c
  4631  0014A0  6EF6               	movwf	tblptrl,c
  4632  0014A2  0E3E               	movlw	high __npowers_
  4633  0014A4  20F4               	addwfc	prodh,w,c
  4634  0014A6  6EF7               	movwf	tblptrh,c
  4635  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  4636  0014A8                     	endif
  4637  0014A8  0009               	tblrd		*+
  4638  0014AA  CFF5 F097          	movff	tablat,?_scale
  4639  0014AE  0009               	tblrd		*+
  4640  0014B0  CFF5 F098          	movff	tablat,?_scale+1
  4641  0014B4  0009               	tblrd		*+
  4642  0014B6  CFF5 F099          	movff	tablat,?_scale+2
  4643  0014BA  000A               	tblrd		*-
  4644  0014BC  CFF5 F09A          	movff	tablat,?_scale+3
  4645                           
  4646                           ; BSR set to: 0
  4647  0014C0  0012               	return	
  4648  0014C2                     l4815:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;doprnt.c: 435: }
  4652                           ;doprnt.c: 436: if(scl>=110)
  4653  0014C2  0100               	movlb	0	; () banked
  4654  0014C4  519F               	movf	scale@scl& (0+255),w,b
  4655  0014C6  0A80               	xorlw	128
  4656  0014C8  0F12               	addlw	-238
  4657  0014CA  A0D8               	btfss	status,0,c
  4658  0014CC  D0AA               	goto	l4823
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4662  0014CE  0E00               	movlw	0
  4663  0014D0  0100               	movlb	0	; () banked
  4664  0014D2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4665  0014D4  0E0A               	movlw	10
  4666  0014D6  6F72               	movwf	___awdiv@divisor& (0+255),b
  4667  0014D8  0E00               	movlw	0
  4668  0014DA  6E3F               	movwf	___awmod@divisor+1,c
  4669  0014DC  0E64               	movlw	100
  4670  0014DE  6E3E               	movwf	___awmod@divisor,c
  4671  0014E0  0100               	movlb	0	; () banked
  4672  0014E2  519F               	movf	scale@scl& (0+255),w,b
  4673  0014E4  6E3C               	movwf	___awmod@dividend,c
  4674  0014E6  6A3D               	clrf	___awmod@dividend+1,c
  4675  0014E8  BE3C               	btfsc	___awmod@dividend,7,c
  4676  0014EA  063D               	decf	___awmod@dividend+1,f,c
  4677  0014EC  EC19  F016         	call	___awmod	;wreg free
  4678  0014F0  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4679  0014F4  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4680  0014F8  ECCD  F014         	call	___awdiv	;wreg free
  4681  0014FC  0100               	movlb	0	; () banked
  4682  0014FE  90D8               	bcf	status,0,c
  4683  001500  3770               	rlcf	?___awdiv& (0+255),f,b
  4684  001502  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4685  001504  0100               	movlb	0	; () banked
  4686  001506  90D8               	bcf	status,0,c
  4687  001508  3770               	rlcf	?___awdiv& (0+255),f,b
  4688  00150A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4689  00150C  0E24               	movlw	36
  4690  00150E  0100               	movlb	0	; () banked
  4691  001510  2770               	addwf	?___awdiv& (0+255),f,b
  4692  001512  0E00               	movlw	0
  4693  001514  0100               	movlb	0	; () banked
  4694  001516  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4695  001518  0E1F               	movlw	low __powers_
  4696  00151A  0100               	movlb	0	; () banked
  4697  00151C  2570               	addwf	?___awdiv& (0+255),w,b
  4698  00151E  6EF6               	movwf	tblptrl,c
  4699  001520  0E3F               	movlw	high __powers_
  4700  001522  0100               	movlb	0	; () banked
  4701  001524  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4702  001526  6EF7               	movwf	tblptrh,c
  4703  001528                     	if	0	;There are less than 3 active tblptr bytes
  4704  001528                     	endif
  4705  001528  0009               	tblrd		*+
  4706  00152A  CFF5 F082          	movff	tablat,___flmul@a
  4707  00152E  0009               	tblrd		*+
  4708  001530  CFF5 F083          	movff	tablat,___flmul@a+1
  4709  001534  0009               	tblrd		*+
  4710  001536  CFF5 F084          	movff	tablat,___flmul@a+2
  4711  00153A  000A               	tblrd		*-
  4712  00153C  CFF5 F085          	movff	tablat,___flmul@a+3
  4713  001540  0E00               	movlw	0
  4714  001542  0100               	movlb	0	; () banked
  4715  001544  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4716  001546  0E64               	movlw	100
  4717  001548  6F72               	movwf	___awdiv@divisor& (0+255),b
  4718  00154A  0100               	movlb	0	; () banked
  4719  00154C  519F               	movf	scale@scl& (0+255),w,b
  4720  00154E  0100               	movlb	0	; () banked
  4721  001550  6F70               	movwf	___awdiv@dividend& (0+255),b
  4722  001552  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4723  001554  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4724  001556  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4725  001558  ECCD  F014         	call	___awdiv	;wreg free
  4726  00155C  0100               	movlb	0	; () banked
  4727  00155E  90D8               	bcf	status,0,c
  4728  001560  3770               	rlcf	?___awdiv& (0+255),f,b
  4729  001562  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4730  001564  0100               	movlb	0	; () banked
  4731  001566  90D8               	bcf	status,0,c
  4732  001568  3770               	rlcf	?___awdiv& (0+255),f,b
  4733  00156A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4734  00156C  0E48               	movlw	72
  4735  00156E  0100               	movlb	0	; () banked
  4736  001570  2770               	addwf	?___awdiv& (0+255),f,b
  4737  001572  0E00               	movlw	0
  4738  001574  0100               	movlb	0	; () banked
  4739  001576  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4740  001578  0E1F               	movlw	low __powers_
  4741  00157A  0100               	movlb	0	; () banked
  4742  00157C  2570               	addwf	?___awdiv& (0+255),w,b
  4743  00157E  6EF6               	movwf	tblptrl,c
  4744  001580  0E3F               	movlw	high __powers_
  4745  001582  0100               	movlb	0	; () banked
  4746  001584  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4747  001586  6EF7               	movwf	tblptrh,c
  4748  001588                     	if	0	;There are less than 3 active tblptr bytes
  4749  001588                     	endif
  4750  001588  0009               	tblrd		*+
  4751  00158A  CFF5 F07E          	movff	tablat,___flmul@b
  4752  00158E  0009               	tblrd		*+
  4753  001590  CFF5 F07F          	movff	tablat,___flmul@b+1
  4754  001594  0009               	tblrd		*+
  4755  001596  CFF5 F080          	movff	tablat,___flmul@b+2
  4756  00159A  000A               	tblrd		*-
  4757  00159C  CFF5 F081          	movff	tablat,___flmul@b+3
  4758  0015A0  ECE4  F006         	call	___flmul	;wreg free
  4759  0015A4  C07E  F09B         	movff	?___flmul,_scale$2462
  4760  0015A8  C07F  F09C         	movff	?___flmul+1,_scale$2462+1
  4761  0015AC  C080  F09D         	movff	?___flmul+2,_scale$2462+2
  4762  0015B0  C081  F09E         	movff	?___flmul+3,_scale$2462+3
  4763                           
  4764                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4765  0015B4  C09B  F07E         	movff	_scale$2462,___flmul@b
  4766  0015B8  C09C  F07F         	movff	_scale$2462+1,___flmul@b+1
  4767  0015BC  C09D  F080         	movff	_scale$2462+2,___flmul@b+2
  4768  0015C0  C09E  F081         	movff	_scale$2462+3,___flmul@b+3
  4769  0015C4  0E00               	movlw	0
  4770  0015C6  6E3F               	movwf	___awmod@divisor+1,c
  4771  0015C8  0E0A               	movlw	10
  4772  0015CA  6E3E               	movwf	___awmod@divisor,c
  4773  0015CC  0100               	movlb	0	; () banked
  4774  0015CE  519F               	movf	scale@scl& (0+255),w,b
  4775  0015D0  6E3C               	movwf	___awmod@dividend,c
  4776  0015D2  6A3D               	clrf	___awmod@dividend+1,c
  4777  0015D4  BE3C               	btfsc	___awmod@dividend,7,c
  4778  0015D6  063D               	decf	___awmod@dividend+1,f,c
  4779  0015D8  EC19  F016         	call	___awmod	;wreg free
  4780  0015DC  90D8               	bcf	status,0,c
  4781  0015DE  363C               	rlcf	?___awmod,f,c
  4782  0015E0  363D               	rlcf	?___awmod+1,f,c
  4783  0015E2  90D8               	bcf	status,0,c
  4784  0015E4  363C               	rlcf	?___awmod,f,c
  4785  0015E6  363D               	rlcf	?___awmod+1,f,c
  4786  0015E8  0E1F               	movlw	low __powers_
  4787  0015EA  243C               	addwf	?___awmod,w,c
  4788  0015EC  6EF6               	movwf	tblptrl,c
  4789  0015EE  0E3F               	movlw	high __powers_
  4790  0015F0  203D               	addwfc	?___awmod+1,w,c
  4791  0015F2  6EF7               	movwf	tblptrh,c
  4792  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  4793  0015F4                     	endif
  4794  0015F4  0009               	tblrd		*+
  4795  0015F6  CFF5 F082          	movff	tablat,___flmul@a
  4796  0015FA  0009               	tblrd		*+
  4797  0015FC  CFF5 F083          	movff	tablat,___flmul@a+1
  4798  001600  0009               	tblrd		*+
  4799  001602  CFF5 F084          	movff	tablat,___flmul@a+2
  4800  001606  000A               	tblrd		*-
  4801  001608  CFF5 F085          	movff	tablat,___flmul@a+3
  4802  00160C  ECE4  F006         	call	___flmul	;wreg free
  4803  001610  C07E  F097         	movff	?___flmul,?_scale
  4804  001614  C07F  F098         	movff	?___flmul+1,?_scale+1
  4805  001618  C080  F099         	movff	?___flmul+2,?_scale+2
  4806  00161C  C081  F09A         	movff	?___flmul+3,?_scale+3
  4807  001620  0012               	return	
  4808  001622                     l4823:
  4809                           
  4810                           ;doprnt.c: 438: else if(scl > 10)
  4811  001622  0100               	movlb	0	; () banked
  4812  001624  519F               	movf	scale@scl& (0+255),w,b
  4813  001626  0A80               	xorlw	128
  4814  001628  0F75               	addlw	-139
  4815  00162A  A0D8               	btfss	status,0,c
  4816  00162C  D057               	goto	l4829
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4820  00162E  0E00               	movlw	0
  4821  001630  0100               	movlb	0	; () banked
  4822  001632  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4823  001634  0E0A               	movlw	10
  4824  001636  6F72               	movwf	___awdiv@divisor& (0+255),b
  4825  001638  0100               	movlb	0	; () banked
  4826  00163A  519F               	movf	scale@scl& (0+255),w,b
  4827  00163C  0100               	movlb	0	; () banked
  4828  00163E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4829  001640  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4830  001642  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4831  001644  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4832  001646  ECCD  F014         	call	___awdiv	;wreg free
  4833  00164A  0100               	movlb	0	; () banked
  4834  00164C  90D8               	bcf	status,0,c
  4835  00164E  3770               	rlcf	?___awdiv& (0+255),f,b
  4836  001650  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4837  001652  0100               	movlb	0	; () banked
  4838  001654  90D8               	bcf	status,0,c
  4839  001656  3770               	rlcf	?___awdiv& (0+255),f,b
  4840  001658  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4841  00165A  0E24               	movlw	36
  4842  00165C  0100               	movlb	0	; () banked
  4843  00165E  2770               	addwf	?___awdiv& (0+255),f,b
  4844  001660  0E00               	movlw	0
  4845  001662  0100               	movlb	0	; () banked
  4846  001664  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4847  001666  0E1F               	movlw	low __powers_
  4848  001668  0100               	movlb	0	; () banked
  4849  00166A  2570               	addwf	?___awdiv& (0+255),w,b
  4850  00166C  6EF6               	movwf	tblptrl,c
  4851  00166E  0E3F               	movlw	high __powers_
  4852  001670  0100               	movlb	0	; () banked
  4853  001672  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4854  001674  6EF7               	movwf	tblptrh,c
  4855  001676                     	if	0	;There are less than 3 active tblptr bytes
  4856  001676                     	endif
  4857  001676  0009               	tblrd		*+
  4858  001678  CFF5 F07E          	movff	tablat,___flmul@b
  4859  00167C  0009               	tblrd		*+
  4860  00167E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4861  001682  0009               	tblrd		*+
  4862  001684  CFF5 F080          	movff	tablat,___flmul@b+2
  4863  001688  000A               	tblrd		*-
  4864  00168A  CFF5 F081          	movff	tablat,___flmul@b+3
  4865  00168E  0E00               	movlw	0
  4866  001690  6E3F               	movwf	___awmod@divisor+1,c
  4867  001692  0E0A               	movlw	10
  4868  001694  6E3E               	movwf	___awmod@divisor,c
  4869  001696  0100               	movlb	0	; () banked
  4870  001698  519F               	movf	scale@scl& (0+255),w,b
  4871  00169A  6E3C               	movwf	___awmod@dividend,c
  4872  00169C  6A3D               	clrf	___awmod@dividend+1,c
  4873  00169E  BE3C               	btfsc	___awmod@dividend,7,c
  4874  0016A0  063D               	decf	___awmod@dividend+1,f,c
  4875  0016A2  EC19  F016         	call	___awmod	;wreg free
  4876  0016A6  90D8               	bcf	status,0,c
  4877  0016A8  363C               	rlcf	?___awmod,f,c
  4878  0016AA  363D               	rlcf	?___awmod+1,f,c
  4879  0016AC  90D8               	bcf	status,0,c
  4880  0016AE  363C               	rlcf	?___awmod,f,c
  4881  0016B0  363D               	rlcf	?___awmod+1,f,c
  4882  0016B2  0E1F               	movlw	low __powers_
  4883  0016B4  243C               	addwf	?___awmod,w,c
  4884  0016B6  6EF6               	movwf	tblptrl,c
  4885  0016B8  0E3F               	movlw	high __powers_
  4886  0016BA  203D               	addwfc	?___awmod+1,w,c
  4887  0016BC  6EF7               	movwf	tblptrh,c
  4888  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  4889  0016BE                     	endif
  4890  0016BE  0009               	tblrd		*+
  4891  0016C0  CFF5 F082          	movff	tablat,___flmul@a
  4892  0016C4  0009               	tblrd		*+
  4893  0016C6  CFF5 F083          	movff	tablat,___flmul@a+1
  4894  0016CA  0009               	tblrd		*+
  4895  0016CC  CFF5 F084          	movff	tablat,___flmul@a+2
  4896  0016D0  000A               	tblrd		*-
  4897  0016D2  CFF5 F085          	movff	tablat,___flmul@a+3
  4898  0016D6  ECE4  F006         	call	___flmul	;wreg free
  4899  0016DA  D79A               	goto	L5
  4900  0016DC                     l4829:
  4901                           
  4902                           ;doprnt.c: 440: return _powers_[scl];
  4903  0016DC  0100               	movlb	0	; () banked
  4904  0016DE  519F               	movf	scale@scl& (0+255),w,b
  4905  0016E0  0D04               	mullw	4
  4906  0016E2  0E1F               	movlw	low __powers_
  4907  0016E4  24F3               	addwf	prodl,w,c
  4908  0016E6  6EF6               	movwf	tblptrl,c
  4909  0016E8  0E3F               	movlw	high __powers_
  4910  0016EA  20F4               	addwfc	prodh,w,c
  4911  0016EC  6EF7               	movwf	tblptrh,c
  4912  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  4913  0016EE                     	endif
  4914  0016EE  0009               	tblrd		*+
  4915  0016F0  CFF5 F097          	movff	tablat,?_scale
  4916  0016F4  0009               	tblrd		*+
  4917  0016F6  CFF5 F098          	movff	tablat,?_scale+1
  4918  0016FA  0009               	tblrd		*+
  4919  0016FC  CFF5 F099          	movff	tablat,?_scale+2
  4920  001700  000A               	tblrd		*-
  4921  001702  CFF5 F09A          	movff	tablat,?_scale+3
  4922  001706  0012               	return	
  4923  001708                     __end_of_scale:
  4924                           	opt stack 0
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           prodh	equ	0xFF4
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf2	equ	0xFDF
  4935                           postinc2	equ	0xFDE
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function _isdigit *****************
  4941 ;; Defined at:
  4942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  c               1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  c               1   26[COMRAM] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4956 ;;      Params:         0       0       0       0
  4957 ;;      Locals:         2       0       0       0
  4958 ;;      Temps:          1       0       0       0
  4959 ;;      Totals:         3       0       0       0
  4960 ;;Total ram usage:        3 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    4
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_sprintf
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text14
  4971  0030AA                     __ptext14:
  4972                           	opt stack 0
  4973  0030AA                     _isdigit:
  4974                           	opt stack 24
  4975                           
  4976                           ;incstack = 0
  4977                           ;isdigit@c stored from wreg
  4978  0030AA  6E3E               	movwf	isdigit@c,c
  4979  0030AC  0E00               	movlw	0
  4980  0030AE  6E3D               	movwf	_isdigit$2069,c
  4981  0030B0  0E3A               	movlw	58
  4982  0030B2  603E               	cpfslt	isdigit@c,c
  4983  0030B4  D005               	goto	l4841
  4984  0030B6  0E2F               	movlw	47
  4985  0030B8  643E               	cpfsgt	isdigit@c,c
  4986  0030BA  D002               	goto	l4841
  4987  0030BC  0E01               	movlw	1
  4988  0030BE  6E3D               	movwf	_isdigit$2069,c
  4989  0030C0                     l4841:
  4990  0030C0  C03D  F03C         	movff	_isdigit$2069,??_isdigit
  4991  0030C4  303C               	rrcf	??_isdigit,w,c
  4992  0030C6  0012               	return	
  4993  0030C8                     __end_of_isdigit:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           wreg	equ	0xFE8
  5004                           indf2	equ	0xFDF
  5005                           postinc2	equ	0xFDE
  5006                           fsr2h	equ	0xFDA
  5007                           fsr2l	equ	0xFD9
  5008                           status	equ	0xFD8
  5009                           
  5010 ;; *************** function _fround *****************
  5011 ;; Defined at:
  5012 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  prec            1    wreg     unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  prec            1   67[BANK0 ] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  4   55[BANK0 ] unsigned char 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5026 ;;      Params:         0       4       0       0
  5027 ;;      Locals:         0       9       0       0
  5028 ;;      Temps:          0       0       0       0
  5029 ;;      Totals:         0      13       0       0
  5030 ;;Total ram usage:       13 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    5
  5033 ;; This function calls:
  5034 ;;		___awdiv
  5035 ;;		___awmod
  5036 ;;		___flmul
  5037 ;; This function is called by:
  5038 ;;		_sprintf
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text15
  5043  001AA2                     __ptext15:
  5044                           	opt stack 0
  5045  001AA2                     _fround:
  5046                           	opt stack 23
  5047                           
  5048                           ;incstack = 0
  5049                           ;fround@prec stored from wreg
  5050  001AA2  0100               	movlb	0	; () banked
  5051  001AA4  6FA3               	movwf	fround@prec& (0+255),b
  5052                           
  5053                           ;doprnt.c: 413: if(prec>=110)
  5054  001AA6  0E6D               	movlw	109
  5055  001AA8  0100               	movlb	0	; () banked
  5056  001AAA  65A3               	cpfsgt	fround@prec& (0+255),b
  5057  001AAC  D0BC               	goto	l4783
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5061  001AAE  0E00               	movlw	0
  5062  001AB0  0100               	movlb	0	; () banked
  5063  001AB2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5064  001AB4  0E0A               	movlw	10
  5065  001AB6  6F72               	movwf	___awdiv@divisor& (0+255),b
  5066  001AB8  0E00               	movlw	0
  5067  001ABA  6E3F               	movwf	___awmod@divisor+1,c
  5068  001ABC  0E64               	movlw	100
  5069  001ABE  6E3E               	movwf	___awmod@divisor,c
  5070  001AC0  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5071  001AC4  6A3D               	clrf	___awmod@dividend+1,c
  5072  001AC6  EC19  F016         	call	___awmod	;wreg free
  5073  001ACA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  5074  001ACE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  5075  001AD2  ECCD  F014         	call	___awdiv	;wreg free
  5076  001AD6  0100               	movlb	0	; () banked
  5077  001AD8  90D8               	bcf	status,0,c
  5078  001ADA  3770               	rlcf	?___awdiv& (0+255),f,b
  5079  001ADC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5080  001ADE  0100               	movlb	0	; () banked
  5081  001AE0  90D8               	bcf	status,0,c
  5082  001AE2  3770               	rlcf	?___awdiv& (0+255),f,b
  5083  001AE4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5084  001AE6  0E24               	movlw	36
  5085  001AE8  0100               	movlb	0	; () banked
  5086  001AEA  2770               	addwf	?___awdiv& (0+255),f,b
  5087  001AEC  0E00               	movlw	0
  5088  001AEE  0100               	movlb	0	; () banked
  5089  001AF0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5090  001AF2  0EEB               	movlw	low __npowers_
  5091  001AF4  0100               	movlb	0	; () banked
  5092  001AF6  2570               	addwf	?___awdiv& (0+255),w,b
  5093  001AF8  6EF6               	movwf	tblptrl,c
  5094  001AFA  0E3E               	movlw	high __npowers_
  5095  001AFC  0100               	movlb	0	; () banked
  5096  001AFE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5097  001B00  6EF7               	movwf	tblptrh,c
  5098  001B02                     	if	0	;There are less than 3 active tblptr bytes
  5099  001B02                     	endif
  5100  001B02  0009               	tblrd		*+
  5101  001B04  CFF5 F082          	movff	tablat,___flmul@a
  5102  001B08  0009               	tblrd		*+
  5103  001B0A  CFF5 F083          	movff	tablat,___flmul@a+1
  5104  001B0E  0009               	tblrd		*+
  5105  001B10  CFF5 F084          	movff	tablat,___flmul@a+2
  5106  001B14  000A               	tblrd		*-
  5107  001B16  CFF5 F085          	movff	tablat,___flmul@a+3
  5108  001B1A  0E00               	movlw	0
  5109  001B1C  0100               	movlb	0	; () banked
  5110  001B1E  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5111  001B20  0E64               	movlw	100
  5112  001B22  6F72               	movwf	___awdiv@divisor& (0+255),b
  5113  001B24  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5114  001B28  0100               	movlb	0	; () banked
  5115  001B2A  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5116  001B2C  ECCD  F014         	call	___awdiv	;wreg free
  5117  001B30  0100               	movlb	0	; () banked
  5118  001B32  90D8               	bcf	status,0,c
  5119  001B34  3770               	rlcf	?___awdiv& (0+255),f,b
  5120  001B36  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5121  001B38  0100               	movlb	0	; () banked
  5122  001B3A  90D8               	bcf	status,0,c
  5123  001B3C  3770               	rlcf	?___awdiv& (0+255),f,b
  5124  001B3E  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5125  001B40  0E48               	movlw	72
  5126  001B42  0100               	movlb	0	; () banked
  5127  001B44  2770               	addwf	?___awdiv& (0+255),f,b
  5128  001B46  0E00               	movlw	0
  5129  001B48  0100               	movlb	0	; () banked
  5130  001B4A  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5131  001B4C  0EEB               	movlw	low __npowers_
  5132  001B4E  0100               	movlb	0	; () banked
  5133  001B50  2570               	addwf	?___awdiv& (0+255),w,b
  5134  001B52  6EF6               	movwf	tblptrl,c
  5135  001B54  0E3E               	movlw	high __npowers_
  5136  001B56  0100               	movlb	0	; () banked
  5137  001B58  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5138  001B5A  6EF7               	movwf	tblptrh,c
  5139  001B5C                     	if	0	;There are less than 3 active tblptr bytes
  5140  001B5C                     	endif
  5141  001B5C  0009               	tblrd		*+
  5142  001B5E  CFF5 F07E          	movff	tablat,___flmul@b
  5143  001B62  0009               	tblrd		*+
  5144  001B64  CFF5 F07F          	movff	tablat,___flmul@b+1
  5145  001B68  0009               	tblrd		*+
  5146  001B6A  CFF5 F080          	movff	tablat,___flmul@b+2
  5147  001B6E  000A               	tblrd		*-
  5148  001B70  CFF5 F081          	movff	tablat,___flmul@b+3
  5149  001B74  ECE4  F006         	call	___flmul	;wreg free
  5150  001B78  C07E  F09F         	movff	?___flmul,_fround$2460
  5151  001B7C  C07F  F0A0         	movff	?___flmul+1,_fround$2460+1
  5152  001B80  C080  F0A1         	movff	?___flmul+2,_fround$2460+2
  5153  001B84  C081  F0A2         	movff	?___flmul+3,_fround$2460+3
  5154                           
  5155                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5156  001B88  0E00               	movlw	0
  5157  001B8A  6E3F               	movwf	___awmod@divisor+1,c
  5158  001B8C  0E0A               	movlw	10
  5159  001B8E  6E3E               	movwf	___awmod@divisor,c
  5160  001B90  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5161  001B94  6A3D               	clrf	___awmod@dividend+1,c
  5162  001B96  EC19  F016         	call	___awmod	;wreg free
  5163  001B9A  90D8               	bcf	status,0,c
  5164  001B9C  363C               	rlcf	?___awmod,f,c
  5165  001B9E  363D               	rlcf	?___awmod+1,f,c
  5166  001BA0  90D8               	bcf	status,0,c
  5167  001BA2  363C               	rlcf	?___awmod,f,c
  5168  001BA4  363D               	rlcf	?___awmod+1,f,c
  5169  001BA6  0EEB               	movlw	low __npowers_
  5170  001BA8  243C               	addwf	?___awmod,w,c
  5171  001BAA  6EF6               	movwf	tblptrl,c
  5172  001BAC  0E3E               	movlw	high __npowers_
  5173  001BAE  203D               	addwfc	?___awmod+1,w,c
  5174  001BB0  6EF7               	movwf	tblptrh,c
  5175  001BB2                     	if	0	;There are less than 3 active tblptr bytes
  5176  001BB2                     	endif
  5177  001BB2  0009               	tblrd		*+
  5178  001BB4  CFF5 F082          	movff	tablat,___flmul@a
  5179  001BB8  0009               	tblrd		*+
  5180  001BBA  CFF5 F083          	movff	tablat,___flmul@a+1
  5181  001BBE  0009               	tblrd		*+
  5182  001BC0  CFF5 F084          	movff	tablat,___flmul@a+2
  5183  001BC4  000A               	tblrd		*-
  5184  001BC6  CFF5 F085          	movff	tablat,___flmul@a+3
  5185  001BCA  C09F  F07E         	movff	_fround$2460,___flmul@b
  5186  001BCE  C0A0  F07F         	movff	_fround$2460+1,___flmul@b+1
  5187  001BD2  C0A1  F080         	movff	_fround$2460+2,___flmul@b+2
  5188  001BD6  C0A2  F081         	movff	_fround$2460+3,___flmul@b+3
  5189  001BDA  ECE4  F006         	call	___flmul	;wreg free
  5190  001BDE  C07E  F09B         	movff	?___flmul,_fround$2461
  5191  001BE2  C07F  F09C         	movff	?___flmul+1,_fround$2461+1
  5192  001BE6  C080  F09D         	movff	?___flmul+2,_fround$2461+2
  5193  001BEA  C081  F09E         	movff	?___flmul+3,_fround$2461+3
  5194                           
  5195                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5196  001BEE  C09B  F07E         	movff	_fround$2461,___flmul@b
  5197  001BF2  C09C  F07F         	movff	_fround$2461+1,___flmul@b+1
  5198  001BF6  C09D  F080         	movff	_fround$2461+2,___flmul@b+2
  5199  001BFA  C09E  F081         	movff	_fround$2461+3,___flmul@b+3
  5200  001BFE  0E00               	movlw	0
  5201  001C00  0100               	movlb	0	; () banked
  5202  001C02  6F82               	movwf	___flmul@a& (0+255),b
  5203  001C04  0E00               	movlw	0
  5204  001C06  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5205  001C08  0E00               	movlw	0
  5206  001C0A  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5207  001C0C  0E3F               	movlw	63
  5208  001C0E  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5209  001C10  ECE4  F006         	call	___flmul	;wreg free
  5210  001C14  C07E  F097         	movff	?___flmul,?_fround
  5211  001C18  C07F  F098         	movff	?___flmul+1,?_fround+1
  5212  001C1C  C080  F099         	movff	?___flmul+2,?_fround+2
  5213  001C20  C081  F09A         	movff	?___flmul+3,?_fround+3
  5214  001C24  0012               	return	
  5215  001C26                     l4783:
  5216                           
  5217                           ;doprnt.c: 415: else if(prec > 10)
  5218  001C26  0E0A               	movlw	10
  5219  001C28  0100               	movlb	0	; () banked
  5220  001C2A  65A3               	cpfsgt	fround@prec& (0+255),b
  5221  001C2C  D06C               	goto	l4791
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5225  001C2E  0E00               	movlw	0
  5226  001C30  6E3F               	movwf	___awmod@divisor+1,c
  5227  001C32  0E0A               	movlw	10
  5228  001C34  6E3E               	movwf	___awmod@divisor,c
  5229  001C36  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5230  001C3A  6A3D               	clrf	___awmod@dividend+1,c
  5231  001C3C  EC19  F016         	call	___awmod	;wreg free
  5232  001C40  90D8               	bcf	status,0,c
  5233  001C42  363C               	rlcf	?___awmod,f,c
  5234  001C44  363D               	rlcf	?___awmod+1,f,c
  5235  001C46  90D8               	bcf	status,0,c
  5236  001C48  363C               	rlcf	?___awmod,f,c
  5237  001C4A  363D               	rlcf	?___awmod+1,f,c
  5238  001C4C  0EEB               	movlw	low __npowers_
  5239  001C4E  243C               	addwf	?___awmod,w,c
  5240  001C50  6EF6               	movwf	tblptrl,c
  5241  001C52  0E3E               	movlw	high __npowers_
  5242  001C54  203D               	addwfc	?___awmod+1,w,c
  5243  001C56  6EF7               	movwf	tblptrh,c
  5244  001C58                     	if	0	;There are less than 3 active tblptr bytes
  5245  001C58                     	endif
  5246  001C58  0009               	tblrd		*+
  5247  001C5A  CFF5 F082          	movff	tablat,___flmul@a
  5248  001C5E  0009               	tblrd		*+
  5249  001C60  CFF5 F083          	movff	tablat,___flmul@a+1
  5250  001C64  0009               	tblrd		*+
  5251  001C66  CFF5 F084          	movff	tablat,___flmul@a+2
  5252  001C6A  000A               	tblrd		*-
  5253  001C6C  CFF5 F085          	movff	tablat,___flmul@a+3
  5254  001C70  0E00               	movlw	0
  5255  001C72  0100               	movlb	0	; () banked
  5256  001C74  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5257  001C76  0E0A               	movlw	10
  5258  001C78  6F72               	movwf	___awdiv@divisor& (0+255),b
  5259  001C7A  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5260  001C7E  0100               	movlb	0	; () banked
  5261  001C80  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5262  001C82  ECCD  F014         	call	___awdiv	;wreg free
  5263  001C86  0100               	movlb	0	; () banked
  5264  001C88  90D8               	bcf	status,0,c
  5265  001C8A  3770               	rlcf	?___awdiv& (0+255),f,b
  5266  001C8C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5267  001C8E  0100               	movlb	0	; () banked
  5268  001C90  90D8               	bcf	status,0,c
  5269  001C92  3770               	rlcf	?___awdiv& (0+255),f,b
  5270  001C94  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5271  001C96  0E24               	movlw	36
  5272  001C98  0100               	movlb	0	; () banked
  5273  001C9A  2770               	addwf	?___awdiv& (0+255),f,b
  5274  001C9C  0E00               	movlw	0
  5275  001C9E  0100               	movlb	0	; () banked
  5276  001CA0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5277  001CA2  0EEB               	movlw	low __npowers_
  5278  001CA4  0100               	movlb	0	; () banked
  5279  001CA6  2570               	addwf	?___awdiv& (0+255),w,b
  5280  001CA8  6EF6               	movwf	tblptrl,c
  5281  001CAA  0E3E               	movlw	high __npowers_
  5282  001CAC  0100               	movlb	0	; () banked
  5283  001CAE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5284  001CB0  6EF7               	movwf	tblptrh,c
  5285  001CB2                     	if	0	;There are less than 3 active tblptr bytes
  5286  001CB2                     	endif
  5287  001CB2  0009               	tblrd		*+
  5288  001CB4  CFF5 F07E          	movff	tablat,___flmul@b
  5289  001CB8  0009               	tblrd		*+
  5290  001CBA  CFF5 F07F          	movff	tablat,___flmul@b+1
  5291  001CBE  0009               	tblrd		*+
  5292  001CC0  CFF5 F080          	movff	tablat,___flmul@b+2
  5293  001CC4  000A               	tblrd		*-
  5294  001CC6  CFF5 F081          	movff	tablat,___flmul@b+3
  5295  001CCA  ECE4  F006         	call	___flmul	;wreg free
  5296  001CCE  C07E  F09F         	movff	?___flmul,_fround$2460
  5297  001CD2  C07F  F0A0         	movff	?___flmul+1,_fround$2460+1
  5298  001CD6  C080  F0A1         	movff	?___flmul+2,_fround$2460+2
  5299  001CDA  C081  F0A2         	movff	?___flmul+3,_fround$2460+3
  5300                           
  5301                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5302  001CDE  C09F  F07E         	movff	_fround$2460,___flmul@b
  5303  001CE2  C0A0  F07F         	movff	_fround$2460+1,___flmul@b+1
  5304  001CE6  C0A1  F080         	movff	_fround$2460+2,___flmul@b+2
  5305  001CEA  C0A2  F081         	movff	_fround$2460+3,___flmul@b+3
  5306  001CEE  0E00               	movlw	0
  5307  001CF0  0100               	movlb	0	; () banked
  5308  001CF2  6F82               	movwf	___flmul@a& (0+255),b
  5309  001CF4  0E00               	movlw	0
  5310  001CF6  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5311  001CF8  0E00               	movlw	0
  5312  001CFA  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5313  001CFC  0E3F               	movlw	63
  5314  001CFE  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5315  001D00  ECE4  F006         	call	___flmul	;wreg free
  5316  001D04  D787               	goto	L6
  5317  001D06                     l4791:
  5318                           
  5319                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5320  001D06  0100               	movlb	0	; () banked
  5321  001D08  51A3               	movf	fround@prec& (0+255),w,b
  5322  001D0A  0D04               	mullw	4
  5323  001D0C  0EEB               	movlw	low __npowers_
  5324  001D0E  24F3               	addwf	prodl,w,c
  5325  001D10  6EF6               	movwf	tblptrl,c
  5326  001D12  0E3E               	movlw	high __npowers_
  5327  001D14  20F4               	addwfc	prodh,w,c
  5328  001D16  6EF7               	movwf	tblptrh,c
  5329  001D18                     	if	0	;There are less than 3 active tblptr bytes
  5330  001D18                     	endif
  5331  001D18  0009               	tblrd		*+
  5332  001D1A  CFF5 F07E          	movff	tablat,___flmul@b
  5333  001D1E  0009               	tblrd		*+
  5334  001D20  CFF5 F07F          	movff	tablat,___flmul@b+1
  5335  001D24  0009               	tblrd		*+
  5336  001D26  CFF5 F080          	movff	tablat,___flmul@b+2
  5337  001D2A  000A               	tblrd		*-
  5338  001D2C  CFF5 F081          	movff	tablat,___flmul@b+3
  5339  001D30  0E00               	movlw	0
  5340  001D32  0100               	movlb	0	; () banked
  5341  001D34  6F82               	movwf	___flmul@a& (0+255),b
  5342  001D36  0E00               	movlw	0
  5343  001D38  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5344  001D3A  0E00               	movlw	0
  5345  001D3C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5346  001D3E  0E3F               	movlw	63
  5347  001D40  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5348  001D42  ECE4  F006         	call	___flmul	;wreg free
  5349  001D46  C07E  F097         	movff	?___flmul,?_fround
  5350  001D4A  C07F  F098         	movff	?___flmul+1,?_fround+1
  5351  001D4E  C080  F099         	movff	?___flmul+2,?_fround+2
  5352  001D52  C081  F09A         	movff	?___flmul+3,?_fround+3
  5353  001D56  0012               	return	
  5354  001D58                     __end_of_fround:
  5355                           	opt stack 0
  5356                           tblptru	equ	0xFF8
  5357                           tblptrh	equ	0xFF7
  5358                           tblptrl	equ	0xFF6
  5359                           tablat	equ	0xFF5
  5360                           prodh	equ	0xFF4
  5361                           prodl	equ	0xFF3
  5362                           intcon	equ	0xFF2
  5363                           postinc0	equ	0xFEE
  5364                           wreg	equ	0xFE8
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function ___flmul *****************
  5372 ;; Defined at:
  5373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  b               4   30[BANK0 ] unsigned char 
  5376 ;;  a               4   34[BANK0 ] unsigned char 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  prod            4   49[BANK0 ] struct .
  5379 ;;  grs             4   44[BANK0 ] unsigned long 
  5380 ;;  temp            2   53[BANK0 ] struct .
  5381 ;;  bexp            1   48[BANK0 ] unsigned char 
  5382 ;;  aexp            1   43[BANK0 ] unsigned char 
  5383 ;;  sign            1   42[BANK0 ] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4   30[BANK0 ] unsigned char 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, prodl, prodh
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5393 ;;      Params:         0       8       0       0
  5394 ;;      Locals:         0      13       0       0
  5395 ;;      Temps:          0       4       0       0
  5396 ;;      Totals:         0      25       0       0
  5397 ;;Total ram usage:       25 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    4
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;;		_fround
  5405 ;;		_scale
  5406 ;;		_sprintf
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text16
  5411  000DC8                     __ptext16:
  5412                           	opt stack 0
  5413  000DC8                     ___flmul:
  5414                           	opt stack 26
  5415                           
  5416                           ;incstack = 0
  5417  000DC8  0100               	movlb	0	; () banked
  5418  000DCA  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5419  000DCC  0B80               	andlw	128
  5420  000DCE  0100               	movlb	0	; () banked
  5421  000DD0  6F8A               	movwf	___flmul@sign& (0+255),b
  5422  000DD2  0100               	movlb	0	; () banked
  5423  000DD4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5424  000DD6  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5425  000DD8  0100               	movlb	0	; () banked
  5426  000DDA  6F90               	movwf	___flmul@bexp& (0+255),b
  5427                           
  5428                           ; BSR set to: 0
  5429  000DDC  0100               	movlb	0	; () banked
  5430  000DDE  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5431  000DE0  D002               	goto	l4547
  5432                           
  5433                           ; BSR set to: 0
  5434  000DE2  0100               	movlb	0	; () banked
  5435  000DE4  8190               	bsf	___flmul@bexp& (0+255),0,b
  5436  000DE6                     l4547:
  5437                           
  5438                           ; BSR set to: 0
  5439  000DE6  0100               	movlb	0	; () banked
  5440  000DE8  5190               	movf	___flmul@bexp& (0+255),w,b
  5441  000DEA  0100               	movlb	0	; () banked
  5442  000DEC  B4D8               	btfsc	status,2,c
  5443  000DEE  D010               	goto	l4555
  5444                           
  5445                           ; BSR set to: 0
  5446  000DF0  0100               	movlb	0	; () banked
  5447  000DF2  2990               	incf	___flmul@bexp& (0+255),w,b
  5448  000DF4  A4D8               	btfss	status,2,c
  5449  000DF6  D009               	goto	l4553
  5450                           
  5451                           ; BSR set to: 0
  5452  000DF8  0E00               	movlw	0
  5453  000DFA  0100               	movlb	0	; () banked
  5454  000DFC  6F7E               	movwf	___flmul@b& (0+255),b
  5455  000DFE  0E00               	movlw	0
  5456  000E00  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5457  000E02  0E00               	movlw	0
  5458  000E04  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5459  000E06  0E00               	movlw	0
  5460  000E08  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5461  000E0A                     l4553:
  5462                           
  5463                           ; BSR set to: 0
  5464  000E0A  0100               	movlb	0	; () banked
  5465  000E0C  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5466  000E0E  D009               	goto	l4557
  5467  000E10                     l4555:
  5468                           
  5469                           ; BSR set to: 0
  5470  000E10  0E00               	movlw	0
  5471  000E12  0100               	movlb	0	; () banked
  5472  000E14  6F7E               	movwf	___flmul@b& (0+255),b
  5473  000E16  0E00               	movlw	0
  5474  000E18  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5475  000E1A  0E00               	movlw	0
  5476  000E1C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5477  000E1E  0E00               	movlw	0
  5478  000E20  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5479  000E22                     l4557:
  5480                           
  5481                           ; BSR set to: 0
  5482  000E22  0100               	movlb	0	; () banked
  5483  000E24  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5484  000E26  0B80               	andlw	128
  5485  000E28  0100               	movlb	0	; () banked
  5486  000E2A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5487                           
  5488                           ; BSR set to: 0
  5489  000E2C  0100               	movlb	0	; () banked
  5490  000E2E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5491  000E30  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5492  000E32  0100               	movlb	0	; () banked
  5493  000E34  6F8B               	movwf	___flmul@aexp& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496  000E36  0100               	movlb	0	; () banked
  5497  000E38  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5498  000E3A  D002               	goto	l4565
  5499                           
  5500                           ; BSR set to: 0
  5501  000E3C  0100               	movlb	0	; () banked
  5502  000E3E  818B               	bsf	___flmul@aexp& (0+255),0,b
  5503  000E40                     l4565:
  5504                           
  5505                           ; BSR set to: 0
  5506  000E40  0100               	movlb	0	; () banked
  5507  000E42  518B               	movf	___flmul@aexp& (0+255),w,b
  5508  000E44  0100               	movlb	0	; () banked
  5509  000E46  B4D8               	btfsc	status,2,c
  5510  000E48  D010               	goto	l4573
  5511                           
  5512                           ; BSR set to: 0
  5513  000E4A  0100               	movlb	0	; () banked
  5514  000E4C  298B               	incf	___flmul@aexp& (0+255),w,b
  5515  000E4E  A4D8               	btfss	status,2,c
  5516  000E50  D009               	goto	l4571
  5517                           
  5518                           ; BSR set to: 0
  5519  000E52  0E00               	movlw	0
  5520  000E54  0100               	movlb	0	; () banked
  5521  000E56  6F82               	movwf	___flmul@a& (0+255),b
  5522  000E58  0E00               	movlw	0
  5523  000E5A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5524  000E5C  0E00               	movlw	0
  5525  000E5E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5526  000E60  0E00               	movlw	0
  5527  000E62  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5528  000E64                     l4571:
  5529                           
  5530                           ; BSR set to: 0
  5531  000E64  0100               	movlb	0	; () banked
  5532  000E66  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5533  000E68  D009               	goto	l1053
  5534  000E6A                     l4573:
  5535                           
  5536                           ; BSR set to: 0
  5537  000E6A  0E00               	movlw	0
  5538  000E6C  0100               	movlb	0	; () banked
  5539  000E6E  6F82               	movwf	___flmul@a& (0+255),b
  5540  000E70  0E00               	movlw	0
  5541  000E72  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5542  000E74  0E00               	movlw	0
  5543  000E76  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5544  000E78  0E00               	movlw	0
  5545  000E7A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5546  000E7C                     l1053:
  5547                           
  5548                           ; BSR set to: 0
  5549  000E7C  0100               	movlb	0	; () banked
  5550  000E7E  518B               	movf	___flmul@aexp& (0+255),w,b
  5551  000E80  0100               	movlb	0	; () banked
  5552  000E82  B4D8               	btfsc	status,2,c
  5553  000E84  D005               	goto	l4577
  5554                           
  5555                           ; BSR set to: 0
  5556  000E86  0100               	movlb	0	; () banked
  5557  000E88  5190               	movf	___flmul@bexp& (0+255),w,b
  5558  000E8A  0100               	movlb	0	; () banked
  5559  000E8C  A4D8               	btfss	status,2,c
  5560  000E8E  D00A               	goto	l4581
  5561  000E90                     l4577:
  5562                           
  5563                           ; BSR set to: 0
  5564  000E90  0E00               	movlw	0
  5565  000E92  0100               	movlb	0	; () banked
  5566  000E94  6F7E               	movwf	?___flmul& (0+255),b
  5567  000E96  0E00               	movlw	0
  5568  000E98  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5569  000E9A  0E00               	movlw	0
  5570  000E9C  6F80               	movwf	(?___flmul+2)& (0+255),b
  5571  000E9E  0E00               	movlw	0
  5572  000EA0  6F81               	movwf	(?___flmul+3)& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575  000EA2  0012               	return	
  5576  000EA4                     l4581:
  5577                           
  5578                           ; BSR set to: 0
  5579  000EA4  0100               	movlb	0	; () banked
  5580  000EA6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5581  000EA8  0100               	movlb	0	; () banked
  5582  000EAA  037E               	mulwf	___flmul@b& (0+255),b
  5583  000EAC  CFF3 F095          	movff	prodl,___flmul@temp
  5584  000EB0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5585                           
  5586                           ; BSR set to: 0
  5587  000EB4  0100               	movlb	0	; () banked
  5588  000EB6  5195               	movf	___flmul@temp& (0+255),w,b
  5589  000EB8  0100               	movlb	0	; () banked
  5590  000EBA  6F8C               	movwf	___flmul@grs& (0+255),b
  5591  000EBC  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5592  000EBE  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5593  000EC0  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596  000EC2  0100               	movlb	0	; () banked
  5597  000EC4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5598  000EC6  0100               	movlb	0	; () banked
  5599  000EC8  6F91               	movwf	___flmul@prod& (0+255),b
  5600  000ECA  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5601  000ECC  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5602  000ECE  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5603  000ED0  0100               	movlb	0	; () banked
  5604  000ED2  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5605  000ED4  0100               	movlb	0	; () banked
  5606  000ED6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5607  000ED8  CFF3 F095          	movff	prodl,___flmul@temp
  5608  000EDC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5609                           
  5610                           ; BSR set to: 0
  5611  000EE0  0100               	movlb	0	; () banked
  5612  000EE2  5195               	movf	___flmul@temp& (0+255),w,b
  5613  000EE4  0100               	movlb	0	; () banked
  5614  000EE6  278C               	addwf	___flmul@grs& (0+255),f,b
  5615  000EE8  0E00               	movlw	0
  5616  000EEA  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5617  000EEC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5618  000EEE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5619                           
  5620                           ; BSR set to: 0
  5621  000EF0  0100               	movlb	0	; () banked
  5622  000EF2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5623  000EF4  0100               	movlb	0	; () banked
  5624  000EF6  2791               	addwf	___flmul@prod& (0+255),f,b
  5625  000EF8  0E00               	movlw	0
  5626  000EFA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5627  000EFC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5628  000EFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5629  000F00  0100               	movlb	0	; () banked
  5630  000F02  5182               	movf	___flmul@a& (0+255),w,b
  5631  000F04  0100               	movlb	0	; () banked
  5632  000F06  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5633  000F08  CFF3 F095          	movff	prodl,___flmul@temp
  5634  000F0C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5635                           
  5636                           ; BSR set to: 0
  5637  000F10  0100               	movlb	0	; () banked
  5638  000F12  5195               	movf	___flmul@temp& (0+255),w,b
  5639  000F14  0100               	movlb	0	; () banked
  5640  000F16  278C               	addwf	___flmul@grs& (0+255),f,b
  5641  000F18  0E00               	movlw	0
  5642  000F1A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5643  000F1C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5644  000F1E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5645                           
  5646                           ; BSR set to: 0
  5647  000F20  0100               	movlb	0	; () banked
  5648  000F22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5649  000F24  0100               	movlb	0	; () banked
  5650  000F26  2791               	addwf	___flmul@prod& (0+255),f,b
  5651  000F28  0E00               	movlw	0
  5652  000F2A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5653  000F2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5654  000F2E  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5655                           
  5656                           ; BSR set to: 0
  5657  000F30  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5658  000F34  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5659  000F38  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5660  000F3C  0100               	movlb	0	; () banked
  5661  000F3E  6B8C               	clrf	___flmul@grs& (0+255),b
  5662                           
  5663                           ; BSR set to: 0
  5664  000F40  0100               	movlb	0	; () banked
  5665  000F42  5182               	movf	___flmul@a& (0+255),w,b
  5666  000F44  0100               	movlb	0	; () banked
  5667  000F46  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5668  000F48  CFF3 F095          	movff	prodl,___flmul@temp
  5669  000F4C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5670                           
  5671                           ; BSR set to: 0
  5672  000F50  0100               	movlb	0	; () banked
  5673  000F52  5195               	movf	___flmul@temp& (0+255),w,b
  5674  000F54  0100               	movlb	0	; () banked
  5675  000F56  278C               	addwf	___flmul@grs& (0+255),f,b
  5676  000F58  0100               	movlb	0	; () banked
  5677  000F5A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5678  000F5C  0100               	movlb	0	; () banked
  5679  000F5E  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5680  000F60  0E00               	movlw	0
  5681  000F62  0100               	movlb	0	; () banked
  5682  000F64  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5683  000F66  0E00               	movlw	0
  5684  000F68  0100               	movlb	0	; () banked
  5685  000F6A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5686                           
  5687                           ; BSR set to: 0
  5688  000F6C  0100               	movlb	0	; () banked
  5689  000F6E  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5690  000F70  0100               	movlb	0	; () banked
  5691  000F72  037E               	mulwf	___flmul@b& (0+255),b
  5692  000F74  CFF3 F095          	movff	prodl,___flmul@temp
  5693  000F78  CFF4 F096          	movff	prodh,___flmul@temp+1
  5694                           
  5695                           ; BSR set to: 0
  5696  000F7C  0100               	movlb	0	; () banked
  5697  000F7E  5195               	movf	___flmul@temp& (0+255),w,b
  5698  000F80  0100               	movlb	0	; () banked
  5699  000F82  278C               	addwf	___flmul@grs& (0+255),f,b
  5700  000F84  0100               	movlb	0	; () banked
  5701  000F86  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5702  000F88  0100               	movlb	0	; () banked
  5703  000F8A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5704  000F8C  0E00               	movlw	0
  5705  000F8E  0100               	movlb	0	; () banked
  5706  000F90  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5707  000F92  0E00               	movlw	0
  5708  000F94  0100               	movlb	0	; () banked
  5709  000F96  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5710                           
  5711                           ; BSR set to: 0
  5712  000F98  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5713  000F9C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5714  000FA0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5715  000FA4  0100               	movlb	0	; () banked
  5716  000FA6  6B8C               	clrf	___flmul@grs& (0+255),b
  5717  000FA8  0100               	movlb	0	; () banked
  5718  000FAA  5182               	movf	___flmul@a& (0+255),w,b
  5719  000FAC  0100               	movlb	0	; () banked
  5720  000FAE  037E               	mulwf	___flmul@b& (0+255),b
  5721  000FB0  CFF3 F095          	movff	prodl,___flmul@temp
  5722  000FB4  CFF4 F096          	movff	prodh,___flmul@temp+1
  5723                           
  5724                           ; BSR set to: 0
  5725  000FB8  0100               	movlb	0	; () banked
  5726  000FBA  5195               	movf	___flmul@temp& (0+255),w,b
  5727  000FBC  0100               	movlb	0	; () banked
  5728  000FBE  278C               	addwf	___flmul@grs& (0+255),f,b
  5729  000FC0  0100               	movlb	0	; () banked
  5730  000FC2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5731  000FC4  0100               	movlb	0	; () banked
  5732  000FC6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5733  000FC8  0E00               	movlw	0
  5734  000FCA  0100               	movlb	0	; () banked
  5735  000FCC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5736  000FCE  0E00               	movlw	0
  5737  000FD0  0100               	movlb	0	; () banked
  5738  000FD2  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5739                           
  5740                           ; BSR set to: 0
  5741  000FD4  0100               	movlb	0	; () banked
  5742  000FD6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5743  000FD8  0100               	movlb	0	; () banked
  5744  000FDA  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5745  000FDC  CFF3 F095          	movff	prodl,___flmul@temp
  5746  000FE0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5747  000FE4  0100               	movlb	0	; () banked
  5748  000FE6  5195               	movf	___flmul@temp& (0+255),w,b
  5749  000FE8  0100               	movlb	0	; () banked
  5750  000FEA  2791               	addwf	___flmul@prod& (0+255),f,b
  5751  000FEC  0100               	movlb	0	; () banked
  5752  000FEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5753  000FF0  0100               	movlb	0	; () banked
  5754  000FF2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5755  000FF4  0E00               	movlw	0
  5756  000FF6  0100               	movlb	0	; () banked
  5757  000FF8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5758  000FFA  0E00               	movlw	0
  5759  000FFC  0100               	movlb	0	; () banked
  5760  000FFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5761                           
  5762                           ; BSR set to: 0
  5763  001000  0100               	movlb	0	; () banked
  5764  001002  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5765  001004  0100               	movlb	0	; () banked
  5766  001006  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5767  001008  CFF3 F095          	movff	prodl,___flmul@temp
  5768  00100C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5769                           
  5770                           ; BSR set to: 0
  5771  001010  0100               	movlb	0	; () banked
  5772  001012  5195               	movf	___flmul@temp& (0+255),w,b
  5773  001014  0100               	movlb	0	; () banked
  5774  001016  2791               	addwf	___flmul@prod& (0+255),f,b
  5775  001018  0100               	movlb	0	; () banked
  5776  00101A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5777  00101C  0100               	movlb	0	; () banked
  5778  00101E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5779  001020  0E00               	movlw	0
  5780  001022  0100               	movlb	0	; () banked
  5781  001024  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5782  001026  0E00               	movlw	0
  5783  001028  0100               	movlb	0	; () banked
  5784  00102A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5785  00102C  0100               	movlb	0	; () banked
  5786  00102E  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5787  001030  0100               	movlb	0	; () banked
  5788  001032  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5789  001034  CFF3 F095          	movff	prodl,___flmul@temp
  5790  001038  CFF4 F096          	movff	prodh,___flmul@temp+1
  5791                           
  5792                           ; BSR set to: 0
  5793  00103C  0100               	movlb	0	; () banked
  5794  00103E  5195               	movf	___flmul@temp& (0+255),w,b
  5795  001040  0100               	movlb	0	; () banked
  5796  001042  6F86               	movwf	??___flmul& (0+255),b
  5797  001044  0100               	movlb	0	; () banked
  5798  001046  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5799  001048  0100               	movlb	0	; () banked
  5800  00104A  6F87               	movwf	(??___flmul+1)& (0+255),b
  5801  00104C  0100               	movlb	0	; () banked
  5802  00104E  6B88               	clrf	(??___flmul+2)& (0+255),b
  5803  001050  0100               	movlb	0	; () banked
  5804  001052  6B89               	clrf	(??___flmul+3)& (0+255),b
  5805  001054  C088  F089         	movff	??___flmul+2,??___flmul+3
  5806  001058  C087  F088         	movff	??___flmul+1,??___flmul+2
  5807  00105C  C086  F087         	movff	??___flmul,??___flmul+1
  5808  001060  0100               	movlb	0	; () banked
  5809  001062  6B86               	clrf	??___flmul& (0+255),b
  5810  001064  0100               	movlb	0	; () banked
  5811  001066  5186               	movf	??___flmul& (0+255),w,b
  5812  001068  0100               	movlb	0	; () banked
  5813  00106A  2791               	addwf	___flmul@prod& (0+255),f,b
  5814  00106C  0100               	movlb	0	; () banked
  5815  00106E  5187               	movf	(??___flmul+1)& (0+255),w,b
  5816  001070  0100               	movlb	0	; () banked
  5817  001072  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5818  001074  0100               	movlb	0	; () banked
  5819  001076  5188               	movf	(??___flmul+2)& (0+255),w,b
  5820  001078  0100               	movlb	0	; () banked
  5821  00107A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5822  00107C  0100               	movlb	0	; () banked
  5823  00107E  5189               	movf	(??___flmul+3)& (0+255),w,b
  5824  001080  0100               	movlb	0	; () banked
  5825  001082  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5826                           
  5827                           ; BSR set to: 0
  5828  001084  C08C  F086         	movff	___flmul@grs,??___flmul
  5829  001088  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5830  00108C  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5831  001090  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5832  001094  0E19               	movlw	25
  5833  001096  D006               	goto	u5190
  5834  001098                     u5195:
  5835  001098  0100               	movlb	0	; () banked
  5836  00109A  90D8               	bcf	status,0,c
  5837  00109C  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5838  00109E  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5839  0010A0  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5840  0010A2  3386               	rrcf	??___flmul& (0+255),f,b
  5841  0010A4                     u5190:
  5842  0010A4  2EE8               	decfsz	wreg,f,c
  5843  0010A6  D7F8               	goto	u5195
  5844  0010A8  0100               	movlb	0	; () banked
  5845  0010AA  5186               	movf	??___flmul& (0+255),w,b
  5846  0010AC  0100               	movlb	0	; () banked
  5847  0010AE  2791               	addwf	___flmul@prod& (0+255),f,b
  5848  0010B0  0100               	movlb	0	; () banked
  5849  0010B2  5187               	movf	(??___flmul+1)& (0+255),w,b
  5850  0010B4  0100               	movlb	0	; () banked
  5851  0010B6  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5852  0010B8  0100               	movlb	0	; () banked
  5853  0010BA  5188               	movf	(??___flmul+2)& (0+255),w,b
  5854  0010BC  0100               	movlb	0	; () banked
  5855  0010BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5856  0010C0  0100               	movlb	0	; () banked
  5857  0010C2  5189               	movf	(??___flmul+3)& (0+255),w,b
  5858  0010C4  0100               	movlb	0	; () banked
  5859  0010C6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5860                           
  5861                           ; BSR set to: 0
  5862  0010C8  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5863  0010CC  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5864  0010D0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5865  0010D4  0100               	movlb	0	; () banked
  5866  0010D6  6B8C               	clrf	___flmul@grs& (0+255),b
  5867                           
  5868                           ; BSR set to: 0
  5869  0010D8  0100               	movlb	0	; () banked
  5870  0010DA  518B               	movf	___flmul@aexp& (0+255),w,b
  5871  0010DC  C090  F086         	movff	___flmul@bexp,??___flmul
  5872  0010E0  0100               	movlb	0	; () banked
  5873  0010E2  6B87               	clrf	(??___flmul+1)& (0+255),b
  5874  0010E4  0100               	movlb	0	; () banked
  5875  0010E6  2786               	addwf	??___flmul& (0+255),f,b
  5876  0010E8  0E00               	movlw	0
  5877  0010EA  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5878  0010EC  0E82               	movlw	130
  5879  0010EE  0100               	movlb	0	; () banked
  5880  0010F0  2586               	addwf	??___flmul& (0+255),w,b
  5881  0010F2  0100               	movlb	0	; () banked
  5882  0010F4  6F95               	movwf	___flmul@temp& (0+255),b
  5883  0010F6  0EFF               	movlw	255
  5884  0010F8  0100               	movlb	0	; () banked
  5885  0010FA  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5886  0010FC  0100               	movlb	0	; () banked
  5887  0010FE  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5888  001100  D015               	goto	l4629
  5889  001102                     l4623:
  5890                           
  5891                           ; BSR set to: 0
  5892  001102  0100               	movlb	0	; () banked
  5893  001104  90D8               	bcf	status,0,c
  5894  001106  3791               	rlcf	___flmul@prod& (0+255),f,b
  5895  001108  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5896  00110A  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5897  00110C  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5898                           
  5899                           ; BSR set to: 0
  5900  00110E  0100               	movlb	0	; () banked
  5901  001110  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5902  001112  D002               	goto	l1060
  5903                           
  5904                           ; BSR set to: 0
  5905  001114  0100               	movlb	0	; () banked
  5906  001116  8191               	bsf	___flmul@prod& (0+255),0,b
  5907  001118                     l1060:
  5908                           
  5909                           ; BSR set to: 0
  5910  001118  0100               	movlb	0	; () banked
  5911  00111A  90D8               	bcf	status,0,c
  5912  00111C  378C               	rlcf	___flmul@grs& (0+255),f,b
  5913  00111E  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5914  001120  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5915  001122  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5916  001124  0100               	movlb	0	; () banked
  5917  001126  0795               	decf	___flmul@temp& (0+255),f,b
  5918  001128  A0D8               	btfss	status,0,c
  5919  00112A  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5920  00112C                     l4629:
  5921                           
  5922                           ; BSR set to: 0
  5923  00112C  0100               	movlb	0	; () banked
  5924  00112E  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5925  001130  D7E8               	goto	l4623
  5926                           
  5927                           ; BSR set to: 0
  5928                           
  5929                           ; BSR set to: 0
  5930  001132  0E00               	movlw	0
  5931  001134  0100               	movlb	0	; () banked
  5932  001136  6F8B               	movwf	___flmul@aexp& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935  001138  0100               	movlb	0	; () banked
  5936  00113A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5937  00113C  D024               	goto	l1062
  5938                           
  5939                           ; BSR set to: 0
  5940  00113E  0EFF               	movlw	255
  5941  001140  0100               	movlb	0	; () banked
  5942  001142  158C               	andwf	___flmul@grs& (0+255),w,b
  5943  001144  0100               	movlb	0	; () banked
  5944  001146  6F86               	movwf	??___flmul& (0+255),b
  5945  001148  0EFF               	movlw	255
  5946  00114A  0100               	movlb	0	; () banked
  5947  00114C  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5948  00114E  0100               	movlb	0	; () banked
  5949  001150  6F87               	movwf	(??___flmul+1)& (0+255),b
  5950  001152  0EFF               	movlw	255
  5951  001154  0100               	movlb	0	; () banked
  5952  001156  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5953  001158  0100               	movlb	0	; () banked
  5954  00115A  6F88               	movwf	(??___flmul+2)& (0+255),b
  5955  00115C  0E7F               	movlw	127
  5956  00115E  0100               	movlb	0	; () banked
  5957  001160  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5958  001162  0100               	movlb	0	; () banked
  5959  001164  6F89               	movwf	(??___flmul+3)& (0+255),b
  5960  001166  0100               	movlb	0	; () banked
  5961  001168  5186               	movf	??___flmul& (0+255),w,b
  5962  00116A  0100               	movlb	0	; () banked
  5963  00116C  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5964  00116E  0100               	movlb	0	; () banked
  5965  001170  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5966  001172  0100               	movlb	0	; () banked
  5967  001174  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5968  001176  A4D8               	btfss	status,2,c
  5969  001178  D003               	goto	l4639
  5970                           
  5971                           ; BSR set to: 0
  5972                           
  5973                           ; BSR set to: 0
  5974  00117A  0100               	movlb	0	; () banked
  5975  00117C  A191               	btfss	___flmul@prod& (0+255),0,b
  5976  00117E  D003               	goto	l1062
  5977  001180                     l4639:
  5978                           
  5979                           ; BSR set to: 0
  5980  001180  0E01               	movlw	1
  5981  001182  0100               	movlb	0	; () banked
  5982  001184  6F8B               	movwf	___flmul@aexp& (0+255),b
  5983  001186                     l1062:
  5984                           
  5985                           ; BSR set to: 0
  5986  001186  0100               	movlb	0	; () banked
  5987  001188  518B               	movf	___flmul@aexp& (0+255),w,b
  5988  00118A  0100               	movlb	0	; () banked
  5989  00118C  B4D8               	btfsc	status,2,c
  5990  00118E  D023               	goto	l4649
  5991                           
  5992                           ; BSR set to: 0
  5993  001190  0E01               	movlw	1
  5994  001192  0100               	movlb	0	; () banked
  5995  001194  2791               	addwf	___flmul@prod& (0+255),f,b
  5996  001196  0E00               	movlw	0
  5997  001198  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5998  00119A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5999  00119C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6000                           
  6001                           ; BSR set to: 0
  6002  00119E  0100               	movlb	0	; () banked
  6003  0011A0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  6004  0011A2  D019               	goto	l4649
  6005                           
  6006                           ; BSR set to: 0
  6007  0011A4  C091  F086         	movff	___flmul@prod,??___flmul
  6008  0011A8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  6009  0011AC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  6010  0011B0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  6011  0011B4  0100               	movlb	0	; () banked
  6012  0011B6  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  6013  0011B8  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  6014  0011BA  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  6015  0011BC  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  6016  0011BE  3386               	rrcf	??___flmul& (0+255),f,b
  6017  0011C0  C086  F091         	movff	??___flmul,___flmul@prod
  6018  0011C4  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  6019  0011C8  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  6020  0011CC  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  6021                           
  6022                           ; BSR set to: 0
  6023  0011D0  0100               	movlb	0	; () banked
  6024  0011D2  4B95               	infsnz	___flmul@temp& (0+255),f,b
  6025  0011D4  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  6026  0011D6                     l4649:
  6027                           
  6028                           ; BSR set to: 0
  6029  0011D6  0100               	movlb	0	; () banked
  6030  0011D8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6031  0011DA  D010               	goto	l4653
  6032  0011DC  0100               	movlb	0	; () banked
  6033  0011DE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6034  0011E0  E104               	bnz	u5270
  6035  0011E2  0100               	movlb	0	; () banked
  6036  0011E4  2995               	incf	___flmul@temp& (0+255),w,b
  6037  0011E6  A0D8               	btfss	status,0,c
  6038  0011E8  D009               	goto	l4653
  6039  0011EA                     u5270:
  6040                           
  6041                           ; BSR set to: 0
  6042  0011EA  0E00               	movlw	0
  6043  0011EC  0100               	movlb	0	; () banked
  6044  0011EE  6F91               	movwf	___flmul@prod& (0+255),b
  6045  0011F0  0E00               	movlw	0
  6046  0011F2  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6047  0011F4  0E80               	movlw	128
  6048  0011F6  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6049  0011F8  0E7F               	movlw	127
  6050  0011FA  D02B               	goto	L7
  6051  0011FC                     l4653:
  6052                           
  6053                           ; BSR set to: 0
  6054  0011FC  0100               	movlb	0	; () banked
  6055  0011FE  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6056  001200  D007               	goto	l4655
  6057  001202  0100               	movlb	0	; () banked
  6058  001204  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6059  001206  E111               	bnz	l1070
  6060  001208  0100               	movlb	0	; () banked
  6061  00120A  0595               	decf	___flmul@temp& (0+255),w,b
  6062  00120C  B0D8               	btfsc	status,0,c
  6063  00120E  D00D               	goto	l1070
  6064  001210                     l4655:
  6065                           
  6066                           ; BSR set to: 0
  6067  001210  0E00               	movlw	0
  6068  001212  0100               	movlb	0	; () banked
  6069  001214  6F91               	movwf	___flmul@prod& (0+255),b
  6070  001216  0E00               	movlw	0
  6071  001218  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6072  00121A  0E00               	movlw	0
  6073  00121C  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6074  00121E  0E00               	movlw	0
  6075  001220  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6076  001222  0E00               	movlw	0
  6077  001224  0100               	movlb	0	; () banked
  6078  001226  6F8A               	movwf	___flmul@sign& (0+255),b
  6079  001228  D015               	goto	l4665
  6080  00122A                     l1070:
  6081                           
  6082                           ; BSR set to: 0
  6083  00122A  C095  F090         	movff	___flmul@temp,___flmul@bexp
  6084                           
  6085                           ; BSR set to: 0
  6086  00122E  0EFF               	movlw	255
  6087  001230  0100               	movlb	0	; () banked
  6088  001232  1791               	andwf	___flmul@prod& (0+255),f,b
  6089  001234  0EFF               	movlw	255
  6090  001236  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  6091  001238  0E7F               	movlw	127
  6092  00123A  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  6093  00123C  0E00               	movlw	0
  6094  00123E  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  6095                           
  6096                           ; BSR set to: 0
  6097  001240  0100               	movlb	0	; () banked
  6098  001242  A190               	btfss	___flmul@bexp& (0+255),0,b
  6099  001244  D002               	goto	l4663
  6100                           
  6101                           ; BSR set to: 0
  6102  001246  0100               	movlb	0	; () banked
  6103  001248  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  6104  00124A                     l4663:
  6105                           
  6106                           ; BSR set to: 0
  6107  00124A  0100               	movlb	0	; () banked
  6108  00124C  90D8               	bcf	status,0,c
  6109  00124E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6110  001250  0100               	movlb	0	; () banked
  6111  001252                     L7:
  6112  001252  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6113  001254                     l4665:
  6114                           
  6115                           ; BSR set to: 0
  6116  001254  0100               	movlb	0	; () banked
  6117  001256  518A               	movf	___flmul@sign& (0+255),w,b
  6118  001258  0100               	movlb	0	; () banked
  6119  00125A  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6120                           
  6121                           ; BSR set to: 0
  6122  00125C  C091  F07E         	movff	___flmul@prod,?___flmul
  6123  001260  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6124  001264  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6125  001268  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6126  00126C  0012               	return	
  6127  00126E                     __end_of___flmul:
  6128                           	opt stack 0
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           postinc0	equ	0xFEE
  6137                           wreg	equ	0xFE8
  6138                           indf2	equ	0xFDF
  6139                           postinc2	equ	0xFDE
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function ___awmod *****************
  6145 ;; Defined at:
  6146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  dividend        2   24[COMRAM] int 
  6149 ;;  divisor         2   26[COMRAM] int 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  sign            1   29[COMRAM] unsigned char 
  6152 ;;  counter         1   28[COMRAM] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  2   24[COMRAM] int 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6162 ;;      Params:         4       0       0       0
  6163 ;;      Locals:         2       0       0       0
  6164 ;;      Temps:          0       0       0       0
  6165 ;;      Totals:         6       0       0       0
  6166 ;;Total ram usage:        6 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    4
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_fround
  6173 ;;		_scale
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text17
  6178  002C32                     __ptext17:
  6179                           	opt stack 0
  6180  002C32                     ___awmod:
  6181                           	opt stack 23
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;incstack = 0
  6185  002C32  0E00               	movlw	0
  6186  002C34  6E41               	movwf	___awmod@sign,c
  6187  002C36  AE3D               	btfss	___awmod@dividend+1,7,c
  6188  002C38  D006               	goto	l4723
  6189  002C3A  6C3C               	negf	___awmod@dividend,c
  6190  002C3C  1E3D               	comf	___awmod@dividend+1,f,c
  6191  002C3E  B0D8               	btfsc	status,0,c
  6192  002C40  2A3D               	incf	___awmod@dividend+1,f,c
  6193  002C42  0E01               	movlw	1
  6194  002C44  6E41               	movwf	___awmod@sign,c
  6195  002C46                     l4723:
  6196  002C46  AE3F               	btfss	___awmod@divisor+1,7,c
  6197  002C48  D004               	goto	l4727
  6198  002C4A  6C3E               	negf	___awmod@divisor,c
  6199  002C4C  1E3F               	comf	___awmod@divisor+1,f,c
  6200  002C4E  B0D8               	btfsc	status,0,c
  6201  002C50  2A3F               	incf	___awmod@divisor+1,f,c
  6202  002C52                     l4727:
  6203  002C52  503E               	movf	___awmod@divisor,w,c
  6204  002C54  103F               	iorwf	___awmod@divisor+1,w,c
  6205  002C56  B4D8               	btfsc	status,2,c
  6206  002C58  D018               	goto	l4743
  6207  002C5A  0E01               	movlw	1
  6208  002C5C  6E40               	movwf	___awmod@counter,c
  6209  002C5E  D004               	goto	l4733
  6210  002C60                     l4731:
  6211  002C60  90D8               	bcf	status,0,c
  6212  002C62  363E               	rlcf	___awmod@divisor,f,c
  6213  002C64  363F               	rlcf	___awmod@divisor+1,f,c
  6214  002C66  2A40               	incf	___awmod@counter,f,c
  6215  002C68                     l4733:
  6216  002C68  AE3F               	btfss	___awmod@divisor+1,7,c
  6217  002C6A  D7FA               	goto	l4731
  6218  002C6C                     l4735:
  6219  002C6C  503E               	movf	___awmod@divisor,w,c
  6220  002C6E  5C3C               	subwf	___awmod@dividend,w,c
  6221  002C70  503F               	movf	___awmod@divisor+1,w,c
  6222  002C72  583D               	subwfb	___awmod@dividend+1,w,c
  6223  002C74  A0D8               	btfss	status,0,c
  6224  002C76  D004               	goto	l4739
  6225  002C78  503E               	movf	___awmod@divisor,w,c
  6226  002C7A  5E3C               	subwf	___awmod@dividend,f,c
  6227  002C7C  503F               	movf	___awmod@divisor+1,w,c
  6228  002C7E  5A3D               	subwfb	___awmod@dividend+1,f,c
  6229  002C80                     l4739:
  6230  002C80  90D8               	bcf	status,0,c
  6231  002C82  323F               	rrcf	___awmod@divisor+1,f,c
  6232  002C84  323E               	rrcf	___awmod@divisor,f,c
  6233  002C86  2E40               	decfsz	___awmod@counter,f,c
  6234  002C88  D7F1               	goto	l4735
  6235  002C8A                     l4743:
  6236  002C8A  5041               	movf	___awmod@sign,w,c
  6237  002C8C  B4D8               	btfsc	status,2,c
  6238  002C8E  D004               	goto	l4747
  6239  002C90  6C3C               	negf	___awmod@dividend,c
  6240  002C92  1E3D               	comf	___awmod@dividend+1,f,c
  6241  002C94  B0D8               	btfsc	status,0,c
  6242  002C96  2A3D               	incf	___awmod@dividend+1,f,c
  6243  002C98                     l4747:
  6244  002C98  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6245  002C9C  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6246  002CA0  0012               	return	
  6247  002CA2                     __end_of___awmod:
  6248                           	opt stack 0
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           prodh	equ	0xFF4
  6254                           prodl	equ	0xFF3
  6255                           intcon	equ	0xFF2
  6256                           postinc0	equ	0xFEE
  6257                           wreg	equ	0xFE8
  6258                           indf2	equ	0xFDF
  6259                           postinc2	equ	0xFDE
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function ___awdiv *****************
  6265 ;; Defined at:
  6266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  dividend        2   16[BANK0 ] int 
  6269 ;;  divisor         2   18[BANK0 ] int 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  quotient        2   22[BANK0 ] int 
  6272 ;;  sign            1   21[BANK0 ] unsigned char 
  6273 ;;  counter         1   20[BANK0 ] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  2   16[BANK0 ] int 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6283 ;;      Params:         0       4       0       0
  6284 ;;      Locals:         0       4       0       0
  6285 ;;      Temps:          0       0       0       0
  6286 ;;      Totals:         0       8       0       0
  6287 ;;Total ram usage:        8 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    4
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_fround
  6294 ;;		_scale
  6295 ;;		_sprintf
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text18
  6300  00299A                     __ptext18:
  6301                           	opt stack 0
  6302  00299A                     ___awdiv:
  6303                           	opt stack 23
  6304                           
  6305                           ;incstack = 0
  6306  00299A  0E00               	movlw	0
  6307  00299C  0100               	movlb	0	; () banked
  6308  00299E  6F75               	movwf	___awdiv@sign& (0+255),b
  6309                           
  6310                           ; BSR set to: 0
  6311  0029A0  0100               	movlb	0	; () banked
  6312  0029A2  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6313  0029A4  D008               	goto	l4679
  6314                           
  6315                           ; BSR set to: 0
  6316  0029A6  0100               	movlb	0	; () banked
  6317  0029A8  6D72               	negf	___awdiv@divisor& (0+255),b
  6318  0029AA  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6319  0029AC  B0D8               	btfsc	status,0,c
  6320  0029AE  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6321                           
  6322                           ; BSR set to: 0
  6323  0029B0  0E01               	movlw	1
  6324  0029B2  0100               	movlb	0	; () banked
  6325  0029B4  6F75               	movwf	___awdiv@sign& (0+255),b
  6326  0029B6                     l4679:
  6327                           
  6328                           ; BSR set to: 0
  6329  0029B6  0100               	movlb	0	; () banked
  6330  0029B8  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6331  0029BA  D008               	goto	l4685
  6332                           
  6333                           ; BSR set to: 0
  6334  0029BC  0100               	movlb	0	; () banked
  6335  0029BE  6D70               	negf	___awdiv@dividend& (0+255),b
  6336  0029C0  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6337  0029C2  B0D8               	btfsc	status,0,c
  6338  0029C4  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6339                           
  6340                           ; BSR set to: 0
  6341  0029C6  0E01               	movlw	1
  6342  0029C8  0100               	movlb	0	; () banked
  6343  0029CA  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6344  0029CC                     l4685:
  6345                           
  6346                           ; BSR set to: 0
  6347  0029CC  0E00               	movlw	0
  6348  0029CE  0100               	movlb	0	; () banked
  6349  0029D0  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6350  0029D2  0E00               	movlw	0
  6351  0029D4  6F76               	movwf	___awdiv@quotient& (0+255),b
  6352                           
  6353                           ; BSR set to: 0
  6354  0029D6  0100               	movlb	0	; () banked
  6355  0029D8  5172               	movf	___awdiv@divisor& (0+255),w,b
  6356  0029DA  0100               	movlb	0	; () banked
  6357  0029DC  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6358  0029DE  B4D8               	btfsc	status,2,c
  6359  0029E0  D02C               	goto	l4707
  6360                           
  6361                           ; BSR set to: 0
  6362  0029E2  0E01               	movlw	1
  6363  0029E4  0100               	movlb	0	; () banked
  6364  0029E6  6F74               	movwf	___awdiv@counter& (0+255),b
  6365  0029E8  D006               	goto	l4693
  6366  0029EA                     l4691:
  6367                           
  6368                           ; BSR set to: 0
  6369  0029EA  0100               	movlb	0	; () banked
  6370  0029EC  90D8               	bcf	status,0,c
  6371  0029EE  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6372  0029F0  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6373  0029F2  0100               	movlb	0	; () banked
  6374  0029F4  2B74               	incf	___awdiv@counter& (0+255),f,b
  6375  0029F6                     l4693:
  6376                           
  6377                           ; BSR set to: 0
  6378  0029F6  0100               	movlb	0	; () banked
  6379  0029F8  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6380  0029FA  D7F7               	goto	l4691
  6381  0029FC                     l4695:
  6382                           
  6383                           ; BSR set to: 0
  6384  0029FC  0100               	movlb	0	; () banked
  6385  0029FE  90D8               	bcf	status,0,c
  6386  002A00  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6387  002A02  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6388                           
  6389                           ; BSR set to: 0
  6390  002A04  0100               	movlb	0	; () banked
  6391  002A06  5172               	movf	___awdiv@divisor& (0+255),w,b
  6392  002A08  0100               	movlb	0	; () banked
  6393  002A0A  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6394  002A0C  0100               	movlb	0	; () banked
  6395  002A0E  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6396  002A10  0100               	movlb	0	; () banked
  6397  002A12  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6398  002A14  A0D8               	btfss	status,0,c
  6399  002A16  D00A               	goto	l4703
  6400                           
  6401                           ; BSR set to: 0
  6402  002A18  0100               	movlb	0	; () banked
  6403  002A1A  5172               	movf	___awdiv@divisor& (0+255),w,b
  6404  002A1C  0100               	movlb	0	; () banked
  6405  002A1E  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6406  002A20  0100               	movlb	0	; () banked
  6407  002A22  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6408  002A24  0100               	movlb	0	; () banked
  6409  002A26  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6410                           
  6411                           ; BSR set to: 0
  6412  002A28  0100               	movlb	0	; () banked
  6413  002A2A  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6414  002A2C                     l4703:
  6415                           
  6416                           ; BSR set to: 0
  6417  002A2C  0100               	movlb	0	; () banked
  6418  002A2E  90D8               	bcf	status,0,c
  6419  002A30  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6420  002A32  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6421                           
  6422                           ; BSR set to: 0
  6423  002A34  0100               	movlb	0	; () banked
  6424  002A36  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6425  002A38  D7E1               	goto	l4695
  6426  002A3A                     l4707:
  6427                           
  6428                           ; BSR set to: 0
  6429  002A3A  0100               	movlb	0	; () banked
  6430  002A3C  5175               	movf	___awdiv@sign& (0+255),w,b
  6431  002A3E  0100               	movlb	0	; () banked
  6432  002A40  B4D8               	btfsc	status,2,c
  6433  002A42  D005               	goto	l4711
  6434                           
  6435                           ; BSR set to: 0
  6436  002A44  0100               	movlb	0	; () banked
  6437  002A46  6D76               	negf	___awdiv@quotient& (0+255),b
  6438  002A48  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6439  002A4A  B0D8               	btfsc	status,0,c
  6440  002A4C  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6441  002A4E                     l4711:
  6442                           
  6443                           ; BSR set to: 0
  6444  002A4E  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6445  002A52  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6446  002A56  0012               	return	
  6447  002A58                     __end_of___awdiv:
  6448                           	opt stack 0
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           intcon	equ	0xFF2
  6456                           postinc0	equ	0xFEE
  6457                           wreg	equ	0xFE8
  6458                           indf2	equ	0xFDF
  6459                           postinc2	equ	0xFDE
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function __tdiv_to_l_ *****************
  6465 ;; Defined at:
  6466 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  f1              4   16[BANK0 ] float 
  6469 ;;  f2              4   20[BANK0 ] float 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  quot            4   24[BANK0 ] unsigned long 
  6472 ;;  exp1            1   29[BANK0 ] unsigned char 
  6473 ;;  cntr            1   28[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   16[BANK0 ] unsigned long 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6483 ;;      Params:         0       8       0       0
  6484 ;;      Locals:         0       6       0       0
  6485 ;;      Temps:          3       0       0       0
  6486 ;;      Totals:         3      14       0       0
  6487 ;;Total ram usage:       17 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    4
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_sprintf
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text19
  6498  001F26                     __ptext19:
  6499                           	opt stack 0
  6500  001F26                     __tdiv_to_l_:
  6501                           	opt stack 24
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;incstack = 0
  6505  001F26  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6506  001F2A  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6507  001F2C  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6508  001F2E  0100               	movlb	0	; () banked
  6509  001F30  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6510  001F32  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6511  001F34  E301               	bnc	u5511
  6512  001F36  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6513  001F38                     u5511:
  6514  001F38  503C               	movf	??__tdiv_to_l_,w,c
  6515  001F3A  0100               	movlb	0	; () banked
  6516  001F3C  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6517  001F3E  0100               	movlb	0	; () banked
  6518  001F40  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6519  001F42  A4D8               	btfss	status,2,c
  6520  001F44  D00A               	goto	l4851
  6521                           
  6522                           ; BSR set to: 0
  6523  001F46  0E00               	movlw	0
  6524  001F48  0100               	movlb	0	; () banked
  6525  001F4A  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6526  001F4C  0E00               	movlw	0
  6527  001F4E  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6528  001F50  0E00               	movlw	0
  6529  001F52  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6530  001F54  0E00               	movlw	0
  6531  001F56  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6532                           
  6533                           ; BSR set to: 0
  6534  001F58  0012               	return	
  6535  001F5A                     l4851:
  6536                           
  6537                           ; BSR set to: 0
  6538  001F5A  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6539  001F5E  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6540  001F60  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6541  001F62  0100               	movlb	0	; () banked
  6542  001F64  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6543  001F66  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6544  001F68  E301               	bnc	u5531
  6545  001F6A  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6546  001F6C                     u5531:
  6547  001F6C  503C               	movf	??__tdiv_to_l_,w,c
  6548  001F6E  0100               	movlb	0	; () banked
  6549  001F70  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6550  001F72  0100               	movlb	0	; () banked
  6551  001F74  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6552  001F76  A4D8               	btfss	status,2,c
  6553  001F78  D00A               	goto	l4857
  6554                           
  6555                           ; BSR set to: 0
  6556  001F7A  0E00               	movlw	0
  6557  001F7C  0100               	movlb	0	; () banked
  6558  001F7E  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6559  001F80  0E00               	movlw	0
  6560  001F82  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6561  001F84  0E00               	movlw	0
  6562  001F86  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6563  001F88  0E00               	movlw	0
  6564  001F8A  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567  001F8C  0012               	return	
  6568  001F8E                     l4857:
  6569                           
  6570                           ; BSR set to: 0
  6571  001F8E  0100               	movlb	0	; () banked
  6572  001F90  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6573                           
  6574                           ; BSR set to: 0
  6575  001F92  0EFF               	movlw	255
  6576  001F94  0100               	movlb	0	; () banked
  6577  001F96  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6578  001F98  0EFF               	movlw	255
  6579  001F9A  0100               	movlb	0	; () banked
  6580  001F9C  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6581  001F9E  0E00               	movlw	0
  6582  001FA0  0100               	movlb	0	; () banked
  6583  001FA2  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6584  001FA4  0100               	movlb	0	; () banked
  6585  001FA6  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6586                           
  6587                           ; BSR set to: 0
  6588  001FA8  0EFF               	movlw	255
  6589  001FAA  0100               	movlb	0	; () banked
  6590  001FAC  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6591  001FAE  0EFF               	movlw	255
  6592  001FB0  0100               	movlb	0	; () banked
  6593  001FB2  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6594  001FB4  0E00               	movlw	0
  6595  001FB6  0100               	movlb	0	; () banked
  6596  001FB8  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6597                           
  6598                           ; BSR set to: 0
  6599  001FBA  0E00               	movlw	0
  6600  001FBC  0100               	movlb	0	; () banked
  6601  001FBE  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6602  001FC0  0E00               	movlw	0
  6603  001FC2  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6604  001FC4  0E00               	movlw	0
  6605  001FC6  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6606  001FC8  0E00               	movlw	0
  6607  001FCA  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6608                           
  6609                           ; BSR set to: 0
  6610  001FCC  0E7F               	movlw	127
  6611  001FCE  0100               	movlb	0	; () banked
  6612  001FD0  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  001FD2  0100               	movlb	0	; () banked
  6616  001FD4  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6617  001FD6  0F98               	addlw	152
  6618  001FD8  0100               	movlb	0	; () banked
  6619  001FDA  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6620                           
  6621                           ; BSR set to: 0
  6622  001FDC  0E18               	movlw	24
  6623  001FDE  0100               	movlb	0	; () banked
  6624  001FE0  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6625  001FE2                     l777:
  6626                           
  6627                           ; BSR set to: 0
  6628  001FE2  0100               	movlb	0	; () banked
  6629  001FE4  90D8               	bcf	status,0,c
  6630  001FE6  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6631  001FE8  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6632  001FEA  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6633  001FEC  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6634                           
  6635                           ; BSR set to: 0
  6636  001FEE  0100               	movlb	0	; () banked
  6637  001FF0  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6638  001FF2  0100               	movlb	0	; () banked
  6639  001FF4  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6640  001FF6  0100               	movlb	0	; () banked
  6641  001FF8  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6642  001FFA  0100               	movlb	0	; () banked
  6643  001FFC  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6644  001FFE  0100               	movlb	0	; () banked
  6645  002000  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6646  002002  0100               	movlb	0	; () banked
  6647  002004  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6648  002006  A0D8               	btfss	status,0,c
  6649  002008  D00E               	goto	l778
  6650                           
  6651                           ; BSR set to: 0
  6652  00200A  0100               	movlb	0	; () banked
  6653  00200C  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6654  00200E  0100               	movlb	0	; () banked
  6655  002010  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6656  002012  0100               	movlb	0	; () banked
  6657  002014  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6658  002016  0100               	movlb	0	; () banked
  6659  002018  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6660  00201A  0100               	movlb	0	; () banked
  6661  00201C  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6662  00201E  0100               	movlb	0	; () banked
  6663  002020  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6664                           
  6665                           ; BSR set to: 0
  6666  002022  0100               	movlb	0	; () banked
  6667  002024  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6668  002026                     l778:
  6669                           
  6670                           ; BSR set to: 0
  6671  002026  0100               	movlb	0	; () banked
  6672  002028  90D8               	bcf	status,0,c
  6673  00202A  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6674  00202C  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6675  00202E  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6676                           
  6677                           ; BSR set to: 0
  6678  002030  0100               	movlb	0	; () banked
  6679  002032  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6680  002034  D7D6               	goto	l777
  6681                           
  6682                           ; BSR set to: 0
  6683                           
  6684                           ; BSR set to: 0
  6685  002036  0100               	movlb	0	; () banked
  6686  002038  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6687  00203A  D01A               	goto	l4891
  6688                           
  6689                           ; BSR set to: 0
  6690  00203C  0100               	movlb	0	; () banked
  6691  00203E  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6692  002040  0A80               	xorlw	128
  6693  002042  0F97               	addlw	151
  6694  002044  B0D8               	btfsc	status,0,c
  6695  002046  D00A               	goto	l4887
  6696                           
  6697                           ; BSR set to: 0
  6698  002048  0E00               	movlw	0
  6699  00204A  0100               	movlb	0	; () banked
  6700  00204C  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6701  00204E  0E00               	movlw	0
  6702  002050  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6703  002052  0E00               	movlw	0
  6704  002054  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6705  002056  0E00               	movlw	0
  6706  002058  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709  00205A  0012               	return	
  6710  00205C                     l4887:
  6711                           
  6712                           ; BSR set to: 0
  6713  00205C  0100               	movlb	0	; () banked
  6714  00205E  90D8               	bcf	status,0,c
  6715  002060  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6716  002062  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6717  002064  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6718  002066  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721  002068  0100               	movlb	0	; () banked
  6722  00206A  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6723  00206C  D7F7               	goto	l4887
  6724                           
  6725                           ; BSR set to: 0
  6726  00206E  D01B               	goto	l784
  6727  002070                     l4891:
  6728                           
  6729                           ; BSR set to: 0
  6730  002070  0E17               	movlw	23
  6731  002072  0100               	movlb	0	; () banked
  6732  002074  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6733  002076  D012               	goto	l4899
  6734                           
  6735                           ; BSR set to: 0
  6736  002078  0E00               	movlw	0
  6737  00207A  0100               	movlb	0	; () banked
  6738  00207C  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6739  00207E  0E00               	movlw	0
  6740  002080  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6741  002082  0E00               	movlw	0
  6742  002084  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6743  002086  0E00               	movlw	0
  6744  002088  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6745                           
  6746                           ; BSR set to: 0
  6747  00208A  0012               	return	
  6748  00208C                     l4897:
  6749                           
  6750                           ; BSR set to: 0
  6751  00208C  0100               	movlb	0	; () banked
  6752  00208E  90D8               	bcf	status,0,c
  6753  002090  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6754  002092  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6755  002094  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6756  002096  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6757  002098  0100               	movlb	0	; () banked
  6758  00209A  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6759  00209C                     l4899:
  6760                           
  6761                           ; BSR set to: 0
  6762  00209C  0100               	movlb	0	; () banked
  6763  00209E  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6764  0020A0  0100               	movlb	0	; () banked
  6765  0020A2  A4D8               	btfss	status,2,c
  6766  0020A4  D7F3               	goto	l4897
  6767  0020A6                     l784:
  6768                           
  6769                           ; BSR set to: 0
  6770  0020A6  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6771  0020AA  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6772  0020AE  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6773  0020B2  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6774                           
  6775                           ; BSR set to: 0
  6776  0020B6  0012               	return		;funcret
  6777  0020B8                     __end_of__tdiv_to_l_:
  6778                           	opt stack 0
  6779                           tblptru	equ	0xFF8
  6780                           tblptrh	equ	0xFF7
  6781                           tblptrl	equ	0xFF6
  6782                           tablat	equ	0xFF5
  6783                           prodh	equ	0xFF4
  6784                           prodl	equ	0xFF3
  6785                           intcon	equ	0xFF2
  6786                           postinc0	equ	0xFEE
  6787                           wreg	equ	0xFE8
  6788                           indf2	equ	0xFDF
  6789                           postinc2	equ	0xFDE
  6790                           fsr2h	equ	0xFDA
  6791                           fsr2l	equ	0xFD9
  6792                           status	equ	0xFD8
  6793                           
  6794 ;; *************** function __div_to_l_ *****************
  6795 ;; Defined at:
  6796 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  f1              4   16[BANK0 ] unsigned long 
  6799 ;;  f2              4   20[BANK0 ] unsigned long 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  quot            4   24[COMRAM] unsigned long 
  6802 ;;  exp1            1   29[COMRAM] unsigned char 
  6803 ;;  cntr            1   28[COMRAM] unsigned char 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  4   16[BANK0 ] unsigned long 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6813 ;;      Params:         0       8       0       0
  6814 ;;      Locals:         6       0       0       0
  6815 ;;      Temps:          0       0       0       0
  6816 ;;      Totals:         6       8       0       0
  6817 ;;Total ram usage:       14 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    4
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_sprintf
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text20
  6828  002226                     __ptext20:
  6829                           	opt stack 0
  6830  002226                     __div_to_l_:
  6831                           	opt stack 24
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;incstack = 0
  6835  002226  0100               	movlb	0	; () banked
  6836  002228  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6837  00222A  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6838  00222C  6E41               	movwf	__div_to_l_@exp1,c
  6839  00222E  5041               	movf	__div_to_l_@exp1,w,c
  6840  002230  A4D8               	btfss	status,2,c
  6841  002232  D00A               	goto	l4907
  6842                           
  6843                           ; BSR set to: 0
  6844  002234  0E00               	movlw	0
  6845  002236  0100               	movlb	0	; () banked
  6846  002238  6F70               	movwf	?__div_to_l_& (0+255),b
  6847  00223A  0E00               	movlw	0
  6848  00223C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6849  00223E  0E00               	movlw	0
  6850  002240  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6851  002242  0E00               	movlw	0
  6852  002244  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  002246  0012               	return	
  6856  002248                     l4907:
  6857                           
  6858                           ; BSR set to: 0
  6859  002248  0100               	movlb	0	; () banked
  6860  00224A  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6861  00224C  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6862  00224E  6E40               	movwf	__div_to_l_@cntr,c
  6863  002250  5040               	movf	__div_to_l_@cntr,w,c
  6864  002252  A4D8               	btfss	status,2,c
  6865  002254  D00A               	goto	l4913
  6866                           
  6867                           ; BSR set to: 0
  6868  002256  0E00               	movlw	0
  6869  002258  0100               	movlb	0	; () banked
  6870  00225A  6F70               	movwf	?__div_to_l_& (0+255),b
  6871  00225C  0E00               	movlw	0
  6872  00225E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6873  002260  0E00               	movlw	0
  6874  002262  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6875  002264  0E00               	movlw	0
  6876  002266  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6877                           
  6878                           ; BSR set to: 0
  6879  002268  0012               	return	
  6880  00226A                     l4913:
  6881                           
  6882                           ; BSR set to: 0
  6883  00226A  0100               	movlb	0	; () banked
  6884  00226C  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6885                           
  6886                           ; BSR set to: 0
  6887  00226E  0EFF               	movlw	255
  6888  002270  0100               	movlb	0	; () banked
  6889  002272  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6890  002274  0EFF               	movlw	255
  6891  002276  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6892  002278  0EFF               	movlw	255
  6893  00227A  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6894  00227C  0E00               	movlw	0
  6895  00227E  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6896                           
  6897                           ; BSR set to: 0
  6898  002280  0100               	movlb	0	; () banked
  6899  002282  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6900  002284  0EFF               	movlw	255
  6901  002286  0100               	movlb	0	; () banked
  6902  002288  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6903  00228A  0EFF               	movlw	255
  6904  00228C  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6905  00228E  0EFF               	movlw	255
  6906  002290  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6907  002292  0E00               	movlw	0
  6908  002294  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 0
  6911  002296  0E00               	movlw	0
  6912  002298  6E3C               	movwf	__div_to_l_@quot,c
  6913  00229A  0E00               	movlw	0
  6914  00229C  6E3D               	movwf	__div_to_l_@quot+1,c
  6915  00229E  0E00               	movlw	0
  6916  0022A0  6E3E               	movwf	__div_to_l_@quot+2,c
  6917  0022A2  0E00               	movlw	0
  6918  0022A4  6E3F               	movwf	__div_to_l_@quot+3,c
  6919                           
  6920                           ; BSR set to: 0
  6921  0022A6  0E7F               	movlw	127
  6922  0022A8  5E41               	subwf	__div_to_l_@exp1,f,c
  6923                           
  6924                           ; BSR set to: 0
  6925  0022AA  5040               	movf	__div_to_l_@cntr,w,c
  6926  0022AC  0FA0               	addlw	160
  6927  0022AE  5E41               	subwf	__div_to_l_@exp1,f,c
  6928                           
  6929                           ; BSR set to: 0
  6930  0022B0  0E20               	movlw	32
  6931  0022B2  6E40               	movwf	__div_to_l_@cntr,c
  6932  0022B4                     l4927:
  6933                           
  6934                           ; BSR set to: 0
  6935  0022B4  90D8               	bcf	status,0,c
  6936  0022B6  363C               	rlcf	__div_to_l_@quot,f,c
  6937  0022B8  363D               	rlcf	__div_to_l_@quot+1,f,c
  6938  0022BA  363E               	rlcf	__div_to_l_@quot+2,f,c
  6939  0022BC  363F               	rlcf	__div_to_l_@quot+3,f,c
  6940                           
  6941                           ; BSR set to: 0
  6942  0022BE  0100               	movlb	0	; () banked
  6943  0022C0  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6944  0022C2  0100               	movlb	0	; () banked
  6945  0022C4  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6946  0022C6  0100               	movlb	0	; () banked
  6947  0022C8  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6948  0022CA  0100               	movlb	0	; () banked
  6949  0022CC  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6950  0022CE  0100               	movlb	0	; () banked
  6951  0022D0  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6952  0022D2  0100               	movlb	0	; () banked
  6953  0022D4  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6954  0022D6  0100               	movlb	0	; () banked
  6955  0022D8  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6956  0022DA  0100               	movlb	0	; () banked
  6957  0022DC  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6958  0022DE  A0D8               	btfss	status,0,c
  6959  0022E0  D011               	goto	l4935
  6960                           
  6961                           ; BSR set to: 0
  6962  0022E2  0100               	movlb	0	; () banked
  6963  0022E4  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6964  0022E6  0100               	movlb	0	; () banked
  6965  0022E8  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6966  0022EA  0100               	movlb	0	; () banked
  6967  0022EC  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6968  0022EE  0100               	movlb	0	; () banked
  6969  0022F0  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6970  0022F2  0100               	movlb	0	; () banked
  6971  0022F4  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6972  0022F6  0100               	movlb	0	; () banked
  6973  0022F8  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6974  0022FA  0100               	movlb	0	; () banked
  6975  0022FC  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6976  0022FE  0100               	movlb	0	; () banked
  6977  002300  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6978                           
  6979                           ; BSR set to: 0
  6980  002302  803C               	bsf	__div_to_l_@quot,0,c
  6981  002304                     l4935:
  6982                           
  6983                           ; BSR set to: 0
  6984  002304  0100               	movlb	0	; () banked
  6985  002306  90D8               	bcf	status,0,c
  6986  002308  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6987  00230A  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6988  00230C  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6989  00230E  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6990                           
  6991                           ; BSR set to: 0
  6992  002310  2E40               	decfsz	__div_to_l_@cntr,f,c
  6993  002312  D7D0               	goto	l4927
  6994                           
  6995                           ; BSR set to: 0
  6996                           
  6997                           ; BSR set to: 0
  6998  002314  AE41               	btfss	__div_to_l_@exp1,7,c
  6999  002316  D017               	goto	l4951
  7000                           
  7001                           ; BSR set to: 0
  7002  002318  5041               	movf	__div_to_l_@exp1,w,c
  7003  00231A  0A80               	xorlw	128
  7004  00231C  0F9F               	addlw	159
  7005  00231E  B0D8               	btfsc	status,0,c
  7006  002320  D00A               	goto	l4947
  7007                           
  7008                           ; BSR set to: 0
  7009  002322  0E00               	movlw	0
  7010  002324  0100               	movlb	0	; () banked
  7011  002326  6F70               	movwf	?__div_to_l_& (0+255),b
  7012  002328  0E00               	movlw	0
  7013  00232A  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  7014  00232C  0E00               	movlw	0
  7015  00232E  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  7016  002330  0E00               	movlw	0
  7017  002332  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  7018                           
  7019                           ; BSR set to: 0
  7020  002334  0012               	return	
  7021  002336                     l4947:
  7022  002336  90D8               	bcf	status,0,c
  7023  002338  323F               	rrcf	__div_to_l_@quot+3,f,c
  7024  00233A  323E               	rrcf	__div_to_l_@quot+2,f,c
  7025  00233C  323D               	rrcf	__div_to_l_@quot+1,f,c
  7026  00233E  323C               	rrcf	__div_to_l_@quot,f,c
  7027  002340  3E41               	incfsz	__div_to_l_@exp1,f,c
  7028  002342  D7F9               	goto	l4947
  7029  002344  D016               	goto	l680
  7030  002346                     l4951:
  7031  002346  0E1F               	movlw	31
  7032  002348  6441               	cpfsgt	__div_to_l_@exp1,c
  7033  00234A  D010               	goto	l4959
  7034  00234C  0E00               	movlw	0
  7035  00234E  0100               	movlb	0	; () banked
  7036  002350  6F70               	movwf	?__div_to_l_& (0+255),b
  7037  002352  0E00               	movlw	0
  7038  002354  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  7039  002356  0E00               	movlw	0
  7040  002358  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  7041  00235A  0E00               	movlw	0
  7042  00235C  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  7043                           
  7044                           ; BSR set to: 0
  7045  00235E  0012               	return	
  7046  002360                     l4957:
  7047  002360  90D8               	bcf	status,0,c
  7048  002362  363C               	rlcf	__div_to_l_@quot,f,c
  7049  002364  363D               	rlcf	__div_to_l_@quot+1,f,c
  7050  002366  363E               	rlcf	__div_to_l_@quot+2,f,c
  7051  002368  363F               	rlcf	__div_to_l_@quot+3,f,c
  7052  00236A  0641               	decf	__div_to_l_@exp1,f,c
  7053  00236C                     l4959:
  7054  00236C  5041               	movf	__div_to_l_@exp1,w,c
  7055  00236E  A4D8               	btfss	status,2,c
  7056  002370  D7F7               	goto	l4957
  7057  002372                     l680:
  7058  002372  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  7059  002376  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7060  00237A  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7061  00237E  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7062  002382  0012               	return		;funcret
  7063  002384                     __end_of__div_to_l_:
  7064                           	opt stack 0
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           intcon	equ	0xFF2
  7072                           postinc0	equ	0xFEE
  7073                           wreg	equ	0xFE8
  7074                           indf2	equ	0xFDF
  7075                           postinc2	equ	0xFDE
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function ___xxtofl *****************
  7081 ;; Defined at:
  7082 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  sign            1    wreg     unsigned char 
  7085 ;;  val             4   16[BANK0 ] long 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  sign            1   24[BANK0 ] unsigned char 
  7088 ;;  arg             4   26[BANK0 ] unsigned long 
  7089 ;;  exp             1   25[BANK0 ] unsigned char 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  4   16[BANK0 ] unsigned char 
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7099 ;;      Params:         0       4       0       0
  7100 ;;      Locals:         0       6       0       0
  7101 ;;      Temps:          0       4       0       0
  7102 ;;      Totals:         0      14       0       0
  7103 ;;Total ram usage:       14 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    4
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_main
  7110 ;;		_LCD_Handler
  7111 ;;		_sprintf
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text21
  7116  001D58                     __ptext21:
  7117                           	opt stack 0
  7118  001D58                     ___xxtofl:
  7119                           	opt stack 26
  7120                           
  7121                           ;incstack = 0
  7122                           ;___xxtofl@sign stored from wreg
  7123  001D58  0100               	movlb	0	; () banked
  7124  001D5A  6F78               	movwf	___xxtofl@sign& (0+255),b
  7125  001D5C  0100               	movlb	0	; () banked
  7126  001D5E  5178               	movf	___xxtofl@sign& (0+255),w,b
  7127  001D60  0100               	movlb	0	; () banked
  7128  001D62  B4D8               	btfsc	status,2,c
  7129  001D64  D01E               	goto	l1075
  7130                           
  7131                           ; BSR set to: 0
  7132  001D66  0100               	movlb	0	; () banked
  7133  001D68  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7134  001D6A  D01B               	goto	l1075
  7135                           
  7136                           ; BSR set to: 0
  7137  001D6C  C070  F074         	movff	___xxtofl@val,??___xxtofl
  7138  001D70  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  7139  001D74  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  7140  001D78  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  7141  001D7C  0100               	movlb	0	; () banked
  7142  001D7E  1F74               	comf	??___xxtofl& (0+255),f,b
  7143  001D80  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  7144  001D82  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  7145  001D84  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  7146  001D86  2B74               	incf	??___xxtofl& (0+255),f,b
  7147  001D88  0E00               	movlw	0
  7148  001D8A  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7149  001D8C  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7150  001D8E  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7151  001D90  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  7152  001D94  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7153  001D98  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7154  001D9C  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7155  001DA0  D008               	goto	l5085
  7156  001DA2                     l1075:
  7157                           
  7158                           ; BSR set to: 0
  7159  001DA2  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  7160  001DA6  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7161  001DAA  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7162  001DAE  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7163  001DB2                     l5085:
  7164                           
  7165                           ; BSR set to: 0
  7166  001DB2  0100               	movlb	0	; () banked
  7167  001DB4  5170               	movf	___xxtofl@val& (0+255),w,b
  7168  001DB6  0100               	movlb	0	; () banked
  7169  001DB8  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7170  001DBA  0100               	movlb	0	; () banked
  7171  001DBC  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7172  001DBE  0100               	movlb	0	; () banked
  7173  001DC0  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7174  001DC2  A4D8               	btfss	status,2,c
  7175  001DC4  D00A               	goto	l5091
  7176                           
  7177                           ; BSR set to: 0
  7178  001DC6  0E00               	movlw	0
  7179  001DC8  0100               	movlb	0	; () banked
  7180  001DCA  6F70               	movwf	?___xxtofl& (0+255),b
  7181  001DCC  0E00               	movlw	0
  7182  001DCE  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  7183  001DD0  0E00               	movlw	0
  7184  001DD2  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  7185  001DD4  0E00               	movlw	0
  7186  001DD6  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189  001DD8  0012               	return	
  7190  001DDA                     l5091:
  7191                           
  7192                           ; BSR set to: 0
  7193  001DDA  0E96               	movlw	150
  7194  001DDC  0100               	movlb	0	; () banked
  7195  001DDE  6F79               	movwf	___xxtofl@exp& (0+255),b
  7196  001DE0  D008               	goto	l5095
  7197  001DE2                     l5093:
  7198                           
  7199                           ; BSR set to: 0
  7200  001DE2  0100               	movlb	0	; () banked
  7201  001DE4  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7202  001DE6  0100               	movlb	0	; () banked
  7203  001DE8  90D8               	bcf	status,0,c
  7204  001DEA  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7205  001DEC  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7206  001DEE  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7207  001DF0  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7208  001DF2                     l5095:
  7209                           
  7210                           ; BSR set to: 0
  7211  001DF2  0E00               	movlw	0
  7212  001DF4  0100               	movlb	0	; () banked
  7213  001DF6  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7214  001DF8  0100               	movlb	0	; () banked
  7215  001DFA  6F74               	movwf	??___xxtofl& (0+255),b
  7216  001DFC  0E00               	movlw	0
  7217  001DFE  0100               	movlb	0	; () banked
  7218  001E00  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7219  001E02  0100               	movlb	0	; () banked
  7220  001E04  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7221  001E06  0E00               	movlw	0
  7222  001E08  0100               	movlb	0	; () banked
  7223  001E0A  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7224  001E0C  0100               	movlb	0	; () banked
  7225  001E0E  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7226  001E10  0EFE               	movlw	254
  7227  001E12  0100               	movlb	0	; () banked
  7228  001E14  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7229  001E16  0100               	movlb	0	; () banked
  7230  001E18  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7231  001E1A  0100               	movlb	0	; () banked
  7232  001E1C  5174               	movf	??___xxtofl& (0+255),w,b
  7233  001E1E  0100               	movlb	0	; () banked
  7234  001E20  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7235  001E22  0100               	movlb	0	; () banked
  7236  001E24  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7237  001E26  0100               	movlb	0	; () banked
  7238  001E28  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7239  001E2A  B4D8               	btfsc	status,2,c
  7240  001E2C  D010               	goto	l1082
  7241  001E2E  D7D9               	goto	l5093
  7242  001E30                     l5097:
  7243                           
  7244                           ; BSR set to: 0
  7245  001E30  0100               	movlb	0	; () banked
  7246  001E32  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7247                           
  7248                           ; BSR set to: 0
  7249  001E34  0E01               	movlw	1
  7250  001E36  0100               	movlb	0	; () banked
  7251  001E38  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7252  001E3A  0E00               	movlw	0
  7253  001E3C  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7254  001E3E  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7255  001E40  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7256                           
  7257                           ; BSR set to: 0
  7258  001E42  0100               	movlb	0	; () banked
  7259  001E44  90D8               	bcf	status,0,c
  7260  001E46  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7261  001E48  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7262  001E4A  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7263  001E4C  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7264  001E4E                     l1082:
  7265                           
  7266                           ; BSR set to: 0
  7267  001E4E  0E00               	movlw	0
  7268  001E50  0100               	movlb	0	; () banked
  7269  001E52  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7270  001E54  0100               	movlb	0	; () banked
  7271  001E56  6F74               	movwf	??___xxtofl& (0+255),b
  7272  001E58  0E00               	movlw	0
  7273  001E5A  0100               	movlb	0	; () banked
  7274  001E5C  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7275  001E5E  0100               	movlb	0	; () banked
  7276  001E60  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7277  001E62  0E00               	movlw	0
  7278  001E64  0100               	movlb	0	; () banked
  7279  001E66  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7280  001E68  0100               	movlb	0	; () banked
  7281  001E6A  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7282  001E6C  0EFF               	movlw	255
  7283  001E6E  0100               	movlb	0	; () banked
  7284  001E70  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7285  001E72  0100               	movlb	0	; () banked
  7286  001E74  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7287  001E76  0100               	movlb	0	; () banked
  7288  001E78  5174               	movf	??___xxtofl& (0+255),w,b
  7289  001E7A  0100               	movlb	0	; () banked
  7290  001E7C  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7291  001E7E  0100               	movlb	0	; () banked
  7292  001E80  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7293  001E82  0100               	movlb	0	; () banked
  7294  001E84  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7295  001E86  B4D8               	btfsc	status,2,c
  7296  001E88  D009               	goto	l5105
  7297  001E8A  D7D2               	goto	l5097
  7298  001E8C                     l5103:
  7299                           
  7300                           ; BSR set to: 0
  7301  001E8C  0100               	movlb	0	; () banked
  7302  001E8E  0779               	decf	___xxtofl@exp& (0+255),f,b
  7303  001E90  0100               	movlb	0	; () banked
  7304  001E92  90D8               	bcf	status,0,c
  7305  001E94  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7306  001E96  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7307  001E98  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7308  001E9A  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7309  001E9C                     l5105:
  7310                           
  7311                           ; BSR set to: 0
  7312  001E9C  0100               	movlb	0	; () banked
  7313  001E9E  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7314  001EA0  D004               	goto	l1089
  7315                           
  7316                           ; BSR set to: 0
  7317  001EA2  0E02               	movlw	2
  7318  001EA4  0100               	movlb	0	; () banked
  7319  001EA6  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7320  001EA8  D7F1               	goto	l5103
  7321  001EAA                     l1089:
  7322                           
  7323                           ; BSR set to: 0
  7324  001EAA  0100               	movlb	0	; () banked
  7325  001EAC  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7326  001EAE  D009               	goto	l1090
  7327                           
  7328                           ; BSR set to: 0
  7329  001EB0  0EFF               	movlw	255
  7330  001EB2  0100               	movlb	0	; () banked
  7331  001EB4  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7332  001EB6  0EFF               	movlw	255
  7333  001EB8  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7334  001EBA  0E7F               	movlw	127
  7335  001EBC  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7336  001EBE  0EFF               	movlw	255
  7337  001EC0  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7338  001EC2                     l1090:
  7339                           
  7340                           ; BSR set to: 0
  7341  001EC2  0100               	movlb	0	; () banked
  7342  001EC4  90D8               	bcf	status,0,c
  7343  001EC6  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7344  001EC8  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7345  001ECC  0100               	movlb	0	; () banked
  7346  001ECE  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7347  001ED0  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7348  001ED2  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7349  001ED4  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7350  001ED8  0100               	movlb	0	; () banked
  7351  001EDA  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7352  001EDC  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7353  001EDE  6B74               	clrf	??___xxtofl& (0+255),b
  7354  001EE0  0100               	movlb	0	; () banked
  7355  001EE2  5174               	movf	??___xxtofl& (0+255),w,b
  7356  001EE4  0100               	movlb	0	; () banked
  7357  001EE6  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7358  001EE8  0100               	movlb	0	; () banked
  7359  001EEA  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7360  001EEC  0100               	movlb	0	; () banked
  7361  001EEE  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7362  001EF0  0100               	movlb	0	; () banked
  7363  001EF2  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7364  001EF4  0100               	movlb	0	; () banked
  7365  001EF6  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7366  001EF8  0100               	movlb	0	; () banked
  7367  001EFA  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7368  001EFC  0100               	movlb	0	; () banked
  7369  001EFE  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7370                           
  7371                           ; BSR set to: 0
  7372  001F00  0100               	movlb	0	; () banked
  7373  001F02  5178               	movf	___xxtofl@sign& (0+255),w,b
  7374  001F04  0100               	movlb	0	; () banked
  7375  001F06  B4D8               	btfsc	status,2,c
  7376  001F08  D005               	goto	l5117
  7377                           
  7378                           ; BSR set to: 0
  7379  001F0A  0100               	movlb	0	; () banked
  7380  001F0C  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7381  001F0E  D002               	goto	l5117
  7382                           
  7383                           ; BSR set to: 0
  7384  001F10  0100               	movlb	0	; () banked
  7385  001F12  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7386  001F14                     l5117:
  7387                           
  7388                           ; BSR set to: 0
  7389  001F14  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7390  001F18  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7391  001F1C  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7392  001F20  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7393  001F24  0012               	return	
  7394  001F26                     __end_of___xxtofl:
  7395                           	opt stack 0
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           prodh	equ	0xFF4
  7401                           prodl	equ	0xFF3
  7402                           intcon	equ	0xFF2
  7403                           postinc0	equ	0xFEE
  7404                           wreg	equ	0xFE8
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           fsr2h	equ	0xFDA
  7408                           fsr2l	equ	0xFD9
  7409                           status	equ	0xFD8
  7410                           
  7411 ;; *************** function ___llmod *****************
  7412 ;; Defined at:
  7413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  dividend        4   16[BANK0 ] unsigned long 
  7416 ;;  divisor         4   20[BANK0 ] unsigned long 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  counter         1   24[COMRAM] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  4   16[BANK0 ] unsigned long 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7428 ;;      Params:         0       8       0       0
  7429 ;;      Locals:         1       0       0       0
  7430 ;;      Temps:          0       0       0       0
  7431 ;;      Totals:         1       8       0       0
  7432 ;;Total ram usage:        9 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    4
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_sprintf
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text22
  7443  002B9E                     __ptext22:
  7444                           	opt stack 0
  7445  002B9E                     ___llmod:
  7446                           	opt stack 24
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;incstack = 0
  7450  002B9E  0100               	movlb	0	; () banked
  7451  002BA0  5174               	movf	___llmod@divisor& (0+255),w,b
  7452  002BA2  0100               	movlb	0	; () banked
  7453  002BA4  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7454  002BA6  0100               	movlb	0	; () banked
  7455  002BA8  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7456  002BAA  0100               	movlb	0	; () banked
  7457  002BAC  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7458  002BAE  B4D8               	btfsc	status,2,c
  7459  002BB0  D037               	goto	l883
  7460                           
  7461                           ; BSR set to: 0
  7462  002BB2  0E01               	movlw	1
  7463  002BB4  6E3C               	movwf	___llmod@counter,c
  7464  002BB6  D007               	goto	l5069
  7465  002BB8                     l5067:
  7466                           
  7467                           ; BSR set to: 0
  7468  002BB8  0100               	movlb	0	; () banked
  7469  002BBA  90D8               	bcf	status,0,c
  7470  002BBC  3774               	rlcf	___llmod@divisor& (0+255),f,b
  7471  002BBE  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7472  002BC0  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7473  002BC2  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7474  002BC4  2A3C               	incf	___llmod@counter,f,c
  7475  002BC6                     l5069:
  7476                           
  7477                           ; BSR set to: 0
  7478  002BC6  0100               	movlb	0	; () banked
  7479  002BC8  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7480  002BCA  D7F6               	goto	l5067
  7481  002BCC                     l5071:
  7482                           
  7483                           ; BSR set to: 0
  7484  002BCC  0100               	movlb	0	; () banked
  7485  002BCE  5174               	movf	___llmod@divisor& (0+255),w,b
  7486  002BD0  0100               	movlb	0	; () banked
  7487  002BD2  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7488  002BD4  0100               	movlb	0	; () banked
  7489  002BD6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7490  002BD8  0100               	movlb	0	; () banked
  7491  002BDA  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7492  002BDC  0100               	movlb	0	; () banked
  7493  002BDE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7494  002BE0  0100               	movlb	0	; () banked
  7495  002BE2  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7496  002BE4  0100               	movlb	0	; () banked
  7497  002BE6  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7498  002BE8  0100               	movlb	0	; () banked
  7499  002BEA  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7500  002BEC  A0D8               	btfss	status,0,c
  7501  002BEE  D010               	goto	l5075
  7502                           
  7503                           ; BSR set to: 0
  7504  002BF0  0100               	movlb	0	; () banked
  7505  002BF2  5174               	movf	___llmod@divisor& (0+255),w,b
  7506  002BF4  0100               	movlb	0	; () banked
  7507  002BF6  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7508  002BF8  0100               	movlb	0	; () banked
  7509  002BFA  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7510  002BFC  0100               	movlb	0	; () banked
  7511  002BFE  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7512  002C00  0100               	movlb	0	; () banked
  7513  002C02  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7514  002C04  0100               	movlb	0	; () banked
  7515  002C06  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7516  002C08  0100               	movlb	0	; () banked
  7517  002C0A  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7518  002C0C  0100               	movlb	0	; () banked
  7519  002C0E  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7520  002C10                     l5075:
  7521                           
  7522                           ; BSR set to: 0
  7523  002C10  0100               	movlb	0	; () banked
  7524  002C12  90D8               	bcf	status,0,c
  7525  002C14  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7526  002C16  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7527  002C18  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7528  002C1A  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7529                           
  7530                           ; BSR set to: 0
  7531  002C1C  2E3C               	decfsz	___llmod@counter,f,c
  7532  002C1E  D7D6               	goto	l5071
  7533  002C20                     l883:
  7534                           
  7535                           ; BSR set to: 0
  7536  002C20  C070  F070         	movff	___llmod@dividend,?___llmod
  7537  002C24  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7538  002C28  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7539  002C2C  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7540                           
  7541                           ; BSR set to: 0
  7542  002C30  0012               	return		;funcret
  7543  002C32                     __end_of___llmod:
  7544                           	opt stack 0
  7545                           tblptru	equ	0xFF8
  7546                           tblptrh	equ	0xFF7
  7547                           tblptrl	equ	0xFF6
  7548                           tablat	equ	0xFF5
  7549                           prodh	equ	0xFF4
  7550                           prodl	equ	0xFF3
  7551                           intcon	equ	0xFF2
  7552                           postinc0	equ	0xFEE
  7553                           wreg	equ	0xFE8
  7554                           indf2	equ	0xFDF
  7555                           postinc2	equ	0xFDE
  7556                           fsr2h	equ	0xFDA
  7557                           fsr2l	equ	0xFD9
  7558                           status	equ	0xFD8
  7559                           
  7560 ;; *************** function ___lldiv *****************
  7561 ;; Defined at:
  7562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  dividend        4   16[BANK0 ] unsigned long 
  7565 ;;  divisor         4   20[BANK0 ] unsigned long 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  quotient        4   24[COMRAM] unsigned long 
  7568 ;;  counter         1   28[COMRAM] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  4   16[BANK0 ] unsigned long 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7578 ;;      Params:         0       8       0       0
  7579 ;;      Locals:         5       0       0       0
  7580 ;;      Temps:          0       0       0       0
  7581 ;;      Totals:         5       8       0       0
  7582 ;;Total ram usage:       13 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    4
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_sprintf
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text23
  7593  002A58                     __ptext23:
  7594                           	opt stack 0
  7595  002A58                     ___lldiv:
  7596                           	opt stack 24
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;incstack = 0
  7600  002A58  0E00               	movlw	0
  7601  002A5A  6E3C               	movwf	___lldiv@quotient,c
  7602  002A5C  0E00               	movlw	0
  7603  002A5E  6E3D               	movwf	___lldiv@quotient+1,c
  7604  002A60  0E00               	movlw	0
  7605  002A62  6E3E               	movwf	___lldiv@quotient+2,c
  7606  002A64  0E00               	movlw	0
  7607  002A66  6E3F               	movwf	___lldiv@quotient+3,c
  7608  002A68  0100               	movlb	0	; () banked
  7609  002A6A  5174               	movf	___lldiv@divisor& (0+255),w,b
  7610  002A6C  0100               	movlb	0	; () banked
  7611  002A6E  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7612  002A70  0100               	movlb	0	; () banked
  7613  002A72  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7614  002A74  0100               	movlb	0	; () banked
  7615  002A76  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7616  002A78  B4D8               	btfsc	status,2,c
  7617  002A7A  D03D               	goto	l873
  7618                           
  7619                           ; BSR set to: 0
  7620  002A7C  0E01               	movlw	1
  7621  002A7E  6E40               	movwf	___lldiv@counter,c
  7622  002A80  D007               	goto	l5049
  7623  002A82                     l5047:
  7624                           
  7625                           ; BSR set to: 0
  7626  002A82  0100               	movlb	0	; () banked
  7627  002A84  90D8               	bcf	status,0,c
  7628  002A86  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7629  002A88  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7630  002A8A  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7631  002A8C  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7632  002A8E  2A40               	incf	___lldiv@counter,f,c
  7633  002A90                     l5049:
  7634                           
  7635                           ; BSR set to: 0
  7636  002A90  0100               	movlb	0	; () banked
  7637  002A92  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7638  002A94  D7F6               	goto	l5047
  7639  002A96                     l5051:
  7640                           
  7641                           ; BSR set to: 0
  7642  002A96  90D8               	bcf	status,0,c
  7643  002A98  363C               	rlcf	___lldiv@quotient,f,c
  7644  002A9A  363D               	rlcf	___lldiv@quotient+1,f,c
  7645  002A9C  363E               	rlcf	___lldiv@quotient+2,f,c
  7646  002A9E  363F               	rlcf	___lldiv@quotient+3,f,c
  7647                           
  7648                           ; BSR set to: 0
  7649  002AA0  0100               	movlb	0	; () banked
  7650  002AA2  5174               	movf	___lldiv@divisor& (0+255),w,b
  7651  002AA4  0100               	movlb	0	; () banked
  7652  002AA6  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7653  002AA8  0100               	movlb	0	; () banked
  7654  002AAA  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7655  002AAC  0100               	movlb	0	; () banked
  7656  002AAE  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7657  002AB0  0100               	movlb	0	; () banked
  7658  002AB2  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7659  002AB4  0100               	movlb	0	; () banked
  7660  002AB6  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7661  002AB8  0100               	movlb	0	; () banked
  7662  002ABA  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7663  002ABC  0100               	movlb	0	; () banked
  7664  002ABE  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7665  002AC0  A0D8               	btfss	status,0,c
  7666  002AC2  D011               	goto	l5059
  7667                           
  7668                           ; BSR set to: 0
  7669  002AC4  0100               	movlb	0	; () banked
  7670  002AC6  5174               	movf	___lldiv@divisor& (0+255),w,b
  7671  002AC8  0100               	movlb	0	; () banked
  7672  002ACA  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7673  002ACC  0100               	movlb	0	; () banked
  7674  002ACE  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7675  002AD0  0100               	movlb	0	; () banked
  7676  002AD2  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7677  002AD4  0100               	movlb	0	; () banked
  7678  002AD6  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7679  002AD8  0100               	movlb	0	; () banked
  7680  002ADA  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7681  002ADC  0100               	movlb	0	; () banked
  7682  002ADE  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7683  002AE0  0100               	movlb	0	; () banked
  7684  002AE2  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7685                           
  7686                           ; BSR set to: 0
  7687  002AE4  803C               	bsf	___lldiv@quotient,0,c
  7688  002AE6                     l5059:
  7689                           
  7690                           ; BSR set to: 0
  7691  002AE6  0100               	movlb	0	; () banked
  7692  002AE8  90D8               	bcf	status,0,c
  7693  002AEA  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7694  002AEC  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7695  002AEE  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7696  002AF0  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7697                           
  7698                           ; BSR set to: 0
  7699  002AF2  2E40               	decfsz	___lldiv@counter,f,c
  7700  002AF4  D7D0               	goto	l5051
  7701  002AF6                     l873:
  7702                           
  7703                           ; BSR set to: 0
  7704  002AF6  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7705  002AFA  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7706  002AFE  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7707  002B02  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7708                           
  7709                           ; BSR set to: 0
  7710  002B06  0012               	return		;funcret
  7711  002B08                     __end_of___lldiv:
  7712                           	opt stack 0
  7713                           tblptru	equ	0xFF8
  7714                           tblptrh	equ	0xFF7
  7715                           tblptrl	equ	0xFF6
  7716                           tablat	equ	0xFF5
  7717                           prodh	equ	0xFF4
  7718                           prodl	equ	0xFF3
  7719                           intcon	equ	0xFF2
  7720                           postinc0	equ	0xFEE
  7721                           wreg	equ	0xFE8
  7722                           indf2	equ	0xFDF
  7723                           postinc2	equ	0xFDE
  7724                           fsr2h	equ	0xFDA
  7725                           fsr2l	equ	0xFD9
  7726                           status	equ	0xFD8
  7727                           
  7728 ;; *************** function ___fltol *****************
  7729 ;; Defined at:
  7730 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  f1              4   64[BANK0 ] unsigned long 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  exp1            1   73[BANK0 ] unsigned char 
  7735 ;;  sign1           1   72[BANK0 ] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  4   64[BANK0 ] long 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7745 ;;      Params:         0       4       0       0
  7746 ;;      Locals:         0       2       0       0
  7747 ;;      Temps:          0       4       0       0
  7748 ;;      Totals:         0      10       0       0
  7749 ;;Total ram usage:       10 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    4
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_main
  7756 ;;		_sprintf
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text24
  7761  0025F6                     __ptext24:
  7762                           	opt stack 0
  7763  0025F6                     ___fltol:
  7764                           	opt stack 26
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;incstack = 0
  7768  0025F6  0100               	movlb	0	; () banked
  7769  0025F8  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7770  0025FA  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7771  0025FC  0100               	movlb	0	; () banked
  7772  0025FE  6FA9               	movwf	___fltol@exp1& (0+255),b
  7773  002600  0100               	movlb	0	; () banked
  7774  002602  51A9               	movf	___fltol@exp1& (0+255),w,b
  7775  002604  A4D8               	btfss	status,2,c
  7776  002606  D00A               	goto	l5003
  7777                           
  7778                           ; BSR set to: 0
  7779  002608  0E00               	movlw	0
  7780  00260A  0100               	movlb	0	; () banked
  7781  00260C  6FA0               	movwf	?___fltol& (0+255),b
  7782  00260E  0E00               	movlw	0
  7783  002610  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7784  002612  0E00               	movlw	0
  7785  002614  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7786  002616  0E00               	movlw	0
  7787  002618  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7788                           
  7789                           ; BSR set to: 0
  7790  00261A  0012               	return	
  7791  00261C                     l5003:
  7792                           
  7793                           ; BSR set to: 0
  7794  00261C  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7795  002620  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7796  002624  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7797  002628  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7798  00262C  0E20               	movlw	32
  7799  00262E  D006               	goto	u5740
  7800  002630                     u5745:
  7801  002630  0100               	movlb	0	; () banked
  7802  002632  90D8               	bcf	status,0,c
  7803  002634  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7804  002636  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7805  002638  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7806  00263A  33A4               	rrcf	??___fltol& (0+255),f,b
  7807  00263C                     u5740:
  7808  00263C  2EE8               	decfsz	wreg,f,c
  7809  00263E  D7F8               	goto	u5745
  7810  002640  0100               	movlb	0	; () banked
  7811  002642  51A4               	movf	??___fltol& (0+255),w,b
  7812  002644  0100               	movlb	0	; () banked
  7813  002646  6FA8               	movwf	___fltol@sign1& (0+255),b
  7814                           
  7815                           ; BSR set to: 0
  7816  002648  0100               	movlb	0	; () banked
  7817  00264A  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7818                           
  7819                           ; BSR set to: 0
  7820  00264C  0EFF               	movlw	255
  7821  00264E  0100               	movlb	0	; () banked
  7822  002650  17A0               	andwf	___fltol@f1& (0+255),f,b
  7823  002652  0EFF               	movlw	255
  7824  002654  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7825  002656  0EFF               	movlw	255
  7826  002658  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7827  00265A  0E00               	movlw	0
  7828  00265C  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7829                           
  7830                           ; BSR set to: 0
  7831  00265E  0E96               	movlw	150
  7832  002660  0100               	movlb	0	; () banked
  7833  002662  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7834                           
  7835                           ; BSR set to: 0
  7836  002664  0100               	movlb	0	; () banked
  7837  002666  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7838  002668  D01A               	goto	l5023
  7839                           
  7840                           ; BSR set to: 0
  7841  00266A  0100               	movlb	0	; () banked
  7842  00266C  51A9               	movf	___fltol@exp1& (0+255),w,b
  7843  00266E  0A80               	xorlw	128
  7844  002670  0F97               	addlw	151
  7845  002672  B0D8               	btfsc	status,0,c
  7846  002674  D00A               	goto	l5019
  7847                           
  7848                           ; BSR set to: 0
  7849  002676  0E00               	movlw	0
  7850  002678  0100               	movlb	0	; () banked
  7851  00267A  6FA0               	movwf	?___fltol& (0+255),b
  7852  00267C  0E00               	movlw	0
  7853  00267E  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7854  002680  0E00               	movlw	0
  7855  002682  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7856  002684  0E00               	movlw	0
  7857  002686  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7858                           
  7859                           ; BSR set to: 0
  7860  002688  0012               	return	
  7861  00268A                     l5019:
  7862                           
  7863                           ; BSR set to: 0
  7864  00268A  0100               	movlb	0	; () banked
  7865  00268C  90D8               	bcf	status,0,c
  7866  00268E  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7867  002690  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7868  002692  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7869  002694  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7870                           
  7871                           ; BSR set to: 0
  7872  002696  0100               	movlb	0	; () banked
  7873  002698  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7874  00269A  D7F7               	goto	l5019
  7875                           
  7876                           ; BSR set to: 0
  7877  00269C  D01B               	goto	l5033
  7878  00269E                     l5023:
  7879                           
  7880                           ; BSR set to: 0
  7881  00269E  0E1F               	movlw	31
  7882  0026A0  0100               	movlb	0	; () banked
  7883  0026A2  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7884  0026A4  D012               	goto	l5031
  7885                           
  7886                           ; BSR set to: 0
  7887  0026A6  0E00               	movlw	0
  7888  0026A8  0100               	movlb	0	; () banked
  7889  0026AA  6FA0               	movwf	?___fltol& (0+255),b
  7890  0026AC  0E00               	movlw	0
  7891  0026AE  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7892  0026B0  0E00               	movlw	0
  7893  0026B2  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7894  0026B4  0E00               	movlw	0
  7895  0026B6  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7896                           
  7897                           ; BSR set to: 0
  7898  0026B8  0012               	return	
  7899  0026BA                     l5029:
  7900                           
  7901                           ; BSR set to: 0
  7902  0026BA  0100               	movlb	0	; () banked
  7903  0026BC  90D8               	bcf	status,0,c
  7904  0026BE  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7905  0026C0  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7906  0026C2  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7907  0026C4  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7908  0026C6  0100               	movlb	0	; () banked
  7909  0026C8  07A9               	decf	___fltol@exp1& (0+255),f,b
  7910  0026CA                     l5031:
  7911                           
  7912                           ; BSR set to: 0
  7913  0026CA  0100               	movlb	0	; () banked
  7914  0026CC  51A9               	movf	___fltol@exp1& (0+255),w,b
  7915  0026CE  0100               	movlb	0	; () banked
  7916  0026D0  A4D8               	btfss	status,2,c
  7917  0026D2  D7F3               	goto	l5029
  7918  0026D4                     l5033:
  7919                           
  7920                           ; BSR set to: 0
  7921  0026D4  0100               	movlb	0	; () banked
  7922  0026D6  51A8               	movf	___fltol@sign1& (0+255),w,b
  7923  0026D8  0100               	movlb	0	; () banked
  7924  0026DA  B4D8               	btfsc	status,2,c
  7925  0026DC  D009               	goto	l5037
  7926                           
  7927                           ; BSR set to: 0
  7928  0026DE  0100               	movlb	0	; () banked
  7929  0026E0  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7930  0026E2  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7931  0026E4  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7932  0026E6  6DA0               	negf	___fltol@f1& (0+255),b
  7933  0026E8  0E00               	movlw	0
  7934  0026EA  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7935  0026EC  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7936  0026EE  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7937  0026F0                     l5037:
  7938                           
  7939                           ; BSR set to: 0
  7940  0026F0  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7941  0026F4  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7942  0026F8  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7943  0026FC  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7944  002700  0012               	return	
  7945  002702                     __end_of___fltol:
  7946                           	opt stack 0
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           postinc0	equ	0xFEE
  7955                           wreg	equ	0xFE8
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function ___flsub *****************
  7963 ;; Defined at:
  7964 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  b               4   88[BANK0 ] long 
  7967 ;;  a               4   92[BANK0 ] long 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  4   88[BANK0 ] long 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7979 ;;      Params:         0       8       0       0
  7980 ;;      Locals:         0       0       0       0
  7981 ;;      Temps:          0       0       0       0
  7982 ;;      Totals:         0       8       0       0
  7983 ;;Total ram usage:        8 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    5
  7986 ;; This function calls:
  7987 ;;		___fladd
  7988 ;; This function is called by:
  7989 ;;		_sprintf
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text25
  7994  002DC2                     __ptext25:
  7995                           	opt stack 0
  7996  002DC2                     ___flsub:
  7997                           	opt stack 23
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;incstack = 0
  8001  002DC2  0E00               	movlw	0
  8002  002DC4  0100               	movlb	0	; () banked
  8003  002DC6  1BBC               	xorwf	___flsub@a& (0+255),f,b
  8004  002DC8  0E00               	movlw	0
  8005  002DCA  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  8006  002DCC  0E00               	movlw	0
  8007  002DCE  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  8008  002DD0  0E80               	movlw	128
  8009  002DD2  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  8010                           
  8011                           ; BSR set to: 0
  8012  002DD4  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  8013  002DD8  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  8014  002DDC  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  8015  002DE0  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  8016  002DE4  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  8017  002DE8  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  8018  002DEC  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  8019  002DF0  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  8020  002DF4  EC90  F004         	call	___fladd	;wreg free
  8021  002DF8  C0A4  F0B8         	movff	?___fladd,?___flsub
  8022  002DFC  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  8023  002E00  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  8024  002E04  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  8025  002E08  0012               	return	
  8026  002E0A                     __end_of___flsub:
  8027                           	opt stack 0
  8028                           tblptru	equ	0xFF8
  8029                           tblptrh	equ	0xFF7
  8030                           tblptrl	equ	0xFF6
  8031                           tablat	equ	0xFF5
  8032                           prodh	equ	0xFF4
  8033                           prodl	equ	0xFF3
  8034                           intcon	equ	0xFF2
  8035                           postinc0	equ	0xFEE
  8036                           wreg	equ	0xFE8
  8037                           indf2	equ	0xFDF
  8038                           postinc2	equ	0xFDE
  8039                           fsr2h	equ	0xFDA
  8040                           fsr2l	equ	0xFD9
  8041                           status	equ	0xFD8
  8042                           
  8043 ;; *************** function ___fladd *****************
  8044 ;; Defined at:
  8045 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  b               4   68[BANK0 ] long 
  8048 ;;  a               4   72[BANK0 ] long 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  grs             1   87[BANK0 ] unsigned char 
  8051 ;;  bexp            1   86[BANK0 ] unsigned char 
  8052 ;;  aexp            1   85[BANK0 ] unsigned char 
  8053 ;;  signs           1   84[BANK0 ] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  4   68[BANK0 ] unsigned char 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8063 ;;      Params:         0       8       0       0
  8064 ;;      Locals:         0       4       0       0
  8065 ;;      Temps:          0       8       0       0
  8066 ;;      Totals:         0      20       0       0
  8067 ;;Total ram usage:       20 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    4
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_sprintf
  8074 ;;		___flsub
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text26
  8079  000920                     __ptext26:
  8080                           	opt stack 0
  8081  000920                     ___fladd:
  8082                           	opt stack 23
  8083                           
  8084                           ;incstack = 0
  8085  000920  0100               	movlb	0	; () banked
  8086  000922  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8087  000924  0B80               	andlw	128
  8088  000926  0100               	movlb	0	; () banked
  8089  000928  6FB4               	movwf	___fladd@signs& (0+255),b
  8090  00092A  0100               	movlb	0	; () banked
  8091  00092C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8092  00092E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  8093  000930  0100               	movlb	0	; () banked
  8094  000932  6FB6               	movwf	___fladd@bexp& (0+255),b
  8095                           
  8096                           ; BSR set to: 0
  8097  000934  0100               	movlb	0	; () banked
  8098  000936  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8099  000938  D002               	goto	l4345
  8100                           
  8101                           ; BSR set to: 0
  8102  00093A  0100               	movlb	0	; () banked
  8103  00093C  81B6               	bsf	___fladd@bexp& (0+255),0,b
  8104  00093E                     l4345:
  8105                           
  8106                           ; BSR set to: 0
  8107  00093E  0100               	movlb	0	; () banked
  8108  000940  51B6               	movf	___fladd@bexp& (0+255),w,b
  8109  000942  0100               	movlb	0	; () banked
  8110  000944  B4D8               	btfsc	status,2,c
  8111  000946  D012               	goto	l4355
  8112                           
  8113                           ; BSR set to: 0
  8114  000948  0100               	movlb	0	; () banked
  8115  00094A  29B6               	incf	___fladd@bexp& (0+255),w,b
  8116  00094C  A4D8               	btfss	status,2,c
  8117  00094E  D009               	goto	l4351
  8118                           
  8119                           ; BSR set to: 0
  8120  000950  0E00               	movlw	0
  8121  000952  0100               	movlb	0	; () banked
  8122  000954  6FA4               	movwf	___fladd@b& (0+255),b
  8123  000956  0E00               	movlw	0
  8124  000958  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8125  00095A  0E00               	movlw	0
  8126  00095C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8127  00095E  0E00               	movlw	0
  8128  000960  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8129  000962                     l4351:
  8130                           
  8131                           ; BSR set to: 0
  8132  000962  0100               	movlb	0	; () banked
  8133  000964  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8134                           
  8135                           ; BSR set to: 0
  8136  000966  0E00               	movlw	0
  8137  000968  0100               	movlb	0	; () banked
  8138  00096A  D008               	goto	L8
  8139  00096C                     l4355:
  8140                           
  8141                           ; BSR set to: 0
  8142  00096C  0E00               	movlw	0
  8143  00096E  0100               	movlb	0	; () banked
  8144  000970  6FA4               	movwf	___fladd@b& (0+255),b
  8145  000972  0E00               	movlw	0
  8146  000974  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8147  000976  0E00               	movlw	0
  8148  000978  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8149  00097A  0E00               	movlw	0
  8150  00097C                     L8:
  8151  00097C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8152                           
  8153                           ; BSR set to: 0
  8154                           
  8155                           ; BSR set to: 0
  8156  00097E  0100               	movlb	0	; () banked
  8157  000980  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8158  000982  0B80               	andlw	128
  8159  000984  0100               	movlb	0	; () banked
  8160  000986  6FB5               	movwf	___fladd@aexp& (0+255),b
  8161                           
  8162                           ; BSR set to: 0
  8163  000988  0100               	movlb	0	; () banked
  8164  00098A  51B4               	movf	___fladd@signs& (0+255),w,b
  8165  00098C  0100               	movlb	0	; () banked
  8166  00098E  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  8167  000990  B4D8               	btfsc	status,2,c
  8168  000992  D002               	goto	l4363
  8169                           
  8170                           ; BSR set to: 0
  8171  000994  0100               	movlb	0	; () banked
  8172  000996  8DB4               	bsf	___fladd@signs& (0+255),6,b
  8173  000998                     l4363:
  8174                           
  8175                           ; BSR set to: 0
  8176  000998  0100               	movlb	0	; () banked
  8177  00099A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8178  00099C  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  8179  00099E  0100               	movlb	0	; () banked
  8180  0009A0  6FB5               	movwf	___fladd@aexp& (0+255),b
  8181                           
  8182                           ; BSR set to: 0
  8183  0009A2  0100               	movlb	0	; () banked
  8184  0009A4  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  8185  0009A6  D002               	goto	l4369
  8186                           
  8187                           ; BSR set to: 0
  8188  0009A8  0100               	movlb	0	; () banked
  8189  0009AA  81B5               	bsf	___fladd@aexp& (0+255),0,b
  8190  0009AC                     l4369:
  8191                           
  8192                           ; BSR set to: 0
  8193  0009AC  0100               	movlb	0	; () banked
  8194  0009AE  51B5               	movf	___fladd@aexp& (0+255),w,b
  8195  0009B0  0100               	movlb	0	; () banked
  8196  0009B2  B4D8               	btfsc	status,2,c
  8197  0009B4  D012               	goto	l4379
  8198                           
  8199                           ; BSR set to: 0
  8200  0009B6  0100               	movlb	0	; () banked
  8201  0009B8  29B5               	incf	___fladd@aexp& (0+255),w,b
  8202  0009BA  A4D8               	btfss	status,2,c
  8203  0009BC  D009               	goto	l4375
  8204                           
  8205                           ; BSR set to: 0
  8206  0009BE  0E00               	movlw	0
  8207  0009C0  0100               	movlb	0	; () banked
  8208  0009C2  6FA8               	movwf	___fladd@a& (0+255),b
  8209  0009C4  0E00               	movlw	0
  8210  0009C6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8211  0009C8  0E00               	movlw	0
  8212  0009CA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8213  0009CC  0E00               	movlw	0
  8214  0009CE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8215  0009D0                     l4375:
  8216                           
  8217                           ; BSR set to: 0
  8218  0009D0  0100               	movlb	0	; () banked
  8219  0009D2  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8220                           
  8221                           ; BSR set to: 0
  8222  0009D4  0E00               	movlw	0
  8223  0009D6  0100               	movlb	0	; () banked
  8224  0009D8  D008               	goto	L9
  8225  0009DA                     l4379:
  8226                           
  8227                           ; BSR set to: 0
  8228  0009DA  0E00               	movlw	0
  8229  0009DC  0100               	movlb	0	; () banked
  8230  0009DE  6FA8               	movwf	___fladd@a& (0+255),b
  8231  0009E0  0E00               	movlw	0
  8232  0009E2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8233  0009E4  0E00               	movlw	0
  8234  0009E6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8235  0009E8  0E00               	movlw	0
  8236  0009EA                     L9:
  8237  0009EA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8238                           
  8239                           ; BSR set to: 0
  8240                           
  8241                           ; BSR set to: 0
  8242  0009EC  0100               	movlb	0	; () banked
  8243  0009EE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8244  0009F0  0100               	movlb	0	; () banked
  8245  0009F2  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8246  0009F4  B0D8               	btfsc	status,0,c
  8247  0009F6  D024               	goto	l4417
  8248                           
  8249                           ; BSR set to: 0
  8250  0009F8  0100               	movlb	0	; () banked
  8251  0009FA  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8252  0009FC  D003               	goto	l4387
  8253                           
  8254                           ; BSR set to: 0
  8255  0009FE  0E80               	movlw	128
  8256  000A00  0100               	movlb	0	; () banked
  8257  000A02  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8258  000A04                     l4387:
  8259                           
  8260                           ; BSR set to: 0
  8261  000A04  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8262                           
  8263                           ; BSR set to: 0
  8264  000A08  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8265                           
  8266                           ; BSR set to: 0
  8267  000A0C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8268                           
  8269                           ; BSR set to: 0
  8270  000A10  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8271                           
  8272                           ; BSR set to: 0
  8273  000A14  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8274                           
  8275                           ; BSR set to: 0
  8276  000A18  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8277                           
  8278                           ; BSR set to: 0
  8279  000A1C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8280                           
  8281                           ; BSR set to: 0
  8282  000A20  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8283                           
  8284                           ; BSR set to: 0
  8285  000A24  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8286                           
  8287                           ; BSR set to: 0
  8288  000A28  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8289                           
  8290                           ; BSR set to: 0
  8291  000A2C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8292                           
  8293                           ; BSR set to: 0
  8294  000A30  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8295                           
  8296                           ; BSR set to: 0
  8297  000A34  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8298                           
  8299                           ; BSR set to: 0
  8300  000A38  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8301                           
  8302                           ; BSR set to: 0
  8303  000A3C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8304  000A40                     l4417:
  8305                           
  8306                           ; BSR set to: 0
  8307  000A40  0E00               	movlw	0
  8308  000A42  0100               	movlb	0	; () banked
  8309  000A44  6FB7               	movwf	___fladd@grs& (0+255),b
  8310                           
  8311                           ; BSR set to: 0
  8312  000A46  0100               	movlb	0	; () banked
  8313  000A48  51B6               	movf	___fladd@bexp& (0+255),w,b
  8314  000A4A  0100               	movlb	0	; () banked
  8315  000A4C  6FAC               	movwf	??___fladd& (0+255),b
  8316  000A4E  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8317  000A50  0100               	movlb	0	; () banked
  8318  000A52  1FAC               	comf	??___fladd& (0+255),f,b
  8319  000A54  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8320  000A56  4BAC               	infsnz	??___fladd& (0+255),f,b
  8321  000A58  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8322  000A5A  0100               	movlb	0	; () banked
  8323  000A5C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8324  000A5E  0100               	movlb	0	; () banked
  8325  000A60  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8326  000A62  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8327  000A64  0100               	movlb	0	; () banked
  8328  000A66  51AC               	movf	??___fladd& (0+255),w,b
  8329  000A68  0100               	movlb	0	; () banked
  8330  000A6A  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8331  000A6C  0100               	movlb	0	; () banked
  8332  000A6E  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8333  000A70  0100               	movlb	0	; () banked
  8334  000A72  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8335  000A74  0100               	movlb	0	; () banked
  8336  000A76  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8337  000A78  D03D               	goto	l968
  8338  000A7A  0100               	movlb	0	; () banked
  8339  000A7C  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8340  000A7E  E105               	bnz	u4810
  8341  000A80  0E1A               	movlw	26
  8342  000A82  0100               	movlb	0	; () banked
  8343  000A84  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8344  000A86  A0D8               	btfss	status,0,c
  8345  000A88  D035               	goto	l968
  8346  000A8A                     u4810:
  8347                           
  8348                           ; BSR set to: 0
  8349  000A8A  0100               	movlb	0	; () banked
  8350  000A8C  51A4               	movf	___fladd@b& (0+255),w,b
  8351  000A8E  0100               	movlb	0	; () banked
  8352  000A90  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8353  000A92  0100               	movlb	0	; () banked
  8354  000A94  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8355  000A96  0100               	movlb	0	; () banked
  8356  000A98  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8357  000A9A  B4D8               	btfsc	status,2,c
  8358  000A9C  D002               	goto	u4820
  8359  000A9E  0E01               	movlw	1
  8360  000AA0  D001               	goto	u4830
  8361  000AA2                     u4820:
  8362  000AA2  0E00               	movlw	0
  8363  000AA4                     u4830:
  8364  000AA4  0100               	movlb	0	; () banked
  8365  000AA6  6FB7               	movwf	___fladd@grs& (0+255),b
  8366                           
  8367                           ; BSR set to: 0
  8368  000AA8  0E00               	movlw	0
  8369  000AAA  0100               	movlb	0	; () banked
  8370  000AAC  6FA4               	movwf	___fladd@b& (0+255),b
  8371  000AAE  0E00               	movlw	0
  8372  000AB0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8373  000AB2  0E00               	movlw	0
  8374  000AB4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8375  000AB6  0E00               	movlw	0
  8376  000AB8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8377                           
  8378                           ; BSR set to: 0
  8379  000ABA  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8380  000ABE  D020               	goto	l967
  8381  000AC0                     l969:
  8382                           
  8383                           ; BSR set to: 0
  8384  000AC0  0100               	movlb	0	; () banked
  8385  000AC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8386  000AC4  D007               	goto	l4429
  8387                           
  8388                           ; BSR set to: 0
  8389  000AC6  0100               	movlb	0	; () banked
  8390  000AC8  90D8               	bcf	status,0,c
  8391  000ACA  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8392  000ACC  0901               	iorlw	1
  8393  000ACE  0100               	movlb	0	; () banked
  8394  000AD0  6FB7               	movwf	___fladd@grs& (0+255),b
  8395  000AD2  D003               	goto	l4431
  8396  000AD4                     l4429:
  8397                           
  8398                           ; BSR set to: 0
  8399  000AD4  0100               	movlb	0	; () banked
  8400  000AD6  90D8               	bcf	status,0,c
  8401  000AD8  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8402  000ADA                     l4431:
  8403                           
  8404                           ; BSR set to: 0
  8405  000ADA  0100               	movlb	0	; () banked
  8406  000ADC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8407  000ADE  D002               	goto	l4435
  8408                           
  8409                           ; BSR set to: 0
  8410  000AE0  0100               	movlb	0	; () banked
  8411  000AE2  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8412  000AE4                     l4435:
  8413                           
  8414                           ; BSR set to: 0
  8415  000AE4  0100               	movlb	0	; () banked
  8416  000AE6  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8417  000AE8  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8418  000AEA  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8419  000AEC  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8420  000AEE  33A4               	rrcf	___fladd@b& (0+255),f,b
  8421                           
  8422                           ; BSR set to: 0
  8423  000AF0  0100               	movlb	0	; () banked
  8424  000AF2  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8425  000AF4                     l968:
  8426                           
  8427                           ; BSR set to: 0
  8428  000AF4  0100               	movlb	0	; () banked
  8429  000AF6  51B5               	movf	___fladd@aexp& (0+255),w,b
  8430  000AF8  0100               	movlb	0	; () banked
  8431  000AFA  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8432  000AFC  A0D8               	btfss	status,0,c
  8433  000AFE  D7E0               	goto	l969
  8434  000B00                     l967:
  8435                           
  8436                           ; BSR set to: 0
  8437  000B00  0100               	movlb	0	; () banked
  8438  000B02  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8439  000B04  D03F               	goto	l4463
  8440                           
  8441                           ; BSR set to: 0
  8442  000B06  0100               	movlb	0	; () banked
  8443  000B08  51B6               	movf	___fladd@bexp& (0+255),w,b
  8444  000B0A  0100               	movlb	0	; () banked
  8445  000B0C  A4D8               	btfss	status,2,c
  8446  000B0E  D00A               	goto	l4445
  8447                           
  8448                           ; BSR set to: 0
  8449  000B10  0E00               	movlw	0
  8450  000B12  0100               	movlb	0	; () banked
  8451  000B14  6FA4               	movwf	?___fladd& (0+255),b
  8452  000B16  0E00               	movlw	0
  8453  000B18  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8454  000B1A  0E00               	movlw	0
  8455  000B1C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8456  000B1E  0E00               	movlw	0
  8457  000B20  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8458                           
  8459                           ; BSR set to: 0
  8460  000B22  0012               	return	
  8461  000B24                     l4445:
  8462                           
  8463                           ; BSR set to: 0
  8464  000B24  0100               	movlb	0	; () banked
  8465  000B26  51A8               	movf	___fladd@a& (0+255),w,b
  8466  000B28  0100               	movlb	0	; () banked
  8467  000B2A  27A4               	addwf	___fladd@b& (0+255),f,b
  8468  000B2C  0100               	movlb	0	; () banked
  8469  000B2E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8470  000B30  0100               	movlb	0	; () banked
  8471  000B32  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8472  000B34  0100               	movlb	0	; () banked
  8473  000B36  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8474  000B38  0100               	movlb	0	; () banked
  8475  000B3A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8476  000B3C  0100               	movlb	0	; () banked
  8477  000B3E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8478  000B40  0100               	movlb	0	; () banked
  8479  000B42  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8480                           
  8481                           ; BSR set to: 0
  8482  000B44  0100               	movlb	0	; () banked
  8483  000B46  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8484  000B48  D0CC               	goto	l4499
  8485                           
  8486                           ; BSR set to: 0
  8487  000B4A  0100               	movlb	0	; () banked
  8488  000B4C  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8489  000B4E  D009               	goto	l4453
  8490                           
  8491                           ; BSR set to: 0
  8492  000B50  0100               	movlb	0	; () banked
  8493  000B52  90D8               	bcf	status,0,c
  8494  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8495  000B56  0100               	movlb	0	; () banked
  8496  000B58  51B7               	movf	___fladd@grs& (0+255),w,b
  8497  000B5A  0901               	iorlw	1
  8498  000B5C  0100               	movlb	0	; () banked
  8499  000B5E  6FB7               	movwf	___fladd@grs& (0+255),b
  8500  000B60  D003               	goto	l4455
  8501  000B62                     l4453:
  8502                           
  8503                           ; BSR set to: 0
  8504  000B62  0100               	movlb	0	; () banked
  8505  000B64  90D8               	bcf	status,0,c
  8506  000B66  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8507  000B68                     l4455:
  8508                           
  8509                           ; BSR set to: 0
  8510  000B68  0100               	movlb	0	; () banked
  8511  000B6A  A1A4               	btfss	___fladd@b& (0+255),0,b
  8512  000B6C  D002               	goto	l4459
  8513                           
  8514                           ; BSR set to: 0
  8515  000B6E  0100               	movlb	0	; () banked
  8516  000B70  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8517  000B72                     l4459:
  8518                           
  8519                           ; BSR set to: 0
  8520  000B72  0100               	movlb	0	; () banked
  8521  000B74  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8522  000B76  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8523  000B78  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8524  000B7A  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8525  000B7C  33A4               	rrcf	___fladd@b& (0+255),f,b
  8526                           
  8527                           ; BSR set to: 0
  8528  000B7E  0100               	movlb	0	; () banked
  8529  000B80  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 0
  8532  000B82  D0AF               	goto	l4499
  8533  000B84                     l4463:
  8534                           
  8535                           ; BSR set to: 0
  8536  000B84  0100               	movlb	0	; () banked
  8537  000B86  51A8               	movf	___fladd@a& (0+255),w,b
  8538  000B88  0100               	movlb	0	; () banked
  8539  000B8A  5DA4               	subwf	___fladd@b& (0+255),w,b
  8540  000B8C  0100               	movlb	0	; () banked
  8541  000B8E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8542  000B90  0100               	movlb	0	; () banked
  8543  000B92  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8544  000B94  0100               	movlb	0	; () banked
  8545  000B96  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8546  000B98  0100               	movlb	0	; () banked
  8547  000B9A  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8548  000B9C  0100               	movlb	0	; () banked
  8549  000B9E  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8550  000BA0  0A80               	xorlw	128
  8551  000BA2  0100               	movlb	0	; () banked
  8552  000BA4  6FAC               	movwf	??___fladd& (0+255),b
  8553  000BA6  0100               	movlb	0	; () banked
  8554  000BA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8555  000BAA  0A80               	xorlw	128
  8556  000BAC  0100               	movlb	0	; () banked
  8557  000BAE  59AC               	subwfb	??___fladd& (0+255),w,b
  8558  000BB0  B0D8               	btfsc	status,0,c
  8559  000BB2  D050               	goto	l4473
  8560                           
  8561                           ; BSR set to: 0
  8562  000BB4  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8563  000BB8  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8564  000BBC  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8565  000BC0  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8566  000BC4  0100               	movlb	0	; () banked
  8567  000BC6  1FAC               	comf	??___fladd& (0+255),f,b
  8568  000BC8  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8569  000BCA  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8570  000BCC  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8571  000BCE  2BAC               	incf	??___fladd& (0+255),f,b
  8572  000BD0  0E00               	movlw	0
  8573  000BD2  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8574  000BD4  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8575  000BD6  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8576  000BD8  0100               	movlb	0	; () banked
  8577  000BDA  51A8               	movf	___fladd@a& (0+255),w,b
  8578  000BDC  0100               	movlb	0	; () banked
  8579  000BDE  25AC               	addwf	??___fladd& (0+255),w,b
  8580  000BE0  0100               	movlb	0	; () banked
  8581  000BE2  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8582  000BE4  0100               	movlb	0	; () banked
  8583  000BE6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8584  000BE8  0100               	movlb	0	; () banked
  8585  000BEA  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8586  000BEC  0100               	movlb	0	; () banked
  8587  000BEE  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8588  000BF0  0100               	movlb	0	; () banked
  8589  000BF2  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8590  000BF4  0100               	movlb	0	; () banked
  8591  000BF6  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8592  000BF8  0100               	movlb	0	; () banked
  8593  000BFA  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8594  000BFC  0100               	movlb	0	; () banked
  8595  000BFE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8596  000C00  0100               	movlb	0	; () banked
  8597  000C02  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8598  000C04  0100               	movlb	0	; () banked
  8599  000C06  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8600  000C08  0EFF               	movlw	255
  8601  000C0A  0100               	movlb	0	; () banked
  8602  000C0C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8603  000C0E  0100               	movlb	0	; () banked
  8604  000C10  6FA4               	movwf	___fladd@b& (0+255),b
  8605  000C12  0EFF               	movlw	255
  8606  000C14  0100               	movlb	0	; () banked
  8607  000C16  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8608  000C18  0100               	movlb	0	; () banked
  8609  000C1A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8610  000C1C  0EFF               	movlw	255
  8611  000C1E  0100               	movlb	0	; () banked
  8612  000C20  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8613  000C22  0100               	movlb	0	; () banked
  8614  000C24  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8615  000C26  0EFF               	movlw	255
  8616  000C28  0100               	movlb	0	; () banked
  8617  000C2A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8618  000C2C  0100               	movlb	0	; () banked
  8619  000C2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8620  000C30  0E80               	movlw	128
  8621  000C32  0100               	movlb	0	; () banked
  8622  000C34  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8623                           
  8624                           ; BSR set to: 0
  8625  000C36  0100               	movlb	0	; () banked
  8626  000C38  6DB7               	negf	___fladd@grs& (0+255),b
  8627                           
  8628                           ; BSR set to: 0
  8629  000C3A  0100               	movlb	0	; () banked
  8630  000C3C  51B7               	movf	___fladd@grs& (0+255),w,b
  8631  000C3E  0100               	movlb	0	; () banked
  8632  000C40  A4D8               	btfss	status,2,c
  8633  000C42  D018               	goto	l984
  8634                           
  8635                           ; BSR set to: 0
  8636  000C44  0E01               	movlw	1
  8637  000C46  0100               	movlb	0	; () banked
  8638  000C48  27A4               	addwf	___fladd@b& (0+255),f,b
  8639  000C4A  0E00               	movlw	0
  8640  000C4C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8641  000C4E  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8642  000C50  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8643                           
  8644                           ; BSR set to: 0
  8645  000C52  D010               	goto	l984
  8646  000C54                     l4473:
  8647                           
  8648                           ; BSR set to: 0
  8649  000C54  0100               	movlb	0	; () banked
  8650  000C56  51A8               	movf	___fladd@a& (0+255),w,b
  8651  000C58  0100               	movlb	0	; () banked
  8652  000C5A  5FA4               	subwf	___fladd@b& (0+255),f,b
  8653  000C5C  0100               	movlb	0	; () banked
  8654  000C5E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8655  000C60  0100               	movlb	0	; () banked
  8656  000C62  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8657  000C64  0100               	movlb	0	; () banked
  8658  000C66  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8659  000C68  0100               	movlb	0	; () banked
  8660  000C6A  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8661  000C6C  0100               	movlb	0	; () banked
  8662  000C6E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8663  000C70  0100               	movlb	0	; () banked
  8664  000C72  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8665  000C74                     l984:
  8666                           
  8667                           ; BSR set to: 0
  8668  000C74  0100               	movlb	0	; () banked
  8669  000C76  51A4               	movf	___fladd@b& (0+255),w,b
  8670  000C78  0100               	movlb	0	; () banked
  8671  000C7A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8672  000C7C  0100               	movlb	0	; () banked
  8673  000C7E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8674  000C80  0100               	movlb	0	; () banked
  8675  000C82  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8676  000C84  A4D8               	btfss	status,2,c
  8677  000C86  D02A               	goto	l4497
  8678                           
  8679                           ; BSR set to: 0
  8680  000C88  0100               	movlb	0	; () banked
  8681  000C8A  51B7               	movf	___fladd@grs& (0+255),w,b
  8682  000C8C  0100               	movlb	0	; () banked
  8683  000C8E  A4D8               	btfss	status,2,c
  8684  000C90  D025               	goto	l4497
  8685                           
  8686                           ; BSR set to: 0
  8687  000C92  0E00               	movlw	0
  8688  000C94  0100               	movlb	0	; () banked
  8689  000C96  6FA4               	movwf	?___fladd& (0+255),b
  8690  000C98  0E00               	movlw	0
  8691  000C9A  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8692  000C9C  0E00               	movlw	0
  8693  000C9E  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8694  000CA0  0E00               	movlw	0
  8695  000CA2  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8696                           
  8697                           ; BSR set to: 0
  8698  000CA4  0012               	return	
  8699  000CA6                     l4481:
  8700                           
  8701                           ; BSR set to: 0
  8702  000CA6  0100               	movlb	0	; () banked
  8703  000CA8  90D8               	bcf	status,0,c
  8704  000CAA  37A4               	rlcf	___fladd@b& (0+255),f,b
  8705  000CAC  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8706  000CAE  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8707  000CB0  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8708                           
  8709                           ; BSR set to: 0
  8710  000CB2  0100               	movlb	0	; () banked
  8711  000CB4  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8712  000CB6  D002               	goto	l4487
  8713                           
  8714                           ; BSR set to: 0
  8715  000CB8  0100               	movlb	0	; () banked
  8716  000CBA  81A4               	bsf	___fladd@b& (0+255),0,b
  8717  000CBC                     l4487:
  8718                           
  8719                           ; BSR set to: 0
  8720  000CBC  0100               	movlb	0	; () banked
  8721  000CBE  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8722  000CC0  D003               	goto	l4491
  8723                           
  8724                           ; BSR set to: 0
  8725  000CC2  80D8               	bsf	status,0,c
  8726  000CC4  0100               	movlb	0	; () banked
  8727  000CC6  D002               	goto	L10
  8728  000CC8                     l4491:
  8729                           
  8730                           ; BSR set to: 0
  8731  000CC8  0100               	movlb	0	; () banked
  8732  000CCA  90D8               	bcf	status,0,c
  8733  000CCC                     L10:
  8734  000CCC  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8735                           
  8736                           ; BSR set to: 0
  8737                           
  8738                           ; BSR set to: 0
  8739  000CCE  0100               	movlb	0	; () banked
  8740  000CD0  51B6               	movf	___fladd@bexp& (0+255),w,b
  8741  000CD2  0100               	movlb	0	; () banked
  8742  000CD4  B4D8               	btfsc	status,2,c
  8743  000CD6  D002               	goto	l4497
  8744                           
  8745                           ; BSR set to: 0
  8746  000CD8  0100               	movlb	0	; () banked
  8747  000CDA  07B6               	decf	___fladd@bexp& (0+255),f,b
  8748  000CDC                     l4497:
  8749                           
  8750                           ; BSR set to: 0
  8751  000CDC  0100               	movlb	0	; () banked
  8752  000CDE  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8753  000CE0  D7E2               	goto	l4481
  8754  000CE2                     l4499:
  8755                           
  8756                           ; BSR set to: 0
  8757  000CE2  0E00               	movlw	0
  8758  000CE4  0100               	movlb	0	; () banked
  8759  000CE6  6FB5               	movwf	___fladd@aexp& (0+255),b
  8760                           
  8761                           ; BSR set to: 0
  8762  000CE8  0100               	movlb	0	; () banked
  8763  000CEA  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8764  000CEC  D00D               	goto	l993
  8765                           
  8766                           ; BSR set to: 0
  8767  000CEE  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8768  000CF2  0E7F               	movlw	127
  8769  000CF4  0100               	movlb	0	; () banked
  8770  000CF6  17AC               	andwf	??___fladd& (0+255),f,b
  8771  000CF8  A4D8               	btfss	status,2,c
  8772  000CFA  D003               	goto	l4507
  8773                           
  8774                           ; BSR set to: 0
  8775                           
  8776                           ; BSR set to: 0
  8777  000CFC  0100               	movlb	0	; () banked
  8778  000CFE  A1A4               	btfss	___fladd@b& (0+255),0,b
  8779  000D00  D003               	goto	l993
  8780  000D02                     l4507:
  8781                           
  8782                           ; BSR set to: 0
  8783  000D02  0E01               	movlw	1
  8784  000D04  0100               	movlb	0	; () banked
  8785  000D06  6FB5               	movwf	___fladd@aexp& (0+255),b
  8786  000D08                     l993:
  8787                           
  8788                           ; BSR set to: 0
  8789  000D08  0100               	movlb	0	; () banked
  8790  000D0A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8791  000D0C  0100               	movlb	0	; () banked
  8792  000D0E  B4D8               	btfsc	status,2,c
  8793  000D10  D026               	goto	l4517
  8794                           
  8795                           ; BSR set to: 0
  8796  000D12  0E01               	movlw	1
  8797  000D14  0100               	movlb	0	; () banked
  8798  000D16  27A4               	addwf	___fladd@b& (0+255),f,b
  8799  000D18  0E00               	movlw	0
  8800  000D1A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8801  000D1C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8802  000D1E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8803                           
  8804                           ; BSR set to: 0
  8805  000D20  0100               	movlb	0	; () banked
  8806  000D22  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8807  000D24  D01C               	goto	l4517
  8808                           
  8809                           ; BSR set to: 0
  8810  000D26  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8811  000D2A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8812  000D2E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8813  000D32  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8814  000D36  0100               	movlb	0	; () banked
  8815  000D38  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8816  000D3A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8817  000D3C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8818  000D3E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8819  000D40  33AC               	rrcf	??___fladd& (0+255),f,b
  8820  000D42  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8821  000D46  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8822  000D4A  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8823  000D4E  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8824  000D52  0100               	movlb	0	; () banked
  8825  000D54  29B6               	incf	___fladd@bexp& (0+255),w,b
  8826  000D56  B4D8               	btfsc	status,2,c
  8827  000D58  D002               	goto	l4517
  8828                           
  8829                           ; BSR set to: 0
  8830  000D5A  0100               	movlb	0	; () banked
  8831  000D5C  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8832  000D5E                     l4517:
  8833                           
  8834                           ; BSR set to: 0
  8835  000D5E  0100               	movlb	0	; () banked
  8836  000D60  29B6               	incf	___fladd@bexp& (0+255),w,b
  8837  000D62  B4D8               	btfsc	status,2,c
  8838  000D64  D005               	goto	l4521
  8839                           
  8840                           ; BSR set to: 0
  8841  000D66  0100               	movlb	0	; () banked
  8842  000D68  51B6               	movf	___fladd@bexp& (0+255),w,b
  8843  000D6A  0100               	movlb	0	; () banked
  8844  000D6C  A4D8               	btfss	status,2,c
  8845  000D6E  D011               	goto	l4525
  8846  000D70                     l4521:
  8847                           
  8848                           ; BSR set to: 0
  8849  000D70  0E00               	movlw	0
  8850  000D72  0100               	movlb	0	; () banked
  8851  000D74  6FA4               	movwf	___fladd@b& (0+255),b
  8852  000D76  0E00               	movlw	0
  8853  000D78  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8854  000D7A  0E00               	movlw	0
  8855  000D7C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8856  000D7E  0E00               	movlw	0
  8857  000D80  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8858  000D82  0100               	movlb	0	; () banked
  8859  000D84  51B6               	movf	___fladd@bexp& (0+255),w,b
  8860  000D86  0100               	movlb	0	; () banked
  8861  000D88  A4D8               	btfss	status,2,c
  8862  000D8A  D003               	goto	l4525
  8863                           
  8864                           ; BSR set to: 0
  8865  000D8C  0E00               	movlw	0
  8866  000D8E  0100               	movlb	0	; () banked
  8867  000D90  6FB4               	movwf	___fladd@signs& (0+255),b
  8868  000D92                     l4525:
  8869                           
  8870                           ; BSR set to: 0
  8871  000D92  0100               	movlb	0	; () banked
  8872  000D94  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8873  000D96  D003               	goto	l4529
  8874                           
  8875                           ; BSR set to: 0
  8876  000D98  0100               	movlb	0	; () banked
  8877  000D9A  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8878  000D9C  D002               	goto	l4531
  8879  000D9E                     l4529:
  8880                           
  8881                           ; BSR set to: 0
  8882  000D9E  0100               	movlb	0	; () banked
  8883  000DA0  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8884  000DA2                     l4531:
  8885                           
  8886                           ; BSR set to: 0
  8887  000DA2  0100               	movlb	0	; () banked
  8888  000DA4  90D8               	bcf	status,0,c
  8889  000DA6  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8890  000DA8  0100               	movlb	0	; () banked
  8891  000DAA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8892                           
  8893                           ; BSR set to: 0
  8894  000DAC  0100               	movlb	0	; () banked
  8895  000DAE  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8896  000DB0  D002               	goto	l4537
  8897                           
  8898                           ; BSR set to: 0
  8899  000DB2  0100               	movlb	0	; () banked
  8900  000DB4  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8901  000DB6                     l4537:
  8902                           
  8903                           ; BSR set to: 0
  8904  000DB6  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8905  000DBA  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8906  000DBE  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8907  000DC2  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8908  000DC6  0012               	return	
  8909  000DC8                     __end_of___fladd:
  8910                           	opt stack 0
  8911                           tblptru	equ	0xFF8
  8912                           tblptrh	equ	0xFF7
  8913                           tblptrl	equ	0xFF6
  8914                           tablat	equ	0xFF5
  8915                           prodh	equ	0xFF4
  8916                           prodl	equ	0xFF3
  8917                           intcon	equ	0xFF2
  8918                           postinc0	equ	0xFEE
  8919                           wreg	equ	0xFE8
  8920                           indf2	equ	0xFDF
  8921                           postinc2	equ	0xFDE
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function ___flneg *****************
  8927 ;; Defined at:
  8928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  f1              4   24[COMRAM] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  4   24[COMRAM] unsigned char 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8942 ;;      Params:         4       0       0       0
  8943 ;;      Locals:         0       0       0       0
  8944 ;;      Temps:          0       0       0       0
  8945 ;;      Totals:         4       0       0       0
  8946 ;;Total ram usage:        4 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    4
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_sprintf
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text27
  8957  002F64                     __ptext27:
  8958                           	opt stack 0
  8959  002F64                     ___flneg:
  8960                           	opt stack 24
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;incstack = 0
  8964  002F64  503C               	movf	___flneg@f1,w,c
  8965  002F66  103D               	iorwf	___flneg@f1+1,w,c
  8966  002F68  103E               	iorwf	___flneg@f1+2,w,c
  8967  002F6A  103F               	iorwf	___flneg@f1+3,w,c
  8968  002F6C  B4D8               	btfsc	status,2,c
  8969  002F6E  D008               	goto	l4993
  8970  002F70  0E00               	movlw	0
  8971  002F72  1A3C               	xorwf	___flneg@f1,f,c
  8972  002F74  0E00               	movlw	0
  8973  002F76  1A3D               	xorwf	___flneg@f1+1,f,c
  8974  002F78  0E00               	movlw	0
  8975  002F7A  1A3E               	xorwf	___flneg@f1+2,f,c
  8976  002F7C  0E80               	movlw	128
  8977  002F7E  1A3F               	xorwf	___flneg@f1+3,f,c
  8978  002F80                     l4993:
  8979  002F80  C03C  F03C         	movff	___flneg@f1,?___flneg
  8980  002F84  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8981  002F88  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8982  002F8C  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8983  002F90  0012               	return	
  8984  002F92                     __end_of___flneg:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           intcon	equ	0xFF2
  8993                           postinc0	equ	0xFEE
  8994                           wreg	equ	0xFE8
  8995                           indf2	equ	0xFDF
  8996                           postinc2	equ	0xFDE
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8
  9000                           
  9001 ;; *************** function ___flge *****************
  9002 ;; Defined at:
  9003 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  ff1             4   16[BANK0 ] unsigned char 
  9006 ;;  ff2             4   20[BANK0 ] unsigned char 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;		None               void
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9018 ;;      Params:         0       8       0       0
  9019 ;;      Locals:         0       0       0       0
  9020 ;;      Temps:          4       0       0       0
  9021 ;;      Totals:         4       8       0       0
  9022 ;;Total ram usage:       12 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    4
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_sprintf
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text28
  9033  002384                     __ptext28:
  9034                           	opt stack 0
  9035  002384                     ___flge:
  9036                           	opt stack 24
  9037                           
  9038                           ;incstack = 0
  9039  002384  0E00               	movlw	0
  9040  002386  0100               	movlb	0	; () banked
  9041  002388  1570               	andwf	___flge@ff1& (0+255),w,b
  9042  00238A  6E3C               	movwf	??___flge& (0+255),c
  9043  00238C  0E00               	movlw	0
  9044  00238E  0100               	movlb	0	; () banked
  9045  002390  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  9046  002392  6E3D               	movwf	(??___flge+1)& (0+255),c
  9047  002394  0E80               	movlw	128
  9048  002396  0100               	movlb	0	; () banked
  9049  002398  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  9050  00239A  6E3E               	movwf	(??___flge+2)& (0+255),c
  9051  00239C  0E7F               	movlw	127
  9052  00239E  0100               	movlb	0	; () banked
  9053  0023A0  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  9054  0023A2  6E3F               	movwf	(??___flge+3)& (0+255),c
  9055  0023A4  503C               	movf	??___flge,w,c
  9056  0023A6  103D               	iorwf	??___flge+1,w,c
  9057  0023A8  103E               	iorwf	??___flge+2,w,c
  9058  0023AA  103F               	iorwf	??___flge+3,w,c
  9059  0023AC  A4D8               	btfss	status,2,c
  9060  0023AE  D009               	goto	l4971
  9061                           
  9062                           ; BSR set to: 0
  9063  0023B0  0E00               	movlw	0
  9064  0023B2  0100               	movlb	0	; () banked
  9065  0023B4  6F70               	movwf	___flge@ff1& (0+255),b
  9066  0023B6  0E00               	movlw	0
  9067  0023B8  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  9068  0023BA  0E00               	movlw	0
  9069  0023BC  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  9070  0023BE  0E00               	movlw	0
  9071  0023C0  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  9072  0023C2                     l4971:
  9073                           
  9074                           ; BSR set to: 0
  9075  0023C2  0E00               	movlw	0
  9076  0023C4  0100               	movlb	0	; () banked
  9077  0023C6  1574               	andwf	___flge@ff2& (0+255),w,b
  9078  0023C8  6E3C               	movwf	??___flge& (0+255),c
  9079  0023CA  0E00               	movlw	0
  9080  0023CC  0100               	movlb	0	; () banked
  9081  0023CE  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  9082  0023D0  6E3D               	movwf	(??___flge+1)& (0+255),c
  9083  0023D2  0E80               	movlw	128
  9084  0023D4  0100               	movlb	0	; () banked
  9085  0023D6  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  9086  0023D8  6E3E               	movwf	(??___flge+2)& (0+255),c
  9087  0023DA  0E7F               	movlw	127
  9088  0023DC  0100               	movlb	0	; () banked
  9089  0023DE  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  9090  0023E0  6E3F               	movwf	(??___flge+3)& (0+255),c
  9091  0023E2  503C               	movf	??___flge,w,c
  9092  0023E4  103D               	iorwf	??___flge+1,w,c
  9093  0023E6  103E               	iorwf	??___flge+2,w,c
  9094  0023E8  103F               	iorwf	??___flge+3,w,c
  9095  0023EA  A4D8               	btfss	status,2,c
  9096  0023EC  D009               	goto	l4975
  9097                           
  9098                           ; BSR set to: 0
  9099  0023EE  0E00               	movlw	0
  9100  0023F0  0100               	movlb	0	; () banked
  9101  0023F2  6F74               	movwf	___flge@ff2& (0+255),b
  9102  0023F4  0E00               	movlw	0
  9103  0023F6  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9104  0023F8  0E00               	movlw	0
  9105  0023FA  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9106  0023FC  0E00               	movlw	0
  9107  0023FE  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9108  002400                     l4975:
  9109                           
  9110                           ; BSR set to: 0
  9111  002400  0100               	movlb	0	; () banked
  9112  002402  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  9113  002404  D021               	goto	l4979
  9114                           
  9115                           ; BSR set to: 0
  9116  002406  C070  F03C         	movff	___flge@ff1,??___flge
  9117  00240A  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  9118  00240E  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  9119  002412  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  9120  002416  1E3C               	comf	??___flge,f,c
  9121  002418  1E3D               	comf	??___flge+1,f,c
  9122  00241A  1E3E               	comf	??___flge+2,f,c
  9123  00241C  1E3F               	comf	??___flge+3,f,c
  9124  00241E  2A3C               	incf	??___flge,f,c
  9125  002420  0E00               	movlw	0
  9126  002422  223D               	addwfc	??___flge+1,f,c
  9127  002424  223E               	addwfc	??___flge+2,f,c
  9128  002426  223F               	addwfc	??___flge+3,f,c
  9129  002428  0E00               	movlw	0
  9130  00242A  243C               	addwf	??___flge,w,c
  9131  00242C  0100               	movlb	0	; () banked
  9132  00242E  6F70               	movwf	___flge@ff1& (0+255),b
  9133  002430  0E00               	movlw	0
  9134  002432  203D               	addwfc	??___flge+1,w,c
  9135  002434  0100               	movlb	0	; () banked
  9136  002436  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  9137  002438  0E00               	movlw	0
  9138  00243A  203E               	addwfc	??___flge+2,w,c
  9139  00243C  0100               	movlb	0	; () banked
  9140  00243E  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  9141  002440  0E80               	movlw	128
  9142  002442  203F               	addwfc	??___flge+3,w,c
  9143  002444  0100               	movlb	0	; () banked
  9144  002446  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  9145  002448                     l4979:
  9146                           
  9147                           ; BSR set to: 0
  9148  002448  0100               	movlb	0	; () banked
  9149  00244A  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  9150  00244C  D021               	goto	l690
  9151                           
  9152                           ; BSR set to: 0
  9153  00244E  C074  F03C         	movff	___flge@ff2,??___flge
  9154  002452  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  9155  002456  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  9156  00245A  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  9157  00245E  1E3C               	comf	??___flge,f,c
  9158  002460  1E3D               	comf	??___flge+1,f,c
  9159  002462  1E3E               	comf	??___flge+2,f,c
  9160  002464  1E3F               	comf	??___flge+3,f,c
  9161  002466  2A3C               	incf	??___flge,f,c
  9162  002468  0E00               	movlw	0
  9163  00246A  223D               	addwfc	??___flge+1,f,c
  9164  00246C  223E               	addwfc	??___flge+2,f,c
  9165  00246E  223F               	addwfc	??___flge+3,f,c
  9166  002470  0E00               	movlw	0
  9167  002472  243C               	addwf	??___flge,w,c
  9168  002474  0100               	movlb	0	; () banked
  9169  002476  6F74               	movwf	___flge@ff2& (0+255),b
  9170  002478  0E00               	movlw	0
  9171  00247A  203D               	addwfc	??___flge+1,w,c
  9172  00247C  0100               	movlb	0	; () banked
  9173  00247E  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9174  002480  0E00               	movlw	0
  9175  002482  203E               	addwfc	??___flge+2,w,c
  9176  002484  0100               	movlb	0	; () banked
  9177  002486  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9178  002488  0E80               	movlw	128
  9179  00248A  203F               	addwfc	??___flge+3,w,c
  9180  00248C  0100               	movlb	0	; () banked
  9181  00248E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9182  002490                     l690:
  9183                           
  9184                           ; BSR set to: 0
  9185  002490  0E00               	movlw	0
  9186  002492  0100               	movlb	0	; () banked
  9187  002494  1B70               	xorwf	___flge@ff1& (0+255),f,b
  9188  002496  0E00               	movlw	0
  9189  002498  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9190  00249A  0E00               	movlw	0
  9191  00249C  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9192  00249E  0E80               	movlw	128
  9193  0024A0  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9194  0024A2  0E00               	movlw	0
  9195  0024A4  0100               	movlb	0	; () banked
  9196  0024A6  1B74               	xorwf	___flge@ff2& (0+255),f,b
  9197  0024A8  0E00               	movlw	0
  9198  0024AA  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9199  0024AC  0E00               	movlw	0
  9200  0024AE  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9201  0024B0  0E80               	movlw	128
  9202  0024B2  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9203  0024B4  0100               	movlb	0	; () banked
  9204  0024B6  5174               	movf	___flge@ff2& (0+255),w,b
  9205  0024B8  0100               	movlb	0	; () banked
  9206  0024BA  5D70               	subwf	___flge@ff1& (0+255),w,b
  9207  0024BC  0100               	movlb	0	; () banked
  9208  0024BE  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  9209  0024C0  0100               	movlb	0	; () banked
  9210  0024C2  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9211  0024C4  0100               	movlb	0	; () banked
  9212  0024C6  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  9213  0024C8  0100               	movlb	0	; () banked
  9214  0024CA  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9215  0024CC  0100               	movlb	0	; () banked
  9216  0024CE  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  9217  0024D0  0100               	movlb	0	; () banked
  9218  0024D2  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9219  0024D4  B0D8               	btfsc	status,0,c
  9220  0024D6  D002               	goto	l4985
  9221                           
  9222                           ; BSR set to: 0
  9223  0024D8  90D8               	bcf	status,0,c
  9224  0024DA  0012               	return	
  9225  0024DC                     l4985:
  9226                           
  9227                           ; BSR set to: 0
  9228  0024DC  80D8               	bsf	status,0,c
  9229                           
  9230                           ; BSR set to: 0
  9231  0024DE  0012               	return	
  9232  0024E0                     __end_of___flge:
  9233                           	opt stack 0
  9234                           tblptru	equ	0xFF8
  9235                           tblptrh	equ	0xFF7
  9236                           tblptrl	equ	0xFF6
  9237                           tablat	equ	0xFF5
  9238                           prodh	equ	0xFF4
  9239                           prodl	equ	0xFF3
  9240                           intcon	equ	0xFF2
  9241                           postinc0	equ	0xFEE
  9242                           wreg	equ	0xFE8
  9243                           indf2	equ	0xFDF
  9244                           postinc2	equ	0xFDE
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function ___lwdiv *****************
  9250 ;; Defined at:
  9251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  dividend        2   24[COMRAM] unsigned int 
  9254 ;;  divisor         2   26[COMRAM] unsigned int 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  quotient        2   28[COMRAM] unsigned int 
  9257 ;;  counter         1   30[COMRAM] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  2   24[COMRAM] unsigned int 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9267 ;;      Params:         4       0       0       0
  9268 ;;      Locals:         3       0       0       0
  9269 ;;      Temps:          0       0       0       0
  9270 ;;      Totals:         7       0       0       0
  9271 ;;Total ram usage:        7 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    4
  9274 ;; This function calls:
  9275 ;;		Nothing
  9276 ;; This function is called by:
  9277 ;;		_LCD_Handler
  9278 ;;		_utoa
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text29
  9283  002D70                     __ptext29:
  9284                           	opt stack 0
  9285  002D70                     ___lwdiv:
  9286                           	opt stack 25
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;incstack = 0
  9290  002D70  0E00               	movlw	0
  9291  002D72  6E41               	movwf	___lwdiv@quotient+1,c
  9292  002D74  0E00               	movlw	0
  9293  002D76  6E40               	movwf	___lwdiv@quotient,c
  9294  002D78  503E               	movf	___lwdiv@divisor,w,c
  9295  002D7A  103F               	iorwf	___lwdiv@divisor+1,w,c
  9296  002D7C  B4D8               	btfsc	status,2,c
  9297  002D7E  D01C               	goto	l926
  9298  002D80  0E01               	movlw	1
  9299  002D82  6E42               	movwf	___lwdiv@counter,c
  9300  002D84  D004               	goto	l3891
  9301  002D86                     l3889:
  9302  002D86  90D8               	bcf	status,0,c
  9303  002D88  363E               	rlcf	___lwdiv@divisor,f,c
  9304  002D8A  363F               	rlcf	___lwdiv@divisor+1,f,c
  9305  002D8C  2A42               	incf	___lwdiv@counter,f,c
  9306  002D8E                     l3891:
  9307  002D8E  AE3F               	btfss	___lwdiv@divisor+1,7,c
  9308  002D90  D7FA               	goto	l3889
  9309  002D92                     l3893:
  9310  002D92  90D8               	bcf	status,0,c
  9311  002D94  3640               	rlcf	___lwdiv@quotient,f,c
  9312  002D96  3641               	rlcf	___lwdiv@quotient+1,f,c
  9313  002D98  503E               	movf	___lwdiv@divisor,w,c
  9314  002D9A  5C3C               	subwf	___lwdiv@dividend,w,c
  9315  002D9C  503F               	movf	___lwdiv@divisor+1,w,c
  9316  002D9E  583D               	subwfb	___lwdiv@dividend+1,w,c
  9317  002DA0  A0D8               	btfss	status,0,c
  9318  002DA2  D005               	goto	l3901
  9319  002DA4  503E               	movf	___lwdiv@divisor,w,c
  9320  002DA6  5E3C               	subwf	___lwdiv@dividend,f,c
  9321  002DA8  503F               	movf	___lwdiv@divisor+1,w,c
  9322  002DAA  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  9323  002DAC  8040               	bsf	___lwdiv@quotient,0,c
  9324  002DAE                     l3901:
  9325  002DAE  90D8               	bcf	status,0,c
  9326  002DB0  323F               	rrcf	___lwdiv@divisor+1,f,c
  9327  002DB2  323E               	rrcf	___lwdiv@divisor,f,c
  9328  002DB4  2E42               	decfsz	___lwdiv@counter,f,c
  9329  002DB6  D7ED               	goto	l3893
  9330  002DB8                     l926:
  9331  002DB8  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  9332  002DBC  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9333  002DC0  0012               	return		;funcret
  9334  002DC2                     __end_of___lwdiv:
  9335                           	opt stack 0
  9336                           tblptru	equ	0xFF8
  9337                           tblptrh	equ	0xFF7
  9338                           tblptrl	equ	0xFF6
  9339                           tablat	equ	0xFF5
  9340                           prodh	equ	0xFF4
  9341                           prodl	equ	0xFF3
  9342                           intcon	equ	0xFF2
  9343                           postinc0	equ	0xFEE
  9344                           wreg	equ	0xFE8
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           fsr2h	equ	0xFDA
  9348                           fsr2l	equ	0xFD9
  9349                           status	equ	0xFD8
  9350                           
  9351 ;; *************** function _LCD_write_string *****************
  9352 ;; Defined at:
  9353 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  9356 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;		None               void
  9361 ;; Registers used:
  9362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9368 ;;      Params:         0       2       0       0
  9369 ;;      Locals:         0       0       0       0
  9370 ;;      Temps:          0       0       0       0
  9371 ;;      Totals:         0       2       0       0
  9372 ;;Total ram usage:        2 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    9
  9375 ;; This function calls:
  9376 ;;		_LCD_write_char
  9377 ;; This function is called by:
  9378 ;;		_LCD_Handler
  9379 ;;		_LCD_write_integer
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text30
  9384  00303C                     __ptext30:
  9385                           	opt stack 0
  9386  00303C                     _LCD_write_string:
  9387                           	opt stack 20
  9388                           
  9389                           ;src\LCD_44780.c: 197: while(*buffer){
  9390                           
  9391                           ;incstack = 0
  9392  00303C  D00A               	goto	l5155
  9393  00303E                     l5151:
  9394                           
  9395                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9396  00303E  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9397  003042  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9398  003046  50DF               	movf	indf2,w,c
  9399  003048  EC84  F015         	call	_LCD_write_char
  9400                           
  9401                           ;src\LCD_44780.c: 202: buffer++;
  9402  00304C  0100               	movlb	0	; () banked
  9403  00304E  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9404  003050  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9405  003052                     l5155:
  9406  003052  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9407  003056  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9408  00305A  50DF               	movf	indf2,w,c
  9409  00305C  B4D8               	btfsc	status,2,c
  9410  00305E  0012               	return	
  9411  003060  D7EE               	goto	l5151
  9412  003062                     __end_of_LCD_write_string:
  9413                           	opt stack 0
  9414                           tblptru	equ	0xFF8
  9415                           tblptrh	equ	0xFF7
  9416                           tblptrl	equ	0xFF6
  9417                           tablat	equ	0xFF5
  9418                           prodh	equ	0xFF4
  9419                           prodl	equ	0xFF3
  9420                           intcon	equ	0xFF2
  9421                           postinc0	equ	0xFEE
  9422                           wreg	equ	0xFE8
  9423                           indf2	equ	0xFDF
  9424                           postinc2	equ	0xFDE
  9425                           fsr2h	equ	0xFDA
  9426                           fsr2l	equ	0xFD9
  9427                           status	equ	0xFD8
  9428                           
  9429 ;; *************** function _LCD_write_message *****************
  9430 ;; Defined at:
  9431 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  9434 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9435 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9436 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;		None               void
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9448 ;;      Params:         0       2       0       0
  9449 ;;      Locals:         0       0       0       0
  9450 ;;      Temps:          0       0       0       0
  9451 ;;      Totals:         0       2       0       0
  9452 ;;Total ram usage:        2 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    9
  9455 ;; This function calls:
  9456 ;;		_LCD_write_char
  9457 ;; This function is called by:
  9458 ;;		_main
  9459 ;;		_LCD_Handler
  9460 ;;		_board_initialization
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text31
  9465  002FBE                     __ptext31:
  9466                           	opt stack 0
  9467  002FBE                     _LCD_write_message:
  9468                           	opt stack 20
  9469                           
  9470                           ;src\LCD_44780.c: 181: while(*buffer) {
  9471                           
  9472                           ;incstack = 0
  9473  002FBE  D00B               	goto	l5147
  9474  002FC0                     l5143:
  9475                           
  9476                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9477  002FC0  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9478  002FC4  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9479  002FC8                     	if	0	;tblptru may be non-zero
  9480  002FC8                     	endif
  9481  002FC8                     	if	0	;tblptru may be non-zero
  9482  002FC8                     	endif
  9483  002FC8  0008               	tblrd		*
  9484  002FCA  50F5               	movf	tablat,w,c
  9485  002FCC  EC84  F015         	call	_LCD_write_char
  9486                           
  9487                           ;src\LCD_44780.c: 186: buffer++;
  9488  002FD0  0100               	movlb	0	; () banked
  9489  002FD2  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9490  002FD4  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9491  002FD6                     l5147:
  9492  002FD6  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9493  002FDA  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9494  002FDE                     	if	0	;tblptru may be non-zero
  9495  002FDE                     	endif
  9496  002FDE                     	if	0	;tblptru may be non-zero
  9497  002FDE                     	endif
  9498  002FDE  0008               	tblrd		*
  9499  002FE0  50F5               	movf	tablat,w,c
  9500  002FE2  0900               	iorlw	0
  9501  002FE4  B4D8               	btfsc	status,2,c
  9502  002FE6  0012               	return	
  9503  002FE8  D7EB               	goto	l5143
  9504  002FEA                     __end_of_LCD_write_message:
  9505                           	opt stack 0
  9506                           tblptru	equ	0xFF8
  9507                           tblptrh	equ	0xFF7
  9508                           tblptrl	equ	0xFF6
  9509                           tablat	equ	0xFF5
  9510                           prodh	equ	0xFF4
  9511                           prodl	equ	0xFF3
  9512                           intcon	equ	0xFF2
  9513                           postinc0	equ	0xFEE
  9514                           wreg	equ	0xFE8
  9515                           indf2	equ	0xFDF
  9516                           postinc2	equ	0xFDE
  9517                           fsr2h	equ	0xFDA
  9518                           fsr2l	equ	0xFD9
  9519                           status	equ	0xFD8
  9520                           
  9521 ;; *************** function _LCD_write_char *****************
  9522 ;; Defined at:
  9523 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  value           1    wreg     unsigned char 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  value           1   25[BANK0 ] unsigned char 
  9528 ;;  D0              1   24[BANK0 ] unsigned char 
  9529 ;;  D1              1   23[BANK0 ] unsigned char 
  9530 ;;  D2              1   22[BANK0 ] unsigned char 
  9531 ;;  D3              1   21[BANK0 ] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;		None               void
  9534 ;; Registers used:
  9535 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9541 ;;      Params:         0       0       0       0
  9542 ;;      Locals:         0       5       0       0
  9543 ;;      Temps:          0       0       0       0
  9544 ;;      Totals:         0       5       0       0
  9545 ;;Total ram usage:        5 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    8
  9548 ;; This function calls:
  9549 ;;		_LCD_send_command
  9550 ;; This function is called by:
  9551 ;;		_LCD_write_message
  9552 ;;		_LCD_write_string
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text32
  9557  002B08                     __ptext32:
  9558                           	opt stack 0
  9559  002B08                     _LCD_write_char:
  9560                           	opt stack 20
  9561                           
  9562                           ;incstack = 0
  9563                           ;LCD_write_char@value stored from wreg
  9564  002B08  0100               	movlb	0	; () banked
  9565  002B0A  6F79               	movwf	LCD_write_char@value& (0+255),b
  9566                           
  9567                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9568                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
  9569  002B0C  848D               	bsf	3981,2,c	;volatile
  9570                           
  9571                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9572  002B0E  0100               	movlb	0	; () banked
  9573  002B10  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9574  002B12  0B01               	andlw	1
  9575  002B14  0100               	movlb	0	; () banked
  9576  002B16  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9577                           
  9578                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9579  002B18  0100               	movlb	0	; () banked
  9580  002B1A  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9581  002B1C  46E8               	rlncf	wreg,f,c
  9582  002B1E  0B03               	andlw	3
  9583  002B20  0B01               	andlw	1
  9584  002B22  0100               	movlb	0	; () banked
  9585  002B24  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9586                           
  9587                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9588  002B26  0100               	movlb	0	; () banked
  9589  002B28  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9590  002B2A  42E8               	rrncf	wreg,f,c
  9591  002B2C  0B07               	andlw	7
  9592  002B2E  0B01               	andlw	1
  9593  002B30  0100               	movlb	0	; () banked
  9594  002B32  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9595                           
  9596                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9597  002B34  0100               	movlb	0	; () banked
  9598  002B36  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9599  002B38  0B0F               	andlw	15
  9600  002B3A  0B01               	andlw	1
  9601  002B3C  0100               	movlb	0	; () banked
  9602  002B3E  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9606  002B40  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9607  002B44  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9608  002B48  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9609  002B4C  0100               	movlb	0	; () banked
  9610  002B4E  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9611  002B50  EC4C  F017         	call	_LCD_send_command
  9612                           
  9613                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9614  002B54  0100               	movlb	0	; () banked
  9615  002B56  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9616  002B58  46E8               	rlncf	wreg,f,c
  9617  002B5A  0B1F               	andlw	31
  9618  002B5C  0B01               	andlw	1
  9619  002B5E  0100               	movlb	0	; () banked
  9620  002B60  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9624  002B62  0100               	movlb	0	; () banked
  9625  002B64  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9626  002B66  42E8               	rrncf	wreg,f,c
  9627  002B68  0B3F               	andlw	63
  9628  002B6A  0B01               	andlw	1
  9629  002B6C  0100               	movlb	0	; () banked
  9630  002B6E  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9634  002B70  0100               	movlb	0	; () banked
  9635  002B72  90D8               	bcf	status,0,c
  9636  002B74  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9637  002B76  0B01               	andlw	1
  9638  002B78  0100               	movlb	0	; () banked
  9639  002B7A  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9643  002B7C  0100               	movlb	0	; () banked
  9644  002B7E  5179               	movf	LCD_write_char@value& (0+255),w,b
  9645  002B80  0B01               	andlw	1
  9646  002B82  0100               	movlb	0	; () banked
  9647  002B84  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9651  002B86  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9652  002B8A  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9653  002B8E  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9654  002B92  0100               	movlb	0	; () banked
  9655  002B94  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9656  002B96  EC4C  F017         	call	_LCD_send_command
  9657                           
  9658                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
  9659  002B9A  948D               	bcf	3981,2,c	;volatile
  9660  002B9C  0012               	return		;funcret
  9661  002B9E                     __end_of_LCD_write_char:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           intcon	equ	0xFF2
  9670                           postinc0	equ	0xFEE
  9671                           wreg	equ	0xFE8
  9672                           indf2	equ	0xFDF
  9673                           postinc2	equ	0xFDE
  9674                           fsr2h	equ	0xFDA
  9675                           fsr2l	equ	0xFD9
  9676                           status	equ	0xFD8
  9677                           
  9678 ;; *************** function _LCD_goto_line *****************
  9679 ;; Defined at:
  9680 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  line            1    wreg     unsigned char 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  line            1   21[BANK0 ] unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;		None               void
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9694 ;;      Params:         0       0       0       0
  9695 ;;      Locals:         0       1       0       0
  9696 ;;      Temps:          0       0       0       0
  9697 ;;      Totals:         0       1       0       0
  9698 ;;Total ram usage:        1 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    8
  9701 ;; This function calls:
  9702 ;;		_LCD_send_command
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;;		_LCD_Handler
  9706 ;;		_board_initialization
  9707 ;;		_LCD_goto_xy
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text33
  9712  002702                     __ptext33:
  9713                           	opt stack 0
  9714  002702                     _LCD_goto_line:
  9715                           	opt stack 21
  9716                           
  9717                           ;incstack = 0
  9718                           ;LCD_goto_line@line stored from wreg
  9719  002702  0100               	movlb	0	; () banked
  9720  002704  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9721                           
  9722                           ;src\LCD_44780.c: 113: switch(line) {
  9723  002706  D064               	goto	l5139
  9724  002708                     l5131:
  9725  002708  0E00               	movlw	0
  9726  00270A  0100               	movlb	0	; () banked
  9727  00270C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9728  00270E  0E00               	movlw	0
  9729  002710  0100               	movlb	0	; () banked
  9730  002712  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9731  002714  0E00               	movlw	0
  9732  002716  0100               	movlb	0	; () banked
  9733  002718  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9734  00271A  0E01               	movlw	1
  9735  00271C  EC4C  F017         	call	_LCD_send_command
  9736                           
  9737                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9738  002720  0E00               	movlw	0
  9739  002722  0100               	movlb	0	; () banked
  9740  002724  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9741  002726  0E00               	movlw	0
  9742  002728  0100               	movlb	0	; () banked
  9743  00272A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9744  00272C  0E00               	movlw	0
  9745  00272E  0100               	movlb	0	; () banked
  9746  002730  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9747  002732  0E00               	movlw	0
  9748  002734  EC4C  F017         	call	_LCD_send_command
  9749                           
  9750                           ;src\LCD_44780.c: 117: break;
  9751  002738  0012               	return	
  9752  00273A                     l5133:
  9753  00273A  0E01               	movlw	1
  9754  00273C  0100               	movlb	0	; () banked
  9755  00273E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9756  002740  0E00               	movlw	0
  9757  002742  0100               	movlb	0	; () banked
  9758  002744  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9759  002746  0E00               	movlw	0
  9760  002748  0100               	movlb	0	; () banked
  9761  00274A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9762  00274C  0E01               	movlw	1
  9763  00274E  EC4C  F017         	call	_LCD_send_command
  9764                           
  9765                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9766  002752  0E00               	movlw	0
  9767  002754  0100               	movlb	0	; () banked
  9768  002756  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9769  002758  0E00               	movlw	0
  9770  00275A  0100               	movlb	0	; () banked
  9771  00275C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9772  00275E  0E00               	movlw	0
  9773  002760  0100               	movlb	0	; () banked
  9774  002762  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9775  002764  0E00               	movlw	0
  9776  002766  EC4C  F017         	call	_LCD_send_command
  9777                           
  9778                           ;src\LCD_44780.c: 121: break;
  9779  00276A  0012               	return	
  9780  00276C                     l5135:
  9781  00276C  0E00               	movlw	0
  9782  00276E  0100               	movlb	0	; () banked
  9783  002770  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9784  002772  0E00               	movlw	0
  9785  002774  0100               	movlb	0	; () banked
  9786  002776  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9787  002778  0E01               	movlw	1
  9788  00277A  0100               	movlb	0	; () banked
  9789  00277C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9790  00277E  0E01               	movlw	1
  9791  002780  EC4C  F017         	call	_LCD_send_command
  9792                           
  9793                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9794  002784  0E01               	movlw	1
  9795  002786  0100               	movlb	0	; () banked
  9796  002788  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9797  00278A  0E00               	movlw	0
  9798  00278C  0100               	movlb	0	; () banked
  9799  00278E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9800  002790  0E00               	movlw	0
  9801  002792  0100               	movlb	0	; () banked
  9802  002794  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9803  002796  0E00               	movlw	0
  9804  002798  EC4C  F017         	call	_LCD_send_command
  9805                           
  9806                           ;src\LCD_44780.c: 125: break;
  9807  00279C  0012               	return	
  9808  00279E                     l5137:
  9809  00279E  0E01               	movlw	1
  9810  0027A0  0100               	movlb	0	; () banked
  9811  0027A2  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9812  0027A4  0E00               	movlw	0
  9813  0027A6  0100               	movlb	0	; () banked
  9814  0027A8  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9815  0027AA  0E01               	movlw	1
  9816  0027AC  0100               	movlb	0	; () banked
  9817  0027AE  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9818  0027B0  0E01               	movlw	1
  9819  0027B2  EC4C  F017         	call	_LCD_send_command
  9820                           
  9821                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9822  0027B6  0E01               	movlw	1
  9823  0027B8  0100               	movlb	0	; () banked
  9824  0027BA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9825  0027BC  0E00               	movlw	0
  9826  0027BE  0100               	movlb	0	; () banked
  9827  0027C0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9828  0027C2  0E00               	movlw	0
  9829  0027C4  0100               	movlb	0	; () banked
  9830  0027C6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9831  0027C8  0E00               	movlw	0
  9832  0027CA  EC4C  F017         	call	_LCD_send_command
  9833                           
  9834                           ;src\LCD_44780.c: 129: }
  9835  0027CE  0012               	return	
  9836  0027D0                     l5139:
  9837  0027D0  0100               	movlb	0	; () banked
  9838  0027D2  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9839                           
  9840                           ; Switch size 1, requested type "space"
  9841                           ; Number of cases is 4, Range of values is 1 to 4
  9842                           ; switch strategies available:
  9843                           ; Name         Instructions Cycles
  9844                           ; simple_byte           13     7 (average)
  9845                           ;	Chosen strategy is simple_byte
  9846  0027D4  0A01               	xorlw	1	; case 1
  9847  0027D6  B4D8               	btfsc	status,2,c
  9848  0027D8  D797               	goto	l5131
  9849  0027DA  0A03               	xorlw	3	; case 2
  9850  0027DC  B4D8               	btfsc	status,2,c
  9851  0027DE  D7AD               	goto	l5133
  9852  0027E0  0A01               	xorlw	1	; case 3
  9853  0027E2  B4D8               	btfsc	status,2,c
  9854  0027E4  D7C3               	goto	l5135
  9855  0027E6  0A07               	xorlw	7	; case 4
  9856  0027E8  A4D8               	btfss	status,2,c
  9857  0027EA  0012               	return	
  9858  0027EC  D7D8               	goto	l5137
  9859  0027EE                     __end_of_LCD_goto_line:
  9860                           	opt stack 0
  9861                           tblptru	equ	0xFF8
  9862                           tblptrh	equ	0xFF7
  9863                           tblptrl	equ	0xFF6
  9864                           tablat	equ	0xFF5
  9865                           prodh	equ	0xFF4
  9866                           prodl	equ	0xFF3
  9867                           intcon	equ	0xFF2
  9868                           postinc0	equ	0xFEE
  9869                           wreg	equ	0xFE8
  9870                           indf2	equ	0xFDF
  9871                           postinc2	equ	0xFDE
  9872                           fsr2h	equ	0xFDA
  9873                           fsr2l	equ	0xFD9
  9874                           status	equ	0xFD8
  9875                           
  9876 ;; *************** function _LCD_clear *****************
  9877 ;; Defined at:
  9878 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;		None
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;		None
  9883 ;; Return value:  Size  Location     Type
  9884 ;;		None               void
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9892 ;;      Params:         0       0       0       0
  9893 ;;      Locals:         0       0       0       0
  9894 ;;      Temps:          0       0       0       0
  9895 ;;      Totals:         0       0       0       0
  9896 ;;Total ram usage:        0 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    8
  9899 ;; This function calls:
  9900 ;;		_LCD_send_command
  9901 ;; This function is called by:
  9902 ;;		_LCD_initialize
  9903 ;;		_main
  9904 ;;		_LCD_Handler
  9905 ;;		_board_initialization
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text34
  9910  002F00                     __ptext34:
  9911                           	opt stack 0
  9912  002F00                     _LCD_clear:
  9913                           	opt stack 20
  9914                           
  9915                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9916                           
  9917                           ;incstack = 0
  9918  002F00  0E00               	movlw	0
  9919  002F02  0100               	movlb	0	; () banked
  9920  002F04  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9921  002F06  0E00               	movlw	0
  9922  002F08  0100               	movlb	0	; () banked
  9923  002F0A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9924  002F0C  0E00               	movlw	0
  9925  002F0E  0100               	movlb	0	; () banked
  9926  002F10  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9927  002F12  0E00               	movlw	0
  9928  002F14  EC4C  F017         	call	_LCD_send_command
  9929                           
  9930                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9931  002F18  0E00               	movlw	0
  9932  002F1A  0100               	movlb	0	; () banked
  9933  002F1C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9934  002F1E  0E00               	movlw	0
  9935  002F20  0100               	movlb	0	; () banked
  9936  002F22  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9937  002F24  0E01               	movlw	1
  9938  002F26  0100               	movlb	0	; () banked
  9939  002F28  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9940  002F2A  0E00               	movlw	0
  9941  002F2C  EC4C  F017         	call	_LCD_send_command
  9942  002F30  0012               	return		;funcret
  9943  002F32                     __end_of_LCD_clear:
  9944                           	opt stack 0
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           postinc0	equ	0xFEE
  9953                           wreg	equ	0xFE8
  9954                           indf2	equ	0xFDF
  9955                           postinc2	equ	0xFDE
  9956                           fsr2h	equ	0xFDA
  9957                           fsr2l	equ	0xFD9
  9958                           status	equ	0xFD8
  9959                           
  9960 ;; *************** function _LCD_send_command *****************
  9961 ;; Defined at:
  9962 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  D3              1    wreg     unsigned char 
  9965 ;;  D2              1   18[BANK0 ] unsigned char 
  9966 ;;  D1              1   19[BANK0 ] unsigned char 
  9967 ;;  D0              1   20[BANK0 ] unsigned char 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  D3              1   30[COMRAM] unsigned char 
  9970 ;; Return value:  Size  Location     Type
  9971 ;;		None               void
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9979 ;;      Params:         0       3       0       0
  9980 ;;      Locals:         1       0       0       0
  9981 ;;      Temps:          0       0       0       0
  9982 ;;      Totals:         1       3       0       0
  9983 ;;Total ram usage:        4 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    7
  9986 ;; This function calls:
  9987 ;;		_LCD_enable_pulse
  9988 ;; This function is called by:
  9989 ;;		_LCD_goto_line
  9990 ;;		_LCD_write_char
  9991 ;;		_LCD_clear
  9992 ;;		_LCD_cursor
  9993 ;;		_LCD_initialize
  9994 ;;		_LCD_home
  9995 ;;		_LCD_shift
  9996 ;;		_LCD_shift_cursor
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text35
 10001  002E98                     __ptext35:
 10002                           	opt stack 0
 10003  002E98                     _LCD_send_command:
 10004                           	opt stack 20
 10005                           
 10006                           ;incstack = 0
 10007                           ;LCD_send_command@D3 stored from wreg
 10008  002E98  6E42               	movwf	LCD_send_command@D3,c
 10009                           
 10010                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 10011  002E9A  0100               	movlb	0	; () banked
 10012  002E9C  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
 10013  002E9E  D002               	bra	u4685
 10014  002EA0  948B               	bcf	3979,2,c	;volatile
 10015  002EA2  D001               	bra	u4686
 10016  002EA4                     u4685:
 10017  002EA4  848B               	bsf	3979,2,c	;volatile
 10018  002EA6                     u4686:
 10019                           
 10020                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 10021  002EA6  0100               	movlb	0	; () banked
 10022  002EA8  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
 10023  002EAA  D002               	bra	u4695
 10024  002EAC  968B               	bcf	3979,3,c	;volatile
 10025  002EAE  D001               	bra	u4696
 10026  002EB0                     u4695:
 10027  002EB0  868B               	bsf	3979,3,c	;volatile
 10028  002EB2                     u4696:
 10029                           
 10030                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 10031  002EB2  0100               	movlb	0	; () banked
 10032  002EB4  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
 10033  002EB6  D002               	bra	u4705
 10034  002EB8  908C               	bcf	3980,0,c	;volatile
 10035  002EBA  D001               	bra	u4706
 10036  002EBC                     u4705:
 10037  002EBC  808C               	bsf	3980,0,c	;volatile
 10038  002EBE                     u4706:
 10039                           
 10040                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 10041  002EBE  B042               	btfsc	LCD_send_command@D3,0,c
 10042  002EC0  D002               	bra	u4715
 10043  002EC2  928C               	bcf	3980,1,c	;volatile
 10044  002EC4  D001               	bra	u4716
 10045  002EC6                     u4715:
 10046  002EC6  828C               	bsf	3980,1,c	;volatile
 10047  002EC8                     u4716:
 10048                           
 10049                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10050  002EC8  EC44  F018         	call	_LCD_enable_pulse	;wreg free
 10051  002ECC  0012               	return		;funcret
 10052  002ECE                     __end_of_LCD_send_command:
 10053                           	opt stack 0
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           intcon	equ	0xFF2
 10061                           postinc0	equ	0xFEE
 10062                           wreg	equ	0xFE8
 10063                           indf2	equ	0xFDF
 10064                           postinc2	equ	0xFDE
 10065                           fsr2h	equ	0xFDA
 10066                           fsr2l	equ	0xFD9
 10067                           status	equ	0xFD8
 10068                           
 10069 ;; *************** function _LCD_enable_pulse *****************
 10070 ;; Defined at:
 10071 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;		None               void
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10085 ;;      Params:         0       0       0       0
 10086 ;;      Locals:         0       0       0       0
 10087 ;;      Temps:          0       0       0       0
 10088 ;;      Totals:         0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    6
 10092 ;; This function calls:
 10093 ;;		_delay_ms
 10094 ;; This function is called by:
 10095 ;;		_LCD_send_command
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text36
 10100  003088                     __ptext36:
 10101                           	opt stack 0
 10102  003088                     _LCD_enable_pulse:
 10103                           	opt stack 20
 10104                           
 10105                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 10106                           
 10107                           ;incstack = 0
 10108  003088  828B               	bsf	3979,1,c	;volatile
 10109                           
 10110                           ;src\LCD_44780.c: 52: delay_ms (1);
 10111  00308A  0E00               	movlw	0
 10112  00308C  0100               	movlb	0	; () banked
 10113  00308E  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10114  003090  0E01               	movlw	1
 10115  003092  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10116  003094  EC99  F017         	call	_delay_ms	;wreg free
 10117                           
 10118                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 10119  003098  928B               	bcf	3979,1,c	;volatile
 10120                           
 10121                           ;src\LCD_44780.c: 54: delay_ms (1);
 10122  00309A  0E00               	movlw	0
 10123  00309C  0100               	movlb	0	; () banked
 10124  00309E  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10125  0030A0  0E01               	movlw	1
 10126  0030A2  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10127  0030A4  EC99  F017         	call	_delay_ms	;wreg free
 10128  0030A8  0012               	return		;funcret
 10129  0030AA                     __end_of_LCD_enable_pulse:
 10130                           	opt stack 0
 10131                           tblptru	equ	0xFF8
 10132                           tblptrh	equ	0xFF7
 10133                           tblptrl	equ	0xFF6
 10134                           tablat	equ	0xFF5
 10135                           prodh	equ	0xFF4
 10136                           prodl	equ	0xFF3
 10137                           intcon	equ	0xFF2
 10138                           postinc0	equ	0xFEE
 10139                           wreg	equ	0xFE8
 10140                           indf2	equ	0xFDF
 10141                           postinc2	equ	0xFDE
 10142                           fsr2h	equ	0xFDA
 10143                           fsr2l	equ	0xFD9
 10144                           status	equ	0xFD8
 10145                           
 10146 ;; *************** function _delay_ms *****************
 10147 ;; Defined at:
 10148 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  value_ms        2   16[BANK0 ] unsigned int 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;		None               void
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10162 ;;      Params:         0       2       0       0
 10163 ;;      Locals:         0       0       0       0
 10164 ;;      Temps:          0       0       0       0
 10165 ;;      Totals:         0       2       0       0
 10166 ;;Total ram usage:        2 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    5
 10169 ;; This function calls:
 10170 ;;		___wmul
 10171 ;; This function is called by:
 10172 ;;		_delay_s
 10173 ;;		_LCD_enable_pulse
 10174 ;;		_LCD_initialize
 10175 ;;		_main
 10176 ;;		_board_initialization
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text37
 10181  002F32                     __ptext37:
 10182                           	opt stack 0
 10183  002F32                     _delay_ms:
 10184                           	opt stack 25
 10185                           
 10186                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10187                           
 10188                           ;incstack = 0
 10189  002F32  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10190  002F36  6A3D               	clrf	___wmul@multiplier+1,c
 10191  002F38  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
 10192  002F3C  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10193  002F40  EC31  F018         	call	___wmul	;wreg free
 10194  002F44  C03C  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10195  002F48  C03D  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10196                           
 10197                           ;src\delay.c: 75: while (clock_counter_reference) {
 10198  002F4C  D006               	goto	l97
 10199  002F4E                     l4323:
 10200                           
 10201                           ;src\delay.c: 85: _delay(240);
 10202  002F4E  0E50               	movlw	80
 10203  002F50                     u6647:
 10204  002F50  2EE8               	decfsz	wreg,f,c
 10205  002F52  D7FE               	goto	u6647
 10206                           
 10207                           ;src\delay.c: 88: clock_counter_reference--;
 10208  002F54  0644               	decf	_clock_counter_reference,f,c	;volatile
 10209  002F56  A0D8               	btfss	status,0,c
 10210  002F58  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10211  002F5A                     l97:
 10212  002F5A  5044               	movf	_clock_counter_reference,w,c	;volatile
 10213  002F5C  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10214  002F5E  B4D8               	btfsc	status,2,c
 10215  002F60  0012               	return	
 10216  002F62  D7F5               	goto	l4323
 10217  002F64                     __end_of_delay_ms:
 10218                           	opt stack 0
 10219                           tblptru	equ	0xFF8
 10220                           tblptrh	equ	0xFF7
 10221                           tblptrl	equ	0xFF6
 10222                           tablat	equ	0xFF5
 10223                           prodh	equ	0xFF4
 10224                           prodl	equ	0xFF3
 10225                           intcon	equ	0xFF2
 10226                           postinc0	equ	0xFEE
 10227                           wreg	equ	0xFE8
 10228                           indf2	equ	0xFDF
 10229                           postinc2	equ	0xFDE
 10230                           fsr2h	equ	0xFDA
 10231                           fsr2l	equ	0xFD9
 10232                           status	equ	0xFD8
 10233                           
 10234 ;; *************** function ___wmul *****************
 10235 ;; Defined at:
 10236 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  multiplier      2   24[COMRAM] unsigned int 
 10239 ;;  multiplicand    2   26[COMRAM] unsigned int 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  product         2   28[COMRAM] unsigned int 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  2   24[COMRAM] unsigned int 
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0, prodl, prodh
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10251 ;;      Params:         4       0       0       0
 10252 ;;      Locals:         2       0       0       0
 10253 ;;      Temps:          0       0       0       0
 10254 ;;      Totals:         6       0       0       0
 10255 ;;Total ram usage:        6 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    4
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_delay_ms
 10262 ;;		_sprintf
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text38
 10267  003062                     __ptext38:
 10268                           	opt stack 0
 10269  003062                     ___wmul:
 10270                           	opt stack 25
 10271                           
 10272                           ;incstack = 0
 10273  003062  503C               	movf	___wmul@multiplier,w,c
 10274  003064  023E               	mulwf	___wmul@multiplicand,c
 10275  003066  CFF3 F040          	movff	prodl,___wmul@product
 10276  00306A  CFF4 F041          	movff	prodh,___wmul@product+1
 10277  00306E  503C               	movf	___wmul@multiplier,w,c
 10278  003070  023F               	mulwf	___wmul@multiplicand+1,c
 10279  003072  50F3               	movf	prodl,w,c
 10280  003074  2641               	addwf	___wmul@product+1,f,c
 10281  003076  503D               	movf	___wmul@multiplier+1,w,c
 10282  003078  023E               	mulwf	___wmul@multiplicand,c
 10283  00307A  50F3               	movf	prodl,w,c
 10284  00307C  2641               	addwf	___wmul@product+1,f,c
 10285  00307E  C040  F03C         	movff	___wmul@product,?___wmul
 10286  003082  C041  F03D         	movff	___wmul@product+1,?___wmul+1
 10287  003086  0012               	return	
 10288  003088                     __end_of___wmul:
 10289                           	opt stack 0
 10290                           tblptru	equ	0xFF8
 10291                           tblptrh	equ	0xFF7
 10292                           tblptrl	equ	0xFF6
 10293                           tablat	equ	0xFF5
 10294                           prodh	equ	0xFF4
 10295                           prodl	equ	0xFF3
 10296                           intcon	equ	0xFF2
 10297                           postinc0	equ	0xFEE
 10298                           wreg	equ	0xFE8
 10299                           indf2	equ	0xFDF
 10300                           postinc2	equ	0xFDE
 10301                           fsr2h	equ	0xFDA
 10302                           fsr2l	equ	0xFD9
 10303                           status	equ	0xFD8
 10304                           
 10305 ;; *************** function _Joystick_Polling *****************
 10306 ;; Defined at:
 10307 ;;		line 220 in file "telecomando.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;		None               void
 10314 ;; Registers used:
 10315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10321 ;;      Params:         0       0       0       0
 10322 ;;      Locals:         0       0       0       0
 10323 ;;      Temps:          1       0       0       0
 10324 ;;      Totals:         1       0       0       0
 10325 ;;Total ram usage:        1 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    4
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text39
 10336  002E0A                     __ptext39:
 10337                           	opt stack 0
 10338  002E0A                     _Joystick_Polling:
 10339                           	opt stack 26
 10340                           
 10341                           ;telecomando.c: 221: for (i = 0; i < 2; i++) {
 10342                           
 10343                           ;incstack = 0
 10344  002E0A  0E00               	movlw	0
 10345  002E0C  6E15               	movwf	_i,c	;volatile
 10346  002E0E                     l4041:
 10347  002E0E  0E01               	movlw	1
 10348  002E10  6415               	cpfsgt	_i,c	;volatile
 10349  002E12  D001               	goto	l273
 10350  002E14  0012               	return	
 10351  002E16                     l273:
 10352                           
 10353                           ;telecomando.c: 222: ADCON0bits.GO = 1;
 10354  002E16  82C2               	bsf	4034,1,c	;volatile
 10355  002E18                     l275:
 10356  002E18  B2C2               	btfsc	4034,1,c	;volatile
 10357  002E1A  D7FE               	goto	l275
 10358                           
 10359                           ;telecomando.c: 224: JoystickValues[i] = ADRESH - 128;
 10360  002E1C  5015               	movf	_i,w,c	;volatile
 10361  002E1E  0D01               	mullw	1
 10362  002E20  0E22               	movlw	low _JoystickValues
 10363  002E22  24F3               	addwf	prodl,w,c
 10364  002E24  6ED9               	movwf	fsr2l,c
 10365  002E26  0E00               	movlw	high _JoystickValues
 10366  002E28  20F4               	addwfc	prodh,w,c
 10367  002E2A  6EDA               	movwf	fsr2h,c
 10368  002E2C  50C4               	movf	4036,w,c	;volatile
 10369  002E2E  0F80               	addlw	128
 10370  002E30  6EDF               	movwf	indf2,c
 10371                           
 10372                           ;telecomando.c: 225: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10373  002E32  A4C2               	btfss	4034,2,c	;volatile
 10374  002E34  D002               	goto	u4260
 10375  002E36  0E01               	movlw	1
 10376  002E38  D001               	goto	u4266
 10377  002E3A                     u4260:
 10378  002E3A  0E00               	movlw	0
 10379  002E3C                     u4266:
 10380  002E3C  0AFF               	xorlw	255
 10381  002E3E  6E3C               	movwf	??_Joystick_Polling& (0+255),c
 10382  002E40  463C               	rlncf	??_Joystick_Polling,f,c
 10383  002E42  463C               	rlncf	??_Joystick_Polling,f,c
 10384  002E44  50C2               	movf	4034,w,c	;volatile
 10385  002E46  183C               	xorwf	??_Joystick_Polling,w,c
 10386  002E48  0BFB               	andlw	-5
 10387  002E4A  183C               	xorwf	??_Joystick_Polling,w,c
 10388  002E4C  6EC2               	movwf	4034,c	;volatile
 10389  002E4E  2A15               	incf	_i,f,c	;volatile
 10390  002E50  D7DE               	goto	l4041
 10391  002E52                     __end_of_Joystick_Polling:
 10392                           	opt stack 0
 10393                           tblptru	equ	0xFF8
 10394                           tblptrh	equ	0xFF7
 10395                           tblptrl	equ	0xFF6
 10396                           tablat	equ	0xFF5
 10397                           prodh	equ	0xFF4
 10398                           prodl	equ	0xFF3
 10399                           intcon	equ	0xFF2
 10400                           postinc0	equ	0xFEE
 10401                           wreg	equ	0xFE8
 10402                           indf2	equ	0xFDF
 10403                           postinc2	equ	0xFDE
 10404                           fsr2h	equ	0xFDA
 10405                           fsr2l	equ	0xFD9
 10406                           status	equ	0xFD8
 10407                           
 10408 ;; *************** function _ISR_bassa *****************
 10409 ;; Defined at:
 10410 ;;		line 109 in file "telecomando.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;		None
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;		None               void
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10424 ;;      Params:         0       0       0       0
 10425 ;;      Locals:         0       0       0       0
 10426 ;;      Temps:         17       0       0       0
 10427 ;;      Totals:        17       0       0       0
 10428 ;;Total ram usage:       17 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    3
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		Interrupt level 1
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	intcodelo
 10439  000018                     __pintcodelo:
 10440                           	opt stack 0
 10441  000018                     _ISR_bassa:
 10442                           	opt stack 20
 10443                           
 10444                           ;incstack = 0
 10445  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10446  00001A  CFD8 F024          	movff	status,??_ISR_bassa
 10447  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
 10448  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
 10449  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
 10450  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
 10451  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
 10452  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
 10453  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
 10454  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
 10455  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
 10456  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
 10457  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
 10458  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
 10459  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
 10460  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
 10461  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
 10462  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
 10463                           
 10464                           ;telecomando.c: 110: if (PIR2bits.TMR3IF) {
 10465  00005E  A2A1               	btfss	4001,1,c	;volatile
 10466  000060  D00B               	goto	i1l245
 10467                           
 10468                           ;telecomando.c: 111: time_counter++;
 10469  000062  0E01               	movlw	1
 10470  000064  2609               	addwf	_time_counter,f,c	;volatile
 10471  000066  0E00               	movlw	0
 10472  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10473  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10474  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10475                           
 10476                           ;telecomando.c: 112: TMR3H = 0x63;
 10477  00006E  0E63               	movlw	99
 10478  000070  6EB3               	movwf	4019,c	;volatile
 10479                           
 10480                           ;telecomando.c: 113: TMR3L = 0xC0;
 10481  000072  0EC0               	movlw	192
 10482  000074  6EB2               	movwf	4018,c	;volatile
 10483                           
 10484                           ;telecomando.c: 114: PIR2bits.TMR3IF = 0;
 10485  000076  92A1               	bcf	4001,1,c	;volatile
 10486  000078                     i1l245:
 10487  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10488  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10489  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10490  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10491  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10492  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10493  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10494  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10495  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10496  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10497  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10498  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10499  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10500  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10501  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10502  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10503  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10504  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10505  0000BE  0010               	retfie	
 10506  0000C0                     __end_of_ISR_bassa:
 10507                           	opt stack 0
 10508                           pclatu	equ	0xFFB
 10509                           pclath	equ	0xFFA
 10510                           tblptru	equ	0xFF8
 10511                           tblptrh	equ	0xFF7
 10512                           tblptrl	equ	0xFF6
 10513                           tablat	equ	0xFF5
 10514                           prodh	equ	0xFF4
 10515                           prodl	equ	0xFF3
 10516                           intcon	equ	0xFF2
 10517                           postinc0	equ	0xFEE
 10518                           fsr0h	equ	0xFEA
 10519                           fsr0l	equ	0xFE9
 10520                           wreg	equ	0xFE8
 10521                           fsr1h	equ	0xFE2
 10522                           fsr1l	equ	0xFE1
 10523                           bsr	equ	0xFE0
 10524                           indf2	equ	0xFDF
 10525                           postinc2	equ	0xFDE
 10526                           fsr2h	equ	0xFDA
 10527                           fsr2l	equ	0xFD9
 10528                           status	equ	0xFD8
 10529                           
 10530 ;; *************** function _ISR_alta *****************
 10531 ;; Defined at:
 10532 ;;		line 94 in file "telecomando.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;		None
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;		None               void
 10539 ;; Registers used:
 10540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10546 ;;      Params:         0       0       0       0
 10547 ;;      Locals:         1       0       0       0
 10548 ;;      Temps:          0      16       0       0
 10549 ;;      Totals:         1      16       0       0
 10550 ;;Total ram usage:       17 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    2
 10553 ;; This function calls:
 10554 ;;		_getsUSART
 10555 ;; This function is called by:
 10556 ;;		Interrupt level 2
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	intcode
 10561  000008                     __pintcode:
 10562                           	opt stack 0
 10563  000008                     _ISR_alta:
 10564                           	opt stack 20
 10565                           
 10566                           ;incstack = 0
 10567  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10568  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10569  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10570  000012  EDF7  F013         	call	int_func,f	;refresh shadow registers
 10571                           pclatu	equ	0xFFB
 10572                           pclath	equ	0xFFA
 10573                           tblptru	equ	0xFF8
 10574                           tblptrh	equ	0xFF7
 10575                           tblptrl	equ	0xFF6
 10576                           tablat	equ	0xFF5
 10577                           prodh	equ	0xFF4
 10578                           prodl	equ	0xFF3
 10579                           intcon	equ	0xFF2
 10580                           postinc0	equ	0xFEE
 10581                           fsr0h	equ	0xFEA
 10582                           fsr0l	equ	0xFE9
 10583                           wreg	equ	0xFE8
 10584                           fsr1h	equ	0xFE2
 10585                           fsr1l	equ	0xFE1
 10586                           bsr	equ	0xFE0
 10587                           indf2	equ	0xFDF
 10588                           postinc2	equ	0xFDE
 10589                           fsr2h	equ	0xFDA
 10590                           fsr2l	equ	0xFD9
 10591                           status	equ	0xFD8
 10592                           
 10593                           	psect	intcode_body
 10594  0027EE                     __pintcode_body:
 10595                           	opt stack 20
 10596  0027EE                     int_func:
 10597                           	opt stack 20
 10598  0027EE  0006               	pop		; remove dummy address from shadow register refresh
 10599  0027F0  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10600  0027F4  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10601  0027F8  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10602  0027FC  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10603  002800  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10604  002804  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10605  002808  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10606  00280C  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10607  002810  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10608  002814  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10609  002818  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10610  00281C  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10611                           
 10612                           ;telecomando.c: 95: if (PIR1bits.RCIF == 1) {
 10613  002820  AA9E               	btfss	3998,5,c	;volatile
 10614  002822  D036               	goto	i2l241
 10615                           
 10616                           ;telecomando.c: 96: getsUSART((char*) USART_Rx, 7);
 10617  002824  0EDA               	movlw	low _USART_Rx
 10618  002826  6E36               	movwf	getsUSART@buffer,c
 10619  002828  0E00               	movlw	high _USART_Rx
 10620  00282A  6E37               	movwf	getsUSART@buffer+1,c
 10621  00282C  0E07               	movlw	7
 10622  00282E  6E38               	movwf	getsUSART@len,c
 10623  002830  ECF5  F017         	call	_getsUSART	;wreg free
 10624                           
 10625                           ;telecomando.c: 97: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10626  002834  0EAA               	movlw	170
 10627  002836  0100               	movlb	0	; () banked
 10628  002838  19DA               	xorwf	_USART_Rx& (0+255),w,b
 10629  00283A  A4D8               	btfss	status,2,c
 10630  00283C  D028               	goto	i2l5601
 10631                           
 10632                           ; BSR set to: 0
 10633  00283E  0EAA               	movlw	170
 10634  002840  0100               	movlb	0	; () banked
 10635  002842  19E0               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10636  002844  A4D8               	btfss	status,2,c
 10637  002846  D023               	goto	i2l5601
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;telecomando.c: 98: actual_dir = USART_Rx[1];
 10641  002848  0100               	movlb	0	; () banked
 10642  00284A  A1DB               	btfss	(_USART_Rx+1)& (0+255),0,b
 10643  00284C  D002               	goto	i2u645_40
 10644  00284E  8043               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10645  002850  D001               	goto	i2u646_45
 10646  002852                     i2u645_40:
 10647  002852  9043               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10648  002854                     i2u646_45:
 10649                           
 10650                           ;telecomando.c: 99: actual_speed_pk1 = USART_Rx[2];
 10651  002854  C0DC  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10652                           
 10653                           ;telecomando.c: 100: actual_speed_pk0 = USART_Rx[3];
 10654  002858  C0DD  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10655                           
 10656                           ;telecomando.c: 101: ECU_Check = USART_Rx[4];
 10657  00285C  C0DE  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10658                           
 10659                           ;telecomando.c: 102: Battery_Check = USART_Rx[5];
 10660  002860  C0DF  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10661                           
 10662                           ;telecomando.c: 103: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10663  002864  0E01               	movlw	1
 10664  002866  6E3B               	movwf	_ISR_alta$1263,c
 10665  002868  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10666  00286A  0100               	movlb	0	; () banked
 10667  00286C  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10668  00286E  6B60               	clrf	??_ISR_alta& (0+255),b
 10669  002870  0100               	movlb	0	; () banked
 10670  002872  5160               	movf	??_ISR_alta& (0+255),w,b
 10671  002874  0100               	movlb	0	; () banked
 10672  002876  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10673  002878  A4D8               	btfss	status,2,c
 10674  00287A  D005               	goto	i2l5599
 10675                           
 10676                           ; BSR set to: 0
 10677  00287C  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10678  00287E  A4D8               	btfss	status,2,c
 10679  002880  D002               	goto	i2l5599
 10680                           
 10681                           ; BSR set to: 0
 10682  002882  0E00               	movlw	0
 10683  002884  6E3B               	movwf	_ISR_alta$1263,c
 10684  002886                     i2l5599:
 10685                           
 10686                           ; BSR set to: 0
 10687  002886  C03B  F0D8         	movff	_ISR_alta$1263,_actual_speed	;volatile
 10688  00288A  0100               	movlb	0	; () banked
 10689  00288C  6BD9               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10690  00288E                     i2l5601:
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;telecomando.c: 104: }
 10694                           ;telecomando.c: 105: PIR1bits.RCIF = 0;
 10695  00288E  9A9E               	bcf	3998,5,c	;volatile
 10696  002890                     i2l241:
 10697  002890  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10698  002894  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10699  002898  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10700  00289C  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10701  0028A0  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10702  0028A4  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10703  0028A8  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10704  0028AC  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10705  0028B0  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10706  0028B4  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10707  0028B8  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10708  0028BC  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10709  0028C0  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10710  0028C4  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10711  0028C8  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10712  0028CA  0011               	retfie		f
 10713  0028CC                     __end_of_ISR_alta:
 10714                           	opt stack 0
 10715                           pclatu	equ	0xFFB
 10716                           pclath	equ	0xFFA
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           postinc0	equ	0xFEE
 10725                           fsr0h	equ	0xFEA
 10726                           fsr0l	equ	0xFE9
 10727                           wreg	equ	0xFE8
 10728                           fsr1h	equ	0xFE2
 10729                           fsr1l	equ	0xFE1
 10730                           bsr	equ	0xFE0
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           fsr2h	equ	0xFDA
 10734                           fsr2l	equ	0xFD9
 10735                           status	equ	0xFD8
 10736                           
 10737 ;; *************** function _getsUSART *****************
 10738 ;; Defined at:
 10739 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10742 ;;		 -> USART_Rx(8), 
 10743 ;;  len             1   20[COMRAM] unsigned char 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;  i               1   22[COMRAM] unsigned char 
 10746 ;;  data            1   21[COMRAM] unsigned char 
 10747 ;; Return value:  Size  Location     Type
 10748 ;;		None               void
 10749 ;; Registers used:
 10750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10756 ;;      Params:         3       0       0       0
 10757 ;;      Locals:         2       0       0       0
 10758 ;;      Temps:          0       0       0       0
 10759 ;;      Totals:         5       0       0       0
 10760 ;;Total ram usage:        5 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    1
 10763 ;; This function calls:
 10764 ;;		_ReadUSART
 10765 ;; This function is called by:
 10766 ;;		_ISR_alta
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text42
 10771  002FEA                     __ptext42:
 10772                           	opt stack 0
 10773  002FEA                     _getsUSART:
 10774                           	opt stack 20
 10775                           
 10776                           ;incstack = 0
 10777  002FEA  0E00               	movlw	0
 10778  002FEC  6E3A               	movwf	getsUSART@i,c
 10779  002FEE  D00E               	goto	i2l3923
 10780  002FF0                     i2l397:
 10781  002FF0  AA9E               	btfss	3998,5,c	;volatile
 10782  002FF2  D7FE               	goto	i2l397
 10783  002FF4  EC64  F018         	call	_ReadUSART	;wreg free
 10784  002FF8  6E39               	movwf	getsUSART@data,c
 10785  002FFA  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10786  002FFE  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10787  003002  C039  FFDF         	movff	getsUSART@data,indf2
 10788  003006  4A36               	infsnz	getsUSART@buffer,f,c
 10789  003008  2A37               	incf	getsUSART@buffer+1,f,c
 10790  00300A  2A3A               	incf	getsUSART@i,f,c
 10791  00300C                     i2l3923:
 10792  00300C  5038               	movf	getsUSART@len,w,c
 10793  00300E  5C3A               	subwf	getsUSART@i,w,c
 10794  003010  B0D8               	btfsc	status,0,c
 10795  003012  0012               	return	
 10796  003014  D7ED               	goto	i2l397
 10797  003016                     __end_of_getsUSART:
 10798                           	opt stack 0
 10799                           pclatu	equ	0xFFB
 10800                           pclath	equ	0xFFA
 10801                           tblptru	equ	0xFF8
 10802                           tblptrh	equ	0xFF7
 10803                           tblptrl	equ	0xFF6
 10804                           tablat	equ	0xFF5
 10805                           prodh	equ	0xFF4
 10806                           prodl	equ	0xFF3
 10807                           intcon	equ	0xFF2
 10808                           postinc0	equ	0xFEE
 10809                           fsr0h	equ	0xFEA
 10810                           fsr0l	equ	0xFE9
 10811                           wreg	equ	0xFE8
 10812                           fsr1h	equ	0xFE2
 10813                           fsr1l	equ	0xFE1
 10814                           bsr	equ	0xFE0
 10815                           indf2	equ	0xFDF
 10816                           postinc2	equ	0xFDE
 10817                           fsr2h	equ	0xFDA
 10818                           fsr2l	equ	0xFD9
 10819                           status	equ	0xFD8
 10820                           
 10821 ;; *************** function _ReadUSART *****************
 10822 ;; Defined at:
 10823 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  data            1   17[COMRAM] unsigned char 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10837 ;;      Params:         0       0       0       0
 10838 ;;      Locals:         1       0       0       0
 10839 ;;      Temps:          0       0       0       0
 10840 ;;      Totals:         1       0       0       0
 10841 ;;Total ram usage:        1 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		_getsUSART
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text43
 10851  0030C8                     __ptext43:
 10852                           	opt stack 0
 10853  0030C8                     _ReadUSART:
 10854                           	opt stack 20
 10855                           
 10856                           ;incstack = 0
 10857  0030C8  0EF2               	movlw	242
 10858  0030CA  1611               	andwf	_USART_Status,f,c
 10859  0030CC  ACAB               	btfss	4011,6,c	;volatile
 10860  0030CE  D003               	goto	i2l455
 10861  0030D0  9011               	bcf	_USART_Status,0,c
 10862  0030D2  B0AB               	btfsc	4011,0,c	;volatile
 10863  0030D4  8011               	bsf	_USART_Status,0,c
 10864  0030D6                     i2l455:
 10865  0030D6  B4AB               	btfsc	4011,2,c	;volatile
 10866  0030D8  8411               	bsf	_USART_Status,2,c
 10867  0030DA  B2AB               	btfsc	4011,1,c	;volatile
 10868  0030DC  8611               	bsf	_USART_Status,3,c
 10869  0030DE  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10870  0030E2  5035               	movf	ReadUSART@data,w,c
 10871  0030E4  0012               	return	
 10872  0030E6                     __end_of_ReadUSART:
 10873                           	opt stack 0
 10874                           pclatu	equ	0xFFB
 10875                           pclath	equ	0xFFA
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           postinc0	equ	0xFEE
 10884                           fsr0h	equ	0xFEA
 10885                           fsr0l	equ	0xFE9
 10886                           wreg	equ	0xFE8
 10887                           fsr1h	equ	0xFE2
 10888                           fsr1l	equ	0xFE1
 10889                           bsr	equ	0xFE0
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           fsr2h	equ	0xFDA
 10893                           fsr2l	equ	0xFD9
 10894                           status	equ	0xFD8
 10895                           pclatu	equ	0xFFB
 10896                           pclath	equ	0xFFA
 10897                           tblptru	equ	0xFF8
 10898                           tblptrh	equ	0xFF7
 10899                           tblptrl	equ	0xFF6
 10900                           tablat	equ	0xFF5
 10901                           prodh	equ	0xFF4
 10902                           prodl	equ	0xFF3
 10903                           intcon	equ	0xFF2
 10904                           postinc0	equ	0xFEE
 10905                           fsr0h	equ	0xFEA
 10906                           fsr0l	equ	0xFE9
 10907                           wreg	equ	0xFE8
 10908                           fsr1h	equ	0xFE2
 10909                           fsr1l	equ	0xFE1
 10910                           bsr	equ	0xFE0
 10911                           indf2	equ	0xFDF
 10912                           postinc2	equ	0xFDE
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917                           	psect	rparam
 10918  0000                     pclatu	equ	0xFFB
 10919                           pclath	equ	0xFFA
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           postinc0	equ	0xFEE
 10928                           fsr0h	equ	0xFEA
 10929                           fsr0l	equ	0xFE9
 10930                           wreg	equ	0xFE8
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           bsr	equ	0xFE0
 10934                           indf2	equ	0xFDF
 10935                           postinc2	equ	0xFDE
 10936                           fsr2h	equ	0xFDA
 10937                           fsr2l	equ	0xFD9
 10938                           status	equ	0xFD8
 10939                           
 10940                           	psect	temp
 10941  000047                     btemp:
 10942                           	opt stack 0
 10943  000047                     	ds	1
 10944  0000                     int$flags	set	btemp
 10945                           pclatu	equ	0xFFB
 10946                           pclath	equ	0xFFA
 10947                           tblptru	equ	0xFF8
 10948                           tblptrh	equ	0xFF7
 10949                           tblptrl	equ	0xFF6
 10950                           tablat	equ	0xFF5
 10951                           prodh	equ	0xFF4
 10952                           prodl	equ	0xFF3
 10953                           intcon	equ	0xFF2
 10954                           postinc0	equ	0xFEE
 10955                           fsr0h	equ	0xFEA
 10956                           fsr0l	equ	0xFE9
 10957                           wreg	equ	0xFE8
 10958                           fsr1h	equ	0xFE2
 10959                           fsr1l	equ	0xFE1
 10960                           bsr	equ	0xFE0
 10961                           indf2	equ	0xFDF
 10962                           postinc2	equ	0xFDE
 10963                           fsr2h	equ	0xFDA
 10964                           fsr2l	equ	0xFD9
 10965                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         79
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    106     138
    BANK1           256     33      45
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Rx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  176141
                                             25 BANK1      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   59964
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1486
                                             18 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           1     1      0     220
                                             27 COMRAM     1     1      0
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   79920
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10443
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     21      2D       6       17.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6A      8A       4       86.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD       9        0.0%
DATA                 0      0      FD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 20 15:57:32 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l97 2F5A                    ___awdiv@sign 0075              delay_s@repeat_loop 0073  
                            bsr 000FE0             ___wmul@multiplicand 003E                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000  
                           l251 1764                             l430 2D48                             l431 2D52  
                           l432 2D54                             l273 2E16                             l425 2D32  
                           l249 1776                             l442 3016                             l282 2CFE  
                           l258 18A6                             l275 2E18                             l259 18B8  
                           l373 0690                             l429 2D46                             l680 2372  
                           l690 2490                             l926 2DB8                             l784 20A6  
                           l873 2AF6                             l777 1FE2                             l778 2026  
                           l883 2C20                             l967 0B00                             l984 0C74  
                           l968 0AF4                             l993 0D08                             l969 0AC0  
                  getsUSART@len 0038                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 0075                             _dir 0219                             _str 0121  
                  ___awmod@sign 0041                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 008B                    ___flmul@bexp 0090                    ___flmul@sign 008A  
                  ___flmul@temp 0095                    ___flmul@prod 0091                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A9                    __CFG_WDT$OFF 000000  
                          l1060 1118                            l1053 0E7C                            l1070 122A  
                          l1062 1186                            l1090 1EC2                            l1082 1E4E  
                          l1075 1DA2                            l1089 1EAA                            l4041 2E0E  
                          l4033 2CFA                            l4025 2CC8                            l5003 261C  
                          l4029 2CD0                            l5031 26CA                            l5023 269E  
                          l5103 1E8C                            l5033 26D4                            l5105 1E9C  
                          l5201 00D4                            l4323 2F4E                            l5131 2708  
                          l5019 268A                            l5051 2A96                            l5123 2F9E  
                          l5133 273A                            l5037 26F0                            l5029 26BA  
                          l5117 1F14                            l5301 04A8                            l5221 0172  
                          l3365 30F2                            l5135 276C                            l5143 2FC0  
                          l5151 303E                            l4431 0ADA                            l4351 0962  
                          l5047 2A82                            l5071 2BCC                            l5231 01AE  
                          l5215 0120                            l5207 00EE                            l5127 2FB0  
                          l5137 279E                            l4521 0D70                            l4417 0A40  
                          l4345 093E                            l5049 2A90                            l5305 0520  
                          l5225 0182                            l5401 0912                            l5139 27D0  
                          l5147 2FD6                            l5155 3052                            l4531 0DA2  
                          l4507 0D02                            l4435 0AE4                            l4363 0998  
                          l4355 096C                            l5059 2AE6                            l5075 2C10  
                          l5067 2BB8                            l5091 1DDA                            l5323 0598  
                          l5307 0526                            l5219 015C                            l3901 2DAE  
                          l4525 0D92                            l4517 0D5E                            l4453 0B62  
                          l4445 0B24                            l4429 0AD4                            l5069 2BC6  
                          l5093 1DE2                            l5085 1DB2                            l5341 065E  
                          l5325 05A0                            l5333 0636                            l5237 01C8  
                          l5229 0188                            l4455 0B68                            l4463 0B84  
                          l4375 09D0                            l5095 1DF2                            l4711 2A4E  
                          l4703 2A2C                            l4623 1102                            l5343 0672  
                          l5335 0644                            l5319 056C                            l5271 0320  
                          l5263 029C                            l5247 021A                            l4537 0DB6  
                          l4529 0D9E                            l4481 0CA6                            l4473 0C54  
                          l4369 09AC                            l5097 1E30                            l4553 0E0A  
                          l5281 03BA                            l5521 2576                            l4491 0CC8  
                          l4459 0B72                            l4387 0A04                            l4379 09DA  
                          l4707 2A3A                            l4731 2C60                            l4723 2C46  
                          l4571 0E64                            l4555 0E10                            l4547 0DE6  
                          l4811 1496                            l5371 081C                            l5355 06C4  
                          l5347 0694                            l5291 043E                            l5275 0352  
                          l5523 2586                            l3835 2D34                            l3827 2D26  
                          l4733 2C68                            l4653 11FC                            l4629 112C  
                          l4581 0EA4                            l4573 0E6A                            l4565 0E40  
                          l4557 0E22                            l4805 13DC                            l5277 0368  
                          l4487 0CBC                            l4735 2C6C                            l4743 2C8A  
                          l4727 2C52                            l4663 124A                            l4655 1210  
                          l4639 1180                            l4823 1622                            l4815 14C2  
                          l5359 0726                            l5287 040C                            l5279 03A4  
                          l5519 2564                            l4497 0CDC                            l4913 226A  
                          l4665 1254                            l4649 11D6                            l4577 0E90  
                          l4841 30C0                            l5393 08C2                            l5385 086A  
                          l5377 0836                            l5369 080E                            l5625 175C  
                          l3891 2D8E                            l4499 0CE2                            l4907 2248  
                          l4851 1F5A                            l4691 29EA                            l4747 2C98  
                          l4739 2C80                            l5379 0844                            l3893 2D92  
                          l4693 29F6                            l4685 29CC                            l4829 16DC  
                          l5397 08EE                            l5389 0892                            l5637 1792  
                          l4951 2346                            l4935 2304                            l4927 22B4  
                          l4695 29FC                            l4679 29B6                            l4791 1D06  
                          l4783 1C26                            l5399 08F4                            l5655 1884  
                          l3889 2D86                            l4857 1F8E                            l5681 1992  
                          l5657 1892                            l4971 23C2                            l4947 2336  
                          l4891 2070                            l5659 1898                            l4957 2360  
                          l5685 19A6                            l5669 18B2                            l4975 2400  
                          l4959 236C                            l4887 205C                            l5695 1A28  
                          l4985 24DC                            l4993 2F80                            l4897 208C  
                          l5689 19B0                            l4979 2448                            l4899 209C  
                 getsUSART@data 0039                            STR_1 3FBA                            STR_2 3F90  
                          STR_3 3F7B                            STR_4 3FBA                            STR_5 3FA5  
                          STR_6 3FCF                            STR_7 3FF9                            STR_8 3FEF  
                          STR_9 3FFD                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          _PIE1 000F9D                            u4260 2E3A                            u4266 2E3C  
                          u6210 0688                            u5270 11EA                            u5190 10A4  
                          u5511 1F38                            u3655 3102                            u3656 3104  
                          u4705 2EBC                            u4706 2EBE                            u4810 0A8A  
                          u4715 2EC6                            u5531 1F6C                            u5195 1098  
                          u4716 2EC8                            u4820 0AA2                            u4830 0AA4  
                          u6520 1772                            u5740 263C                            u6620 1A14  
                          u4685 2EA4                            u4686 2EA6                            u6630 1A8C  
                          u6550 1852                            u4695 2EB0                            u6535 1774  
                          u4696 2EB2                            u6560 186A                            u5745 2630  
                          u6566 186C                            u6647 2F50                            _main 1708  
     __size_of_LCD_send_command 0036                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0047  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 00C0                   __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032  
                  _sprintf$2463 0100                  delay_s@value_s 0072                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010        __end_of_LCD_enable_pulse 30AA                   _LCD_backlight 30F8  
       __size_of_LCD_initialize 016E                   ___fltol@sign1 00A8                 __end_of___fladd 0DC8  
                         ?_main 0024                 __end_of___awdiv 2A58                 __end_of___flneg 2F92  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2CA2                 __end_of___flmul 126E  
               __end_of___flsub 2E0A                 __end_of___fltol 2702                 __end_of___lldiv 2B08  
               ___awdiv@divisor 0072                 __end_of___llmod 2C32                           _T3CON 000FB1  
               __end_of___lwdiv 2DC2                           i1l245 0078                           i2l241 2890  
                         i2l455 30D6                           i2l397 2FF0                 ___awdiv@counter 0074  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR3H 000FB3  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                 __end_of_delay_s 2FBE                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000              __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 28CC  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 3F7B                           _scale 126E  
               __end_of_isdigit 30C8                  __pbitbssCOMRAM 0218                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 0920                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0024             __size_of_LCD_cursor 0032                  WriteUSART@data 003C  
               __initialization 2E52                  ?_LCD_backlight 0024                    __end_of_main 1AA2  
 __size_of_board_initialization 00CE                   _LCD_goto_line 2702               ?_Joystick_Polling 0024  
            ??_Joystick_Polling 003C               ?_LCD_write_string 007A                          ??_main 0119  
                 __activetblptr 000002                  _JoystickValues 0022              ??_LCD_write_string 0043  
          __size_of__tdiv_to_l_ 0192               __end_of_LCD_clear 2F32          LCD_write_string@buffer 007A  
                        _ADCON1 000FC1                ___llmod@dividend 0070                          ?_scale 0097  
                        _ADRESH 000FC4                ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000  
               getsUSART@buffer 0036                          i2l5601 288E                          i2l3923 300C  
                        i2l5599 2886              __size_of_ReadUSART 001E                          _SPBRGH 000FB0  
              __end_of___xxtofl 1F26                 _switch_position 0019                __end_of_delay_ms 2F64  
                __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0                __end_of__powers_ 3F53  
            __size_of_OpenUSART 0060                  ?_LCD_goto_line 0024                          ___flge 2384  
                     ??___fladd 00AC                _delay_set_quartz 3106                          ___wmul 3062  
                     ??___awdiv 0042                       ??___flneg 0040                  __CFG_STVREN$ON 000000  
                     ??___awmod 0040                       ??___flmul 0086                       ??___flsub 0043  
                     ??___fltol 00A4                       ??___lldiv 003C                       ??___llmod 003C  
                     ??___lwdiv 0040         __size_of_LCD_write_char 0096                          _fround 1AA2  
LCD_initialize@quartz_frequency 0077                          clear_0 2E58                          clear_1 2E64  
                        clear_2 2E72                ___awdiv@quotient 0076                 ___awmod@divisor 003E  
                     ??_delay_s 0042            __size_of_LCD_Handler 0116                 ___awmod@counter 0040  
               __CFG_BOREN$BOHW 000000               _JoystickConstants 001A                    __pdataCOMRAM 0046  
                     ??_isdigit 003C                    __mediumconst 3EEA                          tblptrh 000FF7  
                _analogic_brake 0014                          tblptrl 000FF6                          tblptru 000FF8  
           __size_of_USART_Send 006E                       ??_sprintf 00C8                      ___flge@ff1 0070  
                    ___flge@ff2 0074                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070                      __accesstop 0060         __end_of__initialization 2E8A  
                    ___flneg@f1 003C                _LCD_send_command 2E98                   ___rparam_used 000001  
                    ___fltol@f1 00A0                 ??_LCD_backlight 003C                      _WriteUSART 30E6  
                __pcstackCOMRAM 0024                       ?_ISR_alta 0024                   __end_of_scale 1708  
                _LCD_initialize 20B8               _LCD_write_message 2FBE               __end_of_ReadUSART 30E6  
            ?_LCD_write_message 007A                      __div_to_l_ 2226                    ??_LCD_cursor 0043  
                  _actual_speed 00D8              __size_of_getsUSART 002C                   ReadUSART@data 0035  
             __end_of_OpenUSART 2D70                 __div_to_l_@exp1 0041             ??_LCD_write_message 0043  
               __div_to_l_@cntr 0040                         ??_scale 0043                 __div_to_l_@quot 003C  
                    __pbssBANK0 00CA                      __pbssBANK1 0121                      __pnvCOMRAM 0044  
                    _actual_dir 0218                   __div_to_l_@f1 0070                   __div_to_l_@f2 0074  
               ??_LCD_goto_line 0043              __end_of_LCD_cursor 2F00          __end_of_LCD_initialize 2226  
                       ?___flge 0070                         ?___wmul 003C                      ??_ISR_alta 0060  
     __end_of_LCD_write_message 2FEA               ?_LCD_enable_pulse 0024                   putsUSART@data 003D  
                       ?_fround 0097              ??_LCD_enable_pulse 0042                       ?___xxtofl 0070  
              LCD_cursor@active 0076                       ?_delay_ms 0070              __size_of_putsUSART 0026  
                  ??_USART_Send 003F               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2462 009B                         __Lparam 0000                delay_ms@value_ms 0070  
             __end_of_getsUSART 3016                     ?_WriteUSART 0024                 ?_LCD_initialize 0024  
               __size_of___flge 015C                         ___fladd 0920                         ___awdiv 299A  
                       ___flneg 2F64                         ___awmod 2C32                         ___flmul 0DC8  
                       ___flsub 2DC2                         ___fltol 25F6                         ___lldiv 2A58  
               __size_of___wmul 0026                  _LCD_write_char 2B08                         ___llmod 2B9E  
                       ___lwdiv 2D70                         __pcinit 2E52                 __size_of_fround 02B6  
                       _delay_s 2F92                         __ramtop 0300             LCD_write_char@value 0079  
                       __ptext0 1708                         __ptext1 28CC                         __ptext2 2F92  
                       __ptext3 2D10                         __ptext4 20B8                         __ptext5 3106  
                       __ptext6 2ECE                         __ptext7 30F8                         __ptext8 2CA2  
                       __ptext9 3016                       _ECU_Check 0010                     ?__div_to_l_ 0070  
              LCD_write_char@D0 0078                LCD_write_char@D1 0077                LCD_write_char@D2 0076  
              LCD_write_char@D3 0075                         _dpowers 3F53                         _isdigit 30AA  
                    ??___xxtofl 0074                ___awmod@dividend 003C                      ??_delay_ms 0042  
  __end_of_board_initialization 299A       __size_of_Joystick_Polling 0048              __end_of_USART_Send 2D10  
      __end_of_delay_set_quartz 310E                         _sprintf 00C4                  __pintcode_body 27EE  
                     _LCD_clear 2F00            end_of_initialization 2E8A       __size_of_LCD_write_string 0026  
                 __Lmediumconst 3EEA                         int_func 27EE                   _Battery_Check 000F  
           LCD_backlight@active 003C                 ___lldiv@divisor 0074              LCD_cursor@blinking 0075  
               ___lldiv@counter 0040          __end_of_LCD_write_char 2B9E                       _RCSTAbits 000FAB  
                       postinc0 000FEE                         postinc2 000FDE               __end_of_putsUSART 303C  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 003C                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 2ECE  
                   ___fladd@grs 00B7                   ___xxtofl@sign 0078                       _TRISCbits 000F94  
                    getsUSART@i 003A             __size_of_WriteUSART 0012                      ?_LCD_clear 0024  
       _clock_counter_reference 0044                     ___flmul@grs 008C                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 015E         LCD_write_integer@F17027 00CA                 ?_LCD_write_char 0024  
                 ??_LCD_Handler 0043                  __end_of___flge 24E0                      ?_ISR_bassa 0024  
                __end_of___wmul 3088                   __pidataCOMRAM 310E               __size_of_ISR_alta 28C4  
                __end_of_fround 1D58                     USART_Send@i 003F             start_initialization 2E52  
                     _ReadUSART 30C8             __end_of__tdiv_to_l_ 20B8                       _OpenUSART 2D10  
               ___llmod@divisor 0074                 ___llmod@counter 003C           __end_of_LCD_backlight 3106  
                      ??___flge 003C            _board_initialization 28CC                        ??___wmul 0040  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 0043                   sprintf@tmpval 010E  
                     ___fladd@a 00A8                       ___fladd@b 00A4                      fround@prec 00A3  
           __end_of_LCD_Handler 25F6                       ___flmul@a 0082                       ___flmul@b 007E  
                   __pbssCOMRAM 0001                       ___flsub@a 00BC                       ___flsub@b 00B8  
                    ?_ReadUSART 0024                   __pcstackBANK0 0060                   __pcstackBANK1 0100  
              _Joystick_Polling 2E0A               __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022  
                  _isdigit$2069 003D               __size_of_delay_ms 0032                     ??_LCD_clear 0043  
       LCD_write_message@buffer 007A                   _ISR_alta$1263 003B                _LCD_write_string 303C  
                    ?_OpenUSART 003C                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 0043       delay_set_quartz@frequency 003C  
              ___lwdiv@dividend 003C              LCD_send_command@D0 0074              LCD_send_command@D1 0073  
            LCD_send_command@D2 0072              LCD_send_command@D3 0042                    ??_WriteUSART 003C  
         __end_of_LCD_goto_line 27EE           ?_board_initialization 0024                       __pintcode 0008  
                 __pmediumconst 3EEA                        ?___fladd 00A4                        ?___awdiv 0070  
                      ?___flneg 003C                        ?___awmod 003C                        ?___flmul 007E  
                      ?___flsub 00B8                        ?___fltol 00A0                        ?___lldiv 0070  
                      ?___llmod 0070                       __npowers_ 3EEB                        ?___lwdiv 003C  
                   ??_ISR_bassa 0024                       _getsUSART 2FEA                     __pintcodelo 0018  
                      ?_delay_s 0024                     __tdiv_to_l_ 1F26                    ??__div_to_l_ 003C  
                      ?_isdigit 0024                ___lwdiv@quotient 0040                        ?_sprintf 00C0  
                __size_of_scale 049A              __end_of_WriteUSART 30F8               ?_delay_set_quartz 0024  
            ??_delay_set_quartz 003C                  ___wmul@product 0040                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2    _delay_quartz_frequency_value 0046                        _PIE1bits 000F9D  
                      _PIE2bits 000FA0                        _PIR1bits 000F9E              __end_of__div_to_l_ 2384  
                      _PIR2bits 000FA1                        i2u645_40 2852                        i2u646_45 2854  
                     _pr_time_1 0001                       _pr_time_2 0005                       _pr_time_3 00D4  
                     _set_speed 000D                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _ISR_alta 0008                     _LCD_Handler 24E0                      ?_getsUSART 0036  
                      _USART_Rx 00DA                        _USART_Tx 00E2                      _ADCON0bits 000FC2  
                     _putsUSART 3016                      _ADCON2bits 000FC0               ___wmul@multiplier 003C  
             ?_LCD_send_command 0072                _actual_speed_pk0 0012                _actual_speed_pk1 0013  
              _actual_speed_kmh 00D0                     ??_ReadUSART 0035              ??_LCD_send_command 0042  
                 _set_speed_pk0 0016                   _set_speed_pk1 0017                     ??_OpenUSART 003E  
              ??_LCD_write_char 0043                 OpenUSART@config 003E               LCD_goto_line@line 0075  
                      __Hrparam 0000          ??_board_initialization 0043                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 002E  
              __size_of___awmod 0070                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00B0                __size_of___llmod 0094  
              __size_of___lwdiv 0052                     _fround$2460 009F                     _fround$2461 009B  
                    ?_putsUSART 003D                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1D58                __size_of_isdigit 001E  
                      _delay_ms 2F32                 ___lwdiv@divisor 003E                 ___lwdiv@counter 0042  
              _LCD_enable_pulse 3088                        __ptext10 30E6                        __ptext11 24E0  
                      __ptext20 2226                        __ptext12 00C4                        __ptext21 1D58  
                      __ptext13 126E                        __ptext30 303C                        __ptext22 2B9E  
                      __ptext14 30AA                        __ptext31 2FBE                        __ptext23 2A58  
                      __ptext15 1AA2                        __ptext32 2B08                        __ptext24 25F6  
                      __ptext16 0DC8                        __ptext33 2702                        __ptext25 2DC2  
                      __ptext17 2C32                        __ptext42 2FEA                        __ptext34 2F00  
                      __ptext26 0920                        __ptext18 299A                        __ptext43 30C8  
                      __ptext35 2E98                        __ptext27 2F64                        __ptext19 1F26  
                      __ptext36 3088                        __ptext28 2384                        __ptext37 2F32  
                      __ptext29 2D70                        __ptext38 3062                        __ptext39 2E0A  
                      __powers_ 3F1F                __size_of_sprintf 085C                   __size_of_main 039A  
                      _wait_low 021B        __end_of_Joystick_Polling 2E52                        int$flags 0047  
                   ??_getsUSART 0039        __end_of_LCD_write_string 3062                      _LCD_cursor 2ECE  
                    _INTCONbits 000FF2                    _set_steering 0018                  OpenUSART@spbrg 003C  
                      isdigit@c 003E                        scale@scl 009F                    _time_counter 0009  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 007D                       sprintf@sp 00C0                __tdiv_to_l_@cntr 007C  
              __tdiv_to_l_@quot 0078                ___lldiv@dividend 0070                    ?__tdiv_to_l_ 0070  
                   ??_putsUSART 003F                        sprintf@c 0118                        sprintf@f 00C2  
              ___lldiv@quotient 003C          __size_of_LCD_backlight 000E                   ___fladd@signs 00B4  
                  ___fladd@aexp 00B5                    ___fladd@bexp 00B6                    _USART_Status 0011  
                    _USART_Send 2CA2                    _power_switch 021A  
