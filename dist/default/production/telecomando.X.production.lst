

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 20 21:45:53 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  00308A                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  00308A  14                 	db	20
    73                           
    74                           	psect	mediumconst
    75  003EEA                     __pmediumconst:
    76                           	opt stack 0
    77  003EEA  00                 	db	0
    78  003EEB                     __npowers_:
    79                           	opt stack 0
    80  003EEB  0000               	dw	0
    81  003EED  3F80               	dw	16256
    82  003EEF  CCCD               	dw	52429
    83  003EF1  3DCC               	dw	15820
    84  003EF3  D70A               	dw	55050
    85  003EF5  3C23               	dw	15395
    86  003EF7  126F               	dw	4719
    87  003EF9  3A83               	dw	14979
    88  003EFB  B717               	dw	46871
    89  003EFD  38D1               	dw	14545
    90  003EFF  C5AC               	dw	50604
    91  003F01  3727               	dw	14119
    92  003F03  37BD               	dw	14269
    93  003F05  3586               	dw	13702
    94  003F07  BF95               	dw	49045
    95  003F09  33D6               	dw	13270
    96  003F0B  CC77               	dw	52343
    97  003F0D  322B               	dw	12843
    98  003F0F  705F               	dw	28767
    99  003F11  3089               	dw	12425
   100  003F13  E6FF               	dw	59135
   101  003F15  2EDB               	dw	11995
   102  003F17  E508               	dw	58632
   103  003F19  1E3C               	dw	7740
   104  003F1B  4260               	dw	16992
   105  003F1D  0DA2               	dw	3490
   106  003F1F                     __end_of__npowers_:
   107                           	opt stack 0
   108  003F1F                     __powers_:
   109                           	opt stack 0
   110  003F1F  0000               	dw	0
   111  003F21  3F80               	dw	16256
   112  003F23  0000               	dw	0
   113  003F25  4120               	dw	16672
   114  003F27  0000               	dw	0
   115  003F29  42C8               	dw	17096
   116  003F2B  0000               	dw	0
   117  003F2D  447A               	dw	17530
   118  003F2F  4000               	dw	16384
   119  003F31  461C               	dw	17948
   120  003F33  5000               	dw	20480
   121  003F35  47C3               	dw	18371
   122  003F37  2400               	dw	9216
   123  003F39  4974               	dw	18804
   124  003F3B  9680               	dw	38528
   125  003F3D  4B18               	dw	19224
   126  003F3F  BC20               	dw	48160
   127  003F41  4CBE               	dw	19646
   128  003F43  6B28               	dw	27432
   129  003F45  4E6E               	dw	20078
   130  003F47  02F9               	dw	761
   131  003F49  5015               	dw	20501
   132  003F4B  78EC               	dw	30956
   133  003F4D  60AD               	dw	24749
   134  003F4F  F2CA               	dw	62154
   135  003F51  7149               	dw	29001
   136  003F53                     __end_of__powers_:
   137                           	opt stack 0
   138  003F53                     _dpowers:
   139                           	opt stack 0
   140  003F53  0001               	dw	1
   141  003F55  0000               	dw	0
   142  003F57  000A               	dw	10
   143  003F59  0000               	dw	0
   144  003F5B  0064               	dw	100
   145  003F5D  0000               	dw	0
   146  003F5F  03E8               	dw	1000
   147  003F61  0000               	dw	0
   148  003F63  2710               	dw	10000
   149  003F65  0000               	dw	0
   150  003F67  86A0               	dw	34464
   151  003F69  0001               	dw	1
   152  003F6B  4240               	dw	16960
   153  003F6D  000F               	dw	15
   154  003F6F  9680               	dw	38528
   155  003F71  0098               	dw	152
   156  003F73  E100               	dw	57600
   157  003F75  05F5               	dw	1525
   158  003F77  CA00               	dw	51712
   159  003F79  3B9A               	dw	15258
   160  003F7B                     __end_of_dpowers:
   161                           	opt stack 0
   162  003F7B                     STR_3:
   163  003F7B  54                 	db	84	;'T'
   164  003F7C  75                 	db	117	;'u'
   165  003F7D  72                 	db	114	;'r'
   166  003F7E  6E                 	db	110	;'n'
   167  003F7F  20                 	db	32
   168  003F80  74                 	db	116	;'t'
   169  003F81  68                 	db	104	;'h'
   170  003F82  65                 	db	101	;'e'
   171  003F83  20                 	db	32
   172  003F84  73                 	db	115	;'s'
   173  003F85  77                 	db	119	;'w'
   174  003F86  69                 	db	105	;'i'
   175  003F87  74                 	db	116	;'t'
   176  003F88  63                 	db	99	;'c'
   177  003F89  68                 	db	104	;'h'
   178  003F8A  20                 	db	32
   179  003F8B  4F                 	db	79	;'O'
   180  003F8C  4E                 	db	78	;'N'
   181  003F8D  21                 	db	33
   182  003F8E  20                 	db	32
   183  003F8F  00                 	db	0
   184  003F90                     STR_2:
   185  003F90  3D                 	db	61	;'='
   186  003F91  3D                 	db	61	;'='
   187  003F92  3E                 	db	62	;'>'
   188  003F93  20                 	db	32
   189  003F94  56                 	db	86	;'V'
   190  003F95  45                 	db	69	;'E'
   191  003F96  48                 	db	72	;'H'
   192  003F97  49                 	db	73	;'I'
   193  003F98  43                 	db	67	;'C'
   194  003F99  4C                 	db	76	;'L'
   195  003F9A  45                 	db	69	;'E'
   196  003F9B  20                 	db	32
   197  003F9C  20                 	db	32
   198  003F9D  4F                 	db	79	;'O'
   199  003F9E  46                 	db	70	;'F'
   200  003F9F  46                 	db	70	;'F'
   201  003FA0  20                 	db	32
   202  003FA1  3C                 	db	60	;'<'
   203  003FA2  3D                 	db	61	;'='
   204  003FA3  3D                 	db	61	;'='
   205  003FA4  00                 	db	0
   206  003FA5                     STR_5:
   207  003FA5  3D                 	db	61	;'='
   208  003FA6  3D                 	db	61	;'='
   209  003FA7  3D                 	db	61	;'='
   210  003FA8  20                 	db	32
   211  003FA9  56                 	db	86	;'V'
   212  003FAA  45                 	db	69	;'E'
   213  003FAB  48                 	db	72	;'H'
   214  003FAC  49                 	db	73	;'I'
   215  003FAD  43                 	db	67	;'C'
   216  003FAE  4C                 	db	76	;'L'
   217  003FAF  45                 	db	69	;'E'
   218  003FB0  20                 	db	32
   219  003FB1  44                 	db	68	;'D'
   220  003FB2  41                 	db	65	;'A'
   221  003FB3  54                 	db	84	;'T'
   222  003FB4  41                 	db	65	;'A'
   223  003FB5  20                 	db	32
   224  003FB6  3D                 	db	61	;'='
   225  003FB7  3D                 	db	61	;'='
   226  003FB8  3D                 	db	61	;'='
   227  003FB9  00                 	db	0
   228  003FBA                     STR_1:
   229  003FBA  3D                 	db	61	;'='
   230  003FBB  3D                 	db	61	;'='
   231  003FBC  3D                 	db	61	;'='
   232  003FBD  3D                 	db	61	;'='
   233  003FBE  3D                 	db	61	;'='
   234  003FBF  3D                 	db	61	;'='
   235  003FC0  3D                 	db	61	;'='
   236  003FC1  3D                 	db	61	;'='
   237  003FC2  3D                 	db	61	;'='
   238  003FC3  3D                 	db	61	;'='
   239  003FC4  3D                 	db	61	;'='
   240  003FC5  3D                 	db	61	;'='
   241  003FC6  3D                 	db	61	;'='
   242  003FC7  3D                 	db	61	;'='
   243  003FC8  3D                 	db	61	;'='
   244  003FC9  3D                 	db	61	;'='
   245  003FCA  3D                 	db	61	;'='
   246  003FCB  3D                 	db	61	;'='
   247  003FCC  3D                 	db	61	;'='
   248  003FCD  3D                 	db	61	;'='
   249  003FCE  00                 	db	0
   250  003FCF                     STR_6:
   251  003FCF  44                 	db	68	;'D'
   252  003FD0  69                 	db	105	;'i'
   253  003FD1  72                 	db	114	;'r'
   254  003FD2  65                 	db	101	;'e'
   255  003FD3  63                 	db	99	;'c'
   256  003FD4  74                 	db	116	;'t'
   257  003FD5  69                 	db	105	;'i'
   258  003FD6  6F                 	db	111	;'o'
   259  003FD7  6E                 	db	110	;'n'
   260  003FD8  3A                 	db	58	;':'
   261  003FD9  20                 	db	32
   262  003FDA  00                 	db	0
   263  003FDB                     STR_10:
   264  003FDB  53                 	db	83	;'S'
   265  003FDC  70                 	db	112	;'p'
   266  003FDD  65                 	db	101	;'e'
   267  003FDE  65                 	db	101	;'e'
   268  003FDF  64                 	db	100	;'d'
   269  003FE0  3A                 	db	58	;':'
   270  003FE1  20                 	db	32
   271  003FE2  25                 	db	37
   272  003FE3  2E                 	db	46
   273  003FE4  33                 	db	51	;'3'
   274  003FE5  66                 	db	102	;'f'
   275  003FE6  00                 	db	0
   276  003FE7                     STR_13:
   277  003FE7  57                 	db	87	;'W'
   278  003FE8  61                 	db	97	;'a'
   279  003FE9  69                 	db	105	;'i'
   280  003FEA  74                 	db	116	;'t'
   281  003FEB  2E                 	db	46
   282  003FEC  2E                 	db	46
   283  003FED  2E                 	db	46
   284  003FEE  00                 	db	0
   285  003FEF                     STR_8:
   286  003FEF  42                 	db	66	;'B'
   287  003FF0  4B                 	db	75	;'K'
   288  003FF1  57                 	db	87	;'W'
   289  003FF2  44                 	db	68	;'D'
   290  003FF3  00                 	db	0
   291  003FF4                     STR_11:
   292  003FF4  4B                 	db	75	;'K'
   293  003FF5  6D                 	db	109	;'m'
   294  003FF6  2F                 	db	47
   295  003FF7  68                 	db	104	;'h'
   296  003FF8  00                 	db	0
   297  003FF9                     STR_7:
   298  003FF9  46                 	db	70	;'F'
   299  003FFA  57                 	db	87	;'W'
   300  003FFB  44                 	db	68	;'D'
   301  003FFC  00                 	db	0
   302  003FFD                     STR_9:
   303  003FFD  50                 	db	80	;'P'
   304  003FFE  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  003FFF  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	nvBANK0
   310  0000EA                     __pnvBANK0:
   311                           	opt stack 0
   312  0000EA                     _clock_counter_reference:
   313                           	opt stack 0
   314  0000EA                     	ds	2
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2bits	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _INTCONbits	set	4082
   320  0000                     _IPR1bits	set	3999
   321  0000                     _IPR2bits	set	4002
   322  0000                     _LATA	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATBbits	set	3978
   325  0000                     _LATC	set	3979
   326  0000                     _LATCbits	set	3979
   327  0000                     _LATD	set	3980
   328  0000                     _LATE	set	3981
   329  0000                     _PIE1	set	3997
   330  0000                     _PIE1bits	set	3997
   331  0000                     _PIE2bits	set	4000
   332  0000                     _PIR1bits	set	3998
   333  0000                     _PIR2bits	set	4001
   334  0000                     _PORTAbits	set	3968
   335  0000                     _PORTBbits	set	3969
   336  0000                     _PORTDbits	set	3971
   337  0000                     _RCONbits	set	4048
   338  0000                     _RCREG	set	4014
   339  0000                     _RCSTA	set	4011
   340  0000                     _RCSTAbits	set	4011
   341  0000                     _SPBRG	set	4015
   342  0000                     _SPBRGH	set	4016
   343  0000                     _T3CON	set	4017
   344  0000                     _TMR3H	set	4019
   345  0000                     _TMR3L	set	4018
   346  0000                     _TRISA	set	3986
   347  0000                     _TRISB	set	3987
   348  0000                     _TRISC	set	3988
   349  0000                     _TRISCbits	set	3988
   350  0000                     _TRISD	set	3989
   351  0000                     _TRISE	set	3990
   352  0000                     _TXREG	set	4013
   353  0000                     _TXSTA	set	4012
   354  0000                     _TXSTAbits	set	4012
   355                           
   356                           	psect	cinit
   357  002DB2                     __pcinit:
   358                           	opt stack 0
   359  002DB2                     start_initialization:
   360                           	opt stack 0
   361  002DB2                     __initialization:
   362                           	opt stack 0
   363                           
   364                           ; Clear objects allocated to BANK1 (12 bytes)
   365  002DB2  EE01  F029         	lfsr	0,__pbssBANK1
   366  002DB6  0E0C               	movlw	12
   367  002DB8                     clear_0:
   368  002DB8  6AEE               	clrf	postinc0,c
   369  002DBA  06E8               	decf	wreg,f,c
   370  002DBC  E1FD               	bnz	clear_0
   371                           
   372                           ; Clear objects allocated to BANK0 (40 bytes)
   373  002DBE  EE00  F0C2         	lfsr	0,__pbssBANK0
   374  002DC2  0E28               	movlw	40
   375  002DC4                     clear_1:
   376  002DC4  6AEE               	clrf	postinc0,c
   377  002DC6  06E8               	decf	wreg,f,c
   378  002DC8  E1FD               	bnz	clear_1
   379                           
   380                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   381  002DCA  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   382                           
   383                           ; Clear objects allocated to COMRAM (37 bytes)
   384  002DCC  EE00  F001         	lfsr	0,__pbssCOMRAM
   385  002DD0  0E25               	movlw	37
   386  002DD2                     clear_2:
   387  002DD2  6AEE               	clrf	postinc0,c
   388  002DD4  06E8               	decf	wreg,f,c
   389  002DD6  E1FD               	bnz	clear_2
   390                           
   391                           ; Initialize objects allocated to COMRAM (1 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393  002DD8  0E8A               	movlw	low __pidataCOMRAM
   394  002DDA  6EF6               	movwf	tblptrl,c
   395  002DDC  0E30               	movlw	high __pidataCOMRAM
   396  002DDE  6EF7               	movwf	tblptrh,c
   397  002DE0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398  002DE2  6EF8               	movwf	tblptru,c
   399  002DE4  0009               	tblrd		*+	;fetch initializer
   400  002DE6  CFF5 F047          	movff	tablat,__pdataCOMRAM
   401  002DEA                     end_of_initialization:
   402                           	opt stack 0
   403  002DEA                     __end_of__initialization:
   404                           	opt stack 0
   405  002DEA  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   406  002DEC  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   407  002DEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   408  002DF0  6EF8               	movwf	tblptru,c
   409  002DF2  0100               	movlb	0
   410  002DF4  EF7B  F00B         	goto	_main	;jump to C main() function
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	bitbssCOMRAM
   419  000230                     __pbitbssCOMRAM:
   420                           	opt stack 0
   421  000230                     _actual_dir:
   422                           	opt stack 0
   423  000230                     	ds	1
   424  000231                     _power_switch:
   425                           	opt stack 0
   426  000231                     	ds	1
   427  000232                     _wait_low:
   428                           	opt stack 0
   429  000232                     	ds	1
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437                           	psect	bssCOMRAM
   438  000001                     __pbssCOMRAM:
   439                           	opt stack 0
   440  000001                     _pr_time_1:
   441                           	opt stack 0
   442  000001                     	ds	4
   443  000005                     _pr_time_3:
   444                           	opt stack 0
   445  000005                     	ds	4
   446  000009                     _time_counter:
   447                           	opt stack 0
   448  000009                     	ds	4
   449  00000D                     _set_speed:
   450                           	opt stack 0
   451  00000D                     	ds	2
   452  00000F                     _Battery_Check:
   453                           	opt stack 0
   454  00000F                     	ds	1
   455  000010                     _ECU_Check:
   456                           	opt stack 0
   457  000010                     	ds	1
   458  000011                     _USART_Status:
   459                           	opt stack 0
   460  000011                     	ds	1
   461  000012                     _actual_speed_pk0:
   462                           	opt stack 0
   463  000012                     	ds	1
   464  000013                     _actual_speed_pk1:
   465                           	opt stack 0
   466  000013                     	ds	1
   467  000014                     _analogic_brake:
   468                           	opt stack 0
   469  000014                     	ds	1
   470  000015                     _dir:
   471                           	opt stack 0
   472  000015                     	ds	1
   473  000016                     _i:
   474                           	opt stack 0
   475  000016                     	ds	1
   476  000017                     _set_speed_pk0:
   477                           	opt stack 0
   478  000017                     	ds	1
   479  000018                     _set_speed_pk1:
   480                           	opt stack 0
   481  000018                     	ds	1
   482  000019                     _set_steering:
   483                           	opt stack 0
   484  000019                     	ds	1
   485  00001A                     _spam_counter:
   486                           	opt stack 0
   487  00001A                     	ds	1
   488  00001B                     _switch_position:
   489                           	opt stack 0
   490  00001B                     	ds	1
   491  00001C                     _JoystickConstants:
   492                           	opt stack 0
   493  00001C                     	ds	8
   494  000024                     _JoystickValues:
   495                           	opt stack 0
   496  000024                     	ds	2
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           
   504                           	psect	dataCOMRAM
   505  000047                     __pdataCOMRAM:
   506                           	opt stack 0
   507  000047                     _delay_quartz_frequency_value:
   508                           	opt stack 0
   509  000047                     	ds	1
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           
   517                           	psect	bssBANK0
   518  0000C2                     __pbssBANK0:
   519                           	opt stack 0
   520  0000C2                     _USART_Tx_Old:
   521                           	opt stack 0
   522  0000C2                     	ds	8
   523  0000CA                     LCD_write_integer@F17027:
   524                           	opt stack 0
   525  0000CA                     	ds	6
   526  0000D0                     _actual_speed_kmh:
   527                           	opt stack 0
   528  0000D0                     	ds	4
   529  0000D4                     _pr_time_2:
   530                           	opt stack 0
   531  0000D4                     	ds	4
   532  0000D8                     _actual_speed:
   533                           	opt stack 0
   534  0000D8                     	ds	2
   535  0000DA                     _USART_Rx:
   536                           	opt stack 0
   537  0000DA                     	ds	8
   538  0000E2                     _USART_Tx:
   539                           	opt stack 0
   540  0000E2                     	ds	8
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           
   548                           	psect	bssBANK1
   549  000129                     __pbssBANK1:
   550                           	opt stack 0
   551  000129                     _str:
   552                           	opt stack 0
   553  000129                     	ds	12
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           
   561                           	psect	cstackBANK1
   562  000100                     __pcstackBANK1:
   563                           	opt stack 0
   564  000100                     ?_sprintf:
   565                           	opt stack 0
   566  000100                     sprintf@sp:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x0
   570  000100                     	ds	2
   571  000102                     sprintf@f:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x2
   575  000102                     	ds	6
   576  000108                     _sprintf$2402:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0x8
   580  000108                     	ds	4
   581  00010C                     sprintf@ap:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0xC
   585  00010C                     	ds	2
   586  00010E                     sprintf@flag:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00010E                     	ds	2
   591  000110                     sprintf@val:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x10
   595  000110                     	ds	4
   596  000114                     sprintf@exp:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x14
   600  000114                     	ds	2
   601  000116                     sprintf@tmpval:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0x16
   605  000116                     	ds	4
   606  00011A                     sprintf@prec:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x1A
   610  00011A                     	ds	2
   611  00011C                     sprintf@fval:
   612                           	opt stack 0
   613                           
   614                           ; 4 bytes @ 0x1C
   615  00011C                     	ds	4
   616  000120                     sprintf@c:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x20
   620  000120                     	ds	1
   621  000121                     ??_main:
   622                           
   623                           ; 0 bytes @ 0x21
   624  000121                     	ds	8
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           
   632                           	psect	cstackBANK0
   633  000060                     __pcstackBANK0:
   634                           	opt stack 0
   635  000060                     ??_ISR_alta:
   636                           
   637                           ; 0 bytes @ 0x0
   638  000060                     	ds	16
   639  000070                     ??__tdiv_to_l_:
   640  000070                     ??___flge:
   641  000070                     ?___awdiv:
   642                           	opt stack 0
   643  000070                     ?___xxtofl:
   644                           	opt stack 0
   645  000070                     delay_s@value_s:
   646                           	opt stack 0
   647  000070                     LCD_send_command@D2:
   648                           	opt stack 0
   649  000070                     ___awdiv@dividend:
   650                           	opt stack 0
   651  000070                     __div_to_l_@quot:
   652                           	opt stack 0
   653  000070                     ___lldiv@quotient:
   654                           	opt stack 0
   655  000070                     ___xxtofl@val:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x10
   659  000070                     	ds	1
   660  000071                     delay_s@repeat_loop:
   661                           	opt stack 0
   662  000071                     LCD_send_command@D1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x11
   666  000071                     	ds	1
   667  000072                     LCD_send_command@D0:
   668                           	opt stack 0
   669  000072                     ___awdiv@divisor:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x12
   673  000072                     	ds	1
   674  000073                     LCD_goto_line@line:
   675                           	opt stack 0
   676  000073                     LCD_write_char@D3:
   677                           	opt stack 0
   678  000073                     LCD_cursor@blinking:
   679                           	opt stack 0
   680  000073                     __tdiv_to_l_@quot:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x13
   684  000073                     	ds	1
   685  000074                     ??___xxtofl:
   686  000074                     LCD_write_char@D2:
   687                           	opt stack 0
   688  000074                     LCD_cursor@active:
   689                           	opt stack 0
   690  000074                     ___awdiv@counter:
   691                           	opt stack 0
   692  000074                     __div_to_l_@cntr:
   693                           	opt stack 0
   694  000074                     ___lldiv@counter:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x14
   698  000074                     	ds	1
   699  000075                     LCD_write_char@D1:
   700                           	opt stack 0
   701  000075                     LCD_initialize@quartz_frequency:
   702                           	opt stack 0
   703  000075                     ___awdiv@sign:
   704                           	opt stack 0
   705  000075                     __div_to_l_@exp1:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x15
   709  000075                     	ds	1
   710  000076                     LCD_write_char@D0:
   711                           	opt stack 0
   712  000076                     ___awdiv@quotient:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x16
   716  000076                     	ds	1
   717  000077                     LCD_write_char@value:
   718                           	opt stack 0
   719  000077                     __tdiv_to_l_@cntr:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x17
   723  000077                     	ds	1
   724  000078                     __tdiv_to_l_@exp1:
   725                           	opt stack 0
   726  000078                     ___xxtofl@sign:
   727                           	opt stack 0
   728  000078                     LCD_write_message@buffer:
   729                           	opt stack 0
   730  000078                     LCD_write_string@buffer:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x18
   734  000078                     	ds	1
   735  000079                     ___xxtofl@exp:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x19
   739  000079                     	ds	1
   740  00007A                     ___xxtofl@arg:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x1A
   744  00007A                     	ds	4
   745  00007E                     ?___flmul:
   746                           	opt stack 0
   747  00007E                     ___flmul@b:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x1E
   751  00007E                     	ds	4
   752  000082                     ___flmul@a:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x22
   756  000082                     	ds	4
   757  000086                     ??___flmul:
   758                           
   759                           ; 0 bytes @ 0x26
   760  000086                     	ds	4
   761  00008A                     ___flmul@sign:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x2A
   765  00008A                     	ds	1
   766  00008B                     ___flmul@aexp:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x2B
   770  00008B                     	ds	1
   771  00008C                     ___flmul@grs:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x2C
   775  00008C                     	ds	4
   776  000090                     ___flmul@bexp:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x30
   780  000090                     	ds	1
   781  000091                     ___flmul@prod:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x31
   785  000091                     	ds	4
   786  000095                     ___flmul@temp:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x35
   790  000095                     	ds	2
   791  000097                     ?_fround:
   792                           	opt stack 0
   793  000097                     ?_scale:
   794                           	opt stack 0
   795                           
   796                           ; 4 bytes @ 0x37
   797  000097                     	ds	4
   798  00009B                     _fround$2400:
   799                           	opt stack 0
   800  00009B                     _scale$2401:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x3B
   804  00009B                     	ds	4
   805  00009F                     scale@scl:
   806                           	opt stack 0
   807  00009F                     _fround$2399:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x3F
   811  00009F                     	ds	1
   812  0000A0                     ?___fltol:
   813                           	opt stack 0
   814  0000A0                     ___fltol@f1:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x40
   818  0000A0                     	ds	3
   819  0000A3                     fround@prec:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x43
   823  0000A3                     	ds	1
   824  0000A4                     ??___fltol:
   825  0000A4                     ?___fladd:
   826                           	opt stack 0
   827  0000A4                     ___fladd@b:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x44
   831  0000A4                     	ds	4
   832  0000A8                     ___fladd@a:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x48
   836  0000A8                     	ds	4
   837  0000AC                     ??___fladd:
   838                           
   839                           ; 0 bytes @ 0x4C
   840  0000AC                     	ds	8
   841  0000B4                     ___fladd@signs:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x54
   845  0000B4                     	ds	1
   846  0000B5                     ___fladd@aexp:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x55
   850  0000B5                     	ds	1
   851  0000B6                     ___fladd@bexp:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x56
   855  0000B6                     	ds	1
   856  0000B7                     ___fladd@grs:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x57
   860  0000B7                     	ds	1
   861  0000B8                     ?___flsub:
   862                           	opt stack 0
   863  0000B8                     ___flsub@b:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0x58
   867  0000B8                     	ds	4
   868  0000BC                     ___flsub@a:
   869                           	opt stack 0
   870                           
   871                           ; 4 bytes @ 0x5C
   872  0000BC                     	ds	4
   873  0000C0                     ??_sprintf:
   874                           
   875                           ; 0 bytes @ 0x60
   876  0000C0                     	ds	2
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           
   884                           	psect	cstackCOMRAM
   885  000026                     __pcstackCOMRAM:
   886                           	opt stack 0
   887  000026                     ??_ISR_bassa:
   888  000026                     
   889                           ; 1 bytes @ 0x0
   890  000026                     	ds	17
   891  000037                     ReadUSART@data:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x11
   895  000037                     	ds	1
   896  000038                     getsUSART@buffer:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x12
   900  000038                     	ds	2
   901  00003A                     getsUSART@len:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x14
   905  00003A                     	ds	1
   906  00003B                     getsUSART@data:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x15
   910  00003B                     	ds	1
   911  00003C                     getsUSART@i:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x16
   915  00003C                     	ds	1
   916  00003D                     ??_Joystick_Polling:
   917  00003D                     ??_isdigit:
   918  00003D                     ?___wmul:
   919                           	opt stack 0
   920  00003D                     ?___awmod:
   921                           	opt stack 0
   922  00003D                     ?___lwdiv:
   923                           	opt stack 0
   924  00003D                     ?__tdiv_to_l_:
   925                           	opt stack 0
   926  00003D                     ?__div_to_l_:
   927                           	opt stack 0
   928  00003D                     ?___flneg:
   929                           	opt stack 0
   930  00003D                     ?___lldiv:
   931                           	opt stack 0
   932  00003D                     ?___llmod:
   933                           	opt stack 0
   934  00003D                     delay_set_quartz@frequency:
   935                           	opt stack 0
   936  00003D                     LCD_backlight@active:
   937                           	opt stack 0
   938  00003D                     WriteUSART@data:
   939                           	opt stack 0
   940  00003D                     OpenUSART@spbrg:
   941                           	opt stack 0
   942  00003D                     ___wmul@multiplier:
   943                           	opt stack 0
   944  00003D                     ___awmod@dividend:
   945                           	opt stack 0
   946  00003D                     ___lwdiv@dividend:
   947                           	opt stack 0
   948  00003D                     __div_to_l_@f1:
   949                           	opt stack 0
   950  00003D                     ___flge@ff1:
   951                           	opt stack 0
   952  00003D                     ___flneg@f1:
   953                           	opt stack 0
   954  00003D                     __tdiv_to_l_@f1:
   955                           	opt stack 0
   956  00003D                     ___lldiv@dividend:
   957                           	opt stack 0
   958  00003D                     ___llmod@dividend:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x17
   962  00003D                     	ds	1
   963  00003E                     _isdigit$2008:
   964                           	opt stack 0
   965  00003E                     putsUSART@data:
   966                           	opt stack 0
   967                           
   968                           ; 2 bytes @ 0x18
   969  00003E                     	ds	1
   970  00003F                     OpenUSART@config:
   971                           	opt stack 0
   972  00003F                     isdigit@c:
   973                           	opt stack 0
   974  00003F                     ___wmul@multiplicand:
   975                           	opt stack 0
   976  00003F                     ___awmod@divisor:
   977                           	opt stack 0
   978  00003F                     ___lwdiv@divisor:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x19
   982  00003F                     	ds	1
   983  000040                     
   984                           ; 0 bytes @ 0x1A
   985  000040                     	ds	1
   986  000041                     ___awmod@counter:
   987                           	opt stack 0
   988  000041                     ___wmul@product:
   989                           	opt stack 0
   990  000041                     ___lwdiv@quotient:
   991                           	opt stack 0
   992  000041                     __div_to_l_@f2:
   993                           	opt stack 0
   994  000041                     ___flge@ff2:
   995                           	opt stack 0
   996  000041                     __tdiv_to_l_@f2:
   997                           	opt stack 0
   998  000041                     ___lldiv@divisor:
   999                           	opt stack 0
  1000  000041                     ___llmod@divisor:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x1B
  1004  000041                     	ds	1
  1005  000042                     USART_Send@i:
  1006                           	opt stack 0
  1007  000042                     ___awmod@sign:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x1C
  1011  000042                     	ds	1
  1012  000043                     USART_Send@i_1261:
  1013                           	opt stack 0
  1014  000043                     ___lwdiv@counter:
  1015                           	opt stack 0
  1016  000043                     delay_ms@value_ms:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x1D
  1020  000043                     	ds	1
  1021  000044                     ___fltol@sign1:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x1E
  1025  000044                     	ds	1
  1026  000045                     LCD_send_command@D3:
  1027                           	opt stack 0
  1028  000045                     ___fltol@exp1:
  1029                           	opt stack 0
  1030  000045                     ___llmod@counter:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x1F
  1034  000045                     	ds	1
  1035  000046                     tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           
  1042                           ; 0 bytes @ 0x20
  1043 ;;
  1044 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1045 ;;
  1046 ;; *************** function _main *****************
  1047 ;; Defined at:
  1048 ;;		line 128 in file "telecomando.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1062 ;;      Params:         0       0       0       0
  1063 ;;      Locals:         0       0       0       0
  1064 ;;      Temps:          0       0       8       0
  1065 ;;      Totals:         0       0       8       0
  1066 ;;Total ram usage:        8 bytes
  1067 ;; Hardware stack levels required when called:   11
  1068 ;; This function calls:
  1069 ;;		_Joystick_Polling
  1070 ;;		_LCD_Handler
  1071 ;;		_LCD_clear
  1072 ;;		_LCD_goto_line
  1073 ;;		_LCD_write_message
  1074 ;;		_PWR_Button_Polling
  1075 ;;		_USART_Send
  1076 ;;		___flmul
  1077 ;;		___fltol
  1078 ;;		___xxtofl
  1079 ;;		_board_initialization
  1080 ;;		_delay_ms
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087  0016F6                     __ptext0:
  1088                           	opt stack 0
  1089  0016F6                     _main:
  1090                           	opt stack 20
  1091                           
  1092                           ;telecomando.c: 129: board_initialization();
  1093                           
  1094                           ;incstack = 0
  1095  0016F6  EC77  F014         	call	_board_initialization	;wreg free
  1096                           
  1097                           ;telecomando.c: 132: PORTDbits.RD2 = 1;
  1098  0016FA  8483               	bsf	3971,2,c	;volatile
  1099                           
  1100                           ;telecomando.c: 133: PORTDbits.RD3 = 1;
  1101  0016FC  8683               	bsf	3971,3,c	;volatile
  1102                           
  1103                           ;telecomando.c: 134: PORTDbits.RD5 = 1;
  1104  0016FE  8A83               	bsf	3971,5,c	;volatile
  1105                           
  1106                           ;telecomando.c: 135: PORTDbits.RD6 = 1;
  1107  001700  8C83               	bsf	3971,6,c	;volatile
  1108                           
  1109                           ;telecomando.c: 136: PORTDbits.RD7 = 1;
  1110  001702  8E83               	bsf	3971,7,c	;volatile
  1111                           
  1112                           ;telecomando.c: 137: delay_ms(500);
  1113  001704  0E01               	movlw	1
  1114  001706  6E44               	movwf	delay_ms@value_ms+1,c
  1115  001708  0EF4               	movlw	244
  1116  00170A  6E43               	movwf	delay_ms@value_ms,c
  1117  00170C  ECFC  F016         	call	_delay_ms	;wreg free
  1118                           
  1119                           ;telecomando.c: 138: PORTDbits.RD2 = 0;
  1120  001710  9483               	bcf	3971,2,c	;volatile
  1121                           
  1122                           ;telecomando.c: 139: PORTDbits.RD3 = 0;
  1123  001712  9683               	bcf	3971,3,c	;volatile
  1124                           
  1125                           ;telecomando.c: 140: PORTDbits.RD5 = 0;
  1126  001714  9A83               	bcf	3971,5,c	;volatile
  1127                           
  1128                           ;telecomando.c: 141: PORTDbits.RD6 = 0;
  1129  001716  9C83               	bcf	3971,6,c	;volatile
  1130                           
  1131                           ;telecomando.c: 142: PORTDbits.RD7 = 0;
  1132  001718  9E83               	bcf	3971,7,c	;volatile
  1133                           
  1134                           ;telecomando.c: 145: PORTDbits.RD7 = 0;
  1135  00171A  9E83               	bcf	3971,7,c	;volatile
  1136                           
  1137                           ;telecomando.c: 148: USART_Tx[0] = 0xAA;
  1138  00171C  0EAA               	movlw	170
  1139  00171E  0100               	movlb	0	; () banked
  1140  001720  6FE2               	movwf	_USART_Tx& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;telecomando.c: 149: USART_Tx[1] = 0x01;
  1144  001722  0E01               	movlw	1
  1145  001724  0100               	movlb	0	; () banked
  1146  001726  6FE3               	movwf	(_USART_Tx+1)& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;telecomando.c: 150: USART_Tx[2] = 0x01;
  1150  001728  0E01               	movlw	1
  1151  00172A  0100               	movlb	0	; () banked
  1152  00172C  6FE4               	movwf	(_USART_Tx+2)& (0+255),b
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;telecomando.c: 151: USART_Tx[3] = 0x01;
  1156  00172E  0E01               	movlw	1
  1157  001730  0100               	movlb	0	; () banked
  1158  001732  6FE5               	movwf	(_USART_Tx+3)& (0+255),b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;telecomando.c: 152: USART_Tx[4] = 0x01;
  1162  001734  0E01               	movlw	1
  1163  001736  0100               	movlb	0	; () banked
  1164  001738  6FE6               	movwf	(_USART_Tx+4)& (0+255),b
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;telecomando.c: 153: USART_Tx[5] = 0x01;
  1168  00173A  0E01               	movlw	1
  1169  00173C  0100               	movlb	0	; () banked
  1170  00173E  6FE7               	movwf	(_USART_Tx+5)& (0+255),b
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;telecomando.c: 154: USART_Tx[6] = 0xAA;
  1174  001740  0EAA               	movlw	170
  1175  001742  0100               	movlb	0	; () banked
  1176  001744  6FE8               	movwf	(_USART_Tx+6)& (0+255),b
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;telecomando.c: 155: USART_Tx[7] = '\0';
  1180  001746  0E00               	movlw	0
  1181  001748  0100               	movlb	0	; () banked
  1182  00174A  6FE9               	movwf	(_USART_Tx+7)& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;telecomando.c: 156: JoystickConstants[0] = 0.703;
  1186  00174C  0ECF               	movlw	207
  1187  00174E  6E1C               	movwf	_JoystickConstants,c	;volatile
  1188  001750  0EF7               	movlw	247
  1189  001752  6E1D               	movwf	_JoystickConstants+1,c	;volatile
  1190  001754  0E33               	movlw	51
  1191  001756  6E1E               	movwf	_JoystickConstants+2,c	;volatile
  1192  001758  0E3F               	movlw	63
  1193  00175A  6E1F               	movwf	_JoystickConstants+3,c	;volatile
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;telecomando.c: 157: JoystickConstants[1] = 34;
  1197  00175C  0E00               	movlw	0
  1198  00175E  6E20               	movwf	_JoystickConstants+4,c	;volatile
  1199  001760  0E00               	movlw	0
  1200  001762  6E21               	movwf	_JoystickConstants+5,c	;volatile
  1201  001764  0E08               	movlw	8
  1202  001766  6E22               	movwf	_JoystickConstants+6,c	;volatile
  1203  001768  0E42               	movlw	66
  1204  00176A  6E23               	movwf	_JoystickConstants+7,c	;volatile
  1205  00176C                     l5771:
  1206                           
  1207                           ;telecomando.c: 163: PWR_Button_Polling();
  1208  00176C  EC23  F018         	call	_PWR_Button_Polling	;wreg free
  1209                           
  1210                           ;telecomando.c: 165: if (power_switch == 0) {
  1211  001770  B246               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1212  001772  D093               	goto	l5803
  1213                           
  1214                           ;telecomando.c: 166: dir = 2;
  1215  001774  0E02               	movlw	2
  1216  001776  6E15               	movwf	_dir,c	;volatile
  1217                           
  1218                           ;telecomando.c: 167: set_speed = 0;
  1219  001778  0E00               	movlw	0
  1220  00177A  6E0E               	movwf	_set_speed+1,c	;volatile
  1221  00177C  0E00               	movlw	0
  1222  00177E  6E0D               	movwf	_set_speed,c	;volatile
  1223                           
  1224                           ;telecomando.c: 168: set_steering = 90;
  1225  001780  0E5A               	movlw	90
  1226  001782  6E19               	movwf	_set_steering,c	;volatile
  1227                           
  1228                           ;telecomando.c: 169: analogic_brake = 0;
  1229  001784  0E00               	movlw	0
  1230  001786  6E14               	movwf	_analogic_brake,c	;volatile
  1231  001788                     l253:
  1232  001788  A2AC               	btfss	4012,1,c	;volatile
  1233  00178A  D7FE               	goto	l253
  1234                           
  1235                           ;telecomando.c: 171: };
  1236                           ;telecomando.c: 172: USART_Send();
  1237  00178C  EC92  F013         	call	_USART_Send	;wreg free
  1238                           
  1239                           ;telecomando.c: 173: while (power_switch == 0) {
  1240  001790  D081               	goto	l5801
  1241  001792                     l5779:
  1242                           
  1243                           ;telecomando.c: 174: LCD_clear();
  1244  001792  EC4C  F017         	call	_LCD_clear	;wreg free
  1245                           
  1246                           ;telecomando.c: 175: LCD_goto_line(1);
  1247  001796  0E01               	movlw	1
  1248  001798  EC1C  F013         	call	_LCD_goto_line
  1249                           
  1250                           ;telecomando.c: 176: LCD_write_message("====================");
  1251  00179C  0EBA               	movlw	low STR_1
  1252  00179E  0100               	movlb	0	; () banked
  1253  0017A0  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  1254  0017A2  0E3F               	movlw	high STR_1
  1255  0017A4  0100               	movlb	0	; () banked
  1256  0017A6  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1257  0017A8  EC7C  F017         	call	_LCD_write_message	;wreg free
  1258                           
  1259                           ;telecomando.c: 177: LCD_goto_line(2);
  1260  0017AC  0E02               	movlw	2
  1261  0017AE  EC1C  F013         	call	_LCD_goto_line
  1262                           
  1263                           ;telecomando.c: 178: LCD_write_message("==> VEHICLE  OFF <==");
  1264  0017B2  0E90               	movlw	low STR_2
  1265  0017B4  0100               	movlb	0	; () banked
  1266  0017B6  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  1267  0017B8  0E3F               	movlw	high STR_2
  1268  0017BA  0100               	movlb	0	; () banked
  1269  0017BC  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1270  0017BE  EC7C  F017         	call	_LCD_write_message	;wreg free
  1271                           
  1272                           ;telecomando.c: 179: LCD_goto_line(3);
  1273  0017C2  0E03               	movlw	3
  1274  0017C4  EC1C  F013         	call	_LCD_goto_line
  1275                           
  1276                           ;telecomando.c: 180: LCD_write_message("Turn the switch ON! ");
  1277  0017C8  0E7B               	movlw	low STR_3
  1278  0017CA  0100               	movlb	0	; () banked
  1279  0017CC  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  1280  0017CE  0E3F               	movlw	high STR_3
  1281  0017D0  0100               	movlb	0	; () banked
  1282  0017D2  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1283  0017D4  EC7C  F017         	call	_LCD_write_message	;wreg free
  1284                           
  1285                           ;telecomando.c: 181: LCD_goto_line(4);
  1286  0017D8  0E04               	movlw	4
  1287  0017DA  EC1C  F013         	call	_LCD_goto_line
  1288                           
  1289                           ;telecomando.c: 182: LCD_write_message("====================");
  1290  0017DE  0EBA               	movlw	low STR_1
  1291  0017E0  0100               	movlb	0	; () banked
  1292  0017E2  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  1293  0017E4  0E3F               	movlw	high STR_1
  1294  0017E6  0100               	movlb	0	; () banked
  1295  0017E8  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1296  0017EA  EC7C  F017         	call	_LCD_write_message	;wreg free
  1297                           
  1298                           ;telecomando.c: 183: if ((time_counter - pr_time_1) >= 50) {
  1299  0017EE  C001  F121         	movff	_pr_time_1,??_main	;volatile
  1300  0017F2  C002  F122         	movff	_pr_time_1+1,??_main+1	;volatile
  1301  0017F6  C003  F123         	movff	_pr_time_1+2,??_main+2	;volatile
  1302  0017FA  C004  F124         	movff	_pr_time_1+3,??_main+3	;volatile
  1303  0017FE  0101               	movlb	1	; () banked
  1304  001800  1F21               	comf	??_main& (0+255),f,b
  1305  001802  1F22               	comf	(??_main+1)& (0+255),f,b
  1306  001804  1F23               	comf	(??_main+2)& (0+255),f,b
  1307  001806  1F24               	comf	(??_main+3)& (0+255),f,b
  1308  001808  2B21               	incf	??_main& (0+255),f,b
  1309  00180A  0E00               	movlw	0
  1310  00180C  2322               	addwfc	(??_main+1)& (0+255),f,b
  1311  00180E  2323               	addwfc	(??_main+2)& (0+255),f,b
  1312  001810  2324               	addwfc	(??_main+3)& (0+255),f,b
  1313  001812  5009               	movf	_time_counter,w,c	;volatile
  1314  001814  0101               	movlb	1	; () banked
  1315  001816  2521               	addwf	??_main& (0+255),w,b
  1316  001818  0101               	movlb	1	; () banked
  1317  00181A  6F25               	movwf	(??_main+4)& (0+255),b
  1318  00181C  500A               	movf	_time_counter+1,w,c	;volatile
  1319  00181E  0101               	movlb	1	; () banked
  1320  001820  2122               	addwfc	(??_main+1)& (0+255),w,b
  1321  001822  0101               	movlb	1	; () banked
  1322  001824  6F26               	movwf	(??_main+5)& (0+255),b
  1323  001826  500B               	movf	_time_counter+2,w,c	;volatile
  1324  001828  0101               	movlb	1	; () banked
  1325  00182A  2123               	addwfc	(??_main+2)& (0+255),w,b
  1326  00182C  0101               	movlb	1	; () banked
  1327  00182E  6F27               	movwf	(??_main+6)& (0+255),b
  1328  001830  500C               	movf	_time_counter+3,w,c	;volatile
  1329  001832  0101               	movlb	1	; () banked
  1330  001834  2124               	addwfc	(??_main+3)& (0+255),w,b
  1331  001836  0101               	movlb	1	; () banked
  1332  001838  6F28               	movwf	(??_main+7)& (0+255),b
  1333  00183A  0101               	movlb	1	; () banked
  1334  00183C  5128               	movf	(??_main+7)& (0+255),w,b
  1335  00183E  0101               	movlb	1	; () banked
  1336  001840  1127               	iorwf	(??_main+6)& (0+255),w,b
  1337  001842  0101               	movlb	1	; () banked
  1338  001844  1126               	iorwf	(??_main+5)& (0+255),w,b
  1339  001846  E105               	bnz	u6620
  1340  001848  0E32               	movlw	50
  1341  00184A  0101               	movlb	1	; () banked
  1342  00184C  5D25               	subwf	(??_main+4)& (0+255),w,b
  1343  00184E  A0D8               	btfss	status,0,c
  1344  001850  D019               	goto	l5797
  1345  001852                     u6620:
  1346                           
  1347                           ; BSR set to: 1
  1348                           ;telecomando.c: 184: pr_time_1 = time_counter;
  1349  001852  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1350  001856  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1351  00185A  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1352  00185E  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1353                           
  1354                           ; BSR set to: 1
  1355                           ;telecomando.c: 185: PORTDbits.RD7 = ~PORTDbits.RD7;
  1356  001862  AE83               	btfss	3971,7,c	;volatile
  1357  001864  D002               	goto	u6630
  1358  001866  0E01               	movlw	1
  1359  001868  D001               	goto	u6636
  1360  00186A                     u6630:
  1361  00186A  0E00               	movlw	0
  1362  00186C                     u6636:
  1363  00186C  0AFF               	xorlw	255
  1364  00186E  0101               	movlb	1	; () banked
  1365  001870  6F21               	movwf	??_main& (0+255),b
  1366  001872  0101               	movlb	1	; () banked
  1367  001874  3321               	rrcf	??_main& (0+255),f,b
  1368  001876  3321               	rrcf	??_main& (0+255),f,b
  1369  001878  5083               	movf	3971,w,c	;volatile
  1370  00187A  0101               	movlb	1	; () banked
  1371  00187C  1921               	xorwf	??_main& (0+255),w,b
  1372  00187E  0B7F               	andlw	-129
  1373  001880  1921               	xorwf	??_main& (0+255),w,b
  1374  001882  6E83               	movwf	3971,c	;volatile
  1375  001884                     l5797:
  1376                           
  1377                           ; BSR set to: 1
  1378                           ;telecomando.c: 186: }
  1379                           ;telecomando.c: 187: PWR_Button_Polling();
  1380  001884  EC23  F018         	call	_PWR_Button_Polling	;wreg free
  1381                           
  1382                           ;telecomando.c: 188: delay_ms(300);
  1383  001888  0E01               	movlw	1
  1384  00188A  6E44               	movwf	delay_ms@value_ms+1,c
  1385  00188C  0E2C               	movlw	44
  1386  00188E  6E43               	movwf	delay_ms@value_ms,c
  1387  001890  ECFC  F016         	call	_delay_ms	;wreg free
  1388  001894                     l5801:
  1389  001894  A246               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1390  001896  D77D               	goto	l5779
  1391                           
  1392                           ;telecomando.c: 189: }
  1393                           ;telecomando.c: 190: PORTDbits.RD7 = 0;
  1394  001898  9E83               	bcf	3971,7,c	;volatile
  1395  00189A                     l5803:
  1396                           
  1397                           ;telecomando.c: 191: }
  1398                           ;telecomando.c: 193: Joystick_Polling();
  1399  00189A  ECB5  F016         	call	_Joystick_Polling	;wreg free
  1400                           
  1401                           ;telecomando.c: 196: if (PORTAbits.RA2 == 1) {
  1402  00189E  A480               	btfss	3968,2,c	;volatile
  1403  0018A0  D003               	goto	l260
  1404                           
  1405                           ;telecomando.c: 197: switch_position = 0;
  1406  0018A2  0E00               	movlw	0
  1407  0018A4  6E1B               	movwf	_switch_position,c	;volatile
  1408                           
  1409                           ;telecomando.c: 198: } else {
  1410  0018A6  D00A               	goto	l261
  1411  0018A8                     l260:
  1412                           
  1413                           ;telecomando.c: 199: if (PORTAbits.RA3 == 0) {
  1414  0018A8  B680               	btfsc	3968,3,c	;volatile
  1415  0018AA  D004               	goto	l5811
  1416                           
  1417                           ;telecomando.c: 200: switch_position = 1;
  1418  0018AC  0E01               	movlw	1
  1419  0018AE  6E1B               	movwf	_switch_position,c	;volatile
  1420                           
  1421                           ;telecomando.c: 201: dir = 2;
  1422  0018B0  0E02               	movlw	2
  1423  0018B2  D003               	goto	L1
  1424  0018B4                     l5811:
  1425                           
  1426                           ;telecomando.c: 203: switch_position = 2;
  1427  0018B4  0E02               	movlw	2
  1428  0018B6  6E1B               	movwf	_switch_position,c	;volatile
  1429                           
  1430                           ;telecomando.c: 204: dir = 1;
  1431  0018B8  0E01               	movlw	1
  1432  0018BA                     L1:
  1433  0018BA  6E15               	movwf	_dir,c	;volatile
  1434  0018BC                     l261:
  1435                           
  1436                           ;telecomando.c: 205: }
  1437                           ;telecomando.c: 206: }
  1438                           ;telecomando.c: 208: if (switch_position != 0) {
  1439  0018BC  501B               	movf	_switch_position,w,c	;volatile
  1440  0018BE  B4D8               	btfsc	status,2,c
  1441  0018C0  D074               	goto	l5825
  1442                           
  1443                           ;telecomando.c: 209: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1444  0018C2  C01C  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1445  0018C6  C01D  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1446  0018CA  C01E  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1447  0018CE  C01F  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1448  0018D2  C024  F121         	movff	_JoystickValues,??_main	;volatile
  1449  0018D6  0101               	movlb	1	; () banked
  1450  0018D8  6B22               	clrf	(??_main+1)& (0+255),b
  1451  0018DA  BF21               	btfsc	??_main& (0+255),7,b
  1452  0018DC  0722               	decf	(??_main+1)& (0+255),f,b
  1453  0018DE  0E80               	movlw	128
  1454  0018E0  0101               	movlb	1	; () banked
  1455  0018E2  2721               	addwf	??_main& (0+255),f,b
  1456  0018E4  0E00               	movlw	0
  1457  0018E6  2322               	addwfc	(??_main+1)& (0+255),f,b
  1458  0018E8  C121  F070         	movff	??_main,___xxtofl@val
  1459  0018EC  C122  F071         	movff	??_main+1,___xxtofl@val+1
  1460  0018F0  0100               	movlb	0	; () banked
  1461  0018F2  0E00               	movlw	0
  1462  0018F4  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1463  0018F6  0EFF               	movlw	-1
  1464  0018F8  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1465  0018FA  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1466  0018FC  0E01               	movlw	1
  1467  0018FE  EC74  F00E         	call	___xxtofl
  1468  001902  C070  F07E         	movff	?___xxtofl,___flmul@b
  1469  001906  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1470  00190A  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1471  00190E  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1472  001912  ECDB  F006         	call	___flmul	;wreg free
  1473  001916  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1474  00191A  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1475  00191E  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1476  001922  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1477  001926  ECA3  F012         	call	___fltol	;wreg free
  1478  00192A  0100               	movlb	0	; () banked
  1479  00192C  51A0               	movf	?___fltol& (0+255),w,b
  1480  00192E  6E19               	movwf	_set_steering,c	;volatile
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;telecomando.c: 210: if (JoystickValues[1] > 0) {
  1484  001930  5025               	movf	_JoystickValues+1,w,c	;volatile
  1485  001932  0A80               	xorlw	128
  1486  001934  0F7F               	addlw	-129
  1487  001936  A0D8               	btfss	status,0,c
  1488  001938  D02E               	goto	l5821
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;telecomando.c: 211: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1492  00193A  C020  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1493  00193E  C021  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1494  001942  C022  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1495  001946  C023  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1496  00194A  5025               	movf	_JoystickValues+1,w,c	;volatile
  1497  00194C  0100               	movlb	0	; () banked
  1498  00194E  6F70               	movwf	___xxtofl@val& (0+255),b
  1499  001950  0E00               	movlw	0
  1500  001952  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1501  001954  0EFF               	movlw	-1
  1502  001956  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1503  001958  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1504  00195A  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1505  00195C  0E01               	movlw	1
  1506  00195E  EC74  F00E         	call	___xxtofl
  1507  001962  C070  F07E         	movff	?___xxtofl,___flmul@b
  1508  001966  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1509  00196A  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1510  00196E  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1511  001972  ECDB  F006         	call	___flmul	;wreg free
  1512  001976  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1513  00197A  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1514  00197E  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1515  001982  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1516  001986  ECA3  F012         	call	___fltol	;wreg free
  1517  00198A  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1518  00198E  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1519                           
  1520                           ;telecomando.c: 212: analogic_brake = 0;
  1521  001992  0E00               	movlw	0
  1522  001994  D008               	goto	L2
  1523  001996                     l5821:
  1524                           
  1525                           ;telecomando.c: 214: set_speed = 0;
  1526  001996  0E00               	movlw	0
  1527  001998  6E0E               	movwf	_set_speed+1,c	;volatile
  1528  00199A  0E00               	movlw	0
  1529  00199C  6E0D               	movwf	_set_speed,c	;volatile
  1530                           
  1531                           ;telecomando.c: 215: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1532  00199E  5025               	movf	_JoystickValues+1,w,c	;volatile
  1533  0019A0  0D02               	mullw	2
  1534  0019A2  28F3               	incf	prodl,w,c
  1535  0019A4  0800               	sublw	0
  1536  0019A6                     L2:
  1537  0019A6  6E14               	movwf	_analogic_brake,c	;volatile
  1538                           
  1539                           ;telecomando.c: 216: }
  1540                           ;telecomando.c: 217: } else {
  1541  0019A8  D005               	goto	l5829
  1542  0019AA                     l5825:
  1543                           
  1544                           ;telecomando.c: 218: set_speed = 0;
  1545  0019AA  0E00               	movlw	0
  1546  0019AC  6E0E               	movwf	_set_speed+1,c	;volatile
  1547  0019AE  0E00               	movlw	0
  1548  0019B0  6E0D               	movwf	_set_speed,c	;volatile
  1549                           
  1550                           ;telecomando.c: 219: analogic_brake = 255;
  1551  0019B2  6814               	setf	_analogic_brake,c	;volatile
  1552  0019B4                     l5829:
  1553                           
  1554                           ;telecomando.c: 220: }
  1555                           ;telecomando.c: 224: USART_Send();
  1556  0019B4  EC92  F013         	call	_USART_Send	;wreg free
  1557                           
  1558                           ;telecomando.c: 227: if ((time_counter - pr_time_3) >= 50) {
  1559  0019B8  C005  F121         	movff	_pr_time_3,??_main	;volatile
  1560  0019BC  C006  F122         	movff	_pr_time_3+1,??_main+1	;volatile
  1561  0019C0  C007  F123         	movff	_pr_time_3+2,??_main+2	;volatile
  1562  0019C4  C008  F124         	movff	_pr_time_3+3,??_main+3	;volatile
  1563  0019C8  0101               	movlb	1	; () banked
  1564  0019CA  1F21               	comf	??_main& (0+255),f,b
  1565  0019CC  1F22               	comf	(??_main+1)& (0+255),f,b
  1566  0019CE  1F23               	comf	(??_main+2)& (0+255),f,b
  1567  0019D0  1F24               	comf	(??_main+3)& (0+255),f,b
  1568  0019D2  2B21               	incf	??_main& (0+255),f,b
  1569  0019D4  0E00               	movlw	0
  1570  0019D6  2322               	addwfc	(??_main+1)& (0+255),f,b
  1571  0019D8  2323               	addwfc	(??_main+2)& (0+255),f,b
  1572  0019DA  2324               	addwfc	(??_main+3)& (0+255),f,b
  1573  0019DC  5009               	movf	_time_counter,w,c	;volatile
  1574  0019DE  0101               	movlb	1	; () banked
  1575  0019E0  2521               	addwf	??_main& (0+255),w,b
  1576  0019E2  0101               	movlb	1	; () banked
  1577  0019E4  6F25               	movwf	(??_main+4)& (0+255),b
  1578  0019E6  500A               	movf	_time_counter+1,w,c	;volatile
  1579  0019E8  0101               	movlb	1	; () banked
  1580  0019EA  2122               	addwfc	(??_main+1)& (0+255),w,b
  1581  0019EC  0101               	movlb	1	; () banked
  1582  0019EE  6F26               	movwf	(??_main+5)& (0+255),b
  1583  0019F0  500B               	movf	_time_counter+2,w,c	;volatile
  1584  0019F2  0101               	movlb	1	; () banked
  1585  0019F4  2123               	addwfc	(??_main+2)& (0+255),w,b
  1586  0019F6  0101               	movlb	1	; () banked
  1587  0019F8  6F27               	movwf	(??_main+6)& (0+255),b
  1588  0019FA  500C               	movf	_time_counter+3,w,c	;volatile
  1589  0019FC  0101               	movlb	1	; () banked
  1590  0019FE  2124               	addwfc	(??_main+3)& (0+255),w,b
  1591  001A00  0101               	movlb	1	; () banked
  1592  001A02  6F28               	movwf	(??_main+7)& (0+255),b
  1593  001A04  0101               	movlb	1	; () banked
  1594  001A06  5128               	movf	(??_main+7)& (0+255),w,b
  1595  001A08  0101               	movlb	1	; () banked
  1596  001A0A  1127               	iorwf	(??_main+6)& (0+255),w,b
  1597  001A0C  0101               	movlb	1	; () banked
  1598  001A0E  1126               	iorwf	(??_main+5)& (0+255),w,b
  1599  001A10  E105               	bnz	u6690
  1600  001A12  0E32               	movlw	50
  1601  001A14  0101               	movlb	1	; () banked
  1602  001A16  5D25               	subwf	(??_main+4)& (0+255),w,b
  1603  001A18  A0D8               	btfss	status,0,c
  1604  001A1A  D6A8               	goto	l5771
  1605  001A1C                     u6690:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;telecomando.c: 228: pr_time_3 = time_counter;
  1609  001A1C  C009  F005         	movff	_time_counter,_pr_time_3	;volatile
  1610  001A20  C00A  F006         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1611  001A24  C00B  F007         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1612  001A28  C00C  F008         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;telecomando.c: 229: LCD_Handler();
  1616  001A2C  EC16  F012         	call	_LCD_Handler	;wreg free
  1617  001A30  D69D               	goto	l5771
  1618  001A32                     __end_of_main:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodl	equ	0xFF3
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _board_initialization *****************
  1630 ;; Defined at:
  1631 ;;		line 321 in file "telecomando.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;		None               void
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1645 ;;      Params:         0       0       0       0
  1646 ;;      Locals:         0       0       0       0
  1647 ;;      Temps:          0       0       0       0
  1648 ;;      Totals:         0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:   10
  1652 ;; This function calls:
  1653 ;;		_LCD_backlight
  1654 ;;		_LCD_clear
  1655 ;;		_LCD_goto_line
  1656 ;;		_LCD_initialize
  1657 ;;		_LCD_write_message
  1658 ;;		_OpenUSART
  1659 ;;		_delay_ms
  1660 ;;		_delay_s
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text1
  1667  0028EE                     __ptext1:
  1668                           	opt stack 0
  1669  0028EE                     _board_initialization:
  1670                           	opt stack 20
  1671                           
  1672                           ;telecomando.c: 323: LATA = 0x00;
  1673                           
  1674                           ;incstack = 0
  1675  0028EE  0E00               	movlw	0
  1676  0028F0  6E89               	movwf	3977,c	;volatile
  1677                           
  1678                           ;telecomando.c: 324: TRISA = 0b00001111;
  1679  0028F2  0E0F               	movlw	15
  1680  0028F4  6E92               	movwf	3986,c	;volatile
  1681                           
  1682                           ;telecomando.c: 325: LATB = 0x00;
  1683  0028F6  0E00               	movlw	0
  1684  0028F8  6E8A               	movwf	3978,c	;volatile
  1685                           
  1686                           ;telecomando.c: 326: TRISB = 0xFF;
  1687  0028FA  6893               	setf	3987,c	;volatile
  1688                           
  1689                           ;telecomando.c: 327: LATC = 0x00;
  1690  0028FC  0E00               	movlw	0
  1691  0028FE  6E8B               	movwf	3979,c	;volatile
  1692                           
  1693                           ;telecomando.c: 328: TRISC = 0b10110000;
  1694  002900  0EB0               	movlw	176
  1695  002902  6E94               	movwf	3988,c	;volatile
  1696                           
  1697                           ;telecomando.c: 329: LATD = 0x00;
  1698  002904  0E00               	movlw	0
  1699  002906  6E8C               	movwf	3980,c	;volatile
  1700                           
  1701                           ;telecomando.c: 330: TRISD = 0x00;
  1702  002908  0E00               	movlw	0
  1703  00290A  6E95               	movwf	3989,c	;volatile
  1704                           
  1705                           ;telecomando.c: 331: LATE = 0x00;
  1706  00290C  0E00               	movlw	0
  1707  00290E  6E8D               	movwf	3981,c	;volatile
  1708                           
  1709                           ;telecomando.c: 332: TRISE = 0x00;
  1710  002910  0E00               	movlw	0
  1711  002912  6E96               	movwf	3990,c	;volatile
  1712                           
  1713                           ;telecomando.c: 335: PIR1bits.RCIF = 0;
  1714  002914  9A9E               	bcf	3998,5,c	;volatile
  1715                           
  1716                           ;telecomando.c: 336: PIR2bits.TMR3IF = 0;
  1717  002916  92A1               	bcf	4001,1,c	;volatile
  1718                           
  1719                           ;telecomando.c: 339: RCONbits.IPEN = 1;
  1720  002918  8ED0               	bsf	4048,7,c	;volatile
  1721                           
  1722                           ;telecomando.c: 340: IPR1bits.RCIP = 1;
  1723  00291A  8A9F               	bsf	3999,5,c	;volatile
  1724                           
  1725                           ;telecomando.c: 341: IPR2bits.TMR3IP = 0;
  1726  00291C  92A2               	bcf	4002,1,c	;volatile
  1727                           
  1728                           ;telecomando.c: 344: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1729  00291E  0E4F               	movlw	79
  1730  002920  16AB               	andwf	4011,f,c	;volatile
  1731  002922  9AAC               	bcf	4012,5,c	;volatile
  1732  002924  0ECF               	movlw	207
  1733  002926  169D               	andwf	3997,f,c	;volatile
  1734                           
  1735                           ;telecomando.c: 345: delay_ms(10);
  1736  002928  0E00               	movlw	0
  1737  00292A  6E44               	movwf	delay_ms@value_ms+1,c
  1738  00292C  0E0A               	movlw	10
  1739  00292E  6E43               	movwf	delay_ms@value_ms,c
  1740  002930  ECFC  F016         	call	_delay_ms	;wreg free
  1741                           
  1742                           ;telecomando.c: 346: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1743                           ;telecomando.c: 347: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1744  002934  0E00               	movlw	0
  1745  002936  6E3E               	movwf	OpenUSART@spbrg+1,c
  1746  002938  0E67               	movlw	103
  1747  00293A  6E3D               	movwf	OpenUSART@spbrg,c
  1748  00293C  0E7C               	movlw	124
  1749  00293E  EC38  F016         	call	_OpenUSART
  1750                           
  1751                           ;telecomando.c: 350: ADCON1 = 0b00001101;
  1752  002942  0E0D               	movlw	13
  1753  002944  6EC1               	movwf	4033,c	;volatile
  1754                           
  1755                           ;telecomando.c: 351: ADCON0bits.CHS2 = 0;
  1756  002946  98C2               	bcf	4034,4,c	;volatile
  1757                           
  1758                           ;telecomando.c: 352: ADCON0bits.CHS1 = 0;
  1759  002948  96C2               	bcf	4034,3,c	;volatile
  1760                           
  1761                           ;telecomando.c: 353: ADCON0bits.CHS0 = 0;
  1762  00294A  94C2               	bcf	4034,2,c	;volatile
  1763                           
  1764                           ;telecomando.c: 354: ADCON2bits.ACQT2 = 1;
  1765  00294C  8AC0               	bsf	4032,5,c	;volatile
  1766                           
  1767                           ;telecomando.c: 355: ADCON2bits.ACQT1 = 1;
  1768  00294E  88C0               	bsf	4032,4,c	;volatile
  1769                           
  1770                           ;telecomando.c: 356: ADCON2bits.ACQT0 = 0;
  1771  002950  96C0               	bcf	4032,3,c	;volatile
  1772                           
  1773                           ;telecomando.c: 357: ADCON2bits.ADCS2 = 1;
  1774  002952  84C0               	bsf	4032,2,c	;volatile
  1775                           
  1776                           ;telecomando.c: 358: ADCON2bits.ADCS1 = 0;
  1777  002954  92C0               	bcf	4032,1,c	;volatile
  1778                           
  1779                           ;telecomando.c: 359: ADCON2bits.ADCS0 = 1;
  1780  002956  80C0               	bsf	4032,0,c	;volatile
  1781                           
  1782                           ;telecomando.c: 360: ADCON2bits.ADFM = 0;
  1783  002958  9EC0               	bcf	4032,7,c	;volatile
  1784                           
  1785                           ;telecomando.c: 361: ADCON0bits.ADON = 1;
  1786  00295A  80C2               	bsf	4034,0,c	;volatile
  1787                           
  1788                           ;telecomando.c: 363: PORTDbits.RD2 = 1;
  1789  00295C  8483               	bsf	3971,2,c	;volatile
  1790                           
  1791                           ;telecomando.c: 364: delay_ms(10);
  1792  00295E  0E00               	movlw	0
  1793  002960  6E44               	movwf	delay_ms@value_ms+1,c
  1794  002962  0E0A               	movlw	10
  1795  002964  6E43               	movwf	delay_ms@value_ms,c
  1796  002966  ECFC  F016         	call	_delay_ms	;wreg free
  1797                           
  1798                           ;telecomando.c: 365: PORTDbits.RD3 = 1;
  1799  00296A  8683               	bsf	3971,3,c	;volatile
  1800                           
  1801                           ;telecomando.c: 366: delay_s(1);
  1802  00296C  0E01               	movlw	1
  1803  00296E  ECA8  F017         	call	_delay_s
  1804                           
  1805                           ;telecomando.c: 368: LCD_initialize(16);
  1806  002972  0E10               	movlw	16
  1807  002974  EC5B  F00F         	call	_LCD_initialize
  1808                           
  1809                           ;telecomando.c: 369: LCD_backlight(0);
  1810  002978  0E00               	movlw	0
  1811  00297A  EC3A  F018         	call	_LCD_backlight
  1812                           
  1813                           ;telecomando.c: 370: LCD_clear();
  1814  00297E  EC4C  F017         	call	_LCD_clear	;wreg free
  1815                           
  1816                           ;telecomando.c: 371: LCD_goto_line(1);
  1817  002982  0E01               	movlw	1
  1818  002984  EC1C  F013         	call	_LCD_goto_line
  1819                           
  1820                           ;telecomando.c: 373: LCD_write_message("Wait...");
  1821  002988  0EE7               	movlw	low STR_13
  1822  00298A  0100               	movlb	0	; () banked
  1823  00298C  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  1824  00298E  0E3F               	movlw	high STR_13
  1825  002990  0100               	movlb	0	; () banked
  1826  002992  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1827  002994  EC7C  F017         	call	_LCD_write_message	;wreg free
  1828                           
  1829                           ;telecomando.c: 375: PORTDbits.RD2 = 0;
  1830  002998  9483               	bcf	3971,2,c	;volatile
  1831                           
  1832                           ;telecomando.c: 376: PORTDbits.RD3 = 0;
  1833  00299A  9683               	bcf	3971,3,c	;volatile
  1834                           
  1835                           ;telecomando.c: 379: TMR3H = 0x63;
  1836  00299C  0E63               	movlw	99
  1837  00299E  6EB3               	movwf	4019,c	;volatile
  1838                           
  1839                           ;telecomando.c: 380: TMR3L = 0xC0;
  1840  0029A0  0EC0               	movlw	192
  1841  0029A2  6EB2               	movwf	4018,c	;volatile
  1842                           
  1843                           ;telecomando.c: 383: PIE1bits.RCIE = 1;
  1844  0029A4  8A9D               	bsf	3997,5,c	;volatile
  1845                           
  1846                           ;telecomando.c: 384: PIE2bits.TMR3IE = 1;
  1847  0029A6  82A0               	bsf	4000,1,c	;volatile
  1848                           
  1849                           ;telecomando.c: 385: INTCONbits.GIEH = 1;
  1850  0029A8  8EF2               	bsf	intcon,7,c	;volatile
  1851                           
  1852                           ;telecomando.c: 386: INTCONbits.GIEL = 1;
  1853  0029AA  8CF2               	bsf	intcon,6,c	;volatile
  1854                           
  1855                           ;telecomando.c: 388: RCSTAbits.SPEN = 1;
  1856  0029AC  8EAB               	bsf	4011,7,c	;volatile
  1857                           
  1858                           ;telecomando.c: 389: T3CON = 0x01;
  1859  0029AE  0E01               	movlw	1
  1860  0029B0  6EB1               	movwf	4017,c	;volatile
  1861                           
  1862                           ;telecomando.c: 390: LCD_clear();
  1863  0029B2  EC4C  F017         	call	_LCD_clear	;wreg free
  1864  0029B6  0012               	return		;funcret
  1865  0029B8                     __end_of_board_initialization:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _delay_s *****************
  1878 ;; Defined at:
  1879 ;;		line 102 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  value_s         1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  value_s         1   16[BANK0 ] unsigned char 
  1884 ;;  repeat_loop     1   17[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;		None               void
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       0       0       0
  1895 ;;      Locals:         0       2       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         0       2       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    6
  1901 ;; This function calls:
  1902 ;;		_delay_ms
  1903 ;; This function is called by:
  1904 ;;		_board_initialization
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text2
  1909  002F50                     __ptext2:
  1910                           	opt stack 0
  1911  002F50                     _delay_s:
  1912                           	opt stack 23
  1913                           
  1914                           ;incstack = 0
  1915                           ;delay_s@value_s stored from wreg
  1916  002F50  0100               	movlb	0	; () banked
  1917  002F52  6F70               	movwf	delay_s@value_s& (0+255),b
  1918                           
  1919                           ;src\delay.c: 104: unsigned char repeat_loop;
  1920                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1921  002F54  0E00               	movlw	0
  1922  002F56  0100               	movlb	0	; () banked
  1923  002F58  6F71               	movwf	delay_s@repeat_loop& (0+255),b
  1924  002F5A  D008               	goto	l5247
  1925  002F5C                     l5243:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;src\delay.c: 107: delay_ms (1000);
  1929  002F5C  0E03               	movlw	3
  1930  002F5E  6E44               	movwf	delay_ms@value_ms+1,c
  1931  002F60  0EE8               	movlw	232
  1932  002F62  6E43               	movwf	delay_ms@value_ms,c
  1933  002F64  ECFC  F016         	call	_delay_ms	;wreg free
  1934  002F68  0100               	movlb	0	; () banked
  1935  002F6A  2B71               	incf	delay_s@repeat_loop& (0+255),f,b
  1936  002F6C                     l5247:
  1937                           
  1938                           ; BSR set to: 0
  1939  002F6C  0100               	movlb	0	; () banked
  1940  002F6E  5170               	movf	delay_s@value_s& (0+255),w,b
  1941  002F70  0100               	movlb	0	; () banked
  1942  002F72  5D71               	subwf	delay_s@repeat_loop& (0+255),w,b
  1943  002F74  B0D8               	btfsc	status,0,c
  1944  002F76  0012               	return	
  1945  002F78  D7F1               	goto	l5243
  1946  002F7A                     __end_of_delay_s:
  1947                           	opt stack 0
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _OpenUSART *****************
  1959 ;; Defined at:
  1960 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  config          1    wreg     unsigned char 
  1963 ;;  spbrg           2   23[COMRAM] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  config          1   25[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1975 ;;      Params:         2       0       0       0
  1976 ;;      Locals:         1       0       0       0
  1977 ;;      Temps:          0       0       0       0
  1978 ;;      Totals:         3       0       0       0
  1979 ;;Total ram usage:        3 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    4
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_board_initialization
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text3
  1990  002C70                     __ptext3:
  1991                           	opt stack 0
  1992  002C70                     _OpenUSART:
  1993                           	opt stack 25
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;incstack = 0
  1997                           ;OpenUSART@config stored from wreg
  1998  002C70  6E3F               	movwf	OpenUSART@config,c
  1999  002C72  0E00               	movlw	0
  2000  002C74  6EAC               	movwf	4012,c	;volatile
  2001  002C76  0E00               	movlw	0
  2002  002C78  6EAB               	movwf	4011,c	;volatile
  2003  002C7A  B03F               	btfsc	OpenUSART@config,0,c
  2004  002C7C  88AC               	bsf	4012,4,c	;volatile
  2005  002C7E  A23F               	btfss	OpenUSART@config,1,c
  2006  002C80  D002               	goto	l3893
  2007  002C82  8CAC               	bsf	4012,6,c	;volatile
  2008  002C84  8CAB               	bsf	4011,6,c	;volatile
  2009  002C86                     l3893:
  2010  002C86  B43F               	btfsc	OpenUSART@config,2,c
  2011  002C88  8EAC               	bsf	4012,7,c	;volatile
  2012  002C8A  A63F               	btfss	OpenUSART@config,3,c
  2013  002C8C  D002               	goto	l439
  2014  002C8E  88AB               	bsf	4011,4,c	;volatile
  2015  002C90  D001               	goto	l3901
  2016  002C92                     l439:
  2017  002C92  8AAB               	bsf	4011,5,c	;volatile
  2018  002C94                     l3901:
  2019  002C94  B83F               	btfsc	OpenUSART@config,4,c
  2020  002C96  84AC               	bsf	4012,2,c	;volatile
  2021  002C98  989E               	bcf	3998,4,c	;volatile
  2022  002C9A  BA3F               	btfsc	OpenUSART@config,5,c
  2023  002C9C  86AB               	bsf	4011,3,c	;volatile
  2024  002C9E  AC3F               	btfss	OpenUSART@config,6,c
  2025  002CA0  D002               	goto	l443
  2026  002CA2  8A9D               	bsf	3997,5,c	;volatile
  2027  002CA4  D001               	goto	l444
  2028  002CA6                     l443:
  2029  002CA6  9A9D               	bcf	3997,5,c	;volatile
  2030  002CA8                     l444:
  2031  002CA8  9A9E               	bcf	3998,5,c	;volatile
  2032  002CAA  AE3F               	btfss	OpenUSART@config,7,c
  2033  002CAC  D002               	goto	l445
  2034  002CAE  889D               	bsf	3997,4,c	;volatile
  2035  002CB0  D001               	goto	l446
  2036  002CB2                     l445:
  2037  002CB2  989D               	bcf	3997,4,c	;volatile
  2038  002CB4                     l446:
  2039  002CB4  C03D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2040  002CB8  503E               	movf	OpenUSART@spbrg+1,w,c
  2041  002CBA  6EB0               	movwf	4016,c	;volatile
  2042  002CBC  8AAC               	bsf	4012,5,c	;volatile
  2043  002CBE  8EAB               	bsf	4011,7,c	;volatile
  2044  002CC0  9C94               	bcf	3988,6,c	;volatile
  2045  002CC2  8E94               	bsf	3988,7,c	;volatile
  2046  002CC4  A8AC               	btfss	4012,4,c	;volatile
  2047  002CC6  0012               	return	
  2048  002CC8  BEAC               	btfsc	4012,7,c	;volatile
  2049  002CCA  0012               	return	
  2050  002CCC  8C94               	bsf	3988,6,c	;volatile
  2051  002CCE  0012               	return	
  2052  002CD0                     __end_of_OpenUSART:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodl	equ	0xFF3
  2059                           intcon	equ	0xFF2
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _LCD_initialize *****************
  2065 ;; Defined at:
  2066 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  quartz_frequ    1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  quartz_frequ    1   21[BANK0 ] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2080 ;;      Params:         0       0       0       0
  2081 ;;      Locals:         0       1       0       0
  2082 ;;      Temps:          0       0       0       0
  2083 ;;      Totals:         0       1       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    9
  2087 ;; This function calls:
  2088 ;;		_LCD_clear
  2089 ;;		_LCD_cursor
  2090 ;;		_LCD_send_command
  2091 ;;		_delay_ms
  2092 ;;		_delay_set_quartz
  2093 ;; This function is called by:
  2094 ;;		_board_initialization
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text4
  2099  001EB6                     __ptext4:
  2100                           	opt stack 0
  2101  001EB6                     _LCD_initialize:
  2102                           	opt stack 20
  2103                           
  2104                           ;incstack = 0
  2105                           ;LCD_initialize@quartz_frequency stored from wreg
  2106  001EB6  0100               	movlb	0	; () banked
  2107  001EB8  6F75               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2108                           
  2109                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2110  001EBA  0100               	movlb	0	; () banked
  2111  001EBC  5175               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2112  001EBE  EC41  F018         	call	_delay_set_quartz
  2113                           
  2114                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  2115  001EC2  928A               	bcf	3978,1,c	;volatile
  2116                           
  2117                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  2118  001EC4  968A               	bcf	3978,3,c	;volatile
  2119                           
  2120                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  2121  001EC6  948A               	bcf	3978,2,c	;volatile
  2122                           
  2123                           ;src\LCD_44780.c: 291: delay_ms (100);
  2124  001EC8  0E00               	movlw	0
  2125  001ECA  6E44               	movwf	delay_ms@value_ms+1,c
  2126  001ECC  0E64               	movlw	100
  2127  001ECE  6E43               	movwf	delay_ms@value_ms,c
  2128  001ED0  ECFC  F016         	call	_delay_ms	;wreg free
  2129                           
  2130                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2131  001ED4  0E00               	movlw	0
  2132  001ED6  0100               	movlb	0	; () banked
  2133  001ED8  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2134  001EDA  0E01               	movlw	1
  2135  001EDC  0100               	movlb	0	; () banked
  2136  001EDE  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2137  001EE0  0E01               	movlw	1
  2138  001EE2  0100               	movlb	0	; () banked
  2139  001EE4  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2140  001EE6  0E00               	movlw	0
  2141  001EE8  EC18  F017         	call	_LCD_send_command
  2142                           
  2143                           ;src\LCD_44780.c: 293: delay_ms (100);
  2144  001EEC  0E00               	movlw	0
  2145  001EEE  6E44               	movwf	delay_ms@value_ms+1,c
  2146  001EF0  0E64               	movlw	100
  2147  001EF2  6E43               	movwf	delay_ms@value_ms,c
  2148  001EF4  ECFC  F016         	call	_delay_ms	;wreg free
  2149                           
  2150                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2151  001EF8  0E00               	movlw	0
  2152  001EFA  0100               	movlb	0	; () banked
  2153  001EFC  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2154  001EFE  0E01               	movlw	1
  2155  001F00  0100               	movlb	0	; () banked
  2156  001F02  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2157  001F04  0E01               	movlw	1
  2158  001F06  0100               	movlb	0	; () banked
  2159  001F08  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2160  001F0A  0E00               	movlw	0
  2161  001F0C  EC18  F017         	call	_LCD_send_command
  2162                           
  2163                           ;src\LCD_44780.c: 295: delay_ms (10);
  2164  001F10  0E00               	movlw	0
  2165  001F12  6E44               	movwf	delay_ms@value_ms+1,c
  2166  001F14  0E0A               	movlw	10
  2167  001F16  6E43               	movwf	delay_ms@value_ms,c
  2168  001F18  ECFC  F016         	call	_delay_ms	;wreg free
  2169                           
  2170                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2171  001F1C  0E00               	movlw	0
  2172  001F1E  0100               	movlb	0	; () banked
  2173  001F20  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2174  001F22  0E01               	movlw	1
  2175  001F24  0100               	movlb	0	; () banked
  2176  001F26  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2177  001F28  0E01               	movlw	1
  2178  001F2A  0100               	movlb	0	; () banked
  2179  001F2C  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2180  001F2E  0E00               	movlw	0
  2181  001F30  EC18  F017         	call	_LCD_send_command
  2182                           
  2183                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2184  001F34  0E00               	movlw	0
  2185  001F36  0100               	movlb	0	; () banked
  2186  001F38  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2187  001F3A  0E01               	movlw	1
  2188  001F3C  0100               	movlb	0	; () banked
  2189  001F3E  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2190  001F40  0E00               	movlw	0
  2191  001F42  0100               	movlb	0	; () banked
  2192  001F44  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2193  001F46  0E00               	movlw	0
  2194  001F48  EC18  F017         	call	_LCD_send_command
  2195                           
  2196                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2197  001F4C  0E00               	movlw	0
  2198  001F4E  0100               	movlb	0	; () banked
  2199  001F50  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2200  001F52  0E01               	movlw	1
  2201  001F54  0100               	movlb	0	; () banked
  2202  001F56  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2203  001F58  0E00               	movlw	0
  2204  001F5A  0100               	movlb	0	; () banked
  2205  001F5C  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2206  001F5E  0E00               	movlw	0
  2207  001F60  EC18  F017         	call	_LCD_send_command
  2208                           
  2209                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2210  001F64  0E00               	movlw	0
  2211  001F66  0100               	movlb	0	; () banked
  2212  001F68  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2213  001F6A  0E00               	movlw	0
  2214  001F6C  0100               	movlb	0	; () banked
  2215  001F6E  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2216  001F70  0E00               	movlw	0
  2217  001F72  0100               	movlb	0	; () banked
  2218  001F74  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2219  001F76  0E01               	movlw	1
  2220  001F78  EC18  F017         	call	_LCD_send_command
  2221                           
  2222                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2223  001F7C  0E00               	movlw	0
  2224  001F7E  0100               	movlb	0	; () banked
  2225  001F80  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2226  001F82  0E00               	movlw	0
  2227  001F84  0100               	movlb	0	; () banked
  2228  001F86  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2229  001F88  0E00               	movlw	0
  2230  001F8A  0100               	movlb	0	; () banked
  2231  001F8C  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2232  001F8E  0E00               	movlw	0
  2233  001F90  EC18  F017         	call	_LCD_send_command
  2234                           
  2235                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2236  001F94  0E00               	movlw	0
  2237  001F96  0100               	movlb	0	; () banked
  2238  001F98  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2239  001F9A  0E00               	movlw	0
  2240  001F9C  0100               	movlb	0	; () banked
  2241  001F9E  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2242  001FA0  0E00               	movlw	0
  2243  001FA2  0100               	movlb	0	; () banked
  2244  001FA4  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2245  001FA6  0E01               	movlw	1
  2246  001FA8  EC18  F017         	call	_LCD_send_command
  2247                           
  2248                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2249  001FAC  0E00               	movlw	0
  2250  001FAE  0100               	movlb	0	; () banked
  2251  001FB0  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2252  001FB2  0E00               	movlw	0
  2253  001FB4  0100               	movlb	0	; () banked
  2254  001FB6  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2255  001FB8  0E00               	movlw	0
  2256  001FBA  0100               	movlb	0	; () banked
  2257  001FBC  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2258  001FBE  0E00               	movlw	0
  2259  001FC0  EC18  F017         	call	_LCD_send_command
  2260                           
  2261                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2262  001FC4  0E00               	movlw	0
  2263  001FC6  0100               	movlb	0	; () banked
  2264  001FC8  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2265  001FCA  0E00               	movlw	0
  2266  001FCC  0100               	movlb	0	; () banked
  2267  001FCE  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2268  001FD0  0E01               	movlw	1
  2269  001FD2  0100               	movlb	0	; () banked
  2270  001FD4  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2271  001FD6  0E00               	movlw	0
  2272  001FD8  EC18  F017         	call	_LCD_send_command
  2273                           
  2274                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2275  001FDC  0E00               	movlw	0
  2276  001FDE  0100               	movlb	0	; () banked
  2277  001FE0  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2278  001FE2  0E00               	movlw	0
  2279  001FE4  0100               	movlb	0	; () banked
  2280  001FE6  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2281  001FE8  0E00               	movlw	0
  2282  001FEA  0100               	movlb	0	; () banked
  2283  001FEC  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2284  001FEE  0E00               	movlw	0
  2285  001FF0  EC18  F017         	call	_LCD_send_command
  2286                           
  2287                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2288  001FF4  0E01               	movlw	1
  2289  001FF6  0100               	movlb	0	; () banked
  2290  001FF8  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2291  001FFA  0E01               	movlw	1
  2292  001FFC  0100               	movlb	0	; () banked
  2293  001FFE  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2294  002000  0E00               	movlw	0
  2295  002002  0100               	movlb	0	; () banked
  2296  002004  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2297  002006  0E00               	movlw	0
  2298  002008  EC18  F017         	call	_LCD_send_command
  2299                           
  2300                           ;src\LCD_44780.c: 312: LCD_clear ();
  2301  00200C  EC4C  F017         	call	_LCD_clear	;wreg free
  2302                           
  2303                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2304  002010  0E00               	movlw	0
  2305  002012  0100               	movlb	0	; () banked
  2306  002014  6F73               	movwf	LCD_cursor@blinking& (0+255),b
  2307  002016  0E00               	movlw	0
  2308  002018  EC33  F017         	call	_LCD_cursor
  2309  00201C  0012               	return		;funcret
  2310  00201E                     __end_of_LCD_initialize:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _delay_set_quartz *****************
  2323 ;; Defined at:
  2324 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  frequency       1    wreg     unsigned char 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  frequency       1   23[COMRAM] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		wreg
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2338 ;;      Params:         0       0       0       0
  2339 ;;      Locals:         1       0       0       0
  2340 ;;      Temps:          0       0       0       0
  2341 ;;      Totals:         1       0       0       0
  2342 ;;Total ram usage:        1 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    4
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_LCD_initialize
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text5
  2353  003082                     __ptext5:
  2354                           	opt stack 0
  2355  003082                     _delay_set_quartz:
  2356                           	opt stack 24
  2357                           
  2358                           ;incstack = 0
  2359                           ;delay_set_quartz@frequency stored from wreg
  2360  003082  6E3D               	movwf	delay_set_quartz@frequency,c
  2361                           
  2362                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2363  003084  C03D  F047         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2364  003088  0012               	return		;funcret
  2365  00308A                     __end_of_delay_set_quartz:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodl	equ	0xFF3
  2372                           intcon	equ	0xFF2
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           status	equ	0xFD8
  2376                           
  2377 ;; *************** function _LCD_cursor *****************
  2378 ;; Defined at:
  2379 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  active          1    wreg     unsigned char 
  2382 ;;  blinking        1   19[BANK0 ] unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  active          1   20[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2394 ;;      Params:         0       1       0       0
  2395 ;;      Locals:         0       1       0       0
  2396 ;;      Temps:          0       0       0       0
  2397 ;;      Totals:         0       2       0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    8
  2401 ;; This function calls:
  2402 ;;		_LCD_send_command
  2403 ;; This function is called by:
  2404 ;;		_LCD_initialize
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text6
  2409  002E66                     __ptext6:
  2410                           	opt stack 0
  2411  002E66                     _LCD_cursor:
  2412                           	opt stack 20
  2413                           
  2414                           ;incstack = 0
  2415                           ;LCD_cursor@active stored from wreg
  2416  002E66  0100               	movlb	0	; () banked
  2417  002E68  6F74               	movwf	LCD_cursor@active& (0+255),b
  2418                           
  2419                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2420  002E6A  0E00               	movlw	0
  2421  002E6C  0100               	movlb	0	; () banked
  2422  002E6E  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2423  002E70  0E00               	movlw	0
  2424  002E72  0100               	movlb	0	; () banked
  2425  002E74  6F71               	movwf	LCD_send_command@D1& (0+255),b
  2426  002E76  0E00               	movlw	0
  2427  002E78  0100               	movlb	0	; () banked
  2428  002E7A  6F72               	movwf	LCD_send_command@D0& (0+255),b
  2429  002E7C  0E00               	movlw	0
  2430  002E7E  EC18  F017         	call	_LCD_send_command
  2431                           
  2432                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2433  002E82  0E01               	movlw	1
  2434  002E84  0100               	movlb	0	; () banked
  2435  002E86  6F70               	movwf	LCD_send_command@D2& (0+255),b
  2436  002E88  C074  F071         	movff	LCD_cursor@active,LCD_send_command@D1
  2437  002E8C  C073  F072         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2438  002E90  0E01               	movlw	1
  2439  002E92  EC18  F017         	call	_LCD_send_command
  2440  002E96  0012               	return		;funcret
  2441  002E98                     __end_of_LCD_cursor:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _LCD_backlight *****************
  2454 ;; Defined at:
  2455 ;;		line 275 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  active          1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  active          1   23[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2469 ;;      Params:         0       0       0       0
  2470 ;;      Locals:         1       0       0       0
  2471 ;;      Temps:          0       0       0       0
  2472 ;;      Totals:         1       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    4
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_board_initialization
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text7
  2484  003074                     __ptext7:
  2485                           	opt stack 0
  2486  003074                     _LCD_backlight:
  2487                           	opt stack 25
  2488                           
  2489                           ;incstack = 0
  2490                           ;LCD_backlight@active stored from wreg
  2491  003074  6E3D               	movwf	LCD_backlight@active,c
  2492                           
  2493                           ;src\LCD_44780.c: 277: LATCbits.LATC2 = active;
  2494  003076  B03D               	btfsc	LCD_backlight@active,0,c
  2495  003078  D002               	bra	u3715
  2496  00307A  948B               	bcf	3979,2,c	;volatile
  2497  00307C  D001               	bra	u3716
  2498  00307E                     u3715:
  2499  00307E  848B               	bsf	3979,2,c	;volatile
  2500  003080                     u3716:
  2501  003080  0012               	return		;funcret
  2502  003082                     __end_of_LCD_backlight:
  2503                           	opt stack 0
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           prodl	equ	0xFF3
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _USART_Send *****************
  2515 ;; Defined at:
  2516 ;;		line 257 in file "telecomando.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  i               1   29[COMRAM] unsigned char 
  2521 ;;  i               1   28[COMRAM] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2531 ;;      Params:         0       0       0       0
  2532 ;;      Locals:         2       0       0       0
  2533 ;;      Temps:          2       0       0       0
  2534 ;;      Totals:         4       0       0       0
  2535 ;;Total ram usage:        4 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    6
  2538 ;; This function calls:
  2539 ;;		_putsUSART
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text8
  2546  002724                     __ptext8:
  2547                           	opt stack 0
  2548  002724                     _USART_Send:
  2549                           	opt stack 24
  2550                           
  2551                           ;telecomando.c: 258: set_speed_pk1 = set_speed >> 8;
  2552                           
  2553                           ;incstack = 0
  2554  002724  500E               	movf	_set_speed+1,w,c	;volatile
  2555  002726  6E18               	movwf	_set_speed_pk1,c	;volatile
  2556                           
  2557                           ;telecomando.c: 259: if (set_speed_pk1 == 0x00) {
  2558  002728  5018               	movf	_set_speed_pk1,w,c	;volatile
  2559  00272A  A4D8               	btfss	status,2,c
  2560  00272C  D002               	goto	l4089
  2561                           
  2562                           ;telecomando.c: 260: set_speed_pk1 = 0b1000000;
  2563  00272E  0E40               	movlw	64
  2564  002730  6E18               	movwf	_set_speed_pk1,c	;volatile
  2565  002732                     l4089:
  2566                           
  2567                           ;telecomando.c: 261: }
  2568                           ;telecomando.c: 262: set_speed_pk0 = set_speed;
  2569  002732  C00D  F017         	movff	_set_speed,_set_speed_pk0	;volatile
  2570                           
  2571                           ;telecomando.c: 263: USART_Tx[1] = dir;
  2572  002736  C015  F0E3         	movff	_dir,_USART_Tx+1	;volatile
  2573                           
  2574                           ;telecomando.c: 264: USART_Tx[2] = set_speed_pk1;
  2575  00273A  C018  F0E4         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2576                           
  2577                           ;telecomando.c: 265: USART_Tx[3] = set_speed_pk0;
  2578  00273E  C017  F0E5         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2579                           
  2580                           ;telecomando.c: 266: USART_Tx[4] = set_steering;
  2581  002742  C019  F0E6         	movff	_set_steering,_USART_Tx+4	;volatile
  2582                           
  2583                           ;telecomando.c: 267: USART_Tx[5] = analogic_brake;
  2584  002746  C014  F0E7         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2585                           
  2586                           ;telecomando.c: 270: for (char i = 0; i < 6; i++) {
  2587  00274A  0E00               	movlw	0
  2588  00274C  6E42               	movwf	USART_Send@i,c
  2589  00274E                     l4101:
  2590  00274E  0E05               	movlw	5
  2591  002750  6442               	cpfsgt	USART_Send@i,c
  2592  002752  D001               	goto	l4105
  2593  002754  D017               	goto	l4113
  2594  002756                     l4105:
  2595                           
  2596                           ;telecomando.c: 271: if (USART_Tx[i] == 0) {
  2597  002756  5042               	movf	USART_Send@i,w,c
  2598  002758  0D01               	mullw	1
  2599  00275A  0EE2               	movlw	low _USART_Tx
  2600  00275C  24F3               	addwf	prodl,w,c
  2601  00275E  6ED9               	movwf	fsr2l,c
  2602  002760  0E00               	movlw	high _USART_Tx
  2603  002762  20F4               	addwfc	prodh,w,c
  2604  002764  6EDA               	movwf	fsr2h,c
  2605  002766  50DF               	movf	indf2,w,c
  2606  002768  A4D8               	btfss	status,2,c
  2607  00276A  D00A               	goto	l4109
  2608                           
  2609                           ;telecomando.c: 272: USART_Tx[i] = 1;
  2610  00276C  5042               	movf	USART_Send@i,w,c
  2611  00276E  0D01               	mullw	1
  2612  002770  0EE2               	movlw	low _USART_Tx
  2613  002772  24F3               	addwf	prodl,w,c
  2614  002774  6ED9               	movwf	fsr2l,c
  2615  002776  0E00               	movlw	high _USART_Tx
  2616  002778  20F4               	addwfc	prodh,w,c
  2617  00277A  6EDA               	movwf	fsr2h,c
  2618  00277C  0E01               	movlw	1
  2619  00277E  6EDF               	movwf	indf2,c
  2620  002780                     l4109:
  2621  002780  2A42               	incf	USART_Send@i,f,c
  2622  002782  D7E5               	goto	l4101
  2623  002784                     l4113:
  2624                           
  2625                           ;telecomando.c: 273: }
  2626                           ;telecomando.c: 275: }
  2627                           ;telecomando.c: 278: spam_counter = 0;
  2628  002784  0E00               	movlw	0
  2629  002786  6E1A               	movwf	_spam_counter,c	;volatile
  2630                           
  2631                           ;telecomando.c: 279: for (i = 1; i < 6; i++) {
  2632  002788  0E01               	movlw	1
  2633  00278A  6E16               	movwf	_i,c	;volatile
  2634  00278C                     l4115:
  2635  00278C  0E05               	movlw	5
  2636  00278E  6416               	cpfsgt	_i,c	;volatile
  2637  002790  D001               	goto	l4119
  2638  002792  D016               	goto	l294
  2639  002794                     l4119:
  2640                           
  2641                           ;telecomando.c: 280: if (USART_Tx[i] == USART_Tx_Old[i]) {
  2642  002794  5016               	movf	_i,w,c	;volatile
  2643  002796  0D01               	mullw	1
  2644  002798  0EC2               	movlw	low _USART_Tx_Old
  2645  00279A  24F3               	addwf	prodl,w,c
  2646  00279C  6ED9               	movwf	fsr2l,c
  2647  00279E  0E00               	movlw	high _USART_Tx_Old
  2648  0027A0  20F4               	addwfc	prodh,w,c
  2649  0027A2  6EDA               	movwf	fsr2h,c
  2650  0027A4  5016               	movf	_i,w,c	;volatile
  2651  0027A6  0D01               	mullw	1
  2652  0027A8  0EE2               	movlw	low _USART_Tx
  2653  0027AA  24F3               	addwf	prodl,w,c
  2654  0027AC  6EE1               	movwf	fsr1l,c
  2655  0027AE  0E00               	movlw	high _USART_Tx
  2656  0027B0  20F4               	addwfc	prodh,w,c
  2657  0027B2  6EE2               	movwf	fsr1h,c
  2658  0027B4  50DE               	movf	postinc2,w,c
  2659  0027B6  18E6               	xorwf	postinc1,w,c
  2660  0027B8  B4D8               	btfsc	status,2,c
  2661                           
  2662                           ;telecomando.c: 281: spam_counter++;
  2663  0027BA  2A1A               	incf	_spam_counter,f,c	;volatile
  2664  0027BC  2A16               	incf	_i,f,c	;volatile
  2665  0027BE  D7E6               	goto	l4115
  2666  0027C0                     l294:
  2667                           
  2668                           ;telecomando.c: 282: }
  2669                           ;telecomando.c: 283: }
  2670                           ;telecomando.c: 284: if (((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) {
  2671  0027C0  A2AC               	btfss	4012,1,c	;volatile
  2672  0027C2  0012               	return	
  2673  0027C4  0E05               	movlw	5
  2674  0027C6  181A               	xorwf	_spam_counter,w,c	;volatile
  2675  0027C8  B4D8               	btfsc	status,2,c
  2676  0027CA  0012               	return	
  2677                           
  2678                           ;telecomando.c: 285: putsUSART(USART_Tx);
  2679  0027CC  0EE2               	movlw	low _USART_Tx
  2680  0027CE  6E3E               	movwf	putsUSART@data,c
  2681  0027D0  0E00               	movlw	high _USART_Tx
  2682  0027D2  6E3F               	movwf	putsUSART@data+1,c
  2683  0027D4  ECBD  F017         	call	_putsUSART	;wreg free
  2684                           
  2685                           ;telecomando.c: 286: for (char i = 0; i < 6; i++) {
  2686  0027D8  0E00               	movlw	0
  2687  0027DA  6E43               	movwf	USART_Send@i_1261,c
  2688  0027DC                     l4131:
  2689  0027DC  0E05               	movlw	5
  2690  0027DE  6443               	cpfsgt	USART_Send@i_1261,c
  2691  0027E0  D001               	goto	l4135
  2692  0027E2  0012               	return	
  2693  0027E4                     l4135:
  2694                           
  2695                           ;telecomando.c: 287: USART_Tx_Old[i] = USART_Tx[i];
  2696  0027E4  5043               	movf	USART_Send@i_1261,w,c
  2697  0027E6  0D01               	mullw	1
  2698  0027E8  0EE2               	movlw	low _USART_Tx
  2699  0027EA  24F3               	addwf	prodl,w,c
  2700  0027EC  6ED9               	movwf	fsr2l,c
  2701  0027EE  0E00               	movlw	high _USART_Tx
  2702  0027F0  20F4               	addwfc	prodh,w,c
  2703  0027F2  6EDA               	movwf	fsr2h,c
  2704  0027F4  5043               	movf	USART_Send@i_1261,w,c
  2705  0027F6  0D01               	mullw	1
  2706  0027F8  0EC2               	movlw	low _USART_Tx_Old
  2707  0027FA  24F3               	addwf	prodl,w,c
  2708  0027FC  6EE1               	movwf	fsr1l,c
  2709  0027FE  0E00               	movlw	high _USART_Tx_Old
  2710  002800  20F4               	addwfc	prodh,w,c
  2711  002802  6EE2               	movwf	fsr1h,c
  2712  002804  CFDF FFE7          	movff	indf2,indf1
  2713  002808  2A43               	incf	USART_Send@i_1261,f,c
  2714  00280A  D7E8               	goto	l4131
  2715  00280C                     __end_of_USART_Send:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           intcon	equ	0xFF2
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           indf1	equ	0xFE7
  2727                           postinc1	equ	0xFE6
  2728                           fsr1h	equ	0xFE2
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _putsUSART *****************
  2737 ;; Defined at:
  2738 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  data            2   24[COMRAM] PTR unsigned char 
  2741 ;;		 -> USART_Tx(8), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;		None               void
  2746 ;; Registers used:
  2747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2753 ;;      Params:         2       0       0       0
  2754 ;;      Locals:         0       0       0       0
  2755 ;;      Temps:          0       0       0       0
  2756 ;;      Totals:         2       0       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    5
  2760 ;; This function calls:
  2761 ;;		_WriteUSART
  2762 ;; This function is called by:
  2763 ;;		_USART_Send
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text9
  2768  002F7A                     __ptext9:
  2769                           	opt stack 0
  2770  002F7A                     _putsUSART:
  2771                           	opt stack 24
  2772  002F7A                     l456:
  2773  002F7A  A2AC               	btfss	4012,1,c	;volatile
  2774  002F7C  D7FE               	goto	l456
  2775  002F7E  C03E  FFD9         	movff	putsUSART@data,fsr2l
  2776  002F82  C03F  FFDA         	movff	putsUSART@data+1,fsr2h
  2777  002F86  50DF               	movf	indf2,w,c
  2778  002F88  EC31  F018         	call	_WriteUSART
  2779  002F8C  C03E  FFD9         	movff	putsUSART@data,fsr2l
  2780  002F90  C03F  FFDA         	movff	putsUSART@data+1,fsr2h
  2781  002F94  4A3E               	infsnz	putsUSART@data,f,c
  2782  002F96  2A3F               	incf	putsUSART@data+1,f,c
  2783  002F98  50DF               	movf	indf2,w,c
  2784  002F9A  B4D8               	btfsc	status,2,c
  2785  002F9C  0012               	return	
  2786  002F9E  D7ED               	goto	l456
  2787  002FA0                     __end_of_putsUSART:
  2788                           	opt stack 0
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           prodh	equ	0xFF4
  2794                           prodl	equ	0xFF3
  2795                           intcon	equ	0xFF2
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           indf1	equ	0xFE7
  2799                           postinc1	equ	0xFE6
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           postinc2	equ	0xFDE
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _WriteUSART *****************
  2809 ;; Defined at:
  2810 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  data            1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  data            1   23[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;		None               void
  2817 ;; Registers used:
  2818 ;;		wreg
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2824 ;;      Params:         0       0       0       0
  2825 ;;      Locals:         1       0       0       0
  2826 ;;      Temps:          0       0       0       0
  2827 ;;      Totals:         1       0       0       0
  2828 ;;Total ram usage:        1 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    4
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_putsUSART
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text10
  2839  003062                     __ptext10:
  2840                           	opt stack 0
  2841  003062                     _WriteUSART:
  2842                           	opt stack 24
  2843                           
  2844                           ;incstack = 0
  2845                           ;WriteUSART@data stored from wreg
  2846  003062  6E3D               	movwf	WriteUSART@data,c
  2847  003064  ACAC               	btfss	4012,6,c	;volatile
  2848  003066  D003               	goto	l3431
  2849  003068  90AC               	bcf	4012,0,c	;volatile
  2850  00306A  B211               	btfsc	_USART_Status,1,c
  2851  00306C  80AC               	bsf	4012,0,c	;volatile
  2852  00306E                     l3431:
  2853  00306E  C03D  FFAD         	movff	WriteUSART@data,4013	;volatile
  2854  003072  0012               	return		;funcret
  2855  003074                     __end_of_WriteUSART:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postinc1	equ	0xFE6
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _PWR_Button_Polling *****************
  2877 ;; Defined at:
  2878 ;;		line 238 in file "telecomando.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;		None               void
  2885 ;; Registers used:
  2886 ;;		None
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2892 ;;      Params:         0       0       0       0
  2893 ;;      Locals:         0       0       0       0
  2894 ;;      Temps:          0       0       0       0
  2895 ;;      Totals:         0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text11
  2907  003046                     __ptext11:
  2908                           	opt stack 0
  2909  003046                     _PWR_Button_Polling:
  2910                           	opt stack 26
  2911                           
  2912                           ;telecomando.c: 239: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  2913                           
  2914                           ;incstack = 0
  2915  003046  A681               	btfss	3969,3,c	;volatile
  2916  003048  D002               	goto	l276
  2917  00304A  B446               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  2918  00304C  0012               	return	
  2919  00304E                     l276:
  2920                           
  2921                           ;telecomando.c: 240: wait_low = 0;
  2922  00304E  9446               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  2923                           
  2924                           ;telecomando.c: 241: if (PORTBbits.RB3 == 1) {
  2925  003050  A681               	btfss	3969,3,c	;volatile
  2926  003052  0012               	return	
  2927                           
  2928                           ;telecomando.c: 242: power_switch = ~power_switch;
  2929  003054  B246               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2930  003056  D002               	goto	u4290
  2931  003058  8246               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2932  00305A  D001               	goto	u4305
  2933  00305C                     u4290:
  2934  00305C  9246               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2935  00305E                     u4305:
  2936                           
  2937                           ;telecomando.c: 243: wait_low = 1;
  2938  00305E  8446               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  2939  003060  0012               	return	
  2940  003062                     __end_of_PWR_Button_Polling:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           prodh	equ	0xFF4
  2947                           prodl	equ	0xFF3
  2948                           intcon	equ	0xFF2
  2949                           postinc0	equ	0xFEE
  2950                           wreg	equ	0xFE8
  2951                           indf1	equ	0xFE7
  2952                           postinc1	equ	0xFE6
  2953                           fsr1h	equ	0xFE2
  2954                           fsr1l	equ	0xFE1
  2955                           indf2	equ	0xFDF
  2956                           postinc2	equ	0xFDE
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _LCD_Handler *****************
  2962 ;; Defined at:
  2963 ;;		line 292 in file "telecomando.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;		None               void
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2977 ;;      Params:         0       0       0       0
  2978 ;;      Locals:         0       0       0       0
  2979 ;;      Temps:          0       0       0       0
  2980 ;;      Totals:         0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:   10
  2984 ;; This function calls:
  2985 ;;		_LCD_clear
  2986 ;;		_LCD_goto_line
  2987 ;;		_LCD_write_message
  2988 ;;		_LCD_write_string
  2989 ;;		___lwdiv
  2990 ;;		___xxtofl
  2991 ;;		_sprintf
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text12
  2998  00242C                     __ptext12:
  2999                           	opt stack 0
  3000  00242C                     _LCD_Handler:
  3001                           	opt stack 20
  3002                           
  3003                           ;telecomando.c: 293: actual_speed_kmh = actual_speed / 278;
  3004                           
  3005                           ;incstack = 0
  3006  00242C  0E01               	movlw	1
  3007  00242E  6E40               	movwf	___lwdiv@divisor+1,c
  3008  002430  0E16               	movlw	22
  3009  002432  6E3F               	movwf	___lwdiv@divisor,c
  3010  002434  C0D8  F03D         	movff	_actual_speed,___lwdiv@dividend	;volatile
  3011  002438  C0D9  F03E         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  3012  00243C  EC68  F016         	call	___lwdiv	;wreg free
  3013  002440  C03D  F070         	movff	?___lwdiv,___xxtofl@val
  3014  002444  C03E  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  3015  002448  0100               	movlb	0	; () banked
  3016  00244A  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  3017  00244C  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  3018  00244E  0E00               	movlw	0
  3019  002450  EC74  F00E         	call	___xxtofl
  3020  002454  C070  F0D0         	movff	?___xxtofl,_actual_speed_kmh
  3021  002458  C071  F0D1         	movff	?___xxtofl+1,_actual_speed_kmh+1
  3022  00245C  C072  F0D2         	movff	?___xxtofl+2,_actual_speed_kmh+2
  3023  002460  C073  F0D3         	movff	?___xxtofl+3,_actual_speed_kmh+3
  3024                           
  3025                           ;telecomando.c: 295: LCD_clear();
  3026  002464  EC4C  F017         	call	_LCD_clear	;wreg free
  3027                           
  3028                           ;telecomando.c: 296: LCD_goto_line(1);
  3029  002468  0E01               	movlw	1
  3030  00246A  EC1C  F013         	call	_LCD_goto_line
  3031                           
  3032                           ;telecomando.c: 297: LCD_write_message("=== VEHICLE DATA ===");
  3033  00246E  0EA5               	movlw	low STR_5
  3034  002470  0100               	movlb	0	; () banked
  3035  002472  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3036  002474  0E3F               	movlw	high STR_5
  3037  002476  0100               	movlb	0	; () banked
  3038  002478  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3039  00247A  EC7C  F017         	call	_LCD_write_message	;wreg free
  3040                           
  3041                           ;telecomando.c: 299: LCD_goto_line(2);
  3042  00247E  0E02               	movlw	2
  3043  002480  EC1C  F013         	call	_LCD_goto_line
  3044                           
  3045                           ;telecomando.c: 300: LCD_write_message("Direction: ");
  3046  002484  0ECF               	movlw	low STR_6
  3047  002486  0100               	movlb	0	; () banked
  3048  002488  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3049  00248A  0E3F               	movlw	high STR_6
  3050  00248C  0100               	movlb	0	; () banked
  3051  00248E  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3052  002490  EC7C  F017         	call	_LCD_write_message	;wreg free
  3053                           
  3054                           ;telecomando.c: 301: if (switch_position != 0) {
  3055  002494  501B               	movf	_switch_position,w,c	;volatile
  3056  002496  B4D8               	btfsc	status,2,c
  3057  002498  D016               	goto	l5641
  3058                           
  3059                           ;telecomando.c: 302: if (dir == 2) {
  3060  00249A  0E02               	movlw	2
  3061  00249C  1815               	xorwf	_dir,w,c	;volatile
  3062  00249E  A4D8               	btfss	status,2,c
  3063  0024A0  D009               	goto	l5639
  3064                           
  3065                           ;telecomando.c: 303: LCD_write_message("FWD");
  3066  0024A2  0EF9               	movlw	low STR_7
  3067  0024A4  0100               	movlb	0	; () banked
  3068  0024A6  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3069  0024A8  0E3F               	movlw	high STR_7
  3070  0024AA  0100               	movlb	0	; () banked
  3071  0024AC  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3072  0024AE  EC7C  F017         	call	_LCD_write_message	;wreg free
  3073                           
  3074                           ;telecomando.c: 304: } else {
  3075  0024B2  D011               	goto	l5643
  3076  0024B4                     l5639:
  3077                           
  3078                           ;telecomando.c: 305: LCD_write_message("BKWD");
  3079  0024B4  0EEF               	movlw	low STR_8
  3080  0024B6  0100               	movlb	0	; () banked
  3081  0024B8  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3082  0024BA  0E3F               	movlw	high STR_8
  3083  0024BC  0100               	movlb	0	; () banked
  3084  0024BE  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3085  0024C0  EC7C  F017         	call	_LCD_write_message	;wreg free
  3086                           
  3087                           ;telecomando.c: 306: }
  3088                           ;telecomando.c: 307: } else {
  3089  0024C4  D008               	goto	l5643
  3090  0024C6                     l5641:
  3091                           
  3092                           ;telecomando.c: 308: LCD_write_message("P");
  3093  0024C6  0EFD               	movlw	low STR_9
  3094  0024C8  0100               	movlb	0	; () banked
  3095  0024CA  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3096  0024CC  0E3F               	movlw	high STR_9
  3097  0024CE  0100               	movlb	0	; () banked
  3098  0024D0  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3099  0024D2  EC7C  F017         	call	_LCD_write_message	;wreg free
  3100  0024D6                     l5643:
  3101                           
  3102                           ;telecomando.c: 309: }
  3103                           ;telecomando.c: 311: LCD_goto_line(3);
  3104  0024D6  0E03               	movlw	3
  3105  0024D8  EC1C  F013         	call	_LCD_goto_line
  3106                           
  3107                           ;telecomando.c: 312: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  3108  0024DC  0E29               	movlw	low _str
  3109  0024DE  0101               	movlb	1	; () banked
  3110  0024E0  6F00               	movwf	sprintf@sp& (0+255),b
  3111  0024E2  0E01               	movlw	high _str
  3112  0024E4  0101               	movlb	1	; () banked
  3113  0024E6  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3114  0024E8  0EDB               	movlw	low STR_10
  3115  0024EA  0101               	movlb	1	; () banked
  3116  0024EC  6F02               	movwf	sprintf@f& (0+255),b
  3117  0024EE  0E3F               	movlw	high STR_10
  3118  0024F0  0101               	movlb	1	; () banked
  3119  0024F2  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3120  0024F4  C0D0  F104         	movff	_actual_speed_kmh,?_sprintf+4
  3121  0024F8  C0D1  F105         	movff	_actual_speed_kmh+1,?_sprintf+5
  3122  0024FC  C0D2  F106         	movff	_actual_speed_kmh+2,?_sprintf+6
  3123  002500  C0D3  F107         	movff	_actual_speed_kmh+3,?_sprintf+7
  3124  002504  EC62  F000         	call	_sprintf	;wreg free
  3125                           
  3126                           ;telecomando.c: 313: str[11] = '\0';
  3127  002508  0E00               	movlw	0
  3128  00250A  0101               	movlb	1	; () banked
  3129  00250C  6F34               	movwf	(_str+11)& (0+255),b
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;telecomando.c: 314: LCD_write_string(str);
  3133  00250E  0E29               	movlw	low _str
  3134  002510  0100               	movlb	0	; () banked
  3135  002512  6F78               	movwf	LCD_write_string@buffer& (0+255),b
  3136  002514  0E01               	movlw	high _str
  3137  002516  0100               	movlb	0	; () banked
  3138  002518  6F79               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3139  00251A  ECD0  F017         	call	_LCD_write_string	;wreg free
  3140                           
  3141                           ;telecomando.c: 315: LCD_write_message("Km/h");
  3142  00251E  0EF4               	movlw	low STR_11
  3143  002520  0100               	movlb	0	; () banked
  3144  002522  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3145  002524  0E3F               	movlw	high STR_11
  3146  002526  0100               	movlb	0	; () banked
  3147  002528  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3148  00252A  EC7C  F017         	call	_LCD_write_message	;wreg free
  3149                           
  3150                           ;telecomando.c: 317: LCD_goto_line(4);
  3151  00252E  0E04               	movlw	4
  3152  002530  EC1C  F013         	call	_LCD_goto_line
  3153                           
  3154                           ;telecomando.c: 318: LCD_write_message("====================");
  3155  002534  0EBA               	movlw	low STR_1
  3156  002536  0100               	movlb	0	; () banked
  3157  002538  6F78               	movwf	LCD_write_message@buffer& (0+255),b
  3158  00253A  0E3F               	movlw	high STR_1
  3159  00253C  0100               	movlb	0	; () banked
  3160  00253E  6F79               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3161  002540  EC7C  F017         	call	_LCD_write_message	;wreg free
  3162  002544  0012               	return		;funcret
  3163  002546                     __end_of_LCD_Handler:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           indf1	equ	0xFE7
  3175                           postinc1	equ	0xFE6
  3176                           fsr1h	equ	0xFE2
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _sprintf *****************
  3185 ;; Defined at:
  3186 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  3189 ;;		 -> str(12), 
  3190 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  3191 ;;		 -> STR_10(12), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  fval            4   28[BANK1 ] PTR const unsigned char 
  3194 ;;  tmpval          4   22[BANK1 ] struct .
  3195 ;;  val             4   16[BANK1 ] unsigned long 
  3196 ;;  cp              3    0        PTR const unsigned char 
  3197 ;;  prec            2   26[BANK1 ] int 
  3198 ;;  exp             2   20[BANK1 ] int 
  3199 ;;  flag            2   14[BANK1 ] unsigned short 
  3200 ;;  ap              2   12[BANK1 ] PTR void [1]
  3201 ;;		 -> ?_sprintf(2), 
  3202 ;;  len             2    0        unsigned int 
  3203 ;;  width           2    0        int 
  3204 ;;  c               1   32[BANK1 ] char 
  3205 ;;  d               1    0        unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[BANK1 ] int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3215 ;;      Params:         0       0       8       0
  3216 ;;      Locals:         0       0      25       0
  3217 ;;      Temps:          0       2       0       0
  3218 ;;      Totals:         0       2      33       0
  3219 ;;Total ram usage:       35 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    6
  3222 ;; This function calls:
  3223 ;;		___awdiv
  3224 ;;		___fladd
  3225 ;;		___flge
  3226 ;;		___flmul
  3227 ;;		___flneg
  3228 ;;		___flsub
  3229 ;;		___fltol
  3230 ;;		___lldiv
  3231 ;;		___llmod
  3232 ;;		___wmul
  3233 ;;		___xxtofl
  3234 ;;		__div_to_l_
  3235 ;;		__tdiv_to_l_
  3236 ;;		_fround
  3237 ;;		_isdigit
  3238 ;;		_scale
  3239 ;; This function is called by:
  3240 ;;		_LCD_Handler
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text13
  3245  0000C4                     __ptext13:
  3246                           	opt stack 0
  3247  0000C4                     _sprintf:
  3248                           	opt stack 23
  3249                           
  3250                           ;doprnt.c: 494: va_list ap;
  3251                           ;doprnt.c: 499: signed char c;
  3252                           ;doprnt.c: 501: int width;
  3253                           ;doprnt.c: 504: int prec;
  3254                           ;doprnt.c: 508: unsigned short flag;
  3255                           ;doprnt.c: 515: char d;
  3256                           ;doprnt.c: 516: double fval;
  3257                           ;doprnt.c: 517: int exp;
  3258                           ;doprnt.c: 523: union {
  3259                           ;doprnt.c: 524: unsigned long vd;
  3260                           ;doprnt.c: 525: double integ;
  3261                           ;doprnt.c: 526: } tmpval;
  3262                           ;doprnt.c: 528: unsigned long val;
  3263                           ;doprnt.c: 529: unsigned len;
  3264                           ;doprnt.c: 530: const char * cp;
  3265                           ;doprnt.c: 533: *ap = __va_start();
  3266                           
  3267                           ;incstack = 0
  3268  0000C4  0E04               	movlw	low (?_sprintf+4)
  3269  0000C6  0101               	movlb	1	; () banked
  3270  0000C8  6F0C               	movwf	sprintf@ap& (0+255),b
  3271  0000CA  0E01               	movlw	high (?_sprintf+4)
  3272  0000CC  0101               	movlb	1	; () banked
  3273  0000CE  6F0D               	movwf	(sprintf@ap+1)& (0+255),b
  3274                           
  3275                           ;doprnt.c: 536: while(c = *f++) {
  3276  0000D0  EF71  F004         	goto	l5519
  3277  0000D4                     l5321:
  3278                           
  3279                           ; BSR set to: 1
  3280                           ;doprnt.c: 538: if(c != '%')
  3281  0000D4  0E25               	movlw	37
  3282  0000D6  0101               	movlb	1	; () banked
  3283  0000D8  1920               	xorwf	sprintf@c& (0+255),w,b
  3284  0000DA  B4D8               	btfsc	status,2,c
  3285  0000DC  D007               	goto	l5327
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;doprnt.c: 540: {
  3289                           ;doprnt.c: 541: ((*sp++ = (c)));
  3290  0000DE  C100  FFD9         	movff	sprintf@sp,fsr2l
  3291  0000E2  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3292  0000E6  C120  FFDF         	movff	sprintf@c,indf2
  3293  0000EA  D3F8               	goto	l5517
  3294  0000EC                     l5327:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 543: }
  3298                           ;doprnt.c: 548: flag = 0;
  3299  0000EC  0E00               	movlw	0
  3300  0000EE  0101               	movlb	1	; () banked
  3301  0000F0  6F0F               	movwf	(sprintf@flag+1)& (0+255),b
  3302  0000F2  0E00               	movlw	0
  3303  0000F4  6F0E               	movwf	sprintf@flag& (0+255),b
  3304                           
  3305                           ; BSR set to: 1
  3306                           ;doprnt.c: 611: if(*f == '.') {
  3307  0000F6  C102  FFF6         	movff	sprintf@f,tblptrl
  3308  0000FA  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3309  0000FE                     	if	0	;tblptru may be non-zero
  3310  0000FE                     	endif
  3311  0000FE                     	if	0	;tblptru may be non-zero
  3312  0000FE                     	endif
  3313  0000FE  0008               	tblrd		*
  3314  000100  50F5               	movf	tablat,w,c
  3315  000102  0A2E               	xorlw	46
  3316  000104  A4D8               	btfss	status,2,c
  3317  000106  D034               	goto	l5341
  3318                           
  3319                           ; BSR set to: 1
  3320                           ;doprnt.c: 612: flag |= 0x4000;
  3321  000108  0101               	movlb	1	; () banked
  3322  00010A  8D0F               	bsf	(sprintf@flag+1)& (0+255),6,b
  3323                           
  3324                           ;doprnt.c: 613: f++;
  3325  00010C  0101               	movlb	1	; () banked
  3326  00010E  4B02               	infsnz	sprintf@f& (0+255),f,b
  3327  000110  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;doprnt.c: 620: {
  3331                           ;doprnt.c: 621: prec = 0;
  3332  000112  0E00               	movlw	0
  3333  000114  0101               	movlb	1	; () banked
  3334  000116  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  3335  000118  0E00               	movlw	0
  3336  00011A  6F1A               	movwf	sprintf@prec& (0+255),b
  3337                           
  3338                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3339  00011C  D01E               	goto	l5339
  3340  00011E                     l5335:
  3341                           
  3342                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3343  00011E  C11A  F03D         	movff	sprintf@prec,___wmul@multiplier
  3344  000122  C11B  F03E         	movff	sprintf@prec+1,___wmul@multiplier+1
  3345  000126  0E00               	movlw	0
  3346  000128  6E40               	movwf	___wmul@multiplicand+1,c
  3347  00012A  0E0A               	movlw	10
  3348  00012C  6E3F               	movwf	___wmul@multiplicand,c
  3349  00012E  ECE3  F017         	call	___wmul	;wreg free
  3350  000132  C102  FFF6         	movff	sprintf@f,tblptrl
  3351  000136  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3352  00013A                     	if	0	;tblptru may be non-zero
  3353  00013A                     	endif
  3354  00013A                     	if	0	;tblptru may be non-zero
  3355  00013A                     	endif
  3356  00013A  0008               	tblrd		*
  3357  00013C  50F5               	movf	tablat,w,c
  3358  00013E  263D               	addwf	?___wmul,f,c
  3359  000140  0E00               	movlw	0
  3360  000142  223E               	addwfc	?___wmul+1,f,c
  3361  000144  0ED0               	movlw	208
  3362  000146  243D               	addwf	?___wmul,w,c
  3363  000148  0101               	movlb	1	; () banked
  3364  00014A  6F1A               	movwf	sprintf@prec& (0+255),b
  3365  00014C  0EFF               	movlw	255
  3366  00014E  203E               	addwfc	?___wmul+1,w,c
  3367  000150  0101               	movlb	1	; () banked
  3368  000152  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  3369                           
  3370                           ; BSR set to: 1
  3371  000154  0101               	movlb	1	; () banked
  3372  000156  4B02               	infsnz	sprintf@f& (0+255),f,b
  3373  000158  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3374  00015A                     l5339:
  3375                           
  3376                           ; BSR set to: 1
  3377  00015A  C102  FFF6         	movff	sprintf@f,tblptrl
  3378  00015E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3379  000162                     	if	0	;tblptru may be non-zero
  3380  000162                     	endif
  3381  000162                     	if	0	;tblptru may be non-zero
  3382  000162                     	endif
  3383  000162  0008               	tblrd		*
  3384  000164  50F5               	movf	tablat,w,c
  3385  000166  ECF6  F017         	call	_isdigit
  3386  00016A  A0D8               	btfss	status,0,c
  3387  00016C  D00C               	goto	l5349
  3388  00016E  D7D7               	goto	l5335
  3389  000170                     l5341:
  3390                           
  3391                           ;doprnt.c: 626: prec = 0;
  3392  000170  0E00               	movlw	0
  3393  000172  0101               	movlb	1	; () banked
  3394  000174  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  3395  000176  0E00               	movlw	0
  3396  000178  6F1A               	movwf	sprintf@prec& (0+255),b
  3397                           
  3398                           ; BSR set to: 1
  3399                           ;doprnt.c: 628: flag |= 0x1000;
  3400  00017A  0101               	movlb	1	; () banked
  3401  00017C  890F               	bsf	(sprintf@flag+1)& (0+255),4,b
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;doprnt.c: 630: }
  3405                           ;doprnt.c: 635: switch(c = *f++) {
  3406  00017E  D003               	goto	l5349
  3407  000180                     l5345:
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;doprnt.c: 663: flag |= 0x400;
  3411  000180  0101               	movlb	1	; () banked
  3412  000182  850F               	bsf	(sprintf@flag+1)& (0+255),2,b
  3413                           
  3414                           ;doprnt.c: 664: break;
  3415  000184  D013               	goto	l5351
  3416  000186                     l5349:
  3417  000186  C102  FFF6         	movff	sprintf@f,tblptrl
  3418  00018A  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3419  00018E  0101               	movlb	1	; () banked
  3420  000190  4B02               	infsnz	sprintf@f& (0+255),f,b
  3421  000192  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3422  000194                     	if	0	;tblptru may be non-zero
  3423  000194                     	endif
  3424  000194                     	if	0	;tblptru may be non-zero
  3425  000194                     	endif
  3426  000194  0008               	tblrd		*
  3427  000196  CFF5 F120          	movff	tablat,sprintf@c
  3428  00019A  0101               	movlb	1	; () banked
  3429  00019C  5120               	movf	sprintf@c& (0+255),w,b
  3430                           
  3431                           ; Switch size 1, requested type "space"
  3432                           ; Number of cases is 2, Range of values is 0 to 102
  3433                           ; switch strategies available:
  3434                           ; Name         Instructions Cycles
  3435                           ; simple_byte            7     4 (average)
  3436                           ;	Chosen strategy is simple_byte
  3437  00019E  0A00               	xorlw	0	; case 0
  3438  0001A0  B4D8               	btfsc	status,2,c
  3439  0001A2  D3AE               	goto	l5521
  3440  0001A4  0A66               	xorlw	102	; case 102
  3441  0001A6  B4D8               	btfsc	status,2,c
  3442  0001A8  D7EB               	goto	l5345
  3443  0001AA  D39B               	goto	l5519
  3444  0001AC                     l5351:
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;doprnt.c: 825: if(flag & (0x700)) {
  3448  0001AC  0E07               	movlw	7
  3449  0001AE  0101               	movlb	1	; () banked
  3450  0001B0  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  3451  0001B2  B4D8               	btfsc	status,2,c
  3452  0001B4  D33E               	goto	l5499
  3453                           
  3454                           ; BSR set to: 1
  3455                           ;doprnt.c: 827: if(flag & 0x1000)
  3456  0001B6  0101               	movlb	1	; () banked
  3457  0001B8  A90F               	btfss	(sprintf@flag+1)& (0+255),4,b
  3458  0001BA  D005               	goto	l5357
  3459                           
  3460                           ; BSR set to: 1
  3461                           ;doprnt.c: 829: prec = 6;
  3462  0001BC  0E00               	movlw	0
  3463  0001BE  0101               	movlb	1	; () banked
  3464  0001C0  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  3465  0001C2  0E06               	movlw	6
  3466  0001C4  6F1A               	movwf	sprintf@prec& (0+255),b
  3467  0001C6                     l5357:
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3471  0001C6  C10C  FFD9         	movff	sprintf@ap,fsr2l
  3472  0001CA  C10D  FFDA         	movff	sprintf@ap+1,fsr2h
  3473  0001CE  CFDE F11C          	movff	postinc2,sprintf@fval
  3474  0001D2  CFDE F11D          	movff	postinc2,sprintf@fval+1
  3475  0001D6  CFDE F11E          	movff	postinc2,sprintf@fval+2
  3476  0001DA  CFDE F11F          	movff	postinc2,sprintf@fval+3
  3477                           
  3478                           ; BSR set to: 1
  3479  0001DE  0E04               	movlw	4
  3480  0001E0  0101               	movlb	1	; () banked
  3481  0001E2  270C               	addwf	sprintf@ap& (0+255),f,b
  3482  0001E4  0E00               	movlw	0
  3483  0001E6  230D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;doprnt.c: 831: if(fval < 0.0) {
  3487  0001E8  0101               	movlb	1	; () banked
  3488  0001EA  AF1F               	btfss	(sprintf@fval+3)& (0+255),7,b
  3489  0001EC  D015               	goto	l5367
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;doprnt.c: 832: fval = -fval;
  3493  0001EE  C11C  F03D         	movff	sprintf@fval,___flneg@f1
  3494  0001F2  C11D  F03E         	movff	sprintf@fval+1,___flneg@f1+1
  3495  0001F6  C11E  F03F         	movff	sprintf@fval+2,___flneg@f1+2
  3496  0001FA  C11F  F040         	movff	sprintf@fval+3,___flneg@f1+3
  3497  0001FE  EC65  F017         	call	___flneg	;wreg free
  3498  000202  C03D  F11C         	movff	?___flneg,sprintf@fval
  3499  000206  C03E  F11D         	movff	?___flneg+1,sprintf@fval+1
  3500  00020A  C03F  F11E         	movff	?___flneg+2,sprintf@fval+2
  3501  00020E  C040  F11F         	movff	?___flneg+3,sprintf@fval+3
  3502                           
  3503                           ;doprnt.c: 833: flag |= 0x03;
  3504  000212  0E03               	movlw	3
  3505  000214  0101               	movlb	1	; () banked
  3506  000216  130E               	iorwf	sprintf@flag& (0+255),f,b
  3507  000218                     l5367:
  3508                           
  3509                           ; BSR set to: 1
  3510                           ;doprnt.c: 834: }
  3511                           ;doprnt.c: 835: exp = 0;
  3512  000218  0E00               	movlw	0
  3513  00021A  0101               	movlb	1	; () banked
  3514  00021C  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  3515  00021E  0E00               	movlw	0
  3516  000220  6F14               	movwf	sprintf@exp& (0+255),b
  3517                           
  3518                           ; BSR set to: 1
  3519                           ;doprnt.c: 836: if( fval!=0) {
  3520  000222  0101               	movlb	1	; () banked
  3521  000224  511C               	movf	sprintf@fval& (0+255),w,b
  3522  000226  0101               	movlb	1	; () banked
  3523  000228  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3524  00022A  0101               	movlb	1	; () banked
  3525  00022C  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3526  00022E  0101               	movlb	1	; () banked
  3527  000230  111F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3528  000232  B4D8               	btfsc	status,2,c
  3529  000234  D089               	goto	l5395
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3533  000236  0101               	movlb	1	; () banked
  3534  000238  351E               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3535  00023A  351F               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3536  00023C  0F82               	addlw	130
  3537  00023E  0101               	movlb	1	; () banked
  3538  000240  6F14               	movwf	sprintf@exp& (0+255),b
  3539  000242  0101               	movlb	1	; () banked
  3540  000244  6B15               	clrf	(sprintf@exp+1)& (0+255),b
  3541  000246  0EFF               	movlw	255
  3542  000248  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;doprnt.c: 838: exp--;
  3546  00024A  0101               	movlb	1	; () banked
  3547  00024C  0714               	decf	sprintf@exp& (0+255),f,b
  3548  00024E  A0D8               	btfss	status,0,c
  3549  000250  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;doprnt.c: 839: exp *= 3;
  3553  000252  C114  F03D         	movff	sprintf@exp,___wmul@multiplier
  3554  000256  C115  F03E         	movff	sprintf@exp+1,___wmul@multiplier+1
  3555  00025A  0E00               	movlw	0
  3556  00025C  6E40               	movwf	___wmul@multiplicand+1,c
  3557  00025E  0E03               	movlw	3
  3558  000260  6E3F               	movwf	___wmul@multiplicand,c
  3559  000262  ECE3  F017         	call	___wmul	;wreg free
  3560  000266  C03D  F114         	movff	?___wmul,sprintf@exp
  3561  00026A  C03E  F115         	movff	?___wmul+1,sprintf@exp+1
  3562                           
  3563                           ;doprnt.c: 840: exp /= 10;
  3564  00026E  C114  F070         	movff	sprintf@exp,___awdiv@dividend
  3565  000272  C115  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3566  000276  0E00               	movlw	0
  3567  000278  0100               	movlb	0	; () banked
  3568  00027A  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3569  00027C  0E0A               	movlw	10
  3570  00027E  6F72               	movwf	___awdiv@divisor& (0+255),b
  3571  000280  ECDC  F014         	call	___awdiv	;wreg free
  3572  000284  C070  F114         	movff	?___awdiv,sprintf@exp
  3573  000288  C071  F115         	movff	?___awdiv+1,sprintf@exp+1
  3574                           
  3575                           ;doprnt.c: 841: if(exp < 0)
  3576  00028C  0101               	movlb	1	; () banked
  3577  00028E  AF15               	btfss	(sprintf@exp+1)& (0+255),7,b
  3578  000290  D004               	goto	l5383
  3579                           
  3580                           ; BSR set to: 1
  3581                           ;doprnt.c: 842: exp--;
  3582  000292  0101               	movlb	1	; () banked
  3583  000294  0714               	decf	sprintf@exp& (0+255),f,b
  3584  000296  A0D8               	btfss	status,0,c
  3585  000298  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  3586  00029A                     l5383:
  3587                           
  3588                           ; BSR set to: 1
  3589                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3590  00029A  0101               	movlb	1	; () banked
  3591  00029C  5114               	movf	sprintf@exp& (0+255),w,b
  3592  00029E  0800               	sublw	0
  3593  0002A0  EC2E  F009         	call	_scale
  3594  0002A4  C097  F116         	movff	?_scale,sprintf@tmpval
  3595  0002A8  C098  F117         	movff	?_scale+1,sprintf@tmpval+1
  3596  0002AC  C099  F118         	movff	?_scale+2,sprintf@tmpval+2
  3597  0002B0  C09A  F119         	movff	?_scale+3,sprintf@tmpval+3
  3598                           
  3599                           ;doprnt.c: 847: tmpval.integ *= fval;
  3600  0002B4  C116  F07E         	movff	sprintf@tmpval,___flmul@b
  3601  0002B8  C117  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3602  0002BC  C118  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3603  0002C0  C119  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3604  0002C4  C11C  F082         	movff	sprintf@fval,___flmul@a
  3605  0002C8  C11D  F083         	movff	sprintf@fval+1,___flmul@a+1
  3606  0002CC  C11E  F084         	movff	sprintf@fval+2,___flmul@a+2
  3607  0002D0  C11F  F085         	movff	sprintf@fval+3,___flmul@a+3
  3608  0002D4  ECDB  F006         	call	___flmul	;wreg free
  3609  0002D8  C07E  F116         	movff	?___flmul,sprintf@tmpval
  3610  0002DC  C07F  F117         	movff	?___flmul+1,sprintf@tmpval+1
  3611  0002E0  C080  F118         	movff	?___flmul+2,sprintf@tmpval+2
  3612  0002E4  C081  F119         	movff	?___flmul+3,sprintf@tmpval+3
  3613                           
  3614                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3615  0002E8  C116  F03D         	movff	sprintf@tmpval,___flge@ff1
  3616  0002EC  C117  F03E         	movff	sprintf@tmpval+1,___flge@ff1+1
  3617  0002F0  C118  F03F         	movff	sprintf@tmpval+2,___flge@ff1+2
  3618  0002F4  C119  F040         	movff	sprintf@tmpval+3,___flge@ff1+3
  3619  0002F8  0E00               	movlw	0
  3620  0002FA  6E41               	movwf	___flge@ff2,c
  3621  0002FC  0E00               	movlw	0
  3622  0002FE  6E42               	movwf	___flge@ff2+1,c
  3623  000300  0E80               	movlw	128
  3624  000302  6E43               	movwf	___flge@ff2+2,c
  3625  000304  0E3F               	movlw	63
  3626  000306  6E44               	movwf	___flge@ff2+3,c
  3627  000308  ECC3  F010         	call	___flge	;wreg free
  3628  00030C  B0D8               	btfsc	status,0,c
  3629  00030E  D005               	goto	l5391
  3630                           
  3631                           ;doprnt.c: 849: exp--;
  3632  000310  0101               	movlb	1	; () banked
  3633  000312  0714               	decf	sprintf@exp& (0+255),f,b
  3634  000314  A0D8               	btfss	status,0,c
  3635  000316  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  3636  000318  D017               	goto	l5395
  3637  00031A                     l5391:
  3638                           
  3639                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3640  00031A  C116  F03D         	movff	sprintf@tmpval,___flge@ff1
  3641  00031E  C117  F03E         	movff	sprintf@tmpval+1,___flge@ff1+1
  3642  000322  C118  F03F         	movff	sprintf@tmpval+2,___flge@ff1+2
  3643  000326  C119  F040         	movff	sprintf@tmpval+3,___flge@ff1+3
  3644  00032A  0E00               	movlw	0
  3645  00032C  6E41               	movwf	___flge@ff2,c
  3646  00032E  0E00               	movlw	0
  3647  000330  6E42               	movwf	___flge@ff2+1,c
  3648  000332  0E20               	movlw	32
  3649  000334  6E43               	movwf	___flge@ff2+2,c
  3650  000336  0E41               	movlw	65
  3651  000338  6E44               	movwf	___flge@ff2+3,c
  3652  00033A  ECC3  F010         	call	___flge	;wreg free
  3653  00033E  A0D8               	btfss	status,0,c
  3654  000340  D003               	goto	l5395
  3655                           
  3656                           ;doprnt.c: 851: exp++;
  3657  000342  0101               	movlb	1	; () banked
  3658  000344  4B14               	infsnz	sprintf@exp& (0+255),f,b
  3659  000346  2B15               	incf	(sprintf@exp+1)& (0+255),f,b
  3660  000348                     l5395:
  3661                           
  3662                           ;doprnt.c: 852: }
  3663                           ;doprnt.c: 1112: if(prec <= 12)
  3664  000348  0101               	movlb	1	; () banked
  3665  00034A  BF1B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3666  00034C  D008               	goto	l5397
  3667  00034E  0101               	movlb	1	; () banked
  3668  000350  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  3669  000352  E123               	bnz	l5399
  3670  000354  0E0D               	movlw	13
  3671  000356  0101               	movlb	1	; () banked
  3672  000358  5D1A               	subwf	sprintf@prec& (0+255),w,b
  3673  00035A  B0D8               	btfsc	status,0,c
  3674  00035C  D01E               	goto	l5399
  3675  00035E                     l5397:
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;doprnt.c: 1113: fval += fround(prec);
  3679  00035E  C11C  F0A4         	movff	sprintf@fval,___fladd@b
  3680  000362  C11D  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3681  000366  C11E  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3682  00036A  C11F  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3683  00036E  0101               	movlb	1	; () banked
  3684  000370  511A               	movf	sprintf@prec& (0+255),w,b
  3685  000372  EC19  F00D         	call	_fround
  3686  000376  C097  F0A8         	movff	?_fround,___fladd@a
  3687  00037A  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3688  00037E  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3689  000382  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3690  000386  EC87  F004         	call	___fladd	;wreg free
  3691  00038A  C0A4  F11C         	movff	?___fladd,sprintf@fval
  3692  00038E  C0A5  F11D         	movff	?___fladd+1,sprintf@fval+1
  3693  000392  C0A6  F11E         	movff	?___fladd+2,sprintf@fval+2
  3694  000396  C0A7  F11F         	movff	?___fladd+3,sprintf@fval+3
  3695  00039A                     l5399:
  3696                           
  3697                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3698  00039A  0101               	movlb	1	; () banked
  3699  00039C  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3700  00039E  D008               	goto	l5401
  3701  0003A0  0101               	movlb	1	; () banked
  3702  0003A2  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  3703  0003A4  E12E               	bnz	l5407
  3704  0003A6  0E0A               	movlw	10
  3705  0003A8  0101               	movlb	1	; () banked
  3706  0003AA  5D14               	subwf	sprintf@exp& (0+255),w,b
  3707  0003AC  B0D8               	btfsc	status,0,c
  3708  0003AE  D029               	goto	l5407
  3709  0003B0                     l5401:
  3710                           
  3711                           ; BSR set to: 1
  3712  0003B0  0101               	movlb	1	; () banked
  3713  0003B2  511C               	movf	sprintf@fval& (0+255),w,b
  3714  0003B4  0101               	movlb	1	; () banked
  3715  0003B6  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3716  0003B8  0101               	movlb	1	; () banked
  3717  0003BA  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3718  0003BC  0101               	movlb	1	; () banked
  3719  0003BE  111F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3720  0003C0  B4D8               	btfsc	status,2,c
  3721  0003C2  D06B               	goto	l5421
  3722                           
  3723                           ; BSR set to: 1
  3724  0003C4  C11C  F0A0         	movff	sprintf@fval,___fltol@f1
  3725  0003C8  C11D  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3726  0003CC  C11E  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3727  0003D0  C11F  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3728  0003D4  ECA3  F012         	call	___fltol	;wreg free
  3729  0003D8  0100               	movlb	0	; () banked
  3730  0003DA  51A0               	movf	?___fltol& (0+255),w,b
  3731  0003DC  0100               	movlb	0	; () banked
  3732  0003DE  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3733  0003E0  0100               	movlb	0	; () banked
  3734  0003E2  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3735  0003E4  0100               	movlb	0	; () banked
  3736  0003E6  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3737  0003E8  A4D8               	btfss	status,2,c
  3738  0003EA  D057               	goto	l5421
  3739                           
  3740                           ; BSR set to: 0
  3741  0003EC  0101               	movlb	1	; () banked
  3742  0003EE  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3743  0003F0  D054               	goto	l5421
  3744  0003F2  0101               	movlb	1	; () banked
  3745  0003F4  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  3746  0003F6  E105               	bnz	l5407
  3747  0003F8  0E02               	movlw	2
  3748  0003FA  0101               	movlb	1	; () banked
  3749  0003FC  5D14               	subwf	sprintf@exp& (0+255),w,b
  3750  0003FE  A0D8               	btfss	status,0,c
  3751  000400  D04C               	goto	l5421
  3752  000402                     l5407:
  3753                           
  3754                           ; BSR set to: 1
  3755                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3756  000402  C116  F03D         	movff	sprintf@tmpval,___flge@ff1
  3757  000406  C117  F03E         	movff	sprintf@tmpval+1,___flge@ff1+1
  3758  00040A  C118  F03F         	movff	sprintf@tmpval+2,___flge@ff1+2
  3759  00040E  C119  F040         	movff	sprintf@tmpval+3,___flge@ff1+3
  3760  000412  0E5F               	movlw	95
  3761  000414  6E41               	movwf	___flge@ff2,c
  3762  000416  0E70               	movlw	112
  3763  000418  6E42               	movwf	___flge@ff2+1,c
  3764  00041A  0E89               	movlw	137
  3765  00041C  6E43               	movwf	___flge@ff2+2,c
  3766  00041E  0E40               	movlw	64
  3767  000420  6E44               	movwf	___flge@ff2+3,c
  3768  000422  ECC3  F010         	call	___flge	;wreg free
  3769  000426  B0D8               	btfsc	status,0,c
  3770  000428  D003               	goto	l5411
  3771                           
  3772                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3773  00042A  0101               	movlb	1	; () banked
  3774  00042C  0EF7               	movlw	247
  3775  00042E  D002               	goto	L3
  3776  000430                     l5411:
  3777                           
  3778                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3779  000430  0101               	movlb	1	; () banked
  3780  000432  0EF8               	movlw	248
  3781  000434                     L3:
  3782  000434  2714               	addwf	sprintf@exp& (0+255),f,b
  3783  000436  0EFF               	movlw	255
  3784  000438  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3788                           
  3789                           ; BSR set to: 1
  3790  00043A  0101               	movlb	1	; () banked
  3791  00043C  5114               	movf	sprintf@exp& (0+255),w,b
  3792  00043E  EC2E  F009         	call	_scale
  3793  000442  C097  F116         	movff	?_scale,sprintf@tmpval
  3794  000446  C098  F117         	movff	?_scale+1,sprintf@tmpval+1
  3795  00044A  C099  F118         	movff	?_scale+2,sprintf@tmpval+2
  3796  00044E  C09A  F119         	movff	?_scale+3,sprintf@tmpval+3
  3797  000452  C11C  F03D         	movff	sprintf@fval,__div_to_l_@f1
  3798  000456  C11D  F03E         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3799  00045A  C11E  F03F         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3800  00045E  C11F  F040         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3801  000462  C116  F041         	movff	sprintf@tmpval,__div_to_l_@f2
  3802  000466  C117  F042         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3803  00046A  C118  F043         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3804  00046E  C119  F044         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3805  000472  EC6D  F011         	call	__div_to_l_	;wreg free
  3806  000476  C03D  F110         	movff	?__div_to_l_,sprintf@val
  3807  00047A  C03E  F111         	movff	?__div_to_l_+1,sprintf@val+1
  3808  00047E  C03F  F112         	movff	?__div_to_l_+2,sprintf@val+2
  3809  000482  C040  F113         	movff	?__div_to_l_+3,sprintf@val+3
  3810                           
  3811                           ;doprnt.c: 1129: fval = 0.0;
  3812  000486  0E00               	movlw	0
  3813  000488  0101               	movlb	1	; () banked
  3814  00048A  6F1C               	movwf	sprintf@fval& (0+255),b
  3815  00048C  0E00               	movlw	0
  3816  00048E  6F1D               	movwf	(sprintf@fval+1)& (0+255),b
  3817  000490  0E00               	movlw	0
  3818  000492  6F1E               	movwf	(sprintf@fval+2)& (0+255),b
  3819  000494  0E00               	movlw	0
  3820  000496  6F1F               	movwf	(sprintf@fval+3)& (0+255),b
  3821                           
  3822                           ;doprnt.c: 1130: } else {
  3823  000498  D03C               	goto	l5425
  3824  00049A                     l5421:
  3825                           
  3826                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3827  00049A  C11C  F0A0         	movff	sprintf@fval,___fltol@f1
  3828  00049E  C11D  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3829  0004A2  C11E  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3830  0004A6  C11F  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3831  0004AA  ECA3  F012         	call	___fltol	;wreg free
  3832  0004AE  C0A0  F110         	movff	?___fltol,sprintf@val
  3833  0004B2  C0A1  F111         	movff	?___fltol+1,sprintf@val+1
  3834  0004B6  C0A2  F112         	movff	?___fltol+2,sprintf@val+2
  3835  0004BA  C0A3  F113         	movff	?___fltol+3,sprintf@val+3
  3836                           
  3837                           ;doprnt.c: 1132: fval -= (double)val;
  3838  0004BE  C11C  F0B8         	movff	sprintf@fval,___flsub@b
  3839  0004C2  C11D  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3840  0004C6  C11E  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3841  0004CA  C11F  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3842  0004CE  C110  F070         	movff	sprintf@val,___xxtofl@val
  3843  0004D2  C111  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3844  0004D6  C112  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3845  0004DA  C113  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3846  0004DE  0E00               	movlw	0
  3847  0004E0  EC74  F00E         	call	___xxtofl
  3848  0004E4  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3849  0004E8  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3850  0004EC  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3851  0004F0  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3852  0004F4  EC91  F016         	call	___flsub	;wreg free
  3853  0004F8  C0B8  F11C         	movff	?___flsub,sprintf@fval
  3854  0004FC  C0B9  F11D         	movff	?___flsub+1,sprintf@fval+1
  3855  000500  C0BA  F11E         	movff	?___flsub+2,sprintf@fval+2
  3856  000504  C0BB  F11F         	movff	?___flsub+3,sprintf@fval+3
  3857                           
  3858                           ;doprnt.c: 1133: exp = 0;
  3859  000508  0E00               	movlw	0
  3860  00050A  0101               	movlb	1	; () banked
  3861  00050C  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  3862  00050E  0E00               	movlw	0
  3863  000510  6F14               	movwf	sprintf@exp& (0+255),b
  3864  000512                     l5425:
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;doprnt.c: 1134: }
  3868                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3869  000512  0E01               	movlw	1
  3870  000514  0101               	movlb	1	; () banked
  3871  000516  6F20               	movwf	sprintf@c& (0+255),b
  3872  000518                     l5427:
  3873                           
  3874                           ; BSR set to: 1
  3875  000518  0E0A               	movlw	10
  3876  00051A  0101               	movlb	1	; () banked
  3877  00051C  1920               	xorwf	sprintf@c& (0+255),w,b
  3878  00051E  B4D8               	btfsc	status,2,c
  3879  000520  D01E               	goto	l5439
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;doprnt.c: 1137: if(val < dpowers[c])
  3883                           
  3884                           ; BSR set to: 1
  3885                           
  3886                           ; BSR set to: 1
  3887  000522  0101               	movlb	1	; () banked
  3888  000524  5120               	movf	sprintf@c& (0+255),w,b
  3889  000526  0D04               	mullw	4
  3890  000528  0E53               	movlw	low _dpowers
  3891  00052A  24F3               	addwf	prodl,w,c
  3892  00052C  6EF6               	movwf	tblptrl,c
  3893  00052E  0E3F               	movlw	high _dpowers
  3894  000530  20F4               	addwfc	prodh,w,c
  3895  000532  6EF7               	movwf	tblptrh,c
  3896  000534                     	if	0	;There are less than 3 active tblptr bytes
  3897  000534                     	endif
  3898  000534  0009               	tblrd		*+
  3899  000536  50F5               	movf	tablat,w,c
  3900  000538  0101               	movlb	1	; () banked
  3901  00053A  5D10               	subwf	sprintf@val& (0+255),w,b
  3902  00053C  0009               	tblrd		*+
  3903  00053E  50F5               	movf	tablat,w,c
  3904  000540  0101               	movlb	1	; () banked
  3905  000542  5911               	subwfb	(sprintf@val+1)& (0+255),w,b
  3906  000544  0009               	tblrd		*+
  3907  000546  50F5               	movf	tablat,w,c
  3908  000548  0101               	movlb	1	; () banked
  3909  00054A  5912               	subwfb	(sprintf@val+2)& (0+255),w,b
  3910  00054C  0009               	tblrd		*+
  3911  00054E  50F5               	movf	tablat,w,c
  3912  000550  0101               	movlb	1	; () banked
  3913  000552  5913               	subwfb	(sprintf@val+3)& (0+255),w,b
  3914  000554  A0D8               	btfss	status,0,c
  3915  000556  D003               	goto	l5439
  3916                           
  3917                           ; BSR set to: 1
  3918                           
  3919                           ; BSR set to: 1
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;doprnt.c: 1138: break;
  3923  000558  0101               	movlb	1	; () banked
  3924  00055A  2B20               	incf	sprintf@c& (0+255),f,b
  3925  00055C  D7DD               	goto	l5427
  3926  00055E                     l5439:
  3927                           
  3928                           ; BSR set to: 1
  3929                           ;doprnt.c: 1175: {
  3930                           ;doprnt.c: 1188: if(flag & 0x03)
  3931  00055E  0E03               	movlw	3
  3932  000560  0101               	movlb	1	; () banked
  3933  000562  150E               	andwf	sprintf@flag& (0+255),w,b
  3934  000564  0100               	movlb	0	; () banked
  3935  000566  6FC0               	movwf	??_sprintf& (0+255),b
  3936  000568  0E00               	movlw	0
  3937  00056A  0101               	movlb	1	; () banked
  3938  00056C  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  3939  00056E  0100               	movlb	0	; () banked
  3940  000570  6FC1               	movwf	(??_sprintf+1)& (0+255),b
  3941  000572  0100               	movlb	0	; () banked
  3942  000574  51C0               	movf	??_sprintf& (0+255),w,b
  3943  000576  0100               	movlb	0	; () banked
  3944  000578  11C1               	iorwf	(??_sprintf+1)& (0+255),w,b
  3945  00057A  B4D8               	btfsc	status,2,c
  3946  00057C  D054               	goto	l5453
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3950  00057E  C100  FFD9         	movff	sprintf@sp,fsr2l
  3951  000582  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3952  000586  0E2D               	movlw	45
  3953  000588  D04C               	goto	L4
  3954  00058A                     l5443:
  3955                           
  3956                           ; BSR set to: 0
  3957  00058A  0101               	movlb	1	; () banked
  3958  00058C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  3959  00058E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;doprnt.c: 1195: }
  3963                           ;doprnt.c: 1196: while(c--) {
  3964  000590  D04A               	goto	l5453
  3965  000592                     l5445:
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;doprnt.c: 1200: {
  3969                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3970  000592  C110  F03D         	movff	sprintf@val,___lldiv@dividend
  3971  000596  C111  F03E         	movff	sprintf@val+1,___lldiv@dividend+1
  3972  00059A  C112  F03F         	movff	sprintf@val+2,___lldiv@dividend+2
  3973  00059E  C113  F040         	movff	sprintf@val+3,___lldiv@dividend+3
  3974  0005A2  0101               	movlb	1	; () banked
  3975  0005A4  5120               	movf	sprintf@c& (0+255),w,b
  3976  0005A6  0D04               	mullw	4
  3977  0005A8  0E53               	movlw	low _dpowers
  3978  0005AA  24F3               	addwf	prodl,w,c
  3979  0005AC  6EF6               	movwf	tblptrl,c
  3980  0005AE  0E3F               	movlw	high _dpowers
  3981  0005B0  20F4               	addwfc	prodh,w,c
  3982  0005B2  6EF7               	movwf	tblptrh,c
  3983  0005B4                     	if	0	;There are less than 3 active tblptr bytes
  3984  0005B4                     	endif
  3985  0005B4  0009               	tblrd		*+
  3986  0005B6  CFF5 F041          	movff	tablat,___lldiv@divisor
  3987  0005BA  0009               	tblrd		*+
  3988  0005BC  CFF5 F042          	movff	tablat,___lldiv@divisor+1
  3989  0005C0  0009               	tblrd		*+
  3990  0005C2  CFF5 F043          	movff	tablat,___lldiv@divisor+2
  3991  0005C6  000A               	tblrd		*-
  3992  0005C8  CFF5 F044          	movff	tablat,___lldiv@divisor+3
  3993  0005CC  EC86  F015         	call	___lldiv	;wreg free
  3994  0005D0  C03D  F116         	movff	?___lldiv,sprintf@tmpval
  3995  0005D4  C03E  F117         	movff	?___lldiv+1,sprintf@tmpval+1
  3996  0005D8  C03F  F118         	movff	?___lldiv+2,sprintf@tmpval+2
  3997  0005DC  C040  F119         	movff	?___lldiv+3,sprintf@tmpval+3
  3998                           
  3999                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4000  0005E0  C116  F03D         	movff	sprintf@tmpval,___llmod@dividend
  4001  0005E4  C117  F03E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4002  0005E8  C118  F03F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4003  0005EC  C119  F040         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4004  0005F0  0E0A               	movlw	10
  4005  0005F2  6E41               	movwf	___llmod@divisor,c
  4006  0005F4  0E00               	movlw	0
  4007  0005F6  6E42               	movwf	___llmod@divisor+1,c
  4008  0005F8  0E00               	movlw	0
  4009  0005FA  6E43               	movwf	___llmod@divisor+2,c
  4010  0005FC  0E00               	movlw	0
  4011  0005FE  6E44               	movwf	___llmod@divisor+3,c
  4012  000600  EC05  F016         	call	___llmod	;wreg free
  4013  000604  C03D  F116         	movff	?___llmod,sprintf@tmpval
  4014  000608  C03E  F117         	movff	?___llmod+1,sprintf@tmpval+1
  4015  00060C  C03F  F118         	movff	?___llmod+2,sprintf@tmpval+2
  4016  000610  C040  F119         	movff	?___llmod+3,sprintf@tmpval+3
  4017                           
  4018                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4019  000614  0101               	movlb	1	; () banked
  4020  000616  5116               	movf	sprintf@tmpval& (0+255),w,b
  4021  000618  0F30               	addlw	48
  4022  00061A  C100  FFD9         	movff	sprintf@sp,fsr2l
  4023  00061E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4024  000622                     L4:
  4025  000622  6EDF               	movwf	indf2,c
  4026  000624  D7B2               	goto	l5443
  4027  000626                     l5453:
  4028  000626  0101               	movlb	1	; () banked
  4029  000628  0720               	decf	sprintf@c& (0+255),f,b
  4030  00062A  0101               	movlb	1	; () banked
  4031  00062C  2920               	incf	sprintf@c& (0+255),w,b
  4032  00062E  B4D8               	btfsc	status,2,c
  4033  000630  D00E               	goto	l5461
  4034  000632  D7AF               	goto	l5445
  4035  000634                     l5455:
  4036                           
  4037                           ; BSR set to: 1
  4038                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4039  000634  C100  FFD9         	movff	sprintf@sp,fsr2l
  4040  000638  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4041  00063C  0E30               	movlw	48
  4042  00063E  6EDF               	movwf	indf2,c
  4043                           
  4044                           ; BSR set to: 1
  4045  000640  0101               	movlb	1	; () banked
  4046  000642  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4047  000644  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4048                           
  4049                           ; BSR set to: 1
  4050                           ;doprnt.c: 1209: exp--;
  4051  000646  0101               	movlb	1	; () banked
  4052  000648  0714               	decf	sprintf@exp& (0+255),f,b
  4053  00064A  A0D8               	btfss	status,0,c
  4054  00064C  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  4055  00064E                     l5461:
  4056                           
  4057                           ; BSR set to: 1
  4058  00064E  0101               	movlb	1	; () banked
  4059  000650  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4060  000652  D007               	goto	l5463
  4061  000654  0101               	movlb	1	; () banked
  4062  000656  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  4063  000658  E1ED               	bnz	l5455
  4064  00065A  0101               	movlb	1	; () banked
  4065  00065C  0514               	decf	sprintf@exp& (0+255),w,b
  4066  00065E  B0D8               	btfsc	status,0,c
  4067  000660  D7E9               	goto	l5455
  4068  000662                     l5463:
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;doprnt.c: 1210: }
  4072                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4073  000662  0101               	movlb	1	; () banked
  4074  000664  BF1B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4075  000666  D00C               	goto	l387
  4076  000668  0101               	movlb	1	; () banked
  4077  00066A  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  4078  00066C  E105               	bnz	u6330
  4079  00066E  0E09               	movlw	9
  4080  000670  0101               	movlb	1	; () banked
  4081  000672  5D1A               	subwf	sprintf@prec& (0+255),w,b
  4082  000674  A0D8               	btfss	status,0,c
  4083  000676  D004               	goto	l387
  4084  000678                     u6330:
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4088  000678  0E08               	movlw	8
  4089  00067A  0101               	movlb	1	; () banked
  4090  00067C  6F20               	movwf	sprintf@c& (0+255),b
  4091  00067E  D002               	goto	l5467
  4092  000680                     l387:
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;doprnt.c: 1213: else
  4096                           ;doprnt.c: 1214: c = prec;
  4097  000680  C11A  F120         	movff	sprintf@prec,sprintf@c
  4098  000684                     l5467:
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;doprnt.c: 1215: prec -= c;
  4102  000684  0101               	movlb	1	; () banked
  4103  000686  5120               	movf	sprintf@c& (0+255),w,b
  4104  000688  0101               	movlb	1	; () banked
  4105  00068A  5F1A               	subwf	sprintf@prec& (0+255),f,b
  4106  00068C  0E00               	movlw	0
  4107  00068E  0101               	movlb	1	; () banked
  4108  000690  BF20               	btfsc	sprintf@c& (0+255),7,b
  4109  000692  0EFF               	movlw	255
  4110  000694  0101               	movlb	1	; () banked
  4111  000696  5B1B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4112                           
  4113                           ; BSR set to: 1
  4114                           ;doprnt.c: 1219: if(c)
  4115  000698  0101               	movlb	1	; () banked
  4116  00069A  5120               	movf	sprintf@c& (0+255),w,b
  4117  00069C  0101               	movlb	1	; () banked
  4118  00069E  B4D8               	btfsc	status,2,c
  4119  0006A0  D009               	goto	l5475
  4120                           
  4121                           ; BSR set to: 1
  4122                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4123  0006A2  C100  FFD9         	movff	sprintf@sp,fsr2l
  4124  0006A6  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4125  0006AA  0E2E               	movlw	46
  4126  0006AC  6EDF               	movwf	indf2,c
  4127                           
  4128                           ; BSR set to: 1
  4129  0006AE  0101               	movlb	1	; () banked
  4130  0006B0  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4131  0006B2  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4132  0006B4                     l5475:
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4136  0006B4  0101               	movlb	1	; () banked
  4137  0006B6  5120               	movf	sprintf@c& (0+255),w,b
  4138  0006B8  EC2E  F009         	call	_scale
  4139  0006BC  C097  F108         	movff	?_scale,_sprintf$2402
  4140  0006C0  C098  F109         	movff	?_scale+1,_sprintf$2402+1
  4141  0006C4  C099  F10A         	movff	?_scale+2,_sprintf$2402+2
  4142  0006C8  C09A  F10B         	movff	?_scale+3,_sprintf$2402+3
  4143                           
  4144                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4145  0006CC  C11C  F082         	movff	sprintf@fval,___flmul@a
  4146  0006D0  C11D  F083         	movff	sprintf@fval+1,___flmul@a+1
  4147  0006D4  C11E  F084         	movff	sprintf@fval+2,___flmul@a+2
  4148  0006D8  C11F  F085         	movff	sprintf@fval+3,___flmul@a+3
  4149  0006DC  C108  F07E         	movff	_sprintf$2402,___flmul@b
  4150  0006E0  C109  F07F         	movff	_sprintf$2402+1,___flmul@b+1
  4151  0006E4  C10A  F080         	movff	_sprintf$2402+2,___flmul@b+2
  4152  0006E8  C10B  F081         	movff	_sprintf$2402+3,___flmul@b+3
  4153  0006EC  ECDB  F006         	call	___flmul	;wreg free
  4154  0006F0  C07E  F0A0         	movff	?___flmul,___fltol@f1
  4155  0006F4  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  4156  0006F8  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  4157  0006FC  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  4158  000700  ECA3  F012         	call	___fltol	;wreg free
  4159  000704  C0A0  F110         	movff	?___fltol,sprintf@val
  4160  000708  C0A1  F111         	movff	?___fltol+1,sprintf@val+1
  4161  00070C  C0A2  F112         	movff	?___fltol+2,sprintf@val+2
  4162  000710  C0A3  F113         	movff	?___fltol+3,sprintf@val+3
  4163                           
  4164                           ;doprnt.c: 1228: while(c--) {
  4165  000714  D073               	goto	l5489
  4166  000716                     l5479:
  4167                           
  4168                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4169  000716  C110  F03D         	movff	sprintf@val,___lldiv@dividend
  4170  00071A  C111  F03E         	movff	sprintf@val+1,___lldiv@dividend+1
  4171  00071E  C112  F03F         	movff	sprintf@val+2,___lldiv@dividend+2
  4172  000722  C113  F040         	movff	sprintf@val+3,___lldiv@dividend+3
  4173  000726  0101               	movlb	1	; () banked
  4174  000728  5120               	movf	sprintf@c& (0+255),w,b
  4175  00072A  0D04               	mullw	4
  4176  00072C  0E53               	movlw	low _dpowers
  4177  00072E  24F3               	addwf	prodl,w,c
  4178  000730  6EF6               	movwf	tblptrl,c
  4179  000732  0E3F               	movlw	high _dpowers
  4180  000734  20F4               	addwfc	prodh,w,c
  4181  000736  6EF7               	movwf	tblptrh,c
  4182  000738                     	if	0	;There are less than 3 active tblptr bytes
  4183  000738                     	endif
  4184  000738  0009               	tblrd		*+
  4185  00073A  CFF5 F041          	movff	tablat,___lldiv@divisor
  4186  00073E  0009               	tblrd		*+
  4187  000740  CFF5 F042          	movff	tablat,___lldiv@divisor+1
  4188  000744  0009               	tblrd		*+
  4189  000746  CFF5 F043          	movff	tablat,___lldiv@divisor+2
  4190  00074A  000A               	tblrd		*-
  4191  00074C  CFF5 F044          	movff	tablat,___lldiv@divisor+3
  4192  000750  EC86  F015         	call	___lldiv	;wreg free
  4193  000754  C03D  F116         	movff	?___lldiv,sprintf@tmpval
  4194  000758  C03E  F117         	movff	?___lldiv+1,sprintf@tmpval+1
  4195  00075C  C03F  F118         	movff	?___lldiv+2,sprintf@tmpval+2
  4196  000760  C040  F119         	movff	?___lldiv+3,sprintf@tmpval+3
  4197                           
  4198                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4199  000764  C116  F03D         	movff	sprintf@tmpval,___llmod@dividend
  4200  000768  C117  F03E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4201  00076C  C118  F03F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4202  000770  C119  F040         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4203  000774  0E0A               	movlw	10
  4204  000776  6E41               	movwf	___llmod@divisor,c
  4205  000778  0E00               	movlw	0
  4206  00077A  6E42               	movwf	___llmod@divisor+1,c
  4207  00077C  0E00               	movlw	0
  4208  00077E  6E43               	movwf	___llmod@divisor+2,c
  4209  000780  0E00               	movlw	0
  4210  000782  6E44               	movwf	___llmod@divisor+3,c
  4211  000784  EC05  F016         	call	___llmod	;wreg free
  4212  000788  C03D  F116         	movff	?___llmod,sprintf@tmpval
  4213  00078C  C03E  F117         	movff	?___llmod+1,sprintf@tmpval+1
  4214  000790  C03F  F118         	movff	?___llmod+2,sprintf@tmpval+2
  4215  000794  C040  F119         	movff	?___llmod+3,sprintf@tmpval+3
  4216                           
  4217                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4218  000798  0101               	movlb	1	; () banked
  4219  00079A  5116               	movf	sprintf@tmpval& (0+255),w,b
  4220  00079C  0F30               	addlw	48
  4221  00079E  C100  FFD9         	movff	sprintf@sp,fsr2l
  4222  0007A2  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4223  0007A6  6EDF               	movwf	indf2,c
  4224                           
  4225                           ; BSR set to: 1
  4226  0007A8  0101               	movlb	1	; () banked
  4227  0007AA  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4228  0007AC  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4229                           
  4230                           ; BSR set to: 1
  4231                           ;doprnt.c: 1232: val %= dpowers[c];
  4232  0007AE  C110  F03D         	movff	sprintf@val,___llmod@dividend
  4233  0007B2  C111  F03E         	movff	sprintf@val+1,___llmod@dividend+1
  4234  0007B6  C112  F03F         	movff	sprintf@val+2,___llmod@dividend+2
  4235  0007BA  C113  F040         	movff	sprintf@val+3,___llmod@dividend+3
  4236  0007BE  0101               	movlb	1	; () banked
  4237  0007C0  5120               	movf	sprintf@c& (0+255),w,b
  4238  0007C2  0D04               	mullw	4
  4239  0007C4  0E53               	movlw	low _dpowers
  4240  0007C6  24F3               	addwf	prodl,w,c
  4241  0007C8  6EF6               	movwf	tblptrl,c
  4242  0007CA  0E3F               	movlw	high _dpowers
  4243  0007CC  20F4               	addwfc	prodh,w,c
  4244  0007CE  6EF7               	movwf	tblptrh,c
  4245  0007D0                     	if	0	;There are less than 3 active tblptr bytes
  4246  0007D0                     	endif
  4247  0007D0  0009               	tblrd		*+
  4248  0007D2  CFF5 F041          	movff	tablat,___llmod@divisor
  4249  0007D6  0009               	tblrd		*+
  4250  0007D8  CFF5 F042          	movff	tablat,___llmod@divisor+1
  4251  0007DC  0009               	tblrd		*+
  4252  0007DE  CFF5 F043          	movff	tablat,___llmod@divisor+2
  4253  0007E2  000A               	tblrd		*-
  4254  0007E4  CFF5 F044          	movff	tablat,___llmod@divisor+3
  4255  0007E8  EC05  F016         	call	___llmod	;wreg free
  4256  0007EC  C03D  F110         	movff	?___llmod,sprintf@val
  4257  0007F0  C03E  F111         	movff	?___llmod+1,sprintf@val+1
  4258  0007F4  C03F  F112         	movff	?___llmod+2,sprintf@val+2
  4259  0007F8  C040  F113         	movff	?___llmod+3,sprintf@val+3
  4260  0007FC                     l5489:
  4261  0007FC  0101               	movlb	1	; () banked
  4262  0007FE  0720               	decf	sprintf@c& (0+255),f,b
  4263  000800  0101               	movlb	1	; () banked
  4264  000802  2920               	incf	sprintf@c& (0+255),w,b
  4265  000804  B4D8               	btfsc	status,2,c
  4266  000806  D00E               	goto	l5497
  4267  000808  D786               	goto	l5479
  4268  00080A                     l5491:
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4272  00080A  C100  FFD9         	movff	sprintf@sp,fsr2l
  4273  00080E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4274  000812  0E30               	movlw	48
  4275  000814  6EDF               	movwf	indf2,c
  4276                           
  4277                           ; BSR set to: 1
  4278  000816  0101               	movlb	1	; () banked
  4279  000818  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4280  00081A  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4281                           
  4282                           ; BSR set to: 1
  4283                           ;doprnt.c: 1237: prec--;
  4284  00081C  0101               	movlb	1	; () banked
  4285  00081E  071A               	decf	sprintf@prec& (0+255),f,b
  4286  000820  A0D8               	btfss	status,0,c
  4287  000822  071B               	decf	(sprintf@prec+1)& (0+255),f,b
  4288  000824                     l5497:
  4289                           
  4290                           ; BSR set to: 1
  4291  000824  0101               	movlb	1	; () banked
  4292  000826  511A               	movf	sprintf@prec& (0+255),w,b
  4293  000828  0101               	movlb	1	; () banked
  4294  00082A  111B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4295  00082C  B4D8               	btfsc	status,2,c
  4296  00082E  D059               	goto	l5519
  4297  000830  D7EC               	goto	l5491
  4298  000832                     l5499:
  4299                           
  4300                           ; BSR set to: 1
  4301                           ;doprnt.c: 1246: }
  4302                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4303  000832  0101               	movlb	1	; () banked
  4304  000834  511A               	movf	sprintf@prec& (0+255),w,b
  4305  000836  0101               	movlb	1	; () banked
  4306  000838  111B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4307  00083A  A4D8               	btfss	status,2,c
  4308  00083C  D00D               	goto	l5505
  4309                           
  4310                           ; BSR set to: 1
  4311  00083E  0101               	movlb	1	; () banked
  4312  000840  5110               	movf	sprintf@val& (0+255),w,b
  4313  000842  0101               	movlb	1	; () banked
  4314  000844  1111               	iorwf	(sprintf@val+1)& (0+255),w,b
  4315  000846  0101               	movlb	1	; () banked
  4316  000848  1112               	iorwf	(sprintf@val+2)& (0+255),w,b
  4317  00084A  0101               	movlb	1	; () banked
  4318  00084C  1113               	iorwf	(sprintf@val+3)& (0+255),w,b
  4319  00084E  A4D8               	btfss	status,2,c
  4320  000850  D003               	goto	l5505
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;doprnt.c: 1291: prec++;
  4324  000852  0101               	movlb	1	; () banked
  4325  000854  4B1A               	infsnz	sprintf@prec& (0+255),f,b
  4326  000856  2B1B               	incf	(sprintf@prec+1)& (0+255),f,b
  4327  000858                     l5505:
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;doprnt.c: 1339: if(c < prec)
  4331  000858  0E80               	movlw	128
  4332  00085A  0101               	movlb	1	; () banked
  4333  00085C  BF20               	btfsc	sprintf@c& (0+255),7,b
  4334  00085E  0E7F               	movlw	127
  4335  000860  0100               	movlb	0	; () banked
  4336  000862  6FC0               	movwf	??_sprintf& (0+255),b
  4337  000864  0101               	movlb	1	; () banked
  4338  000866  511A               	movf	sprintf@prec& (0+255),w,b
  4339  000868  0101               	movlb	1	; () banked
  4340  00086A  5D20               	subwf	sprintf@c& (0+255),w,b
  4341  00086C  0101               	movlb	1	; () banked
  4342  00086E  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  4343  000870  0A80               	xorlw	128
  4344  000872  0100               	movlb	0	; () banked
  4345  000874  59C0               	subwfb	??_sprintf& (0+255),w,b
  4346  000876  B0D8               	btfsc	status,0,c
  4347  000878  D003               	goto	l5509
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;doprnt.c: 1340: c = prec;
  4351  00087A  C11A  F120         	movff	sprintf@prec,sprintf@c
  4352  00087E  D018               	goto	l5513
  4353  000880                     l5509:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;doprnt.c: 1341: else if(prec < c)
  4357  000880  0101               	movlb	1	; () banked
  4358  000882  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  4359  000884  0A80               	xorlw	128
  4360  000886  0100               	movlb	0	; () banked
  4361  000888  6FC0               	movwf	??_sprintf& (0+255),b
  4362  00088A  0101               	movlb	1	; () banked
  4363  00088C  5120               	movf	sprintf@c& (0+255),w,b
  4364  00088E  0101               	movlb	1	; () banked
  4365  000890  5D1A               	subwf	sprintf@prec& (0+255),w,b
  4366  000892  0E80               	movlw	128
  4367  000894  0101               	movlb	1	; () banked
  4368  000896  BF20               	btfsc	sprintf@c& (0+255),7,b
  4369  000898  0E7F               	movlw	127
  4370  00089A  0100               	movlb	0	; () banked
  4371  00089C  59C0               	subwfb	??_sprintf& (0+255),w,b
  4372  00089E  B0D8               	btfsc	status,0,c
  4373  0008A0  D007               	goto	l5513
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;doprnt.c: 1342: prec = c;
  4377  0008A2  0101               	movlb	1	; () banked
  4378  0008A4  5120               	movf	sprintf@c& (0+255),w,b
  4379  0008A6  0101               	movlb	1	; () banked
  4380  0008A8  6F1A               	movwf	sprintf@prec& (0+255),b
  4381  0008AA  6B1B               	clrf	(sprintf@prec+1)& (0+255),b
  4382  0008AC  BF1A               	btfsc	sprintf@prec& (0+255),7,b
  4383  0008AE  071B               	decf	(sprintf@prec+1)& (0+255),f,b
  4384  0008B0                     l5513:
  4385                           
  4386                           ;doprnt.c: 1422: {
  4387                           ;doprnt.c: 1438: if(flag & 0x03)
  4388  0008B0  0E03               	movlw	3
  4389  0008B2  0101               	movlb	1	; () banked
  4390  0008B4  150E               	andwf	sprintf@flag& (0+255),w,b
  4391  0008B6  0100               	movlb	0	; () banked
  4392  0008B8  6FC0               	movwf	??_sprintf& (0+255),b
  4393  0008BA  0E00               	movlw	0
  4394  0008BC  0101               	movlb	1	; () banked
  4395  0008BE  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  4396  0008C0  0100               	movlb	0	; () banked
  4397  0008C2  6FC1               	movwf	(??_sprintf+1)& (0+255),b
  4398  0008C4  0100               	movlb	0	; () banked
  4399  0008C6  51C0               	movf	??_sprintf& (0+255),w,b
  4400  0008C8  0100               	movlb	0	; () banked
  4401  0008CA  11C1               	iorwf	(??_sprintf+1)& (0+255),w,b
  4402  0008CC  B4D8               	btfsc	status,2,c
  4403  0008CE  D009               	goto	l5519
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4407  0008D0  C100  FFD9         	movff	sprintf@sp,fsr2l
  4408  0008D4  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4409  0008D8  0E2D               	movlw	45
  4410  0008DA  6EDF               	movwf	indf2,c
  4411  0008DC                     l5517:
  4412                           
  4413                           ; BSR set to: 0
  4414  0008DC  0101               	movlb	1	; () banked
  4415  0008DE  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4416  0008E0  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4417  0008E2                     l5519:
  4418  0008E2  C102  FFF6         	movff	sprintf@f,tblptrl
  4419  0008E6  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4420  0008EA  0101               	movlb	1	; () banked
  4421  0008EC  4B02               	infsnz	sprintf@f& (0+255),f,b
  4422  0008EE  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4423  0008F0                     	if	0	;tblptru may be non-zero
  4424  0008F0                     	endif
  4425  0008F0                     	if	0	;tblptru may be non-zero
  4426  0008F0                     	endif
  4427  0008F0  0008               	tblrd		*
  4428  0008F2  CFF5 F120          	movff	tablat,sprintf@c
  4429  0008F6  0101               	movlb	1	; () banked
  4430  0008F8  5120               	movf	sprintf@c& (0+255),w,b
  4431  0008FA  A4D8               	btfss	status,2,c
  4432  0008FC  EF6A  F000         	goto	l5321
  4433  000900                     l5521:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;doprnt.c: 1538: *sp = 0;
  4437  000900  C100  FFD9         	movff	sprintf@sp,fsr2l
  4438  000904  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4439  000908  0E00               	movlw	0
  4440  00090A  6EDF               	movwf	indf2,c
  4441  00090C  0012               	return	
  4442  00090E                     __end_of_sprintf:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           prodh	equ	0xFF4
  4449                           prodl	equ	0xFF3
  4450                           intcon	equ	0xFF2
  4451                           postinc0	equ	0xFEE
  4452                           wreg	equ	0xFE8
  4453                           indf1	equ	0xFE7
  4454                           postinc1	equ	0xFE6
  4455                           fsr1h	equ	0xFE2
  4456                           fsr1l	equ	0xFE1
  4457                           indf2	equ	0xFDF
  4458                           postinc2	equ	0xFDE
  4459                           fsr2h	equ	0xFDA
  4460                           fsr2l	equ	0xFD9
  4461                           status	equ	0xFD8
  4462                           
  4463 ;; *************** function _scale *****************
  4464 ;; Defined at:
  4465 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  scl             1    wreg     char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  scl             1   63[BANK0 ] char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  4   55[BANK0 ] char 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4479 ;;      Params:         0       4       0       0
  4480 ;;      Locals:         0       5       0       0
  4481 ;;      Temps:          0       0       0       0
  4482 ;;      Totals:         0       9       0       0
  4483 ;;Total ram usage:        9 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    5
  4486 ;; This function calls:
  4487 ;;		___awdiv
  4488 ;;		___awmod
  4489 ;;		___flmul
  4490 ;; This function is called by:
  4491 ;;		_sprintf
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text14
  4496  00125C                     __ptext14:
  4497                           	opt stack 0
  4498  00125C                     _scale:
  4499                           	opt stack 23
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;incstack = 0
  4503                           ;scale@scl stored from wreg
  4504  00125C  0100               	movlb	0	; () banked
  4505  00125E  6F9F               	movwf	scale@scl& (0+255),b
  4506                           
  4507                           ;doprnt.c: 428: if(scl < 0) {
  4508  001260  0100               	movlb	0	; () banked
  4509  001262  AF9F               	btfss	scale@scl& (0+255),7,b
  4510  001264  D125               	goto	l4935
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;doprnt.c: 429: scl = -scl;
  4514  001266  0100               	movlb	0	; () banked
  4515  001268  6D9F               	negf	scale@scl& (0+255),b
  4516                           
  4517                           ;doprnt.c: 430: if(scl>=110)
  4518  00126A  0100               	movlb	0	; () banked
  4519  00126C  519F               	movf	scale@scl& (0+255),w,b
  4520  00126E  0A80               	xorlw	128
  4521  001270  0F12               	addlw	-238
  4522  001272  A0D8               	btfss	status,0,c
  4523  001274  D0AA               	goto	l4925
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4527  001276  0E00               	movlw	0
  4528  001278  0100               	movlb	0	; () banked
  4529  00127A  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4530  00127C  0E0A               	movlw	10
  4531  00127E  6F72               	movwf	___awdiv@divisor& (0+255),b
  4532  001280  0E00               	movlw	0
  4533  001282  6E40               	movwf	___awmod@divisor+1,c
  4534  001284  0E64               	movlw	100
  4535  001286  6E3F               	movwf	___awmod@divisor,c
  4536  001288  0100               	movlb	0	; () banked
  4537  00128A  519F               	movf	scale@scl& (0+255),w,b
  4538  00128C  6E3D               	movwf	___awmod@dividend,c
  4539  00128E  6A3E               	clrf	___awmod@dividend+1,c
  4540  001290  BE3D               	btfsc	___awmod@dividend,7,c
  4541  001292  063E               	decf	___awmod@dividend+1,f,c
  4542  001294  ECCD  F015         	call	___awmod	;wreg free
  4543  001298  C03D  F070         	movff	?___awmod,___awdiv@dividend
  4544  00129C  C03E  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4545  0012A0  ECDC  F014         	call	___awdiv	;wreg free
  4546  0012A4  0100               	movlb	0	; () banked
  4547  0012A6  90D8               	bcf	status,0,c
  4548  0012A8  3770               	rlcf	?___awdiv& (0+255),f,b
  4549  0012AA  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4550  0012AC  0100               	movlb	0	; () banked
  4551  0012AE  90D8               	bcf	status,0,c
  4552  0012B0  3770               	rlcf	?___awdiv& (0+255),f,b
  4553  0012B2  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4554  0012B4  0E24               	movlw	36
  4555  0012B6  0100               	movlb	0	; () banked
  4556  0012B8  2770               	addwf	?___awdiv& (0+255),f,b
  4557  0012BA  0E00               	movlw	0
  4558  0012BC  0100               	movlb	0	; () banked
  4559  0012BE  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4560  0012C0  0EEB               	movlw	low __npowers_
  4561  0012C2  0100               	movlb	0	; () banked
  4562  0012C4  2570               	addwf	?___awdiv& (0+255),w,b
  4563  0012C6  6EF6               	movwf	tblptrl,c
  4564  0012C8  0E3E               	movlw	high __npowers_
  4565  0012CA  0100               	movlb	0	; () banked
  4566  0012CC  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4567  0012CE  6EF7               	movwf	tblptrh,c
  4568  0012D0                     	if	0	;There are less than 3 active tblptr bytes
  4569  0012D0                     	endif
  4570  0012D0  0009               	tblrd		*+
  4571  0012D2  CFF5 F082          	movff	tablat,___flmul@a
  4572  0012D6  0009               	tblrd		*+
  4573  0012D8  CFF5 F083          	movff	tablat,___flmul@a+1
  4574  0012DC  0009               	tblrd		*+
  4575  0012DE  CFF5 F084          	movff	tablat,___flmul@a+2
  4576  0012E2  000A               	tblrd		*-
  4577  0012E4  CFF5 F085          	movff	tablat,___flmul@a+3
  4578  0012E8  0E00               	movlw	0
  4579  0012EA  0100               	movlb	0	; () banked
  4580  0012EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4581  0012EE  0E64               	movlw	100
  4582  0012F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4583  0012F2  0100               	movlb	0	; () banked
  4584  0012F4  519F               	movf	scale@scl& (0+255),w,b
  4585  0012F6  0100               	movlb	0	; () banked
  4586  0012F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4587  0012FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4588  0012FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4589  0012FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4590  001300  ECDC  F014         	call	___awdiv	;wreg free
  4591  001304  0100               	movlb	0	; () banked
  4592  001306  90D8               	bcf	status,0,c
  4593  001308  3770               	rlcf	?___awdiv& (0+255),f,b
  4594  00130A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4595  00130C  0100               	movlb	0	; () banked
  4596  00130E  90D8               	bcf	status,0,c
  4597  001310  3770               	rlcf	?___awdiv& (0+255),f,b
  4598  001312  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4599  001314  0E48               	movlw	72
  4600  001316  0100               	movlb	0	; () banked
  4601  001318  2770               	addwf	?___awdiv& (0+255),f,b
  4602  00131A  0E00               	movlw	0
  4603  00131C  0100               	movlb	0	; () banked
  4604  00131E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4605  001320  0EEB               	movlw	low __npowers_
  4606  001322  0100               	movlb	0	; () banked
  4607  001324  2570               	addwf	?___awdiv& (0+255),w,b
  4608  001326  6EF6               	movwf	tblptrl,c
  4609  001328  0E3E               	movlw	high __npowers_
  4610  00132A  0100               	movlb	0	; () banked
  4611  00132C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4612  00132E  6EF7               	movwf	tblptrh,c
  4613  001330                     	if	0	;There are less than 3 active tblptr bytes
  4614  001330                     	endif
  4615  001330  0009               	tblrd		*+
  4616  001332  CFF5 F07E          	movff	tablat,___flmul@b
  4617  001336  0009               	tblrd		*+
  4618  001338  CFF5 F07F          	movff	tablat,___flmul@b+1
  4619  00133C  0009               	tblrd		*+
  4620  00133E  CFF5 F080          	movff	tablat,___flmul@b+2
  4621  001342  000A               	tblrd		*-
  4622  001344  CFF5 F081          	movff	tablat,___flmul@b+3
  4623  001348  ECDB  F006         	call	___flmul	;wreg free
  4624  00134C  C07E  F09B         	movff	?___flmul,_scale$2401
  4625  001350  C07F  F09C         	movff	?___flmul+1,_scale$2401+1
  4626  001354  C080  F09D         	movff	?___flmul+2,_scale$2401+2
  4627  001358  C081  F09E         	movff	?___flmul+3,_scale$2401+3
  4628                           
  4629                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4630  00135C  C09B  F07E         	movff	_scale$2401,___flmul@b
  4631  001360  C09C  F07F         	movff	_scale$2401+1,___flmul@b+1
  4632  001364  C09D  F080         	movff	_scale$2401+2,___flmul@b+2
  4633  001368  C09E  F081         	movff	_scale$2401+3,___flmul@b+3
  4634  00136C  0E00               	movlw	0
  4635  00136E  6E40               	movwf	___awmod@divisor+1,c
  4636  001370  0E0A               	movlw	10
  4637  001372  6E3F               	movwf	___awmod@divisor,c
  4638  001374  0100               	movlb	0	; () banked
  4639  001376  519F               	movf	scale@scl& (0+255),w,b
  4640  001378  6E3D               	movwf	___awmod@dividend,c
  4641  00137A  6A3E               	clrf	___awmod@dividend+1,c
  4642  00137C  BE3D               	btfsc	___awmod@dividend,7,c
  4643  00137E  063E               	decf	___awmod@dividend+1,f,c
  4644  001380  ECCD  F015         	call	___awmod	;wreg free
  4645  001384  90D8               	bcf	status,0,c
  4646  001386  363D               	rlcf	?___awmod,f,c
  4647  001388  363E               	rlcf	?___awmod+1,f,c
  4648  00138A  90D8               	bcf	status,0,c
  4649  00138C  363D               	rlcf	?___awmod,f,c
  4650  00138E  363E               	rlcf	?___awmod+1,f,c
  4651  001390  0EEB               	movlw	low __npowers_
  4652  001392  243D               	addwf	?___awmod,w,c
  4653  001394  6EF6               	movwf	tblptrl,c
  4654  001396  0E3E               	movlw	high __npowers_
  4655  001398  203E               	addwfc	?___awmod+1,w,c
  4656  00139A  6EF7               	movwf	tblptrh,c
  4657  00139C                     	if	0	;There are less than 3 active tblptr bytes
  4658  00139C                     	endif
  4659  00139C  0009               	tblrd		*+
  4660  00139E  CFF5 F082          	movff	tablat,___flmul@a
  4661  0013A2  0009               	tblrd		*+
  4662  0013A4  CFF5 F083          	movff	tablat,___flmul@a+1
  4663  0013A8  0009               	tblrd		*+
  4664  0013AA  CFF5 F084          	movff	tablat,___flmul@a+2
  4665  0013AE  000A               	tblrd		*-
  4666  0013B0  CFF5 F085          	movff	tablat,___flmul@a+3
  4667  0013B4  ECDB  F006         	call	___flmul	;wreg free
  4668  0013B8  C07E  F097         	movff	?___flmul,?_scale
  4669  0013BC  C07F  F098         	movff	?___flmul+1,?_scale+1
  4670  0013C0  C080  F099         	movff	?___flmul+2,?_scale+2
  4671  0013C4  C081  F09A         	movff	?___flmul+3,?_scale+3
  4672  0013C8  0012               	return	
  4673  0013CA                     l4925:
  4674                           
  4675                           ;doprnt.c: 432: else if(scl > 10)
  4676  0013CA  0100               	movlb	0	; () banked
  4677  0013CC  519F               	movf	scale@scl& (0+255),w,b
  4678  0013CE  0A80               	xorlw	128
  4679  0013D0  0F75               	addlw	-139
  4680  0013D2  A0D8               	btfss	status,0,c
  4681  0013D4  D057               	goto	l4931
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4685  0013D6  0E00               	movlw	0
  4686  0013D8  0100               	movlb	0	; () banked
  4687  0013DA  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4688  0013DC  0E0A               	movlw	10
  4689  0013DE  6F72               	movwf	___awdiv@divisor& (0+255),b
  4690  0013E0  0100               	movlb	0	; () banked
  4691  0013E2  519F               	movf	scale@scl& (0+255),w,b
  4692  0013E4  0100               	movlb	0	; () banked
  4693  0013E6  6F70               	movwf	___awdiv@dividend& (0+255),b
  4694  0013E8  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4695  0013EA  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4696  0013EC  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4697  0013EE  ECDC  F014         	call	___awdiv	;wreg free
  4698  0013F2  0100               	movlb	0	; () banked
  4699  0013F4  90D8               	bcf	status,0,c
  4700  0013F6  3770               	rlcf	?___awdiv& (0+255),f,b
  4701  0013F8  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4702  0013FA  0100               	movlb	0	; () banked
  4703  0013FC  90D8               	bcf	status,0,c
  4704  0013FE  3770               	rlcf	?___awdiv& (0+255),f,b
  4705  001400  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4706  001402  0E24               	movlw	36
  4707  001404  0100               	movlb	0	; () banked
  4708  001406  2770               	addwf	?___awdiv& (0+255),f,b
  4709  001408  0E00               	movlw	0
  4710  00140A  0100               	movlb	0	; () banked
  4711  00140C  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4712  00140E  0EEB               	movlw	low __npowers_
  4713  001410  0100               	movlb	0	; () banked
  4714  001412  2570               	addwf	?___awdiv& (0+255),w,b
  4715  001414  6EF6               	movwf	tblptrl,c
  4716  001416  0E3E               	movlw	high __npowers_
  4717  001418  0100               	movlb	0	; () banked
  4718  00141A  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4719  00141C  6EF7               	movwf	tblptrh,c
  4720  00141E                     	if	0	;There are less than 3 active tblptr bytes
  4721  00141E                     	endif
  4722  00141E  0009               	tblrd		*+
  4723  001420  CFF5 F07E          	movff	tablat,___flmul@b
  4724  001424  0009               	tblrd		*+
  4725  001426  CFF5 F07F          	movff	tablat,___flmul@b+1
  4726  00142A  0009               	tblrd		*+
  4727  00142C  CFF5 F080          	movff	tablat,___flmul@b+2
  4728  001430  000A               	tblrd		*-
  4729  001432  CFF5 F081          	movff	tablat,___flmul@b+3
  4730  001436  0E00               	movlw	0
  4731  001438  6E40               	movwf	___awmod@divisor+1,c
  4732  00143A  0E0A               	movlw	10
  4733  00143C  6E3F               	movwf	___awmod@divisor,c
  4734  00143E  0100               	movlb	0	; () banked
  4735  001440  519F               	movf	scale@scl& (0+255),w,b
  4736  001442  6E3D               	movwf	___awmod@dividend,c
  4737  001444  6A3E               	clrf	___awmod@dividend+1,c
  4738  001446  BE3D               	btfsc	___awmod@dividend,7,c
  4739  001448  063E               	decf	___awmod@dividend+1,f,c
  4740  00144A  ECCD  F015         	call	___awmod	;wreg free
  4741  00144E  90D8               	bcf	status,0,c
  4742  001450  363D               	rlcf	?___awmod,f,c
  4743  001452  363E               	rlcf	?___awmod+1,f,c
  4744  001454  90D8               	bcf	status,0,c
  4745  001456  363D               	rlcf	?___awmod,f,c
  4746  001458  363E               	rlcf	?___awmod+1,f,c
  4747  00145A  0EEB               	movlw	low __npowers_
  4748  00145C  243D               	addwf	?___awmod,w,c
  4749  00145E  6EF6               	movwf	tblptrl,c
  4750  001460  0E3E               	movlw	high __npowers_
  4751  001462  203E               	addwfc	?___awmod+1,w,c
  4752  001464  6EF7               	movwf	tblptrh,c
  4753  001466                     	if	0	;There are less than 3 active tblptr bytes
  4754  001466                     	endif
  4755  001466  0009               	tblrd		*+
  4756  001468  CFF5 F082          	movff	tablat,___flmul@a
  4757  00146C  0009               	tblrd		*+
  4758  00146E  CFF5 F083          	movff	tablat,___flmul@a+1
  4759  001472  0009               	tblrd		*+
  4760  001474  CFF5 F084          	movff	tablat,___flmul@a+2
  4761  001478  000A               	tblrd		*-
  4762  00147A  CFF5 F085          	movff	tablat,___flmul@a+3
  4763  00147E  ECDB  F006         	call	___flmul	;wreg free
  4764  001482  D79A               	goto	L5
  4765  001484                     l4931:
  4766                           
  4767                           ;doprnt.c: 434: return _npowers_[scl];
  4768  001484  0100               	movlb	0	; () banked
  4769  001486  519F               	movf	scale@scl& (0+255),w,b
  4770  001488  0D04               	mullw	4
  4771  00148A  0EEB               	movlw	low __npowers_
  4772  00148C  24F3               	addwf	prodl,w,c
  4773  00148E  6EF6               	movwf	tblptrl,c
  4774  001490  0E3E               	movlw	high __npowers_
  4775  001492  20F4               	addwfc	prodh,w,c
  4776  001494  6EF7               	movwf	tblptrh,c
  4777  001496                     	if	0	;There are less than 3 active tblptr bytes
  4778  001496                     	endif
  4779  001496  0009               	tblrd		*+
  4780  001498  CFF5 F097          	movff	tablat,?_scale
  4781  00149C  0009               	tblrd		*+
  4782  00149E  CFF5 F098          	movff	tablat,?_scale+1
  4783  0014A2  0009               	tblrd		*+
  4784  0014A4  CFF5 F099          	movff	tablat,?_scale+2
  4785  0014A8  000A               	tblrd		*-
  4786  0014AA  CFF5 F09A          	movff	tablat,?_scale+3
  4787                           
  4788                           ; BSR set to: 0
  4789  0014AE  0012               	return	
  4790  0014B0                     l4935:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;doprnt.c: 435: }
  4794                           ;doprnt.c: 436: if(scl>=110)
  4795  0014B0  0100               	movlb	0	; () banked
  4796  0014B2  519F               	movf	scale@scl& (0+255),w,b
  4797  0014B4  0A80               	xorlw	128
  4798  0014B6  0F12               	addlw	-238
  4799  0014B8  A0D8               	btfss	status,0,c
  4800  0014BA  D0AA               	goto	l4943
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4804  0014BC  0E00               	movlw	0
  4805  0014BE  0100               	movlb	0	; () banked
  4806  0014C0  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4807  0014C2  0E0A               	movlw	10
  4808  0014C4  6F72               	movwf	___awdiv@divisor& (0+255),b
  4809  0014C6  0E00               	movlw	0
  4810  0014C8  6E40               	movwf	___awmod@divisor+1,c
  4811  0014CA  0E64               	movlw	100
  4812  0014CC  6E3F               	movwf	___awmod@divisor,c
  4813  0014CE  0100               	movlb	0	; () banked
  4814  0014D0  519F               	movf	scale@scl& (0+255),w,b
  4815  0014D2  6E3D               	movwf	___awmod@dividend,c
  4816  0014D4  6A3E               	clrf	___awmod@dividend+1,c
  4817  0014D6  BE3D               	btfsc	___awmod@dividend,7,c
  4818  0014D8  063E               	decf	___awmod@dividend+1,f,c
  4819  0014DA  ECCD  F015         	call	___awmod	;wreg free
  4820  0014DE  C03D  F070         	movff	?___awmod,___awdiv@dividend
  4821  0014E2  C03E  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4822  0014E6  ECDC  F014         	call	___awdiv	;wreg free
  4823  0014EA  0100               	movlb	0	; () banked
  4824  0014EC  90D8               	bcf	status,0,c
  4825  0014EE  3770               	rlcf	?___awdiv& (0+255),f,b
  4826  0014F0  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4827  0014F2  0100               	movlb	0	; () banked
  4828  0014F4  90D8               	bcf	status,0,c
  4829  0014F6  3770               	rlcf	?___awdiv& (0+255),f,b
  4830  0014F8  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4831  0014FA  0E24               	movlw	36
  4832  0014FC  0100               	movlb	0	; () banked
  4833  0014FE  2770               	addwf	?___awdiv& (0+255),f,b
  4834  001500  0E00               	movlw	0
  4835  001502  0100               	movlb	0	; () banked
  4836  001504  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4837  001506  0E1F               	movlw	low __powers_
  4838  001508  0100               	movlb	0	; () banked
  4839  00150A  2570               	addwf	?___awdiv& (0+255),w,b
  4840  00150C  6EF6               	movwf	tblptrl,c
  4841  00150E  0E3F               	movlw	high __powers_
  4842  001510  0100               	movlb	0	; () banked
  4843  001512  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4844  001514  6EF7               	movwf	tblptrh,c
  4845  001516                     	if	0	;There are less than 3 active tblptr bytes
  4846  001516                     	endif
  4847  001516  0009               	tblrd		*+
  4848  001518  CFF5 F082          	movff	tablat,___flmul@a
  4849  00151C  0009               	tblrd		*+
  4850  00151E  CFF5 F083          	movff	tablat,___flmul@a+1
  4851  001522  0009               	tblrd		*+
  4852  001524  CFF5 F084          	movff	tablat,___flmul@a+2
  4853  001528  000A               	tblrd		*-
  4854  00152A  CFF5 F085          	movff	tablat,___flmul@a+3
  4855  00152E  0E00               	movlw	0
  4856  001530  0100               	movlb	0	; () banked
  4857  001532  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4858  001534  0E64               	movlw	100
  4859  001536  6F72               	movwf	___awdiv@divisor& (0+255),b
  4860  001538  0100               	movlb	0	; () banked
  4861  00153A  519F               	movf	scale@scl& (0+255),w,b
  4862  00153C  0100               	movlb	0	; () banked
  4863  00153E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4864  001540  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4865  001542  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4866  001544  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4867  001546  ECDC  F014         	call	___awdiv	;wreg free
  4868  00154A  0100               	movlb	0	; () banked
  4869  00154C  90D8               	bcf	status,0,c
  4870  00154E  3770               	rlcf	?___awdiv& (0+255),f,b
  4871  001550  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4872  001552  0100               	movlb	0	; () banked
  4873  001554  90D8               	bcf	status,0,c
  4874  001556  3770               	rlcf	?___awdiv& (0+255),f,b
  4875  001558  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4876  00155A  0E48               	movlw	72
  4877  00155C  0100               	movlb	0	; () banked
  4878  00155E  2770               	addwf	?___awdiv& (0+255),f,b
  4879  001560  0E00               	movlw	0
  4880  001562  0100               	movlb	0	; () banked
  4881  001564  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4882  001566  0E1F               	movlw	low __powers_
  4883  001568  0100               	movlb	0	; () banked
  4884  00156A  2570               	addwf	?___awdiv& (0+255),w,b
  4885  00156C  6EF6               	movwf	tblptrl,c
  4886  00156E  0E3F               	movlw	high __powers_
  4887  001570  0100               	movlb	0	; () banked
  4888  001572  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4889  001574  6EF7               	movwf	tblptrh,c
  4890  001576                     	if	0	;There are less than 3 active tblptr bytes
  4891  001576                     	endif
  4892  001576  0009               	tblrd		*+
  4893  001578  CFF5 F07E          	movff	tablat,___flmul@b
  4894  00157C  0009               	tblrd		*+
  4895  00157E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4896  001582  0009               	tblrd		*+
  4897  001584  CFF5 F080          	movff	tablat,___flmul@b+2
  4898  001588  000A               	tblrd		*-
  4899  00158A  CFF5 F081          	movff	tablat,___flmul@b+3
  4900  00158E  ECDB  F006         	call	___flmul	;wreg free
  4901  001592  C07E  F09B         	movff	?___flmul,_scale$2401
  4902  001596  C07F  F09C         	movff	?___flmul+1,_scale$2401+1
  4903  00159A  C080  F09D         	movff	?___flmul+2,_scale$2401+2
  4904  00159E  C081  F09E         	movff	?___flmul+3,_scale$2401+3
  4905                           
  4906                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4907  0015A2  C09B  F07E         	movff	_scale$2401,___flmul@b
  4908  0015A6  C09C  F07F         	movff	_scale$2401+1,___flmul@b+1
  4909  0015AA  C09D  F080         	movff	_scale$2401+2,___flmul@b+2
  4910  0015AE  C09E  F081         	movff	_scale$2401+3,___flmul@b+3
  4911  0015B2  0E00               	movlw	0
  4912  0015B4  6E40               	movwf	___awmod@divisor+1,c
  4913  0015B6  0E0A               	movlw	10
  4914  0015B8  6E3F               	movwf	___awmod@divisor,c
  4915  0015BA  0100               	movlb	0	; () banked
  4916  0015BC  519F               	movf	scale@scl& (0+255),w,b
  4917  0015BE  6E3D               	movwf	___awmod@dividend,c
  4918  0015C0  6A3E               	clrf	___awmod@dividend+1,c
  4919  0015C2  BE3D               	btfsc	___awmod@dividend,7,c
  4920  0015C4  063E               	decf	___awmod@dividend+1,f,c
  4921  0015C6  ECCD  F015         	call	___awmod	;wreg free
  4922  0015CA  90D8               	bcf	status,0,c
  4923  0015CC  363D               	rlcf	?___awmod,f,c
  4924  0015CE  363E               	rlcf	?___awmod+1,f,c
  4925  0015D0  90D8               	bcf	status,0,c
  4926  0015D2  363D               	rlcf	?___awmod,f,c
  4927  0015D4  363E               	rlcf	?___awmod+1,f,c
  4928  0015D6  0E1F               	movlw	low __powers_
  4929  0015D8  243D               	addwf	?___awmod,w,c
  4930  0015DA  6EF6               	movwf	tblptrl,c
  4931  0015DC  0E3F               	movlw	high __powers_
  4932  0015DE  203E               	addwfc	?___awmod+1,w,c
  4933  0015E0  6EF7               	movwf	tblptrh,c
  4934  0015E2                     	if	0	;There are less than 3 active tblptr bytes
  4935  0015E2                     	endif
  4936  0015E2  0009               	tblrd		*+
  4937  0015E4  CFF5 F082          	movff	tablat,___flmul@a
  4938  0015E8  0009               	tblrd		*+
  4939  0015EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4940  0015EE  0009               	tblrd		*+
  4941  0015F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4942  0015F4  000A               	tblrd		*-
  4943  0015F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4944  0015FA  ECDB  F006         	call	___flmul	;wreg free
  4945  0015FE  C07E  F097         	movff	?___flmul,?_scale
  4946  001602  C07F  F098         	movff	?___flmul+1,?_scale+1
  4947  001606  C080  F099         	movff	?___flmul+2,?_scale+2
  4948  00160A  C081  F09A         	movff	?___flmul+3,?_scale+3
  4949  00160E  0012               	return	
  4950  001610                     l4943:
  4951                           
  4952                           ;doprnt.c: 438: else if(scl > 10)
  4953  001610  0100               	movlb	0	; () banked
  4954  001612  519F               	movf	scale@scl& (0+255),w,b
  4955  001614  0A80               	xorlw	128
  4956  001616  0F75               	addlw	-139
  4957  001618  A0D8               	btfss	status,0,c
  4958  00161A  D057               	goto	l4949
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4962  00161C  0E00               	movlw	0
  4963  00161E  0100               	movlb	0	; () banked
  4964  001620  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4965  001622  0E0A               	movlw	10
  4966  001624  6F72               	movwf	___awdiv@divisor& (0+255),b
  4967  001626  0100               	movlb	0	; () banked
  4968  001628  519F               	movf	scale@scl& (0+255),w,b
  4969  00162A  0100               	movlb	0	; () banked
  4970  00162C  6F70               	movwf	___awdiv@dividend& (0+255),b
  4971  00162E  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4972  001630  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4973  001632  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4974  001634  ECDC  F014         	call	___awdiv	;wreg free
  4975  001638  0100               	movlb	0	; () banked
  4976  00163A  90D8               	bcf	status,0,c
  4977  00163C  3770               	rlcf	?___awdiv& (0+255),f,b
  4978  00163E  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4979  001640  0100               	movlb	0	; () banked
  4980  001642  90D8               	bcf	status,0,c
  4981  001644  3770               	rlcf	?___awdiv& (0+255),f,b
  4982  001646  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4983  001648  0E24               	movlw	36
  4984  00164A  0100               	movlb	0	; () banked
  4985  00164C  2770               	addwf	?___awdiv& (0+255),f,b
  4986  00164E  0E00               	movlw	0
  4987  001650  0100               	movlb	0	; () banked
  4988  001652  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4989  001654  0E1F               	movlw	low __powers_
  4990  001656  0100               	movlb	0	; () banked
  4991  001658  2570               	addwf	?___awdiv& (0+255),w,b
  4992  00165A  6EF6               	movwf	tblptrl,c
  4993  00165C  0E3F               	movlw	high __powers_
  4994  00165E  0100               	movlb	0	; () banked
  4995  001660  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4996  001662  6EF7               	movwf	tblptrh,c
  4997  001664                     	if	0	;There are less than 3 active tblptr bytes
  4998  001664                     	endif
  4999  001664  0009               	tblrd		*+
  5000  001666  CFF5 F07E          	movff	tablat,___flmul@b
  5001  00166A  0009               	tblrd		*+
  5002  00166C  CFF5 F07F          	movff	tablat,___flmul@b+1
  5003  001670  0009               	tblrd		*+
  5004  001672  CFF5 F080          	movff	tablat,___flmul@b+2
  5005  001676  000A               	tblrd		*-
  5006  001678  CFF5 F081          	movff	tablat,___flmul@b+3
  5007  00167C  0E00               	movlw	0
  5008  00167E  6E40               	movwf	___awmod@divisor+1,c
  5009  001680  0E0A               	movlw	10
  5010  001682  6E3F               	movwf	___awmod@divisor,c
  5011  001684  0100               	movlb	0	; () banked
  5012  001686  519F               	movf	scale@scl& (0+255),w,b
  5013  001688  6E3D               	movwf	___awmod@dividend,c
  5014  00168A  6A3E               	clrf	___awmod@dividend+1,c
  5015  00168C  BE3D               	btfsc	___awmod@dividend,7,c
  5016  00168E  063E               	decf	___awmod@dividend+1,f,c
  5017  001690  ECCD  F015         	call	___awmod	;wreg free
  5018  001694  90D8               	bcf	status,0,c
  5019  001696  363D               	rlcf	?___awmod,f,c
  5020  001698  363E               	rlcf	?___awmod+1,f,c
  5021  00169A  90D8               	bcf	status,0,c
  5022  00169C  363D               	rlcf	?___awmod,f,c
  5023  00169E  363E               	rlcf	?___awmod+1,f,c
  5024  0016A0  0E1F               	movlw	low __powers_
  5025  0016A2  243D               	addwf	?___awmod,w,c
  5026  0016A4  6EF6               	movwf	tblptrl,c
  5027  0016A6  0E3F               	movlw	high __powers_
  5028  0016A8  203E               	addwfc	?___awmod+1,w,c
  5029  0016AA  6EF7               	movwf	tblptrh,c
  5030  0016AC                     	if	0	;There are less than 3 active tblptr bytes
  5031  0016AC                     	endif
  5032  0016AC  0009               	tblrd		*+
  5033  0016AE  CFF5 F082          	movff	tablat,___flmul@a
  5034  0016B2  0009               	tblrd		*+
  5035  0016B4  CFF5 F083          	movff	tablat,___flmul@a+1
  5036  0016B8  0009               	tblrd		*+
  5037  0016BA  CFF5 F084          	movff	tablat,___flmul@a+2
  5038  0016BE  000A               	tblrd		*-
  5039  0016C0  CFF5 F085          	movff	tablat,___flmul@a+3
  5040  0016C4  ECDB  F006         	call	___flmul	;wreg free
  5041  0016C8  D79A               	goto	L6
  5042  0016CA                     l4949:
  5043                           
  5044                           ;doprnt.c: 440: return _powers_[scl];
  5045  0016CA  0100               	movlb	0	; () banked
  5046  0016CC  519F               	movf	scale@scl& (0+255),w,b
  5047  0016CE  0D04               	mullw	4
  5048  0016D0  0E1F               	movlw	low __powers_
  5049  0016D2  24F3               	addwf	prodl,w,c
  5050  0016D4  6EF6               	movwf	tblptrl,c
  5051  0016D6  0E3F               	movlw	high __powers_
  5052  0016D8  20F4               	addwfc	prodh,w,c
  5053  0016DA  6EF7               	movwf	tblptrh,c
  5054  0016DC                     	if	0	;There are less than 3 active tblptr bytes
  5055  0016DC                     	endif
  5056  0016DC  0009               	tblrd		*+
  5057  0016DE  CFF5 F097          	movff	tablat,?_scale
  5058  0016E2  0009               	tblrd		*+
  5059  0016E4  CFF5 F098          	movff	tablat,?_scale+1
  5060  0016E8  0009               	tblrd		*+
  5061  0016EA  CFF5 F099          	movff	tablat,?_scale+2
  5062  0016EE  000A               	tblrd		*-
  5063  0016F0  CFF5 F09A          	movff	tablat,?_scale+3
  5064  0016F4  0012               	return	
  5065  0016F6                     __end_of_scale:
  5066                           	opt stack 0
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           indf1	equ	0xFE7
  5077                           postinc1	equ	0xFE6
  5078                           fsr1h	equ	0xFE2
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function _isdigit *****************
  5087 ;; Defined at:
  5088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  c               1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  c               1   25[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;		None               void
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5102 ;;      Params:         0       0       0       0
  5103 ;;      Locals:         2       0       0       0
  5104 ;;      Temps:          1       0       0       0
  5105 ;;      Totals:         3       0       0       0
  5106 ;;Total ram usage:        3 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    4
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_sprintf
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text15
  5117  002FEC                     __ptext15:
  5118                           	opt stack 0
  5119  002FEC                     _isdigit:
  5120                           	opt stack 24
  5121                           
  5122                           ;incstack = 0
  5123                           ;isdigit@c stored from wreg
  5124  002FEC  6E3F               	movwf	isdigit@c,c
  5125  002FEE  0E00               	movlw	0
  5126  002FF0  6E3E               	movwf	_isdigit$2008,c
  5127  002FF2  0E3A               	movlw	58
  5128  002FF4  603F               	cpfslt	isdigit@c,c
  5129  002FF6  D005               	goto	l4961
  5130  002FF8  0E2F               	movlw	47
  5131  002FFA  643F               	cpfsgt	isdigit@c,c
  5132  002FFC  D002               	goto	l4961
  5133  002FFE  0E01               	movlw	1
  5134  003000  6E3E               	movwf	_isdigit$2008,c
  5135  003002                     l4961:
  5136  003002  C03E  F03D         	movff	_isdigit$2008,??_isdigit
  5137  003006  303D               	rrcf	??_isdigit,w,c
  5138  003008  0012               	return	
  5139  00300A                     __end_of_isdigit:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           prodh	equ	0xFF4
  5146                           prodl	equ	0xFF3
  5147                           intcon	equ	0xFF2
  5148                           postinc0	equ	0xFEE
  5149                           wreg	equ	0xFE8
  5150                           indf1	equ	0xFE7
  5151                           postinc1	equ	0xFE6
  5152                           fsr1h	equ	0xFE2
  5153                           fsr1l	equ	0xFE1
  5154                           indf2	equ	0xFDF
  5155                           postinc2	equ	0xFDE
  5156                           fsr2h	equ	0xFDA
  5157                           fsr2l	equ	0xFD9
  5158                           status	equ	0xFD8
  5159                           
  5160 ;; *************** function _fround *****************
  5161 ;; Defined at:
  5162 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  prec            1    wreg     unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  prec            1   67[BANK0 ] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  4   55[BANK0 ] unsigned char 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5176 ;;      Params:         0       4       0       0
  5177 ;;      Locals:         0       9       0       0
  5178 ;;      Temps:          0       0       0       0
  5179 ;;      Totals:         0      13       0       0
  5180 ;;Total ram usage:       13 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    5
  5183 ;; This function calls:
  5184 ;;		___awdiv
  5185 ;;		___awmod
  5186 ;;		___flmul
  5187 ;; This function is called by:
  5188 ;;		_sprintf
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text16
  5193  001A32                     __ptext16:
  5194                           	opt stack 0
  5195  001A32                     _fround:
  5196                           	opt stack 23
  5197                           
  5198                           ;incstack = 0
  5199                           ;fround@prec stored from wreg
  5200  001A32  0100               	movlb	0	; () banked
  5201  001A34  6FA3               	movwf	fround@prec& (0+255),b
  5202                           
  5203                           ;doprnt.c: 413: if(prec>=110)
  5204  001A36  0E6D               	movlw	109
  5205  001A38  0100               	movlb	0	; () banked
  5206  001A3A  65A3               	cpfsgt	fround@prec& (0+255),b
  5207  001A3C  D0BC               	goto	l4903
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5211  001A3E  0E00               	movlw	0
  5212  001A40  0100               	movlb	0	; () banked
  5213  001A42  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5214  001A44  0E0A               	movlw	10
  5215  001A46  6F72               	movwf	___awdiv@divisor& (0+255),b
  5216  001A48  0E00               	movlw	0
  5217  001A4A  6E40               	movwf	___awmod@divisor+1,c
  5218  001A4C  0E64               	movlw	100
  5219  001A4E  6E3F               	movwf	___awmod@divisor,c
  5220  001A50  C0A3  F03D         	movff	fround@prec,___awmod@dividend
  5221  001A54  6A3E               	clrf	___awmod@dividend+1,c
  5222  001A56  ECCD  F015         	call	___awmod	;wreg free
  5223  001A5A  C03D  F070         	movff	?___awmod,___awdiv@dividend
  5224  001A5E  C03E  F071         	movff	?___awmod+1,___awdiv@dividend+1
  5225  001A62  ECDC  F014         	call	___awdiv	;wreg free
  5226  001A66  0100               	movlb	0	; () banked
  5227  001A68  90D8               	bcf	status,0,c
  5228  001A6A  3770               	rlcf	?___awdiv& (0+255),f,b
  5229  001A6C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5230  001A6E  0100               	movlb	0	; () banked
  5231  001A70  90D8               	bcf	status,0,c
  5232  001A72  3770               	rlcf	?___awdiv& (0+255),f,b
  5233  001A74  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5234  001A76  0E24               	movlw	36
  5235  001A78  0100               	movlb	0	; () banked
  5236  001A7A  2770               	addwf	?___awdiv& (0+255),f,b
  5237  001A7C  0E00               	movlw	0
  5238  001A7E  0100               	movlb	0	; () banked
  5239  001A80  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5240  001A82  0EEB               	movlw	low __npowers_
  5241  001A84  0100               	movlb	0	; () banked
  5242  001A86  2570               	addwf	?___awdiv& (0+255),w,b
  5243  001A88  6EF6               	movwf	tblptrl,c
  5244  001A8A  0E3E               	movlw	high __npowers_
  5245  001A8C  0100               	movlb	0	; () banked
  5246  001A8E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5247  001A90  6EF7               	movwf	tblptrh,c
  5248  001A92                     	if	0	;There are less than 3 active tblptr bytes
  5249  001A92                     	endif
  5250  001A92  0009               	tblrd		*+
  5251  001A94  CFF5 F082          	movff	tablat,___flmul@a
  5252  001A98  0009               	tblrd		*+
  5253  001A9A  CFF5 F083          	movff	tablat,___flmul@a+1
  5254  001A9E  0009               	tblrd		*+
  5255  001AA0  CFF5 F084          	movff	tablat,___flmul@a+2
  5256  001AA4  000A               	tblrd		*-
  5257  001AA6  CFF5 F085          	movff	tablat,___flmul@a+3
  5258  001AAA  0E00               	movlw	0
  5259  001AAC  0100               	movlb	0	; () banked
  5260  001AAE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5261  001AB0  0E64               	movlw	100
  5262  001AB2  6F72               	movwf	___awdiv@divisor& (0+255),b
  5263  001AB4  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5264  001AB8  0100               	movlb	0	; () banked
  5265  001ABA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5266  001ABC  ECDC  F014         	call	___awdiv	;wreg free
  5267  001AC0  0100               	movlb	0	; () banked
  5268  001AC2  90D8               	bcf	status,0,c
  5269  001AC4  3770               	rlcf	?___awdiv& (0+255),f,b
  5270  001AC6  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5271  001AC8  0100               	movlb	0	; () banked
  5272  001ACA  90D8               	bcf	status,0,c
  5273  001ACC  3770               	rlcf	?___awdiv& (0+255),f,b
  5274  001ACE  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5275  001AD0  0E48               	movlw	72
  5276  001AD2  0100               	movlb	0	; () banked
  5277  001AD4  2770               	addwf	?___awdiv& (0+255),f,b
  5278  001AD6  0E00               	movlw	0
  5279  001AD8  0100               	movlb	0	; () banked
  5280  001ADA  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5281  001ADC  0EEB               	movlw	low __npowers_
  5282  001ADE  0100               	movlb	0	; () banked
  5283  001AE0  2570               	addwf	?___awdiv& (0+255),w,b
  5284  001AE2  6EF6               	movwf	tblptrl,c
  5285  001AE4  0E3E               	movlw	high __npowers_
  5286  001AE6  0100               	movlb	0	; () banked
  5287  001AE8  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5288  001AEA  6EF7               	movwf	tblptrh,c
  5289  001AEC                     	if	0	;There are less than 3 active tblptr bytes
  5290  001AEC                     	endif
  5291  001AEC  0009               	tblrd		*+
  5292  001AEE  CFF5 F07E          	movff	tablat,___flmul@b
  5293  001AF2  0009               	tblrd		*+
  5294  001AF4  CFF5 F07F          	movff	tablat,___flmul@b+1
  5295  001AF8  0009               	tblrd		*+
  5296  001AFA  CFF5 F080          	movff	tablat,___flmul@b+2
  5297  001AFE  000A               	tblrd		*-
  5298  001B00  CFF5 F081          	movff	tablat,___flmul@b+3
  5299  001B04  ECDB  F006         	call	___flmul	;wreg free
  5300  001B08  C07E  F09F         	movff	?___flmul,_fround$2399
  5301  001B0C  C07F  F0A0         	movff	?___flmul+1,_fround$2399+1
  5302  001B10  C080  F0A1         	movff	?___flmul+2,_fround$2399+2
  5303  001B14  C081  F0A2         	movff	?___flmul+3,_fround$2399+3
  5304                           
  5305                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5306  001B18  0E00               	movlw	0
  5307  001B1A  6E40               	movwf	___awmod@divisor+1,c
  5308  001B1C  0E0A               	movlw	10
  5309  001B1E  6E3F               	movwf	___awmod@divisor,c
  5310  001B20  C0A3  F03D         	movff	fround@prec,___awmod@dividend
  5311  001B24  6A3E               	clrf	___awmod@dividend+1,c
  5312  001B26  ECCD  F015         	call	___awmod	;wreg free
  5313  001B2A  90D8               	bcf	status,0,c
  5314  001B2C  363D               	rlcf	?___awmod,f,c
  5315  001B2E  363E               	rlcf	?___awmod+1,f,c
  5316  001B30  90D8               	bcf	status,0,c
  5317  001B32  363D               	rlcf	?___awmod,f,c
  5318  001B34  363E               	rlcf	?___awmod+1,f,c
  5319  001B36  0EEB               	movlw	low __npowers_
  5320  001B38  243D               	addwf	?___awmod,w,c
  5321  001B3A  6EF6               	movwf	tblptrl,c
  5322  001B3C  0E3E               	movlw	high __npowers_
  5323  001B3E  203E               	addwfc	?___awmod+1,w,c
  5324  001B40  6EF7               	movwf	tblptrh,c
  5325  001B42                     	if	0	;There are less than 3 active tblptr bytes
  5326  001B42                     	endif
  5327  001B42  0009               	tblrd		*+
  5328  001B44  CFF5 F082          	movff	tablat,___flmul@a
  5329  001B48  0009               	tblrd		*+
  5330  001B4A  CFF5 F083          	movff	tablat,___flmul@a+1
  5331  001B4E  0009               	tblrd		*+
  5332  001B50  CFF5 F084          	movff	tablat,___flmul@a+2
  5333  001B54  000A               	tblrd		*-
  5334  001B56  CFF5 F085          	movff	tablat,___flmul@a+3
  5335  001B5A  C09F  F07E         	movff	_fround$2399,___flmul@b
  5336  001B5E  C0A0  F07F         	movff	_fround$2399+1,___flmul@b+1
  5337  001B62  C0A1  F080         	movff	_fround$2399+2,___flmul@b+2
  5338  001B66  C0A2  F081         	movff	_fround$2399+3,___flmul@b+3
  5339  001B6A  ECDB  F006         	call	___flmul	;wreg free
  5340  001B6E  C07E  F09B         	movff	?___flmul,_fround$2400
  5341  001B72  C07F  F09C         	movff	?___flmul+1,_fround$2400+1
  5342  001B76  C080  F09D         	movff	?___flmul+2,_fround$2400+2
  5343  001B7A  C081  F09E         	movff	?___flmul+3,_fround$2400+3
  5344                           
  5345                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5346  001B7E  C09B  F07E         	movff	_fround$2400,___flmul@b
  5347  001B82  C09C  F07F         	movff	_fround$2400+1,___flmul@b+1
  5348  001B86  C09D  F080         	movff	_fround$2400+2,___flmul@b+2
  5349  001B8A  C09E  F081         	movff	_fround$2400+3,___flmul@b+3
  5350  001B8E  0E00               	movlw	0
  5351  001B90  0100               	movlb	0	; () banked
  5352  001B92  6F82               	movwf	___flmul@a& (0+255),b
  5353  001B94  0E00               	movlw	0
  5354  001B96  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5355  001B98  0E00               	movlw	0
  5356  001B9A  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5357  001B9C  0E3F               	movlw	63
  5358  001B9E  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5359  001BA0  ECDB  F006         	call	___flmul	;wreg free
  5360  001BA4  C07E  F097         	movff	?___flmul,?_fround
  5361  001BA8  C07F  F098         	movff	?___flmul+1,?_fround+1
  5362  001BAC  C080  F099         	movff	?___flmul+2,?_fround+2
  5363  001BB0  C081  F09A         	movff	?___flmul+3,?_fround+3
  5364  001BB4  0012               	return	
  5365  001BB6                     l4903:
  5366                           
  5367                           ;doprnt.c: 415: else if(prec > 10)
  5368  001BB6  0E0A               	movlw	10
  5369  001BB8  0100               	movlb	0	; () banked
  5370  001BBA  65A3               	cpfsgt	fround@prec& (0+255),b
  5371  001BBC  D06C               	goto	l4911
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5375  001BBE  0E00               	movlw	0
  5376  001BC0  6E40               	movwf	___awmod@divisor+1,c
  5377  001BC2  0E0A               	movlw	10
  5378  001BC4  6E3F               	movwf	___awmod@divisor,c
  5379  001BC6  C0A3  F03D         	movff	fround@prec,___awmod@dividend
  5380  001BCA  6A3E               	clrf	___awmod@dividend+1,c
  5381  001BCC  ECCD  F015         	call	___awmod	;wreg free
  5382  001BD0  90D8               	bcf	status,0,c
  5383  001BD2  363D               	rlcf	?___awmod,f,c
  5384  001BD4  363E               	rlcf	?___awmod+1,f,c
  5385  001BD6  90D8               	bcf	status,0,c
  5386  001BD8  363D               	rlcf	?___awmod,f,c
  5387  001BDA  363E               	rlcf	?___awmod+1,f,c
  5388  001BDC  0EEB               	movlw	low __npowers_
  5389  001BDE  243D               	addwf	?___awmod,w,c
  5390  001BE0  6EF6               	movwf	tblptrl,c
  5391  001BE2  0E3E               	movlw	high __npowers_
  5392  001BE4  203E               	addwfc	?___awmod+1,w,c
  5393  001BE6  6EF7               	movwf	tblptrh,c
  5394  001BE8                     	if	0	;There are less than 3 active tblptr bytes
  5395  001BE8                     	endif
  5396  001BE8  0009               	tblrd		*+
  5397  001BEA  CFF5 F082          	movff	tablat,___flmul@a
  5398  001BEE  0009               	tblrd		*+
  5399  001BF0  CFF5 F083          	movff	tablat,___flmul@a+1
  5400  001BF4  0009               	tblrd		*+
  5401  001BF6  CFF5 F084          	movff	tablat,___flmul@a+2
  5402  001BFA  000A               	tblrd		*-
  5403  001BFC  CFF5 F085          	movff	tablat,___flmul@a+3
  5404  001C00  0E00               	movlw	0
  5405  001C02  0100               	movlb	0	; () banked
  5406  001C04  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5407  001C06  0E0A               	movlw	10
  5408  001C08  6F72               	movwf	___awdiv@divisor& (0+255),b
  5409  001C0A  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5410  001C0E  0100               	movlb	0	; () banked
  5411  001C10  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5412  001C12  ECDC  F014         	call	___awdiv	;wreg free
  5413  001C16  0100               	movlb	0	; () banked
  5414  001C18  90D8               	bcf	status,0,c
  5415  001C1A  3770               	rlcf	?___awdiv& (0+255),f,b
  5416  001C1C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5417  001C1E  0100               	movlb	0	; () banked
  5418  001C20  90D8               	bcf	status,0,c
  5419  001C22  3770               	rlcf	?___awdiv& (0+255),f,b
  5420  001C24  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5421  001C26  0E24               	movlw	36
  5422  001C28  0100               	movlb	0	; () banked
  5423  001C2A  2770               	addwf	?___awdiv& (0+255),f,b
  5424  001C2C  0E00               	movlw	0
  5425  001C2E  0100               	movlb	0	; () banked
  5426  001C30  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5427  001C32  0EEB               	movlw	low __npowers_
  5428  001C34  0100               	movlb	0	; () banked
  5429  001C36  2570               	addwf	?___awdiv& (0+255),w,b
  5430  001C38  6EF6               	movwf	tblptrl,c
  5431  001C3A  0E3E               	movlw	high __npowers_
  5432  001C3C  0100               	movlb	0	; () banked
  5433  001C3E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5434  001C40  6EF7               	movwf	tblptrh,c
  5435  001C42                     	if	0	;There are less than 3 active tblptr bytes
  5436  001C42                     	endif
  5437  001C42  0009               	tblrd		*+
  5438  001C44  CFF5 F07E          	movff	tablat,___flmul@b
  5439  001C48  0009               	tblrd		*+
  5440  001C4A  CFF5 F07F          	movff	tablat,___flmul@b+1
  5441  001C4E  0009               	tblrd		*+
  5442  001C50  CFF5 F080          	movff	tablat,___flmul@b+2
  5443  001C54  000A               	tblrd		*-
  5444  001C56  CFF5 F081          	movff	tablat,___flmul@b+3
  5445  001C5A  ECDB  F006         	call	___flmul	;wreg free
  5446  001C5E  C07E  F09F         	movff	?___flmul,_fround$2399
  5447  001C62  C07F  F0A0         	movff	?___flmul+1,_fround$2399+1
  5448  001C66  C080  F0A1         	movff	?___flmul+2,_fround$2399+2
  5449  001C6A  C081  F0A2         	movff	?___flmul+3,_fround$2399+3
  5450                           
  5451                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5452  001C6E  C09F  F07E         	movff	_fround$2399,___flmul@b
  5453  001C72  C0A0  F07F         	movff	_fround$2399+1,___flmul@b+1
  5454  001C76  C0A1  F080         	movff	_fround$2399+2,___flmul@b+2
  5455  001C7A  C0A2  F081         	movff	_fround$2399+3,___flmul@b+3
  5456  001C7E  0E00               	movlw	0
  5457  001C80  0100               	movlb	0	; () banked
  5458  001C82  6F82               	movwf	___flmul@a& (0+255),b
  5459  001C84  0E00               	movlw	0
  5460  001C86  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5461  001C88  0E00               	movlw	0
  5462  001C8A  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5463  001C8C  0E3F               	movlw	63
  5464  001C8E  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5465  001C90  ECDB  F006         	call	___flmul	;wreg free
  5466  001C94  D787               	goto	L7
  5467  001C96                     l4911:
  5468                           
  5469                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5470  001C96  0100               	movlb	0	; () banked
  5471  001C98  51A3               	movf	fround@prec& (0+255),w,b
  5472  001C9A  0D04               	mullw	4
  5473  001C9C  0EEB               	movlw	low __npowers_
  5474  001C9E  24F3               	addwf	prodl,w,c
  5475  001CA0  6EF6               	movwf	tblptrl,c
  5476  001CA2  0E3E               	movlw	high __npowers_
  5477  001CA4  20F4               	addwfc	prodh,w,c
  5478  001CA6  6EF7               	movwf	tblptrh,c
  5479  001CA8                     	if	0	;There are less than 3 active tblptr bytes
  5480  001CA8                     	endif
  5481  001CA8  0009               	tblrd		*+
  5482  001CAA  CFF5 F07E          	movff	tablat,___flmul@b
  5483  001CAE  0009               	tblrd		*+
  5484  001CB0  CFF5 F07F          	movff	tablat,___flmul@b+1
  5485  001CB4  0009               	tblrd		*+
  5486  001CB6  CFF5 F080          	movff	tablat,___flmul@b+2
  5487  001CBA  000A               	tblrd		*-
  5488  001CBC  CFF5 F081          	movff	tablat,___flmul@b+3
  5489  001CC0  0E00               	movlw	0
  5490  001CC2  0100               	movlb	0	; () banked
  5491  001CC4  6F82               	movwf	___flmul@a& (0+255),b
  5492  001CC6  0E00               	movlw	0
  5493  001CC8  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5494  001CCA  0E00               	movlw	0
  5495  001CCC  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5496  001CCE  0E3F               	movlw	63
  5497  001CD0  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5498  001CD2  ECDB  F006         	call	___flmul	;wreg free
  5499  001CD6  C07E  F097         	movff	?___flmul,?_fround
  5500  001CDA  C07F  F098         	movff	?___flmul+1,?_fround+1
  5501  001CDE  C080  F099         	movff	?___flmul+2,?_fround+2
  5502  001CE2  C081  F09A         	movff	?___flmul+3,?_fround+3
  5503  001CE6  0012               	return	
  5504  001CE8                     __end_of_fround:
  5505                           	opt stack 0
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           prodh	equ	0xFF4
  5511                           prodl	equ	0xFF3
  5512                           intcon	equ	0xFF2
  5513                           postinc0	equ	0xFEE
  5514                           wreg	equ	0xFE8
  5515                           indf1	equ	0xFE7
  5516                           postinc1	equ	0xFE6
  5517                           fsr1h	equ	0xFE2
  5518                           fsr1l	equ	0xFE1
  5519                           indf2	equ	0xFDF
  5520                           postinc2	equ	0xFDE
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function ___flmul *****************
  5526 ;; Defined at:
  5527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  b               4   30[BANK0 ] unsigned char 
  5530 ;;  a               4   34[BANK0 ] unsigned char 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  prod            4   49[BANK0 ] struct .
  5533 ;;  grs             4   44[BANK0 ] unsigned long 
  5534 ;;  temp            2   53[BANK0 ] struct .
  5535 ;;  bexp            1   48[BANK0 ] unsigned char 
  5536 ;;  aexp            1   43[BANK0 ] unsigned char 
  5537 ;;  sign            1   42[BANK0 ] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  4   30[BANK0 ] unsigned char 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, prodl, prodh
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5547 ;;      Params:         0       8       0       0
  5548 ;;      Locals:         0      13       0       0
  5549 ;;      Temps:          0       4       0       0
  5550 ;;      Totals:         0      25       0       0
  5551 ;;Total ram usage:       25 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    4
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;;		_fround
  5559 ;;		_scale
  5560 ;;		_sprintf
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text17
  5565  000DB6                     __ptext17:
  5566                           	opt stack 0
  5567  000DB6                     ___flmul:
  5568                           	opt stack 26
  5569                           
  5570                           ;incstack = 0
  5571  000DB6  0100               	movlb	0	; () banked
  5572  000DB8  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5573  000DBA  0B80               	andlw	128
  5574  000DBC  0100               	movlb	0	; () banked
  5575  000DBE  6F8A               	movwf	___flmul@sign& (0+255),b
  5576  000DC0  0100               	movlb	0	; () banked
  5577  000DC2  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5578  000DC4  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5579  000DC6  0100               	movlb	0	; () banked
  5580  000DC8  6F90               	movwf	___flmul@bexp& (0+255),b
  5581                           
  5582                           ; BSR set to: 0
  5583  000DCA  0100               	movlb	0	; () banked
  5584  000DCC  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5585  000DCE  D002               	goto	l4665
  5586                           
  5587                           ; BSR set to: 0
  5588  000DD0  0100               	movlb	0	; () banked
  5589  000DD2  8190               	bsf	___flmul@bexp& (0+255),0,b
  5590  000DD4                     l4665:
  5591                           
  5592                           ; BSR set to: 0
  5593  000DD4  0100               	movlb	0	; () banked
  5594  000DD6  5190               	movf	___flmul@bexp& (0+255),w,b
  5595  000DD8  0100               	movlb	0	; () banked
  5596  000DDA  B4D8               	btfsc	status,2,c
  5597  000DDC  D010               	goto	l4673
  5598                           
  5599                           ; BSR set to: 0
  5600  000DDE  0100               	movlb	0	; () banked
  5601  000DE0  2990               	incf	___flmul@bexp& (0+255),w,b
  5602  000DE2  A4D8               	btfss	status,2,c
  5603  000DE4  D009               	goto	l4671
  5604                           
  5605                           ; BSR set to: 0
  5606  000DE6  0E00               	movlw	0
  5607  000DE8  0100               	movlb	0	; () banked
  5608  000DEA  6F7E               	movwf	___flmul@b& (0+255),b
  5609  000DEC  0E00               	movlw	0
  5610  000DEE  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5611  000DF0  0E00               	movlw	0
  5612  000DF2  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5613  000DF4  0E00               	movlw	0
  5614  000DF6  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5615  000DF8                     l4671:
  5616                           
  5617                           ; BSR set to: 0
  5618  000DF8  0100               	movlb	0	; () banked
  5619  000DFA  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5620  000DFC  D009               	goto	l4675
  5621  000DFE                     l4673:
  5622                           
  5623                           ; BSR set to: 0
  5624  000DFE  0E00               	movlw	0
  5625  000E00  0100               	movlb	0	; () banked
  5626  000E02  6F7E               	movwf	___flmul@b& (0+255),b
  5627  000E04  0E00               	movlw	0
  5628  000E06  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5629  000E08  0E00               	movlw	0
  5630  000E0A  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5631  000E0C  0E00               	movlw	0
  5632  000E0E  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5633  000E10                     l4675:
  5634                           
  5635                           ; BSR set to: 0
  5636  000E10  0100               	movlb	0	; () banked
  5637  000E12  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5638  000E14  0B80               	andlw	128
  5639  000E16  0100               	movlb	0	; () banked
  5640  000E18  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5641                           
  5642                           ; BSR set to: 0
  5643  000E1A  0100               	movlb	0	; () banked
  5644  000E1C  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5645  000E1E  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5646  000E20  0100               	movlb	0	; () banked
  5647  000E22  6F8B               	movwf	___flmul@aexp& (0+255),b
  5648                           
  5649                           ; BSR set to: 0
  5650  000E24  0100               	movlb	0	; () banked
  5651  000E26  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5652  000E28  D002               	goto	l4683
  5653                           
  5654                           ; BSR set to: 0
  5655  000E2A  0100               	movlb	0	; () banked
  5656  000E2C  818B               	bsf	___flmul@aexp& (0+255),0,b
  5657  000E2E                     l4683:
  5658                           
  5659                           ; BSR set to: 0
  5660  000E2E  0100               	movlb	0	; () banked
  5661  000E30  518B               	movf	___flmul@aexp& (0+255),w,b
  5662  000E32  0100               	movlb	0	; () banked
  5663  000E34  B4D8               	btfsc	status,2,c
  5664  000E36  D010               	goto	l4691
  5665                           
  5666                           ; BSR set to: 0
  5667  000E38  0100               	movlb	0	; () banked
  5668  000E3A  298B               	incf	___flmul@aexp& (0+255),w,b
  5669  000E3C  A4D8               	btfss	status,2,c
  5670  000E3E  D009               	goto	l4689
  5671                           
  5672                           ; BSR set to: 0
  5673  000E40  0E00               	movlw	0
  5674  000E42  0100               	movlb	0	; () banked
  5675  000E44  6F82               	movwf	___flmul@a& (0+255),b
  5676  000E46  0E00               	movlw	0
  5677  000E48  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5678  000E4A  0E00               	movlw	0
  5679  000E4C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5680  000E4E  0E00               	movlw	0
  5681  000E50  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5682  000E52                     l4689:
  5683                           
  5684                           ; BSR set to: 0
  5685  000E52  0100               	movlb	0	; () banked
  5686  000E54  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5687  000E56  D009               	goto	l1067
  5688  000E58                     l4691:
  5689                           
  5690                           ; BSR set to: 0
  5691  000E58  0E00               	movlw	0
  5692  000E5A  0100               	movlb	0	; () banked
  5693  000E5C  6F82               	movwf	___flmul@a& (0+255),b
  5694  000E5E  0E00               	movlw	0
  5695  000E60  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5696  000E62  0E00               	movlw	0
  5697  000E64  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5698  000E66  0E00               	movlw	0
  5699  000E68  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5700  000E6A                     l1067:
  5701                           
  5702                           ; BSR set to: 0
  5703  000E6A  0100               	movlb	0	; () banked
  5704  000E6C  518B               	movf	___flmul@aexp& (0+255),w,b
  5705  000E6E  0100               	movlb	0	; () banked
  5706  000E70  B4D8               	btfsc	status,2,c
  5707  000E72  D005               	goto	l4695
  5708                           
  5709                           ; BSR set to: 0
  5710  000E74  0100               	movlb	0	; () banked
  5711  000E76  5190               	movf	___flmul@bexp& (0+255),w,b
  5712  000E78  0100               	movlb	0	; () banked
  5713  000E7A  A4D8               	btfss	status,2,c
  5714  000E7C  D00A               	goto	l4699
  5715  000E7E                     l4695:
  5716                           
  5717                           ; BSR set to: 0
  5718  000E7E  0E00               	movlw	0
  5719  000E80  0100               	movlb	0	; () banked
  5720  000E82  6F7E               	movwf	?___flmul& (0+255),b
  5721  000E84  0E00               	movlw	0
  5722  000E86  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5723  000E88  0E00               	movlw	0
  5724  000E8A  6F80               	movwf	(?___flmul+2)& (0+255),b
  5725  000E8C  0E00               	movlw	0
  5726  000E8E  6F81               	movwf	(?___flmul+3)& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729  000E90  0012               	return	
  5730  000E92                     l4699:
  5731                           
  5732                           ; BSR set to: 0
  5733  000E92  0100               	movlb	0	; () banked
  5734  000E94  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5735  000E96  0100               	movlb	0	; () banked
  5736  000E98  037E               	mulwf	___flmul@b& (0+255),b
  5737  000E9A  CFF3 F095          	movff	prodl,___flmul@temp
  5738  000E9E  CFF4 F096          	movff	prodh,___flmul@temp+1
  5739                           
  5740                           ; BSR set to: 0
  5741  000EA2  0100               	movlb	0	; () banked
  5742  000EA4  5195               	movf	___flmul@temp& (0+255),w,b
  5743  000EA6  0100               	movlb	0	; () banked
  5744  000EA8  6F8C               	movwf	___flmul@grs& (0+255),b
  5745  000EAA  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5746  000EAC  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5747  000EAE  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5748                           
  5749                           ; BSR set to: 0
  5750  000EB0  0100               	movlb	0	; () banked
  5751  000EB2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5752  000EB4  0100               	movlb	0	; () banked
  5753  000EB6  6F91               	movwf	___flmul@prod& (0+255),b
  5754  000EB8  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5755  000EBA  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5756  000EBC  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5757  000EBE  0100               	movlb	0	; () banked
  5758  000EC0  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5759  000EC2  0100               	movlb	0	; () banked
  5760  000EC4  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5761  000EC6  CFF3 F095          	movff	prodl,___flmul@temp
  5762  000ECA  CFF4 F096          	movff	prodh,___flmul@temp+1
  5763                           
  5764                           ; BSR set to: 0
  5765  000ECE  0100               	movlb	0	; () banked
  5766  000ED0  5195               	movf	___flmul@temp& (0+255),w,b
  5767  000ED2  0100               	movlb	0	; () banked
  5768  000ED4  278C               	addwf	___flmul@grs& (0+255),f,b
  5769  000ED6  0E00               	movlw	0
  5770  000ED8  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5771  000EDA  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5772  000EDC  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5773                           
  5774                           ; BSR set to: 0
  5775  000EDE  0100               	movlb	0	; () banked
  5776  000EE0  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5777  000EE2  0100               	movlb	0	; () banked
  5778  000EE4  2791               	addwf	___flmul@prod& (0+255),f,b
  5779  000EE6  0E00               	movlw	0
  5780  000EE8  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5781  000EEA  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5782  000EEC  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5783  000EEE  0100               	movlb	0	; () banked
  5784  000EF0  5182               	movf	___flmul@a& (0+255),w,b
  5785  000EF2  0100               	movlb	0	; () banked
  5786  000EF4  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5787  000EF6  CFF3 F095          	movff	prodl,___flmul@temp
  5788  000EFA  CFF4 F096          	movff	prodh,___flmul@temp+1
  5789                           
  5790                           ; BSR set to: 0
  5791  000EFE  0100               	movlb	0	; () banked
  5792  000F00  5195               	movf	___flmul@temp& (0+255),w,b
  5793  000F02  0100               	movlb	0	; () banked
  5794  000F04  278C               	addwf	___flmul@grs& (0+255),f,b
  5795  000F06  0E00               	movlw	0
  5796  000F08  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5797  000F0A  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5798  000F0C  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5799                           
  5800                           ; BSR set to: 0
  5801  000F0E  0100               	movlb	0	; () banked
  5802  000F10  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5803  000F12  0100               	movlb	0	; () banked
  5804  000F14  2791               	addwf	___flmul@prod& (0+255),f,b
  5805  000F16  0E00               	movlw	0
  5806  000F18  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5807  000F1A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5808  000F1C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5809                           
  5810                           ; BSR set to: 0
  5811  000F1E  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5812  000F22  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5813  000F26  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5814  000F2A  0100               	movlb	0	; () banked
  5815  000F2C  6B8C               	clrf	___flmul@grs& (0+255),b
  5816                           
  5817                           ; BSR set to: 0
  5818  000F2E  0100               	movlb	0	; () banked
  5819  000F30  5182               	movf	___flmul@a& (0+255),w,b
  5820  000F32  0100               	movlb	0	; () banked
  5821  000F34  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5822  000F36  CFF3 F095          	movff	prodl,___flmul@temp
  5823  000F3A  CFF4 F096          	movff	prodh,___flmul@temp+1
  5824                           
  5825                           ; BSR set to: 0
  5826  000F3E  0100               	movlb	0	; () banked
  5827  000F40  5195               	movf	___flmul@temp& (0+255),w,b
  5828  000F42  0100               	movlb	0	; () banked
  5829  000F44  278C               	addwf	___flmul@grs& (0+255),f,b
  5830  000F46  0100               	movlb	0	; () banked
  5831  000F48  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5832  000F4A  0100               	movlb	0	; () banked
  5833  000F4C  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5834  000F4E  0E00               	movlw	0
  5835  000F50  0100               	movlb	0	; () banked
  5836  000F52  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5837  000F54  0E00               	movlw	0
  5838  000F56  0100               	movlb	0	; () banked
  5839  000F58  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5840                           
  5841                           ; BSR set to: 0
  5842  000F5A  0100               	movlb	0	; () banked
  5843  000F5C  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5844  000F5E  0100               	movlb	0	; () banked
  5845  000F60  037E               	mulwf	___flmul@b& (0+255),b
  5846  000F62  CFF3 F095          	movff	prodl,___flmul@temp
  5847  000F66  CFF4 F096          	movff	prodh,___flmul@temp+1
  5848                           
  5849                           ; BSR set to: 0
  5850  000F6A  0100               	movlb	0	; () banked
  5851  000F6C  5195               	movf	___flmul@temp& (0+255),w,b
  5852  000F6E  0100               	movlb	0	; () banked
  5853  000F70  278C               	addwf	___flmul@grs& (0+255),f,b
  5854  000F72  0100               	movlb	0	; () banked
  5855  000F74  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5856  000F76  0100               	movlb	0	; () banked
  5857  000F78  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5858  000F7A  0E00               	movlw	0
  5859  000F7C  0100               	movlb	0	; () banked
  5860  000F7E  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5861  000F80  0E00               	movlw	0
  5862  000F82  0100               	movlb	0	; () banked
  5863  000F84  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5864                           
  5865                           ; BSR set to: 0
  5866  000F86  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5867  000F8A  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5868  000F8E  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5869  000F92  0100               	movlb	0	; () banked
  5870  000F94  6B8C               	clrf	___flmul@grs& (0+255),b
  5871  000F96  0100               	movlb	0	; () banked
  5872  000F98  5182               	movf	___flmul@a& (0+255),w,b
  5873  000F9A  0100               	movlb	0	; () banked
  5874  000F9C  037E               	mulwf	___flmul@b& (0+255),b
  5875  000F9E  CFF3 F095          	movff	prodl,___flmul@temp
  5876  000FA2  CFF4 F096          	movff	prodh,___flmul@temp+1
  5877                           
  5878                           ; BSR set to: 0
  5879  000FA6  0100               	movlb	0	; () banked
  5880  000FA8  5195               	movf	___flmul@temp& (0+255),w,b
  5881  000FAA  0100               	movlb	0	; () banked
  5882  000FAC  278C               	addwf	___flmul@grs& (0+255),f,b
  5883  000FAE  0100               	movlb	0	; () banked
  5884  000FB0  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5885  000FB2  0100               	movlb	0	; () banked
  5886  000FB4  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5887  000FB6  0E00               	movlw	0
  5888  000FB8  0100               	movlb	0	; () banked
  5889  000FBA  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5890  000FBC  0E00               	movlw	0
  5891  000FBE  0100               	movlb	0	; () banked
  5892  000FC0  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5893                           
  5894                           ; BSR set to: 0
  5895  000FC2  0100               	movlb	0	; () banked
  5896  000FC4  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5897  000FC6  0100               	movlb	0	; () banked
  5898  000FC8  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5899  000FCA  CFF3 F095          	movff	prodl,___flmul@temp
  5900  000FCE  CFF4 F096          	movff	prodh,___flmul@temp+1
  5901  000FD2  0100               	movlb	0	; () banked
  5902  000FD4  5195               	movf	___flmul@temp& (0+255),w,b
  5903  000FD6  0100               	movlb	0	; () banked
  5904  000FD8  2791               	addwf	___flmul@prod& (0+255),f,b
  5905  000FDA  0100               	movlb	0	; () banked
  5906  000FDC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5907  000FDE  0100               	movlb	0	; () banked
  5908  000FE0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5909  000FE2  0E00               	movlw	0
  5910  000FE4  0100               	movlb	0	; () banked
  5911  000FE6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5912  000FE8  0E00               	movlw	0
  5913  000FEA  0100               	movlb	0	; () banked
  5914  000FEC  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5915                           
  5916                           ; BSR set to: 0
  5917  000FEE  0100               	movlb	0	; () banked
  5918  000FF0  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5919  000FF2  0100               	movlb	0	; () banked
  5920  000FF4  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5921  000FF6  CFF3 F095          	movff	prodl,___flmul@temp
  5922  000FFA  CFF4 F096          	movff	prodh,___flmul@temp+1
  5923                           
  5924                           ; BSR set to: 0
  5925  000FFE  0100               	movlb	0	; () banked
  5926  001000  5195               	movf	___flmul@temp& (0+255),w,b
  5927  001002  0100               	movlb	0	; () banked
  5928  001004  2791               	addwf	___flmul@prod& (0+255),f,b
  5929  001006  0100               	movlb	0	; () banked
  5930  001008  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5931  00100A  0100               	movlb	0	; () banked
  5932  00100C  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5933  00100E  0E00               	movlw	0
  5934  001010  0100               	movlb	0	; () banked
  5935  001012  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5936  001014  0E00               	movlw	0
  5937  001016  0100               	movlb	0	; () banked
  5938  001018  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5939  00101A  0100               	movlb	0	; () banked
  5940  00101C  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5941  00101E  0100               	movlb	0	; () banked
  5942  001020  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5943  001022  CFF3 F095          	movff	prodl,___flmul@temp
  5944  001026  CFF4 F096          	movff	prodh,___flmul@temp+1
  5945                           
  5946                           ; BSR set to: 0
  5947  00102A  0100               	movlb	0	; () banked
  5948  00102C  5195               	movf	___flmul@temp& (0+255),w,b
  5949  00102E  0100               	movlb	0	; () banked
  5950  001030  6F86               	movwf	??___flmul& (0+255),b
  5951  001032  0100               	movlb	0	; () banked
  5952  001034  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5953  001036  0100               	movlb	0	; () banked
  5954  001038  6F87               	movwf	(??___flmul+1)& (0+255),b
  5955  00103A  0100               	movlb	0	; () banked
  5956  00103C  6B88               	clrf	(??___flmul+2)& (0+255),b
  5957  00103E  0100               	movlb	0	; () banked
  5958  001040  6B89               	clrf	(??___flmul+3)& (0+255),b
  5959  001042  C088  F089         	movff	??___flmul+2,??___flmul+3
  5960  001046  C087  F088         	movff	??___flmul+1,??___flmul+2
  5961  00104A  C086  F087         	movff	??___flmul,??___flmul+1
  5962  00104E  0100               	movlb	0	; () banked
  5963  001050  6B86               	clrf	??___flmul& (0+255),b
  5964  001052  0100               	movlb	0	; () banked
  5965  001054  5186               	movf	??___flmul& (0+255),w,b
  5966  001056  0100               	movlb	0	; () banked
  5967  001058  2791               	addwf	___flmul@prod& (0+255),f,b
  5968  00105A  0100               	movlb	0	; () banked
  5969  00105C  5187               	movf	(??___flmul+1)& (0+255),w,b
  5970  00105E  0100               	movlb	0	; () banked
  5971  001060  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5972  001062  0100               	movlb	0	; () banked
  5973  001064  5188               	movf	(??___flmul+2)& (0+255),w,b
  5974  001066  0100               	movlb	0	; () banked
  5975  001068  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5976  00106A  0100               	movlb	0	; () banked
  5977  00106C  5189               	movf	(??___flmul+3)& (0+255),w,b
  5978  00106E  0100               	movlb	0	; () banked
  5979  001070  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5980                           
  5981                           ; BSR set to: 0
  5982  001072  C08C  F086         	movff	___flmul@grs,??___flmul
  5983  001076  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5984  00107A  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5985  00107E  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5986  001082  0E19               	movlw	25
  5987  001084  D006               	goto	u5310
  5988  001086                     u5315:
  5989  001086  0100               	movlb	0	; () banked
  5990  001088  90D8               	bcf	status,0,c
  5991  00108A  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5992  00108C  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5993  00108E  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5994  001090  3386               	rrcf	??___flmul& (0+255),f,b
  5995  001092                     u5310:
  5996  001092  2EE8               	decfsz	wreg,f,c
  5997  001094  D7F8               	goto	u5315
  5998  001096  0100               	movlb	0	; () banked
  5999  001098  5186               	movf	??___flmul& (0+255),w,b
  6000  00109A  0100               	movlb	0	; () banked
  6001  00109C  2791               	addwf	___flmul@prod& (0+255),f,b
  6002  00109E  0100               	movlb	0	; () banked
  6003  0010A0  5187               	movf	(??___flmul+1)& (0+255),w,b
  6004  0010A2  0100               	movlb	0	; () banked
  6005  0010A4  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6006  0010A6  0100               	movlb	0	; () banked
  6007  0010A8  5188               	movf	(??___flmul+2)& (0+255),w,b
  6008  0010AA  0100               	movlb	0	; () banked
  6009  0010AC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6010  0010AE  0100               	movlb	0	; () banked
  6011  0010B0  5189               	movf	(??___flmul+3)& (0+255),w,b
  6012  0010B2  0100               	movlb	0	; () banked
  6013  0010B4  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 0
  6016  0010B6  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  6017  0010BA  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  6018  0010BE  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  6019  0010C2  0100               	movlb	0	; () banked
  6020  0010C4  6B8C               	clrf	___flmul@grs& (0+255),b
  6021                           
  6022                           ; BSR set to: 0
  6023  0010C6  0100               	movlb	0	; () banked
  6024  0010C8  518B               	movf	___flmul@aexp& (0+255),w,b
  6025  0010CA  C090  F086         	movff	___flmul@bexp,??___flmul
  6026  0010CE  0100               	movlb	0	; () banked
  6027  0010D0  6B87               	clrf	(??___flmul+1)& (0+255),b
  6028  0010D2  0100               	movlb	0	; () banked
  6029  0010D4  2786               	addwf	??___flmul& (0+255),f,b
  6030  0010D6  0E00               	movlw	0
  6031  0010D8  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  6032  0010DA  0E82               	movlw	130
  6033  0010DC  0100               	movlb	0	; () banked
  6034  0010DE  2586               	addwf	??___flmul& (0+255),w,b
  6035  0010E0  0100               	movlb	0	; () banked
  6036  0010E2  6F95               	movwf	___flmul@temp& (0+255),b
  6037  0010E4  0EFF               	movlw	255
  6038  0010E6  0100               	movlb	0	; () banked
  6039  0010E8  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  6040  0010EA  0100               	movlb	0	; () banked
  6041  0010EC  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  6042  0010EE  D015               	goto	l4747
  6043  0010F0                     l4741:
  6044                           
  6045                           ; BSR set to: 0
  6046  0010F0  0100               	movlb	0	; () banked
  6047  0010F2  90D8               	bcf	status,0,c
  6048  0010F4  3791               	rlcf	___flmul@prod& (0+255),f,b
  6049  0010F6  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6050  0010F8  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6051  0010FA  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6052                           
  6053                           ; BSR set to: 0
  6054  0010FC  0100               	movlb	0	; () banked
  6055  0010FE  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6056  001100  D002               	goto	l1074
  6057                           
  6058                           ; BSR set to: 0
  6059  001102  0100               	movlb	0	; () banked
  6060  001104  8191               	bsf	___flmul@prod& (0+255),0,b
  6061  001106                     l1074:
  6062                           
  6063                           ; BSR set to: 0
  6064  001106  0100               	movlb	0	; () banked
  6065  001108  90D8               	bcf	status,0,c
  6066  00110A  378C               	rlcf	___flmul@grs& (0+255),f,b
  6067  00110C  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6068  00110E  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6069  001110  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6070  001112  0100               	movlb	0	; () banked
  6071  001114  0795               	decf	___flmul@temp& (0+255),f,b
  6072  001116  A0D8               	btfss	status,0,c
  6073  001118  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  6074  00111A                     l4747:
  6075                           
  6076                           ; BSR set to: 0
  6077  00111A  0100               	movlb	0	; () banked
  6078  00111C  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  6079  00111E  D7E8               	goto	l4741
  6080                           
  6081                           ; BSR set to: 0
  6082                           
  6083                           ; BSR set to: 0
  6084  001120  0E00               	movlw	0
  6085  001122  0100               	movlb	0	; () banked
  6086  001124  6F8B               	movwf	___flmul@aexp& (0+255),b
  6087                           
  6088                           ; BSR set to: 0
  6089  001126  0100               	movlb	0	; () banked
  6090  001128  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6091  00112A  D024               	goto	l1076
  6092                           
  6093                           ; BSR set to: 0
  6094  00112C  0EFF               	movlw	255
  6095  00112E  0100               	movlb	0	; () banked
  6096  001130  158C               	andwf	___flmul@grs& (0+255),w,b
  6097  001132  0100               	movlb	0	; () banked
  6098  001134  6F86               	movwf	??___flmul& (0+255),b
  6099  001136  0EFF               	movlw	255
  6100  001138  0100               	movlb	0	; () banked
  6101  00113A  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  6102  00113C  0100               	movlb	0	; () banked
  6103  00113E  6F87               	movwf	(??___flmul+1)& (0+255),b
  6104  001140  0EFF               	movlw	255
  6105  001142  0100               	movlb	0	; () banked
  6106  001144  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  6107  001146  0100               	movlb	0	; () banked
  6108  001148  6F88               	movwf	(??___flmul+2)& (0+255),b
  6109  00114A  0E7F               	movlw	127
  6110  00114C  0100               	movlb	0	; () banked
  6111  00114E  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  6112  001150  0100               	movlb	0	; () banked
  6113  001152  6F89               	movwf	(??___flmul+3)& (0+255),b
  6114  001154  0100               	movlb	0	; () banked
  6115  001156  5186               	movf	??___flmul& (0+255),w,b
  6116  001158  0100               	movlb	0	; () banked
  6117  00115A  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  6118  00115C  0100               	movlb	0	; () banked
  6119  00115E  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  6120  001160  0100               	movlb	0	; () banked
  6121  001162  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  6122  001164  A4D8               	btfss	status,2,c
  6123  001166  D003               	goto	l4757
  6124                           
  6125                           ; BSR set to: 0
  6126                           
  6127                           ; BSR set to: 0
  6128  001168  0100               	movlb	0	; () banked
  6129  00116A  A191               	btfss	___flmul@prod& (0+255),0,b
  6130  00116C  D003               	goto	l1076
  6131  00116E                     l4757:
  6132                           
  6133                           ; BSR set to: 0
  6134  00116E  0E01               	movlw	1
  6135  001170  0100               	movlb	0	; () banked
  6136  001172  6F8B               	movwf	___flmul@aexp& (0+255),b
  6137  001174                     l1076:
  6138                           
  6139                           ; BSR set to: 0
  6140  001174  0100               	movlb	0	; () banked
  6141  001176  518B               	movf	___flmul@aexp& (0+255),w,b
  6142  001178  0100               	movlb	0	; () banked
  6143  00117A  B4D8               	btfsc	status,2,c
  6144  00117C  D023               	goto	l4767
  6145                           
  6146                           ; BSR set to: 0
  6147  00117E  0E01               	movlw	1
  6148  001180  0100               	movlb	0	; () banked
  6149  001182  2791               	addwf	___flmul@prod& (0+255),f,b
  6150  001184  0E00               	movlw	0
  6151  001186  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6152  001188  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6153  00118A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6154                           
  6155                           ; BSR set to: 0
  6156  00118C  0100               	movlb	0	; () banked
  6157  00118E  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  6158  001190  D019               	goto	l4767
  6159                           
  6160                           ; BSR set to: 0
  6161  001192  C091  F086         	movff	___flmul@prod,??___flmul
  6162  001196  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  6163  00119A  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  6164  00119E  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  6165  0011A2  0100               	movlb	0	; () banked
  6166  0011A4  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  6167  0011A6  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  6168  0011A8  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  6169  0011AA  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  6170  0011AC  3386               	rrcf	??___flmul& (0+255),f,b
  6171  0011AE  C086  F091         	movff	??___flmul,___flmul@prod
  6172  0011B2  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  6173  0011B6  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  6174  0011BA  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  6175                           
  6176                           ; BSR set to: 0
  6177  0011BE  0100               	movlb	0	; () banked
  6178  0011C0  4B95               	infsnz	___flmul@temp& (0+255),f,b
  6179  0011C2  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  6180  0011C4                     l4767:
  6181                           
  6182                           ; BSR set to: 0
  6183  0011C4  0100               	movlb	0	; () banked
  6184  0011C6  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6185  0011C8  D010               	goto	l4771
  6186  0011CA  0100               	movlb	0	; () banked
  6187  0011CC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6188  0011CE  E104               	bnz	u5390
  6189  0011D0  0100               	movlb	0	; () banked
  6190  0011D2  2995               	incf	___flmul@temp& (0+255),w,b
  6191  0011D4  A0D8               	btfss	status,0,c
  6192  0011D6  D009               	goto	l4771
  6193  0011D8                     u5390:
  6194                           
  6195                           ; BSR set to: 0
  6196  0011D8  0E00               	movlw	0
  6197  0011DA  0100               	movlb	0	; () banked
  6198  0011DC  6F91               	movwf	___flmul@prod& (0+255),b
  6199  0011DE  0E00               	movlw	0
  6200  0011E0  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6201  0011E2  0E80               	movlw	128
  6202  0011E4  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6203  0011E6  0E7F               	movlw	127
  6204  0011E8  D02B               	goto	L8
  6205  0011EA                     l4771:
  6206                           
  6207                           ; BSR set to: 0
  6208  0011EA  0100               	movlb	0	; () banked
  6209  0011EC  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6210  0011EE  D007               	goto	l4773
  6211  0011F0  0100               	movlb	0	; () banked
  6212  0011F2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6213  0011F4  E111               	bnz	l1084
  6214  0011F6  0100               	movlb	0	; () banked
  6215  0011F8  0595               	decf	___flmul@temp& (0+255),w,b
  6216  0011FA  B0D8               	btfsc	status,0,c
  6217  0011FC  D00D               	goto	l1084
  6218  0011FE                     l4773:
  6219                           
  6220                           ; BSR set to: 0
  6221  0011FE  0E00               	movlw	0
  6222  001200  0100               	movlb	0	; () banked
  6223  001202  6F91               	movwf	___flmul@prod& (0+255),b
  6224  001204  0E00               	movlw	0
  6225  001206  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6226  001208  0E00               	movlw	0
  6227  00120A  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6228  00120C  0E00               	movlw	0
  6229  00120E  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6230  001210  0E00               	movlw	0
  6231  001212  0100               	movlb	0	; () banked
  6232  001214  6F8A               	movwf	___flmul@sign& (0+255),b
  6233  001216  D015               	goto	l4783
  6234  001218                     l1084:
  6235                           
  6236                           ; BSR set to: 0
  6237  001218  C095  F090         	movff	___flmul@temp,___flmul@bexp
  6238                           
  6239                           ; BSR set to: 0
  6240  00121C  0EFF               	movlw	255
  6241  00121E  0100               	movlb	0	; () banked
  6242  001220  1791               	andwf	___flmul@prod& (0+255),f,b
  6243  001222  0EFF               	movlw	255
  6244  001224  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  6245  001226  0E7F               	movlw	127
  6246  001228  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  6247  00122A  0E00               	movlw	0
  6248  00122C  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  6249                           
  6250                           ; BSR set to: 0
  6251  00122E  0100               	movlb	0	; () banked
  6252  001230  A190               	btfss	___flmul@bexp& (0+255),0,b
  6253  001232  D002               	goto	l4781
  6254                           
  6255                           ; BSR set to: 0
  6256  001234  0100               	movlb	0	; () banked
  6257  001236  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  6258  001238                     l4781:
  6259                           
  6260                           ; BSR set to: 0
  6261  001238  0100               	movlb	0	; () banked
  6262  00123A  90D8               	bcf	status,0,c
  6263  00123C  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6264  00123E  0100               	movlb	0	; () banked
  6265  001240                     L8:
  6266  001240  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6267  001242                     l4783:
  6268                           
  6269                           ; BSR set to: 0
  6270  001242  0100               	movlb	0	; () banked
  6271  001244  518A               	movf	___flmul@sign& (0+255),w,b
  6272  001246  0100               	movlb	0	; () banked
  6273  001248  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276  00124A  C091  F07E         	movff	___flmul@prod,?___flmul
  6277  00124E  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6278  001252  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6279  001256  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6280  00125A  0012               	return	
  6281  00125C                     __end_of___flmul:
  6282                           	opt stack 0
  6283                           tblptru	equ	0xFF8
  6284                           tblptrh	equ	0xFF7
  6285                           tblptrl	equ	0xFF6
  6286                           tablat	equ	0xFF5
  6287                           prodh	equ	0xFF4
  6288                           prodl	equ	0xFF3
  6289                           intcon	equ	0xFF2
  6290                           postinc0	equ	0xFEE
  6291                           wreg	equ	0xFE8
  6292                           indf1	equ	0xFE7
  6293                           postinc1	equ	0xFE6
  6294                           fsr1h	equ	0xFE2
  6295                           fsr1l	equ	0xFE1
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8
  6301                           
  6302 ;; *************** function ___awmod *****************
  6303 ;; Defined at:
  6304 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  dividend        2   23[COMRAM] int 
  6307 ;;  divisor         2   25[COMRAM] int 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  sign            1   28[COMRAM] unsigned char 
  6310 ;;  counter         1   27[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2   23[COMRAM] int 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6320 ;;      Params:         4       0       0       0
  6321 ;;      Locals:         2       0       0       0
  6322 ;;      Temps:          0       0       0       0
  6323 ;;      Totals:         6       0       0       0
  6324 ;;Total ram usage:        6 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    4
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_fround
  6331 ;;		_scale
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text18
  6336  002B9A                     __ptext18:
  6337                           	opt stack 0
  6338  002B9A                     ___awmod:
  6339                           	opt stack 23
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;incstack = 0
  6343  002B9A  0E00               	movlw	0
  6344  002B9C  6E42               	movwf	___awmod@sign,c
  6345  002B9E  AE3E               	btfss	___awmod@dividend+1,7,c
  6346  002BA0  D006               	goto	l4841
  6347  002BA2  6C3D               	negf	___awmod@dividend,c
  6348  002BA4  1E3E               	comf	___awmod@dividend+1,f,c
  6349  002BA6  B0D8               	btfsc	status,0,c
  6350  002BA8  2A3E               	incf	___awmod@dividend+1,f,c
  6351  002BAA  0E01               	movlw	1
  6352  002BAC  6E42               	movwf	___awmod@sign,c
  6353  002BAE                     l4841:
  6354  002BAE  AE40               	btfss	___awmod@divisor+1,7,c
  6355  002BB0  D004               	goto	l4845
  6356  002BB2  6C3F               	negf	___awmod@divisor,c
  6357  002BB4  1E40               	comf	___awmod@divisor+1,f,c
  6358  002BB6  B0D8               	btfsc	status,0,c
  6359  002BB8  2A40               	incf	___awmod@divisor+1,f,c
  6360  002BBA                     l4845:
  6361  002BBA  503F               	movf	___awmod@divisor,w,c
  6362  002BBC  1040               	iorwf	___awmod@divisor+1,w,c
  6363  002BBE  B4D8               	btfsc	status,2,c
  6364  002BC0  D018               	goto	l4861
  6365  002BC2  0E01               	movlw	1
  6366  002BC4  6E41               	movwf	___awmod@counter,c
  6367  002BC6  D004               	goto	l4851
  6368  002BC8                     l4849:
  6369  002BC8  90D8               	bcf	status,0,c
  6370  002BCA  363F               	rlcf	___awmod@divisor,f,c
  6371  002BCC  3640               	rlcf	___awmod@divisor+1,f,c
  6372  002BCE  2A41               	incf	___awmod@counter,f,c
  6373  002BD0                     l4851:
  6374  002BD0  AE40               	btfss	___awmod@divisor+1,7,c
  6375  002BD2  D7FA               	goto	l4849
  6376  002BD4                     l4853:
  6377  002BD4  503F               	movf	___awmod@divisor,w,c
  6378  002BD6  5C3D               	subwf	___awmod@dividend,w,c
  6379  002BD8  5040               	movf	___awmod@divisor+1,w,c
  6380  002BDA  583E               	subwfb	___awmod@dividend+1,w,c
  6381  002BDC  A0D8               	btfss	status,0,c
  6382  002BDE  D004               	goto	l4857
  6383  002BE0  503F               	movf	___awmod@divisor,w,c
  6384  002BE2  5E3D               	subwf	___awmod@dividend,f,c
  6385  002BE4  5040               	movf	___awmod@divisor+1,w,c
  6386  002BE6  5A3E               	subwfb	___awmod@dividend+1,f,c
  6387  002BE8                     l4857:
  6388  002BE8  90D8               	bcf	status,0,c
  6389  002BEA  3240               	rrcf	___awmod@divisor+1,f,c
  6390  002BEC  323F               	rrcf	___awmod@divisor,f,c
  6391  002BEE  2E41               	decfsz	___awmod@counter,f,c
  6392  002BF0  D7F1               	goto	l4853
  6393  002BF2                     l4861:
  6394  002BF2  5042               	movf	___awmod@sign,w,c
  6395  002BF4  B4D8               	btfsc	status,2,c
  6396  002BF6  D004               	goto	l4865
  6397  002BF8  6C3D               	negf	___awmod@dividend,c
  6398  002BFA  1E3E               	comf	___awmod@dividend+1,f,c
  6399  002BFC  B0D8               	btfsc	status,0,c
  6400  002BFE  2A3E               	incf	___awmod@dividend+1,f,c
  6401  002C00                     l4865:
  6402  002C00  C03D  F03D         	movff	___awmod@dividend,?___awmod
  6403  002C04  C03E  F03E         	movff	___awmod@dividend+1,?___awmod+1
  6404  002C08  0012               	return	
  6405  002C0A                     __end_of___awmod:
  6406                           	opt stack 0
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           intcon	equ	0xFF2
  6414                           postinc0	equ	0xFEE
  6415                           wreg	equ	0xFE8
  6416                           indf1	equ	0xFE7
  6417                           postinc1	equ	0xFE6
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           postinc2	equ	0xFDE
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426 ;; *************** function ___awdiv *****************
  6427 ;; Defined at:
  6428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  dividend        2   16[BANK0 ] int 
  6431 ;;  divisor         2   18[BANK0 ] int 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  quotient        2   22[BANK0 ] int 
  6434 ;;  sign            1   21[BANK0 ] unsigned char 
  6435 ;;  counter         1   20[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2   16[BANK0 ] int 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6445 ;;      Params:         0       4       0       0
  6446 ;;      Locals:         0       4       0       0
  6447 ;;      Temps:          0       0       0       0
  6448 ;;      Totals:         0       8       0       0
  6449 ;;Total ram usage:        8 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    4
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_fround
  6456 ;;		_scale
  6457 ;;		_sprintf
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text19
  6462  0029B8                     __ptext19:
  6463                           	opt stack 0
  6464  0029B8                     ___awdiv:
  6465                           	opt stack 23
  6466                           
  6467                           ;incstack = 0
  6468  0029B8  0E00               	movlw	0
  6469  0029BA  0100               	movlb	0	; () banked
  6470  0029BC  6F75               	movwf	___awdiv@sign& (0+255),b
  6471                           
  6472                           ; BSR set to: 0
  6473  0029BE  0100               	movlb	0	; () banked
  6474  0029C0  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6475  0029C2  D008               	goto	l4797
  6476                           
  6477                           ; BSR set to: 0
  6478  0029C4  0100               	movlb	0	; () banked
  6479  0029C6  6D72               	negf	___awdiv@divisor& (0+255),b
  6480  0029C8  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6481  0029CA  B0D8               	btfsc	status,0,c
  6482  0029CC  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6483                           
  6484                           ; BSR set to: 0
  6485  0029CE  0E01               	movlw	1
  6486  0029D0  0100               	movlb	0	; () banked
  6487  0029D2  6F75               	movwf	___awdiv@sign& (0+255),b
  6488  0029D4                     l4797:
  6489                           
  6490                           ; BSR set to: 0
  6491  0029D4  0100               	movlb	0	; () banked
  6492  0029D6  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6493  0029D8  D008               	goto	l4803
  6494                           
  6495                           ; BSR set to: 0
  6496  0029DA  0100               	movlb	0	; () banked
  6497  0029DC  6D70               	negf	___awdiv@dividend& (0+255),b
  6498  0029DE  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6499  0029E0  B0D8               	btfsc	status,0,c
  6500  0029E2  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 0
  6503  0029E4  0E01               	movlw	1
  6504  0029E6  0100               	movlb	0	; () banked
  6505  0029E8  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6506  0029EA                     l4803:
  6507                           
  6508                           ; BSR set to: 0
  6509  0029EA  0E00               	movlw	0
  6510  0029EC  0100               	movlb	0	; () banked
  6511  0029EE  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6512  0029F0  0E00               	movlw	0
  6513  0029F2  6F76               	movwf	___awdiv@quotient& (0+255),b
  6514                           
  6515                           ; BSR set to: 0
  6516  0029F4  0100               	movlb	0	; () banked
  6517  0029F6  5172               	movf	___awdiv@divisor& (0+255),w,b
  6518  0029F8  0100               	movlb	0	; () banked
  6519  0029FA  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6520  0029FC  B4D8               	btfsc	status,2,c
  6521  0029FE  D02C               	goto	l4825
  6522                           
  6523                           ; BSR set to: 0
  6524  002A00  0E01               	movlw	1
  6525  002A02  0100               	movlb	0	; () banked
  6526  002A04  6F74               	movwf	___awdiv@counter& (0+255),b
  6527  002A06  D006               	goto	l4811
  6528  002A08                     l4809:
  6529                           
  6530                           ; BSR set to: 0
  6531  002A08  0100               	movlb	0	; () banked
  6532  002A0A  90D8               	bcf	status,0,c
  6533  002A0C  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6534  002A0E  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6535  002A10  0100               	movlb	0	; () banked
  6536  002A12  2B74               	incf	___awdiv@counter& (0+255),f,b
  6537  002A14                     l4811:
  6538                           
  6539                           ; BSR set to: 0
  6540  002A14  0100               	movlb	0	; () banked
  6541  002A16  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6542  002A18  D7F7               	goto	l4809
  6543  002A1A                     l4813:
  6544                           
  6545                           ; BSR set to: 0
  6546  002A1A  0100               	movlb	0	; () banked
  6547  002A1C  90D8               	bcf	status,0,c
  6548  002A1E  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6549  002A20  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6550                           
  6551                           ; BSR set to: 0
  6552  002A22  0100               	movlb	0	; () banked
  6553  002A24  5172               	movf	___awdiv@divisor& (0+255),w,b
  6554  002A26  0100               	movlb	0	; () banked
  6555  002A28  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6556  002A2A  0100               	movlb	0	; () banked
  6557  002A2C  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6558  002A2E  0100               	movlb	0	; () banked
  6559  002A30  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6560  002A32  A0D8               	btfss	status,0,c
  6561  002A34  D00A               	goto	l4821
  6562                           
  6563                           ; BSR set to: 0
  6564  002A36  0100               	movlb	0	; () banked
  6565  002A38  5172               	movf	___awdiv@divisor& (0+255),w,b
  6566  002A3A  0100               	movlb	0	; () banked
  6567  002A3C  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6568  002A3E  0100               	movlb	0	; () banked
  6569  002A40  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6570  002A42  0100               	movlb	0	; () banked
  6571  002A44  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6572                           
  6573                           ; BSR set to: 0
  6574  002A46  0100               	movlb	0	; () banked
  6575  002A48  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6576  002A4A                     l4821:
  6577                           
  6578                           ; BSR set to: 0
  6579  002A4A  0100               	movlb	0	; () banked
  6580  002A4C  90D8               	bcf	status,0,c
  6581  002A4E  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6582  002A50  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585  002A52  0100               	movlb	0	; () banked
  6586  002A54  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6587  002A56  D7E1               	goto	l4813
  6588  002A58                     l4825:
  6589                           
  6590                           ; BSR set to: 0
  6591  002A58  0100               	movlb	0	; () banked
  6592  002A5A  5175               	movf	___awdiv@sign& (0+255),w,b
  6593  002A5C  0100               	movlb	0	; () banked
  6594  002A5E  B4D8               	btfsc	status,2,c
  6595  002A60  D005               	goto	l4829
  6596                           
  6597                           ; BSR set to: 0
  6598  002A62  0100               	movlb	0	; () banked
  6599  002A64  6D76               	negf	___awdiv@quotient& (0+255),b
  6600  002A66  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6601  002A68  B0D8               	btfsc	status,0,c
  6602  002A6A  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6603  002A6C                     l4829:
  6604                           
  6605                           ; BSR set to: 0
  6606  002A6C  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6607  002A70  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6608  002A74  0012               	return	
  6609  002A76                     __end_of___awdiv:
  6610                           	opt stack 0
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           postinc1	equ	0xFE6
  6622                           fsr1h	equ	0xFE2
  6623                           fsr1l	equ	0xFE1
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           fsr2h	equ	0xFDA
  6627                           fsr2l	equ	0xFD9
  6628                           status	equ	0xFD8
  6629                           
  6630 ;; *************** function __tdiv_to_l_ *****************
  6631 ;; Defined at:
  6632 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  f1              4   23[COMRAM] float 
  6635 ;;  f2              4   27[COMRAM] float 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  quot            4   19[BANK0 ] unsigned long 
  6638 ;;  exp1            1   24[BANK0 ] unsigned char 
  6639 ;;  cntr            1   23[BANK0 ] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  4   23[COMRAM] unsigned long 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6649 ;;      Params:         8       0       0       0
  6650 ;;      Locals:         0       6       0       0
  6651 ;;      Temps:          0       3       0       0
  6652 ;;      Totals:         8       9       0       0
  6653 ;;Total ram usage:       17 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    4
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_sprintf
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text20
  6664  00201E                     __ptext20:
  6665                           	opt stack 0
  6666  00201E                     __tdiv_to_l_:
  6667                           	opt stack 24
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;incstack = 0
  6671  00201E  C03F  F070         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6672  002022  0100               	movlb	0	; () banked
  6673  002024  6B71               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6674  002026  6B72               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6675  002028  343E               	rlcf	__tdiv_to_l_@f1+1,w,c
  6676  00202A  0100               	movlb	0	; () banked
  6677  00202C  3770               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6678  00202E  E301               	bnc	u5631
  6679  002030  8171               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6680  002032                     u5631:
  6681  002032  0100               	movlb	0	; () banked
  6682  002034  5170               	movf	??__tdiv_to_l_& (0+255),w,b
  6683  002036  0100               	movlb	0	; () banked
  6684  002038  6F78               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6685  00203A  0100               	movlb	0	; () banked
  6686  00203C  5178               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6687  00203E  A4D8               	btfss	status,2,c
  6688  002040  D009               	goto	l4971
  6689                           
  6690                           ; BSR set to: 0
  6691  002042  0E00               	movlw	0
  6692  002044  6E3D               	movwf	?__tdiv_to_l_,c
  6693  002046  0E00               	movlw	0
  6694  002048  6E3E               	movwf	?__tdiv_to_l_+1,c
  6695  00204A  0E00               	movlw	0
  6696  00204C  6E3F               	movwf	?__tdiv_to_l_+2,c
  6697  00204E  0E00               	movlw	0
  6698  002050  6E40               	movwf	?__tdiv_to_l_+3,c
  6699                           
  6700                           ; BSR set to: 0
  6701  002052  0012               	return	
  6702  002054                     l4971:
  6703                           
  6704                           ; BSR set to: 0
  6705  002054  C043  F070         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6706  002058  0100               	movlb	0	; () banked
  6707  00205A  6B71               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6708  00205C  6B72               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6709  00205E  3442               	rlcf	__tdiv_to_l_@f2+1,w,c
  6710  002060  0100               	movlb	0	; () banked
  6711  002062  3770               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6712  002064  E301               	bnc	u5651
  6713  002066  8171               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6714  002068                     u5651:
  6715  002068  0100               	movlb	0	; () banked
  6716  00206A  5170               	movf	??__tdiv_to_l_& (0+255),w,b
  6717  00206C  0100               	movlb	0	; () banked
  6718  00206E  6F77               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6719  002070  0100               	movlb	0	; () banked
  6720  002072  5177               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6721  002074  A4D8               	btfss	status,2,c
  6722  002076  D009               	goto	l4977
  6723                           
  6724                           ; BSR set to: 0
  6725  002078  0E00               	movlw	0
  6726  00207A  6E3D               	movwf	?__tdiv_to_l_,c
  6727  00207C  0E00               	movlw	0
  6728  00207E  6E3E               	movwf	?__tdiv_to_l_+1,c
  6729  002080  0E00               	movlw	0
  6730  002082  6E3F               	movwf	?__tdiv_to_l_+2,c
  6731  002084  0E00               	movlw	0
  6732  002086  6E40               	movwf	?__tdiv_to_l_+3,c
  6733                           
  6734                           ; BSR set to: 0
  6735  002088  0012               	return	
  6736  00208A                     l4977:
  6737                           
  6738                           ; BSR set to: 0
  6739  00208A  8E3E               	bsf	__tdiv_to_l_@f1+1,7,c
  6740                           
  6741                           ; BSR set to: 0
  6742  00208C  0EFF               	movlw	255
  6743  00208E  163D               	andwf	__tdiv_to_l_@f1,f,c
  6744  002090  0EFF               	movlw	255
  6745  002092  163E               	andwf	__tdiv_to_l_@f1+1,f,c
  6746  002094  0E00               	movlw	0
  6747  002096  163F               	andwf	__tdiv_to_l_@f1+2,f,c
  6748  002098  8E42               	bsf	__tdiv_to_l_@f2+1,7,c
  6749                           
  6750                           ; BSR set to: 0
  6751  00209A  0EFF               	movlw	255
  6752  00209C  1641               	andwf	__tdiv_to_l_@f2,f,c
  6753  00209E  0EFF               	movlw	255
  6754  0020A0  1642               	andwf	__tdiv_to_l_@f2+1,f,c
  6755  0020A2  0E00               	movlw	0
  6756  0020A4  1643               	andwf	__tdiv_to_l_@f2+2,f,c
  6757                           
  6758                           ; BSR set to: 0
  6759  0020A6  0E00               	movlw	0
  6760  0020A8  0100               	movlb	0	; () banked
  6761  0020AA  6F73               	movwf	__tdiv_to_l_@quot& (0+255),b
  6762  0020AC  0E00               	movlw	0
  6763  0020AE  6F74               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6764  0020B0  0E00               	movlw	0
  6765  0020B2  6F75               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6766  0020B4  0E00               	movlw	0
  6767  0020B6  6F76               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6768                           
  6769                           ; BSR set to: 0
  6770  0020B8  0E7F               	movlw	127
  6771  0020BA  0100               	movlb	0	; () banked
  6772  0020BC  5F78               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6773                           
  6774                           ; BSR set to: 0
  6775  0020BE  0100               	movlb	0	; () banked
  6776  0020C0  5177               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6777  0020C2  0F98               	addlw	152
  6778  0020C4  0100               	movlb	0	; () banked
  6779  0020C6  5F78               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6780                           
  6781                           ; BSR set to: 0
  6782  0020C8  0E18               	movlw	24
  6783  0020CA  0100               	movlb	0	; () banked
  6784  0020CC  6F77               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6785  0020CE                     l791:
  6786                           
  6787                           ; BSR set to: 0
  6788  0020CE  0100               	movlb	0	; () banked
  6789  0020D0  90D8               	bcf	status,0,c
  6790  0020D2  3773               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6791  0020D4  3774               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6792  0020D6  3775               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6793  0020D8  3776               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6794                           
  6795                           ; BSR set to: 0
  6796  0020DA  5041               	movf	__tdiv_to_l_@f2,w,c
  6797  0020DC  5C3D               	subwf	__tdiv_to_l_@f1,w,c
  6798  0020DE  5042               	movf	__tdiv_to_l_@f2+1,w,c
  6799  0020E0  583E               	subwfb	__tdiv_to_l_@f1+1,w,c
  6800  0020E2  5043               	movf	__tdiv_to_l_@f2+2,w,c
  6801  0020E4  583F               	subwfb	__tdiv_to_l_@f1+2,w,c
  6802  0020E6  A0D8               	btfss	status,0,c
  6803  0020E8  D008               	goto	l792
  6804                           
  6805                           ; BSR set to: 0
  6806  0020EA  5041               	movf	__tdiv_to_l_@f2,w,c
  6807  0020EC  5E3D               	subwf	__tdiv_to_l_@f1,f,c
  6808  0020EE  5042               	movf	__tdiv_to_l_@f2+1,w,c
  6809  0020F0  5A3E               	subwfb	__tdiv_to_l_@f1+1,f,c
  6810  0020F2  5043               	movf	__tdiv_to_l_@f2+2,w,c
  6811  0020F4  5A3F               	subwfb	__tdiv_to_l_@f1+2,f,c
  6812                           
  6813                           ; BSR set to: 0
  6814  0020F6  0100               	movlb	0	; () banked
  6815  0020F8  8173               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6816  0020FA                     l792:
  6817                           
  6818                           ; BSR set to: 0
  6819  0020FA  90D8               	bcf	status,0,c
  6820  0020FC  363D               	rlcf	__tdiv_to_l_@f1,f,c
  6821  0020FE  363E               	rlcf	__tdiv_to_l_@f1+1,f,c
  6822  002100  363F               	rlcf	__tdiv_to_l_@f1+2,f,c
  6823                           
  6824                           ; BSR set to: 0
  6825  002102  0100               	movlb	0	; () banked
  6826  002104  2F77               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6827  002106  D7E3               	goto	l791
  6828                           
  6829                           ; BSR set to: 0
  6830                           
  6831                           ; BSR set to: 0
  6832  002108  0100               	movlb	0	; () banked
  6833  00210A  AF78               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6834  00210C  D019               	goto	l5011
  6835                           
  6836                           ; BSR set to: 0
  6837  00210E  0100               	movlb	0	; () banked
  6838  002110  5178               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6839  002112  0A80               	xorlw	128
  6840  002114  0F97               	addlw	151
  6841  002116  B0D8               	btfsc	status,0,c
  6842  002118  D009               	goto	l5007
  6843                           
  6844                           ; BSR set to: 0
  6845  00211A  0E00               	movlw	0
  6846  00211C  6E3D               	movwf	?__tdiv_to_l_,c
  6847  00211E  0E00               	movlw	0
  6848  002120  6E3E               	movwf	?__tdiv_to_l_+1,c
  6849  002122  0E00               	movlw	0
  6850  002124  6E3F               	movwf	?__tdiv_to_l_+2,c
  6851  002126  0E00               	movlw	0
  6852  002128  6E40               	movwf	?__tdiv_to_l_+3,c
  6853                           
  6854                           ; BSR set to: 0
  6855  00212A  0012               	return	
  6856  00212C                     l5007:
  6857                           
  6858                           ; BSR set to: 0
  6859  00212C  0100               	movlb	0	; () banked
  6860  00212E  90D8               	bcf	status,0,c
  6861  002130  3376               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6862  002132  3375               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6863  002134  3374               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6864  002136  3373               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6865                           
  6866                           ; BSR set to: 0
  6867  002138  0100               	movlb	0	; () banked
  6868  00213A  3F78               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6869  00213C  D7F7               	goto	l5007
  6870                           
  6871                           ; BSR set to: 0
  6872  00213E  D01A               	goto	l798
  6873  002140                     l5011:
  6874                           
  6875                           ; BSR set to: 0
  6876  002140  0E17               	movlw	23
  6877  002142  0100               	movlb	0	; () banked
  6878  002144  6578               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6879  002146  D011               	goto	l5019
  6880                           
  6881                           ; BSR set to: 0
  6882  002148  0E00               	movlw	0
  6883  00214A  6E3D               	movwf	?__tdiv_to_l_,c
  6884  00214C  0E00               	movlw	0
  6885  00214E  6E3E               	movwf	?__tdiv_to_l_+1,c
  6886  002150  0E00               	movlw	0
  6887  002152  6E3F               	movwf	?__tdiv_to_l_+2,c
  6888  002154  0E00               	movlw	0
  6889  002156  6E40               	movwf	?__tdiv_to_l_+3,c
  6890                           
  6891                           ; BSR set to: 0
  6892  002158  0012               	return	
  6893  00215A                     l5017:
  6894                           
  6895                           ; BSR set to: 0
  6896  00215A  0100               	movlb	0	; () banked
  6897  00215C  90D8               	bcf	status,0,c
  6898  00215E  3773               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6899  002160  3774               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6900  002162  3775               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6901  002164  3776               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6902  002166  0100               	movlb	0	; () banked
  6903  002168  0778               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6904  00216A                     l5019:
  6905                           
  6906                           ; BSR set to: 0
  6907  00216A  0100               	movlb	0	; () banked
  6908  00216C  5178               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6909  00216E  0100               	movlb	0	; () banked
  6910  002170  A4D8               	btfss	status,2,c
  6911  002172  D7F3               	goto	l5017
  6912  002174                     l798:
  6913                           
  6914                           ; BSR set to: 0
  6915  002174  C073  F03D         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6916  002178  C074  F03E         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6917  00217C  C075  F03F         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6918  002180  C076  F040         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6919                           
  6920                           ; BSR set to: 0
  6921  002184  0012               	return		;funcret
  6922  002186                     __end_of__tdiv_to_l_:
  6923                           	opt stack 0
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           intcon	equ	0xFF2
  6931                           postinc0	equ	0xFEE
  6932                           wreg	equ	0xFE8
  6933                           indf1	equ	0xFE7
  6934                           postinc1	equ	0xFE6
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           indf2	equ	0xFDF
  6938                           postinc2	equ	0xFDE
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function __div_to_l_ *****************
  6944 ;; Defined at:
  6945 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  f1              4   23[COMRAM] unsigned long 
  6948 ;;  f2              4   27[COMRAM] unsigned long 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  quot            4   16[BANK0 ] unsigned long 
  6951 ;;  exp1            1   21[BANK0 ] unsigned char 
  6952 ;;  cntr            1   20[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  4   23[COMRAM] unsigned long 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6962 ;;      Params:         8       0       0       0
  6963 ;;      Locals:         0       6       0       0
  6964 ;;      Temps:          0       0       0       0
  6965 ;;      Totals:         8       6       0       0
  6966 ;;Total ram usage:       14 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    4
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_sprintf
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text21
  6977  0022DA                     __ptext21:
  6978                           	opt stack 0
  6979  0022DA                     __div_to_l_:
  6980                           	opt stack 24
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;incstack = 0
  6984  0022DA  343F               	rlcf	__div_to_l_@f1+2,w,c
  6985  0022DC  3440               	rlcf	__div_to_l_@f1+3,w,c
  6986  0022DE  0100               	movlb	0	; () banked
  6987  0022E0  6F75               	movwf	__div_to_l_@exp1& (0+255),b
  6988  0022E2  0100               	movlb	0	; () banked
  6989  0022E4  5175               	movf	__div_to_l_@exp1& (0+255),w,b
  6990  0022E6  A4D8               	btfss	status,2,c
  6991  0022E8  D009               	goto	l5027
  6992                           
  6993                           ; BSR set to: 0
  6994  0022EA  0E00               	movlw	0
  6995  0022EC  6E3D               	movwf	?__div_to_l_,c
  6996  0022EE  0E00               	movlw	0
  6997  0022F0  6E3E               	movwf	?__div_to_l_+1,c
  6998  0022F2  0E00               	movlw	0
  6999  0022F4  6E3F               	movwf	?__div_to_l_+2,c
  7000  0022F6  0E00               	movlw	0
  7001  0022F8  6E40               	movwf	?__div_to_l_+3,c
  7002                           
  7003                           ; BSR set to: 0
  7004  0022FA  0012               	return	
  7005  0022FC                     l5027:
  7006                           
  7007                           ; BSR set to: 0
  7008  0022FC  3443               	rlcf	__div_to_l_@f2+2,w,c
  7009  0022FE  3444               	rlcf	__div_to_l_@f2+3,w,c
  7010  002300  0100               	movlb	0	; () banked
  7011  002302  6F74               	movwf	__div_to_l_@cntr& (0+255),b
  7012  002304  0100               	movlb	0	; () banked
  7013  002306  5174               	movf	__div_to_l_@cntr& (0+255),w,b
  7014  002308  A4D8               	btfss	status,2,c
  7015  00230A  D009               	goto	l5033
  7016                           
  7017                           ; BSR set to: 0
  7018  00230C  0E00               	movlw	0
  7019  00230E  6E3D               	movwf	?__div_to_l_,c
  7020  002310  0E00               	movlw	0
  7021  002312  6E3E               	movwf	?__div_to_l_+1,c
  7022  002314  0E00               	movlw	0
  7023  002316  6E3F               	movwf	?__div_to_l_+2,c
  7024  002318  0E00               	movlw	0
  7025  00231A  6E40               	movwf	?__div_to_l_+3,c
  7026                           
  7027                           ; BSR set to: 0
  7028  00231C  0012               	return	
  7029  00231E                     l5033:
  7030                           
  7031                           ; BSR set to: 0
  7032  00231E  8E3F               	bsf	__div_to_l_@f1+2,7,c
  7033                           
  7034                           ; BSR set to: 0
  7035  002320  0EFF               	movlw	255
  7036  002322  163D               	andwf	__div_to_l_@f1,f,c
  7037  002324  0EFF               	movlw	255
  7038  002326  163E               	andwf	__div_to_l_@f1+1,f,c
  7039  002328  0EFF               	movlw	255
  7040  00232A  163F               	andwf	__div_to_l_@f1+2,f,c
  7041  00232C  0E00               	movlw	0
  7042  00232E  1640               	andwf	__div_to_l_@f1+3,f,c
  7043                           
  7044                           ; BSR set to: 0
  7045  002330  8E43               	bsf	__div_to_l_@f2+2,7,c
  7046  002332  0EFF               	movlw	255
  7047  002334  1641               	andwf	__div_to_l_@f2,f,c
  7048  002336  0EFF               	movlw	255
  7049  002338  1642               	andwf	__div_to_l_@f2+1,f,c
  7050  00233A  0EFF               	movlw	255
  7051  00233C  1643               	andwf	__div_to_l_@f2+2,f,c
  7052  00233E  0E00               	movlw	0
  7053  002340  1644               	andwf	__div_to_l_@f2+3,f,c
  7054                           
  7055                           ; BSR set to: 0
  7056  002342  0E00               	movlw	0
  7057  002344  0100               	movlb	0	; () banked
  7058  002346  6F70               	movwf	__div_to_l_@quot& (0+255),b
  7059  002348  0E00               	movlw	0
  7060  00234A  6F71               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7061  00234C  0E00               	movlw	0
  7062  00234E  6F72               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7063  002350  0E00               	movlw	0
  7064  002352  6F73               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7065                           
  7066                           ; BSR set to: 0
  7067  002354  0E7F               	movlw	127
  7068  002356  0100               	movlb	0	; () banked
  7069  002358  5F75               	subwf	__div_to_l_@exp1& (0+255),f,b
  7070                           
  7071                           ; BSR set to: 0
  7072  00235A  0100               	movlb	0	; () banked
  7073  00235C  5174               	movf	__div_to_l_@cntr& (0+255),w,b
  7074  00235E  0FA0               	addlw	160
  7075  002360  0100               	movlb	0	; () banked
  7076  002362  5F75               	subwf	__div_to_l_@exp1& (0+255),f,b
  7077                           
  7078                           ; BSR set to: 0
  7079  002364  0E20               	movlw	32
  7080  002366  0100               	movlb	0	; () banked
  7081  002368  6F74               	movwf	__div_to_l_@cntr& (0+255),b
  7082  00236A                     l5047:
  7083                           
  7084                           ; BSR set to: 0
  7085  00236A  0100               	movlb	0	; () banked
  7086  00236C  90D8               	bcf	status,0,c
  7087  00236E  3770               	rlcf	__div_to_l_@quot& (0+255),f,b
  7088  002370  3771               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7089  002372  3772               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7090  002374  3773               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7091                           
  7092                           ; BSR set to: 0
  7093  002376  5041               	movf	__div_to_l_@f2,w,c
  7094  002378  5C3D               	subwf	__div_to_l_@f1,w,c
  7095  00237A  5042               	movf	__div_to_l_@f2+1,w,c
  7096  00237C  583E               	subwfb	__div_to_l_@f1+1,w,c
  7097  00237E  5043               	movf	__div_to_l_@f2+2,w,c
  7098  002380  583F               	subwfb	__div_to_l_@f1+2,w,c
  7099  002382  5044               	movf	__div_to_l_@f2+3,w,c
  7100  002384  5840               	subwfb	__div_to_l_@f1+3,w,c
  7101  002386  A0D8               	btfss	status,0,c
  7102  002388  D00A               	goto	l5055
  7103                           
  7104                           ; BSR set to: 0
  7105  00238A  5041               	movf	__div_to_l_@f2,w,c
  7106  00238C  5E3D               	subwf	__div_to_l_@f1,f,c
  7107  00238E  5042               	movf	__div_to_l_@f2+1,w,c
  7108  002390  5A3E               	subwfb	__div_to_l_@f1+1,f,c
  7109  002392  5043               	movf	__div_to_l_@f2+2,w,c
  7110  002394  5A3F               	subwfb	__div_to_l_@f1+2,f,c
  7111  002396  5044               	movf	__div_to_l_@f2+3,w,c
  7112  002398  5A40               	subwfb	__div_to_l_@f1+3,f,c
  7113                           
  7114                           ; BSR set to: 0
  7115  00239A  0100               	movlb	0	; () banked
  7116  00239C  8170               	bsf	__div_to_l_@quot& (0+255),0,b
  7117  00239E                     l5055:
  7118                           
  7119                           ; BSR set to: 0
  7120  00239E  90D8               	bcf	status,0,c
  7121  0023A0  363D               	rlcf	__div_to_l_@f1,f,c
  7122  0023A2  363E               	rlcf	__div_to_l_@f1+1,f,c
  7123  0023A4  363F               	rlcf	__div_to_l_@f1+2,f,c
  7124  0023A6  3640               	rlcf	__div_to_l_@f1+3,f,c
  7125                           
  7126                           ; BSR set to: 0
  7127  0023A8  0100               	movlb	0	; () banked
  7128  0023AA  2F74               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7129  0023AC  D7DE               	goto	l5047
  7130                           
  7131                           ; BSR set to: 0
  7132                           
  7133                           ; BSR set to: 0
  7134  0023AE  0100               	movlb	0	; () banked
  7135  0023B0  AF75               	btfss	__div_to_l_@exp1& (0+255),7,b
  7136  0023B2  D019               	goto	l5071
  7137                           
  7138                           ; BSR set to: 0
  7139  0023B4  0100               	movlb	0	; () banked
  7140  0023B6  5175               	movf	__div_to_l_@exp1& (0+255),w,b
  7141  0023B8  0A80               	xorlw	128
  7142  0023BA  0F9F               	addlw	159
  7143  0023BC  B0D8               	btfsc	status,0,c
  7144  0023BE  D009               	goto	l5067
  7145                           
  7146                           ; BSR set to: 0
  7147  0023C0  0E00               	movlw	0
  7148  0023C2  6E3D               	movwf	?__div_to_l_,c
  7149  0023C4  0E00               	movlw	0
  7150  0023C6  6E3E               	movwf	?__div_to_l_+1,c
  7151  0023C8  0E00               	movlw	0
  7152  0023CA  6E3F               	movwf	?__div_to_l_+2,c
  7153  0023CC  0E00               	movlw	0
  7154  0023CE  6E40               	movwf	?__div_to_l_+3,c
  7155                           
  7156                           ; BSR set to: 0
  7157  0023D0  0012               	return	
  7158  0023D2                     l5067:
  7159                           
  7160                           ; BSR set to: 0
  7161  0023D2  0100               	movlb	0	; () banked
  7162  0023D4  90D8               	bcf	status,0,c
  7163  0023D6  3373               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7164  0023D8  3372               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7165  0023DA  3371               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7166  0023DC  3370               	rrcf	__div_to_l_@quot& (0+255),f,b
  7167                           
  7168                           ; BSR set to: 0
  7169  0023DE  0100               	movlb	0	; () banked
  7170  0023E0  3F75               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7171  0023E2  D7F7               	goto	l5067
  7172                           
  7173                           ; BSR set to: 0
  7174  0023E4  D01A               	goto	l694
  7175  0023E6                     l5071:
  7176                           
  7177                           ; BSR set to: 0
  7178  0023E6  0E1F               	movlw	31
  7179  0023E8  0100               	movlb	0	; () banked
  7180  0023EA  6575               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7181  0023EC  D011               	goto	l5079
  7182                           
  7183                           ; BSR set to: 0
  7184  0023EE  0E00               	movlw	0
  7185  0023F0  6E3D               	movwf	?__div_to_l_,c
  7186  0023F2  0E00               	movlw	0
  7187  0023F4  6E3E               	movwf	?__div_to_l_+1,c
  7188  0023F6  0E00               	movlw	0
  7189  0023F8  6E3F               	movwf	?__div_to_l_+2,c
  7190  0023FA  0E00               	movlw	0
  7191  0023FC  6E40               	movwf	?__div_to_l_+3,c
  7192                           
  7193                           ; BSR set to: 0
  7194  0023FE  0012               	return	
  7195  002400                     l5077:
  7196                           
  7197                           ; BSR set to: 0
  7198  002400  0100               	movlb	0	; () banked
  7199  002402  90D8               	bcf	status,0,c
  7200  002404  3770               	rlcf	__div_to_l_@quot& (0+255),f,b
  7201  002406  3771               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7202  002408  3772               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7203  00240A  3773               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7204  00240C  0100               	movlb	0	; () banked
  7205  00240E  0775               	decf	__div_to_l_@exp1& (0+255),f,b
  7206  002410                     l5079:
  7207                           
  7208                           ; BSR set to: 0
  7209  002410  0100               	movlb	0	; () banked
  7210  002412  5175               	movf	__div_to_l_@exp1& (0+255),w,b
  7211  002414  0100               	movlb	0	; () banked
  7212  002416  A4D8               	btfss	status,2,c
  7213  002418  D7F3               	goto	l5077
  7214  00241A                     l694:
  7215                           
  7216                           ; BSR set to: 0
  7217  00241A  C070  F03D         	movff	__div_to_l_@quot,?__div_to_l_
  7218  00241E  C071  F03E         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7219  002422  C072  F03F         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7220  002426  C073  F040         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7221                           
  7222                           ; BSR set to: 0
  7223  00242A  0012               	return		;funcret
  7224  00242C                     __end_of__div_to_l_:
  7225                           	opt stack 0
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           postinc0	equ	0xFEE
  7234                           wreg	equ	0xFE8
  7235                           indf1	equ	0xFE7
  7236                           postinc1	equ	0xFE6
  7237                           fsr1h	equ	0xFE2
  7238                           fsr1l	equ	0xFE1
  7239                           indf2	equ	0xFDF
  7240                           postinc2	equ	0xFDE
  7241                           fsr2h	equ	0xFDA
  7242                           fsr2l	equ	0xFD9
  7243                           status	equ	0xFD8
  7244                           
  7245 ;; *************** function ___xxtofl *****************
  7246 ;; Defined at:
  7247 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  sign            1    wreg     unsigned char 
  7250 ;;  val             4   16[BANK0 ] long 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  sign            1   24[BANK0 ] unsigned char 
  7253 ;;  arg             4   26[BANK0 ] unsigned long 
  7254 ;;  exp             1   25[BANK0 ] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  4   16[BANK0 ] unsigned char 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7264 ;;      Params:         0       4       0       0
  7265 ;;      Locals:         0       6       0       0
  7266 ;;      Temps:          0       4       0       0
  7267 ;;      Totals:         0      14       0       0
  7268 ;;Total ram usage:       14 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    4
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;;		_LCD_Handler
  7276 ;;		_sprintf
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text22
  7281  001CE8                     __ptext22:
  7282                           	opt stack 0
  7283  001CE8                     ___xxtofl:
  7284                           	opt stack 26
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;incstack = 0
  7288                           ;___xxtofl@sign stored from wreg
  7289  001CE8  0100               	movlb	0	; () banked
  7290  001CEA  6F78               	movwf	___xxtofl@sign& (0+255),b
  7291  001CEC  0100               	movlb	0	; () banked
  7292  001CEE  5178               	movf	___xxtofl@sign& (0+255),w,b
  7293  001CF0  0100               	movlb	0	; () banked
  7294  001CF2  B4D8               	btfsc	status,2,c
  7295  001CF4  D01E               	goto	l1089
  7296                           
  7297                           ; BSR set to: 0
  7298  001CF6  0100               	movlb	0	; () banked
  7299  001CF8  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7300  001CFA  D01B               	goto	l1089
  7301                           
  7302                           ; BSR set to: 0
  7303  001CFC  C070  F074         	movff	___xxtofl@val,??___xxtofl
  7304  001D00  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  7305  001D04  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  7306  001D08  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  7307  001D0C  0100               	movlb	0	; () banked
  7308  001D0E  1F74               	comf	??___xxtofl& (0+255),f,b
  7309  001D10  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  7310  001D12  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  7311  001D14  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  7312  001D16  2B74               	incf	??___xxtofl& (0+255),f,b
  7313  001D18  0E00               	movlw	0
  7314  001D1A  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7315  001D1C  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7316  001D1E  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7317  001D20  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  7318  001D24  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7319  001D28  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7320  001D2C  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7321  001D30  D008               	goto	l5205
  7322  001D32                     l1089:
  7323                           
  7324                           ; BSR set to: 0
  7325  001D32  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  7326  001D36  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7327  001D3A  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7328  001D3E  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7329  001D42                     l5205:
  7330                           
  7331                           ; BSR set to: 0
  7332  001D42  0100               	movlb	0	; () banked
  7333  001D44  5170               	movf	___xxtofl@val& (0+255),w,b
  7334  001D46  0100               	movlb	0	; () banked
  7335  001D48  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7336  001D4A  0100               	movlb	0	; () banked
  7337  001D4C  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7338  001D4E  0100               	movlb	0	; () banked
  7339  001D50  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7340  001D52  A4D8               	btfss	status,2,c
  7341  001D54  D00A               	goto	l5211
  7342                           
  7343                           ; BSR set to: 0
  7344  001D56  0E00               	movlw	0
  7345  001D58  0100               	movlb	0	; () banked
  7346  001D5A  6F70               	movwf	?___xxtofl& (0+255),b
  7347  001D5C  0E00               	movlw	0
  7348  001D5E  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  7349  001D60  0E00               	movlw	0
  7350  001D62  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  7351  001D64  0E00               	movlw	0
  7352  001D66  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  7353                           
  7354                           ; BSR set to: 0
  7355  001D68  0012               	return	
  7356  001D6A                     l5211:
  7357                           
  7358                           ; BSR set to: 0
  7359  001D6A  0E96               	movlw	150
  7360  001D6C  0100               	movlb	0	; () banked
  7361  001D6E  6F79               	movwf	___xxtofl@exp& (0+255),b
  7362  001D70  D008               	goto	l5215
  7363  001D72                     l5213:
  7364                           
  7365                           ; BSR set to: 0
  7366  001D72  0100               	movlb	0	; () banked
  7367  001D74  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7368  001D76  0100               	movlb	0	; () banked
  7369  001D78  90D8               	bcf	status,0,c
  7370  001D7A  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7371  001D7C  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7372  001D7E  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7373  001D80  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7374  001D82                     l5215:
  7375                           
  7376                           ; BSR set to: 0
  7377  001D82  0E00               	movlw	0
  7378  001D84  0100               	movlb	0	; () banked
  7379  001D86  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7380  001D88  0100               	movlb	0	; () banked
  7381  001D8A  6F74               	movwf	??___xxtofl& (0+255),b
  7382  001D8C  0E00               	movlw	0
  7383  001D8E  0100               	movlb	0	; () banked
  7384  001D90  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7385  001D92  0100               	movlb	0	; () banked
  7386  001D94  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7387  001D96  0E00               	movlw	0
  7388  001D98  0100               	movlb	0	; () banked
  7389  001D9A  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7390  001D9C  0100               	movlb	0	; () banked
  7391  001D9E  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7392  001DA0  0EFE               	movlw	254
  7393  001DA2  0100               	movlb	0	; () banked
  7394  001DA4  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7395  001DA6  0100               	movlb	0	; () banked
  7396  001DA8  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7397  001DAA  0100               	movlb	0	; () banked
  7398  001DAC  5174               	movf	??___xxtofl& (0+255),w,b
  7399  001DAE  0100               	movlb	0	; () banked
  7400  001DB0  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7401  001DB2  0100               	movlb	0	; () banked
  7402  001DB4  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7403  001DB6  0100               	movlb	0	; () banked
  7404  001DB8  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7405  001DBA  B4D8               	btfsc	status,2,c
  7406  001DBC  D010               	goto	l1096
  7407  001DBE  D7D9               	goto	l5213
  7408  001DC0                     l5217:
  7409                           
  7410                           ; BSR set to: 0
  7411  001DC0  0100               	movlb	0	; () banked
  7412  001DC2  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7413                           
  7414                           ; BSR set to: 0
  7415  001DC4  0E01               	movlw	1
  7416  001DC6  0100               	movlb	0	; () banked
  7417  001DC8  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7418  001DCA  0E00               	movlw	0
  7419  001DCC  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7420  001DCE  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7421  001DD0  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7422                           
  7423                           ; BSR set to: 0
  7424  001DD2  0100               	movlb	0	; () banked
  7425  001DD4  90D8               	bcf	status,0,c
  7426  001DD6  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7427  001DD8  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7428  001DDA  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7429  001DDC  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7430  001DDE                     l1096:
  7431                           
  7432                           ; BSR set to: 0
  7433  001DDE  0E00               	movlw	0
  7434  001DE0  0100               	movlb	0	; () banked
  7435  001DE2  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7436  001DE4  0100               	movlb	0	; () banked
  7437  001DE6  6F74               	movwf	??___xxtofl& (0+255),b
  7438  001DE8  0E00               	movlw	0
  7439  001DEA  0100               	movlb	0	; () banked
  7440  001DEC  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7441  001DEE  0100               	movlb	0	; () banked
  7442  001DF0  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7443  001DF2  0E00               	movlw	0
  7444  001DF4  0100               	movlb	0	; () banked
  7445  001DF6  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7446  001DF8  0100               	movlb	0	; () banked
  7447  001DFA  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7448  001DFC  0EFF               	movlw	255
  7449  001DFE  0100               	movlb	0	; () banked
  7450  001E00  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7451  001E02  0100               	movlb	0	; () banked
  7452  001E04  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7453  001E06  0100               	movlb	0	; () banked
  7454  001E08  5174               	movf	??___xxtofl& (0+255),w,b
  7455  001E0A  0100               	movlb	0	; () banked
  7456  001E0C  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7457  001E0E  0100               	movlb	0	; () banked
  7458  001E10  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7459  001E12  0100               	movlb	0	; () banked
  7460  001E14  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7461  001E16  B4D8               	btfsc	status,2,c
  7462  001E18  D009               	goto	l5225
  7463  001E1A  D7D2               	goto	l5217
  7464  001E1C                     l5223:
  7465                           
  7466                           ; BSR set to: 0
  7467  001E1C  0100               	movlb	0	; () banked
  7468  001E1E  0779               	decf	___xxtofl@exp& (0+255),f,b
  7469  001E20  0100               	movlb	0	; () banked
  7470  001E22  90D8               	bcf	status,0,c
  7471  001E24  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7472  001E26  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7473  001E28  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7474  001E2A  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7475  001E2C                     l5225:
  7476                           
  7477                           ; BSR set to: 0
  7478  001E2C  0100               	movlb	0	; () banked
  7479  001E2E  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7480  001E30  D004               	goto	l1103
  7481                           
  7482                           ; BSR set to: 0
  7483  001E32  0E02               	movlw	2
  7484  001E34  0100               	movlb	0	; () banked
  7485  001E36  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7486  001E38  D7F1               	goto	l5223
  7487  001E3A                     l1103:
  7488                           
  7489                           ; BSR set to: 0
  7490  001E3A  0100               	movlb	0	; () banked
  7491  001E3C  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7492  001E3E  D009               	goto	l1104
  7493                           
  7494                           ; BSR set to: 0
  7495  001E40  0EFF               	movlw	255
  7496  001E42  0100               	movlb	0	; () banked
  7497  001E44  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7498  001E46  0EFF               	movlw	255
  7499  001E48  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7500  001E4A  0E7F               	movlw	127
  7501  001E4C  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7502  001E4E  0EFF               	movlw	255
  7503  001E50  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7504  001E52                     l1104:
  7505                           
  7506                           ; BSR set to: 0
  7507  001E52  0100               	movlb	0	; () banked
  7508  001E54  90D8               	bcf	status,0,c
  7509  001E56  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7510  001E58  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7511  001E5C  0100               	movlb	0	; () banked
  7512  001E5E  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7513  001E60  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7514  001E62  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7515  001E64  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7516  001E68  0100               	movlb	0	; () banked
  7517  001E6A  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7518  001E6C  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7519  001E6E  6B74               	clrf	??___xxtofl& (0+255),b
  7520  001E70  0100               	movlb	0	; () banked
  7521  001E72  5174               	movf	??___xxtofl& (0+255),w,b
  7522  001E74  0100               	movlb	0	; () banked
  7523  001E76  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7524  001E78  0100               	movlb	0	; () banked
  7525  001E7A  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7526  001E7C  0100               	movlb	0	; () banked
  7527  001E7E  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7528  001E80  0100               	movlb	0	; () banked
  7529  001E82  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7530  001E84  0100               	movlb	0	; () banked
  7531  001E86  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7532  001E88  0100               	movlb	0	; () banked
  7533  001E8A  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7534  001E8C  0100               	movlb	0	; () banked
  7535  001E8E  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7536                           
  7537                           ; BSR set to: 0
  7538  001E90  0100               	movlb	0	; () banked
  7539  001E92  5178               	movf	___xxtofl@sign& (0+255),w,b
  7540  001E94  0100               	movlb	0	; () banked
  7541  001E96  B4D8               	btfsc	status,2,c
  7542  001E98  D005               	goto	l5237
  7543                           
  7544                           ; BSR set to: 0
  7545  001E9A  0100               	movlb	0	; () banked
  7546  001E9C  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7547  001E9E  D002               	goto	l5237
  7548                           
  7549                           ; BSR set to: 0
  7550  001EA0  0100               	movlb	0	; () banked
  7551  001EA2  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7552  001EA4                     l5237:
  7553                           
  7554                           ; BSR set to: 0
  7555  001EA4  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7556  001EA8  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7557  001EAC  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7558  001EB0  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7559  001EB4  0012               	return	
  7560  001EB6                     __end_of___xxtofl:
  7561                           	opt stack 0
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           prodh	equ	0xFF4
  7567                           prodl	equ	0xFF3
  7568                           intcon	equ	0xFF2
  7569                           postinc0	equ	0xFEE
  7570                           wreg	equ	0xFE8
  7571                           indf1	equ	0xFE7
  7572                           postinc1	equ	0xFE6
  7573                           fsr1h	equ	0xFE2
  7574                           fsr1l	equ	0xFE1
  7575                           indf2	equ	0xFDF
  7576                           postinc2	equ	0xFDE
  7577                           fsr2h	equ	0xFDA
  7578                           fsr2l	equ	0xFD9
  7579                           status	equ	0xFD8
  7580                           
  7581 ;; *************** function ___llmod *****************
  7582 ;; Defined at:
  7583 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  dividend        4   23[COMRAM] unsigned long 
  7586 ;;  divisor         4   27[COMRAM] unsigned long 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  counter         1   31[COMRAM] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  4   23[COMRAM] unsigned long 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7598 ;;      Params:         8       0       0       0
  7599 ;;      Locals:         1       0       0       0
  7600 ;;      Temps:          0       0       0       0
  7601 ;;      Totals:         9       0       0       0
  7602 ;;Total ram usage:        9 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    4
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_sprintf
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text23
  7613  002C0A                     __ptext23:
  7614                           	opt stack 0
  7615  002C0A                     ___llmod:
  7616                           	opt stack 24
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;incstack = 0
  7620  002C0A  5041               	movf	___llmod@divisor,w,c
  7621  002C0C  1042               	iorwf	___llmod@divisor+1,w,c
  7622  002C0E  1043               	iorwf	___llmod@divisor+2,w,c
  7623  002C10  1044               	iorwf	___llmod@divisor+3,w,c
  7624  002C12  B4D8               	btfsc	status,2,c
  7625  002C14  D024               	goto	l897
  7626  002C16  0E01               	movlw	1
  7627  002C18  6E45               	movwf	___llmod@counter,c
  7628  002C1A  D006               	goto	l5189
  7629  002C1C                     l5187:
  7630  002C1C  90D8               	bcf	status,0,c
  7631  002C1E  3641               	rlcf	___llmod@divisor,f,c
  7632  002C20  3642               	rlcf	___llmod@divisor+1,f,c
  7633  002C22  3643               	rlcf	___llmod@divisor+2,f,c
  7634  002C24  3644               	rlcf	___llmod@divisor+3,f,c
  7635  002C26  2A45               	incf	___llmod@counter,f,c
  7636  002C28                     l5189:
  7637  002C28  AE44               	btfss	___llmod@divisor+3,7,c
  7638  002C2A  D7F8               	goto	l5187
  7639  002C2C                     l5191:
  7640  002C2C  5041               	movf	___llmod@divisor,w,c
  7641  002C2E  5C3D               	subwf	___llmod@dividend,w,c
  7642  002C30  5042               	movf	___llmod@divisor+1,w,c
  7643  002C32  583E               	subwfb	___llmod@dividend+1,w,c
  7644  002C34  5043               	movf	___llmod@divisor+2,w,c
  7645  002C36  583F               	subwfb	___llmod@dividend+2,w,c
  7646  002C38  5044               	movf	___llmod@divisor+3,w,c
  7647  002C3A  5840               	subwfb	___llmod@dividend+3,w,c
  7648  002C3C  A0D8               	btfss	status,0,c
  7649  002C3E  D008               	goto	l5195
  7650  002C40  5041               	movf	___llmod@divisor,w,c
  7651  002C42  5E3D               	subwf	___llmod@dividend,f,c
  7652  002C44  5042               	movf	___llmod@divisor+1,w,c
  7653  002C46  5A3E               	subwfb	___llmod@dividend+1,f,c
  7654  002C48  5043               	movf	___llmod@divisor+2,w,c
  7655  002C4A  5A3F               	subwfb	___llmod@dividend+2,f,c
  7656  002C4C  5044               	movf	___llmod@divisor+3,w,c
  7657  002C4E  5A40               	subwfb	___llmod@dividend+3,f,c
  7658  002C50                     l5195:
  7659  002C50  90D8               	bcf	status,0,c
  7660  002C52  3244               	rrcf	___llmod@divisor+3,f,c
  7661  002C54  3243               	rrcf	___llmod@divisor+2,f,c
  7662  002C56  3242               	rrcf	___llmod@divisor+1,f,c
  7663  002C58  3241               	rrcf	___llmod@divisor,f,c
  7664  002C5A  2E45               	decfsz	___llmod@counter,f,c
  7665  002C5C  D7E7               	goto	l5191
  7666  002C5E                     l897:
  7667  002C5E  C03D  F03D         	movff	___llmod@dividend,?___llmod
  7668  002C62  C03E  F03E         	movff	___llmod@dividend+1,?___llmod+1
  7669  002C66  C03F  F03F         	movff	___llmod@dividend+2,?___llmod+2
  7670  002C6A  C040  F040         	movff	___llmod@dividend+3,?___llmod+3
  7671  002C6E  0012               	return		;funcret
  7672  002C70                     __end_of___llmod:
  7673                           	opt stack 0
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           intcon	equ	0xFF2
  7681                           postinc0	equ	0xFEE
  7682                           wreg	equ	0xFE8
  7683                           indf1	equ	0xFE7
  7684                           postinc1	equ	0xFE6
  7685                           fsr1h	equ	0xFE2
  7686                           fsr1l	equ	0xFE1
  7687                           indf2	equ	0xFDF
  7688                           postinc2	equ	0xFDE
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function ___lldiv *****************
  7694 ;; Defined at:
  7695 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  dividend        4   23[COMRAM] unsigned long 
  7698 ;;  divisor         4   27[COMRAM] unsigned long 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  quotient        4   16[BANK0 ] unsigned long 
  7701 ;;  counter         1   20[BANK0 ] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  4   23[COMRAM] unsigned long 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7711 ;;      Params:         8       0       0       0
  7712 ;;      Locals:         0       5       0       0
  7713 ;;      Temps:          0       0       0       0
  7714 ;;      Totals:         8       5       0       0
  7715 ;;Total ram usage:       13 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    4
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_sprintf
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text24
  7726  002B0C                     __ptext24:
  7727                           	opt stack 0
  7728  002B0C                     ___lldiv:
  7729                           	opt stack 24
  7730                           
  7731                           ;incstack = 0
  7732  002B0C  0E00               	movlw	0
  7733  002B0E  0100               	movlb	0	; () banked
  7734  002B10  6F70               	movwf	___lldiv@quotient& (0+255),b
  7735  002B12  0E00               	movlw	0
  7736  002B14  6F71               	movwf	(___lldiv@quotient+1)& (0+255),b
  7737  002B16  0E00               	movlw	0
  7738  002B18  6F72               	movwf	(___lldiv@quotient+2)& (0+255),b
  7739  002B1A  0E00               	movlw	0
  7740  002B1C  6F73               	movwf	(___lldiv@quotient+3)& (0+255),b
  7741                           
  7742                           ; BSR set to: 0
  7743  002B1E  5041               	movf	___lldiv@divisor,w,c
  7744  002B20  1042               	iorwf	___lldiv@divisor+1,w,c
  7745  002B22  1043               	iorwf	___lldiv@divisor+2,w,c
  7746  002B24  1044               	iorwf	___lldiv@divisor+3,w,c
  7747  002B26  B4D8               	btfsc	status,2,c
  7748  002B28  D02F               	goto	l887
  7749                           
  7750                           ; BSR set to: 0
  7751  002B2A  0E01               	movlw	1
  7752  002B2C  0100               	movlb	0	; () banked
  7753  002B2E  6F74               	movwf	___lldiv@counter& (0+255),b
  7754  002B30  D007               	goto	l5169
  7755  002B32                     l5167:
  7756                           
  7757                           ; BSR set to: 0
  7758  002B32  90D8               	bcf	status,0,c
  7759  002B34  3641               	rlcf	___lldiv@divisor,f,c
  7760  002B36  3642               	rlcf	___lldiv@divisor+1,f,c
  7761  002B38  3643               	rlcf	___lldiv@divisor+2,f,c
  7762  002B3A  3644               	rlcf	___lldiv@divisor+3,f,c
  7763  002B3C  0100               	movlb	0	; () banked
  7764  002B3E  2B74               	incf	___lldiv@counter& (0+255),f,b
  7765  002B40                     l5169:
  7766                           
  7767                           ; BSR set to: 0
  7768  002B40  AE44               	btfss	___lldiv@divisor+3,7,c
  7769  002B42  D7F7               	goto	l5167
  7770  002B44                     l5171:
  7771                           
  7772                           ; BSR set to: 0
  7773  002B44  0100               	movlb	0	; () banked
  7774  002B46  90D8               	bcf	status,0,c
  7775  002B48  3770               	rlcf	___lldiv@quotient& (0+255),f,b
  7776  002B4A  3771               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7777  002B4C  3772               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7778  002B4E  3773               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7779                           
  7780                           ; BSR set to: 0
  7781  002B50  5041               	movf	___lldiv@divisor,w,c
  7782  002B52  5C3D               	subwf	___lldiv@dividend,w,c
  7783  002B54  5042               	movf	___lldiv@divisor+1,w,c
  7784  002B56  583E               	subwfb	___lldiv@dividend+1,w,c
  7785  002B58  5043               	movf	___lldiv@divisor+2,w,c
  7786  002B5A  583F               	subwfb	___lldiv@dividend+2,w,c
  7787  002B5C  5044               	movf	___lldiv@divisor+3,w,c
  7788  002B5E  5840               	subwfb	___lldiv@dividend+3,w,c
  7789  002B60  A0D8               	btfss	status,0,c
  7790  002B62  D00A               	goto	l5179
  7791                           
  7792                           ; BSR set to: 0
  7793  002B64  5041               	movf	___lldiv@divisor,w,c
  7794  002B66  5E3D               	subwf	___lldiv@dividend,f,c
  7795  002B68  5042               	movf	___lldiv@divisor+1,w,c
  7796  002B6A  5A3E               	subwfb	___lldiv@dividend+1,f,c
  7797  002B6C  5043               	movf	___lldiv@divisor+2,w,c
  7798  002B6E  5A3F               	subwfb	___lldiv@dividend+2,f,c
  7799  002B70  5044               	movf	___lldiv@divisor+3,w,c
  7800  002B72  5A40               	subwfb	___lldiv@dividend+3,f,c
  7801                           
  7802                           ; BSR set to: 0
  7803  002B74  0100               	movlb	0	; () banked
  7804  002B76  8170               	bsf	___lldiv@quotient& (0+255),0,b
  7805  002B78                     l5179:
  7806                           
  7807                           ; BSR set to: 0
  7808  002B78  90D8               	bcf	status,0,c
  7809  002B7A  3244               	rrcf	___lldiv@divisor+3,f,c
  7810  002B7C  3243               	rrcf	___lldiv@divisor+2,f,c
  7811  002B7E  3242               	rrcf	___lldiv@divisor+1,f,c
  7812  002B80  3241               	rrcf	___lldiv@divisor,f,c
  7813                           
  7814                           ; BSR set to: 0
  7815  002B82  0100               	movlb	0	; () banked
  7816  002B84  2F74               	decfsz	___lldiv@counter& (0+255),f,b
  7817  002B86  D7DE               	goto	l5171
  7818  002B88                     l887:
  7819                           
  7820                           ; BSR set to: 0
  7821  002B88  C070  F03D         	movff	___lldiv@quotient,?___lldiv
  7822  002B8C  C071  F03E         	movff	___lldiv@quotient+1,?___lldiv+1
  7823  002B90  C072  F03F         	movff	___lldiv@quotient+2,?___lldiv+2
  7824  002B94  C073  F040         	movff	___lldiv@quotient+3,?___lldiv+3
  7825                           
  7826                           ; BSR set to: 0
  7827  002B98  0012               	return		;funcret
  7828  002B9A                     __end_of___lldiv:
  7829                           	opt stack 0
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           postinc0	equ	0xFEE
  7838                           wreg	equ	0xFE8
  7839                           indf1	equ	0xFE7
  7840                           postinc1	equ	0xFE6
  7841                           fsr1h	equ	0xFE2
  7842                           fsr1l	equ	0xFE1
  7843                           indf2	equ	0xFDF
  7844                           postinc2	equ	0xFDE
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8
  7848                           
  7849 ;; *************** function ___fltol *****************
  7850 ;; Defined at:
  7851 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  f1              4   64[BANK0 ] unsigned long 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  exp1            1   31[COMRAM] unsigned char 
  7856 ;;  sign1           1   30[COMRAM] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  4   64[BANK0 ] long 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7866 ;;      Params:         0       4       0       0
  7867 ;;      Locals:         2       0       0       0
  7868 ;;      Temps:          0       4       0       0
  7869 ;;      Totals:         2       8       0       0
  7870 ;;Total ram usage:       10 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    4
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_main
  7877 ;;		_sprintf
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text25
  7882  002546                     __ptext25:
  7883                           	opt stack 0
  7884  002546                     ___fltol:
  7885                           	opt stack 26
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;incstack = 0
  7889  002546  0100               	movlb	0	; () banked
  7890  002548  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7891  00254A  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7892  00254C  6E45               	movwf	___fltol@exp1,c
  7893  00254E  5045               	movf	___fltol@exp1,w,c
  7894  002550  A4D8               	btfss	status,2,c
  7895  002552  D00A               	goto	l5123
  7896                           
  7897                           ; BSR set to: 0
  7898  002554  0E00               	movlw	0
  7899  002556  0100               	movlb	0	; () banked
  7900  002558  6FA0               	movwf	?___fltol& (0+255),b
  7901  00255A  0E00               	movlw	0
  7902  00255C  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7903  00255E  0E00               	movlw	0
  7904  002560  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7905  002562  0E00               	movlw	0
  7906  002564  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7907                           
  7908                           ; BSR set to: 0
  7909  002566  0012               	return	
  7910  002568                     l5123:
  7911                           
  7912                           ; BSR set to: 0
  7913  002568  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7914  00256C  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7915  002570  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7916  002574  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7917  002578  0E20               	movlw	32
  7918  00257A  D006               	goto	u5860
  7919  00257C                     u5865:
  7920  00257C  0100               	movlb	0	; () banked
  7921  00257E  90D8               	bcf	status,0,c
  7922  002580  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7923  002582  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7924  002584  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7925  002586  33A4               	rrcf	??___fltol& (0+255),f,b
  7926  002588                     u5860:
  7927  002588  2EE8               	decfsz	wreg,f,c
  7928  00258A  D7F8               	goto	u5865
  7929  00258C  0100               	movlb	0	; () banked
  7930  00258E  51A4               	movf	??___fltol& (0+255),w,b
  7931  002590  6E44               	movwf	___fltol@sign1,c
  7932                           
  7933                           ; BSR set to: 0
  7934  002592  0100               	movlb	0	; () banked
  7935  002594  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7936                           
  7937                           ; BSR set to: 0
  7938  002596  0EFF               	movlw	255
  7939  002598  0100               	movlb	0	; () banked
  7940  00259A  17A0               	andwf	___fltol@f1& (0+255),f,b
  7941  00259C  0EFF               	movlw	255
  7942  00259E  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7943  0025A0  0EFF               	movlw	255
  7944  0025A2  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7945  0025A4  0E00               	movlw	0
  7946  0025A6  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7947                           
  7948                           ; BSR set to: 0
  7949  0025A8  0E96               	movlw	150
  7950  0025AA  5E45               	subwf	___fltol@exp1,f,c
  7951                           
  7952                           ; BSR set to: 0
  7953  0025AC  AE45               	btfss	___fltol@exp1,7,c
  7954  0025AE  D018               	goto	l5143
  7955                           
  7956                           ; BSR set to: 0
  7957  0025B0  5045               	movf	___fltol@exp1,w,c
  7958  0025B2  0A80               	xorlw	128
  7959  0025B4  0F97               	addlw	151
  7960  0025B6  B0D8               	btfsc	status,0,c
  7961  0025B8  D00A               	goto	l5139
  7962                           
  7963                           ; BSR set to: 0
  7964  0025BA  0E00               	movlw	0
  7965  0025BC  0100               	movlb	0	; () banked
  7966  0025BE  6FA0               	movwf	?___fltol& (0+255),b
  7967  0025C0  0E00               	movlw	0
  7968  0025C2  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7969  0025C4  0E00               	movlw	0
  7970  0025C6  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7971  0025C8  0E00               	movlw	0
  7972  0025CA  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7973                           
  7974                           ; BSR set to: 0
  7975  0025CC  0012               	return	
  7976  0025CE                     l5139:
  7977                           
  7978                           ; BSR set to: 0
  7979  0025CE  0100               	movlb	0	; () banked
  7980  0025D0  90D8               	bcf	status,0,c
  7981  0025D2  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7982  0025D4  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7983  0025D6  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7984  0025D8  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7985                           
  7986                           ; BSR set to: 0
  7987  0025DA  3E45               	incfsz	___fltol@exp1,f,c
  7988  0025DC  D7F8               	goto	l5139
  7989                           
  7990                           ; BSR set to: 0
  7991  0025DE  D017               	goto	l5153
  7992  0025E0                     l5143:
  7993                           
  7994                           ; BSR set to: 0
  7995  0025E0  0E1F               	movlw	31
  7996  0025E2  6445               	cpfsgt	___fltol@exp1,c
  7997  0025E4  D011               	goto	l5151
  7998                           
  7999                           ; BSR set to: 0
  8000  0025E6  0E00               	movlw	0
  8001  0025E8  0100               	movlb	0	; () banked
  8002  0025EA  6FA0               	movwf	?___fltol& (0+255),b
  8003  0025EC  0E00               	movlw	0
  8004  0025EE  6FA1               	movwf	(?___fltol+1)& (0+255),b
  8005  0025F0  0E00               	movlw	0
  8006  0025F2  6FA2               	movwf	(?___fltol+2)& (0+255),b
  8007  0025F4  0E00               	movlw	0
  8008  0025F6  6FA3               	movwf	(?___fltol+3)& (0+255),b
  8009                           
  8010                           ; BSR set to: 0
  8011  0025F8  0012               	return	
  8012  0025FA                     l5149:
  8013                           
  8014                           ; BSR set to: 0
  8015  0025FA  0100               	movlb	0	; () banked
  8016  0025FC  90D8               	bcf	status,0,c
  8017  0025FE  37A0               	rlcf	___fltol@f1& (0+255),f,b
  8018  002600  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8019  002602  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8020  002604  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8021  002606  0645               	decf	___fltol@exp1,f,c
  8022  002608                     l5151:
  8023                           
  8024                           ; BSR set to: 0
  8025  002608  5045               	movf	___fltol@exp1,w,c
  8026  00260A  A4D8               	btfss	status,2,c
  8027  00260C  D7F6               	goto	l5149
  8028  00260E                     l5153:
  8029                           
  8030                           ; BSR set to: 0
  8031  00260E  5044               	movf	___fltol@sign1,w,c
  8032  002610  B4D8               	btfsc	status,2,c
  8033  002612  D009               	goto	l5157
  8034                           
  8035                           ; BSR set to: 0
  8036  002614  0100               	movlb	0	; () banked
  8037  002616  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  8038  002618  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  8039  00261A  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  8040  00261C  6DA0               	negf	___fltol@f1& (0+255),b
  8041  00261E  0E00               	movlw	0
  8042  002620  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8043  002622  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8044  002624  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8045  002626                     l5157:
  8046                           
  8047                           ; BSR set to: 0
  8048  002626  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  8049  00262A  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  8050  00262E  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  8051  002632  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  8052  002636  0012               	return	
  8053  002638                     __end_of___fltol:
  8054                           	opt stack 0
  8055                           tblptru	equ	0xFF8
  8056                           tblptrh	equ	0xFF7
  8057                           tblptrl	equ	0xFF6
  8058                           tablat	equ	0xFF5
  8059                           prodh	equ	0xFF4
  8060                           prodl	equ	0xFF3
  8061                           intcon	equ	0xFF2
  8062                           postinc0	equ	0xFEE
  8063                           wreg	equ	0xFE8
  8064                           indf1	equ	0xFE7
  8065                           postinc1	equ	0xFE6
  8066                           fsr1h	equ	0xFE2
  8067                           fsr1l	equ	0xFE1
  8068                           indf2	equ	0xFDF
  8069                           postinc2	equ	0xFDE
  8070                           fsr2h	equ	0xFDA
  8071                           fsr2l	equ	0xFD9
  8072                           status	equ	0xFD8
  8073                           
  8074 ;; *************** function ___flsub *****************
  8075 ;; Defined at:
  8076 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  b               4   88[BANK0 ] long 
  8079 ;;  a               4   92[BANK0 ] long 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  4   88[BANK0 ] long 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2, status,0, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8091 ;;      Params:         0       8       0       0
  8092 ;;      Locals:         0       0       0       0
  8093 ;;      Temps:          0       0       0       0
  8094 ;;      Totals:         0       8       0       0
  8095 ;;Total ram usage:        8 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    5
  8098 ;; This function calls:
  8099 ;;		___fladd
  8100 ;; This function is called by:
  8101 ;;		_sprintf
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text26
  8106  002D22                     __ptext26:
  8107                           	opt stack 0
  8108  002D22                     ___flsub:
  8109                           	opt stack 23
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;incstack = 0
  8113  002D22  0E00               	movlw	0
  8114  002D24  0100               	movlb	0	; () banked
  8115  002D26  1BBC               	xorwf	___flsub@a& (0+255),f,b
  8116  002D28  0E00               	movlw	0
  8117  002D2A  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  8118  002D2C  0E00               	movlw	0
  8119  002D2E  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  8120  002D30  0E80               	movlw	128
  8121  002D32  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  8122                           
  8123                           ; BSR set to: 0
  8124  002D34  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  8125  002D38  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  8126  002D3C  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  8127  002D40  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  8128  002D44  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  8129  002D48  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  8130  002D4C  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  8131  002D50  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  8132  002D54  EC87  F004         	call	___fladd	;wreg free
  8133  002D58  C0A4  F0B8         	movff	?___fladd,?___flsub
  8134  002D5C  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  8135  002D60  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  8136  002D64  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  8137  002D68  0012               	return	
  8138  002D6A                     __end_of___flsub:
  8139                           	opt stack 0
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           postinc0	equ	0xFEE
  8148                           wreg	equ	0xFE8
  8149                           indf1	equ	0xFE7
  8150                           postinc1	equ	0xFE6
  8151                           fsr1h	equ	0xFE2
  8152                           fsr1l	equ	0xFE1
  8153                           indf2	equ	0xFDF
  8154                           postinc2	equ	0xFDE
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function ___fladd *****************
  8160 ;; Defined at:
  8161 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  b               4   68[BANK0 ] long 
  8164 ;;  a               4   72[BANK0 ] long 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  grs             1   87[BANK0 ] unsigned char 
  8167 ;;  bexp            1   86[BANK0 ] unsigned char 
  8168 ;;  aexp            1   85[BANK0 ] unsigned char 
  8169 ;;  signs           1   84[BANK0 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  4   68[BANK0 ] unsigned char 
  8172 ;; Registers used:
  8173 ;;		wreg, status,2, status,0
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8179 ;;      Params:         0       8       0       0
  8180 ;;      Locals:         0       4       0       0
  8181 ;;      Temps:          0       8       0       0
  8182 ;;      Totals:         0      20       0       0
  8183 ;;Total ram usage:       20 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    4
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_sprintf
  8190 ;;		___flsub
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text27
  8195  00090E                     __ptext27:
  8196                           	opt stack 0
  8197  00090E                     ___fladd:
  8198                           	opt stack 23
  8199                           
  8200                           ;incstack = 0
  8201  00090E  0100               	movlb	0	; () banked
  8202  000910  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8203  000912  0B80               	andlw	128
  8204  000914  0100               	movlb	0	; () banked
  8205  000916  6FB4               	movwf	___fladd@signs& (0+255),b
  8206  000918  0100               	movlb	0	; () banked
  8207  00091A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8208  00091C  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  8209  00091E  0100               	movlb	0	; () banked
  8210  000920  6FB6               	movwf	___fladd@bexp& (0+255),b
  8211                           
  8212                           ; BSR set to: 0
  8213  000922  0100               	movlb	0	; () banked
  8214  000924  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8215  000926  D002               	goto	l4463
  8216                           
  8217                           ; BSR set to: 0
  8218  000928  0100               	movlb	0	; () banked
  8219  00092A  81B6               	bsf	___fladd@bexp& (0+255),0,b
  8220  00092C                     l4463:
  8221                           
  8222                           ; BSR set to: 0
  8223  00092C  0100               	movlb	0	; () banked
  8224  00092E  51B6               	movf	___fladd@bexp& (0+255),w,b
  8225  000930  0100               	movlb	0	; () banked
  8226  000932  B4D8               	btfsc	status,2,c
  8227  000934  D012               	goto	l4473
  8228                           
  8229                           ; BSR set to: 0
  8230  000936  0100               	movlb	0	; () banked
  8231  000938  29B6               	incf	___fladd@bexp& (0+255),w,b
  8232  00093A  A4D8               	btfss	status,2,c
  8233  00093C  D009               	goto	l4469
  8234                           
  8235                           ; BSR set to: 0
  8236  00093E  0E00               	movlw	0
  8237  000940  0100               	movlb	0	; () banked
  8238  000942  6FA4               	movwf	___fladd@b& (0+255),b
  8239  000944  0E00               	movlw	0
  8240  000946  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8241  000948  0E00               	movlw	0
  8242  00094A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8243  00094C  0E00               	movlw	0
  8244  00094E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8245  000950                     l4469:
  8246                           
  8247                           ; BSR set to: 0
  8248  000950  0100               	movlb	0	; () banked
  8249  000952  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8250                           
  8251                           ; BSR set to: 0
  8252  000954  0E00               	movlw	0
  8253  000956  0100               	movlb	0	; () banked
  8254  000958  D008               	goto	L9
  8255  00095A                     l4473:
  8256                           
  8257                           ; BSR set to: 0
  8258  00095A  0E00               	movlw	0
  8259  00095C  0100               	movlb	0	; () banked
  8260  00095E  6FA4               	movwf	___fladd@b& (0+255),b
  8261  000960  0E00               	movlw	0
  8262  000962  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8263  000964  0E00               	movlw	0
  8264  000966  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8265  000968  0E00               	movlw	0
  8266  00096A                     L9:
  8267  00096A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8268                           
  8269                           ; BSR set to: 0
  8270                           
  8271                           ; BSR set to: 0
  8272  00096C  0100               	movlb	0	; () banked
  8273  00096E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8274  000970  0B80               	andlw	128
  8275  000972  0100               	movlb	0	; () banked
  8276  000974  6FB5               	movwf	___fladd@aexp& (0+255),b
  8277                           
  8278                           ; BSR set to: 0
  8279  000976  0100               	movlb	0	; () banked
  8280  000978  51B4               	movf	___fladd@signs& (0+255),w,b
  8281  00097A  0100               	movlb	0	; () banked
  8282  00097C  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  8283  00097E  B4D8               	btfsc	status,2,c
  8284  000980  D002               	goto	l4481
  8285                           
  8286                           ; BSR set to: 0
  8287  000982  0100               	movlb	0	; () banked
  8288  000984  8DB4               	bsf	___fladd@signs& (0+255),6,b
  8289  000986                     l4481:
  8290                           
  8291                           ; BSR set to: 0
  8292  000986  0100               	movlb	0	; () banked
  8293  000988  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8294  00098A  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  8295  00098C  0100               	movlb	0	; () banked
  8296  00098E  6FB5               	movwf	___fladd@aexp& (0+255),b
  8297                           
  8298                           ; BSR set to: 0
  8299  000990  0100               	movlb	0	; () banked
  8300  000992  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  8301  000994  D002               	goto	l4487
  8302                           
  8303                           ; BSR set to: 0
  8304  000996  0100               	movlb	0	; () banked
  8305  000998  81B5               	bsf	___fladd@aexp& (0+255),0,b
  8306  00099A                     l4487:
  8307                           
  8308                           ; BSR set to: 0
  8309  00099A  0100               	movlb	0	; () banked
  8310  00099C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8311  00099E  0100               	movlb	0	; () banked
  8312  0009A0  B4D8               	btfsc	status,2,c
  8313  0009A2  D012               	goto	l4497
  8314                           
  8315                           ; BSR set to: 0
  8316  0009A4  0100               	movlb	0	; () banked
  8317  0009A6  29B5               	incf	___fladd@aexp& (0+255),w,b
  8318  0009A8  A4D8               	btfss	status,2,c
  8319  0009AA  D009               	goto	l4493
  8320                           
  8321                           ; BSR set to: 0
  8322  0009AC  0E00               	movlw	0
  8323  0009AE  0100               	movlb	0	; () banked
  8324  0009B0  6FA8               	movwf	___fladd@a& (0+255),b
  8325  0009B2  0E00               	movlw	0
  8326  0009B4  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8327  0009B6  0E00               	movlw	0
  8328  0009B8  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8329  0009BA  0E00               	movlw	0
  8330  0009BC  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8331  0009BE                     l4493:
  8332                           
  8333                           ; BSR set to: 0
  8334  0009BE  0100               	movlb	0	; () banked
  8335  0009C0  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8336                           
  8337                           ; BSR set to: 0
  8338  0009C2  0E00               	movlw	0
  8339  0009C4  0100               	movlb	0	; () banked
  8340  0009C6  D008               	goto	L10
  8341  0009C8                     l4497:
  8342                           
  8343                           ; BSR set to: 0
  8344  0009C8  0E00               	movlw	0
  8345  0009CA  0100               	movlb	0	; () banked
  8346  0009CC  6FA8               	movwf	___fladd@a& (0+255),b
  8347  0009CE  0E00               	movlw	0
  8348  0009D0  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8349  0009D2  0E00               	movlw	0
  8350  0009D4  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8351  0009D6  0E00               	movlw	0
  8352  0009D8                     L10:
  8353  0009D8  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8354                           
  8355                           ; BSR set to: 0
  8356                           
  8357                           ; BSR set to: 0
  8358  0009DA  0100               	movlb	0	; () banked
  8359  0009DC  51B6               	movf	___fladd@bexp& (0+255),w,b
  8360  0009DE  0100               	movlb	0	; () banked
  8361  0009E0  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8362  0009E2  B0D8               	btfsc	status,0,c
  8363  0009E4  D024               	goto	l4535
  8364                           
  8365                           ; BSR set to: 0
  8366  0009E6  0100               	movlb	0	; () banked
  8367  0009E8  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8368  0009EA  D003               	goto	l4505
  8369                           
  8370                           ; BSR set to: 0
  8371  0009EC  0E80               	movlw	128
  8372  0009EE  0100               	movlb	0	; () banked
  8373  0009F0  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8374  0009F2                     l4505:
  8375                           
  8376                           ; BSR set to: 0
  8377  0009F2  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8378                           
  8379                           ; BSR set to: 0
  8380  0009F6  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8381                           
  8382                           ; BSR set to: 0
  8383  0009FA  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8384                           
  8385                           ; BSR set to: 0
  8386  0009FE  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8387                           
  8388                           ; BSR set to: 0
  8389  000A02  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8390                           
  8391                           ; BSR set to: 0
  8392  000A06  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8393                           
  8394                           ; BSR set to: 0
  8395  000A0A  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8396                           
  8397                           ; BSR set to: 0
  8398  000A0E  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8399                           
  8400                           ; BSR set to: 0
  8401  000A12  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8402                           
  8403                           ; BSR set to: 0
  8404  000A16  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8405                           
  8406                           ; BSR set to: 0
  8407  000A1A  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8408                           
  8409                           ; BSR set to: 0
  8410  000A1E  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8411                           
  8412                           ; BSR set to: 0
  8413  000A22  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8414                           
  8415                           ; BSR set to: 0
  8416  000A26  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8417                           
  8418                           ; BSR set to: 0
  8419  000A2A  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8420  000A2E                     l4535:
  8421                           
  8422                           ; BSR set to: 0
  8423  000A2E  0E00               	movlw	0
  8424  000A30  0100               	movlb	0	; () banked
  8425  000A32  6FB7               	movwf	___fladd@grs& (0+255),b
  8426                           
  8427                           ; BSR set to: 0
  8428  000A34  0100               	movlb	0	; () banked
  8429  000A36  51B6               	movf	___fladd@bexp& (0+255),w,b
  8430  000A38  0100               	movlb	0	; () banked
  8431  000A3A  6FAC               	movwf	??___fladd& (0+255),b
  8432  000A3C  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8433  000A3E  0100               	movlb	0	; () banked
  8434  000A40  1FAC               	comf	??___fladd& (0+255),f,b
  8435  000A42  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8436  000A44  4BAC               	infsnz	??___fladd& (0+255),f,b
  8437  000A46  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8438  000A48  0100               	movlb	0	; () banked
  8439  000A4A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8440  000A4C  0100               	movlb	0	; () banked
  8441  000A4E  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8442  000A50  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8443  000A52  0100               	movlb	0	; () banked
  8444  000A54  51AC               	movf	??___fladd& (0+255),w,b
  8445  000A56  0100               	movlb	0	; () banked
  8446  000A58  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8447  000A5A  0100               	movlb	0	; () banked
  8448  000A5C  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8449  000A5E  0100               	movlb	0	; () banked
  8450  000A60  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8451  000A62  0100               	movlb	0	; () banked
  8452  000A64  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8453  000A66  D03D               	goto	l982
  8454  000A68  0100               	movlb	0	; () banked
  8455  000A6A  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8456  000A6C  E105               	bnz	u4930
  8457  000A6E  0E1A               	movlw	26
  8458  000A70  0100               	movlb	0	; () banked
  8459  000A72  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8460  000A74  A0D8               	btfss	status,0,c
  8461  000A76  D035               	goto	l982
  8462  000A78                     u4930:
  8463                           
  8464                           ; BSR set to: 0
  8465  000A78  0100               	movlb	0	; () banked
  8466  000A7A  51A4               	movf	___fladd@b& (0+255),w,b
  8467  000A7C  0100               	movlb	0	; () banked
  8468  000A7E  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8469  000A80  0100               	movlb	0	; () banked
  8470  000A82  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8471  000A84  0100               	movlb	0	; () banked
  8472  000A86  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8473  000A88  B4D8               	btfsc	status,2,c
  8474  000A8A  D002               	goto	u4940
  8475  000A8C  0E01               	movlw	1
  8476  000A8E  D001               	goto	u4950
  8477  000A90                     u4940:
  8478  000A90  0E00               	movlw	0
  8479  000A92                     u4950:
  8480  000A92  0100               	movlb	0	; () banked
  8481  000A94  6FB7               	movwf	___fladd@grs& (0+255),b
  8482                           
  8483                           ; BSR set to: 0
  8484  000A96  0E00               	movlw	0
  8485  000A98  0100               	movlb	0	; () banked
  8486  000A9A  6FA4               	movwf	___fladd@b& (0+255),b
  8487  000A9C  0E00               	movlw	0
  8488  000A9E  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8489  000AA0  0E00               	movlw	0
  8490  000AA2  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8491  000AA4  0E00               	movlw	0
  8492  000AA6  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495  000AA8  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8496  000AAC  D020               	goto	l981
  8497  000AAE                     l983:
  8498                           
  8499                           ; BSR set to: 0
  8500  000AAE  0100               	movlb	0	; () banked
  8501  000AB0  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8502  000AB2  D007               	goto	l4547
  8503                           
  8504                           ; BSR set to: 0
  8505  000AB4  0100               	movlb	0	; () banked
  8506  000AB6  90D8               	bcf	status,0,c
  8507  000AB8  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8508  000ABA  0901               	iorlw	1
  8509  000ABC  0100               	movlb	0	; () banked
  8510  000ABE  6FB7               	movwf	___fladd@grs& (0+255),b
  8511  000AC0  D003               	goto	l4549
  8512  000AC2                     l4547:
  8513                           
  8514                           ; BSR set to: 0
  8515  000AC2  0100               	movlb	0	; () banked
  8516  000AC4  90D8               	bcf	status,0,c
  8517  000AC6  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8518  000AC8                     l4549:
  8519                           
  8520                           ; BSR set to: 0
  8521  000AC8  0100               	movlb	0	; () banked
  8522  000ACA  A1A4               	btfss	___fladd@b& (0+255),0,b
  8523  000ACC  D002               	goto	l4553
  8524                           
  8525                           ; BSR set to: 0
  8526  000ACE  0100               	movlb	0	; () banked
  8527  000AD0  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8528  000AD2                     l4553:
  8529                           
  8530                           ; BSR set to: 0
  8531  000AD2  0100               	movlb	0	; () banked
  8532  000AD4  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8533  000AD6  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8534  000AD8  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8535  000ADA  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8536  000ADC  33A4               	rrcf	___fladd@b& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 0
  8539  000ADE  0100               	movlb	0	; () banked
  8540  000AE0  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8541  000AE2                     l982:
  8542                           
  8543                           ; BSR set to: 0
  8544  000AE2  0100               	movlb	0	; () banked
  8545  000AE4  51B5               	movf	___fladd@aexp& (0+255),w,b
  8546  000AE6  0100               	movlb	0	; () banked
  8547  000AE8  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8548  000AEA  A0D8               	btfss	status,0,c
  8549  000AEC  D7E0               	goto	l983
  8550  000AEE                     l981:
  8551                           
  8552                           ; BSR set to: 0
  8553  000AEE  0100               	movlb	0	; () banked
  8554  000AF0  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8555  000AF2  D03F               	goto	l4581
  8556                           
  8557                           ; BSR set to: 0
  8558  000AF4  0100               	movlb	0	; () banked
  8559  000AF6  51B6               	movf	___fladd@bexp& (0+255),w,b
  8560  000AF8  0100               	movlb	0	; () banked
  8561  000AFA  A4D8               	btfss	status,2,c
  8562  000AFC  D00A               	goto	l4563
  8563                           
  8564                           ; BSR set to: 0
  8565  000AFE  0E00               	movlw	0
  8566  000B00  0100               	movlb	0	; () banked
  8567  000B02  6FA4               	movwf	?___fladd& (0+255),b
  8568  000B04  0E00               	movlw	0
  8569  000B06  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8570  000B08  0E00               	movlw	0
  8571  000B0A  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8572  000B0C  0E00               	movlw	0
  8573  000B0E  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8574                           
  8575                           ; BSR set to: 0
  8576  000B10  0012               	return	
  8577  000B12                     l4563:
  8578                           
  8579                           ; BSR set to: 0
  8580  000B12  0100               	movlb	0	; () banked
  8581  000B14  51A8               	movf	___fladd@a& (0+255),w,b
  8582  000B16  0100               	movlb	0	; () banked
  8583  000B18  27A4               	addwf	___fladd@b& (0+255),f,b
  8584  000B1A  0100               	movlb	0	; () banked
  8585  000B1C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8586  000B1E  0100               	movlb	0	; () banked
  8587  000B20  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8588  000B22  0100               	movlb	0	; () banked
  8589  000B24  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8590  000B26  0100               	movlb	0	; () banked
  8591  000B28  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8592  000B2A  0100               	movlb	0	; () banked
  8593  000B2C  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8594  000B2E  0100               	movlb	0	; () banked
  8595  000B30  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8596                           
  8597                           ; BSR set to: 0
  8598  000B32  0100               	movlb	0	; () banked
  8599  000B34  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8600  000B36  D0CC               	goto	l4617
  8601                           
  8602                           ; BSR set to: 0
  8603  000B38  0100               	movlb	0	; () banked
  8604  000B3A  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8605  000B3C  D009               	goto	l4571
  8606                           
  8607                           ; BSR set to: 0
  8608  000B3E  0100               	movlb	0	; () banked
  8609  000B40  90D8               	bcf	status,0,c
  8610  000B42  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8611  000B44  0100               	movlb	0	; () banked
  8612  000B46  51B7               	movf	___fladd@grs& (0+255),w,b
  8613  000B48  0901               	iorlw	1
  8614  000B4A  0100               	movlb	0	; () banked
  8615  000B4C  6FB7               	movwf	___fladd@grs& (0+255),b
  8616  000B4E  D003               	goto	l4573
  8617  000B50                     l4571:
  8618                           
  8619                           ; BSR set to: 0
  8620  000B50  0100               	movlb	0	; () banked
  8621  000B52  90D8               	bcf	status,0,c
  8622  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8623  000B56                     l4573:
  8624                           
  8625                           ; BSR set to: 0
  8626  000B56  0100               	movlb	0	; () banked
  8627  000B58  A1A4               	btfss	___fladd@b& (0+255),0,b
  8628  000B5A  D002               	goto	l4577
  8629                           
  8630                           ; BSR set to: 0
  8631  000B5C  0100               	movlb	0	; () banked
  8632  000B5E  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8633  000B60                     l4577:
  8634                           
  8635                           ; BSR set to: 0
  8636  000B60  0100               	movlb	0	; () banked
  8637  000B62  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8638  000B64  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8639  000B66  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8640  000B68  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8641  000B6A  33A4               	rrcf	___fladd@b& (0+255),f,b
  8642                           
  8643                           ; BSR set to: 0
  8644  000B6C  0100               	movlb	0	; () banked
  8645  000B6E  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8646                           
  8647                           ; BSR set to: 0
  8648  000B70  D0AF               	goto	l4617
  8649  000B72                     l4581:
  8650                           
  8651                           ; BSR set to: 0
  8652  000B72  0100               	movlb	0	; () banked
  8653  000B74  51A8               	movf	___fladd@a& (0+255),w,b
  8654  000B76  0100               	movlb	0	; () banked
  8655  000B78  5DA4               	subwf	___fladd@b& (0+255),w,b
  8656  000B7A  0100               	movlb	0	; () banked
  8657  000B7C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8658  000B7E  0100               	movlb	0	; () banked
  8659  000B80  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8660  000B82  0100               	movlb	0	; () banked
  8661  000B84  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8662  000B86  0100               	movlb	0	; () banked
  8663  000B88  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8664  000B8A  0100               	movlb	0	; () banked
  8665  000B8C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8666  000B8E  0A80               	xorlw	128
  8667  000B90  0100               	movlb	0	; () banked
  8668  000B92  6FAC               	movwf	??___fladd& (0+255),b
  8669  000B94  0100               	movlb	0	; () banked
  8670  000B96  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8671  000B98  0A80               	xorlw	128
  8672  000B9A  0100               	movlb	0	; () banked
  8673  000B9C  59AC               	subwfb	??___fladd& (0+255),w,b
  8674  000B9E  B0D8               	btfsc	status,0,c
  8675  000BA0  D050               	goto	l4591
  8676                           
  8677                           ; BSR set to: 0
  8678  000BA2  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8679  000BA6  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8680  000BAA  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8681  000BAE  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8682  000BB2  0100               	movlb	0	; () banked
  8683  000BB4  1FAC               	comf	??___fladd& (0+255),f,b
  8684  000BB6  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8685  000BB8  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8686  000BBA  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8687  000BBC  2BAC               	incf	??___fladd& (0+255),f,b
  8688  000BBE  0E00               	movlw	0
  8689  000BC0  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8690  000BC2  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8691  000BC4  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8692  000BC6  0100               	movlb	0	; () banked
  8693  000BC8  51A8               	movf	___fladd@a& (0+255),w,b
  8694  000BCA  0100               	movlb	0	; () banked
  8695  000BCC  25AC               	addwf	??___fladd& (0+255),w,b
  8696  000BCE  0100               	movlb	0	; () banked
  8697  000BD0  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8698  000BD2  0100               	movlb	0	; () banked
  8699  000BD4  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8700  000BD6  0100               	movlb	0	; () banked
  8701  000BD8  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8702  000BDA  0100               	movlb	0	; () banked
  8703  000BDC  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8704  000BDE  0100               	movlb	0	; () banked
  8705  000BE0  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8706  000BE2  0100               	movlb	0	; () banked
  8707  000BE4  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8708  000BE6  0100               	movlb	0	; () banked
  8709  000BE8  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8710  000BEA  0100               	movlb	0	; () banked
  8711  000BEC  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8712  000BEE  0100               	movlb	0	; () banked
  8713  000BF0  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8714  000BF2  0100               	movlb	0	; () banked
  8715  000BF4  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8716  000BF6  0EFF               	movlw	255
  8717  000BF8  0100               	movlb	0	; () banked
  8718  000BFA  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8719  000BFC  0100               	movlb	0	; () banked
  8720  000BFE  6FA4               	movwf	___fladd@b& (0+255),b
  8721  000C00  0EFF               	movlw	255
  8722  000C02  0100               	movlb	0	; () banked
  8723  000C04  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8724  000C06  0100               	movlb	0	; () banked
  8725  000C08  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8726  000C0A  0EFF               	movlw	255
  8727  000C0C  0100               	movlb	0	; () banked
  8728  000C0E  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8729  000C10  0100               	movlb	0	; () banked
  8730  000C12  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8731  000C14  0EFF               	movlw	255
  8732  000C16  0100               	movlb	0	; () banked
  8733  000C18  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8734  000C1A  0100               	movlb	0	; () banked
  8735  000C1C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8736  000C1E  0E80               	movlw	128
  8737  000C20  0100               	movlb	0	; () banked
  8738  000C22  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8739                           
  8740                           ; BSR set to: 0
  8741  000C24  0100               	movlb	0	; () banked
  8742  000C26  6DB7               	negf	___fladd@grs& (0+255),b
  8743                           
  8744                           ; BSR set to: 0
  8745  000C28  0100               	movlb	0	; () banked
  8746  000C2A  51B7               	movf	___fladd@grs& (0+255),w,b
  8747  000C2C  0100               	movlb	0	; () banked
  8748  000C2E  A4D8               	btfss	status,2,c
  8749  000C30  D018               	goto	l998
  8750                           
  8751                           ; BSR set to: 0
  8752  000C32  0E01               	movlw	1
  8753  000C34  0100               	movlb	0	; () banked
  8754  000C36  27A4               	addwf	___fladd@b& (0+255),f,b
  8755  000C38  0E00               	movlw	0
  8756  000C3A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8757  000C3C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8758  000C3E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8759                           
  8760                           ; BSR set to: 0
  8761  000C40  D010               	goto	l998
  8762  000C42                     l4591:
  8763                           
  8764                           ; BSR set to: 0
  8765  000C42  0100               	movlb	0	; () banked
  8766  000C44  51A8               	movf	___fladd@a& (0+255),w,b
  8767  000C46  0100               	movlb	0	; () banked
  8768  000C48  5FA4               	subwf	___fladd@b& (0+255),f,b
  8769  000C4A  0100               	movlb	0	; () banked
  8770  000C4C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8771  000C4E  0100               	movlb	0	; () banked
  8772  000C50  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8773  000C52  0100               	movlb	0	; () banked
  8774  000C54  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8775  000C56  0100               	movlb	0	; () banked
  8776  000C58  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8777  000C5A  0100               	movlb	0	; () banked
  8778  000C5C  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8779  000C5E  0100               	movlb	0	; () banked
  8780  000C60  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8781  000C62                     l998:
  8782                           
  8783                           ; BSR set to: 0
  8784  000C62  0100               	movlb	0	; () banked
  8785  000C64  51A4               	movf	___fladd@b& (0+255),w,b
  8786  000C66  0100               	movlb	0	; () banked
  8787  000C68  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8788  000C6A  0100               	movlb	0	; () banked
  8789  000C6C  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8790  000C6E  0100               	movlb	0	; () banked
  8791  000C70  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8792  000C72  A4D8               	btfss	status,2,c
  8793  000C74  D02A               	goto	l4615
  8794                           
  8795                           ; BSR set to: 0
  8796  000C76  0100               	movlb	0	; () banked
  8797  000C78  51B7               	movf	___fladd@grs& (0+255),w,b
  8798  000C7A  0100               	movlb	0	; () banked
  8799  000C7C  A4D8               	btfss	status,2,c
  8800  000C7E  D025               	goto	l4615
  8801                           
  8802                           ; BSR set to: 0
  8803  000C80  0E00               	movlw	0
  8804  000C82  0100               	movlb	0	; () banked
  8805  000C84  6FA4               	movwf	?___fladd& (0+255),b
  8806  000C86  0E00               	movlw	0
  8807  000C88  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8808  000C8A  0E00               	movlw	0
  8809  000C8C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8810  000C8E  0E00               	movlw	0
  8811  000C90  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8812                           
  8813                           ; BSR set to: 0
  8814  000C92  0012               	return	
  8815  000C94                     l4599:
  8816                           
  8817                           ; BSR set to: 0
  8818  000C94  0100               	movlb	0	; () banked
  8819  000C96  90D8               	bcf	status,0,c
  8820  000C98  37A4               	rlcf	___fladd@b& (0+255),f,b
  8821  000C9A  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8822  000C9C  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8823  000C9E  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8824                           
  8825                           ; BSR set to: 0
  8826  000CA0  0100               	movlb	0	; () banked
  8827  000CA2  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8828  000CA4  D002               	goto	l4605
  8829                           
  8830                           ; BSR set to: 0
  8831  000CA6  0100               	movlb	0	; () banked
  8832  000CA8  81A4               	bsf	___fladd@b& (0+255),0,b
  8833  000CAA                     l4605:
  8834                           
  8835                           ; BSR set to: 0
  8836  000CAA  0100               	movlb	0	; () banked
  8837  000CAC  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8838  000CAE  D003               	goto	l4609
  8839                           
  8840                           ; BSR set to: 0
  8841  000CB0  80D8               	bsf	status,0,c
  8842  000CB2  0100               	movlb	0	; () banked
  8843  000CB4  D002               	goto	L11
  8844  000CB6                     l4609:
  8845                           
  8846                           ; BSR set to: 0
  8847  000CB6  0100               	movlb	0	; () banked
  8848  000CB8  90D8               	bcf	status,0,c
  8849  000CBA                     L11:
  8850  000CBA  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 0
  8853                           
  8854                           ; BSR set to: 0
  8855  000CBC  0100               	movlb	0	; () banked
  8856  000CBE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8857  000CC0  0100               	movlb	0	; () banked
  8858  000CC2  B4D8               	btfsc	status,2,c
  8859  000CC4  D002               	goto	l4615
  8860                           
  8861                           ; BSR set to: 0
  8862  000CC6  0100               	movlb	0	; () banked
  8863  000CC8  07B6               	decf	___fladd@bexp& (0+255),f,b
  8864  000CCA                     l4615:
  8865                           
  8866                           ; BSR set to: 0
  8867  000CCA  0100               	movlb	0	; () banked
  8868  000CCC  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8869  000CCE  D7E2               	goto	l4599
  8870  000CD0                     l4617:
  8871                           
  8872                           ; BSR set to: 0
  8873  000CD0  0E00               	movlw	0
  8874  000CD2  0100               	movlb	0	; () banked
  8875  000CD4  6FB5               	movwf	___fladd@aexp& (0+255),b
  8876                           
  8877                           ; BSR set to: 0
  8878  000CD6  0100               	movlb	0	; () banked
  8879  000CD8  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8880  000CDA  D00D               	goto	l1007
  8881                           
  8882                           ; BSR set to: 0
  8883  000CDC  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8884  000CE0  0E7F               	movlw	127
  8885  000CE2  0100               	movlb	0	; () banked
  8886  000CE4  17AC               	andwf	??___fladd& (0+255),f,b
  8887  000CE6  A4D8               	btfss	status,2,c
  8888  000CE8  D003               	goto	l4625
  8889                           
  8890                           ; BSR set to: 0
  8891                           
  8892                           ; BSR set to: 0
  8893  000CEA  0100               	movlb	0	; () banked
  8894  000CEC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8895  000CEE  D003               	goto	l1007
  8896  000CF0                     l4625:
  8897                           
  8898                           ; BSR set to: 0
  8899  000CF0  0E01               	movlw	1
  8900  000CF2  0100               	movlb	0	; () banked
  8901  000CF4  6FB5               	movwf	___fladd@aexp& (0+255),b
  8902  000CF6                     l1007:
  8903                           
  8904                           ; BSR set to: 0
  8905  000CF6  0100               	movlb	0	; () banked
  8906  000CF8  51B5               	movf	___fladd@aexp& (0+255),w,b
  8907  000CFA  0100               	movlb	0	; () banked
  8908  000CFC  B4D8               	btfsc	status,2,c
  8909  000CFE  D026               	goto	l4635
  8910                           
  8911                           ; BSR set to: 0
  8912  000D00  0E01               	movlw	1
  8913  000D02  0100               	movlb	0	; () banked
  8914  000D04  27A4               	addwf	___fladd@b& (0+255),f,b
  8915  000D06  0E00               	movlw	0
  8916  000D08  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8917  000D0A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8918  000D0C  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8919                           
  8920                           ; BSR set to: 0
  8921  000D0E  0100               	movlb	0	; () banked
  8922  000D10  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8923  000D12  D01C               	goto	l4635
  8924                           
  8925                           ; BSR set to: 0
  8926  000D14  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8927  000D18  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8928  000D1C  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8929  000D20  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8930  000D24  0100               	movlb	0	; () banked
  8931  000D26  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8932  000D28  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8933  000D2A  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8934  000D2C  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8935  000D2E  33AC               	rrcf	??___fladd& (0+255),f,b
  8936  000D30  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8937  000D34  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8938  000D38  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8939  000D3C  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8940  000D40  0100               	movlb	0	; () banked
  8941  000D42  29B6               	incf	___fladd@bexp& (0+255),w,b
  8942  000D44  B4D8               	btfsc	status,2,c
  8943  000D46  D002               	goto	l4635
  8944                           
  8945                           ; BSR set to: 0
  8946  000D48  0100               	movlb	0	; () banked
  8947  000D4A  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8948  000D4C                     l4635:
  8949                           
  8950                           ; BSR set to: 0
  8951  000D4C  0100               	movlb	0	; () banked
  8952  000D4E  29B6               	incf	___fladd@bexp& (0+255),w,b
  8953  000D50  B4D8               	btfsc	status,2,c
  8954  000D52  D005               	goto	l4639
  8955                           
  8956                           ; BSR set to: 0
  8957  000D54  0100               	movlb	0	; () banked
  8958  000D56  51B6               	movf	___fladd@bexp& (0+255),w,b
  8959  000D58  0100               	movlb	0	; () banked
  8960  000D5A  A4D8               	btfss	status,2,c
  8961  000D5C  D011               	goto	l4643
  8962  000D5E                     l4639:
  8963                           
  8964                           ; BSR set to: 0
  8965  000D5E  0E00               	movlw	0
  8966  000D60  0100               	movlb	0	; () banked
  8967  000D62  6FA4               	movwf	___fladd@b& (0+255),b
  8968  000D64  0E00               	movlw	0
  8969  000D66  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8970  000D68  0E00               	movlw	0
  8971  000D6A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8972  000D6C  0E00               	movlw	0
  8973  000D6E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8974  000D70  0100               	movlb	0	; () banked
  8975  000D72  51B6               	movf	___fladd@bexp& (0+255),w,b
  8976  000D74  0100               	movlb	0	; () banked
  8977  000D76  A4D8               	btfss	status,2,c
  8978  000D78  D003               	goto	l4643
  8979                           
  8980                           ; BSR set to: 0
  8981  000D7A  0E00               	movlw	0
  8982  000D7C  0100               	movlb	0	; () banked
  8983  000D7E  6FB4               	movwf	___fladd@signs& (0+255),b
  8984  000D80                     l4643:
  8985                           
  8986                           ; BSR set to: 0
  8987  000D80  0100               	movlb	0	; () banked
  8988  000D82  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8989  000D84  D003               	goto	l4647
  8990                           
  8991                           ; BSR set to: 0
  8992  000D86  0100               	movlb	0	; () banked
  8993  000D88  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8994  000D8A  D002               	goto	l4649
  8995  000D8C                     l4647:
  8996                           
  8997                           ; BSR set to: 0
  8998  000D8C  0100               	movlb	0	; () banked
  8999  000D8E  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  9000  000D90                     l4649:
  9001                           
  9002                           ; BSR set to: 0
  9003  000D90  0100               	movlb	0	; () banked
  9004  000D92  90D8               	bcf	status,0,c
  9005  000D94  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  9006  000D96  0100               	movlb	0	; () banked
  9007  000D98  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  9008                           
  9009                           ; BSR set to: 0
  9010  000D9A  0100               	movlb	0	; () banked
  9011  000D9C  AFB4               	btfss	___fladd@signs& (0+255),7,b
  9012  000D9E  D002               	goto	l4655
  9013                           
  9014                           ; BSR set to: 0
  9015  000DA0  0100               	movlb	0	; () banked
  9016  000DA2  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  9017  000DA4                     l4655:
  9018                           
  9019                           ; BSR set to: 0
  9020  000DA4  C0A4  F0A4         	movff	___fladd@b,?___fladd
  9021  000DA8  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  9022  000DAC  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  9023  000DB0  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  9024  000DB4  0012               	return	
  9025  000DB6                     __end_of___fladd:
  9026                           	opt stack 0
  9027                           tblptru	equ	0xFF8
  9028                           tblptrh	equ	0xFF7
  9029                           tblptrl	equ	0xFF6
  9030                           tablat	equ	0xFF5
  9031                           prodh	equ	0xFF4
  9032                           prodl	equ	0xFF3
  9033                           intcon	equ	0xFF2
  9034                           postinc0	equ	0xFEE
  9035                           wreg	equ	0xFE8
  9036                           indf1	equ	0xFE7
  9037                           postinc1	equ	0xFE6
  9038                           fsr1h	equ	0xFE2
  9039                           fsr1l	equ	0xFE1
  9040                           indf2	equ	0xFDF
  9041                           postinc2	equ	0xFDE
  9042                           fsr2h	equ	0xFDA
  9043                           fsr2l	equ	0xFD9
  9044                           status	equ	0xFD8
  9045                           
  9046 ;; *************** function ___flneg *****************
  9047 ;; Defined at:
  9048 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  f1              4   23[COMRAM] unsigned char 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  4   23[COMRAM] unsigned char 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9062 ;;      Params:         4       0       0       0
  9063 ;;      Locals:         0       0       0       0
  9064 ;;      Temps:          0       0       0       0
  9065 ;;      Totals:         4       0       0       0
  9066 ;;Total ram usage:        4 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    4
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_sprintf
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text28
  9077  002ECA                     __ptext28:
  9078                           	opt stack 0
  9079  002ECA                     ___flneg:
  9080                           	opt stack 24
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;incstack = 0
  9084  002ECA  503D               	movf	___flneg@f1,w,c
  9085  002ECC  103E               	iorwf	___flneg@f1+1,w,c
  9086  002ECE  103F               	iorwf	___flneg@f1+2,w,c
  9087  002ED0  1040               	iorwf	___flneg@f1+3,w,c
  9088  002ED2  B4D8               	btfsc	status,2,c
  9089  002ED4  D008               	goto	l5113
  9090  002ED6  0E00               	movlw	0
  9091  002ED8  1A3D               	xorwf	___flneg@f1,f,c
  9092  002EDA  0E00               	movlw	0
  9093  002EDC  1A3E               	xorwf	___flneg@f1+1,f,c
  9094  002EDE  0E00               	movlw	0
  9095  002EE0  1A3F               	xorwf	___flneg@f1+2,f,c
  9096  002EE2  0E80               	movlw	128
  9097  002EE4  1A40               	xorwf	___flneg@f1+3,f,c
  9098  002EE6                     l5113:
  9099  002EE6  C03D  F03D         	movff	___flneg@f1,?___flneg
  9100  002EEA  C03E  F03E         	movff	___flneg@f1+1,?___flneg+1
  9101  002EEE  C03F  F03F         	movff	___flneg@f1+2,?___flneg+2
  9102  002EF2  C040  F040         	movff	___flneg@f1+3,?___flneg+3
  9103  002EF6  0012               	return	
  9104  002EF8                     __end_of___flneg:
  9105                           	opt stack 0
  9106                           tblptru	equ	0xFF8
  9107                           tblptrh	equ	0xFF7
  9108                           tblptrl	equ	0xFF6
  9109                           tablat	equ	0xFF5
  9110                           prodh	equ	0xFF4
  9111                           prodl	equ	0xFF3
  9112                           intcon	equ	0xFF2
  9113                           postinc0	equ	0xFEE
  9114                           wreg	equ	0xFE8
  9115                           indf1	equ	0xFE7
  9116                           postinc1	equ	0xFE6
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           indf2	equ	0xFDF
  9120                           postinc2	equ	0xFDE
  9121                           fsr2h	equ	0xFDA
  9122                           fsr2l	equ	0xFD9
  9123                           status	equ	0xFD8
  9124                           
  9125 ;; *************** function ___flge *****************
  9126 ;; Defined at:
  9127 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  ff1             4   23[COMRAM] unsigned char 
  9130 ;;  ff2             4   27[COMRAM] unsigned char 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;		None               void
  9135 ;; Registers used:
  9136 ;;		wreg, status,2, status,0
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9142 ;;      Params:         8       0       0       0
  9143 ;;      Locals:         0       0       0       0
  9144 ;;      Temps:          0       4       0       0
  9145 ;;      Totals:         8       4       0       0
  9146 ;;Total ram usage:       12 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    4
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_sprintf
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text29
  9157  002186                     __ptext29:
  9158                           	opt stack 0
  9159  002186                     ___flge:
  9160                           	opt stack 24
  9161                           
  9162                           ;incstack = 0
  9163  002186  0E00               	movlw	0
  9164  002188  143D               	andwf	___flge@ff1,w,c
  9165  00218A  0100               	movlb	0	; () banked
  9166  00218C  6F70               	movwf	??___flge& (0+255),b
  9167  00218E  0E00               	movlw	0
  9168  002190  143E               	andwf	___flge@ff1+1,w,c
  9169  002192  0100               	movlb	0	; () banked
  9170  002194  6F71               	movwf	(??___flge+1)& (0+255),b
  9171  002196  0E80               	movlw	128
  9172  002198  143F               	andwf	___flge@ff1+2,w,c
  9173  00219A  0100               	movlb	0	; () banked
  9174  00219C  6F72               	movwf	(??___flge+2)& (0+255),b
  9175  00219E  0E7F               	movlw	127
  9176  0021A0  1440               	andwf	___flge@ff1+3,w,c
  9177  0021A2  0100               	movlb	0	; () banked
  9178  0021A4  6F73               	movwf	(??___flge+3)& (0+255),b
  9179  0021A6  0100               	movlb	0	; () banked
  9180  0021A8  5170               	movf	??___flge& (0+255),w,b
  9181  0021AA  0100               	movlb	0	; () banked
  9182  0021AC  1171               	iorwf	(??___flge+1)& (0+255),w,b
  9183  0021AE  0100               	movlb	0	; () banked
  9184  0021B0  1172               	iorwf	(??___flge+2)& (0+255),w,b
  9185  0021B2  0100               	movlb	0	; () banked
  9186  0021B4  1173               	iorwf	(??___flge+3)& (0+255),w,b
  9187  0021B6  A4D8               	btfss	status,2,c
  9188  0021B8  D008               	goto	l5091
  9189                           
  9190                           ; BSR set to: 0
  9191  0021BA  0E00               	movlw	0
  9192  0021BC  6E3D               	movwf	___flge@ff1,c
  9193  0021BE  0E00               	movlw	0
  9194  0021C0  6E3E               	movwf	___flge@ff1+1,c
  9195  0021C2  0E00               	movlw	0
  9196  0021C4  6E3F               	movwf	___flge@ff1+2,c
  9197  0021C6  0E00               	movlw	0
  9198  0021C8  6E40               	movwf	___flge@ff1+3,c
  9199  0021CA                     l5091:
  9200                           
  9201                           ; BSR set to: 0
  9202  0021CA  0E00               	movlw	0
  9203  0021CC  1441               	andwf	___flge@ff2,w,c
  9204  0021CE  0100               	movlb	0	; () banked
  9205  0021D0  6F70               	movwf	??___flge& (0+255),b
  9206  0021D2  0E00               	movlw	0
  9207  0021D4  1442               	andwf	___flge@ff2+1,w,c
  9208  0021D6  0100               	movlb	0	; () banked
  9209  0021D8  6F71               	movwf	(??___flge+1)& (0+255),b
  9210  0021DA  0E80               	movlw	128
  9211  0021DC  1443               	andwf	___flge@ff2+2,w,c
  9212  0021DE  0100               	movlb	0	; () banked
  9213  0021E0  6F72               	movwf	(??___flge+2)& (0+255),b
  9214  0021E2  0E7F               	movlw	127
  9215  0021E4  1444               	andwf	___flge@ff2+3,w,c
  9216  0021E6  0100               	movlb	0	; () banked
  9217  0021E8  6F73               	movwf	(??___flge+3)& (0+255),b
  9218  0021EA  0100               	movlb	0	; () banked
  9219  0021EC  5170               	movf	??___flge& (0+255),w,b
  9220  0021EE  0100               	movlb	0	; () banked
  9221  0021F0  1171               	iorwf	(??___flge+1)& (0+255),w,b
  9222  0021F2  0100               	movlb	0	; () banked
  9223  0021F4  1172               	iorwf	(??___flge+2)& (0+255),w,b
  9224  0021F6  0100               	movlb	0	; () banked
  9225  0021F8  1173               	iorwf	(??___flge+3)& (0+255),w,b
  9226  0021FA  A4D8               	btfss	status,2,c
  9227  0021FC  D008               	goto	l5095
  9228                           
  9229                           ; BSR set to: 0
  9230  0021FE  0E00               	movlw	0
  9231  002200  6E41               	movwf	___flge@ff2,c
  9232  002202  0E00               	movlw	0
  9233  002204  6E42               	movwf	___flge@ff2+1,c
  9234  002206  0E00               	movlw	0
  9235  002208  6E43               	movwf	___flge@ff2+2,c
  9236  00220A  0E00               	movlw	0
  9237  00220C  6E44               	movwf	___flge@ff2+3,c
  9238  00220E                     l5095:
  9239                           
  9240                           ; BSR set to: 0
  9241  00220E  AE40               	btfss	___flge@ff1+3,7,c
  9242  002210  D022               	goto	l5099
  9243                           
  9244                           ; BSR set to: 0
  9245  002212  C03D  F070         	movff	___flge@ff1,??___flge
  9246  002216  C03E  F071         	movff	___flge@ff1+1,??___flge+1
  9247  00221A  C03F  F072         	movff	___flge@ff1+2,??___flge+2
  9248  00221E  C040  F073         	movff	___flge@ff1+3,??___flge+3
  9249  002222  0100               	movlb	0	; () banked
  9250  002224  1F70               	comf	??___flge& (0+255),f,b
  9251  002226  1F71               	comf	(??___flge+1)& (0+255),f,b
  9252  002228  1F72               	comf	(??___flge+2)& (0+255),f,b
  9253  00222A  1F73               	comf	(??___flge+3)& (0+255),f,b
  9254  00222C  2B70               	incf	??___flge& (0+255),f,b
  9255  00222E  0E00               	movlw	0
  9256  002230  2371               	addwfc	(??___flge+1)& (0+255),f,b
  9257  002232  2372               	addwfc	(??___flge+2)& (0+255),f,b
  9258  002234  2373               	addwfc	(??___flge+3)& (0+255),f,b
  9259  002236  0E00               	movlw	0
  9260  002238  0100               	movlb	0	; () banked
  9261  00223A  2570               	addwf	??___flge& (0+255),w,b
  9262  00223C  6E3D               	movwf	___flge@ff1,c
  9263  00223E  0E00               	movlw	0
  9264  002240  0100               	movlb	0	; () banked
  9265  002242  2171               	addwfc	(??___flge+1)& (0+255),w,b
  9266  002244  6E3E               	movwf	___flge@ff1+1,c
  9267  002246  0E00               	movlw	0
  9268  002248  0100               	movlb	0	; () banked
  9269  00224A  2172               	addwfc	(??___flge+2)& (0+255),w,b
  9270  00224C  6E3F               	movwf	___flge@ff1+2,c
  9271  00224E  0E80               	movlw	128
  9272  002250  0100               	movlb	0	; () banked
  9273  002252  2173               	addwfc	(??___flge+3)& (0+255),w,b
  9274  002254  6E40               	movwf	___flge@ff1+3,c
  9275  002256                     l5099:
  9276                           
  9277                           ; BSR set to: 0
  9278  002256  AE44               	btfss	___flge@ff2+3,7,c
  9279  002258  D022               	goto	l704
  9280                           
  9281                           ; BSR set to: 0
  9282  00225A  C041  F070         	movff	___flge@ff2,??___flge
  9283  00225E  C042  F071         	movff	___flge@ff2+1,??___flge+1
  9284  002262  C043  F072         	movff	___flge@ff2+2,??___flge+2
  9285  002266  C044  F073         	movff	___flge@ff2+3,??___flge+3
  9286  00226A  0100               	movlb	0	; () banked
  9287  00226C  1F70               	comf	??___flge& (0+255),f,b
  9288  00226E  1F71               	comf	(??___flge+1)& (0+255),f,b
  9289  002270  1F72               	comf	(??___flge+2)& (0+255),f,b
  9290  002272  1F73               	comf	(??___flge+3)& (0+255),f,b
  9291  002274  2B70               	incf	??___flge& (0+255),f,b
  9292  002276  0E00               	movlw	0
  9293  002278  2371               	addwfc	(??___flge+1)& (0+255),f,b
  9294  00227A  2372               	addwfc	(??___flge+2)& (0+255),f,b
  9295  00227C  2373               	addwfc	(??___flge+3)& (0+255),f,b
  9296  00227E  0E00               	movlw	0
  9297  002280  0100               	movlb	0	; () banked
  9298  002282  2570               	addwf	??___flge& (0+255),w,b
  9299  002284  6E41               	movwf	___flge@ff2,c
  9300  002286  0E00               	movlw	0
  9301  002288  0100               	movlb	0	; () banked
  9302  00228A  2171               	addwfc	(??___flge+1)& (0+255),w,b
  9303  00228C  6E42               	movwf	___flge@ff2+1,c
  9304  00228E  0E00               	movlw	0
  9305  002290  0100               	movlb	0	; () banked
  9306  002292  2172               	addwfc	(??___flge+2)& (0+255),w,b
  9307  002294  6E43               	movwf	___flge@ff2+2,c
  9308  002296  0E80               	movlw	128
  9309  002298  0100               	movlb	0	; () banked
  9310  00229A  2173               	addwfc	(??___flge+3)& (0+255),w,b
  9311  00229C  6E44               	movwf	___flge@ff2+3,c
  9312  00229E                     l704:
  9313                           
  9314                           ; BSR set to: 0
  9315  00229E  0E00               	movlw	0
  9316  0022A0  1A3D               	xorwf	___flge@ff1,f,c
  9317  0022A2  0E00               	movlw	0
  9318  0022A4  1A3E               	xorwf	___flge@ff1+1,f,c
  9319  0022A6  0E00               	movlw	0
  9320  0022A8  1A3F               	xorwf	___flge@ff1+2,f,c
  9321  0022AA  0E80               	movlw	128
  9322  0022AC  1A40               	xorwf	___flge@ff1+3,f,c
  9323  0022AE  0E00               	movlw	0
  9324  0022B0  1A41               	xorwf	___flge@ff2,f,c
  9325  0022B2  0E00               	movlw	0
  9326  0022B4  1A42               	xorwf	___flge@ff2+1,f,c
  9327  0022B6  0E00               	movlw	0
  9328  0022B8  1A43               	xorwf	___flge@ff2+2,f,c
  9329  0022BA  0E80               	movlw	128
  9330  0022BC  1A44               	xorwf	___flge@ff2+3,f,c
  9331  0022BE  5041               	movf	___flge@ff2,w,c
  9332  0022C0  5C3D               	subwf	___flge@ff1,w,c
  9333  0022C2  5042               	movf	___flge@ff2+1,w,c
  9334  0022C4  583E               	subwfb	___flge@ff1+1,w,c
  9335  0022C6  5043               	movf	___flge@ff2+2,w,c
  9336  0022C8  583F               	subwfb	___flge@ff1+2,w,c
  9337  0022CA  5044               	movf	___flge@ff2+3,w,c
  9338  0022CC  5840               	subwfb	___flge@ff1+3,w,c
  9339  0022CE  B0D8               	btfsc	status,0,c
  9340  0022D0  D002               	goto	l5105
  9341                           
  9342                           ; BSR set to: 0
  9343  0022D2  90D8               	bcf	status,0,c
  9344  0022D4  0012               	return	
  9345  0022D6                     l5105:
  9346                           
  9347                           ; BSR set to: 0
  9348  0022D6  80D8               	bsf	status,0,c
  9349                           
  9350                           ; BSR set to: 0
  9351  0022D8  0012               	return	
  9352  0022DA                     __end_of___flge:
  9353                           	opt stack 0
  9354                           tblptru	equ	0xFF8
  9355                           tblptrh	equ	0xFF7
  9356                           tblptrl	equ	0xFF6
  9357                           tablat	equ	0xFF5
  9358                           prodh	equ	0xFF4
  9359                           prodl	equ	0xFF3
  9360                           intcon	equ	0xFF2
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           indf1	equ	0xFE7
  9364                           postinc1	equ	0xFE6
  9365                           fsr1h	equ	0xFE2
  9366                           fsr1l	equ	0xFE1
  9367                           indf2	equ	0xFDF
  9368                           postinc2	equ	0xFDE
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8
  9372                           
  9373 ;; *************** function ___lwdiv *****************
  9374 ;; Defined at:
  9375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  dividend        2   23[COMRAM] unsigned int 
  9378 ;;  divisor         2   25[COMRAM] unsigned int 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  quotient        2   27[COMRAM] unsigned int 
  9381 ;;  counter         1   29[COMRAM] unsigned char 
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  2   23[COMRAM] unsigned int 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9391 ;;      Params:         4       0       0       0
  9392 ;;      Locals:         3       0       0       0
  9393 ;;      Temps:          0       0       0       0
  9394 ;;      Totals:         7       0       0       0
  9395 ;;Total ram usage:        7 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:    4
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_LCD_Handler
  9402 ;;		_utoa
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text30
  9407  002CD0                     __ptext30:
  9408                           	opt stack 0
  9409  002CD0                     ___lwdiv:
  9410                           	opt stack 25
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;incstack = 0
  9414  002CD0  0E00               	movlw	0
  9415  002CD2  6E42               	movwf	___lwdiv@quotient+1,c
  9416  002CD4  0E00               	movlw	0
  9417  002CD6  6E41               	movwf	___lwdiv@quotient,c
  9418  002CD8  503F               	movf	___lwdiv@divisor,w,c
  9419  002CDA  1040               	iorwf	___lwdiv@divisor+1,w,c
  9420  002CDC  B4D8               	btfsc	status,2,c
  9421  002CDE  D01C               	goto	l940
  9422  002CE0  0E01               	movlw	1
  9423  002CE2  6E43               	movwf	___lwdiv@counter,c
  9424  002CE4  D004               	goto	l3957
  9425  002CE6                     l3955:
  9426  002CE6  90D8               	bcf	status,0,c
  9427  002CE8  363F               	rlcf	___lwdiv@divisor,f,c
  9428  002CEA  3640               	rlcf	___lwdiv@divisor+1,f,c
  9429  002CEC  2A43               	incf	___lwdiv@counter,f,c
  9430  002CEE                     l3957:
  9431  002CEE  AE40               	btfss	___lwdiv@divisor+1,7,c
  9432  002CF0  D7FA               	goto	l3955
  9433  002CF2                     l3959:
  9434  002CF2  90D8               	bcf	status,0,c
  9435  002CF4  3641               	rlcf	___lwdiv@quotient,f,c
  9436  002CF6  3642               	rlcf	___lwdiv@quotient+1,f,c
  9437  002CF8  503F               	movf	___lwdiv@divisor,w,c
  9438  002CFA  5C3D               	subwf	___lwdiv@dividend,w,c
  9439  002CFC  5040               	movf	___lwdiv@divisor+1,w,c
  9440  002CFE  583E               	subwfb	___lwdiv@dividend+1,w,c
  9441  002D00  A0D8               	btfss	status,0,c
  9442  002D02  D005               	goto	l3967
  9443  002D04  503F               	movf	___lwdiv@divisor,w,c
  9444  002D06  5E3D               	subwf	___lwdiv@dividend,f,c
  9445  002D08  5040               	movf	___lwdiv@divisor+1,w,c
  9446  002D0A  5A3E               	subwfb	___lwdiv@dividend+1,f,c
  9447  002D0C  8041               	bsf	___lwdiv@quotient,0,c
  9448  002D0E                     l3967:
  9449  002D0E  90D8               	bcf	status,0,c
  9450  002D10  3240               	rrcf	___lwdiv@divisor+1,f,c
  9451  002D12  323F               	rrcf	___lwdiv@divisor,f,c
  9452  002D14  2E43               	decfsz	___lwdiv@counter,f,c
  9453  002D16  D7ED               	goto	l3959
  9454  002D18                     l940:
  9455  002D18  C041  F03D         	movff	___lwdiv@quotient,?___lwdiv
  9456  002D1C  C042  F03E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9457  002D20  0012               	return		;funcret
  9458  002D22                     __end_of___lwdiv:
  9459                           	opt stack 0
  9460                           tblptru	equ	0xFF8
  9461                           tblptrh	equ	0xFF7
  9462                           tblptrl	equ	0xFF6
  9463                           tablat	equ	0xFF5
  9464                           prodh	equ	0xFF4
  9465                           prodl	equ	0xFF3
  9466                           intcon	equ	0xFF2
  9467                           postinc0	equ	0xFEE
  9468                           wreg	equ	0xFE8
  9469                           indf1	equ	0xFE7
  9470                           postinc1	equ	0xFE6
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           indf2	equ	0xFDF
  9474                           postinc2	equ	0xFDE
  9475                           fsr2h	equ	0xFDA
  9476                           fsr2l	equ	0xFD9
  9477                           status	equ	0xFD8
  9478                           
  9479 ;; *************** function _LCD_write_string *****************
  9480 ;; Defined at:
  9481 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
  9484 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;		None               void
  9489 ;; Registers used:
  9490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9496 ;;      Params:         0       2       0       0
  9497 ;;      Locals:         0       0       0       0
  9498 ;;      Temps:          0       0       0       0
  9499 ;;      Totals:         0       2       0       0
  9500 ;;Total ram usage:        2 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    9
  9503 ;; This function calls:
  9504 ;;		_LCD_write_char
  9505 ;; This function is called by:
  9506 ;;		_LCD_Handler
  9507 ;;		_LCD_write_integer
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text31
  9512  002FA0                     __ptext31:
  9513                           	opt stack 0
  9514  002FA0                     _LCD_write_string:
  9515                           	opt stack 20
  9516                           
  9517                           ;src\LCD_44780.c: 197: while(*buffer){
  9518                           
  9519                           ;incstack = 0
  9520  002FA0  D00A               	goto	l5275
  9521  002FA2                     l5271:
  9522                           
  9523                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9524  002FA2  C078  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9525  002FA6  C079  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9526  002FAA  50DF               	movf	indf2,w,c
  9527  002FAC  EC3B  F015         	call	_LCD_write_char
  9528                           
  9529                           ;src\LCD_44780.c: 202: buffer++;
  9530  002FB0  0100               	movlb	0	; () banked
  9531  002FB2  4B78               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9532  002FB4  2B79               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9533  002FB6                     l5275:
  9534  002FB6  C078  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9535  002FBA  C079  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9536  002FBE  50DF               	movf	indf2,w,c
  9537  002FC0  B4D8               	btfsc	status,2,c
  9538  002FC2  0012               	return	
  9539  002FC4  D7EE               	goto	l5271
  9540  002FC6                     __end_of_LCD_write_string:
  9541                           	opt stack 0
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           postinc0	equ	0xFEE
  9550                           wreg	equ	0xFE8
  9551                           indf1	equ	0xFE7
  9552                           postinc1	equ	0xFE6
  9553                           fsr1h	equ	0xFE2
  9554                           fsr1l	equ	0xFE1
  9555                           indf2	equ	0xFDF
  9556                           postinc2	equ	0xFDE
  9557                           fsr2h	equ	0xFDA
  9558                           fsr2l	equ	0xFD9
  9559                           status	equ	0xFD8
  9560                           
  9561 ;; *************** function _LCD_write_message *****************
  9562 ;; Defined at:
  9563 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  buffer          2   24[BANK0 ] PTR const unsigned char 
  9566 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9567 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9568 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;		None               void
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9580 ;;      Params:         0       2       0       0
  9581 ;;      Locals:         0       0       0       0
  9582 ;;      Temps:          0       0       0       0
  9583 ;;      Totals:         0       2       0       0
  9584 ;;Total ram usage:        2 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    9
  9587 ;; This function calls:
  9588 ;;		_LCD_write_char
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;;		_LCD_Handler
  9592 ;;		_board_initialization
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text32
  9597  002EF8                     __ptext32:
  9598                           	opt stack 0
  9599  002EF8                     _LCD_write_message:
  9600                           	opt stack 20
  9601                           
  9602                           ;src\LCD_44780.c: 181: while(*buffer) {
  9603                           
  9604                           ;incstack = 0
  9605  002EF8  D00B               	goto	l5267
  9606  002EFA                     l5263:
  9607                           
  9608                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9609  002EFA  C078  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9610  002EFE  C079  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9611  002F02                     	if	0	;tblptru may be non-zero
  9612  002F02                     	endif
  9613  002F02                     	if	0	;tblptru may be non-zero
  9614  002F02                     	endif
  9615  002F02  0008               	tblrd		*
  9616  002F04  50F5               	movf	tablat,w,c
  9617  002F06  EC3B  F015         	call	_LCD_write_char
  9618                           
  9619                           ;src\LCD_44780.c: 186: buffer++;
  9620  002F0A  0100               	movlb	0	; () banked
  9621  002F0C  4B78               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9622  002F0E  2B79               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9623  002F10                     l5267:
  9624  002F10  C078  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9625  002F14  C079  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9626  002F18                     	if	0	;tblptru may be non-zero
  9627  002F18                     	endif
  9628  002F18                     	if	0	;tblptru may be non-zero
  9629  002F18                     	endif
  9630  002F18  0008               	tblrd		*
  9631  002F1A  50F5               	movf	tablat,w,c
  9632  002F1C  0900               	iorlw	0
  9633  002F1E  B4D8               	btfsc	status,2,c
  9634  002F20  0012               	return	
  9635  002F22  D7EB               	goto	l5263
  9636  002F24                     __end_of_LCD_write_message:
  9637                           	opt stack 0
  9638                           tblptru	equ	0xFF8
  9639                           tblptrh	equ	0xFF7
  9640                           tblptrl	equ	0xFF6
  9641                           tablat	equ	0xFF5
  9642                           prodh	equ	0xFF4
  9643                           prodl	equ	0xFF3
  9644                           intcon	equ	0xFF2
  9645                           postinc0	equ	0xFEE
  9646                           wreg	equ	0xFE8
  9647                           indf1	equ	0xFE7
  9648                           postinc1	equ	0xFE6
  9649                           fsr1h	equ	0xFE2
  9650                           fsr1l	equ	0xFE1
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           fsr2h	equ	0xFDA
  9654                           fsr2l	equ	0xFD9
  9655                           status	equ	0xFD8
  9656                           
  9657 ;; *************** function _LCD_write_char *****************
  9658 ;; Defined at:
  9659 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  value           1    wreg     unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  value           1   23[BANK0 ] unsigned char 
  9664 ;;  D0              1   22[BANK0 ] unsigned char 
  9665 ;;  D1              1   21[BANK0 ] unsigned char 
  9666 ;;  D2              1   20[BANK0 ] unsigned char 
  9667 ;;  D3              1   19[BANK0 ] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;		None               void
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9677 ;;      Params:         0       0       0       0
  9678 ;;      Locals:         0       5       0       0
  9679 ;;      Temps:          0       0       0       0
  9680 ;;      Totals:         0       5       0       0
  9681 ;;Total ram usage:        5 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    8
  9684 ;; This function calls:
  9685 ;;		_LCD_send_command
  9686 ;; This function is called by:
  9687 ;;		_LCD_write_message
  9688 ;;		_LCD_write_string
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text33
  9693  002A76                     __ptext33:
  9694                           	opt stack 0
  9695  002A76                     _LCD_write_char:
  9696                           	opt stack 20
  9697                           
  9698                           ;incstack = 0
  9699                           ;LCD_write_char@value stored from wreg
  9700  002A76  0100               	movlb	0	; () banked
  9701  002A78  6F77               	movwf	LCD_write_char@value& (0+255),b
  9702                           
  9703                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9704                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  9705  002A7A  828A               	bsf	3978,1,c	;volatile
  9706                           
  9707                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9708  002A7C  0100               	movlb	0	; () banked
  9709  002A7E  4577               	rlncf	LCD_write_char@value& (0+255),w,b
  9710  002A80  0B01               	andlw	1
  9711  002A82  0100               	movlb	0	; () banked
  9712  002A84  6F73               	movwf	LCD_write_char@D3& (0+255),b
  9713                           
  9714                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9715  002A86  0100               	movlb	0	; () banked
  9716  002A88  4577               	rlncf	LCD_write_char@value& (0+255),w,b
  9717  002A8A  46E8               	rlncf	wreg,f,c
  9718  002A8C  0B03               	andlw	3
  9719  002A8E  0B01               	andlw	1
  9720  002A90  0100               	movlb	0	; () banked
  9721  002A92  6F74               	movwf	LCD_write_char@D2& (0+255),b
  9722                           
  9723                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9724  002A94  0100               	movlb	0	; () banked
  9725  002A96  3977               	swapf	LCD_write_char@value& (0+255),w,b
  9726  002A98  42E8               	rrncf	wreg,f,c
  9727  002A9A  0B07               	andlw	7
  9728  002A9C  0B01               	andlw	1
  9729  002A9E  0100               	movlb	0	; () banked
  9730  002AA0  6F75               	movwf	LCD_write_char@D1& (0+255),b
  9731                           
  9732                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9733  002AA2  0100               	movlb	0	; () banked
  9734  002AA4  3977               	swapf	LCD_write_char@value& (0+255),w,b
  9735  002AA6  0B0F               	andlw	15
  9736  002AA8  0B01               	andlw	1
  9737  002AAA  0100               	movlb	0	; () banked
  9738  002AAC  6F76               	movwf	LCD_write_char@D0& (0+255),b
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9742  002AAE  C074  F070         	movff	LCD_write_char@D2,LCD_send_command@D2
  9743  002AB2  C075  F071         	movff	LCD_write_char@D1,LCD_send_command@D1
  9744  002AB6  C076  F072         	movff	LCD_write_char@D0,LCD_send_command@D0
  9745  002ABA  0100               	movlb	0	; () banked
  9746  002ABC  5173               	movf	LCD_write_char@D3& (0+255),w,b
  9747  002ABE  EC18  F017         	call	_LCD_send_command
  9748                           
  9749                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9750  002AC2  0100               	movlb	0	; () banked
  9751  002AC4  3977               	swapf	LCD_write_char@value& (0+255),w,b
  9752  002AC6  46E8               	rlncf	wreg,f,c
  9753  002AC8  0B1F               	andlw	31
  9754  002ACA  0B01               	andlw	1
  9755  002ACC  0100               	movlb	0	; () banked
  9756  002ACE  6F73               	movwf	LCD_write_char@D3& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9760  002AD0  0100               	movlb	0	; () banked
  9761  002AD2  4177               	rrncf	LCD_write_char@value& (0+255),w,b
  9762  002AD4  42E8               	rrncf	wreg,f,c
  9763  002AD6  0B3F               	andlw	63
  9764  002AD8  0B01               	andlw	1
  9765  002ADA  0100               	movlb	0	; () banked
  9766  002ADC  6F74               	movwf	LCD_write_char@D2& (0+255),b
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9770  002ADE  0100               	movlb	0	; () banked
  9771  002AE0  90D8               	bcf	status,0,c
  9772  002AE2  3177               	rrcf	LCD_write_char@value& (0+255),w,b
  9773  002AE4  0B01               	andlw	1
  9774  002AE6  0100               	movlb	0	; () banked
  9775  002AE8  6F75               	movwf	LCD_write_char@D1& (0+255),b
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9779  002AEA  0100               	movlb	0	; () banked
  9780  002AEC  5177               	movf	LCD_write_char@value& (0+255),w,b
  9781  002AEE  0B01               	andlw	1
  9782  002AF0  0100               	movlb	0	; () banked
  9783  002AF2  6F76               	movwf	LCD_write_char@D0& (0+255),b
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9787  002AF4  C074  F070         	movff	LCD_write_char@D2,LCD_send_command@D2
  9788  002AF8  C075  F071         	movff	LCD_write_char@D1,LCD_send_command@D1
  9789  002AFC  C076  F072         	movff	LCD_write_char@D0,LCD_send_command@D0
  9790  002B00  0100               	movlb	0	; () banked
  9791  002B02  5173               	movf	LCD_write_char@D3& (0+255),w,b
  9792  002B04  EC18  F017         	call	_LCD_send_command
  9793                           
  9794                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  9795  002B08  928A               	bcf	3978,1,c	;volatile
  9796  002B0A  0012               	return		;funcret
  9797  002B0C                     __end_of_LCD_write_char:
  9798                           	opt stack 0
  9799                           tblptru	equ	0xFF8
  9800                           tblptrh	equ	0xFF7
  9801                           tblptrl	equ	0xFF6
  9802                           tablat	equ	0xFF5
  9803                           prodh	equ	0xFF4
  9804                           prodl	equ	0xFF3
  9805                           intcon	equ	0xFF2
  9806                           postinc0	equ	0xFEE
  9807                           wreg	equ	0xFE8
  9808                           indf1	equ	0xFE7
  9809                           postinc1	equ	0xFE6
  9810                           fsr1h	equ	0xFE2
  9811                           fsr1l	equ	0xFE1
  9812                           indf2	equ	0xFDF
  9813                           postinc2	equ	0xFDE
  9814                           fsr2h	equ	0xFDA
  9815                           fsr2l	equ	0xFD9
  9816                           status	equ	0xFD8
  9817                           
  9818 ;; *************** function _LCD_goto_line *****************
  9819 ;; Defined at:
  9820 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  line            1    wreg     unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  line            1   19[BANK0 ] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;		None               void
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9834 ;;      Params:         0       0       0       0
  9835 ;;      Locals:         0       1       0       0
  9836 ;;      Temps:          0       0       0       0
  9837 ;;      Totals:         0       1       0       0
  9838 ;;Total ram usage:        1 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    8
  9841 ;; This function calls:
  9842 ;;		_LCD_send_command
  9843 ;; This function is called by:
  9844 ;;		_main
  9845 ;;		_LCD_Handler
  9846 ;;		_board_initialization
  9847 ;;		_LCD_goto_xy
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text34
  9852  002638                     __ptext34:
  9853                           	opt stack 0
  9854  002638                     _LCD_goto_line:
  9855                           	opt stack 21
  9856                           
  9857                           ;incstack = 0
  9858                           ;LCD_goto_line@line stored from wreg
  9859  002638  0100               	movlb	0	; () banked
  9860  00263A  6F73               	movwf	LCD_goto_line@line& (0+255),b
  9861                           
  9862                           ;src\LCD_44780.c: 113: switch(line) {
  9863  00263C  D064               	goto	l5259
  9864  00263E                     l5251:
  9865  00263E  0E00               	movlw	0
  9866  002640  0100               	movlb	0	; () banked
  9867  002642  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9868  002644  0E00               	movlw	0
  9869  002646  0100               	movlb	0	; () banked
  9870  002648  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9871  00264A  0E00               	movlw	0
  9872  00264C  0100               	movlb	0	; () banked
  9873  00264E  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9874  002650  0E01               	movlw	1
  9875  002652  EC18  F017         	call	_LCD_send_command
  9876                           
  9877                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9878  002656  0E00               	movlw	0
  9879  002658  0100               	movlb	0	; () banked
  9880  00265A  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9881  00265C  0E00               	movlw	0
  9882  00265E  0100               	movlb	0	; () banked
  9883  002660  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9884  002662  0E00               	movlw	0
  9885  002664  0100               	movlb	0	; () banked
  9886  002666  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9887  002668  0E00               	movlw	0
  9888  00266A  EC18  F017         	call	_LCD_send_command
  9889                           
  9890                           ;src\LCD_44780.c: 117: break;
  9891  00266E  0012               	return	
  9892  002670                     l5253:
  9893  002670  0E01               	movlw	1
  9894  002672  0100               	movlb	0	; () banked
  9895  002674  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9896  002676  0E00               	movlw	0
  9897  002678  0100               	movlb	0	; () banked
  9898  00267A  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9899  00267C  0E00               	movlw	0
  9900  00267E  0100               	movlb	0	; () banked
  9901  002680  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9902  002682  0E01               	movlw	1
  9903  002684  EC18  F017         	call	_LCD_send_command
  9904                           
  9905                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9906  002688  0E00               	movlw	0
  9907  00268A  0100               	movlb	0	; () banked
  9908  00268C  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9909  00268E  0E00               	movlw	0
  9910  002690  0100               	movlb	0	; () banked
  9911  002692  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9912  002694  0E00               	movlw	0
  9913  002696  0100               	movlb	0	; () banked
  9914  002698  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9915  00269A  0E00               	movlw	0
  9916  00269C  EC18  F017         	call	_LCD_send_command
  9917                           
  9918                           ;src\LCD_44780.c: 121: break;
  9919  0026A0  0012               	return	
  9920  0026A2                     l5255:
  9921  0026A2  0E00               	movlw	0
  9922  0026A4  0100               	movlb	0	; () banked
  9923  0026A6  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9924  0026A8  0E00               	movlw	0
  9925  0026AA  0100               	movlb	0	; () banked
  9926  0026AC  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9927  0026AE  0E01               	movlw	1
  9928  0026B0  0100               	movlb	0	; () banked
  9929  0026B2  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9930  0026B4  0E01               	movlw	1
  9931  0026B6  EC18  F017         	call	_LCD_send_command
  9932                           
  9933                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9934  0026BA  0E01               	movlw	1
  9935  0026BC  0100               	movlb	0	; () banked
  9936  0026BE  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9937  0026C0  0E00               	movlw	0
  9938  0026C2  0100               	movlb	0	; () banked
  9939  0026C4  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9940  0026C6  0E00               	movlw	0
  9941  0026C8  0100               	movlb	0	; () banked
  9942  0026CA  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9943  0026CC  0E00               	movlw	0
  9944  0026CE  EC18  F017         	call	_LCD_send_command
  9945                           
  9946                           ;src\LCD_44780.c: 125: break;
  9947  0026D2  0012               	return	
  9948  0026D4                     l5257:
  9949  0026D4  0E01               	movlw	1
  9950  0026D6  0100               	movlb	0	; () banked
  9951  0026D8  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9952  0026DA  0E00               	movlw	0
  9953  0026DC  0100               	movlb	0	; () banked
  9954  0026DE  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9955  0026E0  0E01               	movlw	1
  9956  0026E2  0100               	movlb	0	; () banked
  9957  0026E4  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9958  0026E6  0E01               	movlw	1
  9959  0026E8  EC18  F017         	call	_LCD_send_command
  9960                           
  9961                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9962  0026EC  0E01               	movlw	1
  9963  0026EE  0100               	movlb	0	; () banked
  9964  0026F0  6F70               	movwf	LCD_send_command@D2& (0+255),b
  9965  0026F2  0E00               	movlw	0
  9966  0026F4  0100               	movlb	0	; () banked
  9967  0026F6  6F71               	movwf	LCD_send_command@D1& (0+255),b
  9968  0026F8  0E00               	movlw	0
  9969  0026FA  0100               	movlb	0	; () banked
  9970  0026FC  6F72               	movwf	LCD_send_command@D0& (0+255),b
  9971  0026FE  0E00               	movlw	0
  9972  002700  EC18  F017         	call	_LCD_send_command
  9973                           
  9974                           ;src\LCD_44780.c: 129: }
  9975  002704  0012               	return	
  9976  002706                     l5259:
  9977  002706  0100               	movlb	0	; () banked
  9978  002708  5173               	movf	LCD_goto_line@line& (0+255),w,b
  9979                           
  9980                           ; Switch size 1, requested type "space"
  9981                           ; Number of cases is 4, Range of values is 1 to 4
  9982                           ; switch strategies available:
  9983                           ; Name         Instructions Cycles
  9984                           ; simple_byte           13     7 (average)
  9985                           ;	Chosen strategy is simple_byte
  9986  00270A  0A01               	xorlw	1	; case 1
  9987  00270C  B4D8               	btfsc	status,2,c
  9988  00270E  D797               	goto	l5251
  9989  002710  0A03               	xorlw	3	; case 2
  9990  002712  B4D8               	btfsc	status,2,c
  9991  002714  D7AD               	goto	l5253
  9992  002716  0A01               	xorlw	1	; case 3
  9993  002718  B4D8               	btfsc	status,2,c
  9994  00271A  D7C3               	goto	l5255
  9995  00271C  0A07               	xorlw	7	; case 4
  9996  00271E  A4D8               	btfss	status,2,c
  9997  002720  0012               	return	
  9998  002722  D7D8               	goto	l5257
  9999  002724                     __end_of_LCD_goto_line:
 10000                           	opt stack 0
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           postinc0	equ	0xFEE
 10009                           wreg	equ	0xFE8
 10010                           indf1	equ	0xFE7
 10011                           postinc1	equ	0xFE6
 10012                           fsr1h	equ	0xFE2
 10013                           fsr1l	equ	0xFE1
 10014                           indf2	equ	0xFDF
 10015                           postinc2	equ	0xFDE
 10016                           fsr2h	equ	0xFDA
 10017                           fsr2l	equ	0xFD9
 10018                           status	equ	0xFD8
 10019                           
 10020 ;; *************** function _LCD_clear *****************
 10021 ;; Defined at:
 10022 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;		None               void
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10036 ;;      Params:         0       0       0       0
 10037 ;;      Locals:         0       0       0       0
 10038 ;;      Temps:          0       0       0       0
 10039 ;;      Totals:         0       0       0       0
 10040 ;;Total ram usage:        0 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    8
 10043 ;; This function calls:
 10044 ;;		_LCD_send_command
 10045 ;; This function is called by:
 10046 ;;		_LCD_initialize
 10047 ;;		_main
 10048 ;;		_LCD_Handler
 10049 ;;		_board_initialization
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text35
 10054  002E98                     __ptext35:
 10055                           	opt stack 0
 10056  002E98                     _LCD_clear:
 10057                           	opt stack 20
 10058                           
 10059                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10060                           
 10061                           ;incstack = 0
 10062  002E98  0E00               	movlw	0
 10063  002E9A  0100               	movlb	0	; () banked
 10064  002E9C  6F70               	movwf	LCD_send_command@D2& (0+255),b
 10065  002E9E  0E00               	movlw	0
 10066  002EA0  0100               	movlb	0	; () banked
 10067  002EA2  6F71               	movwf	LCD_send_command@D1& (0+255),b
 10068  002EA4  0E00               	movlw	0
 10069  002EA6  0100               	movlb	0	; () banked
 10070  002EA8  6F72               	movwf	LCD_send_command@D0& (0+255),b
 10071  002EAA  0E00               	movlw	0
 10072  002EAC  EC18  F017         	call	_LCD_send_command
 10073                           
 10074                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10075  002EB0  0E00               	movlw	0
 10076  002EB2  0100               	movlb	0	; () banked
 10077  002EB4  6F70               	movwf	LCD_send_command@D2& (0+255),b
 10078  002EB6  0E00               	movlw	0
 10079  002EB8  0100               	movlb	0	; () banked
 10080  002EBA  6F71               	movwf	LCD_send_command@D1& (0+255),b
 10081  002EBC  0E01               	movlw	1
 10082  002EBE  0100               	movlb	0	; () banked
 10083  002EC0  6F72               	movwf	LCD_send_command@D0& (0+255),b
 10084  002EC2  0E00               	movlw	0
 10085  002EC4  EC18  F017         	call	_LCD_send_command
 10086  002EC8  0012               	return		;funcret
 10087  002ECA                     __end_of_LCD_clear:
 10088                           	opt stack 0
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           intcon	equ	0xFF2
 10096                           postinc0	equ	0xFEE
 10097                           wreg	equ	0xFE8
 10098                           indf1	equ	0xFE7
 10099                           postinc1	equ	0xFE6
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           fsr2h	equ	0xFDA
 10105                           fsr2l	equ	0xFD9
 10106                           status	equ	0xFD8
 10107                           
 10108 ;; *************** function _LCD_send_command *****************
 10109 ;; Defined at:
 10110 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  D3              1    wreg     unsigned char 
 10113 ;;  D2              1   16[BANK0 ] unsigned char 
 10114 ;;  D1              1   17[BANK0 ] unsigned char 
 10115 ;;  D0              1   18[BANK0 ] unsigned char 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  D3              1   31[COMRAM] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;		None               void
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10127 ;;      Params:         0       3       0       0
 10128 ;;      Locals:         1       0       0       0
 10129 ;;      Temps:          0       0       0       0
 10130 ;;      Totals:         1       3       0       0
 10131 ;;Total ram usage:        4 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    7
 10134 ;; This function calls:
 10135 ;;		_LCD_enable_pulse
 10136 ;; This function is called by:
 10137 ;;		_LCD_goto_line
 10138 ;;		_LCD_write_char
 10139 ;;		_LCD_clear
 10140 ;;		_LCD_cursor
 10141 ;;		_LCD_initialize
 10142 ;;		_LCD_home
 10143 ;;		_LCD_shift
 10144 ;;		_LCD_shift_cursor
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text36
 10149  002E30                     __ptext36:
 10150                           	opt stack 0
 10151  002E30                     _LCD_send_command:
 10152                           	opt stack 20
 10153                           
 10154                           ;incstack = 0
 10155                           ;LCD_send_command@D3 stored from wreg
 10156  002E30  6E45               	movwf	LCD_send_command@D3,c
 10157                           
 10158                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
 10159  002E32  0100               	movlb	0	; () banked
 10160  002E34  B172               	btfsc	LCD_send_command@D0& (0+255),0,b
 10161  002E36  D002               	bra	u4805
 10162  002E38  988A               	bcf	3978,4,c	;volatile
 10163  002E3A  D001               	bra	u4806
 10164  002E3C                     u4805:
 10165  002E3C  888A               	bsf	3978,4,c	;volatile
 10166  002E3E                     u4806:
 10167                           
 10168                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 10169  002E3E  0100               	movlb	0	; () banked
 10170  002E40  B171               	btfsc	LCD_send_command@D1& (0+255),0,b
 10171  002E42  D002               	bra	u4815
 10172  002E44  9A8A               	bcf	3978,5,c	;volatile
 10173  002E46  D001               	bra	u4816
 10174  002E48                     u4815:
 10175  002E48  8A8A               	bsf	3978,5,c	;volatile
 10176  002E4A                     u4816:
 10177                           
 10178                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 10179  002E4A  0100               	movlb	0	; () banked
 10180  002E4C  B170               	btfsc	LCD_send_command@D2& (0+255),0,b
 10181  002E4E  D002               	bra	u4825
 10182  002E50  9C8A               	bcf	3978,6,c	;volatile
 10183  002E52  D001               	bra	u4826
 10184  002E54                     u4825:
 10185  002E54  8C8A               	bsf	3978,6,c	;volatile
 10186  002E56                     u4826:
 10187                           
 10188                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 10189  002E56  B045               	btfsc	LCD_send_command@D3,0,c
 10190  002E58  D002               	bra	u4835
 10191  002E5A  9E8A               	bcf	3978,7,c	;volatile
 10192  002E5C  D001               	bra	u4836
 10193  002E5E                     u4835:
 10194  002E5E  8E8A               	bsf	3978,7,c	;volatile
 10195  002E60                     u4836:
 10196                           
 10197                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10198  002E60  EC05  F018         	call	_LCD_enable_pulse	;wreg free
 10199  002E64  0012               	return		;funcret
 10200  002E66                     __end_of_LCD_send_command:
 10201                           	opt stack 0
 10202                           tblptru	equ	0xFF8
 10203                           tblptrh	equ	0xFF7
 10204                           tblptrl	equ	0xFF6
 10205                           tablat	equ	0xFF5
 10206                           prodh	equ	0xFF4
 10207                           prodl	equ	0xFF3
 10208                           intcon	equ	0xFF2
 10209                           postinc0	equ	0xFEE
 10210                           wreg	equ	0xFE8
 10211                           indf1	equ	0xFE7
 10212                           postinc1	equ	0xFE6
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           fsr2h	equ	0xFDA
 10218                           fsr2l	equ	0xFD9
 10219                           status	equ	0xFD8
 10220                           
 10221 ;; *************** function _LCD_enable_pulse *****************
 10222 ;; Defined at:
 10223 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;		None
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10237 ;;      Params:         0       0       0       0
 10238 ;;      Locals:         0       0       0       0
 10239 ;;      Temps:          0       0       0       0
 10240 ;;      Totals:         0       0       0       0
 10241 ;;Total ram usage:        0 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    6
 10244 ;; This function calls:
 10245 ;;		_delay_ms
 10246 ;; This function is called by:
 10247 ;;		_LCD_send_command
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text37
 10252  00300A                     __ptext37:
 10253                           	opt stack 0
 10254  00300A                     _LCD_enable_pulse:
 10255                           	opt stack 20
 10256                           
 10257                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 10258                           
 10259                           ;incstack = 0
 10260  00300A  868A               	bsf	3978,3,c	;volatile
 10261                           
 10262                           ;src\LCD_44780.c: 52: delay_ms (1);
 10263  00300C  0E00               	movlw	0
 10264  00300E  6E44               	movwf	delay_ms@value_ms+1,c
 10265  003010  0E01               	movlw	1
 10266  003012  6E43               	movwf	delay_ms@value_ms,c
 10267  003014  ECFC  F016         	call	_delay_ms	;wreg free
 10268                           
 10269                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 10270  003018  968A               	bcf	3978,3,c	;volatile
 10271                           
 10272                           ;src\LCD_44780.c: 54: delay_ms (1);
 10273  00301A  0E00               	movlw	0
 10274  00301C  6E44               	movwf	delay_ms@value_ms+1,c
 10275  00301E  0E01               	movlw	1
 10276  003020  6E43               	movwf	delay_ms@value_ms,c
 10277  003022  ECFC  F016         	call	_delay_ms	;wreg free
 10278  003026  0012               	return		;funcret
 10279  003028                     __end_of_LCD_enable_pulse:
 10280                           	opt stack 0
 10281                           tblptru	equ	0xFF8
 10282                           tblptrh	equ	0xFF7
 10283                           tblptrl	equ	0xFF6
 10284                           tablat	equ	0xFF5
 10285                           prodh	equ	0xFF4
 10286                           prodl	equ	0xFF3
 10287                           intcon	equ	0xFF2
 10288                           postinc0	equ	0xFEE
 10289                           wreg	equ	0xFE8
 10290                           indf1	equ	0xFE7
 10291                           postinc1	equ	0xFE6
 10292                           fsr1h	equ	0xFE2
 10293                           fsr1l	equ	0xFE1
 10294                           indf2	equ	0xFDF
 10295                           postinc2	equ	0xFDE
 10296                           fsr2h	equ	0xFDA
 10297                           fsr2l	equ	0xFD9
 10298                           status	equ	0xFD8
 10299                           
 10300 ;; *************** function _delay_ms *****************
 10301 ;; Defined at:
 10302 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  value_ms        2   29[COMRAM] unsigned int 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;		None               void
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10316 ;;      Params:         2       0       0       0
 10317 ;;      Locals:         0       0       0       0
 10318 ;;      Temps:          0       0       0       0
 10319 ;;      Totals:         2       0       0       0
 10320 ;;Total ram usage:        2 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:    5
 10323 ;; This function calls:
 10324 ;;		___wmul
 10325 ;; This function is called by:
 10326 ;;		_delay_s
 10327 ;;		_LCD_enable_pulse
 10328 ;;		_LCD_initialize
 10329 ;;		_main
 10330 ;;		_board_initialization
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text38
 10335  002DF8                     __ptext38:
 10336                           	opt stack 0
 10337  002DF8                     _delay_ms:
 10338                           	opt stack 25
 10339                           
 10340                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10341                           
 10342                           ;incstack = 0
 10343  002DF8  C047  F03D         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10344  002DFC  6A3E               	clrf	___wmul@multiplier+1,c
 10345  002DFE  C043  F03F         	movff	delay_ms@value_ms,___wmul@multiplicand
 10346  002E02  C044  F040         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10347  002E06  ECE3  F017         	call	___wmul	;wreg free
 10348  002E0A  C03D  F0EA         	movff	?___wmul,_clock_counter_reference	;volatile
 10349  002E0E  C03E  F0EB         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10350                           
 10351                           ;src\delay.c: 75: while (clock_counter_reference) {
 10352  002E12  D007               	goto	l97
 10353  002E14                     l4441:
 10354                           
 10355                           ;src\delay.c: 85: _delay(240);
 10356  002E14  0E50               	movlw	80
 10357  002E16                     u6707:
 10358  002E16  2EE8               	decfsz	wreg,f,c
 10359  002E18  D7FE               	goto	u6707
 10360                           
 10361                           ;src\delay.c: 88: clock_counter_reference--;
 10362  002E1A  0100               	movlb	0	; () banked
 10363  002E1C  07EA               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 10364  002E1E  A0D8               	btfss	status,0,c
 10365  002E20  07EB               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 10366  002E22                     l97:
 10367  002E22  0100               	movlb	0	; () banked
 10368  002E24  51EA               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 10369  002E26  0100               	movlb	0	; () banked
 10370  002E28  11EB               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 10371  002E2A  B4D8               	btfsc	status,2,c
 10372  002E2C  0012               	return	
 10373  002E2E  D7F2               	goto	l4441
 10374  002E30                     __end_of_delay_ms:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           postinc0	equ	0xFEE
 10384                           wreg	equ	0xFE8
 10385                           indf1	equ	0xFE7
 10386                           postinc1	equ	0xFE6
 10387                           fsr1h	equ	0xFE2
 10388                           fsr1l	equ	0xFE1
 10389                           indf2	equ	0xFDF
 10390                           postinc2	equ	0xFDE
 10391                           fsr2h	equ	0xFDA
 10392                           fsr2l	equ	0xFD9
 10393                           status	equ	0xFD8
 10394                           
 10395 ;; *************** function ___wmul *****************
 10396 ;; Defined at:
 10397 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  multiplier      2   23[COMRAM] unsigned int 
 10400 ;;  multiplicand    2   25[COMRAM] unsigned int 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  product         2   27[COMRAM] unsigned int 
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  2   23[COMRAM] unsigned int 
 10405 ;; Registers used:
 10406 ;;		wreg, status,2, status,0, prodl, prodh
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10412 ;;      Params:         4       0       0       0
 10413 ;;      Locals:         2       0       0       0
 10414 ;;      Temps:          0       0       0       0
 10415 ;;      Totals:         6       0       0       0
 10416 ;;Total ram usage:        6 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:    4
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_delay_ms
 10423 ;;		_sprintf
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text39
 10428  002FC6                     __ptext39:
 10429                           	opt stack 0
 10430  002FC6                     ___wmul:
 10431                           	opt stack 25
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;incstack = 0
 10435  002FC6  503D               	movf	___wmul@multiplier,w,c
 10436  002FC8  023F               	mulwf	___wmul@multiplicand,c
 10437  002FCA  CFF3 F041          	movff	prodl,___wmul@product
 10438  002FCE  CFF4 F042          	movff	prodh,___wmul@product+1
 10439  002FD2  503D               	movf	___wmul@multiplier,w,c
 10440  002FD4  0240               	mulwf	___wmul@multiplicand+1,c
 10441  002FD6  50F3               	movf	prodl,w,c
 10442  002FD8  2642               	addwf	___wmul@product+1,f,c
 10443  002FDA  503E               	movf	___wmul@multiplier+1,w,c
 10444  002FDC  023F               	mulwf	___wmul@multiplicand,c
 10445  002FDE  50F3               	movf	prodl,w,c
 10446  002FE0  2642               	addwf	___wmul@product+1,f,c
 10447  002FE2  C041  F03D         	movff	___wmul@product,?___wmul
 10448  002FE6  C042  F03E         	movff	___wmul@product+1,?___wmul+1
 10449  002FEA  0012               	return	
 10450  002FEC                     __end_of___wmul:
 10451                           	opt stack 0
 10452                           tblptru	equ	0xFF8
 10453                           tblptrh	equ	0xFF7
 10454                           tblptrl	equ	0xFF6
 10455                           tablat	equ	0xFF5
 10456                           prodh	equ	0xFF4
 10457                           prodl	equ	0xFF3
 10458                           intcon	equ	0xFF2
 10459                           postinc0	equ	0xFEE
 10460                           wreg	equ	0xFE8
 10461                           indf1	equ	0xFE7
 10462                           postinc1	equ	0xFE6
 10463                           fsr1h	equ	0xFE2
 10464                           fsr1l	equ	0xFE1
 10465                           indf2	equ	0xFDF
 10466                           postinc2	equ	0xFDE
 10467                           fsr2h	equ	0xFDA
 10468                           fsr2l	equ	0xFD9
 10469                           status	equ	0xFD8
 10470                           
 10471 ;; *************** function _Joystick_Polling *****************
 10472 ;; Defined at:
 10473 ;;		line 248 in file "telecomando.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;		None               void
 10480 ;; Registers used:
 10481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10487 ;;      Params:         0       0       0       0
 10488 ;;      Locals:         0       0       0       0
 10489 ;;      Temps:          1       0       0       0
 10490 ;;      Totals:         1       0       0       0
 10491 ;;Total ram usage:        1 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    4
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_main
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text40
 10502  002D6A                     __ptext40:
 10503                           	opt stack 0
 10504  002D6A                     _Joystick_Polling:
 10505                           	opt stack 26
 10506                           
 10507                           ;telecomando.c: 249: for (i = 0; i < 2; i++) {
 10508                           
 10509                           ;incstack = 0
 10510  002D6A  0E00               	movlw	0
 10511  002D6C  6E16               	movwf	_i,c	;volatile
 10512  002D6E                     l4143:
 10513  002D6E  0E01               	movlw	1
 10514  002D70  6416               	cpfsgt	_i,c	;volatile
 10515  002D72  D001               	goto	l281
 10516  002D74  0012               	return	
 10517  002D76                     l281:
 10518                           
 10519                           ;telecomando.c: 250: ADCON0bits.GO = 1;
 10520  002D76  82C2               	bsf	4034,1,c	;volatile
 10521  002D78                     l283:
 10522  002D78  B2C2               	btfsc	4034,1,c	;volatile
 10523  002D7A  D7FE               	goto	l283
 10524                           
 10525                           ;telecomando.c: 252: JoystickValues[i] = ADRESH - 128;
 10526  002D7C  5016               	movf	_i,w,c	;volatile
 10527  002D7E  0D01               	mullw	1
 10528  002D80  0E24               	movlw	low _JoystickValues
 10529  002D82  24F3               	addwf	prodl,w,c
 10530  002D84  6ED9               	movwf	fsr2l,c
 10531  002D86  0E00               	movlw	high _JoystickValues
 10532  002D88  20F4               	addwfc	prodh,w,c
 10533  002D8A  6EDA               	movwf	fsr2h,c
 10534  002D8C  50C4               	movf	4036,w,c	;volatile
 10535  002D8E  0F80               	addlw	128
 10536  002D90  6EDF               	movwf	indf2,c
 10537                           
 10538                           ;telecomando.c: 253: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10539  002D92  A4C2               	btfss	4034,2,c	;volatile
 10540  002D94  D002               	goto	u4440
 10541  002D96  0E01               	movlw	1
 10542  002D98  D001               	goto	u4446
 10543  002D9A                     u4440:
 10544  002D9A  0E00               	movlw	0
 10545  002D9C                     u4446:
 10546  002D9C  0AFF               	xorlw	255
 10547  002D9E  6E3D               	movwf	??_Joystick_Polling& (0+255),c
 10548  002DA0  463D               	rlncf	??_Joystick_Polling,f,c
 10549  002DA2  463D               	rlncf	??_Joystick_Polling,f,c
 10550  002DA4  50C2               	movf	4034,w,c	;volatile
 10551  002DA6  183D               	xorwf	??_Joystick_Polling,w,c
 10552  002DA8  0BFB               	andlw	-5
 10553  002DAA  183D               	xorwf	??_Joystick_Polling,w,c
 10554  002DAC  6EC2               	movwf	4034,c	;volatile
 10555  002DAE  2A16               	incf	_i,f,c	;volatile
 10556  002DB0  D7DE               	goto	l4143
 10557  002DB2                     __end_of_Joystick_Polling:
 10558                           	opt stack 0
 10559                           tblptru	equ	0xFF8
 10560                           tblptrh	equ	0xFF7
 10561                           tblptrl	equ	0xFF6
 10562                           tablat	equ	0xFF5
 10563                           prodh	equ	0xFF4
 10564                           prodl	equ	0xFF3
 10565                           intcon	equ	0xFF2
 10566                           postinc0	equ	0xFEE
 10567                           wreg	equ	0xFE8
 10568                           indf1	equ	0xFE7
 10569                           postinc1	equ	0xFE6
 10570                           fsr1h	equ	0xFE2
 10571                           fsr1l	equ	0xFE1
 10572                           indf2	equ	0xFDF
 10573                           postinc2	equ	0xFDE
 10574                           fsr2h	equ	0xFDA
 10575                           fsr2l	equ	0xFD9
 10576                           status	equ	0xFD8
 10577                           
 10578 ;; *************** function _ISR_bassa *****************
 10579 ;; Defined at:
 10580 ;;		line 115 in file "telecomando.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;		None
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;		None               void
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10594 ;;      Params:         0       0       0       0
 10595 ;;      Locals:         0       0       0       0
 10596 ;;      Temps:         17       0       0       0
 10597 ;;      Totals:        17       0       0       0
 10598 ;;Total ram usage:       17 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    3
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		Interrupt level 1
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	intcodelo
 10609  000018                     __pintcodelo:
 10610                           	opt stack 0
 10611  000018                     _ISR_bassa:
 10612                           	opt stack 20
 10613                           
 10614                           ;incstack = 0
 10615  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10616  00001A  CFD8 F026          	movff	status,??_ISR_bassa
 10617  00001E  CFE8 F027          	movff	wreg,??_ISR_bassa+1
 10618  000022  CFE0 F028          	movff	bsr,??_ISR_bassa+2
 10619  000026  CFFA F029          	movff	pclath,??_ISR_bassa+3
 10620  00002A  CFFB F02A          	movff	pclatu,??_ISR_bassa+4
 10621  00002E  CFE9 F02B          	movff	fsr0l,??_ISR_bassa+5
 10622  000032  CFEA F02C          	movff	fsr0h,??_ISR_bassa+6
 10623  000036  CFE1 F02D          	movff	fsr1l,??_ISR_bassa+7
 10624  00003A  CFE2 F02E          	movff	fsr1h,??_ISR_bassa+8
 10625  00003E  CFD9 F02F          	movff	fsr2l,??_ISR_bassa+9
 10626  000042  CFDA F030          	movff	fsr2h,??_ISR_bassa+10
 10627  000046  CFF3 F031          	movff	prodl,??_ISR_bassa+11
 10628  00004A  CFF4 F032          	movff	prodh,??_ISR_bassa+12
 10629  00004E  CFF6 F033          	movff	tblptrl,??_ISR_bassa+13
 10630  000052  CFF7 F034          	movff	tblptrh,??_ISR_bassa+14
 10631  000056  CFF8 F035          	movff	tblptru,??_ISR_bassa+15
 10632  00005A  CFF5 F036          	movff	tablat,??_ISR_bassa+16
 10633                           
 10634                           ;telecomando.c: 116: if (PIR2bits.TMR3IF) {
 10635  00005E  A2A1               	btfss	4001,1,c	;volatile
 10636  000060  D00B               	goto	i1l248
 10637                           
 10638                           ;telecomando.c: 117: time_counter++;
 10639  000062  0E01               	movlw	1
 10640  000064  2609               	addwf	_time_counter,f,c	;volatile
 10641  000066  0E00               	movlw	0
 10642  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10643  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10644  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10645                           
 10646                           ;telecomando.c: 118: TMR3H = 0x63;
 10647  00006E  0E63               	movlw	99
 10648  000070  6EB3               	movwf	4019,c	;volatile
 10649                           
 10650                           ;telecomando.c: 119: TMR3L = 0xC0;
 10651  000072  0EC0               	movlw	192
 10652  000074  6EB2               	movwf	4018,c	;volatile
 10653                           
 10654                           ;telecomando.c: 120: PIR2bits.TMR3IF = 0;
 10655  000076  92A1               	bcf	4001,1,c	;volatile
 10656  000078                     i1l248:
 10657  000078  C036  FFF5         	movff	??_ISR_bassa+16,tablat
 10658  00007C  C035  FFF8         	movff	??_ISR_bassa+15,tblptru
 10659  000080  C034  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10660  000084  C033  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10661  000088  C032  FFF4         	movff	??_ISR_bassa+12,prodh
 10662  00008C  C031  FFF3         	movff	??_ISR_bassa+11,prodl
 10663  000090  C030  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10664  000094  C02F  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10665  000098  C02E  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10666  00009C  C02D  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10667  0000A0  C02C  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10668  0000A4  C02B  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10669  0000A8  C02A  FFFB         	movff	??_ISR_bassa+4,pclatu
 10670  0000AC  C029  FFFA         	movff	??_ISR_bassa+3,pclath
 10671  0000B0  C028  FFE0         	movff	??_ISR_bassa+2,bsr
 10672  0000B4  C027  FFE8         	movff	??_ISR_bassa+1,wreg
 10673  0000B8  C026  FFD8         	movff	??_ISR_bassa,status
 10674  0000BC  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10675  0000BE  0010               	retfie	
 10676  0000C0                     __end_of_ISR_bassa:
 10677                           	opt stack 0
 10678                           pclatu	equ	0xFFB
 10679                           pclath	equ	0xFFA
 10680                           tblptru	equ	0xFF8
 10681                           tblptrh	equ	0xFF7
 10682                           tblptrl	equ	0xFF6
 10683                           tablat	equ	0xFF5
 10684                           prodh	equ	0xFF4
 10685                           prodl	equ	0xFF3
 10686                           intcon	equ	0xFF2
 10687                           postinc0	equ	0xFEE
 10688                           fsr0h	equ	0xFEA
 10689                           fsr0l	equ	0xFE9
 10690                           wreg	equ	0xFE8
 10691                           indf1	equ	0xFE7
 10692                           postinc1	equ	0xFE6
 10693                           fsr1h	equ	0xFE2
 10694                           fsr1l	equ	0xFE1
 10695                           bsr	equ	0xFE0
 10696                           indf2	equ	0xFDF
 10697                           postinc2	equ	0xFDE
 10698                           fsr2h	equ	0xFDA
 10699                           fsr2l	equ	0xFD9
 10700                           status	equ	0xFD8
 10701                           
 10702 ;; *************** function _ISR_alta *****************
 10703 ;; Defined at:
 10704 ;;		line 97 in file "telecomando.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;		None               void
 10711 ;; Registers used:
 10712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10718 ;;      Params:         0       0       0       0
 10719 ;;      Locals:         0       0       0       0
 10720 ;;      Temps:          0      16       0       0
 10721 ;;      Totals:         0      16       0       0
 10722 ;;Total ram usage:       16 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    2
 10725 ;; This function calls:
 10726 ;;		_getsUSART
 10727 ;; This function is called by:
 10728 ;;		Interrupt level 2
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	intcode
 10733  000008                     __pintcode:
 10734                           	opt stack 0
 10735  000008                     _ISR_alta:
 10736                           	opt stack 20
 10737                           
 10738                           ;incstack = 0
 10739  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10740  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10741  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10742  000012  ED06  F014         	call	int_func,f	;refresh shadow registers
 10743                           pclatu	equ	0xFFB
 10744                           pclath	equ	0xFFA
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           postinc0	equ	0xFEE
 10753                           fsr0h	equ	0xFEA
 10754                           fsr0l	equ	0xFE9
 10755                           wreg	equ	0xFE8
 10756                           indf1	equ	0xFE7
 10757                           postinc1	equ	0xFE6
 10758                           fsr1h	equ	0xFE2
 10759                           fsr1l	equ	0xFE1
 10760                           bsr	equ	0xFE0
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           fsr2h	equ	0xFDA
 10764                           fsr2l	equ	0xFD9
 10765                           status	equ	0xFD8
 10766                           
 10767                           	psect	intcode_body
 10768  00280C                     __pintcode_body:
 10769                           	opt stack 20
 10770  00280C                     int_func:
 10771                           	opt stack 20
 10772  00280C  0006               	pop		; remove dummy address from shadow register refresh
 10773  00280E  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10774  002812  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10775  002816  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10776  00281A  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10777  00281E  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10778  002822  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10779  002826  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10780  00282A  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10781  00282E  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10782  002832  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10783  002836  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10784  00283A  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10785                           
 10786                           ;telecomando.c: 98: if (PIR1bits.RCIF == 1) {
 10787  00283E  AA9E               	btfss	3998,5,c	;volatile
 10788  002840  D038               	goto	i2l244
 10789                           
 10790                           ;telecomando.c: 99: getsUSART((char*) USART_Rx, 7);
 10791  002842  0EDA               	movlw	low _USART_Rx
 10792  002844  6E38               	movwf	getsUSART@buffer,c
 10793  002846  0E00               	movlw	high _USART_Rx
 10794  002848  6E39               	movwf	getsUSART@buffer+1,c
 10795  00284A  0E07               	movlw	7
 10796  00284C  6E3A               	movwf	getsUSART@len,c
 10797  00284E  EC92  F017         	call	_getsUSART	;wreg free
 10798                           
 10799                           ;telecomando.c: 100: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10800  002852  0EAA               	movlw	170
 10801  002854  0100               	movlb	0	; () banked
 10802  002856  19DA               	xorwf	_USART_Rx& (0+255),w,b
 10803  002858  A4D8               	btfss	status,2,c
 10804  00285A  D02A               	goto	i2l5723
 10805                           
 10806                           ; BSR set to: 0
 10807  00285C  0EAA               	movlw	170
 10808  00285E  0100               	movlb	0	; () banked
 10809  002860  19E0               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10810  002862  A4D8               	btfss	status,2,c
 10811  002864  D025               	goto	i2l5723
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;telecomando.c: 101: actual_dir = USART_Rx[1];
 10815  002866  0100               	movlb	0	; () banked
 10816  002868  A1DB               	btfss	(_USART_Rx+1)& (0+255),0,b
 10817  00286A  D002               	goto	i2u657_40
 10818  00286C  8046               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10819  00286E  D001               	goto	i2u658_45
 10820  002870                     i2u657_40:
 10821  002870  9046               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10822  002872                     i2u658_45:
 10823                           
 10824                           ;telecomando.c: 102: actual_speed_pk1 = USART_Rx[2];
 10825  002872  C0DC  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10826                           
 10827                           ;telecomando.c: 103: if (actual_speed_pk1 == 0b10000000) {
 10828  002876  0E80               	movlw	128
 10829  002878  1813               	xorwf	_actual_speed_pk1,w,c	;volatile
 10830  00287A  A4D8               	btfss	status,2,c
 10831  00287C  D002               	goto	i2l5715
 10832                           
 10833                           ;telecomando.c: 104: actual_speed_pk1 = 0x00;
 10834  00287E  0E00               	movlw	0
 10835  002880  6E13               	movwf	_actual_speed_pk1,c	;volatile
 10836  002882                     i2l5715:
 10837                           
 10838                           ;telecomando.c: 105: }
 10839                           ;telecomando.c: 106: actual_speed_pk0 = USART_Rx[3];
 10840  002882  C0DD  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10841                           
 10842                           ;telecomando.c: 107: ECU_Check = USART_Rx[4];
 10843  002886  C0DE  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10844                           
 10845                           ;telecomando.c: 108: Battery_Check = USART_Rx[5];
 10846  00288A  C0DF  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10847                           
 10848                           ;telecomando.c: 109: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
 10849  00288E  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10850  002890  C013  F060         	movff	_actual_speed_pk1,??_ISR_alta	;volatile
 10851  002894  0100               	movlb	0	; () banked
 10852  002896  6B61               	clrf	(??_ISR_alta+1)& (0+255),b
 10853  002898  C060  F061         	movff	??_ISR_alta,??_ISR_alta+1
 10854  00289C  0100               	movlb	0	; () banked
 10855  00289E  6B60               	clrf	??_ISR_alta& (0+255),b
 10856  0028A0  0100               	movlb	0	; () banked
 10857  0028A2  1160               	iorwf	??_ISR_alta& (0+255),w,b
 10858  0028A4  0100               	movlb	0	; () banked
 10859  0028A6  6FD8               	movwf	_actual_speed& (0+255),b	;volatile
 10860  0028A8  0100               	movlb	0	; () banked
 10861  0028AA  5161               	movf	(??_ISR_alta+1)& (0+255),w,b
 10862  0028AC  0100               	movlb	0	; () banked
 10863  0028AE  6FD9               	movwf	(_actual_speed+1)& (0+255),b	;volatile
 10864  0028B0                     i2l5723:
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;telecomando.c: 110: }
 10868                           ;telecomando.c: 111: PIR1bits.RCIF = 0;
 10869  0028B0  9A9E               	bcf	3998,5,c	;volatile
 10870  0028B2                     i2l244:
 10871  0028B2  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10872  0028B6  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10873  0028BA  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10874  0028BE  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10875  0028C2  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10876  0028C6  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10877  0028CA  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10878  0028CE  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10879  0028D2  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10880  0028D6  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10881  0028DA  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10882  0028DE  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10883  0028E2  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10884  0028E6  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10885  0028EA  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10886  0028EC  0011               	retfie		f
 10887  0028EE                     __end_of_ISR_alta:
 10888                           	opt stack 0
 10889                           pclatu	equ	0xFFB
 10890                           pclath	equ	0xFFA
 10891                           tblptru	equ	0xFF8
 10892                           tblptrh	equ	0xFF7
 10893                           tblptrl	equ	0xFF6
 10894                           tablat	equ	0xFF5
 10895                           prodh	equ	0xFF4
 10896                           prodl	equ	0xFF3
 10897                           intcon	equ	0xFF2
 10898                           postinc0	equ	0xFEE
 10899                           fsr0h	equ	0xFEA
 10900                           fsr0l	equ	0xFE9
 10901                           wreg	equ	0xFE8
 10902                           indf1	equ	0xFE7
 10903                           postinc1	equ	0xFE6
 10904                           fsr1h	equ	0xFE2
 10905                           fsr1l	equ	0xFE1
 10906                           bsr	equ	0xFE0
 10907                           indf2	equ	0xFDF
 10908                           postinc2	equ	0xFDE
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8
 10912                           
 10913 ;; *************** function _getsUSART *****************
 10914 ;; Defined at:
 10915 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10918 ;;		 -> USART_Rx(8), 
 10919 ;;  len             1   20[COMRAM] unsigned char 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  i               1   22[COMRAM] unsigned char 
 10922 ;;  data            1   21[COMRAM] unsigned char 
 10923 ;; Return value:  Size  Location     Type
 10924 ;;		None               void
 10925 ;; Registers used:
 10926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10932 ;;      Params:         3       0       0       0
 10933 ;;      Locals:         2       0       0       0
 10934 ;;      Temps:          0       0       0       0
 10935 ;;      Totals:         5       0       0       0
 10936 ;;Total ram usage:        5 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    1
 10939 ;; This function calls:
 10940 ;;		_ReadUSART
 10941 ;; This function is called by:
 10942 ;;		_ISR_alta
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text43
 10947  002F24                     __ptext43:
 10948                           	opt stack 0
 10949  002F24                     _getsUSART:
 10950                           	opt stack 20
 10951                           
 10952                           ;incstack = 0
 10953  002F24  0E00               	movlw	0
 10954  002F26  6E3C               	movwf	getsUSART@i,c
 10955  002F28  D00E               	goto	i2l3989
 10956  002F2A                     i2l411:
 10957  002F2A  AA9E               	btfss	3998,5,c	;volatile
 10958  002F2C  D7FE               	goto	i2l411
 10959  002F2E  EC14  F018         	call	_ReadUSART	;wreg free
 10960  002F32  6E3B               	movwf	getsUSART@data,c
 10961  002F34  C038  FFD9         	movff	getsUSART@buffer,fsr2l
 10962  002F38  C039  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10963  002F3C  C03B  FFDF         	movff	getsUSART@data,indf2
 10964  002F40  4A38               	infsnz	getsUSART@buffer,f,c
 10965  002F42  2A39               	incf	getsUSART@buffer+1,f,c
 10966  002F44  2A3C               	incf	getsUSART@i,f,c
 10967  002F46                     i2l3989:
 10968  002F46  503A               	movf	getsUSART@len,w,c
 10969  002F48  5C3C               	subwf	getsUSART@i,w,c
 10970  002F4A  B0D8               	btfsc	status,0,c
 10971  002F4C  0012               	return	
 10972  002F4E  D7ED               	goto	i2l411
 10973  002F50                     __end_of_getsUSART:
 10974                           	opt stack 0
 10975                           pclatu	equ	0xFFB
 10976                           pclath	equ	0xFFA
 10977                           tblptru	equ	0xFF8
 10978                           tblptrh	equ	0xFF7
 10979                           tblptrl	equ	0xFF6
 10980                           tablat	equ	0xFF5
 10981                           prodh	equ	0xFF4
 10982                           prodl	equ	0xFF3
 10983                           intcon	equ	0xFF2
 10984                           postinc0	equ	0xFEE
 10985                           fsr0h	equ	0xFEA
 10986                           fsr0l	equ	0xFE9
 10987                           wreg	equ	0xFE8
 10988                           indf1	equ	0xFE7
 10989                           postinc1	equ	0xFE6
 10990                           fsr1h	equ	0xFE2
 10991                           fsr1l	equ	0xFE1
 10992                           bsr	equ	0xFE0
 10993                           indf2	equ	0xFDF
 10994                           postinc2	equ	0xFDE
 10995                           fsr2h	equ	0xFDA
 10996                           fsr2l	equ	0xFD9
 10997                           status	equ	0xFD8
 10998                           
 10999 ;; *************** function _ReadUSART *****************
 11000 ;; Defined at:
 11001 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;		None
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  data            1   17[COMRAM] unsigned char 
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      unsigned char 
 11008 ;; Registers used:
 11009 ;;		wreg, status,2, status,0
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11015 ;;      Params:         0       0       0       0
 11016 ;;      Locals:         1       0       0       0
 11017 ;;      Temps:          0       0       0       0
 11018 ;;      Totals:         1       0       0       0
 11019 ;;Total ram usage:        1 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_getsUSART
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text44
 11029  003028                     __ptext44:
 11030                           	opt stack 0
 11031  003028                     _ReadUSART:
 11032                           	opt stack 20
 11033                           
 11034                           ;incstack = 0
 11035  003028  0EF2               	movlw	242
 11036  00302A  1611               	andwf	_USART_Status,f,c
 11037  00302C  ACAB               	btfss	4011,6,c	;volatile
 11038  00302E  D003               	goto	i2l469
 11039  003030  9011               	bcf	_USART_Status,0,c
 11040  003032  B0AB               	btfsc	4011,0,c	;volatile
 11041  003034  8011               	bsf	_USART_Status,0,c
 11042  003036                     i2l469:
 11043  003036  B4AB               	btfsc	4011,2,c	;volatile
 11044  003038  8411               	bsf	_USART_Status,2,c
 11045  00303A  B2AB               	btfsc	4011,1,c	;volatile
 11046  00303C  8611               	bsf	_USART_Status,3,c
 11047  00303E  CFAE F037          	movff	4014,ReadUSART@data	;volatile
 11048  003042  5037               	movf	ReadUSART@data,w,c
 11049  003044  0012               	return	
 11050  003046                     __end_of_ReadUSART:
 11051                           	opt stack 0
 11052                           pclatu	equ	0xFFB
 11053                           pclath	equ	0xFFA
 11054                           tblptru	equ	0xFF8
 11055                           tblptrh	equ	0xFF7
 11056                           tblptrl	equ	0xFF6
 11057                           tablat	equ	0xFF5
 11058                           prodh	equ	0xFF4
 11059                           prodl	equ	0xFF3
 11060                           intcon	equ	0xFF2
 11061                           postinc0	equ	0xFEE
 11062                           fsr0h	equ	0xFEA
 11063                           fsr0l	equ	0xFE9
 11064                           wreg	equ	0xFE8
 11065                           indf1	equ	0xFE7
 11066                           postinc1	equ	0xFE6
 11067                           fsr1h	equ	0xFE2
 11068                           fsr1l	equ	0xFE1
 11069                           bsr	equ	0xFE0
 11070                           indf2	equ	0xFDF
 11071                           postinc2	equ	0xFDE
 11072                           fsr2h	equ	0xFDA
 11073                           fsr2l	equ	0xFD9
 11074                           status	equ	0xFD8
 11075                           pclatu	equ	0xFFB
 11076                           pclath	equ	0xFFA
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           intcon	equ	0xFF2
 11084                           postinc0	equ	0xFEE
 11085                           fsr0h	equ	0xFEA
 11086                           fsr0l	equ	0xFE9
 11087                           wreg	equ	0xFE8
 11088                           indf1	equ	0xFE7
 11089                           postinc1	equ	0xFE6
 11090                           fsr1h	equ	0xFE2
 11091                           fsr1l	equ	0xFE1
 11092                           bsr	equ	0xFE0
 11093                           indf2	equ	0xFDF
 11094                           postinc2	equ	0xFDE
 11095                           fsr2h	equ	0xFDA
 11096                           fsr2l	equ	0xFD9
 11097                           status	equ	0xFD8
 11098                           
 11099                           	psect	rparam
 11100  0000                     pclatu	equ	0xFFB
 11101                           pclath	equ	0xFFA
 11102                           tblptru	equ	0xFF8
 11103                           tblptrh	equ	0xFF7
 11104                           tblptrl	equ	0xFF6
 11105                           tablat	equ	0xFF5
 11106                           prodh	equ	0xFF4
 11107                           prodl	equ	0xFF3
 11108                           intcon	equ	0xFF2
 11109                           postinc0	equ	0xFEE
 11110                           fsr0h	equ	0xFEA
 11111                           fsr0l	equ	0xFE9
 11112                           wreg	equ	0xFE8
 11113                           indf1	equ	0xFE7
 11114                           postinc1	equ	0xFE6
 11115                           fsr1h	equ	0xFE2
 11116                           fsr1l	equ	0xFE1
 11117                           bsr	equ	0xFE0
 11118                           indf2	equ	0xFDF
 11119                           postinc2	equ	0xFDE
 11120                           fsr2h	equ	0xFDA
 11121                           fsr2l	equ	0xFD9
 11122                           status	equ	0xFD8
 11123                           
 11124                           	psect	temp
 11125  000048                     btemp:
 11126                           	opt stack 0
 11127  000048                     	ds	1
 11128  0000                     int$flags	set	btemp
 11129                           pclatu	equ	0xFFB
 11130                           pclath	equ	0xFFA
 11131                           tblptru	equ	0xFF8
 11132                           tblptrh	equ	0xFF7
 11133                           tblptrl	equ	0xFF6
 11134                           tablat	equ	0xFF5
 11135                           prodh	equ	0xFF4
 11136                           prodl	equ	0xFF3
 11137                           intcon	equ	0xFF2
 11138                           postinc0	equ	0xFEE
 11139                           fsr0h	equ	0xFEA
 11140                           fsr0l	equ	0xFE9
 11141                           wreg	equ	0xFE8
 11142                           indf1	equ	0xFE7
 11143                           postinc1	equ	0xFE6
 11144                           fsr1h	equ	0xFE2
 11145                           fsr1l	equ	0xFE1
 11146                           bsr	equ	0xFE0
 11147                           indf2	equ	0xFDF
 11148                           postinc2	equ	0xFDE
 11149                           fsr2h	equ	0xFDA
 11150                           fsr2l	equ	0xFD9
 11151                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         89
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      71
    BANK0           160     98     140
    BANK1           256     41      53
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Rx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _sprintf->___fltol
    _sprintf->___llmod
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  177549
                                             33 BANK1      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   60666
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1563
                                             16 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             23 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28729
                                             21 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9150
                                             19 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           4     4      0     310
                                             26 COMRAM     4     4      0
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             24 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   80228
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0      2     2      0
                                              0 BANK1     33    25      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             23 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             23 COMRAM     8     0      8
                                             16 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             23 COMRAM     8     0      8
                                             16 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             23 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             23 COMRAM     8     0      8
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             30 COMRAM     2     2      0
                                             64 BANK0      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             23 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             23 COMRAM     8     0      8
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             23 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9750
                                             24 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10520
                                             24 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9531
                                             19 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9042
                                             19 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9011
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9011
                                             31 COMRAM     1     1      0
                                             16 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1495
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1495
                                             29 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            16    16      0     243
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     29      35       6       20.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     62      8C       4       87.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     20      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       9        0.0%
DATA                 0      0     108      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 20 21:45:53 2016

                             _i 0016       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0026  
                            l97 2E22                    ___awdiv@sign 0075              delay_s@repeat_loop 0071  
                            bsr 000FE0             ___wmul@multiplicand 003F                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000  
                           l260 18A8                             l261 18BC                             l253 1788  
                           l281 2D76                             l283 2D78                             l443 2CA6  
                           l276 304E                             l444 2CA8                             l445 2CB2  
                           l294 27C0                             l446 2CB4                             l439 2C92  
                           l704 229E                             l456 2F7A                             l387 0680  
                           l940 2D18                             l694 241A                             l791 20CE  
                           l792 20FA                             l981 0AEE                             l982 0AE2  
                           l798 2174                             l983 0AAE                             l887 2B88  
                           l897 2C5E            ??_PWR_Button_Polling 003D                             l998 0C62  
                  getsUSART@len 003A                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 0073                             _dir 0015                             _str 0129  
                  ___awmod@sign 0042                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 008B                    ___flmul@bexp 0090                    ___flmul@sign 008A  
                  ___flmul@temp 0095                    ___flmul@prod 0091                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 0045                    __CFG_WDT$OFF 000000  
                          l1007 0CF6                            l1103 1E3A                            l1104 1E52  
                          l1074 1106                            l1067 0E6A                            l1084 1218  
                          l1076 1174                            l1096 1DDE                            l1089 1D32  
                          l4101 274E                            l4113 2784                            l4105 2756  
                          l5011 2140                            l4131 27DC                            l4115 278C  
                          l4109 2780                            l4143 2D6E                            l5007 212C  
                          l3431 306E                            l4135 27E4                            l4119 2794  
                          l5105 22D6                            l5113 2EE6                            l5033 231E  
                          l5017 215A                            l5123 2568                            l5211 1D6A  
                          l5027 22FC                            l5019 216A                            l5213 1D72  
                          l5205 1D42                            l5151 2608                            l5143 25E0  
                          l5223 1E1C                            l5215 1D82                            l5071 23E6  
                          l5055 239E                            l5047 236A                            l4441 2E14  
                          l4505 09F2                            l5153 260E                            l5225 1E2C  
                          l5217 1DC0                            l5401 03B0                            l5321 00D4  
                          l4089 2732                            l5251 263E                            l5091 21CA  
                          l5139 25CE                            l5171 2B44                            l5067 23D2  
                          l5411 0430                            l5243 2F5C                            l5253 2670  
                          l4605 0CAA                            l5157 2626                            l5149 25FA  
                          l5237 1EA4                            l5077 2400                            l5421 049A  
                          l5341 0170                            l3901 2C94                            l5255 26A2  
                          l5263 2EFA                            l5271 2FA2                            l5095 220E  
                          l4615 0CCA                            l4535 0A2E                            l4463 092C  
                          l5167 2B32                            l5191 2C2C                            l5079 2410  
                          l5407 0402                            l5351 01AC                            l5335 011E  
                          l5327 00EC                            l5247 2F6C                            l5257 26D4  
                          l4625 0CF0                            l4609 0CB6                            l4617 0CD0  
                          l4553 0AD2                            l4481 0986                            l4473 095A  
                          l5169 2B40                            l5513 08B0                            l5505 0858  
                          l5425 0512                            l5345 0180                            l5521 0900  
                          l5259 2706                            l5267 2F10                            l5275 2FB6  
                          l5099 2256                            l4643 0D80                            l4635 0D4C  
                          l4571 0B50                            l4563 0B12                            l4547 0AC2  
                          l5179 2B78                            l5195 2C50                            l5187 2C1C  
                          l4811 2A14                            l4803 29EA                            l5443 058A  
                          l5427 0518                            l5339 015A                            l4573 0B56  
                          l4581 0B72                            l4549 0AC8                            l4493 09BE  
                          l4469 0950                            l5189 2C28                            l4821 2A4A  
                          l4813 2A1A                            l4741 10F0                            l5517 08DC  
                          l5509 0880                            l5461 064E                            l5445 0592  
                          l5453 0626                            l5357 01C6                            l5349 0186  
                          l4655 0DA4                            l4647 0D8C                            l4639 0D5E  
                          l4591 0C42                            l4487 099A                            l4671 0DF8  
                          l4911 1C96                            l4903 1BB6                            l5463 0662  
                          l5455 0634                            l5439 055E                            l5391 031A  
                          l5383 029A                            l5367 0218                            l5519 08E2  
                          l4649 0D90                            l4577 0B60                            l4497 09C8  
                          l4809 2A08                            l4825 2A58                            l4841 2BAE  
                          l4673 0DFE                            l4665 0DD4                            l5641 24C6  
                          l5801 1894                            l3955 2CE6                            l4851 2BD0  
                          l4771 11EA                            l4747 111A                            l4691 0E58  
                          l4683 0E2E                            l4675 0E10                            l4931 1484  
                          l5491 080A                            l5475 06B4                            l5467 0684  
                          l5395 0348                            l5643 24D6                            l5811 18B4  
                          l5803 189A                            l3957 2CEE                            l4829 2A6C  
                          l4853 2BD4                            l4861 2BF2                            l4845 2BBA  
                          l4781 1238                            l4773 11FE                            l4757 116E  
                          l4925 13CA                            l5397 035E                            l3893 2C86  
                          l5821 1996                            l3967 2D0E                            l3959 2CF2  
                          l4599 0C94                            l4783 1242                            l4767 11C4  
                          l4695 0E7E                            l4943 1610                            l4935 14B0  
                          l5479 0716                            l5399 039A                            l5639 24B4  
                          l4865 2C00                            l4857 2BE8                            l4849 2BC8  
                          l4689 0E52                            l4961 3002                            l5497 0824  
                          l5489 07FC                            l5825 19AA                            l4971 2054  
                          l4699 0E92                            l5499 0832                            l5771 176C  
                          l4797 29D4                            l4949 16CA                            l5829 19B4  
                          l4977 208A                            l5779 1792                            l5797 1884  
                 getsUSART@data 003B                            STR_1 3FBA                            STR_2 3F90  
                          STR_3 3F7B                            STR_4 3FBA                            STR_5 3FA5  
                          STR_6 3FCF                            STR_7 3FF9                            STR_8 3FEF  
                          STR_9 3FFD                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          _PIE1 000F9D                            u4305 305E                            u5310 1092  
                          u4440 2D9A                            u4290 305C                            u5315 1086  
                          u3715 307E                            u3716 3080                            u4446 2D9C  
                          u6330 0678                            u4805 2E3C                            u4806 2E3E  
                          u5390 11D8                            u4815 2E48                            u5631 2032  
                          u4816 2E4A                            u4825 2E54                            u4826 2E56  
                          u4930 0A78                            u4835 2E5E                            u5651 2068  
                          u4836 2E60                            u4940 0A90                            u6620 1852  
                          u4950 0A92                            u6630 186A                            u6707 2E16  
                          u5860 2588                            u6636 186C                            u5865 257C  
                          u6690 1A1C                            _main 16F6       __size_of_LCD_send_command 0036  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0048  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 00C0                   __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032  
                  _sprintf$2402 0108                  delay_s@value_s 0070                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010        __end_of_LCD_enable_pulse 3028                   _LCD_backlight 3074  
       __size_of_LCD_initialize 0168                   ___fltol@sign1 0044                 __end_of___fladd 0DB6  
                         ?_main 0026                 __end_of___awdiv 2A76                 __end_of___flneg 2EF8  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2C0A                 __end_of___flmul 125C  
               __end_of___flsub 2D6A                 __end_of___fltol 2638                 __end_of___lldiv 2B9A  
               ___awdiv@divisor 0072                 __end_of___llmod 2C70                           _T3CON 000FB1  
               __end_of___lwdiv 2D22                           i1l248 0078                           i2l411 2F2A  
                         i2l244 28B2                           i2l469 3036                 ___awdiv@counter 0074  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR3H 000FB3  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                 __end_of_delay_s 2F7A                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000              __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 28EE  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 3F7B                           _scale 125C  
               __end_of_isdigit 300A                  __pbitbssCOMRAM 0230                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 090E                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0026             __size_of_LCD_cursor 0032                  WriteUSART@data 003D  
               __initialization 2DB2                  ?_LCD_backlight 0026                    __end_of_main 1A32  
 __size_of_board_initialization 00CA                   _LCD_goto_line 2638               ?_Joystick_Polling 0026  
            ??_Joystick_Polling 003D               ?_LCD_write_string 0078                          ??_main 0121  
                 __activetblptr 000002                  _JoystickValues 0024              ??_LCD_write_string 0046  
          __size_of__tdiv_to_l_ 0168               __end_of_LCD_clear 2ECA          LCD_write_string@buffer 0078  
                        _ADCON1 000FC1                ___llmod@dividend 003D                          ?_scale 0097  
                        _ADRESH 000FC4                ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000  
               getsUSART@buffer 0038                          i2l5715 2882                          i2l5723 28B0  
                        i2l3989 2F46              __size_of_ReadUSART 001E                          _SPBRGH 000FB0  
              __end_of___xxtofl 1EB6                 _switch_position 001B                __end_of_delay_ms 2E30  
                __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0                __end_of__powers_ 3F53  
            __size_of_OpenUSART 0060                  ?_LCD_goto_line 0026                          ___flge 2186  
                     ??___fladd 00AC                _delay_set_quartz 3082                          ___wmul 2FC6  
                     ??___awdiv 0043                       ??___flneg 0041                  __CFG_STVREN$ON 000000  
                     ??___awmod 0041                       ??___flmul 0086                       ??___flsub 0044  
                     ??___fltol 00A4                       ??___lldiv 0045                       ??___llmod 0045  
                     ??___lwdiv 0041         __size_of_LCD_write_char 0096                          _fround 1A32  
LCD_initialize@quartz_frequency 0075                          clear_0 2DB8                          clear_1 2DC4  
                        clear_2 2DD2                ___awdiv@quotient 0076                 ___awmod@divisor 003F  
                     ??_delay_s 0045            __size_of_LCD_Handler 011A                 ___awmod@counter 0041  
               __CFG_BOREN$BOHW 000000               _JoystickConstants 001C                    __pdataCOMRAM 0047  
                     ??_isdigit 003D                    __mediumconst 3EEA                          tblptrh 000FF7  
                _analogic_brake 0014                          tblptrl 000FF6                          tblptru 000FF8  
           __size_of_USART_Send 00E8                       ??_sprintf 00C0                      ___flge@ff1 003D  
                    ___flge@ff2 0041                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070                      __accesstop 0060         __end_of__initialization 2DEA  
                    ___flneg@f1 003D                _LCD_send_command 2E30                   ___rparam_used 000001  
                    ___fltol@f1 00A0                 ??_LCD_backlight 003D                      _WriteUSART 3062  
                __pcstackCOMRAM 0026                       ?_ISR_alta 0026                   __end_of_scale 16F6  
                _LCD_initialize 1EB6               _LCD_write_message 2EF8               __end_of_ReadUSART 3046  
            ?_LCD_write_message 0078                      __div_to_l_ 22DA                    ??_LCD_cursor 0046  
                  _actual_speed 00D8              __size_of_getsUSART 002C                   ReadUSART@data 0037  
             __end_of_OpenUSART 2CD0                 __div_to_l_@exp1 0075             ??_LCD_write_message 0046  
               __div_to_l_@cntr 0074                         ??_scale 0044                 __div_to_l_@quot 0070  
                    __pbssBANK0 00C2                      __pbssBANK1 0129                      _actual_dir 0230  
                 __div_to_l_@f1 003D                   __div_to_l_@f2 0041                 ??_LCD_goto_line 0046  
            __end_of_LCD_cursor 2E98          __end_of_LCD_initialize 201E                         ?___flge 003D  
                       ?___wmul 003D                      ??_ISR_alta 0060       __end_of_LCD_write_message 2F24  
             ?_LCD_enable_pulse 0026                   putsUSART@data 003E                         ?_fround 0097  
            ??_LCD_enable_pulse 0045     __size_of_PWR_Button_Polling 001C                       ?___xxtofl 0070  
              LCD_cursor@active 0074                       ?_delay_ms 0043              __size_of_putsUSART 0026  
                  ??_USART_Send 0040               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2401 009B                         __Lparam 0000                delay_ms@value_ms 0043  
             __end_of_getsUSART 2F50                     ?_WriteUSART 0026                 ?_LCD_initialize 0026  
               __size_of___flge 0154                         ___fladd 090E                         ___awdiv 29B8  
                       ___flneg 2ECA                         ___awmod 2B9A                         ___flmul 0DB6  
                       ___flsub 2D22                         ___fltol 2546                         ___lldiv 2B0C  
               __size_of___wmul 0026                  _LCD_write_char 2A76                         ___llmod 2C0A  
                       ___lwdiv 2CD0                         __pcinit 2DB2                 __size_of_fround 02B6  
                       _delay_s 2F50                         __ramtop 0300             LCD_write_char@value 0077  
                       __ptext0 16F6                         __ptext1 28EE                         __ptext2 2F50  
                       __ptext3 2C70                         __ptext4 1EB6                         __ptext5 3082  
                       __ptext6 2E66                         __ptext7 3074                         __ptext8 2724  
                       __ptext9 2F7A                       _ECU_Check 0010                     ?__div_to_l_ 003D  
              LCD_write_char@D0 0076                LCD_write_char@D1 0075                LCD_write_char@D2 0074  
              LCD_write_char@D3 0073                         _dpowers 3F53                         _isdigit 2FEC  
                    ??___xxtofl 0074                ___awmod@dividend 003D                      ??_delay_ms 0045  
  __end_of_board_initialization 29B8       __size_of_Joystick_Polling 0048              __end_of_USART_Send 280C  
      __end_of_delay_set_quartz 308A                         _sprintf 00C4                  __pintcode_body 280C  
                     _LCD_clear 2E98            end_of_initialization 2DEA       __size_of_LCD_write_string 0026  
                 __Lmediumconst 3EEA                         int_func 280C                   _Battery_Check 000F  
           LCD_backlight@active 003D                 ___lldiv@divisor 0041              LCD_cursor@blinking 0073  
               ___lldiv@counter 0074          __end_of_LCD_write_char 2B0C                       _RCSTAbits 000FAB  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
             __end_of_putsUSART 2FA0      __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 003D  
                __tdiv_to_l_@f2 0041                       _ISR_bassa 0018                   ??__tdiv_to_l_ 0070  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTDbits 000F83  
      __end_of_LCD_send_command 2E66                     ___fladd@grs 00B7                   ___xxtofl@sign 0078  
                     _TRISCbits 000F94                      getsUSART@i 003C             __size_of_WriteUSART 0012  
                    ?_LCD_clear 0026         _clock_counter_reference 00EA                     ___flmul@grs 008C  
                     _TXSTAbits 000FAC             __size_of__div_to_l_ 0152         LCD_write_integer@F17027 00CA  
               ?_LCD_write_char 0026                   ??_LCD_Handler 0046                  __end_of___flge 22DA  
                    ?_ISR_bassa 0026                  __end_of___wmul 2FEC                   __pidataCOMRAM 308A  
             __size_of_ISR_alta 28E6                  __end_of_fround 1CE8                     USART_Send@i 0042  
           start_initialization 2DB2                       _ReadUSART 3028             __end_of__tdiv_to_l_ 2186  
                     _OpenUSART 2C70                 ___llmod@divisor 0041                 ___llmod@counter 0045  
         __end_of_LCD_backlight 3082                        ??___flge 0070            _board_initialization 28EE  
                      ??___wmul 0041                __CFG_LPT1OSC$OFF 000000                        ??_fround 0044  
                 sprintf@tmpval 0116                       ___fladd@a 00A8                       ___fladd@b 00A4  
                    fround@prec 00A3             __end_of_LCD_Handler 2546                       ___flmul@a 0082  
                     ___flmul@b 007E                     __pbssCOMRAM 0001                       ___flsub@a 00BC  
                     ___flsub@b 00B8                      ?_ReadUSART 0026                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 2D6A               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 001E                    _isdigit$2008 003E               __size_of_delay_ms 0038  
                   ??_LCD_clear 0046         LCD_write_message@buffer 0078                _LCD_write_string 2FA0  
                    ?_OpenUSART 003D                     sprintf@flag 010E                     sprintf@fval 011C  
                   sprintf@prec 011A                ??_LCD_initialize 0046                       __pnvBANK0 00EA  
     delay_set_quartz@frequency 003D                ___lwdiv@dividend 003D              LCD_send_command@D0 0072  
            LCD_send_command@D1 0071              LCD_send_command@D2 0070              LCD_send_command@D3 0045  
                  ??_WriteUSART 003D           __end_of_LCD_goto_line 2724           ?_board_initialization 0026  
                     __pintcode 0008                   __pmediumconst 3EEA                        ?___fladd 00A4  
                      ?___awdiv 0070                        ?___flneg 003D                        ?___awmod 003D  
                      ?___flmul 007E                        ?___flsub 00B8                        ?___fltol 00A0  
                      ?___lldiv 003D                        ?___llmod 003D                       __npowers_ 3EEB  
                      ?___lwdiv 003D                     ??_ISR_bassa 0026                       _getsUSART 2F24  
                   __pintcodelo 0018      __end_of_PWR_Button_Polling 3062                        ?_delay_s 0026  
                   __tdiv_to_l_ 201E                    ??__div_to_l_ 0045                        ?_isdigit 0026  
              ___lwdiv@quotient 0041                        ?_sprintf 0100                  __size_of_scale 049A  
            __end_of_WriteUSART 3074               ?_delay_set_quartz 0026              ??_delay_set_quartz 003D  
                ___wmul@product 0041                        _LATBbits 000F8A                        _LATCbits 000F8B  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2    _delay_quartz_frequency_value 0047  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 242C                        _PIR2bits 000FA1                        i2u657_40 2870  
                      i2u658_45 2872                       _pr_time_1 0001                       _pr_time_2 00D4  
                     _pr_time_3 0005                       _set_speed 000D                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _ISR_alta 0008                     _LCD_Handler 242C  
                    ?_getsUSART 0038                        _USART_Rx 00DA                        _USART_Tx 00E2  
                    _ADCON0bits 000FC2                       _putsUSART 2F7A                      _ADCON2bits 000FC0  
             ___wmul@multiplier 003D               ?_LCD_send_command 0070                USART_Send@i_1261 0043  
              _actual_speed_pk0 0012                _actual_speed_pk1 0013                _actual_speed_kmh 00D0  
                   ??_ReadUSART 0037              ??_LCD_send_command 0045                   _set_speed_pk0 0017  
                 _set_speed_pk1 0018                     ??_OpenUSART 003F                ??_LCD_write_char 0046  
               OpenUSART@config 003F               LCD_goto_line@line 0073                        __Hrparam 0000  
        ??_board_initialization 0046                        __Lrparam 0000                __size_of___fladd 04A8  
              __size_of___awdiv 00BE                __size_of___flneg 002E                __size_of___awmod 0070  
              __size_of___flmul 04A6                __size_of___flsub 0048                __size_of___fltol 00F2  
              __size_of___lldiv 008E                __size_of___llmod 0066                __size_of___lwdiv 0052  
                   _fround$2400 009B                     _fround$2399 009F                      ?_putsUSART 003E  
              __size_of_delay_s 002A                      sprintf@exp 0114                      sprintf@val 0110  
                      ___xxtofl 1CE8                __size_of_isdigit 001E                        _delay_ms 2DF8  
               ___lwdiv@divisor 003F                 ___lwdiv@counter 0043                _LCD_enable_pulse 300A  
                      __ptext10 3062                        __ptext11 3046                        __ptext20 201E  
                      __ptext12 242C                        __ptext21 22DA                        __ptext13 00C4  
                      __ptext30 2CD0                        __ptext22 1CE8                        __ptext14 125C  
                      __ptext31 2FA0                        __ptext23 2C0A                        __ptext15 2FEC  
                      __ptext40 2D6A                        __ptext32 2EF8                        __ptext24 2B0C  
                      __ptext16 1A32                        __ptext33 2A76                        __ptext25 2546  
                      __ptext17 0DB6                        __ptext34 2638                        __ptext26 2D22  
                      __ptext18 2B9A                        __ptext43 2F24                        __ptext35 2E98  
                      __ptext27 090E                        __ptext19 29B8                        __ptext44 3028  
                      __ptext36 2E30                        __ptext28 2ECA                        __ptext37 300A  
                      __ptext29 2186                        __ptext38 2DF8                        __ptext39 2FC6  
                      __powers_ 3F1F                __size_of_sprintf 084A                   __size_of_main 033C  
                      _wait_low 0232        __end_of_Joystick_Polling 2DB2                        int$flags 0048  
                   ??_getsUSART 003B        __end_of_LCD_write_string 2FC6                      _LCD_cursor 2E66  
                    _INTCONbits 000FF2                    _set_steering 0019                  OpenUSART@spbrg 003D  
                      isdigit@c 003F                        scale@scl 009F                    _time_counter 0009  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 010C  
              __tdiv_to_l_@exp1 0078                __tdiv_to_l_@cntr 0077                       sprintf@sp 0100  
              __tdiv_to_l_@quot 0073                ___lldiv@dividend 003D                    _spam_counter 001A  
                  ?__tdiv_to_l_ 003D                     ??_putsUSART 0040                        sprintf@c 0120  
                      sprintf@f 0102                ___lldiv@quotient 0070          __size_of_LCD_backlight 000E  
                 ___fladd@signs 00B4              _PWR_Button_Polling 3046                    ___fladd@aexp 00B5  
                  ___fladd@bexp 00B6             ?_PWR_Button_Polling 0026                    _USART_Tx_Old 00C2  
                  _USART_Status 0011                      _USART_Send 2724                    _power_switch 0231  
