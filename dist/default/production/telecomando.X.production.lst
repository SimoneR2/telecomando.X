

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 29 14:27:24 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003062                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  003062  10                 	db	16
    71                           
    72                           	psect	mediumconst
    73  003EEA                     __pmediumconst:
    74                           	opt stack 0
    75  003EEA  00                 	db	0
    76  003EEB                     __npowers_:
    77                           	opt stack 0
    78  003EEB  0000               	dw	0
    79  003EED  3F80               	dw	16256
    80  003EEF  CCCD               	dw	52429
    81  003EF1  3DCC               	dw	15820
    82  003EF3  D70A               	dw	55050
    83  003EF5  3C23               	dw	15395
    84  003EF7  126F               	dw	4719
    85  003EF9  3A83               	dw	14979
    86  003EFB  B717               	dw	46871
    87  003EFD  38D1               	dw	14545
    88  003EFF  C5AC               	dw	50604
    89  003F01  3727               	dw	14119
    90  003F03  37BD               	dw	14269
    91  003F05  3586               	dw	13702
    92  003F07  BF95               	dw	49045
    93  003F09  33D6               	dw	13270
    94  003F0B  CC77               	dw	52343
    95  003F0D  322B               	dw	12843
    96  003F0F  705F               	dw	28767
    97  003F11  3089               	dw	12425
    98  003F13  E6FF               	dw	59135
    99  003F15  2EDB               	dw	11995
   100  003F17  E508               	dw	58632
   101  003F19  1E3C               	dw	7740
   102  003F1B  4260               	dw	16992
   103  003F1D  0DA2               	dw	3490
   104  003F1F                     __end_of__npowers_:
   105                           	opt stack 0
   106  003F1F                     __powers_:
   107                           	opt stack 0
   108  003F1F  0000               	dw	0
   109  003F21  3F80               	dw	16256
   110  003F23  0000               	dw	0
   111  003F25  4120               	dw	16672
   112  003F27  0000               	dw	0
   113  003F29  42C8               	dw	17096
   114  003F2B  0000               	dw	0
   115  003F2D  447A               	dw	17530
   116  003F2F  4000               	dw	16384
   117  003F31  461C               	dw	17948
   118  003F33  5000               	dw	20480
   119  003F35  47C3               	dw	18371
   120  003F37  2400               	dw	9216
   121  003F39  4974               	dw	18804
   122  003F3B  9680               	dw	38528
   123  003F3D  4B18               	dw	19224
   124  003F3F  BC20               	dw	48160
   125  003F41  4CBE               	dw	19646
   126  003F43  6B28               	dw	27432
   127  003F45  4E6E               	dw	20078
   128  003F47  02F9               	dw	761
   129  003F49  5015               	dw	20501
   130  003F4B  78EC               	dw	30956
   131  003F4D  60AD               	dw	24749
   132  003F4F  F2CA               	dw	62154
   133  003F51  7149               	dw	29001
   134  003F53                     __end_of__powers_:
   135                           	opt stack 0
   136  003F53                     _dpowers:
   137                           	opt stack 0
   138  003F53  0001               	dw	1
   139  003F55  0000               	dw	0
   140  003F57  000A               	dw	10
   141  003F59  0000               	dw	0
   142  003F5B  0064               	dw	100
   143  003F5D  0000               	dw	0
   144  003F5F  03E8               	dw	1000
   145  003F61  0000               	dw	0
   146  003F63  2710               	dw	10000
   147  003F65  0000               	dw	0
   148  003F67  86A0               	dw	34464
   149  003F69  0001               	dw	1
   150  003F6B  4240               	dw	16960
   151  003F6D  000F               	dw	15
   152  003F6F  9680               	dw	38528
   153  003F71  0098               	dw	152
   154  003F73  E100               	dw	57600
   155  003F75  05F5               	dw	1525
   156  003F77  CA00               	dw	51712
   157  003F79  3B9A               	dw	15258
   158  003F7B                     __end_of_dpowers:
   159                           	opt stack 0
   160  003F7B                     STR_3:
   161  003F7B  54                 	db	84	;'T'
   162  003F7C  75                 	db	117	;'u'
   163  003F7D  72                 	db	114	;'r'
   164  003F7E  6E                 	db	110	;'n'
   165  003F7F  20                 	db	32
   166  003F80  74                 	db	116	;'t'
   167  003F81  68                 	db	104	;'h'
   168  003F82  65                 	db	101	;'e'
   169  003F83  20                 	db	32
   170  003F84  73                 	db	115	;'s'
   171  003F85  77                 	db	119	;'w'
   172  003F86  69                 	db	105	;'i'
   173  003F87  74                 	db	116	;'t'
   174  003F88  63                 	db	99	;'c'
   175  003F89  68                 	db	104	;'h'
   176  003F8A  20                 	db	32
   177  003F8B  4F                 	db	79	;'O'
   178  003F8C  4E                 	db	78	;'N'
   179  003F8D  21                 	db	33
   180  003F8E  20                 	db	32
   181  003F8F  00                 	db	0
   182  003F90                     STR_2:
   183  003F90  3D                 	db	61	;'='
   184  003F91  3D                 	db	61	;'='
   185  003F92  3E                 	db	62	;'>'
   186  003F93  20                 	db	32
   187  003F94  56                 	db	86	;'V'
   188  003F95  45                 	db	69	;'E'
   189  003F96  48                 	db	72	;'H'
   190  003F97  49                 	db	73	;'I'
   191  003F98  43                 	db	67	;'C'
   192  003F99  4C                 	db	76	;'L'
   193  003F9A  45                 	db	69	;'E'
   194  003F9B  20                 	db	32
   195  003F9C  20                 	db	32
   196  003F9D  4F                 	db	79	;'O'
   197  003F9E  46                 	db	70	;'F'
   198  003F9F  46                 	db	70	;'F'
   199  003FA0  20                 	db	32
   200  003FA1  3C                 	db	60	;'<'
   201  003FA2  3D                 	db	61	;'='
   202  003FA3  3D                 	db	61	;'='
   203  003FA4  00                 	db	0
   204  003FA5                     STR_5:
   205  003FA5  3D                 	db	61	;'='
   206  003FA6  3D                 	db	61	;'='
   207  003FA7  3D                 	db	61	;'='
   208  003FA8  20                 	db	32
   209  003FA9  56                 	db	86	;'V'
   210  003FAA  45                 	db	69	;'E'
   211  003FAB  48                 	db	72	;'H'
   212  003FAC  49                 	db	73	;'I'
   213  003FAD  43                 	db	67	;'C'
   214  003FAE  4C                 	db	76	;'L'
   215  003FAF  45                 	db	69	;'E'
   216  003FB0  20                 	db	32
   217  003FB1  44                 	db	68	;'D'
   218  003FB2  41                 	db	65	;'A'
   219  003FB3  54                 	db	84	;'T'
   220  003FB4  41                 	db	65	;'A'
   221  003FB5  20                 	db	32
   222  003FB6  3D                 	db	61	;'='
   223  003FB7  3D                 	db	61	;'='
   224  003FB8  3D                 	db	61	;'='
   225  003FB9  00                 	db	0
   226  003FBA                     STR_1:
   227  003FBA  3D                 	db	61	;'='
   228  003FBB  3D                 	db	61	;'='
   229  003FBC  3D                 	db	61	;'='
   230  003FBD  3D                 	db	61	;'='
   231  003FBE  3D                 	db	61	;'='
   232  003FBF  3D                 	db	61	;'='
   233  003FC0  3D                 	db	61	;'='
   234  003FC1  3D                 	db	61	;'='
   235  003FC2  3D                 	db	61	;'='
   236  003FC3  3D                 	db	61	;'='
   237  003FC4  3D                 	db	61	;'='
   238  003FC5  3D                 	db	61	;'='
   239  003FC6  3D                 	db	61	;'='
   240  003FC7  3D                 	db	61	;'='
   241  003FC8  3D                 	db	61	;'='
   242  003FC9  3D                 	db	61	;'='
   243  003FCA  3D                 	db	61	;'='
   244  003FCB  3D                 	db	61	;'='
   245  003FCC  3D                 	db	61	;'='
   246  003FCD  3D                 	db	61	;'='
   247  003FCE  00                 	db	0
   248  003FCF                     STR_6:
   249  003FCF  44                 	db	68	;'D'
   250  003FD0  69                 	db	105	;'i'
   251  003FD1  72                 	db	114	;'r'
   252  003FD2  65                 	db	101	;'e'
   253  003FD3  63                 	db	99	;'c'
   254  003FD4  74                 	db	116	;'t'
   255  003FD5  69                 	db	105	;'i'
   256  003FD6  6F                 	db	111	;'o'
   257  003FD7  6E                 	db	110	;'n'
   258  003FD8  3A                 	db	58	;':'
   259  003FD9  20                 	db	32
   260  003FDA  00                 	db	0
   261  003FDB                     STR_10:
   262  003FDB  53                 	db	83	;'S'
   263  003FDC  70                 	db	112	;'p'
   264  003FDD  65                 	db	101	;'e'
   265  003FDE  65                 	db	101	;'e'
   266  003FDF  64                 	db	100	;'d'
   267  003FE0  3A                 	db	58	;':'
   268  003FE1  20                 	db	32
   269  003FE2  25                 	db	37
   270  003FE3  2E                 	db	46
   271  003FE4  33                 	db	51	;'3'
   272  003FE5  66                 	db	102	;'f'
   273  003FE6  00                 	db	0
   274  003FE7                     STR_13:
   275  003FE7  57                 	db	87	;'W'
   276  003FE8  61                 	db	97	;'a'
   277  003FE9  69                 	db	105	;'i'
   278  003FEA  74                 	db	116	;'t'
   279  003FEB  2E                 	db	46
   280  003FEC  2E                 	db	46
   281  003FED  2E                 	db	46
   282  003FEE  00                 	db	0
   283  003FEF                     STR_8:
   284  003FEF  42                 	db	66	;'B'
   285  003FF0  4B                 	db	75	;'K'
   286  003FF1  57                 	db	87	;'W'
   287  003FF2  44                 	db	68	;'D'
   288  003FF3  00                 	db	0
   289  003FF4                     STR_11:
   290  003FF4  4B                 	db	75	;'K'
   291  003FF5  6D                 	db	109	;'m'
   292  003FF6  2F                 	db	47
   293  003FF7  68                 	db	104	;'h'
   294  003FF8  00                 	db	0
   295  003FF9                     STR_7:
   296  003FF9  46                 	db	70	;'F'
   297  003FFA  57                 	db	87	;'W'
   298  003FFB  44                 	db	68	;'D'
   299  003FFC  00                 	db	0
   300  003FFD                     STR_9:
   301  003FFD  50                 	db	80	;'P'
   302  003FFE  00                 	db	0
   303  0000                     
   304                           ; #config settings
   305  003FFF  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	nvCOMRAM
   308  000044                     __pnvCOMRAM:
   309                           	opt stack 0
   310  000044                     _clock_counter_reference:
   311                           	opt stack 0
   312  000044                     	ds	2
   313  0000                     _ADCON0bits	set	4034
   314  0000                     _ADCON1	set	4033
   315  0000                     _ADCON2bits	set	4032
   316  0000                     _ADRESH	set	4036
   317  0000                     _INTCONbits	set	4082
   318  0000                     _IPR1bits	set	3999
   319  0000                     _IPR2bits	set	4002
   320  0000                     _LATA	set	3977
   321  0000                     _LATAbits	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATC	set	3979
   324  0000                     _LATCbits	set	3979
   325  0000                     _LATD	set	3980
   326  0000                     _LATDbits	set	3980
   327  0000                     _LATE	set	3981
   328  0000                     _PIE1	set	3997
   329  0000                     _PIE1bits	set	3997
   330  0000                     _PIE2bits	set	4000
   331  0000                     _PIR1bits	set	3998
   332  0000                     _PIR2bits	set	4001
   333  0000                     _PORTAbits	set	3968
   334  0000                     _PORTBbits	set	3969
   335  0000                     _PORTDbits	set	3971
   336  0000                     _RCONbits	set	4048
   337  0000                     _RCREG	set	4014
   338  0000                     _RCSTA	set	4011
   339  0000                     _RCSTAbits	set	4011
   340  0000                     _SPBRG	set	4015
   341  0000                     _SPBRGH	set	4016
   342  0000                     _T3CON	set	4017
   343  0000                     _TMR3H	set	4019
   344  0000                     _TMR3L	set	4018
   345  0000                     _TRISA	set	3986
   346  0000                     _TRISB	set	3987
   347  0000                     _TRISC	set	3988
   348  0000                     _TRISCbits	set	3988
   349  0000                     _TRISD	set	3989
   350  0000                     _TRISE	set	3990
   351  0000                     _TXREG	set	4013
   352  0000                     _TXSTA	set	4012
   353  0000                     _TXSTAbits	set	4012
   354                           
   355                           	psect	cinit
   356  002DA2                     __pcinit:
   357                           	opt stack 0
   358  002DA2                     start_initialization:
   359                           	opt stack 0
   360  002DA2                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to BANK1 (12 bytes)
   364  002DA2  EE01  F019         	lfsr	0,__pbssBANK1
   365  002DA6  0E0C               	movlw	12
   366  002DA8                     clear_0:
   367  002DA8  6AEE               	clrf	postinc0,c
   368  002DAA  06E8               	decf	wreg,f,c
   369  002DAC  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to BANK0 (30 bytes)
   372  002DAE  EE00  F0D2         	lfsr	0,__pbssBANK0
   373  002DB2  0E1E               	movlw	30
   374  002DB4                     clear_1:
   375  002DB4  6AEE               	clrf	postinc0,c
   376  002DB6  06E8               	decf	wreg,f,c
   377  002DB8  E1FD               	bnz	clear_1
   378                           
   379                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   380  002DBA  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   381                           
   382                           ; Clear objects allocated to COMRAM (35 bytes)
   383  002DBC  EE00  F001         	lfsr	0,__pbssCOMRAM
   384  002DC0  0E23               	movlw	35
   385  002DC2                     clear_2:
   386  002DC2  6AEE               	clrf	postinc0,c
   387  002DC4  06E8               	decf	wreg,f,c
   388  002DC6  E1FD               	bnz	clear_2
   389                           
   390                           ; Initialize objects allocated to COMRAM (1 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  002DC8  0E62               	movlw	low __pidataCOMRAM
   393  002DCA  6EF6               	movwf	tblptrl,c
   394  002DCC  0E30               	movlw	high __pidataCOMRAM
   395  002DCE  6EF7               	movwf	tblptrh,c
   396  002DD0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  002DD2  6EF8               	movwf	tblptru,c
   398  002DD4  0009               	tblrd		*+	;fetch initializer
   399  002DD6  CFF5 F046          	movff	tablat,__pdataCOMRAM
   400  002DDA                     end_of_initialization:
   401                           	opt stack 0
   402  002DDA                     __end_of__initialization:
   403                           	opt stack 0
   404  002DDA  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   405  002DDC  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   406  002DDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   407  002DE0  6EF8               	movwf	tblptru,c
   408  002DE2  0100               	movlb	0
   409  002DE4  EF84  F00B         	goto	_main	;jump to C main() function
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417                           	psect	bitbssCOMRAM
   418  000218                     __pbitbssCOMRAM:
   419                           	opt stack 0
   420  000218                     _actual_dir:
   421                           	opt stack 0
   422  000218                     	ds	1
   423  000219                     _dir:
   424                           	opt stack 0
   425  000219                     	ds	1
   426  00021A                     _power_switch:
   427                           	opt stack 0
   428  00021A                     	ds	1
   429  00021B                     _wait_low:
   430                           	opt stack 0
   431  00021B                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           
   439                           	psect	bssCOMRAM
   440  000001                     __pbssCOMRAM:
   441                           	opt stack 0
   442  000001                     _pr_time_1:
   443                           	opt stack 0
   444  000001                     	ds	4
   445  000005                     _pr_time_2:
   446                           	opt stack 0
   447  000005                     	ds	4
   448  000009                     _time_counter:
   449                           	opt stack 0
   450  000009                     	ds	4
   451  00000D                     _set_speed:
   452                           	opt stack 0
   453  00000D                     	ds	2
   454  00000F                     _Battery_Check:
   455                           	opt stack 0
   456  00000F                     	ds	1
   457  000010                     _ECU_Check:
   458                           	opt stack 0
   459  000010                     	ds	1
   460  000011                     _USART_Status:
   461                           	opt stack 0
   462  000011                     	ds	1
   463  000012                     _actual_speed_pk0:
   464                           	opt stack 0
   465  000012                     	ds	1
   466  000013                     _actual_speed_pk1:
   467                           	opt stack 0
   468  000013                     	ds	1
   469  000014                     _analogic_brake:
   470                           	opt stack 0
   471  000014                     	ds	1
   472  000015                     _i:
   473                           	opt stack 0
   474  000015                     	ds	1
   475  000016                     _set_speed_pk0:
   476                           	opt stack 0
   477  000016                     	ds	1
   478  000017                     _set_speed_pk1:
   479                           	opt stack 0
   480  000017                     	ds	1
   481  000018                     _set_steering:
   482                           	opt stack 0
   483  000018                     	ds	1
   484  000019                     _switch_position:
   485                           	opt stack 0
   486  000019                     	ds	1
   487  00001A                     _JoystickConstants:
   488                           	opt stack 0
   489  00001A                     	ds	8
   490  000022                     _JoystickValues:
   491                           	opt stack 0
   492  000022                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	dataCOMRAM
   501  000046                     __pdataCOMRAM:
   502                           	opt stack 0
   503  000046                     _delay_quartz_frequency_value:
   504                           	opt stack 0
   505  000046                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	bssBANK0
   514  0000D2                     __pbssBANK0:
   515                           	opt stack 0
   516  0000D2                     LCD_write_integer@F17027:
   517                           	opt stack 0
   518  0000D2                     	ds	6
   519  0000D8                     _actual_speed_kmh:
   520                           	opt stack 0
   521  0000D8                     	ds	4
   522  0000DC                     _pr_time_3:
   523                           	opt stack 0
   524  0000DC                     	ds	4
   525  0000E0                     _actual_speed:
   526                           	opt stack 0
   527  0000E0                     	ds	2
   528  0000E2                     _USART_Rx:
   529                           	opt stack 0
   530  0000E2                     	ds	7
   531  0000E9                     _USART_Tx:
   532                           	opt stack 0
   533  0000E9                     	ds	7
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541                           	psect	bssBANK1
   542  000119                     __pbssBANK1:
   543                           	opt stack 0
   544  000119                     _str:
   545                           	opt stack 0
   546  000119                     	ds	12
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554                           	psect	cstackBANK1
   555  000100                     __pcstackBANK1:
   556                           	opt stack 0
   557  000100                     _sprintf$2477:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x0
   561  000100                     	ds	4
   562  000104                     sprintf@ap:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x4
   566  000104                     	ds	2
   567  000106                     sprintf@flag:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x6
   571  000106                     	ds	2
   572  000108                     sprintf@val:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x8
   576  000108                     	ds	4
   577  00010C                     sprintf@exp:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00010C                     	ds	2
   582  00010E                     sprintf@tmpval:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0xE
   586  00010E                     	ds	4
   587  000112                     sprintf@prec:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x12
   591  000112                     	ds	2
   592  000114                     sprintf@fval:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x14
   596  000114                     	ds	4
   597  000118                     sprintf@c:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x18
   601  000118                     	ds	1
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           
   609                           	psect	cstackBANK0
   610  000060                     __pcstackBANK0:
   611                           	opt stack 0
   612  000060                     ??_ISR_alta:
   613                           
   614                           ; 0 bytes @ 0x0
   615  000060                     	ds	16
   616  000070                     ?___awdiv:
   617                           	opt stack 0
   618  000070                     ?__tdiv_to_l_:
   619                           	opt stack 0
   620  000070                     ?__div_to_l_:
   621                           	opt stack 0
   622  000070                     ?___lldiv:
   623                           	opt stack 0
   624  000070                     ?___llmod:
   625                           	opt stack 0
   626  000070                     ?___xxtofl:
   627                           	opt stack 0
   628  000070                     delay_ms@value_ms:
   629                           	opt stack 0
   630  000070                     ___awdiv@dividend:
   631                           	opt stack 0
   632  000070                     __div_to_l_@f1:
   633                           	opt stack 0
   634  000070                     ___flge@ff1:
   635                           	opt stack 0
   636  000070                     __tdiv_to_l_@f1:
   637                           	opt stack 0
   638  000070                     ___lldiv@dividend:
   639                           	opt stack 0
   640  000070                     ___llmod@dividend:
   641                           	opt stack 0
   642  000070                     ___xxtofl@val:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x10
   646  000070                     	ds	2
   647  000072                     LCD_send_command@D2:
   648                           	opt stack 0
   649  000072                     ___awdiv@divisor:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x12
   653  000072                     	ds	1
   654  000073                     LCD_send_command@D1:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x13
   658  000073                     	ds	1
   659  000074                     ??___xxtofl:
   660  000074                     LCD_send_command@D0:
   661                           	opt stack 0
   662  000074                     ___awdiv@counter:
   663                           	opt stack 0
   664  000074                     __div_to_l_@f2:
   665                           	opt stack 0
   666  000074                     ___flge@ff2:
   667                           	opt stack 0
   668  000074                     __tdiv_to_l_@f2:
   669                           	opt stack 0
   670  000074                     ___lldiv@divisor:
   671                           	opt stack 0
   672  000074                     ___llmod@divisor:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x14
   676  000074                     	ds	1
   677  000075                     LCD_goto_line@line:
   678                           	opt stack 0
   679  000075                     LCD_write_char@D3:
   680                           	opt stack 0
   681  000075                     LCD_cursor@blinking:
   682                           	opt stack 0
   683  000075                     ___awdiv@sign:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x15
   687  000075                     	ds	1
   688  000076                     LCD_write_char@D2:
   689                           	opt stack 0
   690  000076                     LCD_cursor@active:
   691                           	opt stack 0
   692  000076                     ___awdiv@quotient:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x16
   696  000076                     	ds	1
   697  000077                     LCD_write_char@D1:
   698                           	opt stack 0
   699  000077                     LCD_initialize@quartz_frequency:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x17
   703  000077                     	ds	1
   704  000078                     LCD_write_char@D0:
   705                           	opt stack 0
   706  000078                     ___xxtofl@sign:
   707                           	opt stack 0
   708  000078                     __tdiv_to_l_@quot:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x18
   712  000078                     	ds	1
   713  000079                     LCD_write_char@value:
   714                           	opt stack 0
   715  000079                     ___xxtofl@exp:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x19
   719  000079                     	ds	1
   720  00007A                     LCD_write_message@buffer:
   721                           	opt stack 0
   722  00007A                     LCD_write_string@buffer:
   723                           	opt stack 0
   724  00007A                     ___xxtofl@arg:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x1A
   728  00007A                     	ds	2
   729  00007C                     __tdiv_to_l_@cntr:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x1C
   733  00007C                     	ds	1
   734  00007D                     __tdiv_to_l_@exp1:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x1D
   738  00007D                     	ds	1
   739  00007E                     ?___flmul:
   740                           	opt stack 0
   741  00007E                     ___flmul@b:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x1E
   745  00007E                     	ds	4
   746  000082                     ___flmul@a:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x22
   750  000082                     	ds	4
   751  000086                     ??___flmul:
   752                           
   753                           ; 0 bytes @ 0x26
   754  000086                     	ds	4
   755  00008A                     ___flmul@sign:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x2A
   759  00008A                     	ds	1
   760  00008B                     ___flmul@aexp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x2B
   764  00008B                     	ds	1
   765  00008C                     ___flmul@grs:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x2C
   769  00008C                     	ds	4
   770  000090                     ___flmul@bexp:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x30
   774  000090                     	ds	1
   775  000091                     ___flmul@prod:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x31
   779  000091                     	ds	4
   780  000095                     ___flmul@temp:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x35
   784  000095                     	ds	2
   785  000097                     ?_fround:
   786                           	opt stack 0
   787  000097                     ?_scale:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x37
   791  000097                     	ds	4
   792  00009B                     _fround$2475:
   793                           	opt stack 0
   794  00009B                     _scale$2476:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x3B
   798  00009B                     	ds	4
   799  00009F                     scale@scl:
   800                           	opt stack 0
   801  00009F                     _fround$2474:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x3F
   805  00009F                     	ds	1
   806  0000A0                     ?___fltol:
   807                           	opt stack 0
   808  0000A0                     ___fltol@f1:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x40
   812  0000A0                     	ds	3
   813  0000A3                     fround@prec:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x43
   817  0000A3                     	ds	1
   818  0000A4                     ??___fltol:
   819  0000A4                     ?___fladd:
   820                           	opt stack 0
   821  0000A4                     ___fladd@b:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0x44
   825  0000A4                     	ds	4
   826  0000A8                     ___fltol@sign1:
   827                           	opt stack 0
   828  0000A8                     ___fladd@a:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x48
   832  0000A8                     	ds	1
   833  0000A9                     ___fltol@exp1:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x49
   837  0000A9                     	ds	3
   838  0000AC                     ??___fladd:
   839                           
   840                           ; 0 bytes @ 0x4C
   841  0000AC                     	ds	8
   842  0000B4                     ___fladd@signs:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x54
   846  0000B4                     	ds	1
   847  0000B5                     ___fladd@aexp:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x55
   851  0000B5                     	ds	1
   852  0000B6                     ___fladd@bexp:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x56
   856  0000B6                     	ds	1
   857  0000B7                     ___fladd@grs:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x57
   861  0000B7                     	ds	1
   862  0000B8                     ?___flsub:
   863                           	opt stack 0
   864  0000B8                     ___flsub@b:
   865                           	opt stack 0
   866                           
   867                           ; 4 bytes @ 0x58
   868  0000B8                     	ds	4
   869  0000BC                     ___flsub@a:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x5C
   873  0000BC                     	ds	4
   874  0000C0                     ?_sprintf:
   875                           	opt stack 0
   876  0000C0                     sprintf@sp:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x60
   880  0000C0                     	ds	2
   881  0000C2                     sprintf@f:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x62
   885  0000C2                     	ds	6
   886  0000C8                     ??_sprintf:
   887                           
   888                           ; 0 bytes @ 0x68
   889  0000C8                     	ds	2
   890  0000CA                     ??_main:
   891                           
   892                           ; 0 bytes @ 0x6A
   893  0000CA                     	ds	8
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           
   901                           	psect	cstackCOMRAM
   902  000024                     __pcstackCOMRAM:
   903                           	opt stack 0
   904  000024                     ??_ISR_bassa:
   905  000024                     
   906                           ; 1 bytes @ 0x0
   907  000024                     	ds	17
   908  000035                     ReadUSART@data:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x11
   912  000035                     	ds	1
   913  000036                     getsUSART@buffer:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x12
   917  000036                     	ds	2
   918  000038                     getsUSART@len:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x14
   922  000038                     	ds	1
   923  000039                     getsUSART@data:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x15
   927  000039                     	ds	1
   928  00003A                     getsUSART@i:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x16
   932  00003A                     	ds	1
   933  00003B                     _ISR_alta$1278:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x17
   937  00003B                     	ds	1
   938  00003C                     ??_Joystick_Polling:
   939  00003C                     ??_isdigit:
   940  00003C                     ??__tdiv_to_l_:
   941  00003C                     ??___flge:
   942  00003C                     ?___wmul:
   943                           	opt stack 0
   944  00003C                     ?___awmod:
   945                           	opt stack 0
   946  00003C                     ?___lwdiv:
   947                           	opt stack 0
   948  00003C                     ?___flneg:
   949                           	opt stack 0
   950  00003C                     delay_set_quartz@frequency:
   951                           	opt stack 0
   952  00003C                     LCD_backlight@active:
   953                           	opt stack 0
   954  00003C                     WriteUSART@data:
   955                           	opt stack 0
   956  00003C                     ___llmod@counter:
   957                           	opt stack 0
   958  00003C                     OpenUSART@spbrg:
   959                           	opt stack 0
   960  00003C                     ___wmul@multiplier:
   961                           	opt stack 0
   962  00003C                     ___awmod@dividend:
   963                           	opt stack 0
   964  00003C                     ___lwdiv@dividend:
   965                           	opt stack 0
   966  00003C                     __div_to_l_@quot:
   967                           	opt stack 0
   968  00003C                     ___flneg@f1:
   969                           	opt stack 0
   970  00003C                     ___lldiv@quotient:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x18
   974  00003C                     	ds	1
   975  00003D                     _isdigit$2082:
   976                           	opt stack 0
   977  00003D                     putsUSART@data:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x19
   981  00003D                     	ds	1
   982  00003E                     OpenUSART@config:
   983                           	opt stack 0
   984  00003E                     isdigit@c:
   985                           	opt stack 0
   986  00003E                     ___wmul@multiplicand:
   987                           	opt stack 0
   988  00003E                     ___awmod@divisor:
   989                           	opt stack 0
   990  00003E                     ___lwdiv@divisor:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x1A
   994  00003E                     	ds	1
   995  00003F                     
   996                           ; 0 bytes @ 0x1B
   997  00003F                     	ds	1
   998  000040                     ___awmod@counter:
   999                           	opt stack 0
  1000  000040                     __div_to_l_@cntr:
  1001                           	opt stack 0
  1002  000040                     ___lldiv@counter:
  1003                           	opt stack 0
  1004  000040                     ___wmul@product:
  1005                           	opt stack 0
  1006  000040                     ___lwdiv@quotient:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x1C
  1010  000040                     	ds	1
  1011  000041                     ___awmod@sign:
  1012                           	opt stack 0
  1013  000041                     __div_to_l_@exp1:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x1D
  1017  000041                     	ds	1
  1018  000042                     LCD_send_command@D3:
  1019                           	opt stack 0
  1020  000042                     ___lwdiv@counter:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x1E
  1024  000042                     	ds	1
  1025  000043                     tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           
  1032                           ; 0 bytes @ 0x1F
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 122 in file "telecomando.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1052 ;;      Params:         0       0       0       0
  1053 ;;      Locals:         0       0       0       0
  1054 ;;      Temps:          0       8       0       0
  1055 ;;      Totals:         0       8       0       0
  1056 ;;Total ram usage:        8 bytes
  1057 ;; Hardware stack levels required when called:   11
  1058 ;; This function calls:
  1059 ;;		_Joystick_Polling
  1060 ;;		_LCD_Handler
  1061 ;;		_LCD_clear
  1062 ;;		_LCD_goto_line
  1063 ;;		_LCD_write_message
  1064 ;;		_USART_Send
  1065 ;;		___flmul
  1066 ;;		___fltol
  1067 ;;		___xxtofl
  1068 ;;		_board_initialization
  1069 ;;		_delay_ms
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text0
  1076  001708                     __ptext0:
  1077                           	opt stack 0
  1078  001708                     _main:
  1079                           	opt stack 20
  1080                           
  1081                           ;telecomando.c: 123: board_initialization();
  1082                           
  1083                           ;incstack = 0
  1084  001708  ECB3  F014         	call	_board_initialization	;wreg free
  1085                           
  1086                           ;telecomando.c: 124: PORTDbits.RD7 = 0;
  1087  00170C  9E83               	bcf	3971,7,c	;volatile
  1088                           
  1089                           ;telecomando.c: 127: USART_Tx[0] = 0xAA;
  1090  00170E  0EAA               	movlw	170
  1091  001710  0100               	movlb	0	; () banked
  1092  001712  6FE9               	movwf	_USART_Tx& (0+255),b
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;telecomando.c: 128: USART_Tx[6] = 0xAA;
  1096  001714  0EAA               	movlw	170
  1097  001716  0100               	movlb	0	; () banked
  1098  001718  6FEF               	movwf	(_USART_Tx+6)& (0+255),b
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;telecomando.c: 129: JoystickConstants[0] = 0.703;
  1102  00171A  0ECF               	movlw	207
  1103  00171C  6E1A               	movwf	_JoystickConstants,c	;volatile
  1104  00171E  0EF7               	movlw	247
  1105  001720  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1106  001722  0E33               	movlw	51
  1107  001724  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1108  001726  0E3F               	movlw	63
  1109  001728  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;telecomando.c: 130: JoystickConstants[1] = 34;
  1113  00172A  0E00               	movlw	0
  1114  00172C  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1115  00172E  0E00               	movlw	0
  1116  001730  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1117  001732  0E08               	movlw	8
  1118  001734  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1119  001736  0E42               	movlw	66
  1120  001738  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1121  00173A                     l5537:
  1122                           
  1123                           ;telecomando.c: 135: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  1124  00173A  A681               	btfss	3969,3,c	;volatile
  1125  00173C  D002               	goto	l251
  1126  00173E  B643               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1127  001740  D009               	goto	l249
  1128  001742                     l251:
  1129                           
  1130                           ;telecomando.c: 136: wait_low = 0;
  1131  001742  9643               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1132                           
  1133                           ;telecomando.c: 137: if (PORTBbits.RB3 == 1) {
  1134  001744  A681               	btfss	3969,3,c	;volatile
  1135  001746  D006               	goto	l249
  1136                           
  1137                           ;telecomando.c: 138: power_switch = ~power_switch;
  1138  001748  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1139  00174A  D002               	goto	u6440
  1140  00174C  8443               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1141  00174E  D001               	goto	u6455
  1142  001750                     u6440:
  1143  001750  9443               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1144  001752                     u6455:
  1145                           
  1146                           ;telecomando.c: 139: wait_low = 1;
  1147  001752  8643               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1148  001754                     l249:
  1149                           
  1150                           ;telecomando.c: 140: }
  1151                           ;telecomando.c: 141: }
  1152                           ;telecomando.c: 143: if (power_switch == 0) {
  1153  001754  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1154  001756  D090               	goto	l5571
  1155                           
  1156                           ;telecomando.c: 144: dir = 1;
  1157  001758  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1158                           
  1159                           ;telecomando.c: 145: set_speed = 0;
  1160  00175A  0E00               	movlw	0
  1161  00175C  6E0E               	movwf	_set_speed+1,c	;volatile
  1162  00175E  0E00               	movlw	0
  1163  001760  6E0D               	movwf	_set_speed,c	;volatile
  1164                           
  1165                           ;telecomando.c: 146: set_steering = 90;
  1166  001762  0E5A               	movlw	90
  1167  001764  6E18               	movwf	_set_steering,c	;volatile
  1168                           
  1169                           ;telecomando.c: 147: analogic_brake = 0;
  1170  001766  0E00               	movlw	0
  1171  001768  6E14               	movwf	_analogic_brake,c	;volatile
  1172                           
  1173                           ;telecomando.c: 148: USART_Send();
  1174  00176A  EC5A  F017         	call	_USART_Send	;wreg free
  1175                           
  1176                           ;telecomando.c: 149: while (power_switch == 0) {
  1177  00176E  D081               	goto	l5569
  1178  001770                     l5549:
  1179                           
  1180                           ;telecomando.c: 150: LCD_clear();
  1181  001770  EC28  F017         	call	_LCD_clear	;wreg free
  1182                           
  1183                           ;telecomando.c: 151: LCD_goto_line(1);
  1184  001774  0E01               	movlw	1
  1185  001776  EC6F  F013         	call	_LCD_goto_line
  1186                           
  1187                           ;telecomando.c: 152: LCD_write_message("====================");
  1188  00177A  0EBA               	movlw	low STR_1
  1189  00177C  0100               	movlb	0	; () banked
  1190  00177E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1191  001780  0E3F               	movlw	high STR_1
  1192  001782  0100               	movlb	0	; () banked
  1193  001784  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1194  001786  EC89  F017         	call	_LCD_write_message	;wreg free
  1195                           
  1196                           ;telecomando.c: 153: LCD_goto_line(2);
  1197  00178A  0E02               	movlw	2
  1198  00178C  EC6F  F013         	call	_LCD_goto_line
  1199                           
  1200                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1201  001790  0E90               	movlw	low STR_2
  1202  001792  0100               	movlb	0	; () banked
  1203  001794  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1204  001796  0E3F               	movlw	high STR_2
  1205  001798  0100               	movlb	0	; () banked
  1206  00179A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1207  00179C  EC89  F017         	call	_LCD_write_message	;wreg free
  1208                           
  1209                           ;telecomando.c: 155: LCD_goto_line(3);
  1210  0017A0  0E03               	movlw	3
  1211  0017A2  EC6F  F013         	call	_LCD_goto_line
  1212                           
  1213                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1214  0017A6  0E7B               	movlw	low STR_3
  1215  0017A8  0100               	movlb	0	; () banked
  1216  0017AA  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1217  0017AC  0E3F               	movlw	high STR_3
  1218  0017AE  0100               	movlb	0	; () banked
  1219  0017B0  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1220  0017B2  EC89  F017         	call	_LCD_write_message	;wreg free
  1221                           
  1222                           ;telecomando.c: 157: LCD_goto_line(4);
  1223  0017B6  0E04               	movlw	4
  1224  0017B8  EC6F  F013         	call	_LCD_goto_line
  1225                           
  1226                           ;telecomando.c: 158: LCD_write_message("====================");
  1227  0017BC  0EBA               	movlw	low STR_1
  1228  0017BE  0100               	movlb	0	; () banked
  1229  0017C0  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1230  0017C2  0E3F               	movlw	high STR_1
  1231  0017C4  0100               	movlb	0	; () banked
  1232  0017C6  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1233  0017C8  EC89  F017         	call	_LCD_write_message	;wreg free
  1234                           
  1235                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 700) {
  1236  0017CC  C001  F0CA         	movff	_pr_time_1,??_main	;volatile
  1237  0017D0  C002  F0CB         	movff	_pr_time_1+1,??_main+1	;volatile
  1238  0017D4  C003  F0CC         	movff	_pr_time_1+2,??_main+2	;volatile
  1239  0017D8  C004  F0CD         	movff	_pr_time_1+3,??_main+3	;volatile
  1240  0017DC  0100               	movlb	0	; () banked
  1241  0017DE  1FCA               	comf	??_main& (0+255),f,b
  1242  0017E0  1FCB               	comf	(??_main+1)& (0+255),f,b
  1243  0017E2  1FCC               	comf	(??_main+2)& (0+255),f,b
  1244  0017E4  1FCD               	comf	(??_main+3)& (0+255),f,b
  1245  0017E6  2BCA               	incf	??_main& (0+255),f,b
  1246  0017E8  0E00               	movlw	0
  1247  0017EA  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1248  0017EC  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1249  0017EE  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1250  0017F0  5009               	movf	_time_counter,w,c	;volatile
  1251  0017F2  0100               	movlb	0	; () banked
  1252  0017F4  25CA               	addwf	??_main& (0+255),w,b
  1253  0017F6  0100               	movlb	0	; () banked
  1254  0017F8  6FCE               	movwf	(??_main+4)& (0+255),b
  1255  0017FA  500A               	movf	_time_counter+1,w,c	;volatile
  1256  0017FC  0100               	movlb	0	; () banked
  1257  0017FE  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1258  001800  0100               	movlb	0	; () banked
  1259  001802  6FCF               	movwf	(??_main+5)& (0+255),b
  1260  001804  500B               	movf	_time_counter+2,w,c	;volatile
  1261  001806  0100               	movlb	0	; () banked
  1262  001808  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1263  00180A  0100               	movlb	0	; () banked
  1264  00180C  6FD0               	movwf	(??_main+6)& (0+255),b
  1265  00180E  500C               	movf	_time_counter+3,w,c	;volatile
  1266  001810  0100               	movlb	0	; () banked
  1267  001812  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1268  001814  0100               	movlb	0	; () banked
  1269  001816  6FD1               	movwf	(??_main+7)& (0+255),b
  1270  001818  0100               	movlb	0	; () banked
  1271  00181A  51D1               	movf	(??_main+7)& (0+255),w,b
  1272  00181C  0100               	movlb	0	; () banked
  1273  00181E  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1274  001820  E108               	bnz	u6470
  1275  001822  0EBC               	movlw	188
  1276  001824  0100               	movlb	0	; () banked
  1277  001826  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1278  001828  0E02               	movlw	2
  1279  00182A  0100               	movlb	0	; () banked
  1280  00182C  59CF               	subwfb	(??_main+5)& (0+255),w,b
  1281  00182E  A0D8               	btfss	status,0,c
  1282  001830  D019               	goto	l5567
  1283  001832                     u6470:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1287  001832  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1288  001836  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1289  00183A  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1290  00183E  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1294  001842  AE83               	btfss	3971,7,c	;volatile
  1295  001844  D002               	goto	u6480
  1296  001846  0E01               	movlw	1
  1297  001848  D001               	goto	u6486
  1298  00184A                     u6480:
  1299  00184A  0E00               	movlw	0
  1300  00184C                     u6486:
  1301  00184C  0AFF               	xorlw	255
  1302  00184E  0100               	movlb	0	; () banked
  1303  001850  6FCA               	movwf	??_main& (0+255),b
  1304  001852  0100               	movlb	0	; () banked
  1305  001854  33CA               	rrcf	??_main& (0+255),f,b
  1306  001856  33CA               	rrcf	??_main& (0+255),f,b
  1307  001858  5083               	movf	3971,w,c	;volatile
  1308  00185A  0100               	movlb	0	; () banked
  1309  00185C  19CA               	xorwf	??_main& (0+255),w,b
  1310  00185E  0B7F               	andlw	-129
  1311  001860  19CA               	xorwf	??_main& (0+255),w,b
  1312  001862  6E83               	movwf	3971,c	;volatile
  1313  001864                     l5567:
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;telecomando.c: 162: }
  1317                           ;telecomando.c: 163: delay_ms(300);
  1318  001864  0E01               	movlw	1
  1319  001866  0100               	movlb	0	; () banked
  1320  001868  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1321  00186A  0E2C               	movlw	44
  1322  00186C  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1323  00186E  EC41  F017         	call	_delay_ms	;wreg free
  1324  001872                     l5569:
  1325  001872  A443               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1326  001874  D77D               	goto	l5549
  1327                           
  1328                           ;telecomando.c: 164: }
  1329                           ;telecomando.c: 165: PORTDbits.RD7 = 0;
  1330  001876  9E83               	bcf	3971,7,c	;volatile
  1331  001878                     l5571:
  1332                           
  1333                           ;telecomando.c: 166: }
  1334                           ;telecomando.c: 168: Joystick_Polling();
  1335  001878  ECAD  F016         	call	_Joystick_Polling	;wreg free
  1336                           
  1337                           ;telecomando.c: 171: if (PORTAbits.RA2 == 1) {
  1338  00187C  A480               	btfss	3968,2,c	;volatile
  1339  00187E  D003               	goto	l258
  1340                           
  1341                           ;telecomando.c: 172: switch_position = 0;
  1342  001880  0E00               	movlw	0
  1343  001882  6E19               	movwf	_switch_position,c	;volatile
  1344                           
  1345                           ;telecomando.c: 173: } else {
  1346  001884  D009               	goto	l259
  1347  001886                     l258:
  1348                           
  1349                           ;telecomando.c: 174: if (PORTAbits.RA3 == 0) {
  1350  001886  B680               	btfsc	3968,3,c	;volatile
  1351  001888  D004               	goto	l5581
  1352                           
  1353                           ;telecomando.c: 175: switch_position = 1;
  1354  00188A  0E01               	movlw	1
  1355  00188C  6E19               	movwf	_switch_position,c	;volatile
  1356                           
  1357                           ;telecomando.c: 176: dir = 1;
  1358  00188E  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1359                           
  1360                           ;telecomando.c: 177: } else {
  1361  001890  D003               	goto	l259
  1362  001892                     l5581:
  1363                           
  1364                           ;telecomando.c: 178: switch_position = 2;
  1365  001892  0E02               	movlw	2
  1366  001894  6E19               	movwf	_switch_position,c	;volatile
  1367                           
  1368                           ;telecomando.c: 179: dir = 0;
  1369  001896  9243               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1370  001898                     l259:
  1371                           
  1372                           ;telecomando.c: 180: }
  1373                           ;telecomando.c: 181: }
  1374                           ;telecomando.c: 183: if (switch_position != 0) {
  1375  001898  5019               	movf	_switch_position,w,c	;volatile
  1376  00189A  B4D8               	btfsc	status,2,c
  1377  00189C  D074               	goto	l5597
  1378                           
  1379                           ;telecomando.c: 184: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1380  00189E  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1381  0018A2  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1382  0018A6  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1383  0018AA  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1384  0018AE  C022  F0CA         	movff	_JoystickValues,??_main	;volatile
  1385  0018B2  0100               	movlb	0	; () banked
  1386  0018B4  6BCB               	clrf	(??_main+1)& (0+255),b
  1387  0018B6  BFCA               	btfsc	??_main& (0+255),7,b
  1388  0018B8  07CB               	decf	(??_main+1)& (0+255),f,b
  1389  0018BA  0E80               	movlw	128
  1390  0018BC  0100               	movlb	0	; () banked
  1391  0018BE  27CA               	addwf	??_main& (0+255),f,b
  1392  0018C0  0E00               	movlw	0
  1393  0018C2  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1394  0018C4  C0CA  F070         	movff	??_main,___xxtofl@val
  1395  0018C8  C0CB  F071         	movff	??_main+1,___xxtofl@val+1
  1396  0018CC  0100               	movlb	0	; () banked
  1397  0018CE  0E00               	movlw	0
  1398  0018D0  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1399  0018D2  0EFF               	movlw	-1
  1400  0018D4  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1401  0018D6  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1402  0018D8  0E01               	movlw	1
  1403  0018DA  EC9A  F00E         	call	___xxtofl
  1404  0018DE  C070  F07E         	movff	?___xxtofl,___flmul@b
  1405  0018E2  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1406  0018E6  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1407  0018EA  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1408  0018EE  ECE4  F006         	call	___flmul	;wreg free
  1409  0018F2  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1410  0018F6  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1411  0018FA  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1412  0018FE  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1413  001902  ECE9  F012         	call	___fltol	;wreg free
  1414  001906  0100               	movlb	0	; () banked
  1415  001908  51A0               	movf	?___fltol& (0+255),w,b
  1416  00190A  6E18               	movwf	_set_steering,c	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;telecomando.c: 185: if (JoystickValues[1] > 0) {
  1420  00190C  5023               	movf	_JoystickValues+1,w,c	;volatile
  1421  00190E  0A80               	xorlw	128
  1422  001910  0F7F               	addlw	-129
  1423  001912  A0D8               	btfss	status,0,c
  1424  001914  D02E               	goto	l5593
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;telecomando.c: 186: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1428  001916  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1429  00191A  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1430  00191E  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1431  001922  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1432  001926  5023               	movf	_JoystickValues+1,w,c	;volatile
  1433  001928  0100               	movlb	0	; () banked
  1434  00192A  6F70               	movwf	___xxtofl@val& (0+255),b
  1435  00192C  0E00               	movlw	0
  1436  00192E  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1437  001930  0EFF               	movlw	-1
  1438  001932  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1439  001934  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1440  001936  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1441  001938  0E01               	movlw	1
  1442  00193A  EC9A  F00E         	call	___xxtofl
  1443  00193E  C070  F07E         	movff	?___xxtofl,___flmul@b
  1444  001942  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1445  001946  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1446  00194A  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1447  00194E  ECE4  F006         	call	___flmul	;wreg free
  1448  001952  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1449  001956  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1450  00195A  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1451  00195E  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1452  001962  ECE9  F012         	call	___fltol	;wreg free
  1453  001966  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1454  00196A  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1455                           
  1456                           ;telecomando.c: 187: analogic_brake = 0;
  1457  00196E  0E00               	movlw	0
  1458  001970  D008               	goto	L1
  1459  001972                     l5593:
  1460                           
  1461                           ;telecomando.c: 189: set_speed = 0;
  1462  001972  0E00               	movlw	0
  1463  001974  6E0E               	movwf	_set_speed+1,c	;volatile
  1464  001976  0E00               	movlw	0
  1465  001978  6E0D               	movwf	_set_speed,c	;volatile
  1466                           
  1467                           ;telecomando.c: 190: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1468  00197A  5023               	movf	_JoystickValues+1,w,c	;volatile
  1469  00197C  0D02               	mullw	2
  1470  00197E  28F3               	incf	prodl,w,c
  1471  001980  0800               	sublw	0
  1472  001982                     L1:
  1473  001982  6E14               	movwf	_analogic_brake,c	;volatile
  1474                           
  1475                           ;telecomando.c: 191: }
  1476                           ;telecomando.c: 192: } else {
  1477  001984  D005               	goto	l5601
  1478  001986                     l5597:
  1479                           
  1480                           ;telecomando.c: 193: set_speed = 0;
  1481  001986  0E00               	movlw	0
  1482  001988  6E0E               	movwf	_set_speed+1,c	;volatile
  1483  00198A  0E00               	movlw	0
  1484  00198C  6E0D               	movwf	_set_speed,c	;volatile
  1485                           
  1486                           ;telecomando.c: 194: analogic_brake = 255;
  1487  00198E  6814               	setf	_analogic_brake,c	;volatile
  1488  001990                     l5601:
  1489                           
  1490                           ;telecomando.c: 195: }
  1491                           ;telecomando.c: 197: if ((time_counter - pr_time_2) >= 1) {
  1492  001990  C005  F0CA         	movff	_pr_time_2,??_main	;volatile
  1493  001994  C006  F0CB         	movff	_pr_time_2+1,??_main+1	;volatile
  1494  001998  C007  F0CC         	movff	_pr_time_2+2,??_main+2	;volatile
  1495  00199C  C008  F0CD         	movff	_pr_time_2+3,??_main+3	;volatile
  1496  0019A0  0100               	movlb	0	; () banked
  1497  0019A2  1FCA               	comf	??_main& (0+255),f,b
  1498  0019A4  1FCB               	comf	(??_main+1)& (0+255),f,b
  1499  0019A6  1FCC               	comf	(??_main+2)& (0+255),f,b
  1500  0019A8  1FCD               	comf	(??_main+3)& (0+255),f,b
  1501  0019AA  2BCA               	incf	??_main& (0+255),f,b
  1502  0019AC  0E00               	movlw	0
  1503  0019AE  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1504  0019B0  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1505  0019B2  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1506  0019B4  5009               	movf	_time_counter,w,c	;volatile
  1507  0019B6  0100               	movlb	0	; () banked
  1508  0019B8  25CA               	addwf	??_main& (0+255),w,b
  1509  0019BA  0100               	movlb	0	; () banked
  1510  0019BC  6FCE               	movwf	(??_main+4)& (0+255),b
  1511  0019BE  500A               	movf	_time_counter+1,w,c	;volatile
  1512  0019C0  0100               	movlb	0	; () banked
  1513  0019C2  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1514  0019C4  0100               	movlb	0	; () banked
  1515  0019C6  6FCF               	movwf	(??_main+5)& (0+255),b
  1516  0019C8  500B               	movf	_time_counter+2,w,c	;volatile
  1517  0019CA  0100               	movlb	0	; () banked
  1518  0019CC  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1519  0019CE  0100               	movlb	0	; () banked
  1520  0019D0  6FD0               	movwf	(??_main+6)& (0+255),b
  1521  0019D2  500C               	movf	_time_counter+3,w,c	;volatile
  1522  0019D4  0100               	movlb	0	; () banked
  1523  0019D6  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1524  0019D8  0100               	movlb	0	; () banked
  1525  0019DA  6FD1               	movwf	(??_main+7)& (0+255),b
  1526  0019DC  0100               	movlb	0	; () banked
  1527  0019DE  51CE               	movf	(??_main+4)& (0+255),w,b
  1528  0019E0  0100               	movlb	0	; () banked
  1529  0019E2  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1530  0019E4  0100               	movlb	0	; () banked
  1531  0019E6  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1532  0019E8  0100               	movlb	0	; () banked
  1533  0019EA  11D1               	iorwf	(??_main+7)& (0+255),w,b
  1534  0019EC  B4D8               	btfsc	status,2,c
  1535  0019EE  D00A               	goto	l5607
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;telecomando.c: 198: pr_time_2 = time_counter;
  1539  0019F0  C009  F005         	movff	_time_counter,_pr_time_2	;volatile
  1540  0019F4  C00A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1541  0019F8  C00B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1542  0019FC  C00C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;telecomando.c: 199: USART_Send();
  1546  001A00  EC5A  F017         	call	_USART_Send	;wreg free
  1547  001A04                     l5607:
  1548                           
  1549                           ;telecomando.c: 200: }
  1550                           ;telecomando.c: 202: if ((time_counter - pr_time_3) >= 30) {
  1551  001A04  C0DC  F0CA         	movff	_pr_time_3,??_main	;volatile
  1552  001A08  C0DD  F0CB         	movff	_pr_time_3+1,??_main+1	;volatile
  1553  001A0C  C0DE  F0CC         	movff	_pr_time_3+2,??_main+2	;volatile
  1554  001A10  C0DF  F0CD         	movff	_pr_time_3+3,??_main+3	;volatile
  1555  001A14  0100               	movlb	0	; () banked
  1556  001A16  1FCA               	comf	??_main& (0+255),f,b
  1557  001A18  1FCB               	comf	(??_main+1)& (0+255),f,b
  1558  001A1A  1FCC               	comf	(??_main+2)& (0+255),f,b
  1559  001A1C  1FCD               	comf	(??_main+3)& (0+255),f,b
  1560  001A1E  2BCA               	incf	??_main& (0+255),f,b
  1561  001A20  0E00               	movlw	0
  1562  001A22  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1563  001A24  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1564  001A26  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1565  001A28  5009               	movf	_time_counter,w,c	;volatile
  1566  001A2A  0100               	movlb	0	; () banked
  1567  001A2C  25CA               	addwf	??_main& (0+255),w,b
  1568  001A2E  0100               	movlb	0	; () banked
  1569  001A30  6FCE               	movwf	(??_main+4)& (0+255),b
  1570  001A32  500A               	movf	_time_counter+1,w,c	;volatile
  1571  001A34  0100               	movlb	0	; () banked
  1572  001A36  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1573  001A38  0100               	movlb	0	; () banked
  1574  001A3A  6FCF               	movwf	(??_main+5)& (0+255),b
  1575  001A3C  500B               	movf	_time_counter+2,w,c	;volatile
  1576  001A3E  0100               	movlb	0	; () banked
  1577  001A40  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1578  001A42  0100               	movlb	0	; () banked
  1579  001A44  6FD0               	movwf	(??_main+6)& (0+255),b
  1580  001A46  500C               	movf	_time_counter+3,w,c	;volatile
  1581  001A48  0100               	movlb	0	; () banked
  1582  001A4A  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1583  001A4C  0100               	movlb	0	; () banked
  1584  001A4E  6FD1               	movwf	(??_main+7)& (0+255),b
  1585  001A50  0100               	movlb	0	; () banked
  1586  001A52  51D1               	movf	(??_main+7)& (0+255),w,b
  1587  001A54  0100               	movlb	0	; () banked
  1588  001A56  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1589  001A58  0100               	movlb	0	; () banked
  1590  001A5A  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1591  001A5C  E105               	bnz	u6550
  1592  001A5E  0E1E               	movlw	30
  1593  001A60  0100               	movlb	0	; () banked
  1594  001A62  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1595  001A64  A0D8               	btfss	status,0,c
  1596  001A66  D669               	goto	l5537
  1597  001A68                     u6550:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;telecomando.c: 203: pr_time_3 = time_counter;
  1601  001A68  C009  F0DC         	movff	_time_counter,_pr_time_3	;volatile
  1602  001A6C  C00A  F0DD         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1603  001A70  C00B  F0DE         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1604  001A74  C00C  F0DF         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;telecomando.c: 204: LCD_Handler();
  1608  001A78  EC5E  F012         	call	_LCD_Handler	;wreg free
  1609  001A7C  D65E               	goto	l5537
  1610  001A7E                     __end_of_main:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodl	equ	0xFF3
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _board_initialization *****************
  1622 ;; Defined at:
  1623 ;;		line 263 in file "telecomando.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1637 ;;      Params:         0       0       0       0
  1638 ;;      Locals:         0       0       0       0
  1639 ;;      Temps:          0       0       0       0
  1640 ;;      Totals:         0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:   10
  1644 ;; This function calls:
  1645 ;;		_LCD_backlight
  1646 ;;		_LCD_clear
  1647 ;;		_LCD_goto_line
  1648 ;;		_LCD_initialize
  1649 ;;		_LCD_write_message
  1650 ;;		_OpenUSART
  1651 ;;		_delay_ms
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658  002966                     __ptext1:
  1659                           	opt stack 0
  1660  002966                     _board_initialization:
  1661                           	opt stack 20
  1662                           
  1663                           ;telecomando.c: 265: LATA = 0x00;
  1664                           
  1665                           ;incstack = 0
  1666  002966  0E00               	movlw	0
  1667  002968  6E89               	movwf	3977,c	;volatile
  1668                           
  1669                           ;telecomando.c: 266: TRISA = 0b00001111;
  1670  00296A  0E0F               	movlw	15
  1671  00296C  6E92               	movwf	3986,c	;volatile
  1672                           
  1673                           ;telecomando.c: 267: LATB = 0x00;
  1674  00296E  0E00               	movlw	0
  1675  002970  6E8A               	movwf	3978,c	;volatile
  1676                           
  1677                           ;telecomando.c: 268: TRISB = 0xFF;
  1678  002972  6893               	setf	3987,c	;volatile
  1679                           
  1680                           ;telecomando.c: 269: LATC = 0x00;
  1681  002974  0E00               	movlw	0
  1682  002976  6E8B               	movwf	3979,c	;volatile
  1683                           
  1684                           ;telecomando.c: 270: TRISC = 0b11110000;
  1685  002978  0EF0               	movlw	240
  1686  00297A  6E94               	movwf	3988,c	;volatile
  1687                           
  1688                           ;telecomando.c: 271: LATD = 0x00;
  1689  00297C  0E00               	movlw	0
  1690  00297E  6E8C               	movwf	3980,c	;volatile
  1691                           
  1692                           ;telecomando.c: 272: TRISD = 0x01111100;
  1693  002980  0E00               	movlw	0
  1694  002982  6E95               	movwf	3989,c	;volatile
  1695                           
  1696                           ;telecomando.c: 273: LATE = 0x00;
  1697  002984  0E00               	movlw	0
  1698  002986  6E8D               	movwf	3981,c	;volatile
  1699                           
  1700                           ;telecomando.c: 274: TRISE = 0xFF;
  1701  002988  6896               	setf	3990,c	;volatile
  1702                           
  1703                           ;telecomando.c: 277: LCD_initialize(16);
  1704  00298A  0E10               	movlw	16
  1705  00298C  EC4A  F010         	call	_LCD_initialize
  1706                           
  1707                           ;telecomando.c: 278: LCD_backlight(0);
  1708  002990  0E00               	movlw	0
  1709  002992  EC26  F018         	call	_LCD_backlight
  1710                           
  1711                           ;telecomando.c: 279: LCD_clear();
  1712  002996  EC28  F017         	call	_LCD_clear	;wreg free
  1713                           
  1714                           ;telecomando.c: 280: LCD_goto_line(1);
  1715  00299A  0E01               	movlw	1
  1716  00299C  EC6F  F013         	call	_LCD_goto_line
  1717                           
  1718                           ;telecomando.c: 281: LCD_write_message("Wait...");
  1719  0029A0  0EE7               	movlw	low STR_13
  1720  0029A2  0100               	movlb	0	; () banked
  1721  0029A4  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1722  0029A6  0E3F               	movlw	high STR_13
  1723  0029A8  0100               	movlb	0	; () banked
  1724  0029AA  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1725  0029AC  EC89  F017         	call	_LCD_write_message	;wreg free
  1726                           
  1727                           ;telecomando.c: 284: PIR1bits.RCIF = 0;
  1728  0029B0  9A9E               	bcf	3998,5,c	;volatile
  1729                           
  1730                           ;telecomando.c: 285: PIR2bits.TMR3IF = 0;
  1731  0029B2  92A1               	bcf	4001,1,c	;volatile
  1732                           
  1733                           ;telecomando.c: 288: RCONbits.IPEN = 1;
  1734  0029B4  8ED0               	bsf	4048,7,c	;volatile
  1735                           
  1736                           ;telecomando.c: 289: IPR1bits.RCIP = 1;
  1737  0029B6  8A9F               	bsf	3999,5,c	;volatile
  1738                           
  1739                           ;telecomando.c: 290: IPR2bits.TMR3IP = 0;
  1740  0029B8  92A2               	bcf	4002,1,c	;volatile
  1741                           
  1742                           ;telecomando.c: 293: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1743  0029BA  0E4F               	movlw	79
  1744  0029BC  16AB               	andwf	4011,f,c	;volatile
  1745  0029BE  9AAC               	bcf	4012,5,c	;volatile
  1746  0029C0  0ECF               	movlw	207
  1747  0029C2  169D               	andwf	3997,f,c	;volatile
  1748                           
  1749                           ;telecomando.c: 294: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1750                           ;telecomando.c: 295: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1751  0029C4  0E00               	movlw	0
  1752  0029C6  6E3D               	movwf	OpenUSART@spbrg+1,c
  1753  0029C8  0E67               	movlw	103
  1754  0029CA  6E3C               	movwf	OpenUSART@spbrg,c
  1755  0029CC  0E7C               	movlw	124
  1756  0029CE  EC30  F016         	call	_OpenUSART
  1757                           
  1758                           ;telecomando.c: 298: ADCON1 = 0b00001101;
  1759  0029D2  0E0D               	movlw	13
  1760  0029D4  6EC1               	movwf	4033,c	;volatile
  1761                           
  1762                           ;telecomando.c: 299: ADCON0bits.CHS2 = 0;
  1763  0029D6  98C2               	bcf	4034,4,c	;volatile
  1764                           
  1765                           ;telecomando.c: 300: ADCON0bits.CHS1 = 0;
  1766  0029D8  96C2               	bcf	4034,3,c	;volatile
  1767                           
  1768                           ;telecomando.c: 301: ADCON0bits.CHS0 = 0;
  1769  0029DA  94C2               	bcf	4034,2,c	;volatile
  1770                           
  1771                           ;telecomando.c: 302: ADCON2bits.ACQT2 = 1;
  1772  0029DC  8AC0               	bsf	4032,5,c	;volatile
  1773                           
  1774                           ;telecomando.c: 303: ADCON2bits.ACQT1 = 1;
  1775  0029DE  88C0               	bsf	4032,4,c	;volatile
  1776                           
  1777                           ;telecomando.c: 304: ADCON2bits.ACQT0 = 0;
  1778  0029E0  96C0               	bcf	4032,3,c	;volatile
  1779                           
  1780                           ;telecomando.c: 305: ADCON2bits.ADCS2 = 1;
  1781  0029E2  84C0               	bsf	4032,2,c	;volatile
  1782                           
  1783                           ;telecomando.c: 306: ADCON2bits.ADCS1 = 0;
  1784  0029E4  92C0               	bcf	4032,1,c	;volatile
  1785                           
  1786                           ;telecomando.c: 307: ADCON2bits.ADCS0 = 1;
  1787  0029E6  80C0               	bsf	4032,0,c	;volatile
  1788                           
  1789                           ;telecomando.c: 308: ADCON2bits.ADFM = 0;
  1790  0029E8  9EC0               	bcf	4032,7,c	;volatile
  1791                           
  1792                           ;telecomando.c: 309: ADCON0bits.ADON = 1;
  1793  0029EA  80C2               	bsf	4034,0,c	;volatile
  1794                           
  1795                           ;telecomando.c: 312: TMR3H = 0x63;
  1796  0029EC  0E63               	movlw	99
  1797  0029EE  6EB3               	movwf	4019,c	;volatile
  1798                           
  1799                           ;telecomando.c: 313: TMR3L = 0xC0;
  1800  0029F0  0EC0               	movlw	192
  1801  0029F2  6EB2               	movwf	4018,c	;volatile
  1802                           
  1803                           ;telecomando.c: 316: PIE1bits.RCIE = 1;
  1804  0029F4  8A9D               	bsf	3997,5,c	;volatile
  1805                           
  1806                           ;telecomando.c: 317: PIE2bits.TMR3IE = 1;
  1807  0029F6  82A0               	bsf	4000,1,c	;volatile
  1808                           
  1809                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
  1810  0029F8  8EF2               	bsf	intcon,7,c	;volatile
  1811                           
  1812                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
  1813  0029FA  8CF2               	bsf	intcon,6,c	;volatile
  1814                           
  1815                           ;telecomando.c: 321: RCSTAbits.SPEN = 1;
  1816  0029FC  8EAB               	bsf	4011,7,c	;volatile
  1817                           
  1818                           ;telecomando.c: 322: delay_ms(2);
  1819  0029FE  0E00               	movlw	0
  1820  002A00  0100               	movlb	0	; () banked
  1821  002A02  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1822  002A04  0E02               	movlw	2
  1823  002A06  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1824  002A08  EC41  F017         	call	_delay_ms	;wreg free
  1825                           
  1826                           ;telecomando.c: 323: T3CON = 0x01;
  1827  002A0C  0E01               	movlw	1
  1828  002A0E  6EB1               	movwf	4017,c	;volatile
  1829                           
  1830                           ;telecomando.c: 324: LCD_clear();
  1831  002A10  EC28  F017         	call	_LCD_clear	;wreg free
  1832  002A14  0012               	return		;funcret
  1833  002A16                     __end_of_board_initialization:
  1834                           	opt stack 0
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _OpenUSART *****************
  1846 ;; Defined at:
  1847 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  config          1    wreg     unsigned char 
  1850 ;;  spbrg           2   24[COMRAM] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  config          1   26[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		wreg, status,2
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1862 ;;      Params:         2       0       0       0
  1863 ;;      Locals:         1       0       0       0
  1864 ;;      Temps:          0       0       0       0
  1865 ;;      Totals:         3       0       0       0
  1866 ;;Total ram usage:        3 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    4
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_board_initialization
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text2
  1877  002C60                     __ptext2:
  1878                           	opt stack 0
  1879  002C60                     _OpenUSART:
  1880                           	opt stack 25
  1881                           
  1882                           ;incstack = 0
  1883                           ;OpenUSART@config stored from wreg
  1884  002C60  6E3E               	movwf	OpenUSART@config,c
  1885  002C62  0E00               	movlw	0
  1886  002C64  6EAC               	movwf	4012,c	;volatile
  1887  002C66  0E00               	movlw	0
  1888  002C68  6EAB               	movwf	4011,c	;volatile
  1889  002C6A  B03E               	btfsc	OpenUSART@config,0,c
  1890  002C6C  88AC               	bsf	4012,4,c	;volatile
  1891  002C6E  A23E               	btfss	OpenUSART@config,1,c
  1892  002C70  D002               	goto	l3783
  1893  002C72  8CAC               	bsf	4012,6,c	;volatile
  1894  002C74  8CAB               	bsf	4011,6,c	;volatile
  1895  002C76                     l3783:
  1896  002C76  B43E               	btfsc	OpenUSART@config,2,c
  1897  002C78  8EAC               	bsf	4012,7,c	;volatile
  1898  002C7A  A63E               	btfss	OpenUSART@config,3,c
  1899  002C7C  D002               	goto	l421
  1900  002C7E  88AB               	bsf	4011,4,c	;volatile
  1901  002C80  D001               	goto	l3791
  1902  002C82                     l421:
  1903  002C82  8AAB               	bsf	4011,5,c	;volatile
  1904  002C84                     l3791:
  1905  002C84  B83E               	btfsc	OpenUSART@config,4,c
  1906  002C86  84AC               	bsf	4012,2,c	;volatile
  1907  002C88  989E               	bcf	3998,4,c	;volatile
  1908  002C8A  BA3E               	btfsc	OpenUSART@config,5,c
  1909  002C8C  86AB               	bsf	4011,3,c	;volatile
  1910  002C8E  AC3E               	btfss	OpenUSART@config,6,c
  1911  002C90  D002               	goto	l425
  1912  002C92  8A9D               	bsf	3997,5,c	;volatile
  1913  002C94  D001               	goto	l426
  1914  002C96                     l425:
  1915  002C96  9A9D               	bcf	3997,5,c	;volatile
  1916  002C98                     l426:
  1917  002C98  9A9E               	bcf	3998,5,c	;volatile
  1918  002C9A  AE3E               	btfss	OpenUSART@config,7,c
  1919  002C9C  D002               	goto	l427
  1920  002C9E  889D               	bsf	3997,4,c	;volatile
  1921  002CA0  D001               	goto	l428
  1922  002CA2                     l427:
  1923  002CA2  989D               	bcf	3997,4,c	;volatile
  1924  002CA4                     l428:
  1925  002CA4  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1926  002CA8  503D               	movf	OpenUSART@spbrg+1,w,c
  1927  002CAA  6EB0               	movwf	4016,c	;volatile
  1928  002CAC  8AAC               	bsf	4012,5,c	;volatile
  1929  002CAE  8EAB               	bsf	4011,7,c	;volatile
  1930  002CB0  9C94               	bcf	3988,6,c	;volatile
  1931  002CB2  8E94               	bsf	3988,7,c	;volatile
  1932  002CB4  A8AC               	btfss	4012,4,c	;volatile
  1933  002CB6  0012               	return	
  1934  002CB8  BEAC               	btfsc	4012,7,c	;volatile
  1935  002CBA  0012               	return	
  1936  002CBC  8C94               	bsf	3988,6,c	;volatile
  1937  002CBE  0012               	return	
  1938  002CC0                     __end_of_OpenUSART:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           prodl	equ	0xFF3
  1945                           intcon	equ	0xFF2
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _LCD_initialize *****************
  1951 ;; Defined at:
  1952 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  quartz_frequ    1    wreg     unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;		None               void
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1966 ;;      Params:         0       0       0       0
  1967 ;;      Locals:         0       1       0       0
  1968 ;;      Temps:          0       0       0       0
  1969 ;;      Totals:         0       1       0       0
  1970 ;;Total ram usage:        1 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    9
  1973 ;; This function calls:
  1974 ;;		_LCD_clear
  1975 ;;		_LCD_cursor
  1976 ;;		_LCD_send_command
  1977 ;;		_delay_ms
  1978 ;;		_delay_set_quartz
  1979 ;; This function is called by:
  1980 ;;		_board_initialization
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text3
  1985  002094                     __ptext3:
  1986                           	opt stack 0
  1987  002094                     _LCD_initialize:
  1988                           	opt stack 20
  1989                           
  1990                           ;incstack = 0
  1991                           ;LCD_initialize@quartz_frequency stored from wreg
  1992  002094  0100               	movlb	0	; () banked
  1993  002096  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  1994                           
  1995                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  1996  002098  0100               	movlb	0	; () banked
  1997  00209A  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  1998  00209C  EC2D  F018         	call	_delay_set_quartz
  1999                           
  2000                           ;src\LCD_44780.c: 287: LATAbits.LATA6 = 0x00;
  2001  0020A0  9C89               	bcf	3977,6,c	;volatile
  2002                           
  2003                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2004  0020A2  928B               	bcf	3979,1,c	;volatile
  2005                           
  2006                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2007  0020A4  908B               	bcf	3979,0,c	;volatile
  2008                           
  2009                           ;src\LCD_44780.c: 291: delay_ms (100);
  2010  0020A6  0E00               	movlw	0
  2011  0020A8  0100               	movlb	0	; () banked
  2012  0020AA  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2013  0020AC  0E64               	movlw	100
  2014  0020AE  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2015  0020B0  EC41  F017         	call	_delay_ms	;wreg free
  2016                           
  2017                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2018  0020B4  0E00               	movlw	0
  2019  0020B6  0100               	movlb	0	; () banked
  2020  0020B8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2021  0020BA  0E01               	movlw	1
  2022  0020BC  0100               	movlb	0	; () banked
  2023  0020BE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2024  0020C0  0E01               	movlw	1
  2025  0020C2  0100               	movlb	0	; () banked
  2026  0020C4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2027  0020C6  0E00               	movlw	0
  2028  0020C8  ECF4  F016         	call	_LCD_send_command
  2029                           
  2030                           ;src\LCD_44780.c: 293: delay_ms (100);
  2031  0020CC  0E00               	movlw	0
  2032  0020CE  0100               	movlb	0	; () banked
  2033  0020D0  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2034  0020D2  0E64               	movlw	100
  2035  0020D4  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2036  0020D6  EC41  F017         	call	_delay_ms	;wreg free
  2037                           
  2038                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2039  0020DA  0E00               	movlw	0
  2040  0020DC  0100               	movlb	0	; () banked
  2041  0020DE  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2042  0020E0  0E01               	movlw	1
  2043  0020E2  0100               	movlb	0	; () banked
  2044  0020E4  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2045  0020E6  0E01               	movlw	1
  2046  0020E8  0100               	movlb	0	; () banked
  2047  0020EA  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2048  0020EC  0E00               	movlw	0
  2049  0020EE  ECF4  F016         	call	_LCD_send_command
  2050                           
  2051                           ;src\LCD_44780.c: 295: delay_ms (10);
  2052  0020F2  0E00               	movlw	0
  2053  0020F4  0100               	movlb	0	; () banked
  2054  0020F6  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2055  0020F8  0E0A               	movlw	10
  2056  0020FA  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2057  0020FC  EC41  F017         	call	_delay_ms	;wreg free
  2058                           
  2059                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2060  002100  0E00               	movlw	0
  2061  002102  0100               	movlb	0	; () banked
  2062  002104  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2063  002106  0E01               	movlw	1
  2064  002108  0100               	movlb	0	; () banked
  2065  00210A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2066  00210C  0E01               	movlw	1
  2067  00210E  0100               	movlb	0	; () banked
  2068  002110  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2069  002112  0E00               	movlw	0
  2070  002114  ECF4  F016         	call	_LCD_send_command
  2071                           
  2072                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2073  002118  0E00               	movlw	0
  2074  00211A  0100               	movlb	0	; () banked
  2075  00211C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2076  00211E  0E01               	movlw	1
  2077  002120  0100               	movlb	0	; () banked
  2078  002122  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2079  002124  0E00               	movlw	0
  2080  002126  0100               	movlb	0	; () banked
  2081  002128  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2082  00212A  0E00               	movlw	0
  2083  00212C  ECF4  F016         	call	_LCD_send_command
  2084                           
  2085                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2086  002130  0E00               	movlw	0
  2087  002132  0100               	movlb	0	; () banked
  2088  002134  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2089  002136  0E01               	movlw	1
  2090  002138  0100               	movlb	0	; () banked
  2091  00213A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2092  00213C  0E00               	movlw	0
  2093  00213E  0100               	movlb	0	; () banked
  2094  002140  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2095  002142  0E00               	movlw	0
  2096  002144  ECF4  F016         	call	_LCD_send_command
  2097                           
  2098                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2099  002148  0E00               	movlw	0
  2100  00214A  0100               	movlb	0	; () banked
  2101  00214C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2102  00214E  0E00               	movlw	0
  2103  002150  0100               	movlb	0	; () banked
  2104  002152  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2105  002154  0E00               	movlw	0
  2106  002156  0100               	movlb	0	; () banked
  2107  002158  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2108  00215A  0E01               	movlw	1
  2109  00215C  ECF4  F016         	call	_LCD_send_command
  2110                           
  2111                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2112  002160  0E00               	movlw	0
  2113  002162  0100               	movlb	0	; () banked
  2114  002164  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2115  002166  0E00               	movlw	0
  2116  002168  0100               	movlb	0	; () banked
  2117  00216A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2118  00216C  0E00               	movlw	0
  2119  00216E  0100               	movlb	0	; () banked
  2120  002170  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2121  002172  0E00               	movlw	0
  2122  002174  ECF4  F016         	call	_LCD_send_command
  2123                           
  2124                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2125  002178  0E00               	movlw	0
  2126  00217A  0100               	movlb	0	; () banked
  2127  00217C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2128  00217E  0E00               	movlw	0
  2129  002180  0100               	movlb	0	; () banked
  2130  002182  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2131  002184  0E00               	movlw	0
  2132  002186  0100               	movlb	0	; () banked
  2133  002188  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2134  00218A  0E01               	movlw	1
  2135  00218C  ECF4  F016         	call	_LCD_send_command
  2136                           
  2137                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2138  002190  0E00               	movlw	0
  2139  002192  0100               	movlb	0	; () banked
  2140  002194  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2141  002196  0E00               	movlw	0
  2142  002198  0100               	movlb	0	; () banked
  2143  00219A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2144  00219C  0E00               	movlw	0
  2145  00219E  0100               	movlb	0	; () banked
  2146  0021A0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2147  0021A2  0E00               	movlw	0
  2148  0021A4  ECF4  F016         	call	_LCD_send_command
  2149                           
  2150                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2151  0021A8  0E00               	movlw	0
  2152  0021AA  0100               	movlb	0	; () banked
  2153  0021AC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2154  0021AE  0E00               	movlw	0
  2155  0021B0  0100               	movlb	0	; () banked
  2156  0021B2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2157  0021B4  0E01               	movlw	1
  2158  0021B6  0100               	movlb	0	; () banked
  2159  0021B8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2160  0021BA  0E00               	movlw	0
  2161  0021BC  ECF4  F016         	call	_LCD_send_command
  2162                           
  2163                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2164  0021C0  0E00               	movlw	0
  2165  0021C2  0100               	movlb	0	; () banked
  2166  0021C4  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2167  0021C6  0E00               	movlw	0
  2168  0021C8  0100               	movlb	0	; () banked
  2169  0021CA  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2170  0021CC  0E00               	movlw	0
  2171  0021CE  0100               	movlb	0	; () banked
  2172  0021D0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2173  0021D2  0E00               	movlw	0
  2174  0021D4  ECF4  F016         	call	_LCD_send_command
  2175                           
  2176                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2177  0021D8  0E01               	movlw	1
  2178  0021DA  0100               	movlb	0	; () banked
  2179  0021DC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2180  0021DE  0E01               	movlw	1
  2181  0021E0  0100               	movlb	0	; () banked
  2182  0021E2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2183  0021E4  0E00               	movlw	0
  2184  0021E6  0100               	movlb	0	; () banked
  2185  0021E8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2186  0021EA  0E00               	movlw	0
  2187  0021EC  ECF4  F016         	call	_LCD_send_command
  2188                           
  2189                           ;src\LCD_44780.c: 312: LCD_clear ();
  2190  0021F0  EC28  F017         	call	_LCD_clear	;wreg free
  2191                           
  2192                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2193  0021F4  0E00               	movlw	0
  2194  0021F6  0100               	movlb	0	; () banked
  2195  0021F8  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  2196  0021FA  0E00               	movlw	0
  2197  0021FC  EC0F  F017         	call	_LCD_cursor
  2198  002200  0012               	return		;funcret
  2199  002202                     __end_of_LCD_initialize:
  2200                           	opt stack 0
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           prodl	equ	0xFF3
  2206                           intcon	equ	0xFF2
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function _delay_set_quartz *****************
  2212 ;; Defined at:
  2213 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  frequency       1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  frequency       1   24[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;		None               void
  2220 ;; Registers used:
  2221 ;;		wreg
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2227 ;;      Params:         0       0       0       0
  2228 ;;      Locals:         1       0       0       0
  2229 ;;      Temps:          0       0       0       0
  2230 ;;      Totals:         1       0       0       0
  2231 ;;Total ram usage:        1 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    4
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_LCD_initialize
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text4
  2242  00305A                     __ptext4:
  2243                           	opt stack 0
  2244  00305A                     _delay_set_quartz:
  2245                           	opt stack 24
  2246                           
  2247                           ;incstack = 0
  2248                           ;delay_set_quartz@frequency stored from wreg
  2249  00305A  6E3C               	movwf	delay_set_quartz@frequency,c
  2250                           
  2251                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2252  00305C  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2253  003060  0012               	return		;funcret
  2254  003062                     __end_of_delay_set_quartz:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           prodl	equ	0xFF3
  2261                           intcon	equ	0xFF2
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _LCD_cursor *****************
  2267 ;; Defined at:
  2268 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  active          1    wreg     unsigned char 
  2271 ;;  blinking        1   21[BANK0 ] unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  active          1   22[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2283 ;;      Params:         0       1       0       0
  2284 ;;      Locals:         0       1       0       0
  2285 ;;      Temps:          0       0       0       0
  2286 ;;      Totals:         0       2       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    8
  2290 ;; This function calls:
  2291 ;;		_LCD_send_command
  2292 ;; This function is called by:
  2293 ;;		_LCD_initialize
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text5
  2298  002E1E                     __ptext5:
  2299                           	opt stack 0
  2300  002E1E                     _LCD_cursor:
  2301                           	opt stack 20
  2302                           
  2303                           ;incstack = 0
  2304                           ;LCD_cursor@active stored from wreg
  2305  002E1E  0100               	movlb	0	; () banked
  2306  002E20  6F76               	movwf	LCD_cursor@active& (0+255),b
  2307                           
  2308                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2309  002E22  0E00               	movlw	0
  2310  002E24  0100               	movlb	0	; () banked
  2311  002E26  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2312  002E28  0E00               	movlw	0
  2313  002E2A  0100               	movlb	0	; () banked
  2314  002E2C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2315  002E2E  0E00               	movlw	0
  2316  002E30  0100               	movlb	0	; () banked
  2317  002E32  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2318  002E34  0E00               	movlw	0
  2319  002E36  ECF4  F016         	call	_LCD_send_command
  2320                           
  2321                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2322  002E3A  0E01               	movlw	1
  2323  002E3C  0100               	movlb	0	; () banked
  2324  002E3E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2325  002E40  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2326  002E44  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2327  002E48  0E01               	movlw	1
  2328  002E4A  ECF4  F016         	call	_LCD_send_command
  2329  002E4E  0012               	return		;funcret
  2330  002E50                     __end_of_LCD_cursor:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           prodl	equ	0xFF3
  2337                           intcon	equ	0xFF2
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _LCD_backlight *****************
  2343 ;; Defined at:
  2344 ;;		line 275 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  active          1    wreg     unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  active          1   24[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2358 ;;      Params:         0       0       0       0
  2359 ;;      Locals:         1       0       0       0
  2360 ;;      Temps:          0       0       0       0
  2361 ;;      Totals:         1       0       0       0
  2362 ;;Total ram usage:        1 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    4
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_board_initialization
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text6
  2373  00304C                     __ptext6:
  2374                           	opt stack 0
  2375  00304C                     _LCD_backlight:
  2376                           	opt stack 25
  2377                           
  2378                           ;incstack = 0
  2379                           ;LCD_backlight@active stored from wreg
  2380  00304C  6E3C               	movwf	LCD_backlight@active,c
  2381                           
  2382                           ;src\LCD_44780.c: 277: LATCbits.LATC1 = active;
  2383  00304E  B03C               	btfsc	LCD_backlight@active,0,c
  2384  003050  D002               	bra	u3605
  2385  003052  928B               	bcf	3979,1,c	;volatile
  2386  003054  D001               	bra	u3606
  2387  003056                     u3605:
  2388  003056  828B               	bsf	3979,1,c	;volatile
  2389  003058                     u3606:
  2390  003058  0012               	return		;funcret
  2391  00305A                     __end_of_LCD_backlight:
  2392                           	opt stack 0
  2393                           tblptru	equ	0xFF8
  2394                           tblptrh	equ	0xFF7
  2395                           tblptrl	equ	0xFF6
  2396                           tablat	equ	0xFF5
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function _USART_Send *****************
  2404 ;; Defined at:
  2405 ;;		line 222 in file "telecomando.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;		None               void
  2412 ;; Registers used:
  2413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2419 ;;      Params:         0       0       0       0
  2420 ;;      Locals:         0       0       0       0
  2421 ;;      Temps:          0       0       0       0
  2422 ;;      Totals:         0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    6
  2426 ;; This function calls:
  2427 ;;		_putsUSART
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text7
  2434  002EB4                     __ptext7:
  2435                           	opt stack 0
  2436  002EB4                     _USART_Send:
  2437                           	opt stack 24
  2438                           
  2439                           ;telecomando.c: 223: set_speed_pk1 = set_speed >> 8;
  2440                           
  2441                           ;incstack = 0
  2442  002EB4  500E               	movf	_set_speed+1,w,c	;volatile
  2443  002EB6  6E17               	movwf	_set_speed_pk1,c	;volatile
  2444                           
  2445                           ;telecomando.c: 224: set_speed_pk0 = set_speed;
  2446  002EB8  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2447                           
  2448                           ;telecomando.c: 225: USART_Tx[1] = dir;
  2449  002EBC  0E00               	movlw	0
  2450  002EBE  B243               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2451  002EC0  0E01               	movlw	1
  2452  002EC2  0100               	movlb	0	; () banked
  2453  002EC4  6FEA               	movwf	(_USART_Tx+1)& (0+255),b
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;telecomando.c: 226: USART_Tx[2] = set_speed_pk1;
  2457  002EC6  C017  F0EB         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;telecomando.c: 227: USART_Tx[3] = set_speed_pk0;
  2461  002ECA  C016  F0EC         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;telecomando.c: 228: USART_Tx[4] = set_steering;
  2465  002ECE  C018  F0ED         	movff	_set_steering,_USART_Tx+4	;volatile
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;telecomando.c: 229: USART_Tx[5] = analogic_brake;
  2469  002ED2  C014  F0EE         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;telecomando.c: 231: putsUSART((char *) USART_Tx);
  2473  002ED6  0EE9               	movlw	low _USART_Tx
  2474  002ED8  6E3D               	movwf	putsUSART@data,c
  2475  002EDA  0E00               	movlw	high _USART_Tx
  2476  002EDC  6E3E               	movwf	putsUSART@data+1,c
  2477  002EDE  ECB5  F017         	call	_putsUSART	;wreg free
  2478  002EE2  0012               	return		;funcret
  2479  002EE4                     __end_of_USART_Send:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           prodl	equ	0xFF3
  2486                           intcon	equ	0xFF2
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _putsUSART *****************
  2492 ;; Defined at:
  2493 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  data            2   25[COMRAM] PTR unsigned char 
  2496 ;;		 -> USART_Tx(7), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2508 ;;      Params:         2       0       0       0
  2509 ;;      Locals:         0       0       0       0
  2510 ;;      Temps:          0       0       0       0
  2511 ;;      Totals:         2       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    5
  2515 ;; This function calls:
  2516 ;;		_WriteUSART
  2517 ;; This function is called by:
  2518 ;;		_USART_Send
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text8
  2523  002F6A                     __ptext8:
  2524                           	opt stack 0
  2525  002F6A                     _putsUSART:
  2526                           	opt stack 24
  2527  002F6A                     l438:
  2528  002F6A  A2AC               	btfss	4012,1,c	;volatile
  2529  002F6C  D7FE               	goto	l438
  2530  002F6E  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2531  002F72  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2532  002F76  50DF               	movf	indf2,w,c
  2533  002F78  EC1D  F018         	call	_WriteUSART
  2534  002F7C  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2535  002F80  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2536  002F84  4A3D               	infsnz	putsUSART@data,f,c
  2537  002F86  2A3E               	incf	putsUSART@data+1,f,c
  2538  002F88  50DF               	movf	indf2,w,c
  2539  002F8A  B4D8               	btfsc	status,2,c
  2540  002F8C  0012               	return	
  2541  002F8E  D7ED               	goto	l438
  2542  002F90                     __end_of_putsUSART:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           indf2	equ	0xFDF
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function _WriteUSART *****************
  2558 ;; Defined at:
  2559 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  data            1    wreg     unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  data            1   24[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       0       0       0
  2574 ;;      Locals:         1       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         1       0       0       0
  2577 ;;Total ram usage:        1 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    4
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_putsUSART
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text9
  2588  00303A                     __ptext9:
  2589                           	opt stack 0
  2590  00303A                     _WriteUSART:
  2591                           	opt stack 24
  2592                           
  2593                           ;incstack = 0
  2594                           ;WriteUSART@data stored from wreg
  2595  00303A  6E3C               	movwf	WriteUSART@data,c
  2596  00303C  ACAC               	btfss	4012,6,c	;volatile
  2597  00303E  D003               	goto	l3329
  2598  003040  90AC               	bcf	4012,0,c	;volatile
  2599  003042  B211               	btfsc	_USART_Status,1,c
  2600  003044  80AC               	bsf	4012,0,c	;volatile
  2601  003046                     l3329:
  2602  003046  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2603  00304A  0012               	return		;funcret
  2604  00304C                     __end_of_WriteUSART:
  2605                           	opt stack 0
  2606                           tblptru	equ	0xFF8
  2607                           tblptrh	equ	0xFF7
  2608                           tblptrl	equ	0xFF6
  2609                           tablat	equ	0xFF5
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           indf2	equ	0xFDF
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _LCD_Handler *****************
  2620 ;; Defined at:
  2621 ;;		line 234 in file "telecomando.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2635 ;;      Params:         0       0       0       0
  2636 ;;      Locals:         0       0       0       0
  2637 ;;      Temps:          0       0       0       0
  2638 ;;      Totals:         0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:   10
  2642 ;; This function calls:
  2643 ;;		_LCD_clear
  2644 ;;		_LCD_goto_line
  2645 ;;		_LCD_write_message
  2646 ;;		_LCD_write_string
  2647 ;;		___lwdiv
  2648 ;;		___xxtofl
  2649 ;;		_sprintf
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text10
  2656  0024BC                     __ptext10:
  2657                           	opt stack 0
  2658  0024BC                     _LCD_Handler:
  2659                           	opt stack 20
  2660                           
  2661                           ;telecomando.c: 235: actual_speed_kmh = actual_speed / 278;
  2662                           
  2663                           ;incstack = 0
  2664  0024BC  0E01               	movlw	1
  2665  0024BE  6E3F               	movwf	___lwdiv@divisor+1,c
  2666  0024C0  0E16               	movlw	22
  2667  0024C2  6E3E               	movwf	___lwdiv@divisor,c
  2668  0024C4  C0E0  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2669  0024C8  C0E1  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2670  0024CC  EC60  F016         	call	___lwdiv	;wreg free
  2671  0024D0  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2672  0024D4  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2673  0024D8  0100               	movlb	0	; () banked
  2674  0024DA  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2675  0024DC  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2676  0024DE  0E00               	movlw	0
  2677  0024E0  EC9A  F00E         	call	___xxtofl
  2678  0024E4  C070  F0D8         	movff	?___xxtofl,_actual_speed_kmh
  2679  0024E8  C071  F0D9         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2680  0024EC  C072  F0DA         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2681  0024F0  C073  F0DB         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2682                           
  2683                           ;telecomando.c: 237: LCD_clear();
  2684  0024F4  EC28  F017         	call	_LCD_clear	;wreg free
  2685                           
  2686                           ;telecomando.c: 238: LCD_goto_line(1);
  2687  0024F8  0E01               	movlw	1
  2688  0024FA  EC6F  F013         	call	_LCD_goto_line
  2689                           
  2690                           ;telecomando.c: 239: LCD_write_message("=== VEHICLE DATA ===");
  2691  0024FE  0EA5               	movlw	low STR_5
  2692  002500  0100               	movlb	0	; () banked
  2693  002502  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2694  002504  0E3F               	movlw	high STR_5
  2695  002506  0100               	movlb	0	; () banked
  2696  002508  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2697  00250A  EC89  F017         	call	_LCD_write_message	;wreg free
  2698                           
  2699                           ;telecomando.c: 241: LCD_goto_line(2);
  2700  00250E  0E02               	movlw	2
  2701  002510  EC6F  F013         	call	_LCD_goto_line
  2702                           
  2703                           ;telecomando.c: 242: LCD_write_message("Direction: ");
  2704  002514  0ECF               	movlw	low STR_6
  2705  002516  0100               	movlb	0	; () banked
  2706  002518  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2707  00251A  0E3F               	movlw	high STR_6
  2708  00251C  0100               	movlb	0	; () banked
  2709  00251E  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2710  002520  EC89  F017         	call	_LCD_write_message	;wreg free
  2711                           
  2712                           ;telecomando.c: 243: if (switch_position != 0) {
  2713  002524  5019               	movf	_switch_position,w,c	;volatile
  2714  002526  B4D8               	btfsc	status,2,c
  2715  002528  D014               	goto	l5435
  2716                           
  2717                           ;telecomando.c: 244: if (dir == 1) {
  2718  00252A  A243               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2719  00252C  D009               	goto	l5433
  2720                           
  2721                           ;telecomando.c: 245: LCD_write_message("FWD");
  2722  00252E  0EF9               	movlw	low STR_7
  2723  002530  0100               	movlb	0	; () banked
  2724  002532  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2725  002534  0E3F               	movlw	high STR_7
  2726  002536  0100               	movlb	0	; () banked
  2727  002538  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2728  00253A  EC89  F017         	call	_LCD_write_message	;wreg free
  2729                           
  2730                           ;telecomando.c: 246: } else {
  2731  00253E  D011               	goto	l5437
  2732  002540                     l5433:
  2733                           
  2734                           ;telecomando.c: 247: LCD_write_message("BKWD");
  2735  002540  0EEF               	movlw	low STR_8
  2736  002542  0100               	movlb	0	; () banked
  2737  002544  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2738  002546  0E3F               	movlw	high STR_8
  2739  002548  0100               	movlb	0	; () banked
  2740  00254A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2741  00254C  EC89  F017         	call	_LCD_write_message	;wreg free
  2742                           
  2743                           ;telecomando.c: 248: }
  2744                           ;telecomando.c: 249: } else {
  2745  002550  D008               	goto	l5437
  2746  002552                     l5435:
  2747                           
  2748                           ;telecomando.c: 250: LCD_write_message("P");
  2749  002552  0EFD               	movlw	low STR_9
  2750  002554  0100               	movlb	0	; () banked
  2751  002556  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2752  002558  0E3F               	movlw	high STR_9
  2753  00255A  0100               	movlb	0	; () banked
  2754  00255C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2755  00255E  EC89  F017         	call	_LCD_write_message	;wreg free
  2756  002562                     l5437:
  2757                           
  2758                           ;telecomando.c: 251: }
  2759                           ;telecomando.c: 253: LCD_goto_line(3);
  2760  002562  0E03               	movlw	3
  2761  002564  EC6F  F013         	call	_LCD_goto_line
  2762                           
  2763                           ;telecomando.c: 254: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2764  002568  0E19               	movlw	low _str
  2765  00256A  0100               	movlb	0	; () banked
  2766  00256C  6FC0               	movwf	sprintf@sp& (0+255),b
  2767  00256E  0E01               	movlw	high _str
  2768  002570  0100               	movlb	0	; () banked
  2769  002572  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2770  002574  0EDB               	movlw	low STR_10
  2771  002576  0100               	movlb	0	; () banked
  2772  002578  6FC2               	movwf	sprintf@f& (0+255),b
  2773  00257A  0E3F               	movlw	high STR_10
  2774  00257C  0100               	movlb	0	; () banked
  2775  00257E  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2776  002580  C0D8  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2777  002584  C0D9  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2778  002588  C0DA  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2779  00258C  C0DB  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2780  002590  EC62  F000         	call	_sprintf	;wreg free
  2781                           
  2782                           ;telecomando.c: 255: str[11] = '\0';
  2783  002594  0E00               	movlw	0
  2784  002596  0101               	movlb	1	; () banked
  2785  002598  6F24               	movwf	(_str+11)& (0+255),b
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;telecomando.c: 256: LCD_write_string(str);
  2789  00259A  0E19               	movlw	low _str
  2790  00259C  0100               	movlb	0	; () banked
  2791  00259E  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2792  0025A0  0E01               	movlw	high _str
  2793  0025A2  0100               	movlb	0	; () banked
  2794  0025A4  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2795  0025A6  ECC8  F017         	call	_LCD_write_string	;wreg free
  2796                           
  2797                           ;telecomando.c: 257: LCD_write_message("Km/h");
  2798  0025AA  0EF4               	movlw	low STR_11
  2799  0025AC  0100               	movlb	0	; () banked
  2800  0025AE  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2801  0025B0  0E3F               	movlw	high STR_11
  2802  0025B2  0100               	movlb	0	; () banked
  2803  0025B4  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2804  0025B6  EC89  F017         	call	_LCD_write_message	;wreg free
  2805                           
  2806                           ;telecomando.c: 259: LCD_goto_line(4);
  2807  0025BA  0E04               	movlw	4
  2808  0025BC  EC6F  F013         	call	_LCD_goto_line
  2809                           
  2810                           ;telecomando.c: 260: LCD_write_message("====================");
  2811  0025C0  0EBA               	movlw	low STR_1
  2812  0025C2  0100               	movlb	0	; () banked
  2813  0025C4  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2814  0025C6  0E3F               	movlw	high STR_1
  2815  0025C8  0100               	movlb	0	; () banked
  2816  0025CA  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2817  0025CC  EC89  F017         	call	_LCD_write_message	;wreg free
  2818  0025D0  0012               	return		;funcret
  2819  0025D2                     __end_of_LCD_Handler:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           indf2	equ	0xFDF
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _sprintf *****************
  2835 ;; Defined at:
  2836 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  2839 ;;		 -> str(12), 
  2840 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  2841 ;;		 -> STR_10(12), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2844 ;;  tmpval          4   14[BANK1 ] struct .
  2845 ;;  val             4    8[BANK1 ] unsigned long 
  2846 ;;  cp              3    0        PTR const unsigned char 
  2847 ;;  prec            2   18[BANK1 ] int 
  2848 ;;  exp             2   12[BANK1 ] int 
  2849 ;;  flag            2    6[BANK1 ] unsigned short 
  2850 ;;  ap              2    4[BANK1 ] PTR void [1]
  2851 ;;		 -> ?_sprintf(2), 
  2852 ;;  len             2    0        unsigned int 
  2853 ;;  width           2    0        int 
  2854 ;;  c               1   24[BANK1 ] char 
  2855 ;;  d               1    0        unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   96[BANK0 ] int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2865 ;;      Params:         0       8       0       0
  2866 ;;      Locals:         0       0      25       0
  2867 ;;      Temps:          0       2       0       0
  2868 ;;      Totals:         0      10      25       0
  2869 ;;Total ram usage:       35 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    6
  2872 ;; This function calls:
  2873 ;;		___awdiv
  2874 ;;		___fladd
  2875 ;;		___flge
  2876 ;;		___flmul
  2877 ;;		___flneg
  2878 ;;		___flsub
  2879 ;;		___fltol
  2880 ;;		___lldiv
  2881 ;;		___llmod
  2882 ;;		___wmul
  2883 ;;		___xxtofl
  2884 ;;		__div_to_l_
  2885 ;;		__tdiv_to_l_
  2886 ;;		_fround
  2887 ;;		_isdigit
  2888 ;;		_scale
  2889 ;; This function is called by:
  2890 ;;		_LCD_Handler
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text11
  2895  0000C4                     __ptext11:
  2896                           	opt stack 0
  2897  0000C4                     _sprintf:
  2898                           	opt stack 23
  2899                           
  2900                           ;doprnt.c: 494: va_list ap;
  2901                           ;doprnt.c: 499: signed char c;
  2902                           ;doprnt.c: 501: int width;
  2903                           ;doprnt.c: 504: int prec;
  2904                           ;doprnt.c: 508: unsigned short flag;
  2905                           ;doprnt.c: 515: char d;
  2906                           ;doprnt.c: 516: double fval;
  2907                           ;doprnt.c: 517: int exp;
  2908                           ;doprnt.c: 523: union {
  2909                           ;doprnt.c: 524: unsigned long vd;
  2910                           ;doprnt.c: 525: double integ;
  2911                           ;doprnt.c: 526: } tmpval;
  2912                           ;doprnt.c: 528: unsigned long val;
  2913                           ;doprnt.c: 529: unsigned len;
  2914                           ;doprnt.c: 530: const char * cp;
  2915                           ;doprnt.c: 533: *ap = __va_start();
  2916                           
  2917                           ;incstack = 0
  2918  0000C4  0EC4               	movlw	low (?_sprintf+4)
  2919  0000C6  0101               	movlb	1	; () banked
  2920  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  2921  0000CA  0E00               	movlw	high (?_sprintf+4)
  2922  0000CC  0101               	movlb	1	; () banked
  2923  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  2924                           
  2925                           ;doprnt.c: 536: while(c = *f++) {
  2926  0000D0  EF7A  F004         	goto	l5323
  2927  0000D4                     l5125:
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;doprnt.c: 538: if(c != '%')
  2931  0000D4  0E25               	movlw	37
  2932  0000D6  0101               	movlb	1	; () banked
  2933  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  2934  0000DA  B4D8               	btfsc	status,2,c
  2935  0000DC  D008               	goto	l5131
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;doprnt.c: 540: {
  2939                           ;doprnt.c: 541: ((*sp++ = (c)));
  2940  0000DE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  2941  0000E2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  2942  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  2943  0000EA  EF77  F004         	goto	l5321
  2944  0000EE                     l5131:
  2945                           
  2946                           ;doprnt.c: 543: }
  2947                           ;doprnt.c: 548: flag = 0;
  2948  0000EE  0E00               	movlw	0
  2949  0000F0  0101               	movlb	1	; () banked
  2950  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  2951  0000F4  0E00               	movlw	0
  2952  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;doprnt.c: 611: if(*f == '.') {
  2956  0000F8  C0C2  FFF6         	movff	sprintf@f,tblptrl
  2957  0000FC  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  2958  000100                     	if	0	;tblptru may be non-zero
  2959  000100                     	endif
  2960  000100                     	if	0	;tblptru may be non-zero
  2961  000100                     	endif
  2962  000100  0008               	tblrd		*
  2963  000102  50F5               	movf	tablat,w,c
  2964  000104  0A2E               	xorlw	46
  2965  000106  A4D8               	btfss	status,2,c
  2966  000108  D034               	goto	l5145
  2967                           
  2968                           ; BSR set to: 1
  2969                           ;doprnt.c: 612: flag |= 0x4000;
  2970  00010A  0101               	movlb	1	; () banked
  2971  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  2972                           
  2973                           ;doprnt.c: 613: f++;
  2974  00010E  0100               	movlb	0	; () banked
  2975  000110  4BC2               	infsnz	sprintf@f& (0+255),f,b
  2976  000112  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;doprnt.c: 620: {
  2980                           ;doprnt.c: 621: prec = 0;
  2981  000114  0E00               	movlw	0
  2982  000116  0101               	movlb	1	; () banked
  2983  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2984  00011A  0E00               	movlw	0
  2985  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  2986                           
  2987                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2988  00011E  D01E               	goto	l5143
  2989  000120                     l5139:
  2990                           
  2991                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2992  000120  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  2993  000124  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  2994  000128  0E00               	movlw	0
  2995  00012A  6E3F               	movwf	___wmul@multiplicand+1,c
  2996  00012C  0E0A               	movlw	10
  2997  00012E  6E3E               	movwf	___wmul@multiplicand,c
  2998  000130  ECDB  F017         	call	___wmul	;wreg free
  2999  000134  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3000  000138  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3001  00013C                     	if	0	;tblptru may be non-zero
  3002  00013C                     	endif
  3003  00013C                     	if	0	;tblptru may be non-zero
  3004  00013C                     	endif
  3005  00013C  0008               	tblrd		*
  3006  00013E  50F5               	movf	tablat,w,c
  3007  000140  263C               	addwf	?___wmul,f,c
  3008  000142  0E00               	movlw	0
  3009  000144  223D               	addwfc	?___wmul+1,f,c
  3010  000146  0ED0               	movlw	208
  3011  000148  243C               	addwf	?___wmul,w,c
  3012  00014A  0101               	movlb	1	; () banked
  3013  00014C  6F12               	movwf	sprintf@prec& (0+255),b
  3014  00014E  0EFF               	movlw	255
  3015  000150  203D               	addwfc	?___wmul+1,w,c
  3016  000152  0101               	movlb	1	; () banked
  3017  000154  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3018                           
  3019                           ; BSR set to: 1
  3020  000156  0100               	movlb	0	; () banked
  3021  000158  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3022  00015A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3023  00015C                     l5143:
  3024  00015C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3025  000160  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3026  000164                     	if	0	;tblptru may be non-zero
  3027  000164                     	endif
  3028  000164                     	if	0	;tblptru may be non-zero
  3029  000164                     	endif
  3030  000164  0008               	tblrd		*
  3031  000166  50F5               	movf	tablat,w,c
  3032  000168  ECFF  F017         	call	_isdigit
  3033  00016C  A0D8               	btfss	status,0,c
  3034  00016E  D00C               	goto	l5153
  3035  000170  D7D7               	goto	l5139
  3036  000172                     l5145:
  3037                           
  3038                           ;doprnt.c: 626: prec = 0;
  3039  000172  0E00               	movlw	0
  3040  000174  0101               	movlb	1	; () banked
  3041  000176  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3042  000178  0E00               	movlw	0
  3043  00017A  6F12               	movwf	sprintf@prec& (0+255),b
  3044                           
  3045                           ; BSR set to: 1
  3046                           ;doprnt.c: 628: flag |= 0x1000;
  3047  00017C  0101               	movlb	1	; () banked
  3048  00017E  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;doprnt.c: 630: }
  3052                           ;doprnt.c: 635: switch(c = *f++) {
  3053  000180  D003               	goto	l5153
  3054  000182                     l5149:
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;doprnt.c: 663: flag |= 0x400;
  3058  000182  0101               	movlb	1	; () banked
  3059  000184  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3060                           
  3061                           ;doprnt.c: 664: break;
  3062  000186  D013               	goto	l5155
  3063  000188                     l5153:
  3064  000188  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3065  00018C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3066  000190  0100               	movlb	0	; () banked
  3067  000192  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3068  000194  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3069  000196                     	if	0	;tblptru may be non-zero
  3070  000196                     	endif
  3071  000196                     	if	0	;tblptru may be non-zero
  3072  000196                     	endif
  3073  000196  0008               	tblrd		*
  3074  000198  CFF5 F118          	movff	tablat,sprintf@c
  3075  00019C  0101               	movlb	1	; () banked
  3076  00019E  5118               	movf	sprintf@c& (0+255),w,b
  3077                           
  3078                           ; Switch size 1, requested type "space"
  3079                           ; Number of cases is 2, Range of values is 0 to 102
  3080                           ; switch strategies available:
  3081                           ; Name         Instructions Cycles
  3082                           ; simple_byte            7     4 (average)
  3083                           ;	Chosen strategy is simple_byte
  3084  0001A0  0A00               	xorlw	0	; case 0
  3085  0001A2  B4D8               	btfsc	status,2,c
  3086  0001A4  D3B6               	goto	l5325
  3087  0001A6  0A66               	xorlw	102	; case 102
  3088  0001A8  B4D8               	btfsc	status,2,c
  3089  0001AA  D7EB               	goto	l5149
  3090  0001AC  D3A3               	goto	l5323
  3091  0001AE                     l5155:
  3092                           
  3093                           ; BSR set to: 1
  3094                           ;doprnt.c: 825: if(flag & (0x700)) {
  3095  0001AE  0E07               	movlw	7
  3096  0001B0  0101               	movlb	1	; () banked
  3097  0001B2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3098  0001B4  B4D8               	btfsc	status,2,c
  3099  0001B6  D346               	goto	l5303
  3100                           
  3101                           ; BSR set to: 1
  3102                           ;doprnt.c: 827: if(flag & 0x1000)
  3103  0001B8  0101               	movlb	1	; () banked
  3104  0001BA  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3105  0001BC  D005               	goto	l5161
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;doprnt.c: 829: prec = 6;
  3109  0001BE  0E00               	movlw	0
  3110  0001C0  0101               	movlb	1	; () banked
  3111  0001C2  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3112  0001C4  0E06               	movlw	6
  3113  0001C6  6F12               	movwf	sprintf@prec& (0+255),b
  3114  0001C8                     l5161:
  3115                           
  3116                           ; BSR set to: 1
  3117                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3118  0001C8  C104  FFD9         	movff	sprintf@ap,fsr2l
  3119  0001CC  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3120  0001D0  CFDE F114          	movff	postinc2,sprintf@fval
  3121  0001D4  CFDE F115          	movff	postinc2,sprintf@fval+1
  3122  0001D8  CFDE F116          	movff	postinc2,sprintf@fval+2
  3123  0001DC  CFDE F117          	movff	postinc2,sprintf@fval+3
  3124                           
  3125                           ; BSR set to: 1
  3126  0001E0  0E04               	movlw	4
  3127  0001E2  0101               	movlb	1	; () banked
  3128  0001E4  2704               	addwf	sprintf@ap& (0+255),f,b
  3129  0001E6  0E00               	movlw	0
  3130  0001E8  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3131                           
  3132                           ; BSR set to: 1
  3133                           ;doprnt.c: 831: if(fval < 0.0) {
  3134  0001EA  0101               	movlb	1	; () banked
  3135  0001EC  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3136  0001EE  D015               	goto	l5171
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;doprnt.c: 832: fval = -fval;
  3140  0001F0  C114  F03C         	movff	sprintf@fval,___flneg@f1
  3141  0001F4  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  3142  0001F8  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  3143  0001FC  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  3144  000200  EC72  F017         	call	___flneg	;wreg free
  3145  000204  C03C  F114         	movff	?___flneg,sprintf@fval
  3146  000208  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  3147  00020C  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  3148  000210  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  3149                           
  3150                           ;doprnt.c: 833: flag |= 0x03;
  3151  000214  0E03               	movlw	3
  3152  000216  0101               	movlb	1	; () banked
  3153  000218  1306               	iorwf	sprintf@flag& (0+255),f,b
  3154  00021A                     l5171:
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;doprnt.c: 834: }
  3158                           ;doprnt.c: 835: exp = 0;
  3159  00021A  0E00               	movlw	0
  3160  00021C  0101               	movlb	1	; () banked
  3161  00021E  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3162  000220  0E00               	movlw	0
  3163  000222  6F0C               	movwf	sprintf@exp& (0+255),b
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;doprnt.c: 836: if( fval!=0) {
  3167  000224  0101               	movlb	1	; () banked
  3168  000226  5114               	movf	sprintf@fval& (0+255),w,b
  3169  000228  0101               	movlb	1	; () banked
  3170  00022A  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3171  00022C  0101               	movlb	1	; () banked
  3172  00022E  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3173  000230  0101               	movlb	1	; () banked
  3174  000232  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3175  000234  B4D8               	btfsc	status,2,c
  3176  000236  D08D               	goto	l5199
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3180  000238  0101               	movlb	1	; () banked
  3181  00023A  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3182  00023C  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3183  00023E  0F82               	addlw	130
  3184  000240  0101               	movlb	1	; () banked
  3185  000242  6F0C               	movwf	sprintf@exp& (0+255),b
  3186  000244  0101               	movlb	1	; () banked
  3187  000246  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3188  000248  0EFF               	movlw	255
  3189  00024A  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;doprnt.c: 838: exp--;
  3193  00024C  0101               	movlb	1	; () banked
  3194  00024E  070C               	decf	sprintf@exp& (0+255),f,b
  3195  000250  A0D8               	btfss	status,0,c
  3196  000252  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3197                           
  3198                           ; BSR set to: 1
  3199                           ;doprnt.c: 839: exp *= 3;
  3200  000254  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  3201  000258  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3202  00025C  0E00               	movlw	0
  3203  00025E  6E3F               	movwf	___wmul@multiplicand+1,c
  3204  000260  0E03               	movlw	3
  3205  000262  6E3E               	movwf	___wmul@multiplicand,c
  3206  000264  ECDB  F017         	call	___wmul	;wreg free
  3207  000268  C03C  F10C         	movff	?___wmul,sprintf@exp
  3208  00026C  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  3209                           
  3210                           ;doprnt.c: 840: exp /= 10;
  3211  000270  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  3212  000274  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3213  000278  0E00               	movlw	0
  3214  00027A  0100               	movlb	0	; () banked
  3215  00027C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3216  00027E  0E0A               	movlw	10
  3217  000280  6F72               	movwf	___awdiv@divisor& (0+255),b
  3218  000282  EC54  F014         	call	___awdiv	;wreg free
  3219  000286  C070  F10C         	movff	?___awdiv,sprintf@exp
  3220  00028A  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3221                           
  3222                           ;doprnt.c: 841: if(exp < 0)
  3223  00028E  0101               	movlb	1	; () banked
  3224  000290  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3225  000292  D004               	goto	l5187
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;doprnt.c: 842: exp--;
  3229  000294  0101               	movlb	1	; () banked
  3230  000296  070C               	decf	sprintf@exp& (0+255),f,b
  3231  000298  A0D8               	btfss	status,0,c
  3232  00029A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3233  00029C                     l5187:
  3234                           
  3235                           ; BSR set to: 1
  3236                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3237  00029C  0101               	movlb	1	; () banked
  3238  00029E  510C               	movf	sprintf@exp& (0+255),w,b
  3239  0002A0  0800               	sublw	0
  3240  0002A2  EC37  F009         	call	_scale
  3241  0002A6  C097  F10E         	movff	?_scale,sprintf@tmpval
  3242  0002AA  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3243  0002AE  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3244  0002B2  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3245                           
  3246                           ;doprnt.c: 847: tmpval.integ *= fval;
  3247  0002B6  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  3248  0002BA  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3249  0002BE  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3250  0002C2  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3251  0002C6  C114  F082         	movff	sprintf@fval,___flmul@a
  3252  0002CA  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3253  0002CE  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3254  0002D2  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3255  0002D6  ECE4  F006         	call	___flmul	;wreg free
  3256  0002DA  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  3257  0002DE  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3258  0002E2  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3259  0002E6  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3260                           
  3261                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3262  0002EA  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3263  0002EE  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3264  0002F2  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3265  0002F6  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3266  0002FA  0E00               	movlw	0
  3267  0002FC  0100               	movlb	0	; () banked
  3268  0002FE  6F74               	movwf	___flge@ff2& (0+255),b
  3269  000300  0E00               	movlw	0
  3270  000302  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3271  000304  0E80               	movlw	128
  3272  000306  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3273  000308  0E3F               	movlw	63
  3274  00030A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3275  00030C  ECB0  F011         	call	___flge	;wreg free
  3276  000310  0100               	movlb	0	; () banked
  3277  000312  B0D8               	btfsc	status,0,c
  3278  000314  D005               	goto	l5195
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;doprnt.c: 849: exp--;
  3282  000316  0101               	movlb	1	; () banked
  3283  000318  070C               	decf	sprintf@exp& (0+255),f,b
  3284  00031A  A0D8               	btfss	status,0,c
  3285  00031C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3286  00031E  D019               	goto	l5199
  3287  000320                     l5195:
  3288                           
  3289                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3290  000320  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3291  000324  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3292  000328  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3293  00032C  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3294  000330  0E00               	movlw	0
  3295  000332  0100               	movlb	0	; () banked
  3296  000334  6F74               	movwf	___flge@ff2& (0+255),b
  3297  000336  0E00               	movlw	0
  3298  000338  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3299  00033A  0E20               	movlw	32
  3300  00033C  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3301  00033E  0E41               	movlw	65
  3302  000340  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3303  000342  ECB0  F011         	call	___flge	;wreg free
  3304  000346  0100               	movlb	0	; () banked
  3305  000348  A0D8               	btfss	status,0,c
  3306  00034A  D003               	goto	l5199
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;doprnt.c: 851: exp++;
  3310  00034C  0101               	movlb	1	; () banked
  3311  00034E  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3312  000350  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3313  000352                     l5199:
  3314                           
  3315                           ;doprnt.c: 852: }
  3316                           ;doprnt.c: 1112: if(prec <= 12)
  3317  000352  0101               	movlb	1	; () banked
  3318  000354  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3319  000356  D008               	goto	l5201
  3320  000358  0101               	movlb	1	; () banked
  3321  00035A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3322  00035C  E123               	bnz	l5203
  3323  00035E  0E0D               	movlw	13
  3324  000360  0101               	movlb	1	; () banked
  3325  000362  5D12               	subwf	sprintf@prec& (0+255),w,b
  3326  000364  B0D8               	btfsc	status,0,c
  3327  000366  D01E               	goto	l5203
  3328  000368                     l5201:
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;doprnt.c: 1113: fval += fround(prec);
  3332  000368  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3333  00036C  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3334  000370  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3335  000374  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3336  000378  0101               	movlb	1	; () banked
  3337  00037A  5112               	movf	sprintf@prec& (0+255),w,b
  3338  00037C  EC3F  F00D         	call	_fround
  3339  000380  C097  F0A8         	movff	?_fround,___fladd@a
  3340  000384  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3341  000388  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3342  00038C  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3343  000390  EC90  F004         	call	___fladd	;wreg free
  3344  000394  C0A4  F114         	movff	?___fladd,sprintf@fval
  3345  000398  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3346  00039C  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3347  0003A0  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3348  0003A4                     l5203:
  3349                           
  3350                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3351  0003A4  0101               	movlb	1	; () banked
  3352  0003A6  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3353  0003A8  D008               	goto	l5205
  3354  0003AA  0101               	movlb	1	; () banked
  3355  0003AC  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3356  0003AE  E12E               	bnz	l5211
  3357  0003B0  0E0A               	movlw	10
  3358  0003B2  0101               	movlb	1	; () banked
  3359  0003B4  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3360  0003B6  B0D8               	btfsc	status,0,c
  3361  0003B8  D029               	goto	l5211
  3362  0003BA                     l5205:
  3363                           
  3364                           ; BSR set to: 1
  3365  0003BA  0101               	movlb	1	; () banked
  3366  0003BC  5114               	movf	sprintf@fval& (0+255),w,b
  3367  0003BE  0101               	movlb	1	; () banked
  3368  0003C0  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3369  0003C2  0101               	movlb	1	; () banked
  3370  0003C4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3371  0003C6  0101               	movlb	1	; () banked
  3372  0003C8  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3373  0003CA  B4D8               	btfsc	status,2,c
  3374  0003CC  D06D               	goto	l5225
  3375                           
  3376                           ; BSR set to: 1
  3377  0003CE  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3378  0003D2  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3379  0003D6  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3380  0003DA  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3381  0003DE  ECE9  F012         	call	___fltol	;wreg free
  3382  0003E2  0100               	movlb	0	; () banked
  3383  0003E4  51A0               	movf	?___fltol& (0+255),w,b
  3384  0003E6  0100               	movlb	0	; () banked
  3385  0003E8  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3386  0003EA  0100               	movlb	0	; () banked
  3387  0003EC  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3388  0003EE  0100               	movlb	0	; () banked
  3389  0003F0  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3390  0003F2  A4D8               	btfss	status,2,c
  3391  0003F4  D059               	goto	l5225
  3392                           
  3393                           ; BSR set to: 0
  3394  0003F6  0101               	movlb	1	; () banked
  3395  0003F8  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3396  0003FA  D056               	goto	l5225
  3397  0003FC  0101               	movlb	1	; () banked
  3398  0003FE  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3399  000400  E105               	bnz	l5211
  3400  000402  0E02               	movlw	2
  3401  000404  0101               	movlb	1	; () banked
  3402  000406  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3403  000408  A0D8               	btfss	status,0,c
  3404  00040A  D04E               	goto	l5225
  3405  00040C                     l5211:
  3406                           
  3407                           ; BSR set to: 1
  3408                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3409  00040C  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3410  000410  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3411  000414  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3412  000418  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3413  00041C  0E5F               	movlw	95
  3414  00041E  0100               	movlb	0	; () banked
  3415  000420  6F74               	movwf	___flge@ff2& (0+255),b
  3416  000422  0E70               	movlw	112
  3417  000424  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3418  000426  0E89               	movlw	137
  3419  000428  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3420  00042A  0E40               	movlw	64
  3421  00042C  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3422  00042E  ECB0  F011         	call	___flge	;wreg free
  3423  000432  0100               	movlb	0	; () banked
  3424  000434  B0D8               	btfsc	status,0,c
  3425  000436  D003               	goto	l5215
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3429  000438  0101               	movlb	1	; () banked
  3430  00043A  0EF7               	movlw	247
  3431  00043C  D002               	goto	L2
  3432  00043E                     l5215:
  3433                           
  3434                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3435  00043E  0101               	movlb	1	; () banked
  3436  000440  0EF8               	movlw	248
  3437  000442                     L2:
  3438  000442  270C               	addwf	sprintf@exp& (0+255),f,b
  3439  000444  0EFF               	movlw	255
  3440  000446  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3444                           
  3445                           ; BSR set to: 1
  3446  000448  0101               	movlb	1	; () banked
  3447  00044A  510C               	movf	sprintf@exp& (0+255),w,b
  3448  00044C  EC37  F009         	call	_scale
  3449  000450  C097  F10E         	movff	?_scale,sprintf@tmpval
  3450  000454  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3451  000458  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3452  00045C  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3453  000460  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3454  000464  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3455  000468  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3456  00046C  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3457  000470  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3458  000474  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3459  000478  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3460  00047C  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3461  000480  EC01  F011         	call	__div_to_l_	;wreg free
  3462  000484  C070  F108         	movff	?__div_to_l_,sprintf@val
  3463  000488  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3464  00048C  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3465  000490  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3466                           
  3467                           ;doprnt.c: 1129: fval = 0.0;
  3468  000494  0E00               	movlw	0
  3469  000496  0101               	movlb	1	; () banked
  3470  000498  6F14               	movwf	sprintf@fval& (0+255),b
  3471  00049A  0E00               	movlw	0
  3472  00049C  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3473  00049E  0E00               	movlw	0
  3474  0004A0  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3475  0004A2  0E00               	movlw	0
  3476  0004A4  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3477                           
  3478                           ;doprnt.c: 1130: } else {
  3479  0004A6  D03C               	goto	l5229
  3480  0004A8                     l5225:
  3481                           
  3482                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3483  0004A8  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3484  0004AC  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3485  0004B0  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3486  0004B4  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3487  0004B8  ECE9  F012         	call	___fltol	;wreg free
  3488  0004BC  C0A0  F108         	movff	?___fltol,sprintf@val
  3489  0004C0  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3490  0004C4  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3491  0004C8  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3492                           
  3493                           ;doprnt.c: 1132: fval -= (double)val;
  3494  0004CC  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3495  0004D0  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3496  0004D4  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3497  0004D8  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3498  0004DC  C108  F070         	movff	sprintf@val,___xxtofl@val
  3499  0004E0  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3500  0004E4  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3501  0004E8  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3502  0004EC  0E00               	movlw	0
  3503  0004EE  EC9A  F00E         	call	___xxtofl
  3504  0004F2  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3505  0004F6  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3506  0004FA  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3507  0004FE  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3508  000502  EC89  F016         	call	___flsub	;wreg free
  3509  000506  C0B8  F114         	movff	?___flsub,sprintf@fval
  3510  00050A  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3511  00050E  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3512  000512  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3513                           
  3514                           ;doprnt.c: 1133: exp = 0;
  3515  000516  0E00               	movlw	0
  3516  000518  0101               	movlb	1	; () banked
  3517  00051A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3518  00051C  0E00               	movlw	0
  3519  00051E  6F0C               	movwf	sprintf@exp& (0+255),b
  3520  000520                     l5229:
  3521                           
  3522                           ; BSR set to: 1
  3523                           ;doprnt.c: 1134: }
  3524                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3525  000520  0E01               	movlw	1
  3526  000522  0101               	movlb	1	; () banked
  3527  000524  6F18               	movwf	sprintf@c& (0+255),b
  3528  000526                     l5231:
  3529                           
  3530                           ; BSR set to: 1
  3531  000526  0E0A               	movlw	10
  3532  000528  0101               	movlb	1	; () banked
  3533  00052A  1918               	xorwf	sprintf@c& (0+255),w,b
  3534  00052C  B4D8               	btfsc	status,2,c
  3535  00052E  D01E               	goto	l5243
  3536                           
  3537                           ; BSR set to: 1
  3538                           ;doprnt.c: 1137: if(val < dpowers[c])
  3539                           
  3540                           ; BSR set to: 1
  3541                           
  3542                           ; BSR set to: 1
  3543  000530  0101               	movlb	1	; () banked
  3544  000532  5118               	movf	sprintf@c& (0+255),w,b
  3545  000534  0D04               	mullw	4
  3546  000536  0E53               	movlw	low _dpowers
  3547  000538  24F3               	addwf	prodl,w,c
  3548  00053A  6EF6               	movwf	tblptrl,c
  3549  00053C  0E3F               	movlw	high _dpowers
  3550  00053E  20F4               	addwfc	prodh,w,c
  3551  000540  6EF7               	movwf	tblptrh,c
  3552  000542                     	if	0	;There are less than 3 active tblptr bytes
  3553  000542                     	endif
  3554  000542  0009               	tblrd		*+
  3555  000544  50F5               	movf	tablat,w,c
  3556  000546  0101               	movlb	1	; () banked
  3557  000548  5D08               	subwf	sprintf@val& (0+255),w,b
  3558  00054A  0009               	tblrd		*+
  3559  00054C  50F5               	movf	tablat,w,c
  3560  00054E  0101               	movlb	1	; () banked
  3561  000550  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3562  000552  0009               	tblrd		*+
  3563  000554  50F5               	movf	tablat,w,c
  3564  000556  0101               	movlb	1	; () banked
  3565  000558  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3566  00055A  0009               	tblrd		*+
  3567  00055C  50F5               	movf	tablat,w,c
  3568  00055E  0101               	movlb	1	; () banked
  3569  000560  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3570  000562  A0D8               	btfss	status,0,c
  3571  000564  D003               	goto	l5243
  3572                           
  3573                           ; BSR set to: 1
  3574                           
  3575                           ; BSR set to: 1
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;doprnt.c: 1138: break;
  3579  000566  0101               	movlb	1	; () banked
  3580  000568  2B18               	incf	sprintf@c& (0+255),f,b
  3581  00056A  D7DD               	goto	l5231
  3582  00056C                     l5243:
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;doprnt.c: 1175: {
  3586                           ;doprnt.c: 1188: if(flag & 0x03)
  3587  00056C  0E03               	movlw	3
  3588  00056E  0101               	movlb	1	; () banked
  3589  000570  1506               	andwf	sprintf@flag& (0+255),w,b
  3590  000572  0100               	movlb	0	; () banked
  3591  000574  6FC8               	movwf	??_sprintf& (0+255),b
  3592  000576  0E00               	movlw	0
  3593  000578  0101               	movlb	1	; () banked
  3594  00057A  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3595  00057C  0100               	movlb	0	; () banked
  3596  00057E  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3597  000580  0100               	movlb	0	; () banked
  3598  000582  51C8               	movf	??_sprintf& (0+255),w,b
  3599  000584  0100               	movlb	0	; () banked
  3600  000586  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3601  000588  B4D8               	btfsc	status,2,c
  3602  00058A  D055               	goto	l5257
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3606  00058C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3607  000590  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3608  000594  0E2D               	movlw	45
  3609  000596  D04D               	goto	L3
  3610  000598                     l5247:
  3611                           
  3612                           ; BSR set to: 0
  3613  000598  0100               	movlb	0	; () banked
  3614  00059A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3615  00059C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;doprnt.c: 1195: }
  3619                           ;doprnt.c: 1196: while(c--) {
  3620  00059E  D04B               	goto	l5257
  3621  0005A0                     l5249:
  3622                           
  3623                           ;doprnt.c: 1200: {
  3624                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3625  0005A0  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3626  0005A4  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3627  0005A8  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3628  0005AC  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3629  0005B0  0101               	movlb	1	; () banked
  3630  0005B2  5118               	movf	sprintf@c& (0+255),w,b
  3631  0005B4  0D04               	mullw	4
  3632  0005B6  0E53               	movlw	low _dpowers
  3633  0005B8  24F3               	addwf	prodl,w,c
  3634  0005BA  6EF6               	movwf	tblptrl,c
  3635  0005BC  0E3F               	movlw	high _dpowers
  3636  0005BE  20F4               	addwfc	prodh,w,c
  3637  0005C0  6EF7               	movwf	tblptrh,c
  3638  0005C2                     	if	0	;There are less than 3 active tblptr bytes
  3639  0005C2                     	endif
  3640  0005C2  0009               	tblrd		*+
  3641  0005C4  CFF5 F074          	movff	tablat,___lldiv@divisor
  3642  0005C8  0009               	tblrd		*+
  3643  0005CA  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3644  0005CE  0009               	tblrd		*+
  3645  0005D0  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3646  0005D4  000A               	tblrd		*-
  3647  0005D6  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3648  0005DA  EC0B  F015         	call	___lldiv	;wreg free
  3649  0005DE  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3650  0005E2  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3651  0005E6  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3652  0005EA  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3653                           
  3654                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3655  0005EE  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3656  0005F2  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3657  0005F6  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3658  0005FA  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3659  0005FE  0E0A               	movlw	10
  3660  000600  0100               	movlb	0	; () banked
  3661  000602  6F74               	movwf	___llmod@divisor& (0+255),b
  3662  000604  0E00               	movlw	0
  3663  000606  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3664  000608  0E00               	movlw	0
  3665  00060A  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3666  00060C  0E00               	movlw	0
  3667  00060E  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3668  000610  ECAE  F015         	call	___llmod	;wreg free
  3669  000614  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3670  000618  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3671  00061C  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3672  000620  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3673                           
  3674                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3675  000624  0101               	movlb	1	; () banked
  3676  000626  510E               	movf	sprintf@tmpval& (0+255),w,b
  3677  000628  0F30               	addlw	48
  3678  00062A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3679  00062E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3680  000632                     L3:
  3681  000632  6EDF               	movwf	indf2,c
  3682  000634  D7B1               	goto	l5247
  3683  000636                     l5257:
  3684                           
  3685                           ; BSR set to: 0
  3686  000636  0101               	movlb	1	; () banked
  3687  000638  0718               	decf	sprintf@c& (0+255),f,b
  3688  00063A  0101               	movlb	1	; () banked
  3689  00063C  2918               	incf	sprintf@c& (0+255),w,b
  3690  00063E  B4D8               	btfsc	status,2,c
  3691  000640  D00E               	goto	l5265
  3692  000642  D7AE               	goto	l5249
  3693  000644                     l5259:
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3697  000644  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3698  000648  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3699  00064C  0E30               	movlw	48
  3700  00064E  6EDF               	movwf	indf2,c
  3701                           
  3702                           ; BSR set to: 1
  3703  000650  0100               	movlb	0	; () banked
  3704  000652  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3705  000654  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;doprnt.c: 1209: exp--;
  3709  000656  0101               	movlb	1	; () banked
  3710  000658  070C               	decf	sprintf@exp& (0+255),f,b
  3711  00065A  A0D8               	btfss	status,0,c
  3712  00065C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3713  00065E                     l5265:
  3714                           
  3715                           ; BSR set to: 1
  3716  00065E  0101               	movlb	1	; () banked
  3717  000660  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3718  000662  D007               	goto	l5267
  3719  000664  0101               	movlb	1	; () banked
  3720  000666  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3721  000668  E1ED               	bnz	l5259
  3722  00066A  0101               	movlb	1	; () banked
  3723  00066C  050C               	decf	sprintf@exp& (0+255),w,b
  3724  00066E  B0D8               	btfsc	status,0,c
  3725  000670  D7E9               	goto	l5259
  3726  000672                     l5267:
  3727                           
  3728                           ; BSR set to: 1
  3729                           ;doprnt.c: 1210: }
  3730                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3731  000672  0101               	movlb	1	; () banked
  3732  000674  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3733  000676  D00C               	goto	l369
  3734  000678  0101               	movlb	1	; () banked
  3735  00067A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3736  00067C  E105               	bnz	u6120
  3737  00067E  0E09               	movlw	9
  3738  000680  0101               	movlb	1	; () banked
  3739  000682  5D12               	subwf	sprintf@prec& (0+255),w,b
  3740  000684  A0D8               	btfss	status,0,c
  3741  000686  D004               	goto	l369
  3742  000688                     u6120:
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3746  000688  0E08               	movlw	8
  3747  00068A  0101               	movlb	1	; () banked
  3748  00068C  6F18               	movwf	sprintf@c& (0+255),b
  3749  00068E  D002               	goto	l5271
  3750  000690                     l369:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;doprnt.c: 1213: else
  3754                           ;doprnt.c: 1214: c = prec;
  3755  000690  C112  F118         	movff	sprintf@prec,sprintf@c
  3756  000694                     l5271:
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;doprnt.c: 1215: prec -= c;
  3760  000694  0101               	movlb	1	; () banked
  3761  000696  5118               	movf	sprintf@c& (0+255),w,b
  3762  000698  0101               	movlb	1	; () banked
  3763  00069A  5F12               	subwf	sprintf@prec& (0+255),f,b
  3764  00069C  0E00               	movlw	0
  3765  00069E  0101               	movlb	1	; () banked
  3766  0006A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3767  0006A2  0EFF               	movlw	255
  3768  0006A4  0101               	movlb	1	; () banked
  3769  0006A6  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3770                           
  3771                           ; BSR set to: 1
  3772                           ;doprnt.c: 1219: if(c)
  3773  0006A8  0101               	movlb	1	; () banked
  3774  0006AA  5118               	movf	sprintf@c& (0+255),w,b
  3775  0006AC  0101               	movlb	1	; () banked
  3776  0006AE  B4D8               	btfsc	status,2,c
  3777  0006B0  D009               	goto	l5279
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3781  0006B2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3782  0006B6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3783  0006BA  0E2E               	movlw	46
  3784  0006BC  6EDF               	movwf	indf2,c
  3785                           
  3786                           ; BSR set to: 1
  3787  0006BE  0100               	movlb	0	; () banked
  3788  0006C0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3789  0006C2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3790  0006C4                     l5279:
  3791                           
  3792                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3793  0006C4  0101               	movlb	1	; () banked
  3794  0006C6  5118               	movf	sprintf@c& (0+255),w,b
  3795  0006C8  EC37  F009         	call	_scale
  3796  0006CC  C097  F100         	movff	?_scale,_sprintf$2477
  3797  0006D0  C098  F101         	movff	?_scale+1,_sprintf$2477+1
  3798  0006D4  C099  F102         	movff	?_scale+2,_sprintf$2477+2
  3799  0006D8  C09A  F103         	movff	?_scale+3,_sprintf$2477+3
  3800                           
  3801                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3802  0006DC  C114  F082         	movff	sprintf@fval,___flmul@a
  3803  0006E0  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3804  0006E4  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3805  0006E8  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3806  0006EC  C100  F07E         	movff	_sprintf$2477,___flmul@b
  3807  0006F0  C101  F07F         	movff	_sprintf$2477+1,___flmul@b+1
  3808  0006F4  C102  F080         	movff	_sprintf$2477+2,___flmul@b+2
  3809  0006F8  C103  F081         	movff	_sprintf$2477+3,___flmul@b+3
  3810  0006FC  ECE4  F006         	call	___flmul	;wreg free
  3811  000700  C07E  F0A0         	movff	?___flmul,___fltol@f1
  3812  000704  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  3813  000708  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  3814  00070C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  3815  000710  ECE9  F012         	call	___fltol	;wreg free
  3816  000714  C0A0  F108         	movff	?___fltol,sprintf@val
  3817  000718  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3818  00071C  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3819  000720  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3820                           
  3821                           ;doprnt.c: 1228: while(c--) {
  3822  000724  D074               	goto	l5293
  3823  000726                     l5283:
  3824                           
  3825                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3826  000726  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3827  00072A  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3828  00072E  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3829  000732  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3830  000736  0101               	movlb	1	; () banked
  3831  000738  5118               	movf	sprintf@c& (0+255),w,b
  3832  00073A  0D04               	mullw	4
  3833  00073C  0E53               	movlw	low _dpowers
  3834  00073E  24F3               	addwf	prodl,w,c
  3835  000740  6EF6               	movwf	tblptrl,c
  3836  000742  0E3F               	movlw	high _dpowers
  3837  000744  20F4               	addwfc	prodh,w,c
  3838  000746  6EF7               	movwf	tblptrh,c
  3839  000748                     	if	0	;There are less than 3 active tblptr bytes
  3840  000748                     	endif
  3841  000748  0009               	tblrd		*+
  3842  00074A  CFF5 F074          	movff	tablat,___lldiv@divisor
  3843  00074E  0009               	tblrd		*+
  3844  000750  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3845  000754  0009               	tblrd		*+
  3846  000756  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3847  00075A  000A               	tblrd		*-
  3848  00075C  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3849  000760  EC0B  F015         	call	___lldiv	;wreg free
  3850  000764  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3851  000768  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3852  00076C  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3853  000770  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3854                           
  3855                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3856  000774  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3857  000778  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3858  00077C  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3859  000780  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3860  000784  0E0A               	movlw	10
  3861  000786  0100               	movlb	0	; () banked
  3862  000788  6F74               	movwf	___llmod@divisor& (0+255),b
  3863  00078A  0E00               	movlw	0
  3864  00078C  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3865  00078E  0E00               	movlw	0
  3866  000790  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3867  000792  0E00               	movlw	0
  3868  000794  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3869  000796  ECAE  F015         	call	___llmod	;wreg free
  3870  00079A  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3871  00079E  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3872  0007A2  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3873  0007A6  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3874                           
  3875                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3876  0007AA  0101               	movlb	1	; () banked
  3877  0007AC  510E               	movf	sprintf@tmpval& (0+255),w,b
  3878  0007AE  0F30               	addlw	48
  3879  0007B0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3880  0007B4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3881  0007B8  6EDF               	movwf	indf2,c
  3882                           
  3883                           ; BSR set to: 1
  3884  0007BA  0100               	movlb	0	; () banked
  3885  0007BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3886  0007BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;doprnt.c: 1232: val %= dpowers[c];
  3890  0007C0  C108  F070         	movff	sprintf@val,___llmod@dividend
  3891  0007C4  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  3892  0007C8  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  3893  0007CC  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  3894  0007D0  0101               	movlb	1	; () banked
  3895  0007D2  5118               	movf	sprintf@c& (0+255),w,b
  3896  0007D4  0D04               	mullw	4
  3897  0007D6  0E53               	movlw	low _dpowers
  3898  0007D8  24F3               	addwf	prodl,w,c
  3899  0007DA  6EF6               	movwf	tblptrl,c
  3900  0007DC  0E3F               	movlw	high _dpowers
  3901  0007DE  20F4               	addwfc	prodh,w,c
  3902  0007E0  6EF7               	movwf	tblptrh,c
  3903  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  3904  0007E2                     	endif
  3905  0007E2  0009               	tblrd		*+
  3906  0007E4  CFF5 F074          	movff	tablat,___llmod@divisor
  3907  0007E8  0009               	tblrd		*+
  3908  0007EA  CFF5 F075          	movff	tablat,___llmod@divisor+1
  3909  0007EE  0009               	tblrd		*+
  3910  0007F0  CFF5 F076          	movff	tablat,___llmod@divisor+2
  3911  0007F4  000A               	tblrd		*-
  3912  0007F6  CFF5 F077          	movff	tablat,___llmod@divisor+3
  3913  0007FA  ECAE  F015         	call	___llmod	;wreg free
  3914  0007FE  C070  F108         	movff	?___llmod,sprintf@val
  3915  000802  C071  F109         	movff	?___llmod+1,sprintf@val+1
  3916  000806  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  3917  00080A  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  3918  00080E                     l5293:
  3919  00080E  0101               	movlb	1	; () banked
  3920  000810  0718               	decf	sprintf@c& (0+255),f,b
  3921  000812  0101               	movlb	1	; () banked
  3922  000814  2918               	incf	sprintf@c& (0+255),w,b
  3923  000816  B4D8               	btfsc	status,2,c
  3924  000818  D00E               	goto	l5301
  3925  00081A  D785               	goto	l5283
  3926  00081C                     l5295:
  3927                           
  3928                           ; BSR set to: 1
  3929                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3930  00081C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3931  000820  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3932  000824  0E30               	movlw	48
  3933  000826  6EDF               	movwf	indf2,c
  3934                           
  3935                           ; BSR set to: 1
  3936  000828  0100               	movlb	0	; () banked
  3937  00082A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3938  00082C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;doprnt.c: 1237: prec--;
  3942  00082E  0101               	movlb	1	; () banked
  3943  000830  0712               	decf	sprintf@prec& (0+255),f,b
  3944  000832  A0D8               	btfss	status,0,c
  3945  000834  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3946  000836                     l5301:
  3947                           
  3948                           ; BSR set to: 1
  3949  000836  0101               	movlb	1	; () banked
  3950  000838  5112               	movf	sprintf@prec& (0+255),w,b
  3951  00083A  0101               	movlb	1	; () banked
  3952  00083C  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3953  00083E  B4D8               	btfsc	status,2,c
  3954  000840  D059               	goto	l5323
  3955  000842  D7EC               	goto	l5295
  3956  000844                     l5303:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;doprnt.c: 1246: }
  3960                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3961  000844  0101               	movlb	1	; () banked
  3962  000846  5112               	movf	sprintf@prec& (0+255),w,b
  3963  000848  0101               	movlb	1	; () banked
  3964  00084A  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3965  00084C  A4D8               	btfss	status,2,c
  3966  00084E  D00D               	goto	l5309
  3967                           
  3968                           ; BSR set to: 1
  3969  000850  0101               	movlb	1	; () banked
  3970  000852  5108               	movf	sprintf@val& (0+255),w,b
  3971  000854  0101               	movlb	1	; () banked
  3972  000856  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  3973  000858  0101               	movlb	1	; () banked
  3974  00085A  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3975  00085C  0101               	movlb	1	; () banked
  3976  00085E  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3977  000860  A4D8               	btfss	status,2,c
  3978  000862  D003               	goto	l5309
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;doprnt.c: 1291: prec++;
  3982  000864  0101               	movlb	1	; () banked
  3983  000866  4B12               	infsnz	sprintf@prec& (0+255),f,b
  3984  000868  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  3985  00086A                     l5309:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;doprnt.c: 1339: if(c < prec)
  3989  00086A  0E80               	movlw	128
  3990  00086C  0101               	movlb	1	; () banked
  3991  00086E  BF18               	btfsc	sprintf@c& (0+255),7,b
  3992  000870  0E7F               	movlw	127
  3993  000872  0100               	movlb	0	; () banked
  3994  000874  6FC8               	movwf	??_sprintf& (0+255),b
  3995  000876  0101               	movlb	1	; () banked
  3996  000878  5112               	movf	sprintf@prec& (0+255),w,b
  3997  00087A  0101               	movlb	1	; () banked
  3998  00087C  5D18               	subwf	sprintf@c& (0+255),w,b
  3999  00087E  0101               	movlb	1	; () banked
  4000  000880  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4001  000882  0A80               	xorlw	128
  4002  000884  0100               	movlb	0	; () banked
  4003  000886  59C8               	subwfb	??_sprintf& (0+255),w,b
  4004  000888  B0D8               	btfsc	status,0,c
  4005  00088A  D003               	goto	l5313
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;doprnt.c: 1340: c = prec;
  4009  00088C  C112  F118         	movff	sprintf@prec,sprintf@c
  4010  000890  D018               	goto	l5317
  4011  000892                     l5313:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;doprnt.c: 1341: else if(prec < c)
  4015  000892  0101               	movlb	1	; () banked
  4016  000894  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4017  000896  0A80               	xorlw	128
  4018  000898  0100               	movlb	0	; () banked
  4019  00089A  6FC8               	movwf	??_sprintf& (0+255),b
  4020  00089C  0101               	movlb	1	; () banked
  4021  00089E  5118               	movf	sprintf@c& (0+255),w,b
  4022  0008A0  0101               	movlb	1	; () banked
  4023  0008A2  5D12               	subwf	sprintf@prec& (0+255),w,b
  4024  0008A4  0E80               	movlw	128
  4025  0008A6  0101               	movlb	1	; () banked
  4026  0008A8  BF18               	btfsc	sprintf@c& (0+255),7,b
  4027  0008AA  0E7F               	movlw	127
  4028  0008AC  0100               	movlb	0	; () banked
  4029  0008AE  59C8               	subwfb	??_sprintf& (0+255),w,b
  4030  0008B0  B0D8               	btfsc	status,0,c
  4031  0008B2  D007               	goto	l5317
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;doprnt.c: 1342: prec = c;
  4035  0008B4  0101               	movlb	1	; () banked
  4036  0008B6  5118               	movf	sprintf@c& (0+255),w,b
  4037  0008B8  0101               	movlb	1	; () banked
  4038  0008BA  6F12               	movwf	sprintf@prec& (0+255),b
  4039  0008BC  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4040  0008BE  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4041  0008C0  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4042  0008C2                     l5317:
  4043                           
  4044                           ;doprnt.c: 1422: {
  4045                           ;doprnt.c: 1438: if(flag & 0x03)
  4046  0008C2  0E03               	movlw	3
  4047  0008C4  0101               	movlb	1	; () banked
  4048  0008C6  1506               	andwf	sprintf@flag& (0+255),w,b
  4049  0008C8  0100               	movlb	0	; () banked
  4050  0008CA  6FC8               	movwf	??_sprintf& (0+255),b
  4051  0008CC  0E00               	movlw	0
  4052  0008CE  0101               	movlb	1	; () banked
  4053  0008D0  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4054  0008D2  0100               	movlb	0	; () banked
  4055  0008D4  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  4056  0008D6  0100               	movlb	0	; () banked
  4057  0008D8  51C8               	movf	??_sprintf& (0+255),w,b
  4058  0008DA  0100               	movlb	0	; () banked
  4059  0008DC  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  4060  0008DE  B4D8               	btfsc	status,2,c
  4061  0008E0  D009               	goto	l5323
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4065  0008E2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4066  0008E6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4067  0008EA  0E2D               	movlw	45
  4068  0008EC  6EDF               	movwf	indf2,c
  4069  0008EE                     l5321:
  4070                           
  4071                           ; BSR set to: 0
  4072  0008EE  0100               	movlb	0	; () banked
  4073  0008F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4074  0008F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4075  0008F4                     l5323:
  4076  0008F4  C0C2  FFF6         	movff	sprintf@f,tblptrl
  4077  0008F8  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  4078  0008FC  0100               	movlb	0	; () banked
  4079  0008FE  4BC2               	infsnz	sprintf@f& (0+255),f,b
  4080  000900  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  4081  000902                     	if	0	;tblptru may be non-zero
  4082  000902                     	endif
  4083  000902                     	if	0	;tblptru may be non-zero
  4084  000902                     	endif
  4085  000902  0008               	tblrd		*
  4086  000904  CFF5 F118          	movff	tablat,sprintf@c
  4087  000908  0101               	movlb	1	; () banked
  4088  00090A  5118               	movf	sprintf@c& (0+255),w,b
  4089  00090C  A4D8               	btfss	status,2,c
  4090  00090E  EF6A  F000         	goto	l5125
  4091  000912                     l5325:
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;doprnt.c: 1538: *sp = 0;
  4095  000912  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4096  000916  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4097  00091A  0E00               	movlw	0
  4098  00091C  6EDF               	movwf	indf2,c
  4099  00091E  0012               	return	
  4100  000920                     __end_of_sprintf:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           indf2	equ	0xFDF
  4112                           postinc2	equ	0xFDE
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117 ;; *************** function _scale *****************
  4118 ;; Defined at:
  4119 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  scl             1    wreg     char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  scl             1   63[BANK0 ] char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4   55[BANK0 ] char 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4133 ;;      Params:         0       4       0       0
  4134 ;;      Locals:         0       5       0       0
  4135 ;;      Temps:          0       0       0       0
  4136 ;;      Totals:         0       9       0       0
  4137 ;;Total ram usage:        9 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    5
  4140 ;; This function calls:
  4141 ;;		___awdiv
  4142 ;;		___awmod
  4143 ;;		___flmul
  4144 ;; This function is called by:
  4145 ;;		_sprintf
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text12
  4150  00126E                     __ptext12:
  4151                           	opt stack 0
  4152  00126E                     _scale:
  4153                           	opt stack 23
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;incstack = 0
  4157                           ;scale@scl stored from wreg
  4158  00126E  0100               	movlb	0	; () banked
  4159  001270  6F9F               	movwf	scale@scl& (0+255),b
  4160                           
  4161                           ;doprnt.c: 428: if(scl < 0) {
  4162  001272  0100               	movlb	0	; () banked
  4163  001274  AF9F               	btfss	scale@scl& (0+255),7,b
  4164  001276  D125               	goto	l4747
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;doprnt.c: 429: scl = -scl;
  4168  001278  0100               	movlb	0	; () banked
  4169  00127A  6D9F               	negf	scale@scl& (0+255),b
  4170                           
  4171                           ;doprnt.c: 430: if(scl>=110)
  4172  00127C  0100               	movlb	0	; () banked
  4173  00127E  519F               	movf	scale@scl& (0+255),w,b
  4174  001280  0A80               	xorlw	128
  4175  001282  0F12               	addlw	-238
  4176  001284  A0D8               	btfss	status,0,c
  4177  001286  D0AA               	goto	l4737
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4181  001288  0E00               	movlw	0
  4182  00128A  0100               	movlb	0	; () banked
  4183  00128C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4184  00128E  0E0A               	movlw	10
  4185  001290  6F72               	movwf	___awdiv@divisor& (0+255),b
  4186  001292  0E00               	movlw	0
  4187  001294  6E3F               	movwf	___awmod@divisor+1,c
  4188  001296  0E64               	movlw	100
  4189  001298  6E3E               	movwf	___awmod@divisor,c
  4190  00129A  0100               	movlb	0	; () banked
  4191  00129C  519F               	movf	scale@scl& (0+255),w,b
  4192  00129E  6E3C               	movwf	___awmod@dividend,c
  4193  0012A0  6A3D               	clrf	___awmod@dividend+1,c
  4194  0012A2  BE3C               	btfsc	___awmod@dividend,7,c
  4195  0012A4  063D               	decf	___awmod@dividend+1,f,c
  4196  0012A6  ECF8  F015         	call	___awmod	;wreg free
  4197  0012AA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4198  0012AE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4199  0012B2  EC54  F014         	call	___awdiv	;wreg free
  4200  0012B6  0100               	movlb	0	; () banked
  4201  0012B8  90D8               	bcf	status,0,c
  4202  0012BA  3770               	rlcf	?___awdiv& (0+255),f,b
  4203  0012BC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4204  0012BE  0100               	movlb	0	; () banked
  4205  0012C0  90D8               	bcf	status,0,c
  4206  0012C2  3770               	rlcf	?___awdiv& (0+255),f,b
  4207  0012C4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4208  0012C6  0E24               	movlw	36
  4209  0012C8  0100               	movlb	0	; () banked
  4210  0012CA  2770               	addwf	?___awdiv& (0+255),f,b
  4211  0012CC  0E00               	movlw	0
  4212  0012CE  0100               	movlb	0	; () banked
  4213  0012D0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4214  0012D2  0EEB               	movlw	low __npowers_
  4215  0012D4  0100               	movlb	0	; () banked
  4216  0012D6  2570               	addwf	?___awdiv& (0+255),w,b
  4217  0012D8  6EF6               	movwf	tblptrl,c
  4218  0012DA  0E3E               	movlw	high __npowers_
  4219  0012DC  0100               	movlb	0	; () banked
  4220  0012DE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4221  0012E0  6EF7               	movwf	tblptrh,c
  4222  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4223  0012E2                     	endif
  4224  0012E2  0009               	tblrd		*+
  4225  0012E4  CFF5 F082          	movff	tablat,___flmul@a
  4226  0012E8  0009               	tblrd		*+
  4227  0012EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4228  0012EE  0009               	tblrd		*+
  4229  0012F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4230  0012F4  000A               	tblrd		*-
  4231  0012F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4232  0012FA  0E00               	movlw	0
  4233  0012FC  0100               	movlb	0	; () banked
  4234  0012FE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4235  001300  0E64               	movlw	100
  4236  001302  6F72               	movwf	___awdiv@divisor& (0+255),b
  4237  001304  0100               	movlb	0	; () banked
  4238  001306  519F               	movf	scale@scl& (0+255),w,b
  4239  001308  0100               	movlb	0	; () banked
  4240  00130A  6F70               	movwf	___awdiv@dividend& (0+255),b
  4241  00130C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4242  00130E  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4243  001310  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4244  001312  EC54  F014         	call	___awdiv	;wreg free
  4245  001316  0100               	movlb	0	; () banked
  4246  001318  90D8               	bcf	status,0,c
  4247  00131A  3770               	rlcf	?___awdiv& (0+255),f,b
  4248  00131C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4249  00131E  0100               	movlb	0	; () banked
  4250  001320  90D8               	bcf	status,0,c
  4251  001322  3770               	rlcf	?___awdiv& (0+255),f,b
  4252  001324  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4253  001326  0E48               	movlw	72
  4254  001328  0100               	movlb	0	; () banked
  4255  00132A  2770               	addwf	?___awdiv& (0+255),f,b
  4256  00132C  0E00               	movlw	0
  4257  00132E  0100               	movlb	0	; () banked
  4258  001330  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4259  001332  0EEB               	movlw	low __npowers_
  4260  001334  0100               	movlb	0	; () banked
  4261  001336  2570               	addwf	?___awdiv& (0+255),w,b
  4262  001338  6EF6               	movwf	tblptrl,c
  4263  00133A  0E3E               	movlw	high __npowers_
  4264  00133C  0100               	movlb	0	; () banked
  4265  00133E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4266  001340  6EF7               	movwf	tblptrh,c
  4267  001342                     	if	0	;There are less than 3 active tblptr bytes
  4268  001342                     	endif
  4269  001342  0009               	tblrd		*+
  4270  001344  CFF5 F07E          	movff	tablat,___flmul@b
  4271  001348  0009               	tblrd		*+
  4272  00134A  CFF5 F07F          	movff	tablat,___flmul@b+1
  4273  00134E  0009               	tblrd		*+
  4274  001350  CFF5 F080          	movff	tablat,___flmul@b+2
  4275  001354  000A               	tblrd		*-
  4276  001356  CFF5 F081          	movff	tablat,___flmul@b+3
  4277  00135A  ECE4  F006         	call	___flmul	;wreg free
  4278  00135E  C07E  F09B         	movff	?___flmul,_scale$2476
  4279  001362  C07F  F09C         	movff	?___flmul+1,_scale$2476+1
  4280  001366  C080  F09D         	movff	?___flmul+2,_scale$2476+2
  4281  00136A  C081  F09E         	movff	?___flmul+3,_scale$2476+3
  4282                           
  4283                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4284  00136E  C09B  F07E         	movff	_scale$2476,___flmul@b
  4285  001372  C09C  F07F         	movff	_scale$2476+1,___flmul@b+1
  4286  001376  C09D  F080         	movff	_scale$2476+2,___flmul@b+2
  4287  00137A  C09E  F081         	movff	_scale$2476+3,___flmul@b+3
  4288  00137E  0E00               	movlw	0
  4289  001380  6E3F               	movwf	___awmod@divisor+1,c
  4290  001382  0E0A               	movlw	10
  4291  001384  6E3E               	movwf	___awmod@divisor,c
  4292  001386  0100               	movlb	0	; () banked
  4293  001388  519F               	movf	scale@scl& (0+255),w,b
  4294  00138A  6E3C               	movwf	___awmod@dividend,c
  4295  00138C  6A3D               	clrf	___awmod@dividend+1,c
  4296  00138E  BE3C               	btfsc	___awmod@dividend,7,c
  4297  001390  063D               	decf	___awmod@dividend+1,f,c
  4298  001392  ECF8  F015         	call	___awmod	;wreg free
  4299  001396  90D8               	bcf	status,0,c
  4300  001398  363C               	rlcf	?___awmod,f,c
  4301  00139A  363D               	rlcf	?___awmod+1,f,c
  4302  00139C  90D8               	bcf	status,0,c
  4303  00139E  363C               	rlcf	?___awmod,f,c
  4304  0013A0  363D               	rlcf	?___awmod+1,f,c
  4305  0013A2  0EEB               	movlw	low __npowers_
  4306  0013A4  243C               	addwf	?___awmod,w,c
  4307  0013A6  6EF6               	movwf	tblptrl,c
  4308  0013A8  0E3E               	movlw	high __npowers_
  4309  0013AA  203D               	addwfc	?___awmod+1,w,c
  4310  0013AC  6EF7               	movwf	tblptrh,c
  4311  0013AE                     	if	0	;There are less than 3 active tblptr bytes
  4312  0013AE                     	endif
  4313  0013AE  0009               	tblrd		*+
  4314  0013B0  CFF5 F082          	movff	tablat,___flmul@a
  4315  0013B4  0009               	tblrd		*+
  4316  0013B6  CFF5 F083          	movff	tablat,___flmul@a+1
  4317  0013BA  0009               	tblrd		*+
  4318  0013BC  CFF5 F084          	movff	tablat,___flmul@a+2
  4319  0013C0  000A               	tblrd		*-
  4320  0013C2  CFF5 F085          	movff	tablat,___flmul@a+3
  4321  0013C6  ECE4  F006         	call	___flmul	;wreg free
  4322  0013CA  C07E  F097         	movff	?___flmul,?_scale
  4323  0013CE  C07F  F098         	movff	?___flmul+1,?_scale+1
  4324  0013D2  C080  F099         	movff	?___flmul+2,?_scale+2
  4325  0013D6  C081  F09A         	movff	?___flmul+3,?_scale+3
  4326  0013DA  0012               	return	
  4327  0013DC                     l4737:
  4328                           
  4329                           ;doprnt.c: 432: else if(scl > 10)
  4330  0013DC  0100               	movlb	0	; () banked
  4331  0013DE  519F               	movf	scale@scl& (0+255),w,b
  4332  0013E0  0A80               	xorlw	128
  4333  0013E2  0F75               	addlw	-139
  4334  0013E4  A0D8               	btfss	status,0,c
  4335  0013E6  D057               	goto	l4743
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4339  0013E8  0E00               	movlw	0
  4340  0013EA  0100               	movlb	0	; () banked
  4341  0013EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4342  0013EE  0E0A               	movlw	10
  4343  0013F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4344  0013F2  0100               	movlb	0	; () banked
  4345  0013F4  519F               	movf	scale@scl& (0+255),w,b
  4346  0013F6  0100               	movlb	0	; () banked
  4347  0013F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4348  0013FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4349  0013FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4350  0013FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4351  001400  EC54  F014         	call	___awdiv	;wreg free
  4352  001404  0100               	movlb	0	; () banked
  4353  001406  90D8               	bcf	status,0,c
  4354  001408  3770               	rlcf	?___awdiv& (0+255),f,b
  4355  00140A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4356  00140C  0100               	movlb	0	; () banked
  4357  00140E  90D8               	bcf	status,0,c
  4358  001410  3770               	rlcf	?___awdiv& (0+255),f,b
  4359  001412  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4360  001414  0E24               	movlw	36
  4361  001416  0100               	movlb	0	; () banked
  4362  001418  2770               	addwf	?___awdiv& (0+255),f,b
  4363  00141A  0E00               	movlw	0
  4364  00141C  0100               	movlb	0	; () banked
  4365  00141E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4366  001420  0EEB               	movlw	low __npowers_
  4367  001422  0100               	movlb	0	; () banked
  4368  001424  2570               	addwf	?___awdiv& (0+255),w,b
  4369  001426  6EF6               	movwf	tblptrl,c
  4370  001428  0E3E               	movlw	high __npowers_
  4371  00142A  0100               	movlb	0	; () banked
  4372  00142C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4373  00142E  6EF7               	movwf	tblptrh,c
  4374  001430                     	if	0	;There are less than 3 active tblptr bytes
  4375  001430                     	endif
  4376  001430  0009               	tblrd		*+
  4377  001432  CFF5 F07E          	movff	tablat,___flmul@b
  4378  001436  0009               	tblrd		*+
  4379  001438  CFF5 F07F          	movff	tablat,___flmul@b+1
  4380  00143C  0009               	tblrd		*+
  4381  00143E  CFF5 F080          	movff	tablat,___flmul@b+2
  4382  001442  000A               	tblrd		*-
  4383  001444  CFF5 F081          	movff	tablat,___flmul@b+3
  4384  001448  0E00               	movlw	0
  4385  00144A  6E3F               	movwf	___awmod@divisor+1,c
  4386  00144C  0E0A               	movlw	10
  4387  00144E  6E3E               	movwf	___awmod@divisor,c
  4388  001450  0100               	movlb	0	; () banked
  4389  001452  519F               	movf	scale@scl& (0+255),w,b
  4390  001454  6E3C               	movwf	___awmod@dividend,c
  4391  001456  6A3D               	clrf	___awmod@dividend+1,c
  4392  001458  BE3C               	btfsc	___awmod@dividend,7,c
  4393  00145A  063D               	decf	___awmod@dividend+1,f,c
  4394  00145C  ECF8  F015         	call	___awmod	;wreg free
  4395  001460  90D8               	bcf	status,0,c
  4396  001462  363C               	rlcf	?___awmod,f,c
  4397  001464  363D               	rlcf	?___awmod+1,f,c
  4398  001466  90D8               	bcf	status,0,c
  4399  001468  363C               	rlcf	?___awmod,f,c
  4400  00146A  363D               	rlcf	?___awmod+1,f,c
  4401  00146C  0EEB               	movlw	low __npowers_
  4402  00146E  243C               	addwf	?___awmod,w,c
  4403  001470  6EF6               	movwf	tblptrl,c
  4404  001472  0E3E               	movlw	high __npowers_
  4405  001474  203D               	addwfc	?___awmod+1,w,c
  4406  001476  6EF7               	movwf	tblptrh,c
  4407  001478                     	if	0	;There are less than 3 active tblptr bytes
  4408  001478                     	endif
  4409  001478  0009               	tblrd		*+
  4410  00147A  CFF5 F082          	movff	tablat,___flmul@a
  4411  00147E  0009               	tblrd		*+
  4412  001480  CFF5 F083          	movff	tablat,___flmul@a+1
  4413  001484  0009               	tblrd		*+
  4414  001486  CFF5 F084          	movff	tablat,___flmul@a+2
  4415  00148A  000A               	tblrd		*-
  4416  00148C  CFF5 F085          	movff	tablat,___flmul@a+3
  4417  001490  ECE4  F006         	call	___flmul	;wreg free
  4418  001494  D79A               	goto	L4
  4419  001496                     l4743:
  4420                           
  4421                           ;doprnt.c: 434: return _npowers_[scl];
  4422  001496  0100               	movlb	0	; () banked
  4423  001498  519F               	movf	scale@scl& (0+255),w,b
  4424  00149A  0D04               	mullw	4
  4425  00149C  0EEB               	movlw	low __npowers_
  4426  00149E  24F3               	addwf	prodl,w,c
  4427  0014A0  6EF6               	movwf	tblptrl,c
  4428  0014A2  0E3E               	movlw	high __npowers_
  4429  0014A4  20F4               	addwfc	prodh,w,c
  4430  0014A6  6EF7               	movwf	tblptrh,c
  4431  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  4432  0014A8                     	endif
  4433  0014A8  0009               	tblrd		*+
  4434  0014AA  CFF5 F097          	movff	tablat,?_scale
  4435  0014AE  0009               	tblrd		*+
  4436  0014B0  CFF5 F098          	movff	tablat,?_scale+1
  4437  0014B4  0009               	tblrd		*+
  4438  0014B6  CFF5 F099          	movff	tablat,?_scale+2
  4439  0014BA  000A               	tblrd		*-
  4440  0014BC  CFF5 F09A          	movff	tablat,?_scale+3
  4441                           
  4442                           ; BSR set to: 0
  4443  0014C0  0012               	return	
  4444  0014C2                     l4747:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;doprnt.c: 435: }
  4448                           ;doprnt.c: 436: if(scl>=110)
  4449  0014C2  0100               	movlb	0	; () banked
  4450  0014C4  519F               	movf	scale@scl& (0+255),w,b
  4451  0014C6  0A80               	xorlw	128
  4452  0014C8  0F12               	addlw	-238
  4453  0014CA  A0D8               	btfss	status,0,c
  4454  0014CC  D0AA               	goto	l4755
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4458  0014CE  0E00               	movlw	0
  4459  0014D0  0100               	movlb	0	; () banked
  4460  0014D2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4461  0014D4  0E0A               	movlw	10
  4462  0014D6  6F72               	movwf	___awdiv@divisor& (0+255),b
  4463  0014D8  0E00               	movlw	0
  4464  0014DA  6E3F               	movwf	___awmod@divisor+1,c
  4465  0014DC  0E64               	movlw	100
  4466  0014DE  6E3E               	movwf	___awmod@divisor,c
  4467  0014E0  0100               	movlb	0	; () banked
  4468  0014E2  519F               	movf	scale@scl& (0+255),w,b
  4469  0014E4  6E3C               	movwf	___awmod@dividend,c
  4470  0014E6  6A3D               	clrf	___awmod@dividend+1,c
  4471  0014E8  BE3C               	btfsc	___awmod@dividend,7,c
  4472  0014EA  063D               	decf	___awmod@dividend+1,f,c
  4473  0014EC  ECF8  F015         	call	___awmod	;wreg free
  4474  0014F0  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4475  0014F4  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4476  0014F8  EC54  F014         	call	___awdiv	;wreg free
  4477  0014FC  0100               	movlb	0	; () banked
  4478  0014FE  90D8               	bcf	status,0,c
  4479  001500  3770               	rlcf	?___awdiv& (0+255),f,b
  4480  001502  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4481  001504  0100               	movlb	0	; () banked
  4482  001506  90D8               	bcf	status,0,c
  4483  001508  3770               	rlcf	?___awdiv& (0+255),f,b
  4484  00150A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4485  00150C  0E24               	movlw	36
  4486  00150E  0100               	movlb	0	; () banked
  4487  001510  2770               	addwf	?___awdiv& (0+255),f,b
  4488  001512  0E00               	movlw	0
  4489  001514  0100               	movlb	0	; () banked
  4490  001516  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4491  001518  0E1F               	movlw	low __powers_
  4492  00151A  0100               	movlb	0	; () banked
  4493  00151C  2570               	addwf	?___awdiv& (0+255),w,b
  4494  00151E  6EF6               	movwf	tblptrl,c
  4495  001520  0E3F               	movlw	high __powers_
  4496  001522  0100               	movlb	0	; () banked
  4497  001524  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4498  001526  6EF7               	movwf	tblptrh,c
  4499  001528                     	if	0	;There are less than 3 active tblptr bytes
  4500  001528                     	endif
  4501  001528  0009               	tblrd		*+
  4502  00152A  CFF5 F082          	movff	tablat,___flmul@a
  4503  00152E  0009               	tblrd		*+
  4504  001530  CFF5 F083          	movff	tablat,___flmul@a+1
  4505  001534  0009               	tblrd		*+
  4506  001536  CFF5 F084          	movff	tablat,___flmul@a+2
  4507  00153A  000A               	tblrd		*-
  4508  00153C  CFF5 F085          	movff	tablat,___flmul@a+3
  4509  001540  0E00               	movlw	0
  4510  001542  0100               	movlb	0	; () banked
  4511  001544  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4512  001546  0E64               	movlw	100
  4513  001548  6F72               	movwf	___awdiv@divisor& (0+255),b
  4514  00154A  0100               	movlb	0	; () banked
  4515  00154C  519F               	movf	scale@scl& (0+255),w,b
  4516  00154E  0100               	movlb	0	; () banked
  4517  001550  6F70               	movwf	___awdiv@dividend& (0+255),b
  4518  001552  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4519  001554  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4520  001556  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4521  001558  EC54  F014         	call	___awdiv	;wreg free
  4522  00155C  0100               	movlb	0	; () banked
  4523  00155E  90D8               	bcf	status,0,c
  4524  001560  3770               	rlcf	?___awdiv& (0+255),f,b
  4525  001562  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4526  001564  0100               	movlb	0	; () banked
  4527  001566  90D8               	bcf	status,0,c
  4528  001568  3770               	rlcf	?___awdiv& (0+255),f,b
  4529  00156A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4530  00156C  0E48               	movlw	72
  4531  00156E  0100               	movlb	0	; () banked
  4532  001570  2770               	addwf	?___awdiv& (0+255),f,b
  4533  001572  0E00               	movlw	0
  4534  001574  0100               	movlb	0	; () banked
  4535  001576  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4536  001578  0E1F               	movlw	low __powers_
  4537  00157A  0100               	movlb	0	; () banked
  4538  00157C  2570               	addwf	?___awdiv& (0+255),w,b
  4539  00157E  6EF6               	movwf	tblptrl,c
  4540  001580  0E3F               	movlw	high __powers_
  4541  001582  0100               	movlb	0	; () banked
  4542  001584  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4543  001586  6EF7               	movwf	tblptrh,c
  4544  001588                     	if	0	;There are less than 3 active tblptr bytes
  4545  001588                     	endif
  4546  001588  0009               	tblrd		*+
  4547  00158A  CFF5 F07E          	movff	tablat,___flmul@b
  4548  00158E  0009               	tblrd		*+
  4549  001590  CFF5 F07F          	movff	tablat,___flmul@b+1
  4550  001594  0009               	tblrd		*+
  4551  001596  CFF5 F080          	movff	tablat,___flmul@b+2
  4552  00159A  000A               	tblrd		*-
  4553  00159C  CFF5 F081          	movff	tablat,___flmul@b+3
  4554  0015A0  ECE4  F006         	call	___flmul	;wreg free
  4555  0015A4  C07E  F09B         	movff	?___flmul,_scale$2476
  4556  0015A8  C07F  F09C         	movff	?___flmul+1,_scale$2476+1
  4557  0015AC  C080  F09D         	movff	?___flmul+2,_scale$2476+2
  4558  0015B0  C081  F09E         	movff	?___flmul+3,_scale$2476+3
  4559                           
  4560                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4561  0015B4  C09B  F07E         	movff	_scale$2476,___flmul@b
  4562  0015B8  C09C  F07F         	movff	_scale$2476+1,___flmul@b+1
  4563  0015BC  C09D  F080         	movff	_scale$2476+2,___flmul@b+2
  4564  0015C0  C09E  F081         	movff	_scale$2476+3,___flmul@b+3
  4565  0015C4  0E00               	movlw	0
  4566  0015C6  6E3F               	movwf	___awmod@divisor+1,c
  4567  0015C8  0E0A               	movlw	10
  4568  0015CA  6E3E               	movwf	___awmod@divisor,c
  4569  0015CC  0100               	movlb	0	; () banked
  4570  0015CE  519F               	movf	scale@scl& (0+255),w,b
  4571  0015D0  6E3C               	movwf	___awmod@dividend,c
  4572  0015D2  6A3D               	clrf	___awmod@dividend+1,c
  4573  0015D4  BE3C               	btfsc	___awmod@dividend,7,c
  4574  0015D6  063D               	decf	___awmod@dividend+1,f,c
  4575  0015D8  ECF8  F015         	call	___awmod	;wreg free
  4576  0015DC  90D8               	bcf	status,0,c
  4577  0015DE  363C               	rlcf	?___awmod,f,c
  4578  0015E0  363D               	rlcf	?___awmod+1,f,c
  4579  0015E2  90D8               	bcf	status,0,c
  4580  0015E4  363C               	rlcf	?___awmod,f,c
  4581  0015E6  363D               	rlcf	?___awmod+1,f,c
  4582  0015E8  0E1F               	movlw	low __powers_
  4583  0015EA  243C               	addwf	?___awmod,w,c
  4584  0015EC  6EF6               	movwf	tblptrl,c
  4585  0015EE  0E3F               	movlw	high __powers_
  4586  0015F0  203D               	addwfc	?___awmod+1,w,c
  4587  0015F2  6EF7               	movwf	tblptrh,c
  4588  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  4589  0015F4                     	endif
  4590  0015F4  0009               	tblrd		*+
  4591  0015F6  CFF5 F082          	movff	tablat,___flmul@a
  4592  0015FA  0009               	tblrd		*+
  4593  0015FC  CFF5 F083          	movff	tablat,___flmul@a+1
  4594  001600  0009               	tblrd		*+
  4595  001602  CFF5 F084          	movff	tablat,___flmul@a+2
  4596  001606  000A               	tblrd		*-
  4597  001608  CFF5 F085          	movff	tablat,___flmul@a+3
  4598  00160C  ECE4  F006         	call	___flmul	;wreg free
  4599  001610  C07E  F097         	movff	?___flmul,?_scale
  4600  001614  C07F  F098         	movff	?___flmul+1,?_scale+1
  4601  001618  C080  F099         	movff	?___flmul+2,?_scale+2
  4602  00161C  C081  F09A         	movff	?___flmul+3,?_scale+3
  4603  001620  0012               	return	
  4604  001622                     l4755:
  4605                           
  4606                           ;doprnt.c: 438: else if(scl > 10)
  4607  001622  0100               	movlb	0	; () banked
  4608  001624  519F               	movf	scale@scl& (0+255),w,b
  4609  001626  0A80               	xorlw	128
  4610  001628  0F75               	addlw	-139
  4611  00162A  A0D8               	btfss	status,0,c
  4612  00162C  D057               	goto	l4761
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4616  00162E  0E00               	movlw	0
  4617  001630  0100               	movlb	0	; () banked
  4618  001632  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4619  001634  0E0A               	movlw	10
  4620  001636  6F72               	movwf	___awdiv@divisor& (0+255),b
  4621  001638  0100               	movlb	0	; () banked
  4622  00163A  519F               	movf	scale@scl& (0+255),w,b
  4623  00163C  0100               	movlb	0	; () banked
  4624  00163E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4625  001640  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4626  001642  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4627  001644  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4628  001646  EC54  F014         	call	___awdiv	;wreg free
  4629  00164A  0100               	movlb	0	; () banked
  4630  00164C  90D8               	bcf	status,0,c
  4631  00164E  3770               	rlcf	?___awdiv& (0+255),f,b
  4632  001650  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4633  001652  0100               	movlb	0	; () banked
  4634  001654  90D8               	bcf	status,0,c
  4635  001656  3770               	rlcf	?___awdiv& (0+255),f,b
  4636  001658  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4637  00165A  0E24               	movlw	36
  4638  00165C  0100               	movlb	0	; () banked
  4639  00165E  2770               	addwf	?___awdiv& (0+255),f,b
  4640  001660  0E00               	movlw	0
  4641  001662  0100               	movlb	0	; () banked
  4642  001664  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4643  001666  0E1F               	movlw	low __powers_
  4644  001668  0100               	movlb	0	; () banked
  4645  00166A  2570               	addwf	?___awdiv& (0+255),w,b
  4646  00166C  6EF6               	movwf	tblptrl,c
  4647  00166E  0E3F               	movlw	high __powers_
  4648  001670  0100               	movlb	0	; () banked
  4649  001672  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4650  001674  6EF7               	movwf	tblptrh,c
  4651  001676                     	if	0	;There are less than 3 active tblptr bytes
  4652  001676                     	endif
  4653  001676  0009               	tblrd		*+
  4654  001678  CFF5 F07E          	movff	tablat,___flmul@b
  4655  00167C  0009               	tblrd		*+
  4656  00167E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4657  001682  0009               	tblrd		*+
  4658  001684  CFF5 F080          	movff	tablat,___flmul@b+2
  4659  001688  000A               	tblrd		*-
  4660  00168A  CFF5 F081          	movff	tablat,___flmul@b+3
  4661  00168E  0E00               	movlw	0
  4662  001690  6E3F               	movwf	___awmod@divisor+1,c
  4663  001692  0E0A               	movlw	10
  4664  001694  6E3E               	movwf	___awmod@divisor,c
  4665  001696  0100               	movlb	0	; () banked
  4666  001698  519F               	movf	scale@scl& (0+255),w,b
  4667  00169A  6E3C               	movwf	___awmod@dividend,c
  4668  00169C  6A3D               	clrf	___awmod@dividend+1,c
  4669  00169E  BE3C               	btfsc	___awmod@dividend,7,c
  4670  0016A0  063D               	decf	___awmod@dividend+1,f,c
  4671  0016A2  ECF8  F015         	call	___awmod	;wreg free
  4672  0016A6  90D8               	bcf	status,0,c
  4673  0016A8  363C               	rlcf	?___awmod,f,c
  4674  0016AA  363D               	rlcf	?___awmod+1,f,c
  4675  0016AC  90D8               	bcf	status,0,c
  4676  0016AE  363C               	rlcf	?___awmod,f,c
  4677  0016B0  363D               	rlcf	?___awmod+1,f,c
  4678  0016B2  0E1F               	movlw	low __powers_
  4679  0016B4  243C               	addwf	?___awmod,w,c
  4680  0016B6  6EF6               	movwf	tblptrl,c
  4681  0016B8  0E3F               	movlw	high __powers_
  4682  0016BA  203D               	addwfc	?___awmod+1,w,c
  4683  0016BC  6EF7               	movwf	tblptrh,c
  4684  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  4685  0016BE                     	endif
  4686  0016BE  0009               	tblrd		*+
  4687  0016C0  CFF5 F082          	movff	tablat,___flmul@a
  4688  0016C4  0009               	tblrd		*+
  4689  0016C6  CFF5 F083          	movff	tablat,___flmul@a+1
  4690  0016CA  0009               	tblrd		*+
  4691  0016CC  CFF5 F084          	movff	tablat,___flmul@a+2
  4692  0016D0  000A               	tblrd		*-
  4693  0016D2  CFF5 F085          	movff	tablat,___flmul@a+3
  4694  0016D6  ECE4  F006         	call	___flmul	;wreg free
  4695  0016DA  D79A               	goto	L5
  4696  0016DC                     l4761:
  4697                           
  4698                           ;doprnt.c: 440: return _powers_[scl];
  4699  0016DC  0100               	movlb	0	; () banked
  4700  0016DE  519F               	movf	scale@scl& (0+255),w,b
  4701  0016E0  0D04               	mullw	4
  4702  0016E2  0E1F               	movlw	low __powers_
  4703  0016E4  24F3               	addwf	prodl,w,c
  4704  0016E6  6EF6               	movwf	tblptrl,c
  4705  0016E8  0E3F               	movlw	high __powers_
  4706  0016EA  20F4               	addwfc	prodh,w,c
  4707  0016EC  6EF7               	movwf	tblptrh,c
  4708  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  4709  0016EE                     	endif
  4710  0016EE  0009               	tblrd		*+
  4711  0016F0  CFF5 F097          	movff	tablat,?_scale
  4712  0016F4  0009               	tblrd		*+
  4713  0016F6  CFF5 F098          	movff	tablat,?_scale+1
  4714  0016FA  0009               	tblrd		*+
  4715  0016FC  CFF5 F099          	movff	tablat,?_scale+2
  4716  001700  000A               	tblrd		*-
  4717  001702  CFF5 F09A          	movff	tablat,?_scale+3
  4718  001706  0012               	return	
  4719  001708                     __end_of_scale:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function _isdigit *****************
  4737 ;; Defined at:
  4738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  c               1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  c               1   26[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4752 ;;      Params:         0       0       0       0
  4753 ;;      Locals:         2       0       0       0
  4754 ;;      Temps:          1       0       0       0
  4755 ;;      Totals:         3       0       0       0
  4756 ;;Total ram usage:        3 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    4
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_sprintf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text13
  4767  002FFE                     __ptext13:
  4768                           	opt stack 0
  4769  002FFE                     _isdigit:
  4770                           	opt stack 24
  4771                           
  4772                           ;incstack = 0
  4773                           ;isdigit@c stored from wreg
  4774  002FFE  6E3E               	movwf	isdigit@c,c
  4775  003000  0E00               	movlw	0
  4776  003002  6E3D               	movwf	_isdigit$2082,c
  4777  003004  0E3A               	movlw	58
  4778  003006  603E               	cpfslt	isdigit@c,c
  4779  003008  D005               	goto	l4773
  4780  00300A  0E2F               	movlw	47
  4781  00300C  643E               	cpfsgt	isdigit@c,c
  4782  00300E  D002               	goto	l4773
  4783  003010  0E01               	movlw	1
  4784  003012  6E3D               	movwf	_isdigit$2082,c
  4785  003014                     l4773:
  4786  003014  C03D  F03C         	movff	_isdigit$2082,??_isdigit
  4787  003018  303C               	rrcf	??_isdigit,w,c
  4788  00301A  0012               	return	
  4789  00301C                     __end_of_isdigit:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon	equ	0xFF2
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _fround *****************
  4807 ;; Defined at:
  4808 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  prec            1    wreg     unsigned char 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  prec            1   67[BANK0 ] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  4   55[BANK0 ] unsigned char 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4822 ;;      Params:         0       4       0       0
  4823 ;;      Locals:         0       9       0       0
  4824 ;;      Temps:          0       0       0       0
  4825 ;;      Totals:         0      13       0       0
  4826 ;;Total ram usage:       13 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    5
  4829 ;; This function calls:
  4830 ;;		___awdiv
  4831 ;;		___awmod
  4832 ;;		___flmul
  4833 ;; This function is called by:
  4834 ;;		_sprintf
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text14
  4839  001A7E                     __ptext14:
  4840                           	opt stack 0
  4841  001A7E                     _fround:
  4842                           	opt stack 23
  4843                           
  4844                           ;incstack = 0
  4845                           ;fround@prec stored from wreg
  4846  001A7E  0100               	movlb	0	; () banked
  4847  001A80  6FA3               	movwf	fround@prec& (0+255),b
  4848                           
  4849                           ;doprnt.c: 413: if(prec>=110)
  4850  001A82  0E6D               	movlw	109
  4851  001A84  0100               	movlb	0	; () banked
  4852  001A86  65A3               	cpfsgt	fround@prec& (0+255),b
  4853  001A88  D0BC               	goto	l4715
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4857  001A8A  0E00               	movlw	0
  4858  001A8C  0100               	movlb	0	; () banked
  4859  001A8E  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4860  001A90  0E0A               	movlw	10
  4861  001A92  6F72               	movwf	___awdiv@divisor& (0+255),b
  4862  001A94  0E00               	movlw	0
  4863  001A96  6E3F               	movwf	___awmod@divisor+1,c
  4864  001A98  0E64               	movlw	100
  4865  001A9A  6E3E               	movwf	___awmod@divisor,c
  4866  001A9C  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4867  001AA0  6A3D               	clrf	___awmod@dividend+1,c
  4868  001AA2  ECF8  F015         	call	___awmod	;wreg free
  4869  001AA6  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4870  001AAA  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4871  001AAE  EC54  F014         	call	___awdiv	;wreg free
  4872  001AB2  0100               	movlb	0	; () banked
  4873  001AB4  90D8               	bcf	status,0,c
  4874  001AB6  3770               	rlcf	?___awdiv& (0+255),f,b
  4875  001AB8  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4876  001ABA  0100               	movlb	0	; () banked
  4877  001ABC  90D8               	bcf	status,0,c
  4878  001ABE  3770               	rlcf	?___awdiv& (0+255),f,b
  4879  001AC0  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4880  001AC2  0E24               	movlw	36
  4881  001AC4  0100               	movlb	0	; () banked
  4882  001AC6  2770               	addwf	?___awdiv& (0+255),f,b
  4883  001AC8  0E00               	movlw	0
  4884  001ACA  0100               	movlb	0	; () banked
  4885  001ACC  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4886  001ACE  0EEB               	movlw	low __npowers_
  4887  001AD0  0100               	movlb	0	; () banked
  4888  001AD2  2570               	addwf	?___awdiv& (0+255),w,b
  4889  001AD4  6EF6               	movwf	tblptrl,c
  4890  001AD6  0E3E               	movlw	high __npowers_
  4891  001AD8  0100               	movlb	0	; () banked
  4892  001ADA  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4893  001ADC  6EF7               	movwf	tblptrh,c
  4894  001ADE                     	if	0	;There are less than 3 active tblptr bytes
  4895  001ADE                     	endif
  4896  001ADE  0009               	tblrd		*+
  4897  001AE0  CFF5 F082          	movff	tablat,___flmul@a
  4898  001AE4  0009               	tblrd		*+
  4899  001AE6  CFF5 F083          	movff	tablat,___flmul@a+1
  4900  001AEA  0009               	tblrd		*+
  4901  001AEC  CFF5 F084          	movff	tablat,___flmul@a+2
  4902  001AF0  000A               	tblrd		*-
  4903  001AF2  CFF5 F085          	movff	tablat,___flmul@a+3
  4904  001AF6  0E00               	movlw	0
  4905  001AF8  0100               	movlb	0	; () banked
  4906  001AFA  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4907  001AFC  0E64               	movlw	100
  4908  001AFE  6F72               	movwf	___awdiv@divisor& (0+255),b
  4909  001B00  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  4910  001B04  0100               	movlb	0	; () banked
  4911  001B06  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4912  001B08  EC54  F014         	call	___awdiv	;wreg free
  4913  001B0C  0100               	movlb	0	; () banked
  4914  001B0E  90D8               	bcf	status,0,c
  4915  001B10  3770               	rlcf	?___awdiv& (0+255),f,b
  4916  001B12  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4917  001B14  0100               	movlb	0	; () banked
  4918  001B16  90D8               	bcf	status,0,c
  4919  001B18  3770               	rlcf	?___awdiv& (0+255),f,b
  4920  001B1A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4921  001B1C  0E48               	movlw	72
  4922  001B1E  0100               	movlb	0	; () banked
  4923  001B20  2770               	addwf	?___awdiv& (0+255),f,b
  4924  001B22  0E00               	movlw	0
  4925  001B24  0100               	movlb	0	; () banked
  4926  001B26  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4927  001B28  0EEB               	movlw	low __npowers_
  4928  001B2A  0100               	movlb	0	; () banked
  4929  001B2C  2570               	addwf	?___awdiv& (0+255),w,b
  4930  001B2E  6EF6               	movwf	tblptrl,c
  4931  001B30  0E3E               	movlw	high __npowers_
  4932  001B32  0100               	movlb	0	; () banked
  4933  001B34  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4934  001B36  6EF7               	movwf	tblptrh,c
  4935  001B38                     	if	0	;There are less than 3 active tblptr bytes
  4936  001B38                     	endif
  4937  001B38  0009               	tblrd		*+
  4938  001B3A  CFF5 F07E          	movff	tablat,___flmul@b
  4939  001B3E  0009               	tblrd		*+
  4940  001B40  CFF5 F07F          	movff	tablat,___flmul@b+1
  4941  001B44  0009               	tblrd		*+
  4942  001B46  CFF5 F080          	movff	tablat,___flmul@b+2
  4943  001B4A  000A               	tblrd		*-
  4944  001B4C  CFF5 F081          	movff	tablat,___flmul@b+3
  4945  001B50  ECE4  F006         	call	___flmul	;wreg free
  4946  001B54  C07E  F09F         	movff	?___flmul,_fround$2474
  4947  001B58  C07F  F0A0         	movff	?___flmul+1,_fround$2474+1
  4948  001B5C  C080  F0A1         	movff	?___flmul+2,_fround$2474+2
  4949  001B60  C081  F0A2         	movff	?___flmul+3,_fround$2474+3
  4950                           
  4951                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4952  001B64  0E00               	movlw	0
  4953  001B66  6E3F               	movwf	___awmod@divisor+1,c
  4954  001B68  0E0A               	movlw	10
  4955  001B6A  6E3E               	movwf	___awmod@divisor,c
  4956  001B6C  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4957  001B70  6A3D               	clrf	___awmod@dividend+1,c
  4958  001B72  ECF8  F015         	call	___awmod	;wreg free
  4959  001B76  90D8               	bcf	status,0,c
  4960  001B78  363C               	rlcf	?___awmod,f,c
  4961  001B7A  363D               	rlcf	?___awmod+1,f,c
  4962  001B7C  90D8               	bcf	status,0,c
  4963  001B7E  363C               	rlcf	?___awmod,f,c
  4964  001B80  363D               	rlcf	?___awmod+1,f,c
  4965  001B82  0EEB               	movlw	low __npowers_
  4966  001B84  243C               	addwf	?___awmod,w,c
  4967  001B86  6EF6               	movwf	tblptrl,c
  4968  001B88  0E3E               	movlw	high __npowers_
  4969  001B8A  203D               	addwfc	?___awmod+1,w,c
  4970  001B8C  6EF7               	movwf	tblptrh,c
  4971  001B8E                     	if	0	;There are less than 3 active tblptr bytes
  4972  001B8E                     	endif
  4973  001B8E  0009               	tblrd		*+
  4974  001B90  CFF5 F082          	movff	tablat,___flmul@a
  4975  001B94  0009               	tblrd		*+
  4976  001B96  CFF5 F083          	movff	tablat,___flmul@a+1
  4977  001B9A  0009               	tblrd		*+
  4978  001B9C  CFF5 F084          	movff	tablat,___flmul@a+2
  4979  001BA0  000A               	tblrd		*-
  4980  001BA2  CFF5 F085          	movff	tablat,___flmul@a+3
  4981  001BA6  C09F  F07E         	movff	_fround$2474,___flmul@b
  4982  001BAA  C0A0  F07F         	movff	_fround$2474+1,___flmul@b+1
  4983  001BAE  C0A1  F080         	movff	_fround$2474+2,___flmul@b+2
  4984  001BB2  C0A2  F081         	movff	_fround$2474+3,___flmul@b+3
  4985  001BB6  ECE4  F006         	call	___flmul	;wreg free
  4986  001BBA  C07E  F09B         	movff	?___flmul,_fround$2475
  4987  001BBE  C07F  F09C         	movff	?___flmul+1,_fround$2475+1
  4988  001BC2  C080  F09D         	movff	?___flmul+2,_fround$2475+2
  4989  001BC6  C081  F09E         	movff	?___flmul+3,_fround$2475+3
  4990                           
  4991                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4992  001BCA  C09B  F07E         	movff	_fround$2475,___flmul@b
  4993  001BCE  C09C  F07F         	movff	_fround$2475+1,___flmul@b+1
  4994  001BD2  C09D  F080         	movff	_fround$2475+2,___flmul@b+2
  4995  001BD6  C09E  F081         	movff	_fround$2475+3,___flmul@b+3
  4996  001BDA  0E00               	movlw	0
  4997  001BDC  0100               	movlb	0	; () banked
  4998  001BDE  6F82               	movwf	___flmul@a& (0+255),b
  4999  001BE0  0E00               	movlw	0
  5000  001BE2  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5001  001BE4  0E00               	movlw	0
  5002  001BE6  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5003  001BE8  0E3F               	movlw	63
  5004  001BEA  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5005  001BEC  ECE4  F006         	call	___flmul	;wreg free
  5006  001BF0  C07E  F097         	movff	?___flmul,?_fround
  5007  001BF4  C07F  F098         	movff	?___flmul+1,?_fround+1
  5008  001BF8  C080  F099         	movff	?___flmul+2,?_fround+2
  5009  001BFC  C081  F09A         	movff	?___flmul+3,?_fround+3
  5010  001C00  0012               	return	
  5011  001C02                     l4715:
  5012                           
  5013                           ;doprnt.c: 415: else if(prec > 10)
  5014  001C02  0E0A               	movlw	10
  5015  001C04  0100               	movlb	0	; () banked
  5016  001C06  65A3               	cpfsgt	fround@prec& (0+255),b
  5017  001C08  D06C               	goto	l4723
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5021  001C0A  0E00               	movlw	0
  5022  001C0C  6E3F               	movwf	___awmod@divisor+1,c
  5023  001C0E  0E0A               	movlw	10
  5024  001C10  6E3E               	movwf	___awmod@divisor,c
  5025  001C12  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5026  001C16  6A3D               	clrf	___awmod@dividend+1,c
  5027  001C18  ECF8  F015         	call	___awmod	;wreg free
  5028  001C1C  90D8               	bcf	status,0,c
  5029  001C1E  363C               	rlcf	?___awmod,f,c
  5030  001C20  363D               	rlcf	?___awmod+1,f,c
  5031  001C22  90D8               	bcf	status,0,c
  5032  001C24  363C               	rlcf	?___awmod,f,c
  5033  001C26  363D               	rlcf	?___awmod+1,f,c
  5034  001C28  0EEB               	movlw	low __npowers_
  5035  001C2A  243C               	addwf	?___awmod,w,c
  5036  001C2C  6EF6               	movwf	tblptrl,c
  5037  001C2E  0E3E               	movlw	high __npowers_
  5038  001C30  203D               	addwfc	?___awmod+1,w,c
  5039  001C32  6EF7               	movwf	tblptrh,c
  5040  001C34                     	if	0	;There are less than 3 active tblptr bytes
  5041  001C34                     	endif
  5042  001C34  0009               	tblrd		*+
  5043  001C36  CFF5 F082          	movff	tablat,___flmul@a
  5044  001C3A  0009               	tblrd		*+
  5045  001C3C  CFF5 F083          	movff	tablat,___flmul@a+1
  5046  001C40  0009               	tblrd		*+
  5047  001C42  CFF5 F084          	movff	tablat,___flmul@a+2
  5048  001C46  000A               	tblrd		*-
  5049  001C48  CFF5 F085          	movff	tablat,___flmul@a+3
  5050  001C4C  0E00               	movlw	0
  5051  001C4E  0100               	movlb	0	; () banked
  5052  001C50  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5053  001C52  0E0A               	movlw	10
  5054  001C54  6F72               	movwf	___awdiv@divisor& (0+255),b
  5055  001C56  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5056  001C5A  0100               	movlb	0	; () banked
  5057  001C5C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5058  001C5E  EC54  F014         	call	___awdiv	;wreg free
  5059  001C62  0100               	movlb	0	; () banked
  5060  001C64  90D8               	bcf	status,0,c
  5061  001C66  3770               	rlcf	?___awdiv& (0+255),f,b
  5062  001C68  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5063  001C6A  0100               	movlb	0	; () banked
  5064  001C6C  90D8               	bcf	status,0,c
  5065  001C6E  3770               	rlcf	?___awdiv& (0+255),f,b
  5066  001C70  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5067  001C72  0E24               	movlw	36
  5068  001C74  0100               	movlb	0	; () banked
  5069  001C76  2770               	addwf	?___awdiv& (0+255),f,b
  5070  001C78  0E00               	movlw	0
  5071  001C7A  0100               	movlb	0	; () banked
  5072  001C7C  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5073  001C7E  0EEB               	movlw	low __npowers_
  5074  001C80  0100               	movlb	0	; () banked
  5075  001C82  2570               	addwf	?___awdiv& (0+255),w,b
  5076  001C84  6EF6               	movwf	tblptrl,c
  5077  001C86  0E3E               	movlw	high __npowers_
  5078  001C88  0100               	movlb	0	; () banked
  5079  001C8A  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5080  001C8C  6EF7               	movwf	tblptrh,c
  5081  001C8E                     	if	0	;There are less than 3 active tblptr bytes
  5082  001C8E                     	endif
  5083  001C8E  0009               	tblrd		*+
  5084  001C90  CFF5 F07E          	movff	tablat,___flmul@b
  5085  001C94  0009               	tblrd		*+
  5086  001C96  CFF5 F07F          	movff	tablat,___flmul@b+1
  5087  001C9A  0009               	tblrd		*+
  5088  001C9C  CFF5 F080          	movff	tablat,___flmul@b+2
  5089  001CA0  000A               	tblrd		*-
  5090  001CA2  CFF5 F081          	movff	tablat,___flmul@b+3
  5091  001CA6  ECE4  F006         	call	___flmul	;wreg free
  5092  001CAA  C07E  F09F         	movff	?___flmul,_fround$2474
  5093  001CAE  C07F  F0A0         	movff	?___flmul+1,_fround$2474+1
  5094  001CB2  C080  F0A1         	movff	?___flmul+2,_fround$2474+2
  5095  001CB6  C081  F0A2         	movff	?___flmul+3,_fround$2474+3
  5096                           
  5097                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5098  001CBA  C09F  F07E         	movff	_fround$2474,___flmul@b
  5099  001CBE  C0A0  F07F         	movff	_fround$2474+1,___flmul@b+1
  5100  001CC2  C0A1  F080         	movff	_fround$2474+2,___flmul@b+2
  5101  001CC6  C0A2  F081         	movff	_fround$2474+3,___flmul@b+3
  5102  001CCA  0E00               	movlw	0
  5103  001CCC  0100               	movlb	0	; () banked
  5104  001CCE  6F82               	movwf	___flmul@a& (0+255),b
  5105  001CD0  0E00               	movlw	0
  5106  001CD2  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5107  001CD4  0E00               	movlw	0
  5108  001CD6  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5109  001CD8  0E3F               	movlw	63
  5110  001CDA  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5111  001CDC  ECE4  F006         	call	___flmul	;wreg free
  5112  001CE0  D787               	goto	L6
  5113  001CE2                     l4723:
  5114                           
  5115                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5116  001CE2  0100               	movlb	0	; () banked
  5117  001CE4  51A3               	movf	fround@prec& (0+255),w,b
  5118  001CE6  0D04               	mullw	4
  5119  001CE8  0EEB               	movlw	low __npowers_
  5120  001CEA  24F3               	addwf	prodl,w,c
  5121  001CEC  6EF6               	movwf	tblptrl,c
  5122  001CEE  0E3E               	movlw	high __npowers_
  5123  001CF0  20F4               	addwfc	prodh,w,c
  5124  001CF2  6EF7               	movwf	tblptrh,c
  5125  001CF4                     	if	0	;There are less than 3 active tblptr bytes
  5126  001CF4                     	endif
  5127  001CF4  0009               	tblrd		*+
  5128  001CF6  CFF5 F07E          	movff	tablat,___flmul@b
  5129  001CFA  0009               	tblrd		*+
  5130  001CFC  CFF5 F07F          	movff	tablat,___flmul@b+1
  5131  001D00  0009               	tblrd		*+
  5132  001D02  CFF5 F080          	movff	tablat,___flmul@b+2
  5133  001D06  000A               	tblrd		*-
  5134  001D08  CFF5 F081          	movff	tablat,___flmul@b+3
  5135  001D0C  0E00               	movlw	0
  5136  001D0E  0100               	movlb	0	; () banked
  5137  001D10  6F82               	movwf	___flmul@a& (0+255),b
  5138  001D12  0E00               	movlw	0
  5139  001D14  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5140  001D16  0E00               	movlw	0
  5141  001D18  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5142  001D1A  0E3F               	movlw	63
  5143  001D1C  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5144  001D1E  ECE4  F006         	call	___flmul	;wreg free
  5145  001D22  C07E  F097         	movff	?___flmul,?_fround
  5146  001D26  C07F  F098         	movff	?___flmul+1,?_fround+1
  5147  001D2A  C080  F099         	movff	?___flmul+2,?_fround+2
  5148  001D2E  C081  F09A         	movff	?___flmul+3,?_fround+3
  5149  001D32  0012               	return	
  5150  001D34                     __end_of_fround:
  5151                           	opt stack 0
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           fsr2h	equ	0xFDA
  5164                           fsr2l	equ	0xFD9
  5165                           status	equ	0xFD8
  5166                           
  5167 ;; *************** function ___flmul *****************
  5168 ;; Defined at:
  5169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  b               4   30[BANK0 ] unsigned char 
  5172 ;;  a               4   34[BANK0 ] unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  prod            4   49[BANK0 ] struct .
  5175 ;;  grs             4   44[BANK0 ] unsigned long 
  5176 ;;  temp            2   53[BANK0 ] struct .
  5177 ;;  bexp            1   48[BANK0 ] unsigned char 
  5178 ;;  aexp            1   43[BANK0 ] unsigned char 
  5179 ;;  sign            1   42[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  4   30[BANK0 ] unsigned char 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, prodl, prodh
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5189 ;;      Params:         0       8       0       0
  5190 ;;      Locals:         0      13       0       0
  5191 ;;      Temps:          0       4       0       0
  5192 ;;      Totals:         0      25       0       0
  5193 ;;Total ram usage:       25 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    4
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;;		_fround
  5201 ;;		_scale
  5202 ;;		_sprintf
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text15
  5207  000DC8                     __ptext15:
  5208                           	opt stack 0
  5209  000DC8                     ___flmul:
  5210                           	opt stack 26
  5211                           
  5212                           ;incstack = 0
  5213  000DC8  0100               	movlb	0	; () banked
  5214  000DCA  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5215  000DCC  0B80               	andlw	128
  5216  000DCE  0100               	movlb	0	; () banked
  5217  000DD0  6F8A               	movwf	___flmul@sign& (0+255),b
  5218  000DD2  0100               	movlb	0	; () banked
  5219  000DD4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5220  000DD6  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5221  000DD8  0100               	movlb	0	; () banked
  5222  000DDA  6F90               	movwf	___flmul@bexp& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225  000DDC  0100               	movlb	0	; () banked
  5226  000DDE  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5227  000DE0  D002               	goto	l4479
  5228                           
  5229                           ; BSR set to: 0
  5230  000DE2  0100               	movlb	0	; () banked
  5231  000DE4  8190               	bsf	___flmul@bexp& (0+255),0,b
  5232  000DE6                     l4479:
  5233                           
  5234                           ; BSR set to: 0
  5235  000DE6  0100               	movlb	0	; () banked
  5236  000DE8  5190               	movf	___flmul@bexp& (0+255),w,b
  5237  000DEA  0100               	movlb	0	; () banked
  5238  000DEC  B4D8               	btfsc	status,2,c
  5239  000DEE  D010               	goto	l4487
  5240                           
  5241                           ; BSR set to: 0
  5242  000DF0  0100               	movlb	0	; () banked
  5243  000DF2  2990               	incf	___flmul@bexp& (0+255),w,b
  5244  000DF4  A4D8               	btfss	status,2,c
  5245  000DF6  D009               	goto	l4485
  5246                           
  5247                           ; BSR set to: 0
  5248  000DF8  0E00               	movlw	0
  5249  000DFA  0100               	movlb	0	; () banked
  5250  000DFC  6F7E               	movwf	___flmul@b& (0+255),b
  5251  000DFE  0E00               	movlw	0
  5252  000E00  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5253  000E02  0E00               	movlw	0
  5254  000E04  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5255  000E06  0E00               	movlw	0
  5256  000E08  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5257  000E0A                     l4485:
  5258                           
  5259                           ; BSR set to: 0
  5260  000E0A  0100               	movlb	0	; () banked
  5261  000E0C  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5262  000E0E  D009               	goto	l4489
  5263  000E10                     l4487:
  5264                           
  5265                           ; BSR set to: 0
  5266  000E10  0E00               	movlw	0
  5267  000E12  0100               	movlb	0	; () banked
  5268  000E14  6F7E               	movwf	___flmul@b& (0+255),b
  5269  000E16  0E00               	movlw	0
  5270  000E18  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5271  000E1A  0E00               	movlw	0
  5272  000E1C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5273  000E1E  0E00               	movlw	0
  5274  000E20  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5275  000E22                     l4489:
  5276                           
  5277                           ; BSR set to: 0
  5278  000E22  0100               	movlb	0	; () banked
  5279  000E24  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5280  000E26  0B80               	andlw	128
  5281  000E28  0100               	movlb	0	; () banked
  5282  000E2A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5283                           
  5284                           ; BSR set to: 0
  5285  000E2C  0100               	movlb	0	; () banked
  5286  000E2E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5287  000E30  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5288  000E32  0100               	movlb	0	; () banked
  5289  000E34  6F8B               	movwf	___flmul@aexp& (0+255),b
  5290                           
  5291                           ; BSR set to: 0
  5292  000E36  0100               	movlb	0	; () banked
  5293  000E38  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5294  000E3A  D002               	goto	l4497
  5295                           
  5296                           ; BSR set to: 0
  5297  000E3C  0100               	movlb	0	; () banked
  5298  000E3E  818B               	bsf	___flmul@aexp& (0+255),0,b
  5299  000E40                     l4497:
  5300                           
  5301                           ; BSR set to: 0
  5302  000E40  0100               	movlb	0	; () banked
  5303  000E42  518B               	movf	___flmul@aexp& (0+255),w,b
  5304  000E44  0100               	movlb	0	; () banked
  5305  000E46  B4D8               	btfsc	status,2,c
  5306  000E48  D010               	goto	l4505
  5307                           
  5308                           ; BSR set to: 0
  5309  000E4A  0100               	movlb	0	; () banked
  5310  000E4C  298B               	incf	___flmul@aexp& (0+255),w,b
  5311  000E4E  A4D8               	btfss	status,2,c
  5312  000E50  D009               	goto	l4503
  5313                           
  5314                           ; BSR set to: 0
  5315  000E52  0E00               	movlw	0
  5316  000E54  0100               	movlb	0	; () banked
  5317  000E56  6F82               	movwf	___flmul@a& (0+255),b
  5318  000E58  0E00               	movlw	0
  5319  000E5A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5320  000E5C  0E00               	movlw	0
  5321  000E5E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5322  000E60  0E00               	movlw	0
  5323  000E62  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5324  000E64                     l4503:
  5325                           
  5326                           ; BSR set to: 0
  5327  000E64  0100               	movlb	0	; () banked
  5328  000E66  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5329  000E68  D009               	goto	l1049
  5330  000E6A                     l4505:
  5331                           
  5332                           ; BSR set to: 0
  5333  000E6A  0E00               	movlw	0
  5334  000E6C  0100               	movlb	0	; () banked
  5335  000E6E  6F82               	movwf	___flmul@a& (0+255),b
  5336  000E70  0E00               	movlw	0
  5337  000E72  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5338  000E74  0E00               	movlw	0
  5339  000E76  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5340  000E78  0E00               	movlw	0
  5341  000E7A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5342  000E7C                     l1049:
  5343                           
  5344                           ; BSR set to: 0
  5345  000E7C  0100               	movlb	0	; () banked
  5346  000E7E  518B               	movf	___flmul@aexp& (0+255),w,b
  5347  000E80  0100               	movlb	0	; () banked
  5348  000E82  B4D8               	btfsc	status,2,c
  5349  000E84  D005               	goto	l4509
  5350                           
  5351                           ; BSR set to: 0
  5352  000E86  0100               	movlb	0	; () banked
  5353  000E88  5190               	movf	___flmul@bexp& (0+255),w,b
  5354  000E8A  0100               	movlb	0	; () banked
  5355  000E8C  A4D8               	btfss	status,2,c
  5356  000E8E  D00A               	goto	l4513
  5357  000E90                     l4509:
  5358                           
  5359                           ; BSR set to: 0
  5360  000E90  0E00               	movlw	0
  5361  000E92  0100               	movlb	0	; () banked
  5362  000E94  6F7E               	movwf	?___flmul& (0+255),b
  5363  000E96  0E00               	movlw	0
  5364  000E98  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5365  000E9A  0E00               	movlw	0
  5366  000E9C  6F80               	movwf	(?___flmul+2)& (0+255),b
  5367  000E9E  0E00               	movlw	0
  5368  000EA0  6F81               	movwf	(?___flmul+3)& (0+255),b
  5369                           
  5370                           ; BSR set to: 0
  5371  000EA2  0012               	return	
  5372  000EA4                     l4513:
  5373                           
  5374                           ; BSR set to: 0
  5375  000EA4  0100               	movlb	0	; () banked
  5376  000EA6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5377  000EA8  0100               	movlb	0	; () banked
  5378  000EAA  037E               	mulwf	___flmul@b& (0+255),b
  5379  000EAC  CFF3 F095          	movff	prodl,___flmul@temp
  5380  000EB0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5381                           
  5382                           ; BSR set to: 0
  5383  000EB4  0100               	movlb	0	; () banked
  5384  000EB6  5195               	movf	___flmul@temp& (0+255),w,b
  5385  000EB8  0100               	movlb	0	; () banked
  5386  000EBA  6F8C               	movwf	___flmul@grs& (0+255),b
  5387  000EBC  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5388  000EBE  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5389  000EC0  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5390                           
  5391                           ; BSR set to: 0
  5392  000EC2  0100               	movlb	0	; () banked
  5393  000EC4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5394  000EC6  0100               	movlb	0	; () banked
  5395  000EC8  6F91               	movwf	___flmul@prod& (0+255),b
  5396  000ECA  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5397  000ECC  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5398  000ECE  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5399  000ED0  0100               	movlb	0	; () banked
  5400  000ED2  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5401  000ED4  0100               	movlb	0	; () banked
  5402  000ED6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5403  000ED8  CFF3 F095          	movff	prodl,___flmul@temp
  5404  000EDC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5405                           
  5406                           ; BSR set to: 0
  5407  000EE0  0100               	movlb	0	; () banked
  5408  000EE2  5195               	movf	___flmul@temp& (0+255),w,b
  5409  000EE4  0100               	movlb	0	; () banked
  5410  000EE6  278C               	addwf	___flmul@grs& (0+255),f,b
  5411  000EE8  0E00               	movlw	0
  5412  000EEA  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5413  000EEC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5414  000EEE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5415                           
  5416                           ; BSR set to: 0
  5417  000EF0  0100               	movlb	0	; () banked
  5418  000EF2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5419  000EF4  0100               	movlb	0	; () banked
  5420  000EF6  2791               	addwf	___flmul@prod& (0+255),f,b
  5421  000EF8  0E00               	movlw	0
  5422  000EFA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5423  000EFC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5424  000EFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5425  000F00  0100               	movlb	0	; () banked
  5426  000F02  5182               	movf	___flmul@a& (0+255),w,b
  5427  000F04  0100               	movlb	0	; () banked
  5428  000F06  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5429  000F08  CFF3 F095          	movff	prodl,___flmul@temp
  5430  000F0C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5431                           
  5432                           ; BSR set to: 0
  5433  000F10  0100               	movlb	0	; () banked
  5434  000F12  5195               	movf	___flmul@temp& (0+255),w,b
  5435  000F14  0100               	movlb	0	; () banked
  5436  000F16  278C               	addwf	___flmul@grs& (0+255),f,b
  5437  000F18  0E00               	movlw	0
  5438  000F1A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5439  000F1C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5440  000F1E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5441                           
  5442                           ; BSR set to: 0
  5443  000F20  0100               	movlb	0	; () banked
  5444  000F22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5445  000F24  0100               	movlb	0	; () banked
  5446  000F26  2791               	addwf	___flmul@prod& (0+255),f,b
  5447  000F28  0E00               	movlw	0
  5448  000F2A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5449  000F2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5450  000F2E  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 0
  5453  000F30  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5454  000F34  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5455  000F38  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5456  000F3C  0100               	movlb	0	; () banked
  5457  000F3E  6B8C               	clrf	___flmul@grs& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460  000F40  0100               	movlb	0	; () banked
  5461  000F42  5182               	movf	___flmul@a& (0+255),w,b
  5462  000F44  0100               	movlb	0	; () banked
  5463  000F46  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5464  000F48  CFF3 F095          	movff	prodl,___flmul@temp
  5465  000F4C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5466                           
  5467                           ; BSR set to: 0
  5468  000F50  0100               	movlb	0	; () banked
  5469  000F52  5195               	movf	___flmul@temp& (0+255),w,b
  5470  000F54  0100               	movlb	0	; () banked
  5471  000F56  278C               	addwf	___flmul@grs& (0+255),f,b
  5472  000F58  0100               	movlb	0	; () banked
  5473  000F5A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5474  000F5C  0100               	movlb	0	; () banked
  5475  000F5E  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5476  000F60  0E00               	movlw	0
  5477  000F62  0100               	movlb	0	; () banked
  5478  000F64  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5479  000F66  0E00               	movlw	0
  5480  000F68  0100               	movlb	0	; () banked
  5481  000F6A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5482                           
  5483                           ; BSR set to: 0
  5484  000F6C  0100               	movlb	0	; () banked
  5485  000F6E  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5486  000F70  0100               	movlb	0	; () banked
  5487  000F72  037E               	mulwf	___flmul@b& (0+255),b
  5488  000F74  CFF3 F095          	movff	prodl,___flmul@temp
  5489  000F78  CFF4 F096          	movff	prodh,___flmul@temp+1
  5490                           
  5491                           ; BSR set to: 0
  5492  000F7C  0100               	movlb	0	; () banked
  5493  000F7E  5195               	movf	___flmul@temp& (0+255),w,b
  5494  000F80  0100               	movlb	0	; () banked
  5495  000F82  278C               	addwf	___flmul@grs& (0+255),f,b
  5496  000F84  0100               	movlb	0	; () banked
  5497  000F86  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5498  000F88  0100               	movlb	0	; () banked
  5499  000F8A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5500  000F8C  0E00               	movlw	0
  5501  000F8E  0100               	movlb	0	; () banked
  5502  000F90  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5503  000F92  0E00               	movlw	0
  5504  000F94  0100               	movlb	0	; () banked
  5505  000F96  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5506                           
  5507                           ; BSR set to: 0
  5508  000F98  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5509  000F9C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5510  000FA0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5511  000FA4  0100               	movlb	0	; () banked
  5512  000FA6  6B8C               	clrf	___flmul@grs& (0+255),b
  5513  000FA8  0100               	movlb	0	; () banked
  5514  000FAA  5182               	movf	___flmul@a& (0+255),w,b
  5515  000FAC  0100               	movlb	0	; () banked
  5516  000FAE  037E               	mulwf	___flmul@b& (0+255),b
  5517  000FB0  CFF3 F095          	movff	prodl,___flmul@temp
  5518  000FB4  CFF4 F096          	movff	prodh,___flmul@temp+1
  5519                           
  5520                           ; BSR set to: 0
  5521  000FB8  0100               	movlb	0	; () banked
  5522  000FBA  5195               	movf	___flmul@temp& (0+255),w,b
  5523  000FBC  0100               	movlb	0	; () banked
  5524  000FBE  278C               	addwf	___flmul@grs& (0+255),f,b
  5525  000FC0  0100               	movlb	0	; () banked
  5526  000FC2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5527  000FC4  0100               	movlb	0	; () banked
  5528  000FC6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5529  000FC8  0E00               	movlw	0
  5530  000FCA  0100               	movlb	0	; () banked
  5531  000FCC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5532  000FCE  0E00               	movlw	0
  5533  000FD0  0100               	movlb	0	; () banked
  5534  000FD2  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5535                           
  5536                           ; BSR set to: 0
  5537  000FD4  0100               	movlb	0	; () banked
  5538  000FD6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5539  000FD8  0100               	movlb	0	; () banked
  5540  000FDA  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5541  000FDC  CFF3 F095          	movff	prodl,___flmul@temp
  5542  000FE0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5543  000FE4  0100               	movlb	0	; () banked
  5544  000FE6  5195               	movf	___flmul@temp& (0+255),w,b
  5545  000FE8  0100               	movlb	0	; () banked
  5546  000FEA  2791               	addwf	___flmul@prod& (0+255),f,b
  5547  000FEC  0100               	movlb	0	; () banked
  5548  000FEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5549  000FF0  0100               	movlb	0	; () banked
  5550  000FF2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5551  000FF4  0E00               	movlw	0
  5552  000FF6  0100               	movlb	0	; () banked
  5553  000FF8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5554  000FFA  0E00               	movlw	0
  5555  000FFC  0100               	movlb	0	; () banked
  5556  000FFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5557                           
  5558                           ; BSR set to: 0
  5559  001000  0100               	movlb	0	; () banked
  5560  001002  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5561  001004  0100               	movlb	0	; () banked
  5562  001006  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5563  001008  CFF3 F095          	movff	prodl,___flmul@temp
  5564  00100C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5565                           
  5566                           ; BSR set to: 0
  5567  001010  0100               	movlb	0	; () banked
  5568  001012  5195               	movf	___flmul@temp& (0+255),w,b
  5569  001014  0100               	movlb	0	; () banked
  5570  001016  2791               	addwf	___flmul@prod& (0+255),f,b
  5571  001018  0100               	movlb	0	; () banked
  5572  00101A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5573  00101C  0100               	movlb	0	; () banked
  5574  00101E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5575  001020  0E00               	movlw	0
  5576  001022  0100               	movlb	0	; () banked
  5577  001024  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5578  001026  0E00               	movlw	0
  5579  001028  0100               	movlb	0	; () banked
  5580  00102A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5581  00102C  0100               	movlb	0	; () banked
  5582  00102E  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5583  001030  0100               	movlb	0	; () banked
  5584  001032  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5585  001034  CFF3 F095          	movff	prodl,___flmul@temp
  5586  001038  CFF4 F096          	movff	prodh,___flmul@temp+1
  5587                           
  5588                           ; BSR set to: 0
  5589  00103C  0100               	movlb	0	; () banked
  5590  00103E  5195               	movf	___flmul@temp& (0+255),w,b
  5591  001040  0100               	movlb	0	; () banked
  5592  001042  6F86               	movwf	??___flmul& (0+255),b
  5593  001044  0100               	movlb	0	; () banked
  5594  001046  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5595  001048  0100               	movlb	0	; () banked
  5596  00104A  6F87               	movwf	(??___flmul+1)& (0+255),b
  5597  00104C  0100               	movlb	0	; () banked
  5598  00104E  6B88               	clrf	(??___flmul+2)& (0+255),b
  5599  001050  0100               	movlb	0	; () banked
  5600  001052  6B89               	clrf	(??___flmul+3)& (0+255),b
  5601  001054  C088  F089         	movff	??___flmul+2,??___flmul+3
  5602  001058  C087  F088         	movff	??___flmul+1,??___flmul+2
  5603  00105C  C086  F087         	movff	??___flmul,??___flmul+1
  5604  001060  0100               	movlb	0	; () banked
  5605  001062  6B86               	clrf	??___flmul& (0+255),b
  5606  001064  0100               	movlb	0	; () banked
  5607  001066  5186               	movf	??___flmul& (0+255),w,b
  5608  001068  0100               	movlb	0	; () banked
  5609  00106A  2791               	addwf	___flmul@prod& (0+255),f,b
  5610  00106C  0100               	movlb	0	; () banked
  5611  00106E  5187               	movf	(??___flmul+1)& (0+255),w,b
  5612  001070  0100               	movlb	0	; () banked
  5613  001072  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5614  001074  0100               	movlb	0	; () banked
  5615  001076  5188               	movf	(??___flmul+2)& (0+255),w,b
  5616  001078  0100               	movlb	0	; () banked
  5617  00107A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5618  00107C  0100               	movlb	0	; () banked
  5619  00107E  5189               	movf	(??___flmul+3)& (0+255),w,b
  5620  001080  0100               	movlb	0	; () banked
  5621  001082  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5622                           
  5623                           ; BSR set to: 0
  5624  001084  C08C  F086         	movff	___flmul@grs,??___flmul
  5625  001088  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5626  00108C  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5627  001090  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5628  001094  0E19               	movlw	25
  5629  001096  D006               	goto	u5110
  5630  001098                     u5115:
  5631  001098  0100               	movlb	0	; () banked
  5632  00109A  90D8               	bcf	status,0,c
  5633  00109C  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5634  00109E  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5635  0010A0  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5636  0010A2  3386               	rrcf	??___flmul& (0+255),f,b
  5637  0010A4                     u5110:
  5638  0010A4  2EE8               	decfsz	wreg,f,c
  5639  0010A6  D7F8               	goto	u5115
  5640  0010A8  0100               	movlb	0	; () banked
  5641  0010AA  5186               	movf	??___flmul& (0+255),w,b
  5642  0010AC  0100               	movlb	0	; () banked
  5643  0010AE  2791               	addwf	___flmul@prod& (0+255),f,b
  5644  0010B0  0100               	movlb	0	; () banked
  5645  0010B2  5187               	movf	(??___flmul+1)& (0+255),w,b
  5646  0010B4  0100               	movlb	0	; () banked
  5647  0010B6  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5648  0010B8  0100               	movlb	0	; () banked
  5649  0010BA  5188               	movf	(??___flmul+2)& (0+255),w,b
  5650  0010BC  0100               	movlb	0	; () banked
  5651  0010BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5652  0010C0  0100               	movlb	0	; () banked
  5653  0010C2  5189               	movf	(??___flmul+3)& (0+255),w,b
  5654  0010C4  0100               	movlb	0	; () banked
  5655  0010C6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5656                           
  5657                           ; BSR set to: 0
  5658  0010C8  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5659  0010CC  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5660  0010D0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5661  0010D4  0100               	movlb	0	; () banked
  5662  0010D6  6B8C               	clrf	___flmul@grs& (0+255),b
  5663                           
  5664                           ; BSR set to: 0
  5665  0010D8  0100               	movlb	0	; () banked
  5666  0010DA  518B               	movf	___flmul@aexp& (0+255),w,b
  5667  0010DC  C090  F086         	movff	___flmul@bexp,??___flmul
  5668  0010E0  0100               	movlb	0	; () banked
  5669  0010E2  6B87               	clrf	(??___flmul+1)& (0+255),b
  5670  0010E4  0100               	movlb	0	; () banked
  5671  0010E6  2786               	addwf	??___flmul& (0+255),f,b
  5672  0010E8  0E00               	movlw	0
  5673  0010EA  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5674  0010EC  0E82               	movlw	130
  5675  0010EE  0100               	movlb	0	; () banked
  5676  0010F0  2586               	addwf	??___flmul& (0+255),w,b
  5677  0010F2  0100               	movlb	0	; () banked
  5678  0010F4  6F95               	movwf	___flmul@temp& (0+255),b
  5679  0010F6  0EFF               	movlw	255
  5680  0010F8  0100               	movlb	0	; () banked
  5681  0010FA  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5682  0010FC  0100               	movlb	0	; () banked
  5683  0010FE  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5684  001100  D015               	goto	l4561
  5685  001102                     l4555:
  5686                           
  5687                           ; BSR set to: 0
  5688  001102  0100               	movlb	0	; () banked
  5689  001104  90D8               	bcf	status,0,c
  5690  001106  3791               	rlcf	___flmul@prod& (0+255),f,b
  5691  001108  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5692  00110A  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5693  00110C  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5694                           
  5695                           ; BSR set to: 0
  5696  00110E  0100               	movlb	0	; () banked
  5697  001110  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5698  001112  D002               	goto	l1056
  5699                           
  5700                           ; BSR set to: 0
  5701  001114  0100               	movlb	0	; () banked
  5702  001116  8191               	bsf	___flmul@prod& (0+255),0,b
  5703  001118                     l1056:
  5704                           
  5705                           ; BSR set to: 0
  5706  001118  0100               	movlb	0	; () banked
  5707  00111A  90D8               	bcf	status,0,c
  5708  00111C  378C               	rlcf	___flmul@grs& (0+255),f,b
  5709  00111E  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5710  001120  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5711  001122  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5712  001124  0100               	movlb	0	; () banked
  5713  001126  0795               	decf	___flmul@temp& (0+255),f,b
  5714  001128  A0D8               	btfss	status,0,c
  5715  00112A  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5716  00112C                     l4561:
  5717                           
  5718                           ; BSR set to: 0
  5719  00112C  0100               	movlb	0	; () banked
  5720  00112E  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5721  001130  D7E8               	goto	l4555
  5722                           
  5723                           ; BSR set to: 0
  5724                           
  5725                           ; BSR set to: 0
  5726  001132  0E00               	movlw	0
  5727  001134  0100               	movlb	0	; () banked
  5728  001136  6F8B               	movwf	___flmul@aexp& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731  001138  0100               	movlb	0	; () banked
  5732  00113A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5733  00113C  D024               	goto	l1058
  5734                           
  5735                           ; BSR set to: 0
  5736  00113E  0EFF               	movlw	255
  5737  001140  0100               	movlb	0	; () banked
  5738  001142  158C               	andwf	___flmul@grs& (0+255),w,b
  5739  001144  0100               	movlb	0	; () banked
  5740  001146  6F86               	movwf	??___flmul& (0+255),b
  5741  001148  0EFF               	movlw	255
  5742  00114A  0100               	movlb	0	; () banked
  5743  00114C  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5744  00114E  0100               	movlb	0	; () banked
  5745  001150  6F87               	movwf	(??___flmul+1)& (0+255),b
  5746  001152  0EFF               	movlw	255
  5747  001154  0100               	movlb	0	; () banked
  5748  001156  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5749  001158  0100               	movlb	0	; () banked
  5750  00115A  6F88               	movwf	(??___flmul+2)& (0+255),b
  5751  00115C  0E7F               	movlw	127
  5752  00115E  0100               	movlb	0	; () banked
  5753  001160  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5754  001162  0100               	movlb	0	; () banked
  5755  001164  6F89               	movwf	(??___flmul+3)& (0+255),b
  5756  001166  0100               	movlb	0	; () banked
  5757  001168  5186               	movf	??___flmul& (0+255),w,b
  5758  00116A  0100               	movlb	0	; () banked
  5759  00116C  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5760  00116E  0100               	movlb	0	; () banked
  5761  001170  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5762  001172  0100               	movlb	0	; () banked
  5763  001174  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5764  001176  A4D8               	btfss	status,2,c
  5765  001178  D003               	goto	l4571
  5766                           
  5767                           ; BSR set to: 0
  5768                           
  5769                           ; BSR set to: 0
  5770  00117A  0100               	movlb	0	; () banked
  5771  00117C  A191               	btfss	___flmul@prod& (0+255),0,b
  5772  00117E  D003               	goto	l1058
  5773  001180                     l4571:
  5774                           
  5775                           ; BSR set to: 0
  5776  001180  0E01               	movlw	1
  5777  001182  0100               	movlb	0	; () banked
  5778  001184  6F8B               	movwf	___flmul@aexp& (0+255),b
  5779  001186                     l1058:
  5780                           
  5781                           ; BSR set to: 0
  5782  001186  0100               	movlb	0	; () banked
  5783  001188  518B               	movf	___flmul@aexp& (0+255),w,b
  5784  00118A  0100               	movlb	0	; () banked
  5785  00118C  B4D8               	btfsc	status,2,c
  5786  00118E  D023               	goto	l4581
  5787                           
  5788                           ; BSR set to: 0
  5789  001190  0E01               	movlw	1
  5790  001192  0100               	movlb	0	; () banked
  5791  001194  2791               	addwf	___flmul@prod& (0+255),f,b
  5792  001196  0E00               	movlw	0
  5793  001198  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5794  00119A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5795  00119C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5796                           
  5797                           ; BSR set to: 0
  5798  00119E  0100               	movlb	0	; () banked
  5799  0011A0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  5800  0011A2  D019               	goto	l4581
  5801                           
  5802                           ; BSR set to: 0
  5803  0011A4  C091  F086         	movff	___flmul@prod,??___flmul
  5804  0011A8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  5805  0011AC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  5806  0011B0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  5807  0011B4  0100               	movlb	0	; () banked
  5808  0011B6  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  5809  0011B8  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5810  0011BA  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5811  0011BC  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5812  0011BE  3386               	rrcf	??___flmul& (0+255),f,b
  5813  0011C0  C086  F091         	movff	??___flmul,___flmul@prod
  5814  0011C4  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  5815  0011C8  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  5816  0011CC  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  5817                           
  5818                           ; BSR set to: 0
  5819  0011D0  0100               	movlb	0	; () banked
  5820  0011D2  4B95               	infsnz	___flmul@temp& (0+255),f,b
  5821  0011D4  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  5822  0011D6                     l4581:
  5823                           
  5824                           ; BSR set to: 0
  5825  0011D6  0100               	movlb	0	; () banked
  5826  0011D8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5827  0011DA  D010               	goto	l4585
  5828  0011DC  0100               	movlb	0	; () banked
  5829  0011DE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5830  0011E0  E104               	bnz	u5190
  5831  0011E2  0100               	movlb	0	; () banked
  5832  0011E4  2995               	incf	___flmul@temp& (0+255),w,b
  5833  0011E6  A0D8               	btfss	status,0,c
  5834  0011E8  D009               	goto	l4585
  5835  0011EA                     u5190:
  5836                           
  5837                           ; BSR set to: 0
  5838  0011EA  0E00               	movlw	0
  5839  0011EC  0100               	movlb	0	; () banked
  5840  0011EE  6F91               	movwf	___flmul@prod& (0+255),b
  5841  0011F0  0E00               	movlw	0
  5842  0011F2  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5843  0011F4  0E80               	movlw	128
  5844  0011F6  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5845  0011F8  0E7F               	movlw	127
  5846  0011FA  D02B               	goto	L7
  5847  0011FC                     l4585:
  5848                           
  5849                           ; BSR set to: 0
  5850  0011FC  0100               	movlb	0	; () banked
  5851  0011FE  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5852  001200  D007               	goto	l4587
  5853  001202  0100               	movlb	0	; () banked
  5854  001204  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5855  001206  E111               	bnz	l1066
  5856  001208  0100               	movlb	0	; () banked
  5857  00120A  0595               	decf	___flmul@temp& (0+255),w,b
  5858  00120C  B0D8               	btfsc	status,0,c
  5859  00120E  D00D               	goto	l1066
  5860  001210                     l4587:
  5861                           
  5862                           ; BSR set to: 0
  5863  001210  0E00               	movlw	0
  5864  001212  0100               	movlb	0	; () banked
  5865  001214  6F91               	movwf	___flmul@prod& (0+255),b
  5866  001216  0E00               	movlw	0
  5867  001218  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5868  00121A  0E00               	movlw	0
  5869  00121C  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5870  00121E  0E00               	movlw	0
  5871  001220  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5872  001222  0E00               	movlw	0
  5873  001224  0100               	movlb	0	; () banked
  5874  001226  6F8A               	movwf	___flmul@sign& (0+255),b
  5875  001228  D015               	goto	l4597
  5876  00122A                     l1066:
  5877                           
  5878                           ; BSR set to: 0
  5879  00122A  C095  F090         	movff	___flmul@temp,___flmul@bexp
  5880                           
  5881                           ; BSR set to: 0
  5882  00122E  0EFF               	movlw	255
  5883  001230  0100               	movlb	0	; () banked
  5884  001232  1791               	andwf	___flmul@prod& (0+255),f,b
  5885  001234  0EFF               	movlw	255
  5886  001236  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  5887  001238  0E7F               	movlw	127
  5888  00123A  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  5889  00123C  0E00               	movlw	0
  5890  00123E  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  5891                           
  5892                           ; BSR set to: 0
  5893  001240  0100               	movlb	0	; () banked
  5894  001242  A190               	btfss	___flmul@bexp& (0+255),0,b
  5895  001244  D002               	goto	l4595
  5896                           
  5897                           ; BSR set to: 0
  5898  001246  0100               	movlb	0	; () banked
  5899  001248  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  5900  00124A                     l4595:
  5901                           
  5902                           ; BSR set to: 0
  5903  00124A  0100               	movlb	0	; () banked
  5904  00124C  90D8               	bcf	status,0,c
  5905  00124E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  5906  001250  0100               	movlb	0	; () banked
  5907  001252                     L7:
  5908  001252  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5909  001254                     l4597:
  5910                           
  5911                           ; BSR set to: 0
  5912  001254  0100               	movlb	0	; () banked
  5913  001256  518A               	movf	___flmul@sign& (0+255),w,b
  5914  001258  0100               	movlb	0	; () banked
  5915  00125A  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5916                           
  5917                           ; BSR set to: 0
  5918  00125C  C091  F07E         	movff	___flmul@prod,?___flmul
  5919  001260  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  5920  001264  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  5921  001268  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  5922  00126C  0012               	return	
  5923  00126E                     __end_of___flmul:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           postinc0	equ	0xFEE
  5933                           wreg	equ	0xFE8
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function ___awmod *****************
  5941 ;; Defined at:
  5942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  dividend        2   24[COMRAM] int 
  5945 ;;  divisor         2   26[COMRAM] int 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  sign            1   29[COMRAM] unsigned char 
  5948 ;;  counter         1   28[COMRAM] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2   24[COMRAM] int 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5958 ;;      Params:         4       0       0       0
  5959 ;;      Locals:         2       0       0       0
  5960 ;;      Temps:          0       0       0       0
  5961 ;;      Totals:         6       0       0       0
  5962 ;;Total ram usage:        6 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    4
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_fround
  5969 ;;		_scale
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text16
  5974  002BF0                     __ptext16:
  5975                           	opt stack 0
  5976  002BF0                     ___awmod:
  5977                           	opt stack 23
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;incstack = 0
  5981  002BF0  0E00               	movlw	0
  5982  002BF2  6E41               	movwf	___awmod@sign,c
  5983  002BF4  AE3D               	btfss	___awmod@dividend+1,7,c
  5984  002BF6  D006               	goto	l4655
  5985  002BF8  6C3C               	negf	___awmod@dividend,c
  5986  002BFA  1E3D               	comf	___awmod@dividend+1,f,c
  5987  002BFC  B0D8               	btfsc	status,0,c
  5988  002BFE  2A3D               	incf	___awmod@dividend+1,f,c
  5989  002C00  0E01               	movlw	1
  5990  002C02  6E41               	movwf	___awmod@sign,c
  5991  002C04                     l4655:
  5992  002C04  AE3F               	btfss	___awmod@divisor+1,7,c
  5993  002C06  D004               	goto	l4659
  5994  002C08  6C3E               	negf	___awmod@divisor,c
  5995  002C0A  1E3F               	comf	___awmod@divisor+1,f,c
  5996  002C0C  B0D8               	btfsc	status,0,c
  5997  002C0E  2A3F               	incf	___awmod@divisor+1,f,c
  5998  002C10                     l4659:
  5999  002C10  503E               	movf	___awmod@divisor,w,c
  6000  002C12  103F               	iorwf	___awmod@divisor+1,w,c
  6001  002C14  B4D8               	btfsc	status,2,c
  6002  002C16  D018               	goto	l4675
  6003  002C18  0E01               	movlw	1
  6004  002C1A  6E40               	movwf	___awmod@counter,c
  6005  002C1C  D004               	goto	l4665
  6006  002C1E                     l4663:
  6007  002C1E  90D8               	bcf	status,0,c
  6008  002C20  363E               	rlcf	___awmod@divisor,f,c
  6009  002C22  363F               	rlcf	___awmod@divisor+1,f,c
  6010  002C24  2A40               	incf	___awmod@counter,f,c
  6011  002C26                     l4665:
  6012  002C26  AE3F               	btfss	___awmod@divisor+1,7,c
  6013  002C28  D7FA               	goto	l4663
  6014  002C2A                     l4667:
  6015  002C2A  503E               	movf	___awmod@divisor,w,c
  6016  002C2C  5C3C               	subwf	___awmod@dividend,w,c
  6017  002C2E  503F               	movf	___awmod@divisor+1,w,c
  6018  002C30  583D               	subwfb	___awmod@dividend+1,w,c
  6019  002C32  A0D8               	btfss	status,0,c
  6020  002C34  D004               	goto	l4671
  6021  002C36  503E               	movf	___awmod@divisor,w,c
  6022  002C38  5E3C               	subwf	___awmod@dividend,f,c
  6023  002C3A  503F               	movf	___awmod@divisor+1,w,c
  6024  002C3C  5A3D               	subwfb	___awmod@dividend+1,f,c
  6025  002C3E                     l4671:
  6026  002C3E  90D8               	bcf	status,0,c
  6027  002C40  323F               	rrcf	___awmod@divisor+1,f,c
  6028  002C42  323E               	rrcf	___awmod@divisor,f,c
  6029  002C44  2E40               	decfsz	___awmod@counter,f,c
  6030  002C46  D7F1               	goto	l4667
  6031  002C48                     l4675:
  6032  002C48  5041               	movf	___awmod@sign,w,c
  6033  002C4A  B4D8               	btfsc	status,2,c
  6034  002C4C  D004               	goto	l4679
  6035  002C4E  6C3C               	negf	___awmod@dividend,c
  6036  002C50  1E3D               	comf	___awmod@dividend+1,f,c
  6037  002C52  B0D8               	btfsc	status,0,c
  6038  002C54  2A3D               	incf	___awmod@dividend+1,f,c
  6039  002C56                     l4679:
  6040  002C56  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6041  002C5A  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6042  002C5E  0012               	return	
  6043  002C60                     __end_of___awmod:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           indf2	equ	0xFDF
  6055                           postinc2	equ	0xFDE
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function ___awdiv *****************
  6061 ;; Defined at:
  6062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  dividend        2   16[BANK0 ] int 
  6065 ;;  divisor         2   18[BANK0 ] int 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  quotient        2   22[BANK0 ] int 
  6068 ;;  sign            1   21[BANK0 ] unsigned char 
  6069 ;;  counter         1   20[BANK0 ] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  2   16[BANK0 ] int 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6079 ;;      Params:         0       4       0       0
  6080 ;;      Locals:         0       4       0       0
  6081 ;;      Temps:          0       0       0       0
  6082 ;;      Totals:         0       8       0       0
  6083 ;;Total ram usage:        8 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    4
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_fround
  6090 ;;		_scale
  6091 ;;		_sprintf
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text17
  6096  0028A8                     __ptext17:
  6097                           	opt stack 0
  6098  0028A8                     ___awdiv:
  6099                           	opt stack 23
  6100                           
  6101                           ;incstack = 0
  6102  0028A8  0E00               	movlw	0
  6103  0028AA  0100               	movlb	0	; () banked
  6104  0028AC  6F75               	movwf	___awdiv@sign& (0+255),b
  6105                           
  6106                           ; BSR set to: 0
  6107  0028AE  0100               	movlb	0	; () banked
  6108  0028B0  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6109  0028B2  D008               	goto	l4611
  6110                           
  6111                           ; BSR set to: 0
  6112  0028B4  0100               	movlb	0	; () banked
  6113  0028B6  6D72               	negf	___awdiv@divisor& (0+255),b
  6114  0028B8  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6115  0028BA  B0D8               	btfsc	status,0,c
  6116  0028BC  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6117                           
  6118                           ; BSR set to: 0
  6119  0028BE  0E01               	movlw	1
  6120  0028C0  0100               	movlb	0	; () banked
  6121  0028C2  6F75               	movwf	___awdiv@sign& (0+255),b
  6122  0028C4                     l4611:
  6123                           
  6124                           ; BSR set to: 0
  6125  0028C4  0100               	movlb	0	; () banked
  6126  0028C6  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6127  0028C8  D008               	goto	l4617
  6128                           
  6129                           ; BSR set to: 0
  6130  0028CA  0100               	movlb	0	; () banked
  6131  0028CC  6D70               	negf	___awdiv@dividend& (0+255),b
  6132  0028CE  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6133  0028D0  B0D8               	btfsc	status,0,c
  6134  0028D2  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6135                           
  6136                           ; BSR set to: 0
  6137  0028D4  0E01               	movlw	1
  6138  0028D6  0100               	movlb	0	; () banked
  6139  0028D8  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6140  0028DA                     l4617:
  6141                           
  6142                           ; BSR set to: 0
  6143  0028DA  0E00               	movlw	0
  6144  0028DC  0100               	movlb	0	; () banked
  6145  0028DE  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6146  0028E0  0E00               	movlw	0
  6147  0028E2  6F76               	movwf	___awdiv@quotient& (0+255),b
  6148                           
  6149                           ; BSR set to: 0
  6150  0028E4  0100               	movlb	0	; () banked
  6151  0028E6  5172               	movf	___awdiv@divisor& (0+255),w,b
  6152  0028E8  0100               	movlb	0	; () banked
  6153  0028EA  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6154  0028EC  B4D8               	btfsc	status,2,c
  6155  0028EE  D02C               	goto	l4639
  6156                           
  6157                           ; BSR set to: 0
  6158  0028F0  0E01               	movlw	1
  6159  0028F2  0100               	movlb	0	; () banked
  6160  0028F4  6F74               	movwf	___awdiv@counter& (0+255),b
  6161  0028F6  D006               	goto	l4625
  6162  0028F8                     l4623:
  6163                           
  6164                           ; BSR set to: 0
  6165  0028F8  0100               	movlb	0	; () banked
  6166  0028FA  90D8               	bcf	status,0,c
  6167  0028FC  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6168  0028FE  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6169  002900  0100               	movlb	0	; () banked
  6170  002902  2B74               	incf	___awdiv@counter& (0+255),f,b
  6171  002904                     l4625:
  6172                           
  6173                           ; BSR set to: 0
  6174  002904  0100               	movlb	0	; () banked
  6175  002906  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6176  002908  D7F7               	goto	l4623
  6177  00290A                     l4627:
  6178                           
  6179                           ; BSR set to: 0
  6180  00290A  0100               	movlb	0	; () banked
  6181  00290C  90D8               	bcf	status,0,c
  6182  00290E  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6183  002910  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6184                           
  6185                           ; BSR set to: 0
  6186  002912  0100               	movlb	0	; () banked
  6187  002914  5172               	movf	___awdiv@divisor& (0+255),w,b
  6188  002916  0100               	movlb	0	; () banked
  6189  002918  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6190  00291A  0100               	movlb	0	; () banked
  6191  00291C  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6192  00291E  0100               	movlb	0	; () banked
  6193  002920  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6194  002922  A0D8               	btfss	status,0,c
  6195  002924  D00A               	goto	l4635
  6196                           
  6197                           ; BSR set to: 0
  6198  002926  0100               	movlb	0	; () banked
  6199  002928  5172               	movf	___awdiv@divisor& (0+255),w,b
  6200  00292A  0100               	movlb	0	; () banked
  6201  00292C  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6202  00292E  0100               	movlb	0	; () banked
  6203  002930  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6204  002932  0100               	movlb	0	; () banked
  6205  002934  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6206                           
  6207                           ; BSR set to: 0
  6208  002936  0100               	movlb	0	; () banked
  6209  002938  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6210  00293A                     l4635:
  6211                           
  6212                           ; BSR set to: 0
  6213  00293A  0100               	movlb	0	; () banked
  6214  00293C  90D8               	bcf	status,0,c
  6215  00293E  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6216  002940  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6217                           
  6218                           ; BSR set to: 0
  6219  002942  0100               	movlb	0	; () banked
  6220  002944  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6221  002946  D7E1               	goto	l4627
  6222  002948                     l4639:
  6223                           
  6224                           ; BSR set to: 0
  6225  002948  0100               	movlb	0	; () banked
  6226  00294A  5175               	movf	___awdiv@sign& (0+255),w,b
  6227  00294C  0100               	movlb	0	; () banked
  6228  00294E  B4D8               	btfsc	status,2,c
  6229  002950  D005               	goto	l4643
  6230                           
  6231                           ; BSR set to: 0
  6232  002952  0100               	movlb	0	; () banked
  6233  002954  6D76               	negf	___awdiv@quotient& (0+255),b
  6234  002956  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6235  002958  B0D8               	btfsc	status,0,c
  6236  00295A  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6237  00295C                     l4643:
  6238                           
  6239                           ; BSR set to: 0
  6240  00295C  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6241  002960  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6242  002964  0012               	return	
  6243  002966                     __end_of___awdiv:
  6244                           	opt stack 0
  6245                           tblptru	equ	0xFF8
  6246                           tblptrh	equ	0xFF7
  6247                           tblptrl	equ	0xFF6
  6248                           tablat	equ	0xFF5
  6249                           prodh	equ	0xFF4
  6250                           prodl	equ	0xFF3
  6251                           intcon	equ	0xFF2
  6252                           postinc0	equ	0xFEE
  6253                           wreg	equ	0xFE8
  6254                           indf2	equ	0xFDF
  6255                           postinc2	equ	0xFDE
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function __tdiv_to_l_ *****************
  6261 ;; Defined at:
  6262 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  f1              4   16[BANK0 ] float 
  6265 ;;  f2              4   20[BANK0 ] float 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  quot            4   24[BANK0 ] unsigned long 
  6268 ;;  exp1            1   29[BANK0 ] unsigned char 
  6269 ;;  cntr            1   28[BANK0 ] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  4   16[BANK0 ] unsigned long 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6279 ;;      Params:         0       8       0       0
  6280 ;;      Locals:         0       6       0       0
  6281 ;;      Temps:          3       0       0       0
  6282 ;;      Totals:         3      14       0       0
  6283 ;;Total ram usage:       17 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    4
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_sprintf
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text18
  6294  001F02                     __ptext18:
  6295                           	opt stack 0
  6296  001F02                     __tdiv_to_l_:
  6297                           	opt stack 24
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;incstack = 0
  6301  001F02  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6302  001F06  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6303  001F08  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6304  001F0A  0100               	movlb	0	; () banked
  6305  001F0C  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6306  001F0E  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6307  001F10  E301               	bnc	u5431
  6308  001F12  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6309  001F14                     u5431:
  6310  001F14  503C               	movf	??__tdiv_to_l_,w,c
  6311  001F16  0100               	movlb	0	; () banked
  6312  001F18  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6313  001F1A  0100               	movlb	0	; () banked
  6314  001F1C  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6315  001F1E  A4D8               	btfss	status,2,c
  6316  001F20  D00A               	goto	l4783
  6317                           
  6318                           ; BSR set to: 0
  6319  001F22  0E00               	movlw	0
  6320  001F24  0100               	movlb	0	; () banked
  6321  001F26  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6322  001F28  0E00               	movlw	0
  6323  001F2A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6324  001F2C  0E00               	movlw	0
  6325  001F2E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6326  001F30  0E00               	movlw	0
  6327  001F32  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6328                           
  6329                           ; BSR set to: 0
  6330  001F34  0012               	return	
  6331  001F36                     l4783:
  6332                           
  6333                           ; BSR set to: 0
  6334  001F36  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6335  001F3A  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6336  001F3C  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6337  001F3E  0100               	movlb	0	; () banked
  6338  001F40  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6339  001F42  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6340  001F44  E301               	bnc	u5451
  6341  001F46  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6342  001F48                     u5451:
  6343  001F48  503C               	movf	??__tdiv_to_l_,w,c
  6344  001F4A  0100               	movlb	0	; () banked
  6345  001F4C  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6346  001F4E  0100               	movlb	0	; () banked
  6347  001F50  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6348  001F52  A4D8               	btfss	status,2,c
  6349  001F54  D00A               	goto	l4789
  6350                           
  6351                           ; BSR set to: 0
  6352  001F56  0E00               	movlw	0
  6353  001F58  0100               	movlb	0	; () banked
  6354  001F5A  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6355  001F5C  0E00               	movlw	0
  6356  001F5E  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6357  001F60  0E00               	movlw	0
  6358  001F62  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6359  001F64  0E00               	movlw	0
  6360  001F66  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6361                           
  6362                           ; BSR set to: 0
  6363  001F68  0012               	return	
  6364  001F6A                     l4789:
  6365                           
  6366                           ; BSR set to: 0
  6367  001F6A  0100               	movlb	0	; () banked
  6368  001F6C  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6369                           
  6370                           ; BSR set to: 0
  6371  001F6E  0EFF               	movlw	255
  6372  001F70  0100               	movlb	0	; () banked
  6373  001F72  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6374  001F74  0EFF               	movlw	255
  6375  001F76  0100               	movlb	0	; () banked
  6376  001F78  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6377  001F7A  0E00               	movlw	0
  6378  001F7C  0100               	movlb	0	; () banked
  6379  001F7E  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6380  001F80  0100               	movlb	0	; () banked
  6381  001F82  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6382                           
  6383                           ; BSR set to: 0
  6384  001F84  0EFF               	movlw	255
  6385  001F86  0100               	movlb	0	; () banked
  6386  001F88  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6387  001F8A  0EFF               	movlw	255
  6388  001F8C  0100               	movlb	0	; () banked
  6389  001F8E  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6390  001F90  0E00               	movlw	0
  6391  001F92  0100               	movlb	0	; () banked
  6392  001F94  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395  001F96  0E00               	movlw	0
  6396  001F98  0100               	movlb	0	; () banked
  6397  001F9A  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6398  001F9C  0E00               	movlw	0
  6399  001F9E  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6400  001FA0  0E00               	movlw	0
  6401  001FA2  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6402  001FA4  0E00               	movlw	0
  6403  001FA6  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406  001FA8  0E7F               	movlw	127
  6407  001FAA  0100               	movlb	0	; () banked
  6408  001FAC  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6409                           
  6410                           ; BSR set to: 0
  6411  001FAE  0100               	movlb	0	; () banked
  6412  001FB0  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6413  001FB2  0F98               	addlw	152
  6414  001FB4  0100               	movlb	0	; () banked
  6415  001FB6  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  001FB8  0E18               	movlw	24
  6419  001FBA  0100               	movlb	0	; () banked
  6420  001FBC  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6421  001FBE                     l773:
  6422                           
  6423                           ; BSR set to: 0
  6424  001FBE  0100               	movlb	0	; () banked
  6425  001FC0  90D8               	bcf	status,0,c
  6426  001FC2  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6427  001FC4  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6428  001FC6  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6429  001FC8  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6430                           
  6431                           ; BSR set to: 0
  6432  001FCA  0100               	movlb	0	; () banked
  6433  001FCC  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6434  001FCE  0100               	movlb	0	; () banked
  6435  001FD0  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6436  001FD2  0100               	movlb	0	; () banked
  6437  001FD4  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6438  001FD6  0100               	movlb	0	; () banked
  6439  001FD8  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6440  001FDA  0100               	movlb	0	; () banked
  6441  001FDC  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6442  001FDE  0100               	movlb	0	; () banked
  6443  001FE0  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6444  001FE2  A0D8               	btfss	status,0,c
  6445  001FE4  D00E               	goto	l774
  6446                           
  6447                           ; BSR set to: 0
  6448  001FE6  0100               	movlb	0	; () banked
  6449  001FE8  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6450  001FEA  0100               	movlb	0	; () banked
  6451  001FEC  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6452  001FEE  0100               	movlb	0	; () banked
  6453  001FF0  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6454  001FF2  0100               	movlb	0	; () banked
  6455  001FF4  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6456  001FF6  0100               	movlb	0	; () banked
  6457  001FF8  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6458  001FFA  0100               	movlb	0	; () banked
  6459  001FFC  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6460                           
  6461                           ; BSR set to: 0
  6462  001FFE  0100               	movlb	0	; () banked
  6463  002000  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6464  002002                     l774:
  6465                           
  6466                           ; BSR set to: 0
  6467  002002  0100               	movlb	0	; () banked
  6468  002004  90D8               	bcf	status,0,c
  6469  002006  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6470  002008  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6471  00200A  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6472                           
  6473                           ; BSR set to: 0
  6474  00200C  0100               	movlb	0	; () banked
  6475  00200E  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6476  002010  D7D6               	goto	l773
  6477                           
  6478                           ; BSR set to: 0
  6479                           
  6480                           ; BSR set to: 0
  6481  002012  0100               	movlb	0	; () banked
  6482  002014  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6483  002016  D01A               	goto	l4823
  6484                           
  6485                           ; BSR set to: 0
  6486  002018  0100               	movlb	0	; () banked
  6487  00201A  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6488  00201C  0A80               	xorlw	128
  6489  00201E  0F97               	addlw	151
  6490  002020  B0D8               	btfsc	status,0,c
  6491  002022  D00A               	goto	l4819
  6492                           
  6493                           ; BSR set to: 0
  6494  002024  0E00               	movlw	0
  6495  002026  0100               	movlb	0	; () banked
  6496  002028  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6497  00202A  0E00               	movlw	0
  6498  00202C  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6499  00202E  0E00               	movlw	0
  6500  002030  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6501  002032  0E00               	movlw	0
  6502  002034  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6503                           
  6504                           ; BSR set to: 0
  6505  002036  0012               	return	
  6506  002038                     l4819:
  6507                           
  6508                           ; BSR set to: 0
  6509  002038  0100               	movlb	0	; () banked
  6510  00203A  90D8               	bcf	status,0,c
  6511  00203C  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6512  00203E  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6513  002040  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6514  002042  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6515                           
  6516                           ; BSR set to: 0
  6517  002044  0100               	movlb	0	; () banked
  6518  002046  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6519  002048  D7F7               	goto	l4819
  6520                           
  6521                           ; BSR set to: 0
  6522  00204A  D01B               	goto	l780
  6523  00204C                     l4823:
  6524                           
  6525                           ; BSR set to: 0
  6526  00204C  0E17               	movlw	23
  6527  00204E  0100               	movlb	0	; () banked
  6528  002050  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6529  002052  D012               	goto	l4831
  6530                           
  6531                           ; BSR set to: 0
  6532  002054  0E00               	movlw	0
  6533  002056  0100               	movlb	0	; () banked
  6534  002058  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6535  00205A  0E00               	movlw	0
  6536  00205C  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6537  00205E  0E00               	movlw	0
  6538  002060  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6539  002062  0E00               	movlw	0
  6540  002064  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6541                           
  6542                           ; BSR set to: 0
  6543  002066  0012               	return	
  6544  002068                     l4829:
  6545                           
  6546                           ; BSR set to: 0
  6547  002068  0100               	movlb	0	; () banked
  6548  00206A  90D8               	bcf	status,0,c
  6549  00206C  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6550  00206E  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6551  002070  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6552  002072  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6553  002074  0100               	movlb	0	; () banked
  6554  002076  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6555  002078                     l4831:
  6556                           
  6557                           ; BSR set to: 0
  6558  002078  0100               	movlb	0	; () banked
  6559  00207A  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6560  00207C  0100               	movlb	0	; () banked
  6561  00207E  A4D8               	btfss	status,2,c
  6562  002080  D7F3               	goto	l4829
  6563  002082                     l780:
  6564                           
  6565                           ; BSR set to: 0
  6566  002082  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6567  002086  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6568  00208A  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6569  00208E  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6570                           
  6571                           ; BSR set to: 0
  6572  002092  0012               	return		;funcret
  6573  002094                     __end_of__tdiv_to_l_:
  6574                           	opt stack 0
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           postinc0	equ	0xFEE
  6583                           wreg	equ	0xFE8
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function __div_to_l_ *****************
  6591 ;; Defined at:
  6592 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  f1              4   16[BANK0 ] unsigned long 
  6595 ;;  f2              4   20[BANK0 ] unsigned long 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  quot            4   24[COMRAM] unsigned long 
  6598 ;;  exp1            1   29[COMRAM] unsigned char 
  6599 ;;  cntr            1   28[COMRAM] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  4   16[BANK0 ] unsigned long 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6609 ;;      Params:         0       8       0       0
  6610 ;;      Locals:         6       0       0       0
  6611 ;;      Temps:          0       0       0       0
  6612 ;;      Totals:         6       8       0       0
  6613 ;;Total ram usage:       14 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    4
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_sprintf
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text19
  6624  002202                     __ptext19:
  6625                           	opt stack 0
  6626  002202                     __div_to_l_:
  6627                           	opt stack 24
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;incstack = 0
  6631  002202  0100               	movlb	0	; () banked
  6632  002204  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6633  002206  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6634  002208  6E41               	movwf	__div_to_l_@exp1,c
  6635  00220A  5041               	movf	__div_to_l_@exp1,w,c
  6636  00220C  A4D8               	btfss	status,2,c
  6637  00220E  D00A               	goto	l4839
  6638                           
  6639                           ; BSR set to: 0
  6640  002210  0E00               	movlw	0
  6641  002212  0100               	movlb	0	; () banked
  6642  002214  6F70               	movwf	?__div_to_l_& (0+255),b
  6643  002216  0E00               	movlw	0
  6644  002218  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6645  00221A  0E00               	movlw	0
  6646  00221C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6647  00221E  0E00               	movlw	0
  6648  002220  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651  002222  0012               	return	
  6652  002224                     l4839:
  6653                           
  6654                           ; BSR set to: 0
  6655  002224  0100               	movlb	0	; () banked
  6656  002226  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6657  002228  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6658  00222A  6E40               	movwf	__div_to_l_@cntr,c
  6659  00222C  5040               	movf	__div_to_l_@cntr,w,c
  6660  00222E  A4D8               	btfss	status,2,c
  6661  002230  D00A               	goto	l4845
  6662                           
  6663                           ; BSR set to: 0
  6664  002232  0E00               	movlw	0
  6665  002234  0100               	movlb	0	; () banked
  6666  002236  6F70               	movwf	?__div_to_l_& (0+255),b
  6667  002238  0E00               	movlw	0
  6668  00223A  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6669  00223C  0E00               	movlw	0
  6670  00223E  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6671  002240  0E00               	movlw	0
  6672  002242  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6673                           
  6674                           ; BSR set to: 0
  6675  002244  0012               	return	
  6676  002246                     l4845:
  6677                           
  6678                           ; BSR set to: 0
  6679  002246  0100               	movlb	0	; () banked
  6680  002248  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6681                           
  6682                           ; BSR set to: 0
  6683  00224A  0EFF               	movlw	255
  6684  00224C  0100               	movlb	0	; () banked
  6685  00224E  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6686  002250  0EFF               	movlw	255
  6687  002252  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6688  002254  0EFF               	movlw	255
  6689  002256  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6690  002258  0E00               	movlw	0
  6691  00225A  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6692                           
  6693                           ; BSR set to: 0
  6694  00225C  0100               	movlb	0	; () banked
  6695  00225E  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6696  002260  0EFF               	movlw	255
  6697  002262  0100               	movlb	0	; () banked
  6698  002264  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6699  002266  0EFF               	movlw	255
  6700  002268  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6701  00226A  0EFF               	movlw	255
  6702  00226C  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6703  00226E  0E00               	movlw	0
  6704  002270  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 0
  6707  002272  0E00               	movlw	0
  6708  002274  6E3C               	movwf	__div_to_l_@quot,c
  6709  002276  0E00               	movlw	0
  6710  002278  6E3D               	movwf	__div_to_l_@quot+1,c
  6711  00227A  0E00               	movlw	0
  6712  00227C  6E3E               	movwf	__div_to_l_@quot+2,c
  6713  00227E  0E00               	movlw	0
  6714  002280  6E3F               	movwf	__div_to_l_@quot+3,c
  6715                           
  6716                           ; BSR set to: 0
  6717  002282  0E7F               	movlw	127
  6718  002284  5E41               	subwf	__div_to_l_@exp1,f,c
  6719                           
  6720                           ; BSR set to: 0
  6721  002286  5040               	movf	__div_to_l_@cntr,w,c
  6722  002288  0FA0               	addlw	160
  6723  00228A  5E41               	subwf	__div_to_l_@exp1,f,c
  6724                           
  6725                           ; BSR set to: 0
  6726  00228C  0E20               	movlw	32
  6727  00228E  6E40               	movwf	__div_to_l_@cntr,c
  6728  002290                     l4859:
  6729                           
  6730                           ; BSR set to: 0
  6731  002290  90D8               	bcf	status,0,c
  6732  002292  363C               	rlcf	__div_to_l_@quot,f,c
  6733  002294  363D               	rlcf	__div_to_l_@quot+1,f,c
  6734  002296  363E               	rlcf	__div_to_l_@quot+2,f,c
  6735  002298  363F               	rlcf	__div_to_l_@quot+3,f,c
  6736                           
  6737                           ; BSR set to: 0
  6738  00229A  0100               	movlb	0	; () banked
  6739  00229C  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6740  00229E  0100               	movlb	0	; () banked
  6741  0022A0  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6742  0022A2  0100               	movlb	0	; () banked
  6743  0022A4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6744  0022A6  0100               	movlb	0	; () banked
  6745  0022A8  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6746  0022AA  0100               	movlb	0	; () banked
  6747  0022AC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6748  0022AE  0100               	movlb	0	; () banked
  6749  0022B0  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6750  0022B2  0100               	movlb	0	; () banked
  6751  0022B4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6752  0022B6  0100               	movlb	0	; () banked
  6753  0022B8  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6754  0022BA  A0D8               	btfss	status,0,c
  6755  0022BC  D011               	goto	l4867
  6756                           
  6757                           ; BSR set to: 0
  6758  0022BE  0100               	movlb	0	; () banked
  6759  0022C0  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6760  0022C2  0100               	movlb	0	; () banked
  6761  0022C4  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6762  0022C6  0100               	movlb	0	; () banked
  6763  0022C8  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6764  0022CA  0100               	movlb	0	; () banked
  6765  0022CC  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6766  0022CE  0100               	movlb	0	; () banked
  6767  0022D0  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6768  0022D2  0100               	movlb	0	; () banked
  6769  0022D4  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6770  0022D6  0100               	movlb	0	; () banked
  6771  0022D8  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6772  0022DA  0100               	movlb	0	; () banked
  6773  0022DC  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6774                           
  6775                           ; BSR set to: 0
  6776  0022DE  803C               	bsf	__div_to_l_@quot,0,c
  6777  0022E0                     l4867:
  6778                           
  6779                           ; BSR set to: 0
  6780  0022E0  0100               	movlb	0	; () banked
  6781  0022E2  90D8               	bcf	status,0,c
  6782  0022E4  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6783  0022E6  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6784  0022E8  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6785  0022EA  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6786                           
  6787                           ; BSR set to: 0
  6788  0022EC  2E40               	decfsz	__div_to_l_@cntr,f,c
  6789  0022EE  D7D0               	goto	l4859
  6790                           
  6791                           ; BSR set to: 0
  6792                           
  6793                           ; BSR set to: 0
  6794  0022F0  AE41               	btfss	__div_to_l_@exp1,7,c
  6795  0022F2  D017               	goto	l4883
  6796                           
  6797                           ; BSR set to: 0
  6798  0022F4  5041               	movf	__div_to_l_@exp1,w,c
  6799  0022F6  0A80               	xorlw	128
  6800  0022F8  0F9F               	addlw	159
  6801  0022FA  B0D8               	btfsc	status,0,c
  6802  0022FC  D00A               	goto	l4879
  6803                           
  6804                           ; BSR set to: 0
  6805  0022FE  0E00               	movlw	0
  6806  002300  0100               	movlb	0	; () banked
  6807  002302  6F70               	movwf	?__div_to_l_& (0+255),b
  6808  002304  0E00               	movlw	0
  6809  002306  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6810  002308  0E00               	movlw	0
  6811  00230A  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6812  00230C  0E00               	movlw	0
  6813  00230E  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6814                           
  6815                           ; BSR set to: 0
  6816  002310  0012               	return	
  6817  002312                     l4879:
  6818  002312  90D8               	bcf	status,0,c
  6819  002314  323F               	rrcf	__div_to_l_@quot+3,f,c
  6820  002316  323E               	rrcf	__div_to_l_@quot+2,f,c
  6821  002318  323D               	rrcf	__div_to_l_@quot+1,f,c
  6822  00231A  323C               	rrcf	__div_to_l_@quot,f,c
  6823  00231C  3E41               	incfsz	__div_to_l_@exp1,f,c
  6824  00231E  D7F9               	goto	l4879
  6825  002320  D016               	goto	l676
  6826  002322                     l4883:
  6827  002322  0E1F               	movlw	31
  6828  002324  6441               	cpfsgt	__div_to_l_@exp1,c
  6829  002326  D010               	goto	l4891
  6830  002328  0E00               	movlw	0
  6831  00232A  0100               	movlb	0	; () banked
  6832  00232C  6F70               	movwf	?__div_to_l_& (0+255),b
  6833  00232E  0E00               	movlw	0
  6834  002330  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6835  002332  0E00               	movlw	0
  6836  002334  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6837  002336  0E00               	movlw	0
  6838  002338  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6839                           
  6840                           ; BSR set to: 0
  6841  00233A  0012               	return	
  6842  00233C                     l4889:
  6843  00233C  90D8               	bcf	status,0,c
  6844  00233E  363C               	rlcf	__div_to_l_@quot,f,c
  6845  002340  363D               	rlcf	__div_to_l_@quot+1,f,c
  6846  002342  363E               	rlcf	__div_to_l_@quot+2,f,c
  6847  002344  363F               	rlcf	__div_to_l_@quot+3,f,c
  6848  002346  0641               	decf	__div_to_l_@exp1,f,c
  6849  002348                     l4891:
  6850  002348  5041               	movf	__div_to_l_@exp1,w,c
  6851  00234A  A4D8               	btfss	status,2,c
  6852  00234C  D7F7               	goto	l4889
  6853  00234E                     l676:
  6854  00234E  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  6855  002352  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6856  002356  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6857  00235A  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6858  00235E  0012               	return		;funcret
  6859  002360                     __end_of__div_to_l_:
  6860                           	opt stack 0
  6861                           tblptru	equ	0xFF8
  6862                           tblptrh	equ	0xFF7
  6863                           tblptrl	equ	0xFF6
  6864                           tablat	equ	0xFF5
  6865                           prodh	equ	0xFF4
  6866                           prodl	equ	0xFF3
  6867                           intcon	equ	0xFF2
  6868                           postinc0	equ	0xFEE
  6869                           wreg	equ	0xFE8
  6870                           indf2	equ	0xFDF
  6871                           postinc2	equ	0xFDE
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function ___xxtofl *****************
  6877 ;; Defined at:
  6878 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  sign            1    wreg     unsigned char 
  6881 ;;  val             4   16[BANK0 ] long 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  sign            1   24[BANK0 ] unsigned char 
  6884 ;;  arg             4   26[BANK0 ] unsigned long 
  6885 ;;  exp             1   25[BANK0 ] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4   16[BANK0 ] unsigned char 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6895 ;;      Params:         0       4       0       0
  6896 ;;      Locals:         0       6       0       0
  6897 ;;      Temps:          0       4       0       0
  6898 ;;      Totals:         0      14       0       0
  6899 ;;Total ram usage:       14 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    4
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_main
  6906 ;;		_LCD_Handler
  6907 ;;		_sprintf
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text20
  6912  001D34                     __ptext20:
  6913                           	opt stack 0
  6914  001D34                     ___xxtofl:
  6915                           	opt stack 26
  6916                           
  6917                           ;incstack = 0
  6918                           ;___xxtofl@sign stored from wreg
  6919  001D34  0100               	movlb	0	; () banked
  6920  001D36  6F78               	movwf	___xxtofl@sign& (0+255),b
  6921  001D38  0100               	movlb	0	; () banked
  6922  001D3A  5178               	movf	___xxtofl@sign& (0+255),w,b
  6923  001D3C  0100               	movlb	0	; () banked
  6924  001D3E  B4D8               	btfsc	status,2,c
  6925  001D40  D01E               	goto	l1071
  6926                           
  6927                           ; BSR set to: 0
  6928  001D42  0100               	movlb	0	; () banked
  6929  001D44  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6930  001D46  D01B               	goto	l1071
  6931                           
  6932                           ; BSR set to: 0
  6933  001D48  C070  F074         	movff	___xxtofl@val,??___xxtofl
  6934  001D4C  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  6935  001D50  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  6936  001D54  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  6937  001D58  0100               	movlb	0	; () banked
  6938  001D5A  1F74               	comf	??___xxtofl& (0+255),f,b
  6939  001D5C  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  6940  001D5E  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  6941  001D60  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  6942  001D62  2B74               	incf	??___xxtofl& (0+255),f,b
  6943  001D64  0E00               	movlw	0
  6944  001D66  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6945  001D68  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6946  001D6A  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6947  001D6C  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  6948  001D70  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  6949  001D74  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  6950  001D78  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  6951  001D7C  D008               	goto	l5017
  6952  001D7E                     l1071:
  6953                           
  6954                           ; BSR set to: 0
  6955  001D7E  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  6956  001D82  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6957  001D86  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6958  001D8A  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6959  001D8E                     l5017:
  6960                           
  6961                           ; BSR set to: 0
  6962  001D8E  0100               	movlb	0	; () banked
  6963  001D90  5170               	movf	___xxtofl@val& (0+255),w,b
  6964  001D92  0100               	movlb	0	; () banked
  6965  001D94  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6966  001D96  0100               	movlb	0	; () banked
  6967  001D98  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6968  001D9A  0100               	movlb	0	; () banked
  6969  001D9C  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6970  001D9E  A4D8               	btfss	status,2,c
  6971  001DA0  D00A               	goto	l5023
  6972                           
  6973                           ; BSR set to: 0
  6974  001DA2  0E00               	movlw	0
  6975  001DA4  0100               	movlb	0	; () banked
  6976  001DA6  6F70               	movwf	?___xxtofl& (0+255),b
  6977  001DA8  0E00               	movlw	0
  6978  001DAA  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  6979  001DAC  0E00               	movlw	0
  6980  001DAE  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  6981  001DB0  0E00               	movlw	0
  6982  001DB2  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  6983                           
  6984                           ; BSR set to: 0
  6985  001DB4  0012               	return	
  6986  001DB6                     l5023:
  6987                           
  6988                           ; BSR set to: 0
  6989  001DB6  0E96               	movlw	150
  6990  001DB8  0100               	movlb	0	; () banked
  6991  001DBA  6F79               	movwf	___xxtofl@exp& (0+255),b
  6992  001DBC  D008               	goto	l5027
  6993  001DBE                     l5025:
  6994                           
  6995                           ; BSR set to: 0
  6996  001DBE  0100               	movlb	0	; () banked
  6997  001DC0  2B79               	incf	___xxtofl@exp& (0+255),f,b
  6998  001DC2  0100               	movlb	0	; () banked
  6999  001DC4  90D8               	bcf	status,0,c
  7000  001DC6  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7001  001DC8  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7002  001DCA  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7003  001DCC  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7004  001DCE                     l5027:
  7005                           
  7006                           ; BSR set to: 0
  7007  001DCE  0E00               	movlw	0
  7008  001DD0  0100               	movlb	0	; () banked
  7009  001DD2  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7010  001DD4  0100               	movlb	0	; () banked
  7011  001DD6  6F74               	movwf	??___xxtofl& (0+255),b
  7012  001DD8  0E00               	movlw	0
  7013  001DDA  0100               	movlb	0	; () banked
  7014  001DDC  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7015  001DDE  0100               	movlb	0	; () banked
  7016  001DE0  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7017  001DE2  0E00               	movlw	0
  7018  001DE4  0100               	movlb	0	; () banked
  7019  001DE6  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7020  001DE8  0100               	movlb	0	; () banked
  7021  001DEA  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7022  001DEC  0EFE               	movlw	254
  7023  001DEE  0100               	movlb	0	; () banked
  7024  001DF0  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7025  001DF2  0100               	movlb	0	; () banked
  7026  001DF4  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7027  001DF6  0100               	movlb	0	; () banked
  7028  001DF8  5174               	movf	??___xxtofl& (0+255),w,b
  7029  001DFA  0100               	movlb	0	; () banked
  7030  001DFC  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7031  001DFE  0100               	movlb	0	; () banked
  7032  001E00  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7033  001E02  0100               	movlb	0	; () banked
  7034  001E04  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7035  001E06  B4D8               	btfsc	status,2,c
  7036  001E08  D010               	goto	l1078
  7037  001E0A  D7D9               	goto	l5025
  7038  001E0C                     l5029:
  7039                           
  7040                           ; BSR set to: 0
  7041  001E0C  0100               	movlb	0	; () banked
  7042  001E0E  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7043                           
  7044                           ; BSR set to: 0
  7045  001E10  0E01               	movlw	1
  7046  001E12  0100               	movlb	0	; () banked
  7047  001E14  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7048  001E16  0E00               	movlw	0
  7049  001E18  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7050  001E1A  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7051  001E1C  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7052                           
  7053                           ; BSR set to: 0
  7054  001E1E  0100               	movlb	0	; () banked
  7055  001E20  90D8               	bcf	status,0,c
  7056  001E22  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7057  001E24  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7058  001E26  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7059  001E28  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7060  001E2A                     l1078:
  7061                           
  7062                           ; BSR set to: 0
  7063  001E2A  0E00               	movlw	0
  7064  001E2C  0100               	movlb	0	; () banked
  7065  001E2E  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7066  001E30  0100               	movlb	0	; () banked
  7067  001E32  6F74               	movwf	??___xxtofl& (0+255),b
  7068  001E34  0E00               	movlw	0
  7069  001E36  0100               	movlb	0	; () banked
  7070  001E38  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7071  001E3A  0100               	movlb	0	; () banked
  7072  001E3C  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7073  001E3E  0E00               	movlw	0
  7074  001E40  0100               	movlb	0	; () banked
  7075  001E42  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7076  001E44  0100               	movlb	0	; () banked
  7077  001E46  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7078  001E48  0EFF               	movlw	255
  7079  001E4A  0100               	movlb	0	; () banked
  7080  001E4C  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7081  001E4E  0100               	movlb	0	; () banked
  7082  001E50  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7083  001E52  0100               	movlb	0	; () banked
  7084  001E54  5174               	movf	??___xxtofl& (0+255),w,b
  7085  001E56  0100               	movlb	0	; () banked
  7086  001E58  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7087  001E5A  0100               	movlb	0	; () banked
  7088  001E5C  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7089  001E5E  0100               	movlb	0	; () banked
  7090  001E60  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7091  001E62  B4D8               	btfsc	status,2,c
  7092  001E64  D009               	goto	l5037
  7093  001E66  D7D2               	goto	l5029
  7094  001E68                     l5035:
  7095                           
  7096                           ; BSR set to: 0
  7097  001E68  0100               	movlb	0	; () banked
  7098  001E6A  0779               	decf	___xxtofl@exp& (0+255),f,b
  7099  001E6C  0100               	movlb	0	; () banked
  7100  001E6E  90D8               	bcf	status,0,c
  7101  001E70  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7102  001E72  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7103  001E74  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7104  001E76  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7105  001E78                     l5037:
  7106                           
  7107                           ; BSR set to: 0
  7108  001E78  0100               	movlb	0	; () banked
  7109  001E7A  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7110  001E7C  D004               	goto	l1085
  7111                           
  7112                           ; BSR set to: 0
  7113  001E7E  0E02               	movlw	2
  7114  001E80  0100               	movlb	0	; () banked
  7115  001E82  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7116  001E84  D7F1               	goto	l5035
  7117  001E86                     l1085:
  7118                           
  7119                           ; BSR set to: 0
  7120  001E86  0100               	movlb	0	; () banked
  7121  001E88  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7122  001E8A  D009               	goto	l1086
  7123                           
  7124                           ; BSR set to: 0
  7125  001E8C  0EFF               	movlw	255
  7126  001E8E  0100               	movlb	0	; () banked
  7127  001E90  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7128  001E92  0EFF               	movlw	255
  7129  001E94  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7130  001E96  0E7F               	movlw	127
  7131  001E98  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7132  001E9A  0EFF               	movlw	255
  7133  001E9C  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7134  001E9E                     l1086:
  7135                           
  7136                           ; BSR set to: 0
  7137  001E9E  0100               	movlb	0	; () banked
  7138  001EA0  90D8               	bcf	status,0,c
  7139  001EA2  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7140  001EA4  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7141  001EA8  0100               	movlb	0	; () banked
  7142  001EAA  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7143  001EAC  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7144  001EAE  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7145  001EB0  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7146  001EB4  0100               	movlb	0	; () banked
  7147  001EB6  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7148  001EB8  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7149  001EBA  6B74               	clrf	??___xxtofl& (0+255),b
  7150  001EBC  0100               	movlb	0	; () banked
  7151  001EBE  5174               	movf	??___xxtofl& (0+255),w,b
  7152  001EC0  0100               	movlb	0	; () banked
  7153  001EC2  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7154  001EC4  0100               	movlb	0	; () banked
  7155  001EC6  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7156  001EC8  0100               	movlb	0	; () banked
  7157  001ECA  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7158  001ECC  0100               	movlb	0	; () banked
  7159  001ECE  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7160  001ED0  0100               	movlb	0	; () banked
  7161  001ED2  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7162  001ED4  0100               	movlb	0	; () banked
  7163  001ED6  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7164  001ED8  0100               	movlb	0	; () banked
  7165  001EDA  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7166                           
  7167                           ; BSR set to: 0
  7168  001EDC  0100               	movlb	0	; () banked
  7169  001EDE  5178               	movf	___xxtofl@sign& (0+255),w,b
  7170  001EE0  0100               	movlb	0	; () banked
  7171  001EE2  B4D8               	btfsc	status,2,c
  7172  001EE4  D005               	goto	l5049
  7173                           
  7174                           ; BSR set to: 0
  7175  001EE6  0100               	movlb	0	; () banked
  7176  001EE8  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7177  001EEA  D002               	goto	l5049
  7178                           
  7179                           ; BSR set to: 0
  7180  001EEC  0100               	movlb	0	; () banked
  7181  001EEE  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7182  001EF0                     l5049:
  7183                           
  7184                           ; BSR set to: 0
  7185  001EF0  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7186  001EF4  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7187  001EF8  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7188  001EFC  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7189  001F00  0012               	return	
  7190  001F02                     __end_of___xxtofl:
  7191                           	opt stack 0
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           intcon	equ	0xFF2
  7199                           postinc0	equ	0xFEE
  7200                           wreg	equ	0xFE8
  7201                           indf2	equ	0xFDF
  7202                           postinc2	equ	0xFDE
  7203                           fsr2h	equ	0xFDA
  7204                           fsr2l	equ	0xFD9
  7205                           status	equ	0xFD8
  7206                           
  7207 ;; *************** function ___llmod *****************
  7208 ;; Defined at:
  7209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  dividend        4   16[BANK0 ] unsigned long 
  7212 ;;  divisor         4   20[BANK0 ] unsigned long 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  counter         1   24[COMRAM] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  4   16[BANK0 ] unsigned long 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7224 ;;      Params:         0       8       0       0
  7225 ;;      Locals:         1       0       0       0
  7226 ;;      Temps:          0       0       0       0
  7227 ;;      Totals:         1       8       0       0
  7228 ;;Total ram usage:        9 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    4
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_sprintf
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text21
  7239  002B5C                     __ptext21:
  7240                           	opt stack 0
  7241  002B5C                     ___llmod:
  7242                           	opt stack 24
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;incstack = 0
  7246  002B5C  0100               	movlb	0	; () banked
  7247  002B5E  5174               	movf	___llmod@divisor& (0+255),w,b
  7248  002B60  0100               	movlb	0	; () banked
  7249  002B62  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7250  002B64  0100               	movlb	0	; () banked
  7251  002B66  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7252  002B68  0100               	movlb	0	; () banked
  7253  002B6A  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7254  002B6C  B4D8               	btfsc	status,2,c
  7255  002B6E  D037               	goto	l879
  7256                           
  7257                           ; BSR set to: 0
  7258  002B70  0E01               	movlw	1
  7259  002B72  6E3C               	movwf	___llmod@counter,c
  7260  002B74  D007               	goto	l5001
  7261  002B76                     l4999:
  7262                           
  7263                           ; BSR set to: 0
  7264  002B76  0100               	movlb	0	; () banked
  7265  002B78  90D8               	bcf	status,0,c
  7266  002B7A  3774               	rlcf	___llmod@divisor& (0+255),f,b
  7267  002B7C  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7268  002B7E  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7269  002B80  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7270  002B82  2A3C               	incf	___llmod@counter,f,c
  7271  002B84                     l5001:
  7272                           
  7273                           ; BSR set to: 0
  7274  002B84  0100               	movlb	0	; () banked
  7275  002B86  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7276  002B88  D7F6               	goto	l4999
  7277  002B8A                     l5003:
  7278                           
  7279                           ; BSR set to: 0
  7280  002B8A  0100               	movlb	0	; () banked
  7281  002B8C  5174               	movf	___llmod@divisor& (0+255),w,b
  7282  002B8E  0100               	movlb	0	; () banked
  7283  002B90  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7284  002B92  0100               	movlb	0	; () banked
  7285  002B94  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7286  002B96  0100               	movlb	0	; () banked
  7287  002B98  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7288  002B9A  0100               	movlb	0	; () banked
  7289  002B9C  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7290  002B9E  0100               	movlb	0	; () banked
  7291  002BA0  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7292  002BA2  0100               	movlb	0	; () banked
  7293  002BA4  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7294  002BA6  0100               	movlb	0	; () banked
  7295  002BA8  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7296  002BAA  A0D8               	btfss	status,0,c
  7297  002BAC  D010               	goto	l5007
  7298                           
  7299                           ; BSR set to: 0
  7300  002BAE  0100               	movlb	0	; () banked
  7301  002BB0  5174               	movf	___llmod@divisor& (0+255),w,b
  7302  002BB2  0100               	movlb	0	; () banked
  7303  002BB4  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7304  002BB6  0100               	movlb	0	; () banked
  7305  002BB8  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7306  002BBA  0100               	movlb	0	; () banked
  7307  002BBC  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7308  002BBE  0100               	movlb	0	; () banked
  7309  002BC0  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7310  002BC2  0100               	movlb	0	; () banked
  7311  002BC4  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7312  002BC6  0100               	movlb	0	; () banked
  7313  002BC8  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7314  002BCA  0100               	movlb	0	; () banked
  7315  002BCC  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7316  002BCE                     l5007:
  7317                           
  7318                           ; BSR set to: 0
  7319  002BCE  0100               	movlb	0	; () banked
  7320  002BD0  90D8               	bcf	status,0,c
  7321  002BD2  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7322  002BD4  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7323  002BD6  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7324  002BD8  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7325                           
  7326                           ; BSR set to: 0
  7327  002BDA  2E3C               	decfsz	___llmod@counter,f,c
  7328  002BDC  D7D6               	goto	l5003
  7329  002BDE                     l879:
  7330                           
  7331                           ; BSR set to: 0
  7332  002BDE  C070  F070         	movff	___llmod@dividend,?___llmod
  7333  002BE2  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7334  002BE6  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7335  002BEA  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7336                           
  7337                           ; BSR set to: 0
  7338  002BEE  0012               	return		;funcret
  7339  002BF0                     __end_of___llmod:
  7340                           	opt stack 0
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           postinc0	equ	0xFEE
  7349                           wreg	equ	0xFE8
  7350                           indf2	equ	0xFDF
  7351                           postinc2	equ	0xFDE
  7352                           fsr2h	equ	0xFDA
  7353                           fsr2l	equ	0xFD9
  7354                           status	equ	0xFD8
  7355                           
  7356 ;; *************** function ___lldiv *****************
  7357 ;; Defined at:
  7358 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  dividend        4   16[BANK0 ] unsigned long 
  7361 ;;  divisor         4   20[BANK0 ] unsigned long 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  quotient        4   24[COMRAM] unsigned long 
  7364 ;;  counter         1   28[COMRAM] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  4   16[BANK0 ] unsigned long 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7374 ;;      Params:         0       8       0       0
  7375 ;;      Locals:         5       0       0       0
  7376 ;;      Temps:          0       0       0       0
  7377 ;;      Totals:         5       8       0       0
  7378 ;;Total ram usage:       13 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    4
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_sprintf
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text22
  7389  002A16                     __ptext22:
  7390                           	opt stack 0
  7391  002A16                     ___lldiv:
  7392                           	opt stack 24
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;incstack = 0
  7396  002A16  0E00               	movlw	0
  7397  002A18  6E3C               	movwf	___lldiv@quotient,c
  7398  002A1A  0E00               	movlw	0
  7399  002A1C  6E3D               	movwf	___lldiv@quotient+1,c
  7400  002A1E  0E00               	movlw	0
  7401  002A20  6E3E               	movwf	___lldiv@quotient+2,c
  7402  002A22  0E00               	movlw	0
  7403  002A24  6E3F               	movwf	___lldiv@quotient+3,c
  7404  002A26  0100               	movlb	0	; () banked
  7405  002A28  5174               	movf	___lldiv@divisor& (0+255),w,b
  7406  002A2A  0100               	movlb	0	; () banked
  7407  002A2C  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7408  002A2E  0100               	movlb	0	; () banked
  7409  002A30  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7410  002A32  0100               	movlb	0	; () banked
  7411  002A34  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7412  002A36  B4D8               	btfsc	status,2,c
  7413  002A38  D03D               	goto	l869
  7414                           
  7415                           ; BSR set to: 0
  7416  002A3A  0E01               	movlw	1
  7417  002A3C  6E40               	movwf	___lldiv@counter,c
  7418  002A3E  D007               	goto	l4981
  7419  002A40                     l4979:
  7420                           
  7421                           ; BSR set to: 0
  7422  002A40  0100               	movlb	0	; () banked
  7423  002A42  90D8               	bcf	status,0,c
  7424  002A44  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7425  002A46  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7426  002A48  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7427  002A4A  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7428  002A4C  2A40               	incf	___lldiv@counter,f,c
  7429  002A4E                     l4981:
  7430                           
  7431                           ; BSR set to: 0
  7432  002A4E  0100               	movlb	0	; () banked
  7433  002A50  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7434  002A52  D7F6               	goto	l4979
  7435  002A54                     l4983:
  7436                           
  7437                           ; BSR set to: 0
  7438  002A54  90D8               	bcf	status,0,c
  7439  002A56  363C               	rlcf	___lldiv@quotient,f,c
  7440  002A58  363D               	rlcf	___lldiv@quotient+1,f,c
  7441  002A5A  363E               	rlcf	___lldiv@quotient+2,f,c
  7442  002A5C  363F               	rlcf	___lldiv@quotient+3,f,c
  7443                           
  7444                           ; BSR set to: 0
  7445  002A5E  0100               	movlb	0	; () banked
  7446  002A60  5174               	movf	___lldiv@divisor& (0+255),w,b
  7447  002A62  0100               	movlb	0	; () banked
  7448  002A64  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7449  002A66  0100               	movlb	0	; () banked
  7450  002A68  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7451  002A6A  0100               	movlb	0	; () banked
  7452  002A6C  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7453  002A6E  0100               	movlb	0	; () banked
  7454  002A70  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7455  002A72  0100               	movlb	0	; () banked
  7456  002A74  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7457  002A76  0100               	movlb	0	; () banked
  7458  002A78  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7459  002A7A  0100               	movlb	0	; () banked
  7460  002A7C  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7461  002A7E  A0D8               	btfss	status,0,c
  7462  002A80  D011               	goto	l4991
  7463                           
  7464                           ; BSR set to: 0
  7465  002A82  0100               	movlb	0	; () banked
  7466  002A84  5174               	movf	___lldiv@divisor& (0+255),w,b
  7467  002A86  0100               	movlb	0	; () banked
  7468  002A88  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7469  002A8A  0100               	movlb	0	; () banked
  7470  002A8C  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7471  002A8E  0100               	movlb	0	; () banked
  7472  002A90  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7473  002A92  0100               	movlb	0	; () banked
  7474  002A94  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7475  002A96  0100               	movlb	0	; () banked
  7476  002A98  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7477  002A9A  0100               	movlb	0	; () banked
  7478  002A9C  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7479  002A9E  0100               	movlb	0	; () banked
  7480  002AA0  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7481                           
  7482                           ; BSR set to: 0
  7483  002AA2  803C               	bsf	___lldiv@quotient,0,c
  7484  002AA4                     l4991:
  7485                           
  7486                           ; BSR set to: 0
  7487  002AA4  0100               	movlb	0	; () banked
  7488  002AA6  90D8               	bcf	status,0,c
  7489  002AA8  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7490  002AAA  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7491  002AAC  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7492  002AAE  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7493                           
  7494                           ; BSR set to: 0
  7495  002AB0  2E40               	decfsz	___lldiv@counter,f,c
  7496  002AB2  D7D0               	goto	l4983
  7497  002AB4                     l869:
  7498                           
  7499                           ; BSR set to: 0
  7500  002AB4  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7501  002AB8  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7502  002ABC  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7503  002AC0  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7504                           
  7505                           ; BSR set to: 0
  7506  002AC4  0012               	return		;funcret
  7507  002AC6                     __end_of___lldiv:
  7508                           	opt stack 0
  7509                           tblptru	equ	0xFF8
  7510                           tblptrh	equ	0xFF7
  7511                           tblptrl	equ	0xFF6
  7512                           tablat	equ	0xFF5
  7513                           prodh	equ	0xFF4
  7514                           prodl	equ	0xFF3
  7515                           intcon	equ	0xFF2
  7516                           postinc0	equ	0xFEE
  7517                           wreg	equ	0xFE8
  7518                           indf2	equ	0xFDF
  7519                           postinc2	equ	0xFDE
  7520                           fsr2h	equ	0xFDA
  7521                           fsr2l	equ	0xFD9
  7522                           status	equ	0xFD8
  7523                           
  7524 ;; *************** function ___fltol *****************
  7525 ;; Defined at:
  7526 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  f1              4   64[BANK0 ] unsigned long 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  exp1            1   73[BANK0 ] unsigned char 
  7531 ;;  sign1           1   72[BANK0 ] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  4   64[BANK0 ] long 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7541 ;;      Params:         0       4       0       0
  7542 ;;      Locals:         0       2       0       0
  7543 ;;      Temps:          0       4       0       0
  7544 ;;      Totals:         0      10       0       0
  7545 ;;Total ram usage:       10 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    4
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_main
  7552 ;;		_sprintf
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text23
  7557  0025D2                     __ptext23:
  7558                           	opt stack 0
  7559  0025D2                     ___fltol:
  7560                           	opt stack 26
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;incstack = 0
  7564  0025D2  0100               	movlb	0	; () banked
  7565  0025D4  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7566  0025D6  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7567  0025D8  0100               	movlb	0	; () banked
  7568  0025DA  6FA9               	movwf	___fltol@exp1& (0+255),b
  7569  0025DC  0100               	movlb	0	; () banked
  7570  0025DE  51A9               	movf	___fltol@exp1& (0+255),w,b
  7571  0025E0  A4D8               	btfss	status,2,c
  7572  0025E2  D00A               	goto	l4935
  7573                           
  7574                           ; BSR set to: 0
  7575  0025E4  0E00               	movlw	0
  7576  0025E6  0100               	movlb	0	; () banked
  7577  0025E8  6FA0               	movwf	?___fltol& (0+255),b
  7578  0025EA  0E00               	movlw	0
  7579  0025EC  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7580  0025EE  0E00               	movlw	0
  7581  0025F0  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7582  0025F2  0E00               	movlw	0
  7583  0025F4  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586  0025F6  0012               	return	
  7587  0025F8                     l4935:
  7588                           
  7589                           ; BSR set to: 0
  7590  0025F8  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7591  0025FC  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7592  002600  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7593  002604  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7594  002608  0E20               	movlw	32
  7595  00260A  D006               	goto	u5660
  7596  00260C                     u5665:
  7597  00260C  0100               	movlb	0	; () banked
  7598  00260E  90D8               	bcf	status,0,c
  7599  002610  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7600  002612  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7601  002614  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7602  002616  33A4               	rrcf	??___fltol& (0+255),f,b
  7603  002618                     u5660:
  7604  002618  2EE8               	decfsz	wreg,f,c
  7605  00261A  D7F8               	goto	u5665
  7606  00261C  0100               	movlb	0	; () banked
  7607  00261E  51A4               	movf	??___fltol& (0+255),w,b
  7608  002620  0100               	movlb	0	; () banked
  7609  002622  6FA8               	movwf	___fltol@sign1& (0+255),b
  7610                           
  7611                           ; BSR set to: 0
  7612  002624  0100               	movlb	0	; () banked
  7613  002626  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7614                           
  7615                           ; BSR set to: 0
  7616  002628  0EFF               	movlw	255
  7617  00262A  0100               	movlb	0	; () banked
  7618  00262C  17A0               	andwf	___fltol@f1& (0+255),f,b
  7619  00262E  0EFF               	movlw	255
  7620  002630  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7621  002632  0EFF               	movlw	255
  7622  002634  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7623  002636  0E00               	movlw	0
  7624  002638  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7625                           
  7626                           ; BSR set to: 0
  7627  00263A  0E96               	movlw	150
  7628  00263C  0100               	movlb	0	; () banked
  7629  00263E  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7630                           
  7631                           ; BSR set to: 0
  7632  002640  0100               	movlb	0	; () banked
  7633  002642  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7634  002644  D01A               	goto	l4955
  7635                           
  7636                           ; BSR set to: 0
  7637  002646  0100               	movlb	0	; () banked
  7638  002648  51A9               	movf	___fltol@exp1& (0+255),w,b
  7639  00264A  0A80               	xorlw	128
  7640  00264C  0F97               	addlw	151
  7641  00264E  B0D8               	btfsc	status,0,c
  7642  002650  D00A               	goto	l4951
  7643                           
  7644                           ; BSR set to: 0
  7645  002652  0E00               	movlw	0
  7646  002654  0100               	movlb	0	; () banked
  7647  002656  6FA0               	movwf	?___fltol& (0+255),b
  7648  002658  0E00               	movlw	0
  7649  00265A  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7650  00265C  0E00               	movlw	0
  7651  00265E  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7652  002660  0E00               	movlw	0
  7653  002662  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656  002664  0012               	return	
  7657  002666                     l4951:
  7658                           
  7659                           ; BSR set to: 0
  7660  002666  0100               	movlb	0	; () banked
  7661  002668  90D8               	bcf	status,0,c
  7662  00266A  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7663  00266C  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7664  00266E  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7665  002670  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7666                           
  7667                           ; BSR set to: 0
  7668  002672  0100               	movlb	0	; () banked
  7669  002674  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7670  002676  D7F7               	goto	l4951
  7671                           
  7672                           ; BSR set to: 0
  7673  002678  D01B               	goto	l4965
  7674  00267A                     l4955:
  7675                           
  7676                           ; BSR set to: 0
  7677  00267A  0E1F               	movlw	31
  7678  00267C  0100               	movlb	0	; () banked
  7679  00267E  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7680  002680  D012               	goto	l4963
  7681                           
  7682                           ; BSR set to: 0
  7683  002682  0E00               	movlw	0
  7684  002684  0100               	movlb	0	; () banked
  7685  002686  6FA0               	movwf	?___fltol& (0+255),b
  7686  002688  0E00               	movlw	0
  7687  00268A  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7688  00268C  0E00               	movlw	0
  7689  00268E  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7690  002690  0E00               	movlw	0
  7691  002692  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7692                           
  7693                           ; BSR set to: 0
  7694  002694  0012               	return	
  7695  002696                     l4961:
  7696                           
  7697                           ; BSR set to: 0
  7698  002696  0100               	movlb	0	; () banked
  7699  002698  90D8               	bcf	status,0,c
  7700  00269A  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7701  00269C  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7702  00269E  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7703  0026A0  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7704  0026A2  0100               	movlb	0	; () banked
  7705  0026A4  07A9               	decf	___fltol@exp1& (0+255),f,b
  7706  0026A6                     l4963:
  7707                           
  7708                           ; BSR set to: 0
  7709  0026A6  0100               	movlb	0	; () banked
  7710  0026A8  51A9               	movf	___fltol@exp1& (0+255),w,b
  7711  0026AA  0100               	movlb	0	; () banked
  7712  0026AC  A4D8               	btfss	status,2,c
  7713  0026AE  D7F3               	goto	l4961
  7714  0026B0                     l4965:
  7715                           
  7716                           ; BSR set to: 0
  7717  0026B0  0100               	movlb	0	; () banked
  7718  0026B2  51A8               	movf	___fltol@sign1& (0+255),w,b
  7719  0026B4  0100               	movlb	0	; () banked
  7720  0026B6  B4D8               	btfsc	status,2,c
  7721  0026B8  D009               	goto	l4969
  7722                           
  7723                           ; BSR set to: 0
  7724  0026BA  0100               	movlb	0	; () banked
  7725  0026BC  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7726  0026BE  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7727  0026C0  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7728  0026C2  6DA0               	negf	___fltol@f1& (0+255),b
  7729  0026C4  0E00               	movlw	0
  7730  0026C6  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7731  0026C8  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7732  0026CA  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7733  0026CC                     l4969:
  7734                           
  7735                           ; BSR set to: 0
  7736  0026CC  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7737  0026D0  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7738  0026D4  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7739  0026D8  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7740  0026DC  0012               	return	
  7741  0026DE                     __end_of___fltol:
  7742                           	opt stack 0
  7743                           tblptru	equ	0xFF8
  7744                           tblptrh	equ	0xFF7
  7745                           tblptrl	equ	0xFF6
  7746                           tablat	equ	0xFF5
  7747                           prodh	equ	0xFF4
  7748                           prodl	equ	0xFF3
  7749                           intcon	equ	0xFF2
  7750                           postinc0	equ	0xFEE
  7751                           wreg	equ	0xFE8
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function ___flsub *****************
  7759 ;; Defined at:
  7760 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  b               4   88[BANK0 ] long 
  7763 ;;  a               4   92[BANK0 ] long 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  4   88[BANK0 ] long 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7775 ;;      Params:         0       8       0       0
  7776 ;;      Locals:         0       0       0       0
  7777 ;;      Temps:          0       0       0       0
  7778 ;;      Totals:         0       8       0       0
  7779 ;;Total ram usage:        8 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    5
  7782 ;; This function calls:
  7783 ;;		___fladd
  7784 ;; This function is called by:
  7785 ;;		_sprintf
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text24
  7790  002D12                     __ptext24:
  7791                           	opt stack 0
  7792  002D12                     ___flsub:
  7793                           	opt stack 23
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;incstack = 0
  7797  002D12  0E00               	movlw	0
  7798  002D14  0100               	movlb	0	; () banked
  7799  002D16  1BBC               	xorwf	___flsub@a& (0+255),f,b
  7800  002D18  0E00               	movlw	0
  7801  002D1A  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  7802  002D1C  0E00               	movlw	0
  7803  002D1E  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  7804  002D20  0E80               	movlw	128
  7805  002D22  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  7806                           
  7807                           ; BSR set to: 0
  7808  002D24  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  7809  002D28  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  7810  002D2C  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  7811  002D30  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  7812  002D34  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  7813  002D38  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  7814  002D3C  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  7815  002D40  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  7816  002D44  EC90  F004         	call	___fladd	;wreg free
  7817  002D48  C0A4  F0B8         	movff	?___fladd,?___flsub
  7818  002D4C  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  7819  002D50  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  7820  002D54  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  7821  002D58  0012               	return	
  7822  002D5A                     __end_of___flsub:
  7823                           	opt stack 0
  7824                           tblptru	equ	0xFF8
  7825                           tblptrh	equ	0xFF7
  7826                           tblptrl	equ	0xFF6
  7827                           tablat	equ	0xFF5
  7828                           prodh	equ	0xFF4
  7829                           prodl	equ	0xFF3
  7830                           intcon	equ	0xFF2
  7831                           postinc0	equ	0xFEE
  7832                           wreg	equ	0xFE8
  7833                           indf2	equ	0xFDF
  7834                           postinc2	equ	0xFDE
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function ___fladd *****************
  7840 ;; Defined at:
  7841 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  b               4   68[BANK0 ] long 
  7844 ;;  a               4   72[BANK0 ] long 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  grs             1   87[BANK0 ] unsigned char 
  7847 ;;  bexp            1   86[BANK0 ] unsigned char 
  7848 ;;  aexp            1   85[BANK0 ] unsigned char 
  7849 ;;  signs           1   84[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  4   68[BANK0 ] unsigned char 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7859 ;;      Params:         0       8       0       0
  7860 ;;      Locals:         0       4       0       0
  7861 ;;      Temps:          0       8       0       0
  7862 ;;      Totals:         0      20       0       0
  7863 ;;Total ram usage:       20 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    4
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_sprintf
  7870 ;;		___flsub
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text25
  7875  000920                     __ptext25:
  7876                           	opt stack 0
  7877  000920                     ___fladd:
  7878                           	opt stack 23
  7879                           
  7880                           ;incstack = 0
  7881  000920  0100               	movlb	0	; () banked
  7882  000922  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7883  000924  0B80               	andlw	128
  7884  000926  0100               	movlb	0	; () banked
  7885  000928  6FB4               	movwf	___fladd@signs& (0+255),b
  7886  00092A  0100               	movlb	0	; () banked
  7887  00092C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7888  00092E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  7889  000930  0100               	movlb	0	; () banked
  7890  000932  6FB6               	movwf	___fladd@bexp& (0+255),b
  7891                           
  7892                           ; BSR set to: 0
  7893  000934  0100               	movlb	0	; () banked
  7894  000936  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  7895  000938  D002               	goto	l4277
  7896                           
  7897                           ; BSR set to: 0
  7898  00093A  0100               	movlb	0	; () banked
  7899  00093C  81B6               	bsf	___fladd@bexp& (0+255),0,b
  7900  00093E                     l4277:
  7901                           
  7902                           ; BSR set to: 0
  7903  00093E  0100               	movlb	0	; () banked
  7904  000940  51B6               	movf	___fladd@bexp& (0+255),w,b
  7905  000942  0100               	movlb	0	; () banked
  7906  000944  B4D8               	btfsc	status,2,c
  7907  000946  D012               	goto	l4287
  7908                           
  7909                           ; BSR set to: 0
  7910  000948  0100               	movlb	0	; () banked
  7911  00094A  29B6               	incf	___fladd@bexp& (0+255),w,b
  7912  00094C  A4D8               	btfss	status,2,c
  7913  00094E  D009               	goto	l4283
  7914                           
  7915                           ; BSR set to: 0
  7916  000950  0E00               	movlw	0
  7917  000952  0100               	movlb	0	; () banked
  7918  000954  6FA4               	movwf	___fladd@b& (0+255),b
  7919  000956  0E00               	movlw	0
  7920  000958  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  7921  00095A  0E00               	movlw	0
  7922  00095C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  7923  00095E  0E00               	movlw	0
  7924  000960  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  7925  000962                     l4283:
  7926                           
  7927                           ; BSR set to: 0
  7928  000962  0100               	movlb	0	; () banked
  7929  000964  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  7930                           
  7931                           ; BSR set to: 0
  7932  000966  0E00               	movlw	0
  7933  000968  0100               	movlb	0	; () banked
  7934  00096A  D008               	goto	L8
  7935  00096C                     l4287:
  7936                           
  7937                           ; BSR set to: 0
  7938  00096C  0E00               	movlw	0
  7939  00096E  0100               	movlb	0	; () banked
  7940  000970  6FA4               	movwf	___fladd@b& (0+255),b
  7941  000972  0E00               	movlw	0
  7942  000974  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  7943  000976  0E00               	movlw	0
  7944  000978  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  7945  00097A  0E00               	movlw	0
  7946  00097C                     L8:
  7947  00097C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  7948                           
  7949                           ; BSR set to: 0
  7950                           
  7951                           ; BSR set to: 0
  7952  00097E  0100               	movlb	0	; () banked
  7953  000980  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  7954  000982  0B80               	andlw	128
  7955  000984  0100               	movlb	0	; () banked
  7956  000986  6FB5               	movwf	___fladd@aexp& (0+255),b
  7957                           
  7958                           ; BSR set to: 0
  7959  000988  0100               	movlb	0	; () banked
  7960  00098A  51B4               	movf	___fladd@signs& (0+255),w,b
  7961  00098C  0100               	movlb	0	; () banked
  7962  00098E  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  7963  000990  B4D8               	btfsc	status,2,c
  7964  000992  D002               	goto	l4295
  7965                           
  7966                           ; BSR set to: 0
  7967  000994  0100               	movlb	0	; () banked
  7968  000996  8DB4               	bsf	___fladd@signs& (0+255),6,b
  7969  000998                     l4295:
  7970                           
  7971                           ; BSR set to: 0
  7972  000998  0100               	movlb	0	; () banked
  7973  00099A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  7974  00099C  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  7975  00099E  0100               	movlb	0	; () banked
  7976  0009A0  6FB5               	movwf	___fladd@aexp& (0+255),b
  7977                           
  7978                           ; BSR set to: 0
  7979  0009A2  0100               	movlb	0	; () banked
  7980  0009A4  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  7981  0009A6  D002               	goto	l4301
  7982                           
  7983                           ; BSR set to: 0
  7984  0009A8  0100               	movlb	0	; () banked
  7985  0009AA  81B5               	bsf	___fladd@aexp& (0+255),0,b
  7986  0009AC                     l4301:
  7987                           
  7988                           ; BSR set to: 0
  7989  0009AC  0100               	movlb	0	; () banked
  7990  0009AE  51B5               	movf	___fladd@aexp& (0+255),w,b
  7991  0009B0  0100               	movlb	0	; () banked
  7992  0009B2  B4D8               	btfsc	status,2,c
  7993  0009B4  D012               	goto	l4311
  7994                           
  7995                           ; BSR set to: 0
  7996  0009B6  0100               	movlb	0	; () banked
  7997  0009B8  29B5               	incf	___fladd@aexp& (0+255),w,b
  7998  0009BA  A4D8               	btfss	status,2,c
  7999  0009BC  D009               	goto	l4307
  8000                           
  8001                           ; BSR set to: 0
  8002  0009BE  0E00               	movlw	0
  8003  0009C0  0100               	movlb	0	; () banked
  8004  0009C2  6FA8               	movwf	___fladd@a& (0+255),b
  8005  0009C4  0E00               	movlw	0
  8006  0009C6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8007  0009C8  0E00               	movlw	0
  8008  0009CA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8009  0009CC  0E00               	movlw	0
  8010  0009CE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8011  0009D0                     l4307:
  8012                           
  8013                           ; BSR set to: 0
  8014  0009D0  0100               	movlb	0	; () banked
  8015  0009D2  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8016                           
  8017                           ; BSR set to: 0
  8018  0009D4  0E00               	movlw	0
  8019  0009D6  0100               	movlb	0	; () banked
  8020  0009D8  D008               	goto	L9
  8021  0009DA                     l4311:
  8022                           
  8023                           ; BSR set to: 0
  8024  0009DA  0E00               	movlw	0
  8025  0009DC  0100               	movlb	0	; () banked
  8026  0009DE  6FA8               	movwf	___fladd@a& (0+255),b
  8027  0009E0  0E00               	movlw	0
  8028  0009E2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8029  0009E4  0E00               	movlw	0
  8030  0009E6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8031  0009E8  0E00               	movlw	0
  8032  0009EA                     L9:
  8033  0009EA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8034                           
  8035                           ; BSR set to: 0
  8036                           
  8037                           ; BSR set to: 0
  8038  0009EC  0100               	movlb	0	; () banked
  8039  0009EE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8040  0009F0  0100               	movlb	0	; () banked
  8041  0009F2  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8042  0009F4  B0D8               	btfsc	status,0,c
  8043  0009F6  D024               	goto	l4349
  8044                           
  8045                           ; BSR set to: 0
  8046  0009F8  0100               	movlb	0	; () banked
  8047  0009FA  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8048  0009FC  D003               	goto	l4319
  8049                           
  8050                           ; BSR set to: 0
  8051  0009FE  0E80               	movlw	128
  8052  000A00  0100               	movlb	0	; () banked
  8053  000A02  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8054  000A04                     l4319:
  8055                           
  8056                           ; BSR set to: 0
  8057  000A04  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8058                           
  8059                           ; BSR set to: 0
  8060  000A08  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8061                           
  8062                           ; BSR set to: 0
  8063  000A0C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8064                           
  8065                           ; BSR set to: 0
  8066  000A10  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8067                           
  8068                           ; BSR set to: 0
  8069  000A14  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8070                           
  8071                           ; BSR set to: 0
  8072  000A18  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8073                           
  8074                           ; BSR set to: 0
  8075  000A1C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8076                           
  8077                           ; BSR set to: 0
  8078  000A20  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8079                           
  8080                           ; BSR set to: 0
  8081  000A24  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8082                           
  8083                           ; BSR set to: 0
  8084  000A28  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8085                           
  8086                           ; BSR set to: 0
  8087  000A2C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8088                           
  8089                           ; BSR set to: 0
  8090  000A30  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8091                           
  8092                           ; BSR set to: 0
  8093  000A34  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8094                           
  8095                           ; BSR set to: 0
  8096  000A38  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8097                           
  8098                           ; BSR set to: 0
  8099  000A3C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8100  000A40                     l4349:
  8101                           
  8102                           ; BSR set to: 0
  8103  000A40  0E00               	movlw	0
  8104  000A42  0100               	movlb	0	; () banked
  8105  000A44  6FB7               	movwf	___fladd@grs& (0+255),b
  8106                           
  8107                           ; BSR set to: 0
  8108  000A46  0100               	movlb	0	; () banked
  8109  000A48  51B6               	movf	___fladd@bexp& (0+255),w,b
  8110  000A4A  0100               	movlb	0	; () banked
  8111  000A4C  6FAC               	movwf	??___fladd& (0+255),b
  8112  000A4E  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8113  000A50  0100               	movlb	0	; () banked
  8114  000A52  1FAC               	comf	??___fladd& (0+255),f,b
  8115  000A54  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8116  000A56  4BAC               	infsnz	??___fladd& (0+255),f,b
  8117  000A58  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8118  000A5A  0100               	movlb	0	; () banked
  8119  000A5C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8120  000A5E  0100               	movlb	0	; () banked
  8121  000A60  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8122  000A62  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8123  000A64  0100               	movlb	0	; () banked
  8124  000A66  51AC               	movf	??___fladd& (0+255),w,b
  8125  000A68  0100               	movlb	0	; () banked
  8126  000A6A  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8127  000A6C  0100               	movlb	0	; () banked
  8128  000A6E  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8129  000A70  0100               	movlb	0	; () banked
  8130  000A72  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8131  000A74  0100               	movlb	0	; () banked
  8132  000A76  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8133  000A78  D03D               	goto	l964
  8134  000A7A  0100               	movlb	0	; () banked
  8135  000A7C  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8136  000A7E  E105               	bnz	u4730
  8137  000A80  0E1A               	movlw	26
  8138  000A82  0100               	movlb	0	; () banked
  8139  000A84  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8140  000A86  A0D8               	btfss	status,0,c
  8141  000A88  D035               	goto	l964
  8142  000A8A                     u4730:
  8143                           
  8144                           ; BSR set to: 0
  8145  000A8A  0100               	movlb	0	; () banked
  8146  000A8C  51A4               	movf	___fladd@b& (0+255),w,b
  8147  000A8E  0100               	movlb	0	; () banked
  8148  000A90  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8149  000A92  0100               	movlb	0	; () banked
  8150  000A94  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8151  000A96  0100               	movlb	0	; () banked
  8152  000A98  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8153  000A9A  B4D8               	btfsc	status,2,c
  8154  000A9C  D002               	goto	u4740
  8155  000A9E  0E01               	movlw	1
  8156  000AA0  D001               	goto	u4750
  8157  000AA2                     u4740:
  8158  000AA2  0E00               	movlw	0
  8159  000AA4                     u4750:
  8160  000AA4  0100               	movlb	0	; () banked
  8161  000AA6  6FB7               	movwf	___fladd@grs& (0+255),b
  8162                           
  8163                           ; BSR set to: 0
  8164  000AA8  0E00               	movlw	0
  8165  000AAA  0100               	movlb	0	; () banked
  8166  000AAC  6FA4               	movwf	___fladd@b& (0+255),b
  8167  000AAE  0E00               	movlw	0
  8168  000AB0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8169  000AB2  0E00               	movlw	0
  8170  000AB4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8171  000AB6  0E00               	movlw	0
  8172  000AB8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8173                           
  8174                           ; BSR set to: 0
  8175  000ABA  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8176  000ABE  D020               	goto	l963
  8177  000AC0                     l965:
  8178                           
  8179                           ; BSR set to: 0
  8180  000AC0  0100               	movlb	0	; () banked
  8181  000AC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8182  000AC4  D007               	goto	l4361
  8183                           
  8184                           ; BSR set to: 0
  8185  000AC6  0100               	movlb	0	; () banked
  8186  000AC8  90D8               	bcf	status,0,c
  8187  000ACA  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8188  000ACC  0901               	iorlw	1
  8189  000ACE  0100               	movlb	0	; () banked
  8190  000AD0  6FB7               	movwf	___fladd@grs& (0+255),b
  8191  000AD2  D003               	goto	l4363
  8192  000AD4                     l4361:
  8193                           
  8194                           ; BSR set to: 0
  8195  000AD4  0100               	movlb	0	; () banked
  8196  000AD6  90D8               	bcf	status,0,c
  8197  000AD8  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8198  000ADA                     l4363:
  8199                           
  8200                           ; BSR set to: 0
  8201  000ADA  0100               	movlb	0	; () banked
  8202  000ADC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8203  000ADE  D002               	goto	l4367
  8204                           
  8205                           ; BSR set to: 0
  8206  000AE0  0100               	movlb	0	; () banked
  8207  000AE2  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8208  000AE4                     l4367:
  8209                           
  8210                           ; BSR set to: 0
  8211  000AE4  0100               	movlb	0	; () banked
  8212  000AE6  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8213  000AE8  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8214  000AEA  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8215  000AEC  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8216  000AEE  33A4               	rrcf	___fladd@b& (0+255),f,b
  8217                           
  8218                           ; BSR set to: 0
  8219  000AF0  0100               	movlb	0	; () banked
  8220  000AF2  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8221  000AF4                     l964:
  8222                           
  8223                           ; BSR set to: 0
  8224  000AF4  0100               	movlb	0	; () banked
  8225  000AF6  51B5               	movf	___fladd@aexp& (0+255),w,b
  8226  000AF8  0100               	movlb	0	; () banked
  8227  000AFA  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8228  000AFC  A0D8               	btfss	status,0,c
  8229  000AFE  D7E0               	goto	l965
  8230  000B00                     l963:
  8231                           
  8232                           ; BSR set to: 0
  8233  000B00  0100               	movlb	0	; () banked
  8234  000B02  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8235  000B04  D03F               	goto	l4395
  8236                           
  8237                           ; BSR set to: 0
  8238  000B06  0100               	movlb	0	; () banked
  8239  000B08  51B6               	movf	___fladd@bexp& (0+255),w,b
  8240  000B0A  0100               	movlb	0	; () banked
  8241  000B0C  A4D8               	btfss	status,2,c
  8242  000B0E  D00A               	goto	l4377
  8243                           
  8244                           ; BSR set to: 0
  8245  000B10  0E00               	movlw	0
  8246  000B12  0100               	movlb	0	; () banked
  8247  000B14  6FA4               	movwf	?___fladd& (0+255),b
  8248  000B16  0E00               	movlw	0
  8249  000B18  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8250  000B1A  0E00               	movlw	0
  8251  000B1C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8252  000B1E  0E00               	movlw	0
  8253  000B20  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8254                           
  8255                           ; BSR set to: 0
  8256  000B22  0012               	return	
  8257  000B24                     l4377:
  8258                           
  8259                           ; BSR set to: 0
  8260  000B24  0100               	movlb	0	; () banked
  8261  000B26  51A8               	movf	___fladd@a& (0+255),w,b
  8262  000B28  0100               	movlb	0	; () banked
  8263  000B2A  27A4               	addwf	___fladd@b& (0+255),f,b
  8264  000B2C  0100               	movlb	0	; () banked
  8265  000B2E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8266  000B30  0100               	movlb	0	; () banked
  8267  000B32  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8268  000B34  0100               	movlb	0	; () banked
  8269  000B36  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8270  000B38  0100               	movlb	0	; () banked
  8271  000B3A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8272  000B3C  0100               	movlb	0	; () banked
  8273  000B3E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8274  000B40  0100               	movlb	0	; () banked
  8275  000B42  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278  000B44  0100               	movlb	0	; () banked
  8279  000B46  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8280  000B48  D0CC               	goto	l4431
  8281                           
  8282                           ; BSR set to: 0
  8283  000B4A  0100               	movlb	0	; () banked
  8284  000B4C  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8285  000B4E  D009               	goto	l4385
  8286                           
  8287                           ; BSR set to: 0
  8288  000B50  0100               	movlb	0	; () banked
  8289  000B52  90D8               	bcf	status,0,c
  8290  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8291  000B56  0100               	movlb	0	; () banked
  8292  000B58  51B7               	movf	___fladd@grs& (0+255),w,b
  8293  000B5A  0901               	iorlw	1
  8294  000B5C  0100               	movlb	0	; () banked
  8295  000B5E  6FB7               	movwf	___fladd@grs& (0+255),b
  8296  000B60  D003               	goto	l4387
  8297  000B62                     l4385:
  8298                           
  8299                           ; BSR set to: 0
  8300  000B62  0100               	movlb	0	; () banked
  8301  000B64  90D8               	bcf	status,0,c
  8302  000B66  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8303  000B68                     l4387:
  8304                           
  8305                           ; BSR set to: 0
  8306  000B68  0100               	movlb	0	; () banked
  8307  000B6A  A1A4               	btfss	___fladd@b& (0+255),0,b
  8308  000B6C  D002               	goto	l4391
  8309                           
  8310                           ; BSR set to: 0
  8311  000B6E  0100               	movlb	0	; () banked
  8312  000B70  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8313  000B72                     l4391:
  8314                           
  8315                           ; BSR set to: 0
  8316  000B72  0100               	movlb	0	; () banked
  8317  000B74  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8318  000B76  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8319  000B78  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8320  000B7A  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8321  000B7C  33A4               	rrcf	___fladd@b& (0+255),f,b
  8322                           
  8323                           ; BSR set to: 0
  8324  000B7E  0100               	movlb	0	; () banked
  8325  000B80  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8326                           
  8327                           ; BSR set to: 0
  8328  000B82  D0AF               	goto	l4431
  8329  000B84                     l4395:
  8330                           
  8331                           ; BSR set to: 0
  8332  000B84  0100               	movlb	0	; () banked
  8333  000B86  51A8               	movf	___fladd@a& (0+255),w,b
  8334  000B88  0100               	movlb	0	; () banked
  8335  000B8A  5DA4               	subwf	___fladd@b& (0+255),w,b
  8336  000B8C  0100               	movlb	0	; () banked
  8337  000B8E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8338  000B90  0100               	movlb	0	; () banked
  8339  000B92  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8340  000B94  0100               	movlb	0	; () banked
  8341  000B96  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8342  000B98  0100               	movlb	0	; () banked
  8343  000B9A  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8344  000B9C  0100               	movlb	0	; () banked
  8345  000B9E  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8346  000BA0  0A80               	xorlw	128
  8347  000BA2  0100               	movlb	0	; () banked
  8348  000BA4  6FAC               	movwf	??___fladd& (0+255),b
  8349  000BA6  0100               	movlb	0	; () banked
  8350  000BA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8351  000BAA  0A80               	xorlw	128
  8352  000BAC  0100               	movlb	0	; () banked
  8353  000BAE  59AC               	subwfb	??___fladd& (0+255),w,b
  8354  000BB0  B0D8               	btfsc	status,0,c
  8355  000BB2  D050               	goto	l4405
  8356                           
  8357                           ; BSR set to: 0
  8358  000BB4  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8359  000BB8  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8360  000BBC  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8361  000BC0  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8362  000BC4  0100               	movlb	0	; () banked
  8363  000BC6  1FAC               	comf	??___fladd& (0+255),f,b
  8364  000BC8  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8365  000BCA  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8366  000BCC  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8367  000BCE  2BAC               	incf	??___fladd& (0+255),f,b
  8368  000BD0  0E00               	movlw	0
  8369  000BD2  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8370  000BD4  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8371  000BD6  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8372  000BD8  0100               	movlb	0	; () banked
  8373  000BDA  51A8               	movf	___fladd@a& (0+255),w,b
  8374  000BDC  0100               	movlb	0	; () banked
  8375  000BDE  25AC               	addwf	??___fladd& (0+255),w,b
  8376  000BE0  0100               	movlb	0	; () banked
  8377  000BE2  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8378  000BE4  0100               	movlb	0	; () banked
  8379  000BE6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8380  000BE8  0100               	movlb	0	; () banked
  8381  000BEA  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8382  000BEC  0100               	movlb	0	; () banked
  8383  000BEE  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8384  000BF0  0100               	movlb	0	; () banked
  8385  000BF2  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8386  000BF4  0100               	movlb	0	; () banked
  8387  000BF6  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8388  000BF8  0100               	movlb	0	; () banked
  8389  000BFA  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8390  000BFC  0100               	movlb	0	; () banked
  8391  000BFE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8392  000C00  0100               	movlb	0	; () banked
  8393  000C02  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8394  000C04  0100               	movlb	0	; () banked
  8395  000C06  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8396  000C08  0EFF               	movlw	255
  8397  000C0A  0100               	movlb	0	; () banked
  8398  000C0C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8399  000C0E  0100               	movlb	0	; () banked
  8400  000C10  6FA4               	movwf	___fladd@b& (0+255),b
  8401  000C12  0EFF               	movlw	255
  8402  000C14  0100               	movlb	0	; () banked
  8403  000C16  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8404  000C18  0100               	movlb	0	; () banked
  8405  000C1A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8406  000C1C  0EFF               	movlw	255
  8407  000C1E  0100               	movlb	0	; () banked
  8408  000C20  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8409  000C22  0100               	movlb	0	; () banked
  8410  000C24  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8411  000C26  0EFF               	movlw	255
  8412  000C28  0100               	movlb	0	; () banked
  8413  000C2A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8414  000C2C  0100               	movlb	0	; () banked
  8415  000C2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8416  000C30  0E80               	movlw	128
  8417  000C32  0100               	movlb	0	; () banked
  8418  000C34  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8419                           
  8420                           ; BSR set to: 0
  8421  000C36  0100               	movlb	0	; () banked
  8422  000C38  6DB7               	negf	___fladd@grs& (0+255),b
  8423                           
  8424                           ; BSR set to: 0
  8425  000C3A  0100               	movlb	0	; () banked
  8426  000C3C  51B7               	movf	___fladd@grs& (0+255),w,b
  8427  000C3E  0100               	movlb	0	; () banked
  8428  000C40  A4D8               	btfss	status,2,c
  8429  000C42  D018               	goto	l980
  8430                           
  8431                           ; BSR set to: 0
  8432  000C44  0E01               	movlw	1
  8433  000C46  0100               	movlb	0	; () banked
  8434  000C48  27A4               	addwf	___fladd@b& (0+255),f,b
  8435  000C4A  0E00               	movlw	0
  8436  000C4C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8437  000C4E  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8438  000C50  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8439                           
  8440                           ; BSR set to: 0
  8441  000C52  D010               	goto	l980
  8442  000C54                     l4405:
  8443                           
  8444                           ; BSR set to: 0
  8445  000C54  0100               	movlb	0	; () banked
  8446  000C56  51A8               	movf	___fladd@a& (0+255),w,b
  8447  000C58  0100               	movlb	0	; () banked
  8448  000C5A  5FA4               	subwf	___fladd@b& (0+255),f,b
  8449  000C5C  0100               	movlb	0	; () banked
  8450  000C5E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8451  000C60  0100               	movlb	0	; () banked
  8452  000C62  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8453  000C64  0100               	movlb	0	; () banked
  8454  000C66  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8455  000C68  0100               	movlb	0	; () banked
  8456  000C6A  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8457  000C6C  0100               	movlb	0	; () banked
  8458  000C6E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8459  000C70  0100               	movlb	0	; () banked
  8460  000C72  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8461  000C74                     l980:
  8462                           
  8463                           ; BSR set to: 0
  8464  000C74  0100               	movlb	0	; () banked
  8465  000C76  51A4               	movf	___fladd@b& (0+255),w,b
  8466  000C78  0100               	movlb	0	; () banked
  8467  000C7A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8468  000C7C  0100               	movlb	0	; () banked
  8469  000C7E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8470  000C80  0100               	movlb	0	; () banked
  8471  000C82  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8472  000C84  A4D8               	btfss	status,2,c
  8473  000C86  D02A               	goto	l4429
  8474                           
  8475                           ; BSR set to: 0
  8476  000C88  0100               	movlb	0	; () banked
  8477  000C8A  51B7               	movf	___fladd@grs& (0+255),w,b
  8478  000C8C  0100               	movlb	0	; () banked
  8479  000C8E  A4D8               	btfss	status,2,c
  8480  000C90  D025               	goto	l4429
  8481                           
  8482                           ; BSR set to: 0
  8483  000C92  0E00               	movlw	0
  8484  000C94  0100               	movlb	0	; () banked
  8485  000C96  6FA4               	movwf	?___fladd& (0+255),b
  8486  000C98  0E00               	movlw	0
  8487  000C9A  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8488  000C9C  0E00               	movlw	0
  8489  000C9E  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8490  000CA0  0E00               	movlw	0
  8491  000CA2  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8492                           
  8493                           ; BSR set to: 0
  8494  000CA4  0012               	return	
  8495  000CA6                     l4413:
  8496                           
  8497                           ; BSR set to: 0
  8498  000CA6  0100               	movlb	0	; () banked
  8499  000CA8  90D8               	bcf	status,0,c
  8500  000CAA  37A4               	rlcf	___fladd@b& (0+255),f,b
  8501  000CAC  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8502  000CAE  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8503  000CB0  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8504                           
  8505                           ; BSR set to: 0
  8506  000CB2  0100               	movlb	0	; () banked
  8507  000CB4  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8508  000CB6  D002               	goto	l4419
  8509                           
  8510                           ; BSR set to: 0
  8511  000CB8  0100               	movlb	0	; () banked
  8512  000CBA  81A4               	bsf	___fladd@b& (0+255),0,b
  8513  000CBC                     l4419:
  8514                           
  8515                           ; BSR set to: 0
  8516  000CBC  0100               	movlb	0	; () banked
  8517  000CBE  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8518  000CC0  D003               	goto	l4423
  8519                           
  8520                           ; BSR set to: 0
  8521  000CC2  80D8               	bsf	status,0,c
  8522  000CC4  0100               	movlb	0	; () banked
  8523  000CC6  D002               	goto	L10
  8524  000CC8                     l4423:
  8525                           
  8526                           ; BSR set to: 0
  8527  000CC8  0100               	movlb	0	; () banked
  8528  000CCA  90D8               	bcf	status,0,c
  8529  000CCC                     L10:
  8530  000CCC  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533                           
  8534                           ; BSR set to: 0
  8535  000CCE  0100               	movlb	0	; () banked
  8536  000CD0  51B6               	movf	___fladd@bexp& (0+255),w,b
  8537  000CD2  0100               	movlb	0	; () banked
  8538  000CD4  B4D8               	btfsc	status,2,c
  8539  000CD6  D002               	goto	l4429
  8540                           
  8541                           ; BSR set to: 0
  8542  000CD8  0100               	movlb	0	; () banked
  8543  000CDA  07B6               	decf	___fladd@bexp& (0+255),f,b
  8544  000CDC                     l4429:
  8545                           
  8546                           ; BSR set to: 0
  8547  000CDC  0100               	movlb	0	; () banked
  8548  000CDE  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8549  000CE0  D7E2               	goto	l4413
  8550  000CE2                     l4431:
  8551                           
  8552                           ; BSR set to: 0
  8553  000CE2  0E00               	movlw	0
  8554  000CE4  0100               	movlb	0	; () banked
  8555  000CE6  6FB5               	movwf	___fladd@aexp& (0+255),b
  8556                           
  8557                           ; BSR set to: 0
  8558  000CE8  0100               	movlb	0	; () banked
  8559  000CEA  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8560  000CEC  D00D               	goto	l989
  8561                           
  8562                           ; BSR set to: 0
  8563  000CEE  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8564  000CF2  0E7F               	movlw	127
  8565  000CF4  0100               	movlb	0	; () banked
  8566  000CF6  17AC               	andwf	??___fladd& (0+255),f,b
  8567  000CF8  A4D8               	btfss	status,2,c
  8568  000CFA  D003               	goto	l4439
  8569                           
  8570                           ; BSR set to: 0
  8571                           
  8572                           ; BSR set to: 0
  8573  000CFC  0100               	movlb	0	; () banked
  8574  000CFE  A1A4               	btfss	___fladd@b& (0+255),0,b
  8575  000D00  D003               	goto	l989
  8576  000D02                     l4439:
  8577                           
  8578                           ; BSR set to: 0
  8579  000D02  0E01               	movlw	1
  8580  000D04  0100               	movlb	0	; () banked
  8581  000D06  6FB5               	movwf	___fladd@aexp& (0+255),b
  8582  000D08                     l989:
  8583                           
  8584                           ; BSR set to: 0
  8585  000D08  0100               	movlb	0	; () banked
  8586  000D0A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8587  000D0C  0100               	movlb	0	; () banked
  8588  000D0E  B4D8               	btfsc	status,2,c
  8589  000D10  D026               	goto	l4449
  8590                           
  8591                           ; BSR set to: 0
  8592  000D12  0E01               	movlw	1
  8593  000D14  0100               	movlb	0	; () banked
  8594  000D16  27A4               	addwf	___fladd@b& (0+255),f,b
  8595  000D18  0E00               	movlw	0
  8596  000D1A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8597  000D1C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8598  000D1E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8599                           
  8600                           ; BSR set to: 0
  8601  000D20  0100               	movlb	0	; () banked
  8602  000D22  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8603  000D24  D01C               	goto	l4449
  8604                           
  8605                           ; BSR set to: 0
  8606  000D26  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8607  000D2A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8608  000D2E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8609  000D32  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8610  000D36  0100               	movlb	0	; () banked
  8611  000D38  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8612  000D3A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8613  000D3C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8614  000D3E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8615  000D40  33AC               	rrcf	??___fladd& (0+255),f,b
  8616  000D42  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8617  000D46  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8618  000D4A  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8619  000D4E  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8620  000D52  0100               	movlb	0	; () banked
  8621  000D54  29B6               	incf	___fladd@bexp& (0+255),w,b
  8622  000D56  B4D8               	btfsc	status,2,c
  8623  000D58  D002               	goto	l4449
  8624                           
  8625                           ; BSR set to: 0
  8626  000D5A  0100               	movlb	0	; () banked
  8627  000D5C  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8628  000D5E                     l4449:
  8629                           
  8630                           ; BSR set to: 0
  8631  000D5E  0100               	movlb	0	; () banked
  8632  000D60  29B6               	incf	___fladd@bexp& (0+255),w,b
  8633  000D62  B4D8               	btfsc	status,2,c
  8634  000D64  D005               	goto	l4453
  8635                           
  8636                           ; BSR set to: 0
  8637  000D66  0100               	movlb	0	; () banked
  8638  000D68  51B6               	movf	___fladd@bexp& (0+255),w,b
  8639  000D6A  0100               	movlb	0	; () banked
  8640  000D6C  A4D8               	btfss	status,2,c
  8641  000D6E  D011               	goto	l4457
  8642  000D70                     l4453:
  8643                           
  8644                           ; BSR set to: 0
  8645  000D70  0E00               	movlw	0
  8646  000D72  0100               	movlb	0	; () banked
  8647  000D74  6FA4               	movwf	___fladd@b& (0+255),b
  8648  000D76  0E00               	movlw	0
  8649  000D78  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8650  000D7A  0E00               	movlw	0
  8651  000D7C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8652  000D7E  0E00               	movlw	0
  8653  000D80  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8654  000D82  0100               	movlb	0	; () banked
  8655  000D84  51B6               	movf	___fladd@bexp& (0+255),w,b
  8656  000D86  0100               	movlb	0	; () banked
  8657  000D88  A4D8               	btfss	status,2,c
  8658  000D8A  D003               	goto	l4457
  8659                           
  8660                           ; BSR set to: 0
  8661  000D8C  0E00               	movlw	0
  8662  000D8E  0100               	movlb	0	; () banked
  8663  000D90  6FB4               	movwf	___fladd@signs& (0+255),b
  8664  000D92                     l4457:
  8665                           
  8666                           ; BSR set to: 0
  8667  000D92  0100               	movlb	0	; () banked
  8668  000D94  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8669  000D96  D003               	goto	l4461
  8670                           
  8671                           ; BSR set to: 0
  8672  000D98  0100               	movlb	0	; () banked
  8673  000D9A  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8674  000D9C  D002               	goto	l4463
  8675  000D9E                     l4461:
  8676                           
  8677                           ; BSR set to: 0
  8678  000D9E  0100               	movlb	0	; () banked
  8679  000DA0  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8680  000DA2                     l4463:
  8681                           
  8682                           ; BSR set to: 0
  8683  000DA2  0100               	movlb	0	; () banked
  8684  000DA4  90D8               	bcf	status,0,c
  8685  000DA6  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8686  000DA8  0100               	movlb	0	; () banked
  8687  000DAA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8688                           
  8689                           ; BSR set to: 0
  8690  000DAC  0100               	movlb	0	; () banked
  8691  000DAE  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8692  000DB0  D002               	goto	l4469
  8693                           
  8694                           ; BSR set to: 0
  8695  000DB2  0100               	movlb	0	; () banked
  8696  000DB4  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8697  000DB6                     l4469:
  8698                           
  8699                           ; BSR set to: 0
  8700  000DB6  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8701  000DBA  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8702  000DBE  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8703  000DC2  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8704  000DC6  0012               	return	
  8705  000DC8                     __end_of___fladd:
  8706                           	opt stack 0
  8707                           tblptru	equ	0xFF8
  8708                           tblptrh	equ	0xFF7
  8709                           tblptrl	equ	0xFF6
  8710                           tablat	equ	0xFF5
  8711                           prodh	equ	0xFF4
  8712                           prodl	equ	0xFF3
  8713                           intcon	equ	0xFF2
  8714                           postinc0	equ	0xFEE
  8715                           wreg	equ	0xFE8
  8716                           indf2	equ	0xFDF
  8717                           postinc2	equ	0xFDE
  8718                           fsr2h	equ	0xFDA
  8719                           fsr2l	equ	0xFD9
  8720                           status	equ	0xFD8
  8721                           
  8722 ;; *************** function ___flneg *****************
  8723 ;; Defined at:
  8724 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  f1              4   24[COMRAM] unsigned char 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  4   24[COMRAM] unsigned char 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8738 ;;      Params:         4       0       0       0
  8739 ;;      Locals:         0       0       0       0
  8740 ;;      Temps:          0       0       0       0
  8741 ;;      Totals:         4       0       0       0
  8742 ;;Total ram usage:        4 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    4
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_sprintf
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text26
  8753  002EE4                     __ptext26:
  8754                           	opt stack 0
  8755  002EE4                     ___flneg:
  8756                           	opt stack 24
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;incstack = 0
  8760  002EE4  503C               	movf	___flneg@f1,w,c
  8761  002EE6  103D               	iorwf	___flneg@f1+1,w,c
  8762  002EE8  103E               	iorwf	___flneg@f1+2,w,c
  8763  002EEA  103F               	iorwf	___flneg@f1+3,w,c
  8764  002EEC  B4D8               	btfsc	status,2,c
  8765  002EEE  D008               	goto	l4925
  8766  002EF0  0E00               	movlw	0
  8767  002EF2  1A3C               	xorwf	___flneg@f1,f,c
  8768  002EF4  0E00               	movlw	0
  8769  002EF6  1A3D               	xorwf	___flneg@f1+1,f,c
  8770  002EF8  0E00               	movlw	0
  8771  002EFA  1A3E               	xorwf	___flneg@f1+2,f,c
  8772  002EFC  0E80               	movlw	128
  8773  002EFE  1A3F               	xorwf	___flneg@f1+3,f,c
  8774  002F00                     l4925:
  8775  002F00  C03C  F03C         	movff	___flneg@f1,?___flneg
  8776  002F04  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8777  002F08  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8778  002F0C  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8779  002F10  0012               	return	
  8780  002F12                     __end_of___flneg:
  8781                           	opt stack 0
  8782                           tblptru	equ	0xFF8
  8783                           tblptrh	equ	0xFF7
  8784                           tblptrl	equ	0xFF6
  8785                           tablat	equ	0xFF5
  8786                           prodh	equ	0xFF4
  8787                           prodl	equ	0xFF3
  8788                           intcon	equ	0xFF2
  8789                           postinc0	equ	0xFEE
  8790                           wreg	equ	0xFE8
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           fsr2h	equ	0xFDA
  8794                           fsr2l	equ	0xFD9
  8795                           status	equ	0xFD8
  8796                           
  8797 ;; *************** function ___flge *****************
  8798 ;; Defined at:
  8799 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  ff1             4   16[BANK0 ] unsigned char 
  8802 ;;  ff2             4   20[BANK0 ] unsigned char 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;		None               void
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8814 ;;      Params:         0       8       0       0
  8815 ;;      Locals:         0       0       0       0
  8816 ;;      Temps:          4       0       0       0
  8817 ;;      Totals:         4       8       0       0
  8818 ;;Total ram usage:       12 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    4
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_sprintf
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text27
  8829  002360                     __ptext27:
  8830                           	opt stack 0
  8831  002360                     ___flge:
  8832                           	opt stack 24
  8833                           
  8834                           ;incstack = 0
  8835  002360  0E00               	movlw	0
  8836  002362  0100               	movlb	0	; () banked
  8837  002364  1570               	andwf	___flge@ff1& (0+255),w,b
  8838  002366  6E3C               	movwf	??___flge& (0+255),c
  8839  002368  0E00               	movlw	0
  8840  00236A  0100               	movlb	0	; () banked
  8841  00236C  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  8842  00236E  6E3D               	movwf	(??___flge+1)& (0+255),c
  8843  002370  0E80               	movlw	128
  8844  002372  0100               	movlb	0	; () banked
  8845  002374  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  8846  002376  6E3E               	movwf	(??___flge+2)& (0+255),c
  8847  002378  0E7F               	movlw	127
  8848  00237A  0100               	movlb	0	; () banked
  8849  00237C  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  8850  00237E  6E3F               	movwf	(??___flge+3)& (0+255),c
  8851  002380  503C               	movf	??___flge,w,c
  8852  002382  103D               	iorwf	??___flge+1,w,c
  8853  002384  103E               	iorwf	??___flge+2,w,c
  8854  002386  103F               	iorwf	??___flge+3,w,c
  8855  002388  A4D8               	btfss	status,2,c
  8856  00238A  D009               	goto	l4903
  8857                           
  8858                           ; BSR set to: 0
  8859  00238C  0E00               	movlw	0
  8860  00238E  0100               	movlb	0	; () banked
  8861  002390  6F70               	movwf	___flge@ff1& (0+255),b
  8862  002392  0E00               	movlw	0
  8863  002394  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8864  002396  0E00               	movlw	0
  8865  002398  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8866  00239A  0E00               	movlw	0
  8867  00239C  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8868  00239E                     l4903:
  8869                           
  8870                           ; BSR set to: 0
  8871  00239E  0E00               	movlw	0
  8872  0023A0  0100               	movlb	0	; () banked
  8873  0023A2  1574               	andwf	___flge@ff2& (0+255),w,b
  8874  0023A4  6E3C               	movwf	??___flge& (0+255),c
  8875  0023A6  0E00               	movlw	0
  8876  0023A8  0100               	movlb	0	; () banked
  8877  0023AA  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  8878  0023AC  6E3D               	movwf	(??___flge+1)& (0+255),c
  8879  0023AE  0E80               	movlw	128
  8880  0023B0  0100               	movlb	0	; () banked
  8881  0023B2  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  8882  0023B4  6E3E               	movwf	(??___flge+2)& (0+255),c
  8883  0023B6  0E7F               	movlw	127
  8884  0023B8  0100               	movlb	0	; () banked
  8885  0023BA  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  8886  0023BC  6E3F               	movwf	(??___flge+3)& (0+255),c
  8887  0023BE  503C               	movf	??___flge,w,c
  8888  0023C0  103D               	iorwf	??___flge+1,w,c
  8889  0023C2  103E               	iorwf	??___flge+2,w,c
  8890  0023C4  103F               	iorwf	??___flge+3,w,c
  8891  0023C6  A4D8               	btfss	status,2,c
  8892  0023C8  D009               	goto	l4907
  8893                           
  8894                           ; BSR set to: 0
  8895  0023CA  0E00               	movlw	0
  8896  0023CC  0100               	movlb	0	; () banked
  8897  0023CE  6F74               	movwf	___flge@ff2& (0+255),b
  8898  0023D0  0E00               	movlw	0
  8899  0023D2  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8900  0023D4  0E00               	movlw	0
  8901  0023D6  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8902  0023D8  0E00               	movlw	0
  8903  0023DA  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8904  0023DC                     l4907:
  8905                           
  8906                           ; BSR set to: 0
  8907  0023DC  0100               	movlb	0	; () banked
  8908  0023DE  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  8909  0023E0  D021               	goto	l4911
  8910                           
  8911                           ; BSR set to: 0
  8912  0023E2  C070  F03C         	movff	___flge@ff1,??___flge
  8913  0023E6  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  8914  0023EA  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  8915  0023EE  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  8916  0023F2  1E3C               	comf	??___flge,f,c
  8917  0023F4  1E3D               	comf	??___flge+1,f,c
  8918  0023F6  1E3E               	comf	??___flge+2,f,c
  8919  0023F8  1E3F               	comf	??___flge+3,f,c
  8920  0023FA  2A3C               	incf	??___flge,f,c
  8921  0023FC  0E00               	movlw	0
  8922  0023FE  223D               	addwfc	??___flge+1,f,c
  8923  002400  223E               	addwfc	??___flge+2,f,c
  8924  002402  223F               	addwfc	??___flge+3,f,c
  8925  002404  0E00               	movlw	0
  8926  002406  243C               	addwf	??___flge,w,c
  8927  002408  0100               	movlb	0	; () banked
  8928  00240A  6F70               	movwf	___flge@ff1& (0+255),b
  8929  00240C  0E00               	movlw	0
  8930  00240E  203D               	addwfc	??___flge+1,w,c
  8931  002410  0100               	movlb	0	; () banked
  8932  002412  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8933  002414  0E00               	movlw	0
  8934  002416  203E               	addwfc	??___flge+2,w,c
  8935  002418  0100               	movlb	0	; () banked
  8936  00241A  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8937  00241C  0E80               	movlw	128
  8938  00241E  203F               	addwfc	??___flge+3,w,c
  8939  002420  0100               	movlb	0	; () banked
  8940  002422  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8941  002424                     l4911:
  8942                           
  8943                           ; BSR set to: 0
  8944  002424  0100               	movlb	0	; () banked
  8945  002426  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  8946  002428  D021               	goto	l686
  8947                           
  8948                           ; BSR set to: 0
  8949  00242A  C074  F03C         	movff	___flge@ff2,??___flge
  8950  00242E  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  8951  002432  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  8952  002436  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  8953  00243A  1E3C               	comf	??___flge,f,c
  8954  00243C  1E3D               	comf	??___flge+1,f,c
  8955  00243E  1E3E               	comf	??___flge+2,f,c
  8956  002440  1E3F               	comf	??___flge+3,f,c
  8957  002442  2A3C               	incf	??___flge,f,c
  8958  002444  0E00               	movlw	0
  8959  002446  223D               	addwfc	??___flge+1,f,c
  8960  002448  223E               	addwfc	??___flge+2,f,c
  8961  00244A  223F               	addwfc	??___flge+3,f,c
  8962  00244C  0E00               	movlw	0
  8963  00244E  243C               	addwf	??___flge,w,c
  8964  002450  0100               	movlb	0	; () banked
  8965  002452  6F74               	movwf	___flge@ff2& (0+255),b
  8966  002454  0E00               	movlw	0
  8967  002456  203D               	addwfc	??___flge+1,w,c
  8968  002458  0100               	movlb	0	; () banked
  8969  00245A  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8970  00245C  0E00               	movlw	0
  8971  00245E  203E               	addwfc	??___flge+2,w,c
  8972  002460  0100               	movlb	0	; () banked
  8973  002462  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8974  002464  0E80               	movlw	128
  8975  002466  203F               	addwfc	??___flge+3,w,c
  8976  002468  0100               	movlb	0	; () banked
  8977  00246A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8978  00246C                     l686:
  8979                           
  8980                           ; BSR set to: 0
  8981  00246C  0E00               	movlw	0
  8982  00246E  0100               	movlb	0	; () banked
  8983  002470  1B70               	xorwf	___flge@ff1& (0+255),f,b
  8984  002472  0E00               	movlw	0
  8985  002474  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8986  002476  0E00               	movlw	0
  8987  002478  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8988  00247A  0E80               	movlw	128
  8989  00247C  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8990  00247E  0E00               	movlw	0
  8991  002480  0100               	movlb	0	; () banked
  8992  002482  1B74               	xorwf	___flge@ff2& (0+255),f,b
  8993  002484  0E00               	movlw	0
  8994  002486  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8995  002488  0E00               	movlw	0
  8996  00248A  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8997  00248C  0E80               	movlw	128
  8998  00248E  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8999  002490  0100               	movlb	0	; () banked
  9000  002492  5174               	movf	___flge@ff2& (0+255),w,b
  9001  002494  0100               	movlb	0	; () banked
  9002  002496  5D70               	subwf	___flge@ff1& (0+255),w,b
  9003  002498  0100               	movlb	0	; () banked
  9004  00249A  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  9005  00249C  0100               	movlb	0	; () banked
  9006  00249E  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9007  0024A0  0100               	movlb	0	; () banked
  9008  0024A2  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  9009  0024A4  0100               	movlb	0	; () banked
  9010  0024A6  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9011  0024A8  0100               	movlb	0	; () banked
  9012  0024AA  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  9013  0024AC  0100               	movlb	0	; () banked
  9014  0024AE  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9015  0024B0  B0D8               	btfsc	status,0,c
  9016  0024B2  D002               	goto	l4917
  9017                           
  9018                           ; BSR set to: 0
  9019  0024B4  90D8               	bcf	status,0,c
  9020  0024B6  0012               	return	
  9021  0024B8                     l4917:
  9022                           
  9023                           ; BSR set to: 0
  9024  0024B8  80D8               	bsf	status,0,c
  9025                           
  9026                           ; BSR set to: 0
  9027  0024BA  0012               	return	
  9028  0024BC                     __end_of___flge:
  9029                           	opt stack 0
  9030                           tblptru	equ	0xFF8
  9031                           tblptrh	equ	0xFF7
  9032                           tblptrl	equ	0xFF6
  9033                           tablat	equ	0xFF5
  9034                           prodh	equ	0xFF4
  9035                           prodl	equ	0xFF3
  9036                           intcon	equ	0xFF2
  9037                           postinc0	equ	0xFEE
  9038                           wreg	equ	0xFE8
  9039                           indf2	equ	0xFDF
  9040                           postinc2	equ	0xFDE
  9041                           fsr2h	equ	0xFDA
  9042                           fsr2l	equ	0xFD9
  9043                           status	equ	0xFD8
  9044                           
  9045 ;; *************** function ___lwdiv *****************
  9046 ;; Defined at:
  9047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  dividend        2   24[COMRAM] unsigned int 
  9050 ;;  divisor         2   26[COMRAM] unsigned int 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  quotient        2   28[COMRAM] unsigned int 
  9053 ;;  counter         1   30[COMRAM] unsigned char 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2   24[COMRAM] unsigned int 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2, status,0
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9063 ;;      Params:         4       0       0       0
  9064 ;;      Locals:         3       0       0       0
  9065 ;;      Temps:          0       0       0       0
  9066 ;;      Totals:         7       0       0       0
  9067 ;;Total ram usage:        7 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    4
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_LCD_Handler
  9074 ;;		_utoa
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text28
  9079  002CC0                     __ptext28:
  9080                           	opt stack 0
  9081  002CC0                     ___lwdiv:
  9082                           	opt stack 25
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;incstack = 0
  9086  002CC0  0E00               	movlw	0
  9087  002CC2  6E41               	movwf	___lwdiv@quotient+1,c
  9088  002CC4  0E00               	movlw	0
  9089  002CC6  6E40               	movwf	___lwdiv@quotient,c
  9090  002CC8  503E               	movf	___lwdiv@divisor,w,c
  9091  002CCA  103F               	iorwf	___lwdiv@divisor+1,w,c
  9092  002CCC  B4D8               	btfsc	status,2,c
  9093  002CCE  D01C               	goto	l922
  9094  002CD0  0E01               	movlw	1
  9095  002CD2  6E42               	movwf	___lwdiv@counter,c
  9096  002CD4  D004               	goto	l3847
  9097  002CD6                     l3845:
  9098  002CD6  90D8               	bcf	status,0,c
  9099  002CD8  363E               	rlcf	___lwdiv@divisor,f,c
  9100  002CDA  363F               	rlcf	___lwdiv@divisor+1,f,c
  9101  002CDC  2A42               	incf	___lwdiv@counter,f,c
  9102  002CDE                     l3847:
  9103  002CDE  AE3F               	btfss	___lwdiv@divisor+1,7,c
  9104  002CE0  D7FA               	goto	l3845
  9105  002CE2                     l3849:
  9106  002CE2  90D8               	bcf	status,0,c
  9107  002CE4  3640               	rlcf	___lwdiv@quotient,f,c
  9108  002CE6  3641               	rlcf	___lwdiv@quotient+1,f,c
  9109  002CE8  503E               	movf	___lwdiv@divisor,w,c
  9110  002CEA  5C3C               	subwf	___lwdiv@dividend,w,c
  9111  002CEC  503F               	movf	___lwdiv@divisor+1,w,c
  9112  002CEE  583D               	subwfb	___lwdiv@dividend+1,w,c
  9113  002CF0  A0D8               	btfss	status,0,c
  9114  002CF2  D005               	goto	l3857
  9115  002CF4  503E               	movf	___lwdiv@divisor,w,c
  9116  002CF6  5E3C               	subwf	___lwdiv@dividend,f,c
  9117  002CF8  503F               	movf	___lwdiv@divisor+1,w,c
  9118  002CFA  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  9119  002CFC  8040               	bsf	___lwdiv@quotient,0,c
  9120  002CFE                     l3857:
  9121  002CFE  90D8               	bcf	status,0,c
  9122  002D00  323F               	rrcf	___lwdiv@divisor+1,f,c
  9123  002D02  323E               	rrcf	___lwdiv@divisor,f,c
  9124  002D04  2E42               	decfsz	___lwdiv@counter,f,c
  9125  002D06  D7ED               	goto	l3849
  9126  002D08                     l922:
  9127  002D08  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  9128  002D0C  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9129  002D10  0012               	return		;funcret
  9130  002D12                     __end_of___lwdiv:
  9131                           	opt stack 0
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function _LCD_write_string *****************
  9148 ;; Defined at:
  9149 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  9152 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;		None               void
  9157 ;; Registers used:
  9158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9164 ;;      Params:         0       2       0       0
  9165 ;;      Locals:         0       0       0       0
  9166 ;;      Temps:          0       0       0       0
  9167 ;;      Totals:         0       2       0       0
  9168 ;;Total ram usage:        2 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; Hardware stack levels required when called:    9
  9171 ;; This function calls:
  9172 ;;		_LCD_write_char
  9173 ;; This function is called by:
  9174 ;;		_LCD_Handler
  9175 ;;		_LCD_write_integer
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text29
  9180  002F90                     __ptext29:
  9181                           	opt stack 0
  9182  002F90                     _LCD_write_string:
  9183                           	opt stack 20
  9184                           
  9185                           ;src\LCD_44780.c: 197: while(*buffer){
  9186                           
  9187                           ;incstack = 0
  9188  002F90  D00A               	goto	l5079
  9189  002F92                     l5075:
  9190                           
  9191                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9192  002F92  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9193  002F96  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9194  002F9A  50DF               	movf	indf2,w,c
  9195  002F9C  EC63  F015         	call	_LCD_write_char
  9196                           
  9197                           ;src\LCD_44780.c: 202: buffer++;
  9198  002FA0  0100               	movlb	0	; () banked
  9199  002FA2  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9200  002FA4  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9201  002FA6                     l5079:
  9202  002FA6  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9203  002FAA  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9204  002FAE  50DF               	movf	indf2,w,c
  9205  002FB0  B4D8               	btfsc	status,2,c
  9206  002FB2  0012               	return	
  9207  002FB4  D7EE               	goto	l5075
  9208  002FB6                     __end_of_LCD_write_string:
  9209                           	opt stack 0
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           prodh	equ	0xFF4
  9215                           prodl	equ	0xFF3
  9216                           intcon	equ	0xFF2
  9217                           postinc0	equ	0xFEE
  9218                           wreg	equ	0xFE8
  9219                           indf2	equ	0xFDF
  9220                           postinc2	equ	0xFDE
  9221                           fsr2h	equ	0xFDA
  9222                           fsr2l	equ	0xFD9
  9223                           status	equ	0xFD8
  9224                           
  9225 ;; *************** function _LCD_write_message *****************
  9226 ;; Defined at:
  9227 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  9230 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9231 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9232 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;		None               void
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9244 ;;      Params:         0       2       0       0
  9245 ;;      Locals:         0       0       0       0
  9246 ;;      Temps:          0       0       0       0
  9247 ;;      Totals:         0       2       0       0
  9248 ;;Total ram usage:        2 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    9
  9251 ;; This function calls:
  9252 ;;		_LCD_write_char
  9253 ;; This function is called by:
  9254 ;;		_main
  9255 ;;		_LCD_Handler
  9256 ;;		_board_initialization
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text30
  9261  002F12                     __ptext30:
  9262                           	opt stack 0
  9263  002F12                     _LCD_write_message:
  9264                           	opt stack 20
  9265                           
  9266                           ;src\LCD_44780.c: 181: while(*buffer) {
  9267                           
  9268                           ;incstack = 0
  9269  002F12  D00B               	goto	l5071
  9270  002F14                     l5067:
  9271                           
  9272                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9273  002F14  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9274  002F18  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9275  002F1C                     	if	0	;tblptru may be non-zero
  9276  002F1C                     	endif
  9277  002F1C                     	if	0	;tblptru may be non-zero
  9278  002F1C                     	endif
  9279  002F1C  0008               	tblrd		*
  9280  002F1E  50F5               	movf	tablat,w,c
  9281  002F20  EC63  F015         	call	_LCD_write_char
  9282                           
  9283                           ;src\LCD_44780.c: 186: buffer++;
  9284  002F24  0100               	movlb	0	; () banked
  9285  002F26  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9286  002F28  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9287  002F2A                     l5071:
  9288  002F2A  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9289  002F2E  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9290  002F32                     	if	0	;tblptru may be non-zero
  9291  002F32                     	endif
  9292  002F32                     	if	0	;tblptru may be non-zero
  9293  002F32                     	endif
  9294  002F32  0008               	tblrd		*
  9295  002F34  50F5               	movf	tablat,w,c
  9296  002F36  0900               	iorlw	0
  9297  002F38  B4D8               	btfsc	status,2,c
  9298  002F3A  0012               	return	
  9299  002F3C  D7EB               	goto	l5067
  9300  002F3E                     __end_of_LCD_write_message:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           postinc0	equ	0xFEE
  9310                           wreg	equ	0xFE8
  9311                           indf2	equ	0xFDF
  9312                           postinc2	equ	0xFDE
  9313                           fsr2h	equ	0xFDA
  9314                           fsr2l	equ	0xFD9
  9315                           status	equ	0xFD8
  9316                           
  9317 ;; *************** function _LCD_write_char *****************
  9318 ;; Defined at:
  9319 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  value           1    wreg     unsigned char 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  value           1   25[BANK0 ] unsigned char 
  9324 ;;  D0              1   24[BANK0 ] unsigned char 
  9325 ;;  D1              1   23[BANK0 ] unsigned char 
  9326 ;;  D2              1   22[BANK0 ] unsigned char 
  9327 ;;  D3              1   21[BANK0 ] unsigned char 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;		None               void
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9337 ;;      Params:         0       0       0       0
  9338 ;;      Locals:         0       5       0       0
  9339 ;;      Temps:          0       0       0       0
  9340 ;;      Totals:         0       5       0       0
  9341 ;;Total ram usage:        5 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    8
  9344 ;; This function calls:
  9345 ;;		_LCD_send_command
  9346 ;; This function is called by:
  9347 ;;		_LCD_write_message
  9348 ;;		_LCD_write_string
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text31
  9353  002AC6                     __ptext31:
  9354                           	opt stack 0
  9355  002AC6                     _LCD_write_char:
  9356                           	opt stack 20
  9357                           
  9358                           ;incstack = 0
  9359                           ;LCD_write_char@value stored from wreg
  9360  002AC6  0100               	movlb	0	; () banked
  9361  002AC8  6F79               	movwf	LCD_write_char@value& (0+255),b
  9362                           
  9363                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9364                           ;src\LCD_44780.c: 149: LATAbits.LATA6 = 1;
  9365  002ACA  8C89               	bsf	3977,6,c	;volatile
  9366                           
  9367                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9368  002ACC  0100               	movlb	0	; () banked
  9369  002ACE  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9370  002AD0  0B01               	andlw	1
  9371  002AD2  0100               	movlb	0	; () banked
  9372  002AD4  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9373                           
  9374                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9375  002AD6  0100               	movlb	0	; () banked
  9376  002AD8  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9377  002ADA  46E8               	rlncf	wreg,f,c
  9378  002ADC  0B03               	andlw	3
  9379  002ADE  0B01               	andlw	1
  9380  002AE0  0100               	movlb	0	; () banked
  9381  002AE2  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9382                           
  9383                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9384  002AE4  0100               	movlb	0	; () banked
  9385  002AE6  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9386  002AE8  42E8               	rrncf	wreg,f,c
  9387  002AEA  0B07               	andlw	7
  9388  002AEC  0B01               	andlw	1
  9389  002AEE  0100               	movlb	0	; () banked
  9390  002AF0  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9391                           
  9392                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9393  002AF2  0100               	movlb	0	; () banked
  9394  002AF4  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9395  002AF6  0B0F               	andlw	15
  9396  002AF8  0B01               	andlw	1
  9397  002AFA  0100               	movlb	0	; () banked
  9398  002AFC  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9402  002AFE  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9403  002B02  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9404  002B06  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9405  002B0A  0100               	movlb	0	; () banked
  9406  002B0C  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9407  002B0E  ECF4  F016         	call	_LCD_send_command
  9408                           
  9409                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9410  002B12  0100               	movlb	0	; () banked
  9411  002B14  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9412  002B16  46E8               	rlncf	wreg,f,c
  9413  002B18  0B1F               	andlw	31
  9414  002B1A  0B01               	andlw	1
  9415  002B1C  0100               	movlb	0	; () banked
  9416  002B1E  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9420  002B20  0100               	movlb	0	; () banked
  9421  002B22  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9422  002B24  42E8               	rrncf	wreg,f,c
  9423  002B26  0B3F               	andlw	63
  9424  002B28  0B01               	andlw	1
  9425  002B2A  0100               	movlb	0	; () banked
  9426  002B2C  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9430  002B2E  0100               	movlb	0	; () banked
  9431  002B30  90D8               	bcf	status,0,c
  9432  002B32  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9433  002B34  0B01               	andlw	1
  9434  002B36  0100               	movlb	0	; () banked
  9435  002B38  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9439  002B3A  0100               	movlb	0	; () banked
  9440  002B3C  5179               	movf	LCD_write_char@value& (0+255),w,b
  9441  002B3E  0B01               	andlw	1
  9442  002B40  0100               	movlb	0	; () banked
  9443  002B42  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9447  002B44  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9448  002B48  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9449  002B4C  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9450  002B50  0100               	movlb	0	; () banked
  9451  002B52  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9452  002B54  ECF4  F016         	call	_LCD_send_command
  9453                           
  9454                           ;src\LCD_44780.c: 167: LATAbits.LATA6 = 0;
  9455  002B58  9C89               	bcf	3977,6,c	;volatile
  9456  002B5A  0012               	return		;funcret
  9457  002B5C                     __end_of_LCD_write_char:
  9458                           	opt stack 0
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           intcon	equ	0xFF2
  9466                           postinc0	equ	0xFEE
  9467                           wreg	equ	0xFE8
  9468                           indf2	equ	0xFDF
  9469                           postinc2	equ	0xFDE
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474 ;; *************** function _LCD_goto_line *****************
  9475 ;; Defined at:
  9476 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  line            1    wreg     unsigned char 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  line            1   21[BANK0 ] unsigned char 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;		None               void
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9490 ;;      Params:         0       0       0       0
  9491 ;;      Locals:         0       1       0       0
  9492 ;;      Temps:          0       0       0       0
  9493 ;;      Totals:         0       1       0       0
  9494 ;;Total ram usage:        1 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:    8
  9497 ;; This function calls:
  9498 ;;		_LCD_send_command
  9499 ;; This function is called by:
  9500 ;;		_main
  9501 ;;		_LCD_Handler
  9502 ;;		_board_initialization
  9503 ;;		_LCD_goto_xy
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text32
  9508  0026DE                     __ptext32:
  9509                           	opt stack 0
  9510  0026DE                     _LCD_goto_line:
  9511                           	opt stack 21
  9512                           
  9513                           ;incstack = 0
  9514                           ;LCD_goto_line@line stored from wreg
  9515  0026DE  0100               	movlb	0	; () banked
  9516  0026E0  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9517                           
  9518                           ;src\LCD_44780.c: 113: switch(line) {
  9519  0026E2  D064               	goto	l5063
  9520  0026E4                     l5055:
  9521  0026E4  0E00               	movlw	0
  9522  0026E6  0100               	movlb	0	; () banked
  9523  0026E8  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9524  0026EA  0E00               	movlw	0
  9525  0026EC  0100               	movlb	0	; () banked
  9526  0026EE  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9527  0026F0  0E00               	movlw	0
  9528  0026F2  0100               	movlb	0	; () banked
  9529  0026F4  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9530  0026F6  0E01               	movlw	1
  9531  0026F8  ECF4  F016         	call	_LCD_send_command
  9532                           
  9533                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9534  0026FC  0E00               	movlw	0
  9535  0026FE  0100               	movlb	0	; () banked
  9536  002700  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9537  002702  0E00               	movlw	0
  9538  002704  0100               	movlb	0	; () banked
  9539  002706  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9540  002708  0E00               	movlw	0
  9541  00270A  0100               	movlb	0	; () banked
  9542  00270C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9543  00270E  0E00               	movlw	0
  9544  002710  ECF4  F016         	call	_LCD_send_command
  9545                           
  9546                           ;src\LCD_44780.c: 117: break;
  9547  002714  0012               	return	
  9548  002716                     l5057:
  9549  002716  0E01               	movlw	1
  9550  002718  0100               	movlb	0	; () banked
  9551  00271A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9552  00271C  0E00               	movlw	0
  9553  00271E  0100               	movlb	0	; () banked
  9554  002720  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9555  002722  0E00               	movlw	0
  9556  002724  0100               	movlb	0	; () banked
  9557  002726  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9558  002728  0E01               	movlw	1
  9559  00272A  ECF4  F016         	call	_LCD_send_command
  9560                           
  9561                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9562  00272E  0E00               	movlw	0
  9563  002730  0100               	movlb	0	; () banked
  9564  002732  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9565  002734  0E00               	movlw	0
  9566  002736  0100               	movlb	0	; () banked
  9567  002738  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9568  00273A  0E00               	movlw	0
  9569  00273C  0100               	movlb	0	; () banked
  9570  00273E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9571  002740  0E00               	movlw	0
  9572  002742  ECF4  F016         	call	_LCD_send_command
  9573                           
  9574                           ;src\LCD_44780.c: 121: break;
  9575  002746  0012               	return	
  9576  002748                     l5059:
  9577  002748  0E00               	movlw	0
  9578  00274A  0100               	movlb	0	; () banked
  9579  00274C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9580  00274E  0E00               	movlw	0
  9581  002750  0100               	movlb	0	; () banked
  9582  002752  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9583  002754  0E01               	movlw	1
  9584  002756  0100               	movlb	0	; () banked
  9585  002758  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9586  00275A  0E01               	movlw	1
  9587  00275C  ECF4  F016         	call	_LCD_send_command
  9588                           
  9589                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9590  002760  0E01               	movlw	1
  9591  002762  0100               	movlb	0	; () banked
  9592  002764  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9593  002766  0E00               	movlw	0
  9594  002768  0100               	movlb	0	; () banked
  9595  00276A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9596  00276C  0E00               	movlw	0
  9597  00276E  0100               	movlb	0	; () banked
  9598  002770  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9599  002772  0E00               	movlw	0
  9600  002774  ECF4  F016         	call	_LCD_send_command
  9601                           
  9602                           ;src\LCD_44780.c: 125: break;
  9603  002778  0012               	return	
  9604  00277A                     l5061:
  9605  00277A  0E01               	movlw	1
  9606  00277C  0100               	movlb	0	; () banked
  9607  00277E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9608  002780  0E00               	movlw	0
  9609  002782  0100               	movlb	0	; () banked
  9610  002784  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9611  002786  0E01               	movlw	1
  9612  002788  0100               	movlb	0	; () banked
  9613  00278A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9614  00278C  0E01               	movlw	1
  9615  00278E  ECF4  F016         	call	_LCD_send_command
  9616                           
  9617                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9618  002792  0E01               	movlw	1
  9619  002794  0100               	movlb	0	; () banked
  9620  002796  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9621  002798  0E00               	movlw	0
  9622  00279A  0100               	movlb	0	; () banked
  9623  00279C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9624  00279E  0E00               	movlw	0
  9625  0027A0  0100               	movlb	0	; () banked
  9626  0027A2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9627  0027A4  0E00               	movlw	0
  9628  0027A6  ECF4  F016         	call	_LCD_send_command
  9629                           
  9630                           ;src\LCD_44780.c: 129: }
  9631  0027AA  0012               	return	
  9632  0027AC                     l5063:
  9633  0027AC  0100               	movlb	0	; () banked
  9634  0027AE  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9635                           
  9636                           ; Switch size 1, requested type "space"
  9637                           ; Number of cases is 4, Range of values is 1 to 4
  9638                           ; switch strategies available:
  9639                           ; Name         Instructions Cycles
  9640                           ; simple_byte           13     7 (average)
  9641                           ;	Chosen strategy is simple_byte
  9642  0027B0  0A01               	xorlw	1	; case 1
  9643  0027B2  B4D8               	btfsc	status,2,c
  9644  0027B4  D797               	goto	l5055
  9645  0027B6  0A03               	xorlw	3	; case 2
  9646  0027B8  B4D8               	btfsc	status,2,c
  9647  0027BA  D7AD               	goto	l5057
  9648  0027BC  0A01               	xorlw	1	; case 3
  9649  0027BE  B4D8               	btfsc	status,2,c
  9650  0027C0  D7C3               	goto	l5059
  9651  0027C2  0A07               	xorlw	7	; case 4
  9652  0027C4  A4D8               	btfss	status,2,c
  9653  0027C6  0012               	return	
  9654  0027C8  D7D8               	goto	l5061
  9655  0027CA                     __end_of_LCD_goto_line:
  9656                           	opt stack 0
  9657                           tblptru	equ	0xFF8
  9658                           tblptrh	equ	0xFF7
  9659                           tblptrl	equ	0xFF6
  9660                           tablat	equ	0xFF5
  9661                           prodh	equ	0xFF4
  9662                           prodl	equ	0xFF3
  9663                           intcon	equ	0xFF2
  9664                           postinc0	equ	0xFEE
  9665                           wreg	equ	0xFE8
  9666                           indf2	equ	0xFDF
  9667                           postinc2	equ	0xFDE
  9668                           fsr2h	equ	0xFDA
  9669                           fsr2l	equ	0xFD9
  9670                           status	equ	0xFD8
  9671                           
  9672 ;; *************** function _LCD_clear *****************
  9673 ;; Defined at:
  9674 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;		None
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;		None               void
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9688 ;;      Params:         0       0       0       0
  9689 ;;      Locals:         0       0       0       0
  9690 ;;      Temps:          0       0       0       0
  9691 ;;      Totals:         0       0       0       0
  9692 ;;Total ram usage:        0 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    8
  9695 ;; This function calls:
  9696 ;;		_LCD_send_command
  9697 ;; This function is called by:
  9698 ;;		_LCD_initialize
  9699 ;;		_main
  9700 ;;		_LCD_Handler
  9701 ;;		_board_initialization
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text33
  9706  002E50                     __ptext33:
  9707                           	opt stack 0
  9708  002E50                     _LCD_clear:
  9709                           	opt stack 20
  9710                           
  9711                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9712                           
  9713                           ;incstack = 0
  9714  002E50  0E00               	movlw	0
  9715  002E52  0100               	movlb	0	; () banked
  9716  002E54  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9717  002E56  0E00               	movlw	0
  9718  002E58  0100               	movlb	0	; () banked
  9719  002E5A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9720  002E5C  0E00               	movlw	0
  9721  002E5E  0100               	movlb	0	; () banked
  9722  002E60  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9723  002E62  0E00               	movlw	0
  9724  002E64  ECF4  F016         	call	_LCD_send_command
  9725                           
  9726                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9727  002E68  0E00               	movlw	0
  9728  002E6A  0100               	movlb	0	; () banked
  9729  002E6C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9730  002E6E  0E00               	movlw	0
  9731  002E70  0100               	movlb	0	; () banked
  9732  002E72  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9733  002E74  0E01               	movlw	1
  9734  002E76  0100               	movlb	0	; () banked
  9735  002E78  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9736  002E7A  0E00               	movlw	0
  9737  002E7C  ECF4  F016         	call	_LCD_send_command
  9738  002E80  0012               	return		;funcret
  9739  002E82                     __end_of_LCD_clear:
  9740                           	opt stack 0
  9741                           tblptru	equ	0xFF8
  9742                           tblptrh	equ	0xFF7
  9743                           tblptrl	equ	0xFF6
  9744                           tablat	equ	0xFF5
  9745                           prodh	equ	0xFF4
  9746                           prodl	equ	0xFF3
  9747                           intcon	equ	0xFF2
  9748                           postinc0	equ	0xFEE
  9749                           wreg	equ	0xFE8
  9750                           indf2	equ	0xFDF
  9751                           postinc2	equ	0xFDE
  9752                           fsr2h	equ	0xFDA
  9753                           fsr2l	equ	0xFD9
  9754                           status	equ	0xFD8
  9755                           
  9756 ;; *************** function _LCD_send_command *****************
  9757 ;; Defined at:
  9758 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  D3              1    wreg     unsigned char 
  9761 ;;  D2              1   18[BANK0 ] unsigned char 
  9762 ;;  D1              1   19[BANK0 ] unsigned char 
  9763 ;;  D0              1   20[BANK0 ] unsigned char 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  D3              1   30[COMRAM] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;		None               void
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9775 ;;      Params:         0       3       0       0
  9776 ;;      Locals:         1       0       0       0
  9777 ;;      Temps:          0       0       0       0
  9778 ;;      Totals:         1       3       0       0
  9779 ;;Total ram usage:        4 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    7
  9782 ;; This function calls:
  9783 ;;		_LCD_enable_pulse
  9784 ;; This function is called by:
  9785 ;;		_LCD_goto_line
  9786 ;;		_LCD_write_char
  9787 ;;		_LCD_clear
  9788 ;;		_LCD_cursor
  9789 ;;		_LCD_initialize
  9790 ;;		_LCD_home
  9791 ;;		_LCD_shift
  9792 ;;		_LCD_shift_cursor
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text34
  9797  002DE8                     __ptext34:
  9798                           	opt stack 0
  9799  002DE8                     _LCD_send_command:
  9800                           	opt stack 20
  9801                           
  9802                           ;incstack = 0
  9803                           ;LCD_send_command@D3 stored from wreg
  9804  002DE8  6E42               	movwf	LCD_send_command@D3,c
  9805                           
  9806                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
  9807  002DEA  0100               	movlb	0	; () banked
  9808  002DEC  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
  9809  002DEE  D002               	bra	u4605
  9810  002DF0  948B               	bcf	3979,2,c	;volatile
  9811  002DF2  D001               	bra	u4606
  9812  002DF4                     u4605:
  9813  002DF4  848B               	bsf	3979,2,c	;volatile
  9814  002DF6                     u4606:
  9815                           
  9816                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
  9817  002DF6  0100               	movlb	0	; () banked
  9818  002DF8  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
  9819  002DFA  D002               	bra	u4615
  9820  002DFC  968B               	bcf	3979,3,c	;volatile
  9821  002DFE  D001               	bra	u4616
  9822  002E00                     u4615:
  9823  002E00  868B               	bsf	3979,3,c	;volatile
  9824  002E02                     u4616:
  9825                           
  9826                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
  9827  002E02  0100               	movlb	0	; () banked
  9828  002E04  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
  9829  002E06  D002               	bra	u4625
  9830  002E08  908C               	bcf	3980,0,c	;volatile
  9831  002E0A  D001               	bra	u4626
  9832  002E0C                     u4625:
  9833  002E0C  808C               	bsf	3980,0,c	;volatile
  9834  002E0E                     u4626:
  9835                           
  9836                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
  9837  002E0E  B042               	btfsc	LCD_send_command@D3,0,c
  9838  002E10  D002               	bra	u4635
  9839  002E12  928C               	bcf	3980,1,c	;volatile
  9840  002E14  D001               	bra	u4636
  9841  002E16                     u4635:
  9842  002E16  828C               	bsf	3980,1,c	;volatile
  9843  002E18                     u4636:
  9844                           
  9845                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  9846  002E18  ECEE  F017         	call	_LCD_enable_pulse	;wreg free
  9847  002E1C  0012               	return		;funcret
  9848  002E1E                     __end_of_LCD_send_command:
  9849                           	opt stack 0
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           wreg	equ	0xFE8
  9859                           indf2	equ	0xFDF
  9860                           postinc2	equ	0xFDE
  9861                           fsr2h	equ	0xFDA
  9862                           fsr2l	equ	0xFD9
  9863                           status	equ	0xFD8
  9864                           
  9865 ;; *************** function _LCD_enable_pulse *****************
  9866 ;; Defined at:
  9867 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;		None               void
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9881 ;;      Params:         0       0       0       0
  9882 ;;      Locals:         0       0       0       0
  9883 ;;      Temps:          0       0       0       0
  9884 ;;      Totals:         0       0       0       0
  9885 ;;Total ram usage:        0 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    6
  9888 ;; This function calls:
  9889 ;;		_delay_ms
  9890 ;; This function is called by:
  9891 ;;		_LCD_send_command
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text35
  9896  002FDC                     __ptext35:
  9897                           	opt stack 0
  9898  002FDC                     _LCD_enable_pulse:
  9899                           	opt stack 20
  9900                           
  9901                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
  9902                           
  9903                           ;incstack = 0
  9904  002FDC  828B               	bsf	3979,1,c	;volatile
  9905                           
  9906                           ;src\LCD_44780.c: 52: delay_ms (1);
  9907  002FDE  0E00               	movlw	0
  9908  002FE0  0100               	movlb	0	; () banked
  9909  002FE2  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  9910  002FE4  0E01               	movlw	1
  9911  002FE6  6F70               	movwf	delay_ms@value_ms& (0+255),b
  9912  002FE8  EC41  F017         	call	_delay_ms	;wreg free
  9913                           
  9914                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
  9915  002FEC  928B               	bcf	3979,1,c	;volatile
  9916                           
  9917                           ;src\LCD_44780.c: 54: delay_ms (1);
  9918  002FEE  0E00               	movlw	0
  9919  002FF0  0100               	movlb	0	; () banked
  9920  002FF2  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  9921  002FF4  0E01               	movlw	1
  9922  002FF6  6F70               	movwf	delay_ms@value_ms& (0+255),b
  9923  002FF8  EC41  F017         	call	_delay_ms	;wreg free
  9924  002FFC  0012               	return		;funcret
  9925  002FFE                     __end_of_LCD_enable_pulse:
  9926                           	opt stack 0
  9927                           tblptru	equ	0xFF8
  9928                           tblptrh	equ	0xFF7
  9929                           tblptrl	equ	0xFF6
  9930                           tablat	equ	0xFF5
  9931                           prodh	equ	0xFF4
  9932                           prodl	equ	0xFF3
  9933                           intcon	equ	0xFF2
  9934                           postinc0	equ	0xFEE
  9935                           wreg	equ	0xFE8
  9936                           indf2	equ	0xFDF
  9937                           postinc2	equ	0xFDE
  9938                           fsr2h	equ	0xFDA
  9939                           fsr2l	equ	0xFD9
  9940                           status	equ	0xFD8
  9941                           
  9942 ;; *************** function _delay_ms *****************
  9943 ;; Defined at:
  9944 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  value_ms        2   16[BANK0 ] unsigned int 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;		None               void
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9958 ;;      Params:         0       2       0       0
  9959 ;;      Locals:         0       0       0       0
  9960 ;;      Temps:          0       0       0       0
  9961 ;;      Totals:         0       2       0       0
  9962 ;;Total ram usage:        2 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    5
  9965 ;; This function calls:
  9966 ;;		___wmul
  9967 ;; This function is called by:
  9968 ;;		_LCD_enable_pulse
  9969 ;;		_LCD_initialize
  9970 ;;		_main
  9971 ;;		_board_initialization
  9972 ;;		_delay_s
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text36
  9977  002E82                     __ptext36:
  9978                           	opt stack 0
  9979  002E82                     _delay_ms:
  9980                           	opt stack 25
  9981                           
  9982                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  9983                           
  9984                           ;incstack = 0
  9985  002E82  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  9986  002E86  6A3D               	clrf	___wmul@multiplier+1,c
  9987  002E88  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
  9988  002E8C  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  9989  002E90  ECDB  F017         	call	___wmul	;wreg free
  9990  002E94  C03C  F044         	movff	?___wmul,_clock_counter_reference	;volatile
  9991  002E98  C03D  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  9992                           
  9993                           ;src\delay.c: 75: while (clock_counter_reference) {
  9994  002E9C  D006               	goto	l97
  9995  002E9E                     l4255:
  9996                           
  9997                           ;src\delay.c: 85: _delay(240);
  9998  002E9E  0E50               	movlw	80
  9999  002EA0                     u6567:
 10000  002EA0  2EE8               	decfsz	wreg,f,c
 10001  002EA2  D7FE               	goto	u6567
 10002                           
 10003                           ;src\delay.c: 88: clock_counter_reference--;
 10004  002EA4  0644               	decf	_clock_counter_reference,f,c	;volatile
 10005  002EA6  A0D8               	btfss	status,0,c
 10006  002EA8  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10007  002EAA                     l97:
 10008  002EAA  5044               	movf	_clock_counter_reference,w,c	;volatile
 10009  002EAC  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10010  002EAE  B4D8               	btfsc	status,2,c
 10011  002EB0  0012               	return	
 10012  002EB2  D7F5               	goto	l4255
 10013  002EB4                     __end_of_delay_ms:
 10014                           	opt stack 0
 10015                           tblptru	equ	0xFF8
 10016                           tblptrh	equ	0xFF7
 10017                           tblptrl	equ	0xFF6
 10018                           tablat	equ	0xFF5
 10019                           prodh	equ	0xFF4
 10020                           prodl	equ	0xFF3
 10021                           intcon	equ	0xFF2
 10022                           postinc0	equ	0xFEE
 10023                           wreg	equ	0xFE8
 10024                           indf2	equ	0xFDF
 10025                           postinc2	equ	0xFDE
 10026                           fsr2h	equ	0xFDA
 10027                           fsr2l	equ	0xFD9
 10028                           status	equ	0xFD8
 10029                           
 10030 ;; *************** function ___wmul *****************
 10031 ;; Defined at:
 10032 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  multiplier      2   24[COMRAM] unsigned int 
 10035 ;;  multiplicand    2   26[COMRAM] unsigned int 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  product         2   28[COMRAM] unsigned int 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  2   24[COMRAM] unsigned int 
 10040 ;; Registers used:
 10041 ;;		wreg, status,2, status,0, prodl, prodh
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10047 ;;      Params:         4       0       0       0
 10048 ;;      Locals:         2       0       0       0
 10049 ;;      Temps:          0       0       0       0
 10050 ;;      Totals:         6       0       0       0
 10051 ;;Total ram usage:        6 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    4
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_delay_ms
 10058 ;;		_sprintf
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text37
 10063  002FB6                     __ptext37:
 10064                           	opt stack 0
 10065  002FB6                     ___wmul:
 10066                           	opt stack 25
 10067                           
 10068                           ;incstack = 0
 10069  002FB6  503C               	movf	___wmul@multiplier,w,c
 10070  002FB8  023E               	mulwf	___wmul@multiplicand,c
 10071  002FBA  CFF3 F040          	movff	prodl,___wmul@product
 10072  002FBE  CFF4 F041          	movff	prodh,___wmul@product+1
 10073  002FC2  503C               	movf	___wmul@multiplier,w,c
 10074  002FC4  023F               	mulwf	___wmul@multiplicand+1,c
 10075  002FC6  50F3               	movf	prodl,w,c
 10076  002FC8  2641               	addwf	___wmul@product+1,f,c
 10077  002FCA  503D               	movf	___wmul@multiplier+1,w,c
 10078  002FCC  023E               	mulwf	___wmul@multiplicand,c
 10079  002FCE  50F3               	movf	prodl,w,c
 10080  002FD0  2641               	addwf	___wmul@product+1,f,c
 10081  002FD2  C040  F03C         	movff	___wmul@product,?___wmul
 10082  002FD6  C041  F03D         	movff	___wmul@product+1,?___wmul+1
 10083  002FDA  0012               	return	
 10084  002FDC                     __end_of___wmul:
 10085                           	opt stack 0
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           postinc0	equ	0xFEE
 10094                           wreg	equ	0xFE8
 10095                           indf2	equ	0xFDF
 10096                           postinc2	equ	0xFDE
 10097                           fsr2h	equ	0xFDA
 10098                           fsr2l	equ	0xFD9
 10099                           status	equ	0xFD8
 10100                           
 10101 ;; *************** function _Joystick_Polling *****************
 10102 ;; Defined at:
 10103 ;;		line 213 in file "telecomando.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;		None
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;		None
 10108 ;; Return value:  Size  Location     Type
 10109 ;;		None               void
 10110 ;; Registers used:
 10111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10117 ;;      Params:         0       0       0       0
 10118 ;;      Locals:         0       0       0       0
 10119 ;;      Temps:          1       0       0       0
 10120 ;;      Totals:         1       0       0       0
 10121 ;;Total ram usage:        1 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    4
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_main
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text38
 10132  002D5A                     __ptext38:
 10133                           	opt stack 0
 10134  002D5A                     _Joystick_Polling:
 10135                           	opt stack 26
 10136                           
 10137                           ;telecomando.c: 214: for (i = 0; i < 2; i++) {
 10138                           
 10139                           ;incstack = 0
 10140  002D5A  0E00               	movlw	0
 10141  002D5C  6E15               	movwf	_i,c	;volatile
 10142  002D5E                     l3975:
 10143  002D5E  0E01               	movlw	1
 10144  002D60  6415               	cpfsgt	_i,c	;volatile
 10145  002D62  D001               	goto	l273
 10146  002D64  0012               	return	
 10147  002D66                     l273:
 10148                           
 10149                           ;telecomando.c: 215: ADCON0bits.GO = 1;
 10150  002D66  82C2               	bsf	4034,1,c	;volatile
 10151  002D68                     l275:
 10152  002D68  B2C2               	btfsc	4034,1,c	;volatile
 10153  002D6A  D7FE               	goto	l275
 10154                           
 10155                           ;telecomando.c: 217: JoystickValues[i] = ADRESH - 128;
 10156  002D6C  5015               	movf	_i,w,c	;volatile
 10157  002D6E  0D01               	mullw	1
 10158  002D70  0E22               	movlw	low _JoystickValues
 10159  002D72  24F3               	addwf	prodl,w,c
 10160  002D74  6ED9               	movwf	fsr2l,c
 10161  002D76  0E00               	movlw	high _JoystickValues
 10162  002D78  20F4               	addwfc	prodh,w,c
 10163  002D7A  6EDA               	movwf	fsr2h,c
 10164  002D7C  50C4               	movf	4036,w,c	;volatile
 10165  002D7E  0F80               	addlw	128
 10166  002D80  6EDF               	movwf	indf2,c
 10167                           
 10168                           ;telecomando.c: 218: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10169  002D82  A4C2               	btfss	4034,2,c	;volatile
 10170  002D84  D002               	goto	u4170
 10171  002D86  0E01               	movlw	1
 10172  002D88  D001               	goto	u4176
 10173  002D8A                     u4170:
 10174  002D8A  0E00               	movlw	0
 10175  002D8C                     u4176:
 10176  002D8C  0AFF               	xorlw	255
 10177  002D8E  6E3C               	movwf	??_Joystick_Polling& (0+255),c
 10178  002D90  463C               	rlncf	??_Joystick_Polling,f,c
 10179  002D92  463C               	rlncf	??_Joystick_Polling,f,c
 10180  002D94  50C2               	movf	4034,w,c	;volatile
 10181  002D96  183C               	xorwf	??_Joystick_Polling,w,c
 10182  002D98  0BFB               	andlw	-5
 10183  002D9A  183C               	xorwf	??_Joystick_Polling,w,c
 10184  002D9C  6EC2               	movwf	4034,c	;volatile
 10185  002D9E  2A15               	incf	_i,f,c	;volatile
 10186  002DA0  D7DE               	goto	l3975
 10187  002DA2                     __end_of_Joystick_Polling:
 10188                           	opt stack 0
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           intcon	equ	0xFF2
 10196                           postinc0	equ	0xFEE
 10197                           wreg	equ	0xFE8
 10198                           indf2	equ	0xFDF
 10199                           postinc2	equ	0xFDE
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function _ISR_bassa *****************
 10205 ;; Defined at:
 10206 ;;		line 109 in file "telecomando.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;		None               void
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10220 ;;      Params:         0       0       0       0
 10221 ;;      Locals:         0       0       0       0
 10222 ;;      Temps:         17       0       0       0
 10223 ;;      Totals:        17       0       0       0
 10224 ;;Total ram usage:       17 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    3
 10227 ;; This function calls:
 10228 ;;		Nothing
 10229 ;; This function is called by:
 10230 ;;		Interrupt level 1
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	intcodelo
 10235  000018                     __pintcodelo:
 10236                           	opt stack 0
 10237  000018                     _ISR_bassa:
 10238                           	opt stack 20
 10239                           
 10240                           ;incstack = 0
 10241  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10242  00001A  CFD8 F024          	movff	status,??_ISR_bassa
 10243  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
 10244  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
 10245  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
 10246  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
 10247  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
 10248  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
 10249  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
 10250  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
 10251  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
 10252  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
 10253  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
 10254  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
 10255  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
 10256  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
 10257  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
 10258  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
 10259                           
 10260                           ;telecomando.c: 110: if (PIR2bits.TMR3IF) {
 10261  00005E  A2A1               	btfss	4001,1,c	;volatile
 10262  000060  D00B               	goto	i1l245
 10263                           
 10264                           ;telecomando.c: 111: time_counter++;
 10265  000062  0E01               	movlw	1
 10266  000064  2609               	addwf	_time_counter,f,c	;volatile
 10267  000066  0E00               	movlw	0
 10268  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10269  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10270  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10271                           
 10272                           ;telecomando.c: 112: TMR3H = 0x63;
 10273  00006E  0E63               	movlw	99
 10274  000070  6EB3               	movwf	4019,c	;volatile
 10275                           
 10276                           ;telecomando.c: 113: TMR3L = 0xC0;
 10277  000072  0EC0               	movlw	192
 10278  000074  6EB2               	movwf	4018,c	;volatile
 10279                           
 10280                           ;telecomando.c: 114: PIR2bits.TMR3IF = 0;
 10281  000076  92A1               	bcf	4001,1,c	;volatile
 10282  000078                     i1l245:
 10283  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10284  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10285  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10286  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10287  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10288  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10289  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10290  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10291  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10292  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10293  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10294  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10295  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10296  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10297  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10298  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10299  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10300  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10301  0000BE  0010               	retfie	
 10302  0000C0                     __end_of_ISR_bassa:
 10303                           	opt stack 0
 10304                           pclatu	equ	0xFFB
 10305                           pclath	equ	0xFFA
 10306                           tblptru	equ	0xFF8
 10307                           tblptrh	equ	0xFF7
 10308                           tblptrl	equ	0xFF6
 10309                           tablat	equ	0xFF5
 10310                           prodh	equ	0xFF4
 10311                           prodl	equ	0xFF3
 10312                           intcon	equ	0xFF2
 10313                           postinc0	equ	0xFEE
 10314                           fsr0h	equ	0xFEA
 10315                           fsr0l	equ	0xFE9
 10316                           wreg	equ	0xFE8
 10317                           fsr1h	equ	0xFE2
 10318                           fsr1l	equ	0xFE1
 10319                           bsr	equ	0xFE0
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           fsr2h	equ	0xFDA
 10323                           fsr2l	equ	0xFD9
 10324                           status	equ	0xFD8
 10325                           
 10326 ;; *************** function _ISR_alta *****************
 10327 ;; Defined at:
 10328 ;;		line 94 in file "telecomando.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;		None               void
 10335 ;; Registers used:
 10336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10342 ;;      Params:         0       0       0       0
 10343 ;;      Locals:         1       0       0       0
 10344 ;;      Temps:          0      16       0       0
 10345 ;;      Totals:         1      16       0       0
 10346 ;;Total ram usage:       17 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    2
 10349 ;; This function calls:
 10350 ;;		_getsUSART
 10351 ;; This function is called by:
 10352 ;;		Interrupt level 2
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	intcode
 10357  000008                     __pintcode:
 10358                           	opt stack 0
 10359  000008                     _ISR_alta:
 10360                           	opt stack 20
 10361                           
 10362                           ;incstack = 0
 10363  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10364  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10365  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10366  000012  EDE5  F013         	call	int_func,f	;refresh shadow registers
 10367                           pclatu	equ	0xFFB
 10368                           pclath	equ	0xFFA
 10369                           tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           intcon	equ	0xFF2
 10376                           postinc0	equ	0xFEE
 10377                           fsr0h	equ	0xFEA
 10378                           fsr0l	equ	0xFE9
 10379                           wreg	equ	0xFE8
 10380                           fsr1h	equ	0xFE2
 10381                           fsr1l	equ	0xFE1
 10382                           bsr	equ	0xFE0
 10383                           indf2	equ	0xFDF
 10384                           postinc2	equ	0xFDE
 10385                           fsr2h	equ	0xFDA
 10386                           fsr2l	equ	0xFD9
 10387                           status	equ	0xFD8
 10388                           
 10389                           	psect	intcode_body
 10390  0027CA                     __pintcode_body:
 10391                           	opt stack 20
 10392  0027CA                     int_func:
 10393                           	opt stack 20
 10394  0027CA  0006               	pop		; remove dummy address from shadow register refresh
 10395  0027CC  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10396  0027D0  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10397  0027D4  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10398  0027D8  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10399  0027DC  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10400  0027E0  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10401  0027E4  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10402  0027E8  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10403  0027EC  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10404  0027F0  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10405  0027F4  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10406  0027F8  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10407                           
 10408                           ;telecomando.c: 95: if (PIR1bits.RCIF == 1) {
 10409  0027FC  AA9E               	btfss	3998,5,c	;volatile
 10410  0027FE  D036               	goto	i2l241
 10411                           
 10412                           ;telecomando.c: 96: getsUSART((char*) USART_Rx, 7);
 10413  002800  0EE2               	movlw	low _USART_Rx
 10414  002802  6E36               	movwf	getsUSART@buffer,c
 10415  002804  0E00               	movlw	high _USART_Rx
 10416  002806  6E37               	movwf	getsUSART@buffer+1,c
 10417  002808  0E07               	movlw	7
 10418  00280A  6E38               	movwf	getsUSART@len,c
 10419  00280C  EC9F  F017         	call	_getsUSART	;wreg free
 10420                           
 10421                           ;telecomando.c: 97: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10422  002810  0EAA               	movlw	170
 10423  002812  0100               	movlb	0	; () banked
 10424  002814  19E2               	xorwf	_USART_Rx& (0+255),w,b
 10425  002816  A4D8               	btfss	status,2,c
 10426  002818  D028               	goto	i2l5523
 10427                           
 10428                           ; BSR set to: 0
 10429  00281A  0EAA               	movlw	170
 10430  00281C  0100               	movlb	0	; () banked
 10431  00281E  19E8               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10432  002820  A4D8               	btfss	status,2,c
 10433  002822  D023               	goto	i2l5523
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;telecomando.c: 98: actual_dir = USART_Rx[1];
 10437  002824  0100               	movlb	0	; () banked
 10438  002826  A1E3               	btfss	(_USART_Rx+1)& (0+255),0,b
 10439  002828  D002               	goto	i2u637_40
 10440  00282A  8043               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10441  00282C  D001               	goto	i2u638_45
 10442  00282E                     i2u637_40:
 10443  00282E  9043               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10444  002830                     i2u638_45:
 10445                           
 10446                           ;telecomando.c: 99: actual_speed_pk1 = USART_Rx[2];
 10447  002830  C0E4  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10448                           
 10449                           ;telecomando.c: 100: actual_speed_pk0 = USART_Rx[3];
 10450  002834  C0E5  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10451                           
 10452                           ;telecomando.c: 101: ECU_Check = USART_Rx[4];
 10453  002838  C0E6  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10454                           
 10455                           ;telecomando.c: 102: Battery_Check = USART_Rx[5];
 10456  00283C  C0E7  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10457                           
 10458                           ;telecomando.c: 103: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10459  002840  0E01               	movlw	1
 10460  002842  6E3B               	movwf	_ISR_alta$1278,c
 10461  002844  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10462  002846  0100               	movlb	0	; () banked
 10463  002848  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10464  00284A  6B60               	clrf	??_ISR_alta& (0+255),b
 10465  00284C  0100               	movlb	0	; () banked
 10466  00284E  5160               	movf	??_ISR_alta& (0+255),w,b
 10467  002850  0100               	movlb	0	; () banked
 10468  002852  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10469  002854  A4D8               	btfss	status,2,c
 10470  002856  D005               	goto	i2l5521
 10471                           
 10472                           ; BSR set to: 0
 10473  002858  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10474  00285A  A4D8               	btfss	status,2,c
 10475  00285C  D002               	goto	i2l5521
 10476                           
 10477                           ; BSR set to: 0
 10478  00285E  0E00               	movlw	0
 10479  002860  6E3B               	movwf	_ISR_alta$1278,c
 10480  002862                     i2l5521:
 10481                           
 10482                           ; BSR set to: 0
 10483  002862  C03B  F0E0         	movff	_ISR_alta$1278,_actual_speed	;volatile
 10484  002866  0100               	movlb	0	; () banked
 10485  002868  6BE1               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10486  00286A                     i2l5523:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;telecomando.c: 104: }
 10490                           ;telecomando.c: 105: PIR1bits.RCIF = 0;
 10491  00286A  9A9E               	bcf	3998,5,c	;volatile
 10492  00286C                     i2l241:
 10493  00286C  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10494  002870  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10495  002874  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10496  002878  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10497  00287C  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10498  002880  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10499  002884  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10500  002888  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10501  00288C  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10502  002890  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10503  002894  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10504  002898  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10505  00289C  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10506  0028A0  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10507  0028A4  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10508  0028A6  0011               	retfie		f
 10509  0028A8                     __end_of_ISR_alta:
 10510                           	opt stack 0
 10511                           pclatu	equ	0xFFB
 10512                           pclath	equ	0xFFA
 10513                           tblptru	equ	0xFF8
 10514                           tblptrh	equ	0xFF7
 10515                           tblptrl	equ	0xFF6
 10516                           tablat	equ	0xFF5
 10517                           prodh	equ	0xFF4
 10518                           prodl	equ	0xFF3
 10519                           intcon	equ	0xFF2
 10520                           postinc0	equ	0xFEE
 10521                           fsr0h	equ	0xFEA
 10522                           fsr0l	equ	0xFE9
 10523                           wreg	equ	0xFE8
 10524                           fsr1h	equ	0xFE2
 10525                           fsr1l	equ	0xFE1
 10526                           bsr	equ	0xFE0
 10527                           indf2	equ	0xFDF
 10528                           postinc2	equ	0xFDE
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8
 10532                           
 10533 ;; *************** function _getsUSART *****************
 10534 ;; Defined at:
 10535 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10538 ;;		 -> USART_Rx(7), 
 10539 ;;  len             1   20[COMRAM] unsigned char 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  i               1   22[COMRAM] unsigned char 
 10542 ;;  data            1   21[COMRAM] unsigned char 
 10543 ;; Return value:  Size  Location     Type
 10544 ;;		None               void
 10545 ;; Registers used:
 10546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10552 ;;      Params:         3       0       0       0
 10553 ;;      Locals:         2       0       0       0
 10554 ;;      Temps:          0       0       0       0
 10555 ;;      Totals:         5       0       0       0
 10556 ;;Total ram usage:        5 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:    1
 10559 ;; This function calls:
 10560 ;;		_ReadUSART
 10561 ;; This function is called by:
 10562 ;;		_ISR_alta
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text41
 10567  002F3E                     __ptext41:
 10568                           	opt stack 0
 10569  002F3E                     _getsUSART:
 10570                           	opt stack 20
 10571                           
 10572                           ;incstack = 0
 10573  002F3E  0E00               	movlw	0
 10574  002F40  6E3A               	movwf	getsUSART@i,c
 10575  002F42  D00E               	goto	i2l3879
 10576  002F44                     i2l393:
 10577  002F44  AA9E               	btfss	3998,5,c	;volatile
 10578  002F46  D7FE               	goto	i2l393
 10579  002F48  EC0E  F018         	call	_ReadUSART	;wreg free
 10580  002F4C  6E39               	movwf	getsUSART@data,c
 10581  002F4E  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10582  002F52  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10583  002F56  C039  FFDF         	movff	getsUSART@data,indf2
 10584  002F5A  4A36               	infsnz	getsUSART@buffer,f,c
 10585  002F5C  2A37               	incf	getsUSART@buffer+1,f,c
 10586  002F5E  2A3A               	incf	getsUSART@i,f,c
 10587  002F60                     i2l3879:
 10588  002F60  5038               	movf	getsUSART@len,w,c
 10589  002F62  5C3A               	subwf	getsUSART@i,w,c
 10590  002F64  B0D8               	btfsc	status,0,c
 10591  002F66  0012               	return	
 10592  002F68  D7ED               	goto	i2l393
 10593  002F6A                     __end_of_getsUSART:
 10594                           	opt stack 0
 10595                           pclatu	equ	0xFFB
 10596                           pclath	equ	0xFFA
 10597                           tblptru	equ	0xFF8
 10598                           tblptrh	equ	0xFF7
 10599                           tblptrl	equ	0xFF6
 10600                           tablat	equ	0xFF5
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           intcon	equ	0xFF2
 10604                           postinc0	equ	0xFEE
 10605                           fsr0h	equ	0xFEA
 10606                           fsr0l	equ	0xFE9
 10607                           wreg	equ	0xFE8
 10608                           fsr1h	equ	0xFE2
 10609                           fsr1l	equ	0xFE1
 10610                           bsr	equ	0xFE0
 10611                           indf2	equ	0xFDF
 10612                           postinc2	equ	0xFDE
 10613                           fsr2h	equ	0xFDA
 10614                           fsr2l	equ	0xFD9
 10615                           status	equ	0xFD8
 10616                           
 10617 ;; *************** function _ReadUSART *****************
 10618 ;; Defined at:
 10619 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  data            1   17[COMRAM] unsigned char 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      unsigned char 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10633 ;;      Params:         0       0       0       0
 10634 ;;      Locals:         1       0       0       0
 10635 ;;      Temps:          0       0       0       0
 10636 ;;      Totals:         1       0       0       0
 10637 ;;Total ram usage:        1 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_getsUSART
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text42
 10647  00301C                     __ptext42:
 10648                           	opt stack 0
 10649  00301C                     _ReadUSART:
 10650                           	opt stack 20
 10651                           
 10652                           ;incstack = 0
 10653  00301C  0EF2               	movlw	242
 10654  00301E  1611               	andwf	_USART_Status,f,c
 10655  003020  ACAB               	btfss	4011,6,c	;volatile
 10656  003022  D003               	goto	i2l451
 10657  003024  9011               	bcf	_USART_Status,0,c
 10658  003026  B0AB               	btfsc	4011,0,c	;volatile
 10659  003028  8011               	bsf	_USART_Status,0,c
 10660  00302A                     i2l451:
 10661  00302A  B4AB               	btfsc	4011,2,c	;volatile
 10662  00302C  8411               	bsf	_USART_Status,2,c
 10663  00302E  B2AB               	btfsc	4011,1,c	;volatile
 10664  003030  8611               	bsf	_USART_Status,3,c
 10665  003032  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10666  003036  5035               	movf	ReadUSART@data,w,c
 10667  003038  0012               	return	
 10668  00303A                     __end_of_ReadUSART:
 10669                           	opt stack 0
 10670                           pclatu	equ	0xFFB
 10671                           pclath	equ	0xFFA
 10672                           tblptru	equ	0xFF8
 10673                           tblptrh	equ	0xFF7
 10674                           tblptrl	equ	0xFF6
 10675                           tablat	equ	0xFF5
 10676                           prodh	equ	0xFF4
 10677                           prodl	equ	0xFF3
 10678                           intcon	equ	0xFF2
 10679                           postinc0	equ	0xFEE
 10680                           fsr0h	equ	0xFEA
 10681                           fsr0l	equ	0xFE9
 10682                           wreg	equ	0xFE8
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           bsr	equ	0xFE0
 10686                           indf2	equ	0xFDF
 10687                           postinc2	equ	0xFDE
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           pclatu	equ	0xFFB
 10692                           pclath	equ	0xFFA
 10693                           tblptru	equ	0xFF8
 10694                           tblptrh	equ	0xFF7
 10695                           tblptrl	equ	0xFF6
 10696                           tablat	equ	0xFF5
 10697                           prodh	equ	0xFF4
 10698                           prodl	equ	0xFF3
 10699                           intcon	equ	0xFF2
 10700                           postinc0	equ	0xFEE
 10701                           fsr0h	equ	0xFEA
 10702                           fsr0l	equ	0xFE9
 10703                           wreg	equ	0xFE8
 10704                           fsr1h	equ	0xFE2
 10705                           fsr1l	equ	0xFE1
 10706                           bsr	equ	0xFE0
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713                           	psect	rparam
 10714  0000                     pclatu	equ	0xFFB
 10715                           pclath	equ	0xFFA
 10716                           tblptru	equ	0xFF8
 10717                           tblptrh	equ	0xFF7
 10718                           tblptrl	equ	0xFF6
 10719                           tablat	equ	0xFF5
 10720                           prodh	equ	0xFF4
 10721                           prodl	equ	0xFF3
 10722                           intcon	equ	0xFF2
 10723                           postinc0	equ	0xFEE
 10724                           fsr0h	equ	0xFEA
 10725                           fsr0l	equ	0xFE9
 10726                           wreg	equ	0xFE8
 10727                           fsr1h	equ	0xFE2
 10728                           fsr1l	equ	0xFE1
 10729                           bsr	equ	0xFE0
 10730                           indf2	equ	0xFDF
 10731                           postinc2	equ	0xFDE
 10732                           fsr2h	equ	0xFDA
 10733                           fsr2l	equ	0xFD9
 10734                           status	equ	0xFD8
 10735                           
 10736                           	psect	temp
 10737  000047                     btemp:
 10738                           	opt stack 0
 10739  000047                     	ds	1
 10740  0000                     int$flags	set	btemp
 10741                           pclatu	equ	0xFFB
 10742                           pclath	equ	0xFFA
 10743                           tblptru	equ	0xFF8
 10744                           tblptrh	equ	0xFF7
 10745                           tblptrl	equ	0xFF6
 10746                           tablat	equ	0xFF5
 10747                           prodh	equ	0xFF4
 10748                           prodl	equ	0xFF3
 10749                           intcon	equ	0xFF2
 10750                           postinc0	equ	0xFEE
 10751                           fsr0h	equ	0xFEA
 10752                           fsr0l	equ	0xFE9
 10753                           wreg	equ	0xFE8
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           bsr	equ	0xFE0
 10757                           indf2	equ	0xFDF
 10758                           postinc2	equ	0xFDE
 10759                           fsr2h	equ	0xFDA
 10760                           fsr2l	equ	0xFD9
 10761                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         77
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    114     144
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Tx(BANK0[7]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(BANK0[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  173333
                                            106 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   57862
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28104
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8996
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           0     0      0     130
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   79612
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9596
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10366
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9377
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8888
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8857
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8857
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1341
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1341
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     72      90       4       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       9        0.0%
DATA                 0      0      FB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 29 14:27:24 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l97 2EAA                    ___awdiv@sign 0075                              bsr 000FE0  
           ___wmul@multiplicand 003E                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                     __CFG_LVP$ON 000000  
                           l251 1742                             l421 2C82                             l273 2D66  
                           l425 2C96                             l249 1754                             l426 2C98  
                           l258 1886                             l275 2D68                             l427 2CA2  
                           l259 1898                             l428 2CA4                             l438 2F6A  
                           l369 0690                             l922 2D08                             l676 234E  
                           l780 2082                             l773 1FBE                             l686 246C  
                           l774 2002                             l963 0B00                             l980 0C74  
                           l964 0AF4                             l965 0AC0                             l869 2AB4  
                           l879 2BDE                             l989 0D08                    getsUSART@len 0038  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 0075  
                           _dir 0219                             _str 0119                    ___awmod@sign 0041  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 008B  
                  ___flmul@bexp 0090                    ___flmul@sign 008A                    ___flmul@temp 0095  
                  ___flmul@prod 0091          __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A9  
                  __CFG_WDT$OFF 000000                            l1071 1D7E                            l1056 1118  
                          l1049 0E7C                            l1066 122A                            l1058 1186  
                          l1085 1E86                            l1086 1E9E                            l1078 1E2A  
                          l5001 2B84                            l5003 2B8A                            l4301 09AC  
                          l4311 09DA                            l5007 2BCE                            l5023 1DB6  
                          l5025 1DBE                            l5017 1D8E                            l5201 0368  
                          l3329 3046                            l4307 09D0                            l5035 1E68  
                          l5027 1DCE                            l5211 040C                            l5203 03A4  
                          l5131 00EE                            l5061 277A                            l4413 0CA6  
                          l4405 0C54                            l5037 1E78                            l5029 1E0C  
                          l5301 0836                            l5205 03BA                            l5125 00D4  
                          l4255 2E9E                            l5055 26E4                            l5063 27AC  
                          l5071 2F2A                            l4423 0CC8                            l4431 0CE2  
                          l4319 0A04                            l4503 0E64                            l5231 0526  
                          l5215 043E                            l5303 0844                            l5143 015C  
                          l5057 2716                            l4361 0AD4                            l5049 1EF0  
                          l4513 0EA4                            l4505 0E6A                            l5321 08EE  
                          l5313 0892                            l5225 04A8                            l5161 01C8  
                          l5153 0188                            l5145 0172                            l5059 2748  
                          l5067 2F14                            l5075 2F92                            l4419 0CBC  
                          l4363 0ADA                            l4283 0962                            l4611 28C4  
                          l5243 056C                            l5171 021A                            l5155 01AE  
                          l5139 0120                            l5323 08F4                            l4461 0D9E  
                          l4453 0D70                            l4429 0CDC                            l4349 0A40  
                          l4277 093E                            l4509 0E90                            l5317 08C2  
                          l5309 086A                            l5229 0520                            l5149 0182  
                          l5325 0912                            l5079 2FA6                            l4463 0DA2  
                          l4439 0D02                            l4391 0B72                            l4367 0AE4  
                          l4295 0998                            l4287 096C                            l4623 28F8  
                          l5271 0694                            l5247 0598                            l4457 0D92  
                          l4449 0D5E                            l4385 0B62                            l4377 0B24  
                          l4625 2904                            l4617 28DA                            l4561 112C  
                          l5265 065E                            l5249 05A0                            l5257 0636  
                          l5433 2540                            l5601 1990                            l4387 0B68  
                          l4395 0B84                            l4643 295C                            l4635 293A  
                          l4627 290A                            l4571 1180                            l4555 1102  
                          l4723 1CE2                            l4715 1C02                            l5283 0726  
                          l5267 0672                            l5259 0644                            l5195 0320  
                          l5187 029C                            l5435 2552                            l3845 2CD6  
                          l4469 0DB6                            l4581 11D6                            l4485 0E0A  
                          l5293 080E                            l5437 2562                            l3847 2CDE  
                          l4911 2424                            l4903 239E                            l4831 2078  
                          l4823 204C                            l4639 2948                            l4671 2C3E  
                          l4663 2C1E                            l4655 2C04                            l4487 0E10  
                          l4479 0DE6                            l4743 1496                            l5295 081C  
                          l5279 06C4                            l5199 0352                            l3791 2C84  
                          l3783 2C76                            l5607 1A04                            l3857 2CFE  
                          l3849 2CE2                            l4665 2C26                            l4585 11FC  
                          l4497 0E40                            l4489 0E22                            l4761 16DC  
                          l4737 13DC                            l5537 173A                            l4907 23DC  
                          l4819 2038                            l4667 2C2A                            l4675 2C48  
                          l4659 2C10                            l4595 124A                            l4587 1210  
                          l4755 1622                            l4747 14C2                            l5571 1878  
                          l4917 24B8                            l4925 2F00                            l4845 2246  
                          l4829 2068                            l4597 1254                            l4773 3014  
                          l5581 1892                            l5549 1770                            l3975 2D5E  
                          l4951 2666                            l4935 25F8                            l4839 2224  
                          l4783 1F36                            l4679 2C56                            l5567 1864  
                          l4961 2696                            l5593 1972                            l5569 1872  
                          l4963 26A6                            l4955 267A                            l4891 2348  
                          l4883 2322                            l4867 22E0                            l4859 2290  
                          l4965 26B0                            l4981 2A4E                            l4789 1F6A  
                          l5597 1986                            l4991 2AA4                            l4983 2A54  
                          l4879 2312                            l4969 26CC                            l4889 233C  
                          l4979 2A40                            l4999 2B76                   getsUSART@data 0039  
                          STR_1 3FBA                            STR_2 3F90                            STR_3 3F7B  
                          STR_4 3FBA                            STR_5 3FA5                            STR_6 3FCF  
                          STR_7 3FF9                            STR_8 3FEF                            STR_9 3FFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u5110 10A4  
                          _PIE1 000F9D                            u4170 2D8A                            u5115 1098  
                          u3605 3056                            u3606 3058                            u4176 2D8C  
                          u6120 0688                            u4605 2DF4                            u4606 2DF6  
                          u5190 11EA                            u4615 2E00                            u5431 1F14  
                          u4616 2E02                            u4625 2E0C                            u4626 2E0E  
                          u4730 0A8A                            u4635 2E16                            u5451 1F48  
                          u4636 2E18                            u4740 0AA2                            u4750 0AA4  
                          u6440 1750                            u5660 2618                            u6550 1A68  
                          u6470 1832                            u6455 1752                            u6480 184A  
                          u5665 260C                            u6486 184C                            u6567 2EA0  
                          _main 1708       __size_of_LCD_send_command 0036                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0047                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C0                   __CFG_IESO$OFF 000000  
            __size_of_LCD_clear 0032                    _sprintf$2477 0100                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010        __end_of_LCD_enable_pulse 2FFE                   _LCD_backlight 304C  
       __size_of_LCD_initialize 016E                   ___fltol@sign1 00A8                 __end_of___fladd 0DC8  
                         ?_main 0024                 __end_of___awdiv 2966                 __end_of___flneg 2F12  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2C60                 __end_of___flmul 126E  
               __end_of___flsub 2D5A                 __end_of___fltol 26DE                 __end_of___lldiv 2AC6  
               ___awdiv@divisor 0072                 __end_of___llmod 2BF0                           _T3CON 000FB1  
               __end_of___lwdiv 2D12                           i1l245 0078                           i2l241 286C  
                         i2l451 302A                           i2l393 2F44                 ___awdiv@counter 0074  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR3H 000FB3  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 28A8                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 3F7B                           _scale 126E                 __end_of_isdigit 301C  
                __pbitbssCOMRAM 0218                           tablat 000FF5                           status 000FD8  
               __end_of_sprintf 0920                  __CFG_PBADEN$ON 000000                     ?_USART_Send 0024  
           __size_of_LCD_cursor 0032                  WriteUSART@data 003C                 __initialization 2DA2  
                ?_LCD_backlight 0024                    __end_of_main 1A7E   __size_of_board_initialization 00B0  
                 _LCD_goto_line 26DE               ?_Joystick_Polling 0024              ??_Joystick_Polling 003C  
             ?_LCD_write_string 007A                          ??_main 00CA                   __activetblptr 000002  
                _JoystickValues 0022              ??_LCD_write_string 0043            __size_of__tdiv_to_l_ 0192  
             __end_of_LCD_clear 2E82          LCD_write_string@buffer 007A                          _ADCON1 000FC1  
              ___llmod@dividend 0070                          ?_scale 0097                          _ADRESH 000FC4  
              ___awdiv@dividend 0070                 __CFG_BBSIZ$1024 000000                 getsUSART@buffer 0036  
                        i2l5521 2862                          i2l5523 286A                          i2l3879 2F60  
            __size_of_ReadUSART 001E                          _SPBRGH 000FB0                __end_of___xxtofl 1F02  
               _switch_position 0019                __end_of_delay_ms 2EB4                  __CFG_XINST$OFF 000000  
             __end_of_ISR_bassa 00C0                __end_of__powers_ 3F53              __size_of_OpenUSART 0060  
                ?_LCD_goto_line 0024                          ___flge 2360                       ??___fladd 00AC  
              _delay_set_quartz 305A                          ___wmul 2FB6                       ??___awdiv 0042  
                     ??___flneg 0040                  __CFG_STVREN$ON 000000                       ??___awmod 0040  
                     ??___flmul 0086                       ??___flsub 0043                       ??___fltol 00A4  
                     ??___lldiv 003C                       ??___llmod 003C                       ??___lwdiv 0040  
       __size_of_LCD_write_char 0096                          _fround 1A7E  LCD_initialize@quartz_frequency 0077  
                        clear_0 2DA8                          clear_1 2DB4                          clear_2 2DC2  
              ___awdiv@quotient 0076                 ___awmod@divisor 003E            __size_of_LCD_Handler 0116  
               ___awmod@counter 0040                 __CFG_BOREN$BOHW 000000               _JoystickConstants 001A  
                  __pdataCOMRAM 0046                       ??_isdigit 003C                    __mediumconst 3EEA  
                        tblptrh 000FF7                  _analogic_brake 0014                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0030                       ??_sprintf 00C8  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                      __accesstop 0060  
       __end_of__initialization 2DDA                      ___flneg@f1 003C                _LCD_send_command 2DE8  
                 ___rparam_used 000001                      ___fltol@f1 00A0                 ??_LCD_backlight 003C  
                    _WriteUSART 303A                  __pcstackCOMRAM 0024                       ?_ISR_alta 0024  
                 __end_of_scale 1708                  _LCD_initialize 2094               _LCD_write_message 2F12  
             __end_of_ReadUSART 303A              ?_LCD_write_message 007A                      __div_to_l_ 2202  
                  ??_LCD_cursor 0043                    _actual_speed 00E0              __size_of_getsUSART 002C  
                 ReadUSART@data 0035               __end_of_OpenUSART 2CC0                 __div_to_l_@exp1 0041  
           ??_LCD_write_message 0043                 __div_to_l_@cntr 0040                         ??_scale 0043  
               __div_to_l_@quot 003C                      __pbssBANK0 00D2                      __pbssBANK1 0119  
                    __pnvCOMRAM 0044                      _actual_dir 0218                   __div_to_l_@f1 0070  
                 __div_to_l_@f2 0074                 ??_LCD_goto_line 0043              __end_of_LCD_cursor 2E50  
        __end_of_LCD_initialize 2202                         ?___flge 0070                         ?___wmul 003C  
                    ??_ISR_alta 0060       __end_of_LCD_write_message 2F3E               ?_LCD_enable_pulse 0024  
                 putsUSART@data 003D                         ?_fround 0097              ??_LCD_enable_pulse 0042  
                     ?___xxtofl 0070                LCD_cursor@active 0076                       ?_delay_ms 0070  
            __size_of_putsUSART 0026                    ??_USART_Send 003F               __end_of__npowers_ 3F1F  
                       __Hparam 0000                      _scale$2476 009B                         __Lparam 0000  
              delay_ms@value_ms 0070               __end_of_getsUSART 2F6A                     ?_WriteUSART 0024  
               ?_LCD_initialize 0024                 __size_of___flge 015C                         ___fladd 0920  
                       ___awdiv 28A8                         ___flneg 2EE4                         ___awmod 2BF0  
                       ___flmul 0DC8                         ___flsub 2D12                         ___fltol 25D2  
                       ___lldiv 2A16                 __size_of___wmul 0026                  _LCD_write_char 2AC6  
                       ___llmod 2B5C                         ___lwdiv 2CC0                         __pcinit 2DA2  
               __size_of_fround 02B6                         __ramtop 0300             LCD_write_char@value 0079  
                       __ptext0 1708                         __ptext1 2966                         __ptext2 2C60  
                       __ptext3 2094                         __ptext4 305A                         __ptext5 2E1E  
                       __ptext6 304C                         __ptext7 2EB4                         __ptext8 2F6A  
                       __ptext9 303A                       _ECU_Check 0010                     ?__div_to_l_ 0070  
              LCD_write_char@D0 0078                LCD_write_char@D1 0077                LCD_write_char@D2 0076  
              LCD_write_char@D3 0075                         _dpowers 3F53                         _isdigit 2FFE  
                    ??___xxtofl 0074                ___awmod@dividend 003C                      ??_delay_ms 0042  
  __end_of_board_initialization 2A16       __size_of_Joystick_Polling 0048              __end_of_USART_Send 2EE4  
      __end_of_delay_set_quartz 3062                         _sprintf 00C4                  __pintcode_body 27CA  
                     _LCD_clear 2E50            end_of_initialization 2DDA       __size_of_LCD_write_string 0026  
                 __Lmediumconst 3EEA                         int_func 27CA                   _Battery_Check 000F  
           LCD_backlight@active 003C                 ___lldiv@divisor 0074              LCD_cursor@blinking 0075  
               ___lldiv@counter 0040          __end_of_LCD_write_char 2B5C                       _RCSTAbits 000FAB  
                       postinc0 000FEE                         postinc2 000FDE               __end_of_putsUSART 2F90  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 003C                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 2E1E  
                   ___fladd@grs 00B7                   ___xxtofl@sign 0078                       _TRISCbits 000F94  
                    getsUSART@i 003A             __size_of_WriteUSART 0012                      ?_LCD_clear 0024  
       _clock_counter_reference 0044                     ___flmul@grs 008C                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 015E         LCD_write_integer@F17027 00D2                 ?_LCD_write_char 0024  
                 ??_LCD_Handler 0043                  __end_of___flge 24BC                      ?_ISR_bassa 0024  
                __end_of___wmul 2FDC                   __pidataCOMRAM 3062               __size_of_ISR_alta 28A0  
                __end_of_fround 1D34             start_initialization 2DA2                       _ReadUSART 301C  
           __end_of__tdiv_to_l_ 2094                       _OpenUSART 2C60                 ___llmod@divisor 0074  
               ___llmod@counter 003C           __end_of_LCD_backlight 305A                        ??___flge 003C  
          _board_initialization 2966                        ??___wmul 0040                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0043                   sprintf@tmpval 010E                       ___fladd@a 00A8  
                     ___fladd@b 00A4                      fround@prec 00A3             __end_of_LCD_Handler 25D2  
                     ___flmul@a 0082                       ___flmul@b 007E                     __pbssCOMRAM 0001  
                     ___flsub@a 00BC                       ___flsub@b 00B8                      ?_ReadUSART 0024  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                _Joystick_Polling 2D5A  
             __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022                    _isdigit$2082 003D  
             __size_of_delay_ms 0032                     ??_LCD_clear 0043         LCD_write_message@buffer 007A  
                 _ISR_alta$1278 003B                _LCD_write_string 2F90                      ?_OpenUSART 003C  
                   sprintf@flag 0106                     sprintf@fval 0114                     sprintf@prec 0112  
              ??_LCD_initialize 0043       delay_set_quartz@frequency 003C                ___lwdiv@dividend 003C  
            LCD_send_command@D0 0074              LCD_send_command@D1 0073              LCD_send_command@D2 0072  
            LCD_send_command@D3 0042                    ??_WriteUSART 003C           __end_of_LCD_goto_line 27CA  
         ?_board_initialization 0024                       __pintcode 0008                   __pmediumconst 3EEA  
                      ?___fladd 00A4                        ?___awdiv 0070                        ?___flneg 003C  
                      ?___awmod 003C                        ?___flmul 007E                        ?___flsub 00B8  
                      ?___fltol 00A0                        ?___lldiv 0070                        ?___llmod 0070  
                     __npowers_ 3EEB                        ?___lwdiv 003C                     ??_ISR_bassa 0024  
                     _getsUSART 2F3E                     __pintcodelo 0018                     __tdiv_to_l_ 1F02  
                  ??__div_to_l_ 003C                        ?_isdigit 0024                ___lwdiv@quotient 0040  
                      ?_sprintf 00C0                  __size_of_scale 049A              __end_of_WriteUSART 304C  
             ?_delay_set_quartz 0024              ??_delay_set_quartz 003C                  ___wmul@product 0040  
                      _LATAbits 000F89                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2    _delay_quartz_frequency_value 0046  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 2360                        _PIR2bits 000FA1                        i2u637_40 282E  
                      i2u638_45 2830                       _pr_time_1 0001                       _pr_time_2 0005  
                     _pr_time_3 00DC                       _set_speed 000D                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _ISR_alta 0008                     _LCD_Handler 24BC  
                    ?_getsUSART 0036                        _USART_Rx 00E2                        _USART_Tx 00E9  
                    _ADCON0bits 000FC2                       _putsUSART 2F6A                      _ADCON2bits 000FC0  
             ___wmul@multiplier 003C               ?_LCD_send_command 0072                _actual_speed_pk0 0012  
              _actual_speed_pk1 0013                _actual_speed_kmh 00D8                     ??_ReadUSART 0035  
            ??_LCD_send_command 0042                   _set_speed_pk0 0016                   _set_speed_pk1 0017  
                   ??_OpenUSART 003E                ??_LCD_write_char 0043                 OpenUSART@config 003E  
             LCD_goto_line@line 0075                        __Hrparam 0000          ??_board_initialization 0043  
                      __Lrparam 0000                __size_of___fladd 04A8                __size_of___awdiv 00BE  
              __size_of___flneg 002E                __size_of___awmod 0070                __size_of___flmul 04A6  
              __size_of___flsub 0048                __size_of___fltol 010C                __size_of___lldiv 00B0  
              __size_of___llmod 0094                __size_of___lwdiv 0052                     _fround$2474 009F  
                   _fround$2475 009B                      ?_putsUSART 003D                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1D34                __size_of_isdigit 001E  
                      _delay_ms 2E82                 ___lwdiv@divisor 003E                 ___lwdiv@counter 0042  
              _LCD_enable_pulse 2FDC                        __ptext10 24BC                        __ptext11 00C4  
                      __ptext20 1D34                        __ptext12 126E                        __ptext21 2B5C  
                      __ptext13 2FFE                        __ptext30 2F12                        __ptext22 2A16  
                      __ptext14 1A7E                        __ptext31 2AC6                        __ptext23 25D2  
                      __ptext15 0DC8                        __ptext32 26DE                        __ptext24 2D12  
                      __ptext16 2BF0                        __ptext41 2F3E                        __ptext33 2E50  
                      __ptext25 0920                        __ptext17 28A8                        __ptext42 301C  
                      __ptext34 2DE8                        __ptext26 2EE4                        __ptext18 1F02  
                      __ptext35 2FDC                        __ptext27 2360                        __ptext19 2202  
                      __ptext36 2E82                        __ptext28 2CC0                        __ptext37 2FB6  
                      __ptext29 2F90                        __ptext38 2D5A                        __powers_ 3F1F  
              __size_of_sprintf 085C                   __size_of_main 0376                        _wait_low 021B  
      __end_of_Joystick_Polling 2DA2                        int$flags 0047                     ??_getsUSART 0039  
      __end_of_LCD_write_string 2FB6                      _LCD_cursor 2E1E                      _INTCONbits 000FF2  
                  _set_steering 0018                  OpenUSART@spbrg 003C                        isdigit@c 003E  
                      scale@scl 009F                    _time_counter 0009                        intlevel1 0000  
                      intlevel2 0000                       sprintf@ap 0104                __tdiv_to_l_@exp1 007D  
                     sprintf@sp 00C0                __tdiv_to_l_@cntr 007C                __tdiv_to_l_@quot 0078  
              ___lldiv@dividend 0070                    ?__tdiv_to_l_ 0070                     ??_putsUSART 003F  
                      sprintf@c 0118                        sprintf@f 00C2                ___lldiv@quotient 003C  
        __size_of_LCD_backlight 000E                   ___fladd@signs 00B4                    ___fladd@aexp 00B5  
                  ___fladd@bexp 00B6                    _USART_Status 0011                      _USART_Send 2EB4  
                  _power_switch 021A  
