

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 17 16:55:00 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  003098                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  003098  10                 	db	16
    72                           
    73                           	psect	mediumconst
    74  003EEA                     __pmediumconst:
    75                           	opt stack 0
    76  003EEA  00                 	db	0
    77  003EEB                     __npowers_:
    78                           	opt stack 0
    79  003EEB  0000               	dw	0
    80  003EED  3F80               	dw	16256
    81  003EEF  CCCD               	dw	52429
    82  003EF1  3DCC               	dw	15820
    83  003EF3  D70A               	dw	55050
    84  003EF5  3C23               	dw	15395
    85  003EF7  126F               	dw	4719
    86  003EF9  3A83               	dw	14979
    87  003EFB  B717               	dw	46871
    88  003EFD  38D1               	dw	14545
    89  003EFF  C5AC               	dw	50604
    90  003F01  3727               	dw	14119
    91  003F03  37BD               	dw	14269
    92  003F05  3586               	dw	13702
    93  003F07  BF95               	dw	49045
    94  003F09  33D6               	dw	13270
    95  003F0B  CC77               	dw	52343
    96  003F0D  322B               	dw	12843
    97  003F0F  705F               	dw	28767
    98  003F11  3089               	dw	12425
    99  003F13  E6FF               	dw	59135
   100  003F15  2EDB               	dw	11995
   101  003F17  E508               	dw	58632
   102  003F19  1E3C               	dw	7740
   103  003F1B  4260               	dw	16992
   104  003F1D  0DA2               	dw	3490
   105  003F1F                     __end_of__npowers_:
   106                           	opt stack 0
   107  003F1F                     __powers_:
   108                           	opt stack 0
   109  003F1F  0000               	dw	0
   110  003F21  3F80               	dw	16256
   111  003F23  0000               	dw	0
   112  003F25  4120               	dw	16672
   113  003F27  0000               	dw	0
   114  003F29  42C8               	dw	17096
   115  003F2B  0000               	dw	0
   116  003F2D  447A               	dw	17530
   117  003F2F  4000               	dw	16384
   118  003F31  461C               	dw	17948
   119  003F33  5000               	dw	20480
   120  003F35  47C3               	dw	18371
   121  003F37  2400               	dw	9216
   122  003F39  4974               	dw	18804
   123  003F3B  9680               	dw	38528
   124  003F3D  4B18               	dw	19224
   125  003F3F  BC20               	dw	48160
   126  003F41  4CBE               	dw	19646
   127  003F43  6B28               	dw	27432
   128  003F45  4E6E               	dw	20078
   129  003F47  02F9               	dw	761
   130  003F49  5015               	dw	20501
   131  003F4B  78EC               	dw	30956
   132  003F4D  60AD               	dw	24749
   133  003F4F  F2CA               	dw	62154
   134  003F51  7149               	dw	29001
   135  003F53                     __end_of__powers_:
   136                           	opt stack 0
   137  003F53                     _dpowers:
   138                           	opt stack 0
   139  003F53  0001               	dw	1
   140  003F55  0000               	dw	0
   141  003F57  000A               	dw	10
   142  003F59  0000               	dw	0
   143  003F5B  0064               	dw	100
   144  003F5D  0000               	dw	0
   145  003F5F  03E8               	dw	1000
   146  003F61  0000               	dw	0
   147  003F63  2710               	dw	10000
   148  003F65  0000               	dw	0
   149  003F67  86A0               	dw	34464
   150  003F69  0001               	dw	1
   151  003F6B  4240               	dw	16960
   152  003F6D  000F               	dw	15
   153  003F6F  9680               	dw	38528
   154  003F71  0098               	dw	152
   155  003F73  E100               	dw	57600
   156  003F75  05F5               	dw	1525
   157  003F77  CA00               	dw	51712
   158  003F79  3B9A               	dw	15258
   159  003F7B                     __end_of_dpowers:
   160                           	opt stack 0
   161  003F7B                     STR_3:
   162  003F7B  54                 	db	84	;'T'
   163  003F7C  75                 	db	117	;'u'
   164  003F7D  72                 	db	114	;'r'
   165  003F7E  6E                 	db	110	;'n'
   166  003F7F  20                 	db	32
   167  003F80  74                 	db	116	;'t'
   168  003F81  68                 	db	104	;'h'
   169  003F82  65                 	db	101	;'e'
   170  003F83  20                 	db	32
   171  003F84  73                 	db	115	;'s'
   172  003F85  77                 	db	119	;'w'
   173  003F86  69                 	db	105	;'i'
   174  003F87  74                 	db	116	;'t'
   175  003F88  63                 	db	99	;'c'
   176  003F89  68                 	db	104	;'h'
   177  003F8A  20                 	db	32
   178  003F8B  4F                 	db	79	;'O'
   179  003F8C  4E                 	db	78	;'N'
   180  003F8D  21                 	db	33
   181  003F8E  20                 	db	32
   182  003F8F  00                 	db	0
   183  003F90                     STR_2:
   184  003F90  3D                 	db	61	;'='
   185  003F91  3D                 	db	61	;'='
   186  003F92  3E                 	db	62	;'>'
   187  003F93  20                 	db	32
   188  003F94  56                 	db	86	;'V'
   189  003F95  45                 	db	69	;'E'
   190  003F96  48                 	db	72	;'H'
   191  003F97  49                 	db	73	;'I'
   192  003F98  43                 	db	67	;'C'
   193  003F99  4C                 	db	76	;'L'
   194  003F9A  45                 	db	69	;'E'
   195  003F9B  20                 	db	32
   196  003F9C  20                 	db	32
   197  003F9D  4F                 	db	79	;'O'
   198  003F9E  46                 	db	70	;'F'
   199  003F9F  46                 	db	70	;'F'
   200  003FA0  20                 	db	32
   201  003FA1  3C                 	db	60	;'<'
   202  003FA2  3D                 	db	61	;'='
   203  003FA3  3D                 	db	61	;'='
   204  003FA4  00                 	db	0
   205  003FA5                     STR_5:
   206  003FA5  3D                 	db	61	;'='
   207  003FA6  3D                 	db	61	;'='
   208  003FA7  3D                 	db	61	;'='
   209  003FA8  20                 	db	32
   210  003FA9  56                 	db	86	;'V'
   211  003FAA  45                 	db	69	;'E'
   212  003FAB  48                 	db	72	;'H'
   213  003FAC  49                 	db	73	;'I'
   214  003FAD  43                 	db	67	;'C'
   215  003FAE  4C                 	db	76	;'L'
   216  003FAF  45                 	db	69	;'E'
   217  003FB0  20                 	db	32
   218  003FB1  44                 	db	68	;'D'
   219  003FB2  41                 	db	65	;'A'
   220  003FB3  54                 	db	84	;'T'
   221  003FB4  41                 	db	65	;'A'
   222  003FB5  20                 	db	32
   223  003FB6  3D                 	db	61	;'='
   224  003FB7  3D                 	db	61	;'='
   225  003FB8  3D                 	db	61	;'='
   226  003FB9  00                 	db	0
   227  003FBA                     STR_1:
   228  003FBA  3D                 	db	61	;'='
   229  003FBB  3D                 	db	61	;'='
   230  003FBC  3D                 	db	61	;'='
   231  003FBD  3D                 	db	61	;'='
   232  003FBE  3D                 	db	61	;'='
   233  003FBF  3D                 	db	61	;'='
   234  003FC0  3D                 	db	61	;'='
   235  003FC1  3D                 	db	61	;'='
   236  003FC2  3D                 	db	61	;'='
   237  003FC3  3D                 	db	61	;'='
   238  003FC4  3D                 	db	61	;'='
   239  003FC5  3D                 	db	61	;'='
   240  003FC6  3D                 	db	61	;'='
   241  003FC7  3D                 	db	61	;'='
   242  003FC8  3D                 	db	61	;'='
   243  003FC9  3D                 	db	61	;'='
   244  003FCA  3D                 	db	61	;'='
   245  003FCB  3D                 	db	61	;'='
   246  003FCC  3D                 	db	61	;'='
   247  003FCD  3D                 	db	61	;'='
   248  003FCE  00                 	db	0
   249  003FCF                     STR_6:
   250  003FCF  44                 	db	68	;'D'
   251  003FD0  69                 	db	105	;'i'
   252  003FD1  72                 	db	114	;'r'
   253  003FD2  65                 	db	101	;'e'
   254  003FD3  63                 	db	99	;'c'
   255  003FD4  74                 	db	116	;'t'
   256  003FD5  69                 	db	105	;'i'
   257  003FD6  6F                 	db	111	;'o'
   258  003FD7  6E                 	db	110	;'n'
   259  003FD8  3A                 	db	58	;':'
   260  003FD9  20                 	db	32
   261  003FDA  00                 	db	0
   262  003FDB                     STR_10:
   263  003FDB  53                 	db	83	;'S'
   264  003FDC  70                 	db	112	;'p'
   265  003FDD  65                 	db	101	;'e'
   266  003FDE  65                 	db	101	;'e'
   267  003FDF  64                 	db	100	;'d'
   268  003FE0  3A                 	db	58	;':'
   269  003FE1  20                 	db	32
   270  003FE2  25                 	db	37
   271  003FE3  2E                 	db	46
   272  003FE4  33                 	db	51	;'3'
   273  003FE5  66                 	db	102	;'f'
   274  003FE6  00                 	db	0
   275  003FE7                     STR_13:
   276  003FE7  57                 	db	87	;'W'
   277  003FE8  61                 	db	97	;'a'
   278  003FE9  69                 	db	105	;'i'
   279  003FEA  74                 	db	116	;'t'
   280  003FEB  2E                 	db	46
   281  003FEC  2E                 	db	46
   282  003FED  2E                 	db	46
   283  003FEE  00                 	db	0
   284  003FEF                     STR_8:
   285  003FEF  42                 	db	66	;'B'
   286  003FF0  4B                 	db	75	;'K'
   287  003FF1  57                 	db	87	;'W'
   288  003FF2  44                 	db	68	;'D'
   289  003FF3  00                 	db	0
   290  003FF4                     STR_11:
   291  003FF4  4B                 	db	75	;'K'
   292  003FF5  6D                 	db	109	;'m'
   293  003FF6  2F                 	db	47
   294  003FF7  68                 	db	104	;'h'
   295  003FF8  00                 	db	0
   296  003FF9                     STR_7:
   297  003FF9  46                 	db	70	;'F'
   298  003FFA  57                 	db	87	;'W'
   299  003FFB  44                 	db	68	;'D'
   300  003FFC  00                 	db	0
   301  003FFD                     STR_9:
   302  003FFD  50                 	db	80	;'P'
   303  003FFE  00                 	db	0
   304  0000                     
   305                           ; #config settings
   306  003FFF  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	nvCOMRAM
   309  000044                     __pnvCOMRAM:
   310                           	opt stack 0
   311  000044                     _clock_counter_reference:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  0000                     _ADCON0bits	set	4034
   315  0000                     _ADCON1	set	4033
   316  0000                     _ADCON2bits	set	4032
   317  0000                     _ADRESH	set	4036
   318  0000                     _INTCONbits	set	4082
   319  0000                     _IPR1bits	set	3999
   320  0000                     _IPR2bits	set	4002
   321  0000                     _LATA	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATC	set	3979
   324  0000                     _LATD	set	3980
   325  0000                     _LATE	set	3981
   326  0000                     _PIE1	set	3997
   327  0000                     _PIE1bits	set	3997
   328  0000                     _PIE2bits	set	4000
   329  0000                     _PIR1bits	set	3998
   330  0000                     _PIR2bits	set	4001
   331  0000                     _PORTAbits	set	3968
   332  0000                     _PORTBbits	set	3969
   333  0000                     _PORTCbits	set	3970
   334  0000                     _PORTDbits	set	3971
   335  0000                     _PORTEbits	set	3972
   336  0000                     _RCONbits	set	4048
   337  0000                     _RCREG	set	4014
   338  0000                     _RCSTA	set	4011
   339  0000                     _RCSTAbits	set	4011
   340  0000                     _SPBRG	set	4015
   341  0000                     _SPBRGH	set	4016
   342  0000                     _T3CON	set	4017
   343  0000                     _TMR3H	set	4019
   344  0000                     _TMR3L	set	4018
   345  0000                     _TRISA	set	3986
   346  0000                     _TRISB	set	3987
   347  0000                     _TRISC	set	3988
   348  0000                     _TRISCbits	set	3988
   349  0000                     _TRISD	set	3989
   350  0000                     _TRISE	set	3990
   351  0000                     _TXREG	set	4013
   352  0000                     _TXSTA	set	4012
   353  0000                     _TXSTAbits	set	4012
   354                           
   355                           	psect	cinit
   356  002DAC                     __pcinit:
   357                           	opt stack 0
   358  002DAC                     start_initialization:
   359                           	opt stack 0
   360  002DAC                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to BANK1 (12 bytes)
   364  002DAC  EE01  F019         	lfsr	0,__pbssBANK1
   365  002DB0  0E0C               	movlw	12
   366  002DB2                     clear_0:
   367  002DB2  6AEE               	clrf	postinc0,c
   368  002DB4  06E8               	decf	wreg,f,c
   369  002DB6  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to BANK0 (30 bytes)
   372  002DB8  EE00  F0D2         	lfsr	0,__pbssBANK0
   373  002DBC  0E1E               	movlw	30
   374  002DBE                     clear_1:
   375  002DBE  6AEE               	clrf	postinc0,c
   376  002DC0  06E8               	decf	wreg,f,c
   377  002DC2  E1FD               	bnz	clear_1
   378                           
   379                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   380  002DC4  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   381                           
   382                           ; Clear objects allocated to COMRAM (35 bytes)
   383  002DC6  EE00  F001         	lfsr	0,__pbssCOMRAM
   384  002DCA  0E23               	movlw	35
   385  002DCC                     clear_2:
   386  002DCC  6AEE               	clrf	postinc0,c
   387  002DCE  06E8               	decf	wreg,f,c
   388  002DD0  E1FD               	bnz	clear_2
   389                           
   390                           ; Initialize objects allocated to COMRAM (1 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  002DD2  0E98               	movlw	low __pidataCOMRAM
   393  002DD4  6EF6               	movwf	tblptrl,c
   394  002DD6  0E30               	movlw	high __pidataCOMRAM
   395  002DD8  6EF7               	movwf	tblptrh,c
   396  002DDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  002DDC  6EF8               	movwf	tblptru,c
   398  002DDE  0009               	tblrd		*+	;fetch initializer
   399  002DE0  CFF5 F046          	movff	tablat,__pdataCOMRAM
   400  002DE4                     end_of_initialization:
   401                           	opt stack 0
   402  002DE4                     __end_of__initialization:
   403                           	opt stack 0
   404  002DE4  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   405  002DE6  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   406  002DE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   407  002DEA  6EF8               	movwf	tblptru,c
   408  002DEC  0100               	movlb	0
   409  002DEE  EF84  F00B         	goto	_main	;jump to C main() function
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417                           	psect	bitbssCOMRAM
   418  000218                     __pbitbssCOMRAM:
   419                           	opt stack 0
   420  000218                     _actual_dir:
   421                           	opt stack 0
   422  000218                     	ds	1
   423  000219                     _dir:
   424                           	opt stack 0
   425  000219                     	ds	1
   426  00021A                     _power_switch:
   427                           	opt stack 0
   428  00021A                     	ds	1
   429  00021B                     _wait_low:
   430                           	opt stack 0
   431  00021B                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           
   439                           	psect	bssCOMRAM
   440  000001                     __pbssCOMRAM:
   441                           	opt stack 0
   442  000001                     _pr_time_1:
   443                           	opt stack 0
   444  000001                     	ds	4
   445  000005                     _pr_time_2:
   446                           	opt stack 0
   447  000005                     	ds	4
   448  000009                     _time_counter:
   449                           	opt stack 0
   450  000009                     	ds	4
   451  00000D                     _set_speed:
   452                           	opt stack 0
   453  00000D                     	ds	2
   454  00000F                     _Battery_Check:
   455                           	opt stack 0
   456  00000F                     	ds	1
   457  000010                     _ECU_Check:
   458                           	opt stack 0
   459  000010                     	ds	1
   460  000011                     _USART_Status:
   461                           	opt stack 0
   462  000011                     	ds	1
   463  000012                     _actual_speed_pk0:
   464                           	opt stack 0
   465  000012                     	ds	1
   466  000013                     _actual_speed_pk1:
   467                           	opt stack 0
   468  000013                     	ds	1
   469  000014                     _analogic_brake:
   470                           	opt stack 0
   471  000014                     	ds	1
   472  000015                     _i:
   473                           	opt stack 0
   474  000015                     	ds	1
   475  000016                     _set_speed_pk0:
   476                           	opt stack 0
   477  000016                     	ds	1
   478  000017                     _set_speed_pk1:
   479                           	opt stack 0
   480  000017                     	ds	1
   481  000018                     _set_steering:
   482                           	opt stack 0
   483  000018                     	ds	1
   484  000019                     _switch_position:
   485                           	opt stack 0
   486  000019                     	ds	1
   487  00001A                     _JoystickConstants:
   488                           	opt stack 0
   489  00001A                     	ds	8
   490  000022                     _JoystickValues:
   491                           	opt stack 0
   492  000022                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	dataCOMRAM
   501  000046                     __pdataCOMRAM:
   502                           	opt stack 0
   503  000046                     _delay_quartz_frequency_value:
   504                           	opt stack 0
   505  000046                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	bssBANK0
   514  0000D2                     __pbssBANK0:
   515                           	opt stack 0
   516  0000D2                     LCD_write_integer@F17027:
   517                           	opt stack 0
   518  0000D2                     	ds	6
   519  0000D8                     _actual_speed_kmh:
   520                           	opt stack 0
   521  0000D8                     	ds	4
   522  0000DC                     _pr_time_3:
   523                           	opt stack 0
   524  0000DC                     	ds	4
   525  0000E0                     _actual_speed:
   526                           	opt stack 0
   527  0000E0                     	ds	2
   528  0000E2                     _USART_Rx:
   529                           	opt stack 0
   530  0000E2                     	ds	7
   531  0000E9                     _USART_Tx:
   532                           	opt stack 0
   533  0000E9                     	ds	7
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541                           	psect	bssBANK1
   542  000119                     __pbssBANK1:
   543                           	opt stack 0
   544  000119                     _str:
   545                           	opt stack 0
   546  000119                     	ds	12
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554                           	psect	cstackBANK1
   555  000100                     __pcstackBANK1:
   556                           	opt stack 0
   557  000100                     _sprintf$2474:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x0
   561  000100                     	ds	4
   562  000104                     sprintf@ap:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x4
   566  000104                     	ds	2
   567  000106                     sprintf@flag:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x6
   571  000106                     	ds	2
   572  000108                     sprintf@val:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x8
   576  000108                     	ds	4
   577  00010C                     sprintf@exp:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00010C                     	ds	2
   582  00010E                     sprintf@tmpval:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0xE
   586  00010E                     	ds	4
   587  000112                     sprintf@prec:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x12
   591  000112                     	ds	2
   592  000114                     sprintf@fval:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x14
   596  000114                     	ds	4
   597  000118                     sprintf@c:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x18
   601  000118                     	ds	1
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           
   609                           	psect	cstackBANK0
   610  000060                     __pcstackBANK0:
   611                           	opt stack 0
   612  000060                     ??_ISR_alta:
   613                           
   614                           ; 0 bytes @ 0x0
   615  000060                     	ds	16
   616  000070                     ?___awdiv:
   617                           	opt stack 0
   618  000070                     ?__tdiv_to_l_:
   619                           	opt stack 0
   620  000070                     ?__div_to_l_:
   621                           	opt stack 0
   622  000070                     ?___lldiv:
   623                           	opt stack 0
   624  000070                     ?___llmod:
   625                           	opt stack 0
   626  000070                     ?___xxtofl:
   627                           	opt stack 0
   628  000070                     delay_ms@value_ms:
   629                           	opt stack 0
   630  000070                     ___awdiv@dividend:
   631                           	opt stack 0
   632  000070                     __div_to_l_@f1:
   633                           	opt stack 0
   634  000070                     ___flge@ff1:
   635                           	opt stack 0
   636  000070                     __tdiv_to_l_@f1:
   637                           	opt stack 0
   638  000070                     ___lldiv@dividend:
   639                           	opt stack 0
   640  000070                     ___llmod@dividend:
   641                           	opt stack 0
   642  000070                     ___xxtofl@val:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x10
   646  000070                     	ds	2
   647  000072                     delay_s@value_s:
   648                           	opt stack 0
   649  000072                     LCD_send_command@D2:
   650                           	opt stack 0
   651  000072                     ___awdiv@divisor:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x12
   655  000072                     	ds	1
   656  000073                     delay_s@repeat_loop:
   657                           	opt stack 0
   658  000073                     LCD_send_command@D1:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x13
   662  000073                     	ds	1
   663  000074                     ??___xxtofl:
   664  000074                     LCD_send_command@D0:
   665                           	opt stack 0
   666  000074                     ___awdiv@counter:
   667                           	opt stack 0
   668  000074                     __div_to_l_@f2:
   669                           	opt stack 0
   670  000074                     ___flge@ff2:
   671                           	opt stack 0
   672  000074                     __tdiv_to_l_@f2:
   673                           	opt stack 0
   674  000074                     ___lldiv@divisor:
   675                           	opt stack 0
   676  000074                     ___llmod@divisor:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0x14
   680  000074                     	ds	1
   681  000075                     LCD_goto_line@line:
   682                           	opt stack 0
   683  000075                     LCD_write_char@D3:
   684                           	opt stack 0
   685  000075                     LCD_cursor@blinking:
   686                           	opt stack 0
   687  000075                     ___awdiv@sign:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x15
   691  000075                     	ds	1
   692  000076                     LCD_write_char@D2:
   693                           	opt stack 0
   694  000076                     LCD_cursor@active:
   695                           	opt stack 0
   696  000076                     ___awdiv@quotient:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x16
   700  000076                     	ds	1
   701  000077                     LCD_write_char@D1:
   702                           	opt stack 0
   703  000077                     LCD_initialize@quartz_frequency:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x17
   707  000077                     	ds	1
   708  000078                     LCD_write_char@D0:
   709                           	opt stack 0
   710  000078                     ___xxtofl@sign:
   711                           	opt stack 0
   712  000078                     __tdiv_to_l_@quot:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x18
   716  000078                     	ds	1
   717  000079                     LCD_write_char@value:
   718                           	opt stack 0
   719  000079                     ___xxtofl@exp:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x19
   723  000079                     	ds	1
   724  00007A                     LCD_write_message@buffer:
   725                           	opt stack 0
   726  00007A                     LCD_write_string@buffer:
   727                           	opt stack 0
   728  00007A                     ___xxtofl@arg:
   729                           	opt stack 0
   730                           
   731                           ; 4 bytes @ 0x1A
   732  00007A                     	ds	2
   733  00007C                     __tdiv_to_l_@cntr:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x1C
   737  00007C                     	ds	1
   738  00007D                     __tdiv_to_l_@exp1:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x1D
   742  00007D                     	ds	1
   743  00007E                     ?___flmul:
   744                           	opt stack 0
   745  00007E                     ___flmul@b:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x1E
   749  00007E                     	ds	4
   750  000082                     ___flmul@a:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x22
   754  000082                     	ds	4
   755  000086                     ??___flmul:
   756                           
   757                           ; 0 bytes @ 0x26
   758  000086                     	ds	4
   759  00008A                     ___flmul@sign:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x2A
   763  00008A                     	ds	1
   764  00008B                     ___flmul@aexp:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x2B
   768  00008B                     	ds	1
   769  00008C                     ___flmul@grs:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x2C
   773  00008C                     	ds	4
   774  000090                     ___flmul@bexp:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x30
   778  000090                     	ds	1
   779  000091                     ___flmul@prod:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x31
   783  000091                     	ds	4
   784  000095                     ___flmul@temp:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x35
   788  000095                     	ds	2
   789  000097                     ?_fround:
   790                           	opt stack 0
   791  000097                     ?_scale:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x37
   795  000097                     	ds	4
   796  00009B                     _fround$2472:
   797                           	opt stack 0
   798  00009B                     _scale$2473:
   799                           	opt stack 0
   800                           
   801                           ; 4 bytes @ 0x3B
   802  00009B                     	ds	4
   803  00009F                     scale@scl:
   804                           	opt stack 0
   805  00009F                     _fround$2471:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x3F
   809  00009F                     	ds	1
   810  0000A0                     ?___fltol:
   811                           	opt stack 0
   812  0000A0                     ___fltol@f1:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x40
   816  0000A0                     	ds	3
   817  0000A3                     fround@prec:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x43
   821  0000A3                     	ds	1
   822  0000A4                     ??___fltol:
   823  0000A4                     ?___fladd:
   824                           	opt stack 0
   825  0000A4                     ___fladd@b:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x44
   829  0000A4                     	ds	4
   830  0000A8                     ___fltol@sign1:
   831                           	opt stack 0
   832  0000A8                     ___fladd@a:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x48
   836  0000A8                     	ds	1
   837  0000A9                     ___fltol@exp1:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x49
   841  0000A9                     	ds	3
   842  0000AC                     ??___fladd:
   843                           
   844                           ; 0 bytes @ 0x4C
   845  0000AC                     	ds	8
   846  0000B4                     ___fladd@signs:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x54
   850  0000B4                     	ds	1
   851  0000B5                     ___fladd@aexp:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x55
   855  0000B5                     	ds	1
   856  0000B6                     ___fladd@bexp:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x56
   860  0000B6                     	ds	1
   861  0000B7                     ___fladd@grs:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x57
   865  0000B7                     	ds	1
   866  0000B8                     ?___flsub:
   867                           	opt stack 0
   868  0000B8                     ___flsub@b:
   869                           	opt stack 0
   870                           
   871                           ; 4 bytes @ 0x58
   872  0000B8                     	ds	4
   873  0000BC                     ___flsub@a:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0x5C
   877  0000BC                     	ds	4
   878  0000C0                     ?_sprintf:
   879                           	opt stack 0
   880  0000C0                     sprintf@sp:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x60
   884  0000C0                     	ds	2
   885  0000C2                     sprintf@f:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x62
   889  0000C2                     	ds	6
   890  0000C8                     ??_sprintf:
   891                           
   892                           ; 0 bytes @ 0x68
   893  0000C8                     	ds	2
   894  0000CA                     ??_main:
   895                           
   896                           ; 0 bytes @ 0x6A
   897  0000CA                     	ds	8
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905                           	psect	cstackCOMRAM
   906  000024                     __pcstackCOMRAM:
   907                           	opt stack 0
   908  000024                     ??_ISR_bassa:
   909  000024                     
   910                           ; 1 bytes @ 0x0
   911  000024                     	ds	17
   912  000035                     ReadUSART@data:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x11
   916  000035                     	ds	1
   917  000036                     getsUSART@buffer:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x12
   921  000036                     	ds	2
   922  000038                     getsUSART@len:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x14
   926  000038                     	ds	1
   927  000039                     getsUSART@data:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x15
   931  000039                     	ds	1
   932  00003A                     getsUSART@i:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x16
   936  00003A                     	ds	1
   937  00003B                     _ISR_alta$1283:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x17
   941  00003B                     	ds	1
   942  00003C                     ??_Joystick_Polling:
   943  00003C                     ??_isdigit:
   944  00003C                     ??__tdiv_to_l_:
   945  00003C                     ??___flge:
   946  00003C                     ?___wmul:
   947                           	opt stack 0
   948  00003C                     ?___awmod:
   949                           	opt stack 0
   950  00003C                     ?___lwdiv:
   951                           	opt stack 0
   952  00003C                     ?___flneg:
   953                           	opt stack 0
   954  00003C                     delay_set_quartz@frequency:
   955                           	opt stack 0
   956  00003C                     LCD_backlight@active:
   957                           	opt stack 0
   958  00003C                     WriteUSART@data:
   959                           	opt stack 0
   960  00003C                     ___llmod@counter:
   961                           	opt stack 0
   962  00003C                     OpenUSART@spbrg:
   963                           	opt stack 0
   964  00003C                     ___wmul@multiplier:
   965                           	opt stack 0
   966  00003C                     ___awmod@dividend:
   967                           	opt stack 0
   968  00003C                     ___lwdiv@dividend:
   969                           	opt stack 0
   970  00003C                     __div_to_l_@quot:
   971                           	opt stack 0
   972  00003C                     ___flneg@f1:
   973                           	opt stack 0
   974  00003C                     ___lldiv@quotient:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x18
   978  00003C                     	ds	1
   979  00003D                     _isdigit$2080:
   980                           	opt stack 0
   981  00003D                     putsUSART@data:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x19
   985  00003D                     	ds	1
   986  00003E                     OpenUSART@config:
   987                           	opt stack 0
   988  00003E                     isdigit@c:
   989                           	opt stack 0
   990  00003E                     ___wmul@multiplicand:
   991                           	opt stack 0
   992  00003E                     ___awmod@divisor:
   993                           	opt stack 0
   994  00003E                     ___lwdiv@divisor:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x1A
   998  00003E                     	ds	1
   999  00003F                     
  1000                           ; 0 bytes @ 0x1B
  1001  00003F                     	ds	1
  1002  000040                     ___awmod@counter:
  1003                           	opt stack 0
  1004  000040                     __div_to_l_@cntr:
  1005                           	opt stack 0
  1006  000040                     ___lldiv@counter:
  1007                           	opt stack 0
  1008  000040                     ___wmul@product:
  1009                           	opt stack 0
  1010  000040                     ___lwdiv@quotient:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x1C
  1014  000040                     	ds	1
  1015  000041                     ___awmod@sign:
  1016                           	opt stack 0
  1017  000041                     __div_to_l_@exp1:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x1D
  1021  000041                     	ds	1
  1022  000042                     LCD_send_command@D3:
  1023                           	opt stack 0
  1024  000042                     ___lwdiv@counter:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1E
  1028  000042                     	ds	1
  1029  000043                     tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           
  1036                           ; 0 bytes @ 0x1F
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 122 in file "telecomando.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;		None               void
  1049 ;; Registers used:
  1050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1056 ;;      Params:         0       0       0       0
  1057 ;;      Locals:         0       0       0       0
  1058 ;;      Temps:          0       8       0       0
  1059 ;;      Totals:         0       8       0       0
  1060 ;;Total ram usage:        8 bytes
  1061 ;; Hardware stack levels required when called:   11
  1062 ;; This function calls:
  1063 ;;		_Joystick_Polling
  1064 ;;		_LCD_Handler
  1065 ;;		_LCD_clear
  1066 ;;		_LCD_goto_line
  1067 ;;		_LCD_write_message
  1068 ;;		_USART_Send
  1069 ;;		___flmul
  1070 ;;		___fltol
  1071 ;;		___xxtofl
  1072 ;;		_board_initialization
  1073 ;;		_delay_ms
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  001708                     __ptext0:
  1081                           	opt stack 0
  1082  001708                     _main:
  1083                           	opt stack 20
  1084                           
  1085                           ;telecomando.c: 123: board_initialization();
  1086                           
  1087                           ;incstack = 0
  1088  001708  ECB2  F014         	call	_board_initialization	;wreg free
  1089                           
  1090                           ;telecomando.c: 124: PORTDbits.RD7 = 0;
  1091  00170C  9E83               	bcf	3971,7,c	;volatile
  1092                           
  1093                           ;telecomando.c: 127: USART_Tx[0] = 0xAA;
  1094  00170E  0EAA               	movlw	170
  1095  001710  0100               	movlb	0	; () banked
  1096  001712  6FE9               	movwf	_USART_Tx& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;telecomando.c: 128: USART_Tx[6] = 0xAA;
  1100  001714  0EAA               	movlw	170
  1101  001716  0100               	movlb	0	; () banked
  1102  001718  6FEF               	movwf	(_USART_Tx+6)& (0+255),b
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;telecomando.c: 129: JoystickConstants[0] = 0.703;
  1106  00171A  0ECF               	movlw	207
  1107  00171C  6E1A               	movwf	_JoystickConstants,c	;volatile
  1108  00171E  0EF7               	movlw	247
  1109  001720  6E1B               	movwf	_JoystickConstants+1,c	;volatile
  1110  001722  0E33               	movlw	51
  1111  001724  6E1C               	movwf	_JoystickConstants+2,c	;volatile
  1112  001726  0E3F               	movlw	63
  1113  001728  6E1D               	movwf	_JoystickConstants+3,c	;volatile
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;telecomando.c: 130: JoystickConstants[1] = 34;
  1117  00172A  0E00               	movlw	0
  1118  00172C  6E1E               	movwf	_JoystickConstants+4,c	;volatile
  1119  00172E  0E00               	movlw	0
  1120  001730  6E1F               	movwf	_JoystickConstants+5,c	;volatile
  1121  001732  0E08               	movlw	8
  1122  001734  6E20               	movwf	_JoystickConstants+6,c	;volatile
  1123  001736  0E42               	movlw	66
  1124  001738  6E21               	movwf	_JoystickConstants+7,c	;volatile
  1125  00173A                     l5547:
  1126                           
  1127                           ;telecomando.c: 135: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  1128  00173A  A681               	btfss	3969,3,c	;volatile
  1129  00173C  D002               	goto	l249
  1130  00173E  B643               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1131  001740  D009               	goto	l247
  1132  001742                     l249:
  1133                           
  1134                           ;telecomando.c: 136: wait_low = 0;
  1135  001742  9643               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1136                           
  1137                           ;telecomando.c: 137: if (PORTBbits.RB3 == 1) {
  1138  001744  A681               	btfss	3969,3,c	;volatile
  1139  001746  D006               	goto	l247
  1140                           
  1141                           ;telecomando.c: 138: power_switch = ~power_switch;
  1142  001748  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1143  00174A  D002               	goto	u6440
  1144  00174C  8443               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1145  00174E  D001               	goto	u6455
  1146  001750                     u6440:
  1147  001750  9443               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1148  001752                     u6455:
  1149                           
  1150                           ;telecomando.c: 139: wait_low = 1;
  1151  001752  8643               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  1152  001754                     l247:
  1153                           
  1154                           ;telecomando.c: 140: }
  1155                           ;telecomando.c: 141: }
  1156                           ;telecomando.c: 143: if (power_switch == 0) {
  1157  001754  B443               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1158  001756  D08F               	goto	l5581
  1159                           
  1160                           ;telecomando.c: 144: dir = 1;
  1161  001758  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1162                           
  1163                           ;telecomando.c: 145: set_speed = 0;
  1164  00175A  0E00               	movlw	0
  1165  00175C  6E0E               	movwf	_set_speed+1,c	;volatile
  1166  00175E  0E00               	movlw	0
  1167  001760  6E0D               	movwf	_set_speed,c	;volatile
  1168                           
  1169                           ;telecomando.c: 146: set_steering = 90;
  1170  001762  0E5A               	movlw	90
  1171  001764  6E18               	movwf	_set_steering,c	;volatile
  1172                           
  1173                           ;telecomando.c: 147: analogic_brake = 0;
  1174  001766  0E00               	movlw	0
  1175  001768  6E14               	movwf	_analogic_brake,c	;volatile
  1176                           
  1177                           ;telecomando.c: 148: USART_Send();
  1178  00176A  EC5F  F017         	call	_USART_Send	;wreg free
  1179                           
  1180                           ;telecomando.c: 149: while (power_switch == 0) {
  1181  00176E  D080               	goto	l5579
  1182  001770                     l5559:
  1183                           
  1184                           ;telecomando.c: 150: LCD_clear();
  1185  001770  EC2D  F017         	call	_LCD_clear	;wreg free
  1186                           
  1187                           ;telecomando.c: 151: LCD_goto_line(1);
  1188  001774  0E01               	movlw	1
  1189  001776  EC6E  F013         	call	_LCD_goto_line
  1190                           
  1191                           ;telecomando.c: 152: LCD_write_message("====================");
  1192  00177A  0EBA               	movlw	low STR_1
  1193  00177C  0100               	movlb	0	; () banked
  1194  00177E  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1195  001780  0E3F               	movlw	high STR_1
  1196  001782  0100               	movlb	0	; () banked
  1197  001784  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1198  001786  ECA4  F017         	call	_LCD_write_message	;wreg free
  1199                           
  1200                           ;telecomando.c: 153: LCD_goto_line(2);
  1201  00178A  0E02               	movlw	2
  1202  00178C  EC6E  F013         	call	_LCD_goto_line
  1203                           
  1204                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1205  001790  0E90               	movlw	low STR_2
  1206  001792  0100               	movlb	0	; () banked
  1207  001794  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1208  001796  0E3F               	movlw	high STR_2
  1209  001798  0100               	movlb	0	; () banked
  1210  00179A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1211  00179C  ECA4  F017         	call	_LCD_write_message	;wreg free
  1212                           
  1213                           ;telecomando.c: 155: LCD_goto_line(3);
  1214  0017A0  0E03               	movlw	3
  1215  0017A2  EC6E  F013         	call	_LCD_goto_line
  1216                           
  1217                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1218  0017A6  0E7B               	movlw	low STR_3
  1219  0017A8  0100               	movlb	0	; () banked
  1220  0017AA  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1221  0017AC  0E3F               	movlw	high STR_3
  1222  0017AE  0100               	movlb	0	; () banked
  1223  0017B0  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1224  0017B2  ECA4  F017         	call	_LCD_write_message	;wreg free
  1225                           
  1226                           ;telecomando.c: 157: LCD_goto_line(4);
  1227  0017B6  0E04               	movlw	4
  1228  0017B8  EC6E  F013         	call	_LCD_goto_line
  1229                           
  1230                           ;telecomando.c: 158: LCD_write_message("====================");
  1231  0017BC  0EBA               	movlw	low STR_1
  1232  0017BE  0100               	movlb	0	; () banked
  1233  0017C0  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1234  0017C2  0E3F               	movlw	high STR_1
  1235  0017C4  0100               	movlb	0	; () banked
  1236  0017C6  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1237  0017C8  ECA4  F017         	call	_LCD_write_message	;wreg free
  1238                           
  1239                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 70) {
  1240  0017CC  C001  F0CA         	movff	_pr_time_1,??_main	;volatile
  1241  0017D0  C002  F0CB         	movff	_pr_time_1+1,??_main+1	;volatile
  1242  0017D4  C003  F0CC         	movff	_pr_time_1+2,??_main+2	;volatile
  1243  0017D8  C004  F0CD         	movff	_pr_time_1+3,??_main+3	;volatile
  1244  0017DC  0100               	movlb	0	; () banked
  1245  0017DE  1FCA               	comf	??_main& (0+255),f,b
  1246  0017E0  1FCB               	comf	(??_main+1)& (0+255),f,b
  1247  0017E2  1FCC               	comf	(??_main+2)& (0+255),f,b
  1248  0017E4  1FCD               	comf	(??_main+3)& (0+255),f,b
  1249  0017E6  2BCA               	incf	??_main& (0+255),f,b
  1250  0017E8  0E00               	movlw	0
  1251  0017EA  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1252  0017EC  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1253  0017EE  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1254  0017F0  5009               	movf	_time_counter,w,c	;volatile
  1255  0017F2  0100               	movlb	0	; () banked
  1256  0017F4  25CA               	addwf	??_main& (0+255),w,b
  1257  0017F6  0100               	movlb	0	; () banked
  1258  0017F8  6FCE               	movwf	(??_main+4)& (0+255),b
  1259  0017FA  500A               	movf	_time_counter+1,w,c	;volatile
  1260  0017FC  0100               	movlb	0	; () banked
  1261  0017FE  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1262  001800  0100               	movlb	0	; () banked
  1263  001802  6FCF               	movwf	(??_main+5)& (0+255),b
  1264  001804  500B               	movf	_time_counter+2,w,c	;volatile
  1265  001806  0100               	movlb	0	; () banked
  1266  001808  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1267  00180A  0100               	movlb	0	; () banked
  1268  00180C  6FD0               	movwf	(??_main+6)& (0+255),b
  1269  00180E  500C               	movf	_time_counter+3,w,c	;volatile
  1270  001810  0100               	movlb	0	; () banked
  1271  001812  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1272  001814  0100               	movlb	0	; () banked
  1273  001816  6FD1               	movwf	(??_main+7)& (0+255),b
  1274  001818  0100               	movlb	0	; () banked
  1275  00181A  51D1               	movf	(??_main+7)& (0+255),w,b
  1276  00181C  0100               	movlb	0	; () banked
  1277  00181E  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1278  001820  0100               	movlb	0	; () banked
  1279  001822  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1280  001824  E105               	bnz	u6470
  1281  001826  0E46               	movlw	70
  1282  001828  0100               	movlb	0	; () banked
  1283  00182A  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1284  00182C  A0D8               	btfss	status,0,c
  1285  00182E  D019               	goto	l5577
  1286  001830                     u6470:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1290  001830  C009  F001         	movff	_time_counter,_pr_time_1	;volatile
  1291  001834  C00A  F002         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1292  001838  C00B  F003         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1293  00183C  C00C  F004         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1297  001840  AE83               	btfss	3971,7,c	;volatile
  1298  001842  D002               	goto	u6480
  1299  001844  0E01               	movlw	1
  1300  001846  D001               	goto	u6486
  1301  001848                     u6480:
  1302  001848  0E00               	movlw	0
  1303  00184A                     u6486:
  1304  00184A  0AFF               	xorlw	255
  1305  00184C  0100               	movlb	0	; () banked
  1306  00184E  6FCA               	movwf	??_main& (0+255),b
  1307  001850  0100               	movlb	0	; () banked
  1308  001852  33CA               	rrcf	??_main& (0+255),f,b
  1309  001854  33CA               	rrcf	??_main& (0+255),f,b
  1310  001856  5083               	movf	3971,w,c	;volatile
  1311  001858  0100               	movlb	0	; () banked
  1312  00185A  19CA               	xorwf	??_main& (0+255),w,b
  1313  00185C  0B7F               	andlw	-129
  1314  00185E  19CA               	xorwf	??_main& (0+255),w,b
  1315  001860  6E83               	movwf	3971,c	;volatile
  1316  001862                     l5577:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;telecomando.c: 162: }
  1320                           ;telecomando.c: 163: delay_ms(300);
  1321  001862  0E01               	movlw	1
  1322  001864  0100               	movlb	0	; () banked
  1323  001866  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1324  001868  0E2C               	movlw	44
  1325  00186A  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1326  00186C  EC46  F017         	call	_delay_ms	;wreg free
  1327  001870                     l5579:
  1328  001870  A443               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1329  001872  D77E               	goto	l5559
  1330                           
  1331                           ;telecomando.c: 164: }
  1332                           ;telecomando.c: 165: PORTDbits.RD7 = 0;
  1333  001874  9E83               	bcf	3971,7,c	;volatile
  1334  001876                     l5581:
  1335                           
  1336                           ;telecomando.c: 166: }
  1337                           ;telecomando.c: 168: Joystick_Polling();
  1338  001876  ECB2  F016         	call	_Joystick_Polling	;wreg free
  1339                           
  1340                           ;telecomando.c: 171: if (PORTAbits.RA2 == 1) {
  1341  00187A  A480               	btfss	3968,2,c	;volatile
  1342  00187C  D003               	goto	l256
  1343                           
  1344                           ;telecomando.c: 172: switch_position = 0;
  1345  00187E  0E00               	movlw	0
  1346  001880  6E19               	movwf	_switch_position,c	;volatile
  1347                           
  1348                           ;telecomando.c: 173: } else {
  1349  001882  D009               	goto	l257
  1350  001884                     l256:
  1351                           
  1352                           ;telecomando.c: 174: if (PORTAbits.RA3 == 0) {
  1353  001884  B680               	btfsc	3968,3,c	;volatile
  1354  001886  D004               	goto	l5591
  1355                           
  1356                           ;telecomando.c: 175: switch_position = 1;
  1357  001888  0E01               	movlw	1
  1358  00188A  6E19               	movwf	_switch_position,c	;volatile
  1359                           
  1360                           ;telecomando.c: 176: dir = 1;
  1361  00188C  8243               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  1362                           
  1363                           ;telecomando.c: 177: } else {
  1364  00188E  D003               	goto	l257
  1365  001890                     l5591:
  1366                           
  1367                           ;telecomando.c: 178: switch_position = 2;
  1368  001890  0E02               	movlw	2
  1369  001892  6E19               	movwf	_switch_position,c	;volatile
  1370                           
  1371                           ;telecomando.c: 179: dir = 0;
  1372  001894  9243               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  1373  001896                     l257:
  1374                           
  1375                           ;telecomando.c: 180: }
  1376                           ;telecomando.c: 181: }
  1377                           ;telecomando.c: 183: if (switch_position != 0) {
  1378  001896  5019               	movf	_switch_position,w,c	;volatile
  1379  001898  B4D8               	btfsc	status,2,c
  1380  00189A  D074               	goto	l5607
  1381                           
  1382                           ;telecomando.c: 184: set_steering = (128 + JoystickValues[0])*(JoystickConstants[0]);
  1383  00189C  C01A  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  1384  0018A0  C01B  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1385  0018A4  C01C  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1386  0018A8  C01D  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1387  0018AC  C022  F0CA         	movff	_JoystickValues,??_main	;volatile
  1388  0018B0  0100               	movlb	0	; () banked
  1389  0018B2  6BCB               	clrf	(??_main+1)& (0+255),b
  1390  0018B4  BFCA               	btfsc	??_main& (0+255),7,b
  1391  0018B6  07CB               	decf	(??_main+1)& (0+255),f,b
  1392  0018B8  0E80               	movlw	128
  1393  0018BA  0100               	movlb	0	; () banked
  1394  0018BC  27CA               	addwf	??_main& (0+255),f,b
  1395  0018BE  0E00               	movlw	0
  1396  0018C0  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1397  0018C2  C0CA  F070         	movff	??_main,___xxtofl@val
  1398  0018C6  C0CB  F071         	movff	??_main+1,___xxtofl@val+1
  1399  0018CA  0100               	movlb	0	; () banked
  1400  0018CC  0E00               	movlw	0
  1401  0018CE  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1402  0018D0  0EFF               	movlw	-1
  1403  0018D2  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1404  0018D4  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1405  0018D6  0E01               	movlw	1
  1406  0018D8  EC99  F00E         	call	___xxtofl
  1407  0018DC  C070  F07E         	movff	?___xxtofl,___flmul@b
  1408  0018E0  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1409  0018E4  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1410  0018E8  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1411  0018EC  ECE4  F006         	call	___flmul	;wreg free
  1412  0018F0  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1413  0018F4  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1414  0018F8  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1415  0018FC  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1416  001900  ECE8  F012         	call	___fltol	;wreg free
  1417  001904  0100               	movlb	0	; () banked
  1418  001906  51A0               	movf	?___fltol& (0+255),w,b
  1419  001908  6E18               	movwf	_set_steering,c	;volatile
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;telecomando.c: 185: if (JoystickValues[1] > 0) {
  1423  00190A  5023               	movf	_JoystickValues+1,w,c	;volatile
  1424  00190C  0A80               	xorlw	128
  1425  00190E  0F7F               	addlw	-129
  1426  001910  A0D8               	btfss	status,0,c
  1427  001912  D02E               	goto	l5603
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;telecomando.c: 186: set_speed = (JoystickValues[1])*(JoystickConstants[1]);
  1431  001914  C01E  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1432  001918  C01F  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1433  00191C  C020  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1434  001920  C021  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1435  001924  5023               	movf	_JoystickValues+1,w,c	;volatile
  1436  001926  0100               	movlb	0	; () banked
  1437  001928  6F70               	movwf	___xxtofl@val& (0+255),b
  1438  00192A  0E00               	movlw	0
  1439  00192C  BF70               	btfsc	___xxtofl@val& (0+255),7,b
  1440  00192E  0EFF               	movlw	-1
  1441  001930  6F71               	movwf	(___xxtofl@val+1)& (0+255),b
  1442  001932  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1443  001934  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1444  001936  0E01               	movlw	1
  1445  001938  EC99  F00E         	call	___xxtofl
  1446  00193C  C070  F07E         	movff	?___xxtofl,___flmul@b
  1447  001940  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1448  001944  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1449  001948  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1450  00194C  ECE4  F006         	call	___flmul	;wreg free
  1451  001950  C07E  F0A0         	movff	?___flmul,___fltol@f1
  1452  001954  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  1453  001958  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  1454  00195C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  1455  001960  ECE8  F012         	call	___fltol	;wreg free
  1456  001964  C0A0  F00D         	movff	?___fltol,_set_speed	;volatile
  1457  001968  C0A1  F00E         	movff	?___fltol+1,_set_speed+1	;volatile
  1458                           
  1459                           ;telecomando.c: 187: analogic_brake = 0;
  1460  00196C  0E00               	movlw	0
  1461  00196E  D008               	goto	L1
  1462  001970                     l5603:
  1463                           
  1464                           ;telecomando.c: 189: set_speed = 0;
  1465  001970  0E00               	movlw	0
  1466  001972  6E0E               	movwf	_set_speed+1,c	;volatile
  1467  001974  0E00               	movlw	0
  1468  001976  6E0D               	movwf	_set_speed,c	;volatile
  1469                           
  1470                           ;telecomando.c: 190: analogic_brake = -((2 * JoystickValues[1]) + 1);
  1471  001978  5023               	movf	_JoystickValues+1,w,c	;volatile
  1472  00197A  0D02               	mullw	2
  1473  00197C  28F3               	incf	prodl,w,c
  1474  00197E  0800               	sublw	0
  1475  001980                     L1:
  1476  001980  6E14               	movwf	_analogic_brake,c	;volatile
  1477                           
  1478                           ;telecomando.c: 191: }
  1479                           ;telecomando.c: 192: } else {
  1480  001982  D005               	goto	l5611
  1481  001984                     l5607:
  1482                           
  1483                           ;telecomando.c: 193: set_speed = 0;
  1484  001984  0E00               	movlw	0
  1485  001986  6E0E               	movwf	_set_speed+1,c	;volatile
  1486  001988  0E00               	movlw	0
  1487  00198A  6E0D               	movwf	_set_speed,c	;volatile
  1488                           
  1489                           ;telecomando.c: 194: analogic_brake = 255;
  1490  00198C  6814               	setf	_analogic_brake,c	;volatile
  1491  00198E                     l5611:
  1492                           
  1493                           ;telecomando.c: 195: }
  1494                           ;telecomando.c: 197: if ((time_counter - pr_time_2) >= 1) {
  1495  00198E  C005  F0CA         	movff	_pr_time_2,??_main	;volatile
  1496  001992  C006  F0CB         	movff	_pr_time_2+1,??_main+1	;volatile
  1497  001996  C007  F0CC         	movff	_pr_time_2+2,??_main+2	;volatile
  1498  00199A  C008  F0CD         	movff	_pr_time_2+3,??_main+3	;volatile
  1499  00199E  0100               	movlb	0	; () banked
  1500  0019A0  1FCA               	comf	??_main& (0+255),f,b
  1501  0019A2  1FCB               	comf	(??_main+1)& (0+255),f,b
  1502  0019A4  1FCC               	comf	(??_main+2)& (0+255),f,b
  1503  0019A6  1FCD               	comf	(??_main+3)& (0+255),f,b
  1504  0019A8  2BCA               	incf	??_main& (0+255),f,b
  1505  0019AA  0E00               	movlw	0
  1506  0019AC  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1507  0019AE  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1508  0019B0  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1509  0019B2  5009               	movf	_time_counter,w,c	;volatile
  1510  0019B4  0100               	movlb	0	; () banked
  1511  0019B6  25CA               	addwf	??_main& (0+255),w,b
  1512  0019B8  0100               	movlb	0	; () banked
  1513  0019BA  6FCE               	movwf	(??_main+4)& (0+255),b
  1514  0019BC  500A               	movf	_time_counter+1,w,c	;volatile
  1515  0019BE  0100               	movlb	0	; () banked
  1516  0019C0  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1517  0019C2  0100               	movlb	0	; () banked
  1518  0019C4  6FCF               	movwf	(??_main+5)& (0+255),b
  1519  0019C6  500B               	movf	_time_counter+2,w,c	;volatile
  1520  0019C8  0100               	movlb	0	; () banked
  1521  0019CA  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1522  0019CC  0100               	movlb	0	; () banked
  1523  0019CE  6FD0               	movwf	(??_main+6)& (0+255),b
  1524  0019D0  500C               	movf	_time_counter+3,w,c	;volatile
  1525  0019D2  0100               	movlb	0	; () banked
  1526  0019D4  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1527  0019D6  0100               	movlb	0	; () banked
  1528  0019D8  6FD1               	movwf	(??_main+7)& (0+255),b
  1529  0019DA  0100               	movlb	0	; () banked
  1530  0019DC  51CE               	movf	(??_main+4)& (0+255),w,b
  1531  0019DE  0100               	movlb	0	; () banked
  1532  0019E0  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1533  0019E2  0100               	movlb	0	; () banked
  1534  0019E4  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1535  0019E6  0100               	movlb	0	; () banked
  1536  0019E8  11D1               	iorwf	(??_main+7)& (0+255),w,b
  1537  0019EA  B4D8               	btfsc	status,2,c
  1538  0019EC  D00A               	goto	l5617
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;telecomando.c: 198: pr_time_2 = time_counter;
  1542  0019EE  C009  F005         	movff	_time_counter,_pr_time_2	;volatile
  1543  0019F2  C00A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1544  0019F6  C00B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1545  0019FA  C00C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;telecomando.c: 199: USART_Send();
  1549  0019FE  EC5F  F017         	call	_USART_Send	;wreg free
  1550  001A02                     l5617:
  1551                           
  1552                           ;telecomando.c: 200: }
  1553                           ;telecomando.c: 202: if ((time_counter - pr_time_3) >= 30) {
  1554  001A02  C0DC  F0CA         	movff	_pr_time_3,??_main	;volatile
  1555  001A06  C0DD  F0CB         	movff	_pr_time_3+1,??_main+1	;volatile
  1556  001A0A  C0DE  F0CC         	movff	_pr_time_3+2,??_main+2	;volatile
  1557  001A0E  C0DF  F0CD         	movff	_pr_time_3+3,??_main+3	;volatile
  1558  001A12  0100               	movlb	0	; () banked
  1559  001A14  1FCA               	comf	??_main& (0+255),f,b
  1560  001A16  1FCB               	comf	(??_main+1)& (0+255),f,b
  1561  001A18  1FCC               	comf	(??_main+2)& (0+255),f,b
  1562  001A1A  1FCD               	comf	(??_main+3)& (0+255),f,b
  1563  001A1C  2BCA               	incf	??_main& (0+255),f,b
  1564  001A1E  0E00               	movlw	0
  1565  001A20  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1566  001A22  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1567  001A24  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1568  001A26  5009               	movf	_time_counter,w,c	;volatile
  1569  001A28  0100               	movlb	0	; () banked
  1570  001A2A  25CA               	addwf	??_main& (0+255),w,b
  1571  001A2C  0100               	movlb	0	; () banked
  1572  001A2E  6FCE               	movwf	(??_main+4)& (0+255),b
  1573  001A30  500A               	movf	_time_counter+1,w,c	;volatile
  1574  001A32  0100               	movlb	0	; () banked
  1575  001A34  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1576  001A36  0100               	movlb	0	; () banked
  1577  001A38  6FCF               	movwf	(??_main+5)& (0+255),b
  1578  001A3A  500B               	movf	_time_counter+2,w,c	;volatile
  1579  001A3C  0100               	movlb	0	; () banked
  1580  001A3E  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1581  001A40  0100               	movlb	0	; () banked
  1582  001A42  6FD0               	movwf	(??_main+6)& (0+255),b
  1583  001A44  500C               	movf	_time_counter+3,w,c	;volatile
  1584  001A46  0100               	movlb	0	; () banked
  1585  001A48  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1586  001A4A  0100               	movlb	0	; () banked
  1587  001A4C  6FD1               	movwf	(??_main+7)& (0+255),b
  1588  001A4E  0100               	movlb	0	; () banked
  1589  001A50  51D1               	movf	(??_main+7)& (0+255),w,b
  1590  001A52  0100               	movlb	0	; () banked
  1591  001A54  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1592  001A56  0100               	movlb	0	; () banked
  1593  001A58  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1594  001A5A  E105               	bnz	u6550
  1595  001A5C  0E1E               	movlw	30
  1596  001A5E  0100               	movlb	0	; () banked
  1597  001A60  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1598  001A62  A0D8               	btfss	status,0,c
  1599  001A64  D66A               	goto	l5547
  1600  001A66                     u6550:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;telecomando.c: 203: pr_time_3 = time_counter;
  1604  001A66  C009  F0DC         	movff	_time_counter,_pr_time_3	;volatile
  1605  001A6A  C00A  F0DD         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1606  001A6E  C00B  F0DE         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1607  001A72  C00C  F0DF         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;telecomando.c: 204: LCD_Handler();
  1611  001A76  EC5D  F012         	call	_LCD_Handler	;wreg free
  1612  001A7A  D65F               	goto	l5547
  1613  001A7C                     __end_of_main:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodl	equ	0xFF3
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _board_initialization *****************
  1625 ;; Defined at:
  1626 ;;		line 263 in file "telecomando.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;		None               void
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1640 ;;      Params:         0       0       0       0
  1641 ;;      Locals:         0       0       0       0
  1642 ;;      Temps:          0       0       0       0
  1643 ;;      Totals:         0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:   10
  1647 ;; This function calls:
  1648 ;;		_LCD_backlight
  1649 ;;		_LCD_clear
  1650 ;;		_LCD_goto_line
  1651 ;;		_LCD_initialize
  1652 ;;		_LCD_write_message
  1653 ;;		_OpenUSART
  1654 ;;		_delay_ms
  1655 ;;		_delay_s
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text1
  1662  002964                     __ptext1:
  1663                           	opt stack 0
  1664  002964                     _board_initialization:
  1665                           	opt stack 20
  1666                           
  1667                           ;telecomando.c: 265: LATA = 0x00;
  1668                           
  1669                           ;incstack = 0
  1670  002964  0E00               	movlw	0
  1671  002966  6E89               	movwf	3977,c	;volatile
  1672                           
  1673                           ;telecomando.c: 266: TRISA = 0b00001111;
  1674  002968  0E0F               	movlw	15
  1675  00296A  6E92               	movwf	3986,c	;volatile
  1676                           
  1677                           ;telecomando.c: 267: LATB = 0x00;
  1678  00296C  0E00               	movlw	0
  1679  00296E  6E8A               	movwf	3978,c	;volatile
  1680                           
  1681                           ;telecomando.c: 268: TRISB = 0xFF;
  1682  002970  6893               	setf	3987,c	;volatile
  1683                           
  1684                           ;telecomando.c: 269: LATC = 0x00;
  1685  002972  0E00               	movlw	0
  1686  002974  6E8B               	movwf	3979,c	;volatile
  1687                           
  1688                           ;telecomando.c: 270: TRISC = 0b11110000;
  1689  002976  0EF0               	movlw	240
  1690  002978  6E94               	movwf	3988,c	;volatile
  1691                           
  1692                           ;telecomando.c: 271: LATD = 0x00;
  1693  00297A  0E00               	movlw	0
  1694  00297C  6E8C               	movwf	3980,c	;volatile
  1695                           
  1696                           ;telecomando.c: 272: TRISD = 0x01111000;
  1697  00297E  0E00               	movlw	0
  1698  002980  6E95               	movwf	3989,c	;volatile
  1699                           
  1700                           ;telecomando.c: 273: LATE = 0x00;
  1701  002982  0E00               	movlw	0
  1702  002984  6E8D               	movwf	3981,c	;volatile
  1703                           
  1704                           ;telecomando.c: 274: TRISE = 0x00;
  1705  002986  0E00               	movlw	0
  1706  002988  6E96               	movwf	3990,c	;volatile
  1707                           
  1708                           ;telecomando.c: 277: LCD_initialize(16);
  1709  00298A  0E10               	movlw	16
  1710  00298C  EC49  F010         	call	_LCD_initialize
  1711                           
  1712                           ;telecomando.c: 278: LCD_backlight(0);
  1713  002990  0E00               	movlw	0
  1714  002992  EC41  F018         	call	_LCD_backlight
  1715                           
  1716                           ;telecomando.c: 279: LCD_clear();
  1717  002996  EC2D  F017         	call	_LCD_clear	;wreg free
  1718                           
  1719                           ;telecomando.c: 280: LCD_goto_line(1);
  1720  00299A  0E01               	movlw	1
  1721  00299C  EC6E  F013         	call	_LCD_goto_line
  1722                           
  1723                           ;telecomando.c: 281: LCD_write_message("Wait...");
  1724  0029A0  0EE7               	movlw	low STR_13
  1725  0029A2  0100               	movlb	0	; () banked
  1726  0029A4  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  1727  0029A6  0E3F               	movlw	high STR_13
  1728  0029A8  0100               	movlb	0	; () banked
  1729  0029AA  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1730  0029AC  ECA4  F017         	call	_LCD_write_message	;wreg free
  1731                           
  1732                           ;telecomando.c: 282: PORTDbits.RD2 = 1;
  1733  0029B0  8483               	bsf	3971,2,c	;volatile
  1734                           
  1735                           ;telecomando.c: 283: delay_s(1);
  1736  0029B2  0E01               	movlw	1
  1737  0029B4  EC8E  F017         	call	_delay_s
  1738                           
  1739                           ;telecomando.c: 284: PORTDbits.RD2 = 0;
  1740  0029B8  9483               	bcf	3971,2,c	;volatile
  1741                           
  1742                           ;telecomando.c: 286: PIR1bits.RCIF = 0;
  1743  0029BA  9A9E               	bcf	3998,5,c	;volatile
  1744                           
  1745                           ;telecomando.c: 287: PIR2bits.TMR3IF = 0;
  1746  0029BC  92A1               	bcf	4001,1,c	;volatile
  1747                           
  1748                           ;telecomando.c: 290: RCONbits.IPEN = 1;
  1749  0029BE  8ED0               	bsf	4048,7,c	;volatile
  1750                           
  1751                           ;telecomando.c: 291: IPR1bits.RCIP = 1;
  1752  0029C0  8A9F               	bsf	3999,5,c	;volatile
  1753                           
  1754                           ;telecomando.c: 292: IPR2bits.TMR3IP = 0;
  1755  0029C2  92A2               	bcf	4002,1,c	;volatile
  1756                           
  1757                           ;telecomando.c: 295: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1758  0029C4  0E4F               	movlw	79
  1759  0029C6  16AB               	andwf	4011,f,c	;volatile
  1760  0029C8  9AAC               	bcf	4012,5,c	;volatile
  1761  0029CA  0ECF               	movlw	207
  1762  0029CC  169D               	andwf	3997,f,c	;volatile
  1763                           
  1764                           ;telecomando.c: 296: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1765                           ;telecomando.c: 297: & 0b11111101 & 0b11111111 & 0b11111111, 103);
  1766  0029CE  0E00               	movlw	0
  1767  0029D0  6E3D               	movwf	OpenUSART@spbrg+1,c
  1768  0029D2  0E67               	movlw	103
  1769  0029D4  6E3C               	movwf	OpenUSART@spbrg,c
  1770  0029D6  0E7C               	movlw	124
  1771  0029D8  EC35  F016         	call	_OpenUSART
  1772                           
  1773                           ;telecomando.c: 300: ADCON1 = 0b00001101;
  1774  0029DC  0E0D               	movlw	13
  1775  0029DE  6EC1               	movwf	4033,c	;volatile
  1776                           
  1777                           ;telecomando.c: 301: ADCON0bits.CHS2 = 0;
  1778  0029E0  98C2               	bcf	4034,4,c	;volatile
  1779                           
  1780                           ;telecomando.c: 302: ADCON0bits.CHS1 = 0;
  1781  0029E2  96C2               	bcf	4034,3,c	;volatile
  1782                           
  1783                           ;telecomando.c: 303: ADCON0bits.CHS0 = 0;
  1784  0029E4  94C2               	bcf	4034,2,c	;volatile
  1785                           
  1786                           ;telecomando.c: 304: ADCON2bits.ACQT2 = 1;
  1787  0029E6  8AC0               	bsf	4032,5,c	;volatile
  1788                           
  1789                           ;telecomando.c: 305: ADCON2bits.ACQT1 = 1;
  1790  0029E8  88C0               	bsf	4032,4,c	;volatile
  1791                           
  1792                           ;telecomando.c: 306: ADCON2bits.ACQT0 = 0;
  1793  0029EA  96C0               	bcf	4032,3,c	;volatile
  1794                           
  1795                           ;telecomando.c: 307: ADCON2bits.ADCS2 = 1;
  1796  0029EC  84C0               	bsf	4032,2,c	;volatile
  1797                           
  1798                           ;telecomando.c: 308: ADCON2bits.ADCS1 = 0;
  1799  0029EE  92C0               	bcf	4032,1,c	;volatile
  1800                           
  1801                           ;telecomando.c: 309: ADCON2bits.ADCS0 = 1;
  1802  0029F0  80C0               	bsf	4032,0,c	;volatile
  1803                           
  1804                           ;telecomando.c: 310: ADCON2bits.ADFM = 0;
  1805  0029F2  9EC0               	bcf	4032,7,c	;volatile
  1806                           
  1807                           ;telecomando.c: 311: ADCON0bits.ADON = 1;
  1808  0029F4  80C2               	bsf	4034,0,c	;volatile
  1809                           
  1810                           ;telecomando.c: 314: TMR3H = 0x63;
  1811  0029F6  0E63               	movlw	99
  1812  0029F8  6EB3               	movwf	4019,c	;volatile
  1813                           
  1814                           ;telecomando.c: 315: TMR3L = 0xC0;
  1815  0029FA  0EC0               	movlw	192
  1816  0029FC  6EB2               	movwf	4018,c	;volatile
  1817                           
  1818                           ;telecomando.c: 318: PIE1bits.RCIE = 1;
  1819  0029FE  8A9D               	bsf	3997,5,c	;volatile
  1820                           
  1821                           ;telecomando.c: 319: PIE2bits.TMR3IE = 1;
  1822  002A00  82A0               	bsf	4000,1,c	;volatile
  1823                           
  1824                           ;telecomando.c: 320: INTCONbits.GIEH = 1;
  1825  002A02  8EF2               	bsf	intcon,7,c	;volatile
  1826                           
  1827                           ;telecomando.c: 321: INTCONbits.GIEL = 1;
  1828  002A04  8CF2               	bsf	intcon,6,c	;volatile
  1829                           
  1830                           ;telecomando.c: 323: RCSTAbits.SPEN = 1;
  1831  002A06  8EAB               	bsf	4011,7,c	;volatile
  1832                           
  1833                           ;telecomando.c: 324: delay_ms(2);
  1834  002A08  0E00               	movlw	0
  1835  002A0A  0100               	movlb	0	; () banked
  1836  002A0C  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1837  002A0E  0E02               	movlw	2
  1838  002A10  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1839  002A12  EC46  F017         	call	_delay_ms	;wreg free
  1840                           
  1841                           ;telecomando.c: 325: T3CON = 0x01;
  1842  002A16  0E01               	movlw	1
  1843  002A18  6EB1               	movwf	4017,c	;volatile
  1844                           
  1845                           ;telecomando.c: 326: LCD_clear();
  1846  002A1A  EC2D  F017         	call	_LCD_clear	;wreg free
  1847  002A1E  0012               	return		;funcret
  1848  002A20                     __end_of_board_initialization:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodl	equ	0xFF3
  1855                           intcon	equ	0xFF2
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _delay_s *****************
  1861 ;; Defined at:
  1862 ;;		line 102 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  value_s         1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  value_s         1   18[BANK0 ] unsigned char 
  1867 ;;  repeat_loop     1   19[BANK0 ] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1877 ;;      Params:         0       0       0       0
  1878 ;;      Locals:         0       2       0       0
  1879 ;;      Temps:          0       0       0       0
  1880 ;;      Totals:         0       2       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    6
  1884 ;; This function calls:
  1885 ;;		_delay_ms
  1886 ;; This function is called by:
  1887 ;;		_board_initialization
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text2
  1892  002F1C                     __ptext2:
  1893                           	opt stack 0
  1894  002F1C                     _delay_s:
  1895                           	opt stack 23
  1896                           
  1897                           ;incstack = 0
  1898                           ;delay_s@value_s stored from wreg
  1899  002F1C  0100               	movlb	0	; () banked
  1900  002F1E  6F72               	movwf	delay_s@value_s& (0+255),b
  1901                           
  1902                           ;src\delay.c: 104: unsigned char repeat_loop;
  1903                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1904  002F20  0E00               	movlw	0
  1905  002F22  0100               	movlb	0	; () banked
  1906  002F24  6F73               	movwf	delay_s@repeat_loop& (0+255),b
  1907  002F26  D009               	goto	l5065
  1908  002F28                     l5061:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;src\delay.c: 107: delay_ms (1000);
  1912  002F28  0E03               	movlw	3
  1913  002F2A  0100               	movlb	0	; () banked
  1914  002F2C  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1915  002F2E  0EE8               	movlw	232
  1916  002F30  6F70               	movwf	delay_ms@value_ms& (0+255),b
  1917  002F32  EC46  F017         	call	_delay_ms	;wreg free
  1918  002F36  0100               	movlb	0	; () banked
  1919  002F38  2B73               	incf	delay_s@repeat_loop& (0+255),f,b
  1920  002F3A                     l5065:
  1921                           
  1922                           ; BSR set to: 0
  1923  002F3A  0100               	movlb	0	; () banked
  1924  002F3C  5172               	movf	delay_s@value_s& (0+255),w,b
  1925  002F3E  0100               	movlb	0	; () banked
  1926  002F40  5D73               	subwf	delay_s@repeat_loop& (0+255),w,b
  1927  002F42  B0D8               	btfsc	status,0,c
  1928  002F44  0012               	return	
  1929  002F46  D7F0               	goto	l5061
  1930  002F48                     __end_of_delay_s:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodl	equ	0xFF3
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _OpenUSART *****************
  1943 ;; Defined at:
  1944 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  config          1    wreg     unsigned char 
  1947 ;;  spbrg           2   24[COMRAM] unsigned int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  config          1   26[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;		None               void
  1952 ;; Registers used:
  1953 ;;		wreg, status,2
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1959 ;;      Params:         2       0       0       0
  1960 ;;      Locals:         1       0       0       0
  1961 ;;      Temps:          0       0       0       0
  1962 ;;      Totals:         3       0       0       0
  1963 ;;Total ram usage:        3 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_board_initialization
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text3
  1974  002C6A                     __ptext3:
  1975                           	opt stack 0
  1976  002C6A                     _OpenUSART:
  1977                           	opt stack 25
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;incstack = 0
  1981                           ;OpenUSART@config stored from wreg
  1982  002C6A  6E3E               	movwf	OpenUSART@config,c
  1983  002C6C  0E00               	movlw	0
  1984  002C6E  6EAC               	movwf	4012,c	;volatile
  1985  002C70  0E00               	movlw	0
  1986  002C72  6EAB               	movwf	4011,c	;volatile
  1987  002C74  B03E               	btfsc	OpenUSART@config,0,c
  1988  002C76  88AC               	bsf	4012,4,c	;volatile
  1989  002C78  A23E               	btfss	OpenUSART@config,1,c
  1990  002C7A  D002               	goto	l3793
  1991  002C7C  8CAC               	bsf	4012,6,c	;volatile
  1992  002C7E  8CAB               	bsf	4011,6,c	;volatile
  1993  002C80                     l3793:
  1994  002C80  B43E               	btfsc	OpenUSART@config,2,c
  1995  002C82  8EAC               	bsf	4012,7,c	;volatile
  1996  002C84  A63E               	btfss	OpenUSART@config,3,c
  1997  002C86  D002               	goto	l419
  1998  002C88  88AB               	bsf	4011,4,c	;volatile
  1999  002C8A  D001               	goto	l3801
  2000  002C8C                     l419:
  2001  002C8C  8AAB               	bsf	4011,5,c	;volatile
  2002  002C8E                     l3801:
  2003  002C8E  B83E               	btfsc	OpenUSART@config,4,c
  2004  002C90  84AC               	bsf	4012,2,c	;volatile
  2005  002C92  989E               	bcf	3998,4,c	;volatile
  2006  002C94  BA3E               	btfsc	OpenUSART@config,5,c
  2007  002C96  86AB               	bsf	4011,3,c	;volatile
  2008  002C98  AC3E               	btfss	OpenUSART@config,6,c
  2009  002C9A  D002               	goto	l423
  2010  002C9C  8A9D               	bsf	3997,5,c	;volatile
  2011  002C9E  D001               	goto	l424
  2012  002CA0                     l423:
  2013  002CA0  9A9D               	bcf	3997,5,c	;volatile
  2014  002CA2                     l424:
  2015  002CA2  9A9E               	bcf	3998,5,c	;volatile
  2016  002CA4  AE3E               	btfss	OpenUSART@config,7,c
  2017  002CA6  D002               	goto	l425
  2018  002CA8  889D               	bsf	3997,4,c	;volatile
  2019  002CAA  D001               	goto	l426
  2020  002CAC                     l425:
  2021  002CAC  989D               	bcf	3997,4,c	;volatile
  2022  002CAE                     l426:
  2023  002CAE  C03C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2024  002CB2  503D               	movf	OpenUSART@spbrg+1,w,c
  2025  002CB4  6EB0               	movwf	4016,c	;volatile
  2026  002CB6  8AAC               	bsf	4012,5,c	;volatile
  2027  002CB8  8EAB               	bsf	4011,7,c	;volatile
  2028  002CBA  9C94               	bcf	3988,6,c	;volatile
  2029  002CBC  8E94               	bsf	3988,7,c	;volatile
  2030  002CBE  A8AC               	btfss	4012,4,c	;volatile
  2031  002CC0  0012               	return	
  2032  002CC2  BEAC               	btfsc	4012,7,c	;volatile
  2033  002CC4  0012               	return	
  2034  002CC6  8C94               	bsf	3988,6,c	;volatile
  2035  002CC8  0012               	return	
  2036  002CCA                     __end_of_OpenUSART:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           prodl	equ	0xFF3
  2043                           intcon	equ	0xFF2
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _LCD_initialize *****************
  2049 ;; Defined at:
  2050 ;;		line 283 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  quartz_frequ    1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  quartz_frequ    1   23[BANK0 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;		None               void
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2064 ;;      Params:         0       0       0       0
  2065 ;;      Locals:         0       1       0       0
  2066 ;;      Temps:          0       0       0       0
  2067 ;;      Totals:         0       1       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    9
  2071 ;; This function calls:
  2072 ;;		_LCD_clear
  2073 ;;		_LCD_cursor
  2074 ;;		_LCD_send_command
  2075 ;;		_delay_ms
  2076 ;;		_delay_set_quartz
  2077 ;; This function is called by:
  2078 ;;		_board_initialization
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text4
  2083  002092                     __ptext4:
  2084                           	opt stack 0
  2085  002092                     _LCD_initialize:
  2086                           	opt stack 20
  2087                           
  2088                           ;incstack = 0
  2089                           ;LCD_initialize@quartz_frequency stored from wreg
  2090  002092  0100               	movlb	0	; () banked
  2091  002094  6F77               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2092                           
  2093                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2094  002096  0100               	movlb	0	; () banked
  2095  002098  5177               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2096  00209A  EC48  F018         	call	_delay_set_quartz
  2097                           
  2098                           ;src\LCD_44780.c: 287: PORTEbits.RE2 = 0x00;
  2099  00209E  9484               	bcf	3972,2,c	;volatile
  2100                           
  2101                           ;src\LCD_44780.c: 288: PORTCbits.RC1 = 0x00;
  2102  0020A0  9282               	bcf	3970,1,c	;volatile
  2103                           
  2104                           ;src\LCD_44780.c: 289: PORTCbits.RC0 = 0x00;
  2105  0020A2  9082               	bcf	3970,0,c	;volatile
  2106                           
  2107                           ;src\LCD_44780.c: 291: delay_ms (100);
  2108  0020A4  0E00               	movlw	0
  2109  0020A6  0100               	movlb	0	; () banked
  2110  0020A8  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2111  0020AA  0E64               	movlw	100
  2112  0020AC  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2113  0020AE  EC46  F017         	call	_delay_ms	;wreg free
  2114                           
  2115                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2116  0020B2  0E00               	movlw	0
  2117  0020B4  0100               	movlb	0	; () banked
  2118  0020B6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2119  0020B8  0E01               	movlw	1
  2120  0020BA  0100               	movlb	0	; () banked
  2121  0020BC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2122  0020BE  0E01               	movlw	1
  2123  0020C0  0100               	movlb	0	; () banked
  2124  0020C2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2125  0020C4  0E00               	movlw	0
  2126  0020C6  ECF9  F016         	call	_LCD_send_command
  2127                           
  2128                           ;src\LCD_44780.c: 293: delay_ms (100);
  2129  0020CA  0E00               	movlw	0
  2130  0020CC  0100               	movlb	0	; () banked
  2131  0020CE  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2132  0020D0  0E64               	movlw	100
  2133  0020D2  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2134  0020D4  EC46  F017         	call	_delay_ms	;wreg free
  2135                           
  2136                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2137  0020D8  0E00               	movlw	0
  2138  0020DA  0100               	movlb	0	; () banked
  2139  0020DC  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2140  0020DE  0E01               	movlw	1
  2141  0020E0  0100               	movlb	0	; () banked
  2142  0020E2  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2143  0020E4  0E01               	movlw	1
  2144  0020E6  0100               	movlb	0	; () banked
  2145  0020E8  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2146  0020EA  0E00               	movlw	0
  2147  0020EC  ECF9  F016         	call	_LCD_send_command
  2148                           
  2149                           ;src\LCD_44780.c: 295: delay_ms (10);
  2150  0020F0  0E00               	movlw	0
  2151  0020F2  0100               	movlb	0	; () banked
  2152  0020F4  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2153  0020F6  0E0A               	movlw	10
  2154  0020F8  6F70               	movwf	delay_ms@value_ms& (0+255),b
  2155  0020FA  EC46  F017         	call	_delay_ms	;wreg free
  2156                           
  2157                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2158  0020FE  0E00               	movlw	0
  2159  002100  0100               	movlb	0	; () banked
  2160  002102  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2161  002104  0E01               	movlw	1
  2162  002106  0100               	movlb	0	; () banked
  2163  002108  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2164  00210A  0E01               	movlw	1
  2165  00210C  0100               	movlb	0	; () banked
  2166  00210E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2167  002110  0E00               	movlw	0
  2168  002112  ECF9  F016         	call	_LCD_send_command
  2169                           
  2170                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2171  002116  0E00               	movlw	0
  2172  002118  0100               	movlb	0	; () banked
  2173  00211A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2174  00211C  0E01               	movlw	1
  2175  00211E  0100               	movlb	0	; () banked
  2176  002120  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2177  002122  0E00               	movlw	0
  2178  002124  0100               	movlb	0	; () banked
  2179  002126  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2180  002128  0E00               	movlw	0
  2181  00212A  ECF9  F016         	call	_LCD_send_command
  2182                           
  2183                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2184  00212E  0E00               	movlw	0
  2185  002130  0100               	movlb	0	; () banked
  2186  002132  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2187  002134  0E01               	movlw	1
  2188  002136  0100               	movlb	0	; () banked
  2189  002138  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2190  00213A  0E00               	movlw	0
  2191  00213C  0100               	movlb	0	; () banked
  2192  00213E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2193  002140  0E00               	movlw	0
  2194  002142  ECF9  F016         	call	_LCD_send_command
  2195                           
  2196                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2197  002146  0E00               	movlw	0
  2198  002148  0100               	movlb	0	; () banked
  2199  00214A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2200  00214C  0E00               	movlw	0
  2201  00214E  0100               	movlb	0	; () banked
  2202  002150  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2203  002152  0E00               	movlw	0
  2204  002154  0100               	movlb	0	; () banked
  2205  002156  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2206  002158  0E01               	movlw	1
  2207  00215A  ECF9  F016         	call	_LCD_send_command
  2208                           
  2209                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2210  00215E  0E00               	movlw	0
  2211  002160  0100               	movlb	0	; () banked
  2212  002162  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2213  002164  0E00               	movlw	0
  2214  002166  0100               	movlb	0	; () banked
  2215  002168  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2216  00216A  0E00               	movlw	0
  2217  00216C  0100               	movlb	0	; () banked
  2218  00216E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2219  002170  0E00               	movlw	0
  2220  002172  ECF9  F016         	call	_LCD_send_command
  2221                           
  2222                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2223  002176  0E00               	movlw	0
  2224  002178  0100               	movlb	0	; () banked
  2225  00217A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2226  00217C  0E00               	movlw	0
  2227  00217E  0100               	movlb	0	; () banked
  2228  002180  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2229  002182  0E00               	movlw	0
  2230  002184  0100               	movlb	0	; () banked
  2231  002186  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2232  002188  0E01               	movlw	1
  2233  00218A  ECF9  F016         	call	_LCD_send_command
  2234                           
  2235                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2236  00218E  0E00               	movlw	0
  2237  002190  0100               	movlb	0	; () banked
  2238  002192  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2239  002194  0E00               	movlw	0
  2240  002196  0100               	movlb	0	; () banked
  2241  002198  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2242  00219A  0E00               	movlw	0
  2243  00219C  0100               	movlb	0	; () banked
  2244  00219E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2245  0021A0  0E00               	movlw	0
  2246  0021A2  ECF9  F016         	call	_LCD_send_command
  2247                           
  2248                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2249  0021A6  0E00               	movlw	0
  2250  0021A8  0100               	movlb	0	; () banked
  2251  0021AA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2252  0021AC  0E00               	movlw	0
  2253  0021AE  0100               	movlb	0	; () banked
  2254  0021B0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2255  0021B2  0E01               	movlw	1
  2256  0021B4  0100               	movlb	0	; () banked
  2257  0021B6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2258  0021B8  0E00               	movlw	0
  2259  0021BA  ECF9  F016         	call	_LCD_send_command
  2260                           
  2261                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2262  0021BE  0E00               	movlw	0
  2263  0021C0  0100               	movlb	0	; () banked
  2264  0021C2  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2265  0021C4  0E00               	movlw	0
  2266  0021C6  0100               	movlb	0	; () banked
  2267  0021C8  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2268  0021CA  0E00               	movlw	0
  2269  0021CC  0100               	movlb	0	; () banked
  2270  0021CE  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2271  0021D0  0E00               	movlw	0
  2272  0021D2  ECF9  F016         	call	_LCD_send_command
  2273                           
  2274                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2275  0021D6  0E01               	movlw	1
  2276  0021D8  0100               	movlb	0	; () banked
  2277  0021DA  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2278  0021DC  0E01               	movlw	1
  2279  0021DE  0100               	movlb	0	; () banked
  2280  0021E0  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2281  0021E2  0E00               	movlw	0
  2282  0021E4  0100               	movlb	0	; () banked
  2283  0021E6  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2284  0021E8  0E00               	movlw	0
  2285  0021EA  ECF9  F016         	call	_LCD_send_command
  2286                           
  2287                           ;src\LCD_44780.c: 312: LCD_clear ();
  2288  0021EE  EC2D  F017         	call	_LCD_clear	;wreg free
  2289                           
  2290                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2291  0021F2  0E00               	movlw	0
  2292  0021F4  0100               	movlb	0	; () banked
  2293  0021F6  6F75               	movwf	LCD_cursor@blinking& (0+255),b
  2294  0021F8  0E00               	movlw	0
  2295  0021FA  EC14  F017         	call	_LCD_cursor
  2296  0021FE  0012               	return		;funcret
  2297  002200                     __end_of_LCD_initialize:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           prodl	equ	0xFF3
  2304                           intcon	equ	0xFF2
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _delay_set_quartz *****************
  2310 ;; Defined at:
  2311 ;;		line 115 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  frequency       1    wreg     unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  frequency       1   24[COMRAM] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2325 ;;      Params:         0       0       0       0
  2326 ;;      Locals:         1       0       0       0
  2327 ;;      Temps:          0       0       0       0
  2328 ;;      Totals:         1       0       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    4
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_LCD_initialize
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text5
  2340  003090                     __ptext5:
  2341                           	opt stack 0
  2342  003090                     _delay_set_quartz:
  2343                           	opt stack 24
  2344                           
  2345                           ;incstack = 0
  2346                           ;delay_set_quartz@frequency stored from wreg
  2347  003090  6E3C               	movwf	delay_set_quartz@frequency,c
  2348                           
  2349                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2350  003092  C03C  F046         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2351  003096  0012               	return		;funcret
  2352  003098                     __end_of_delay_set_quartz:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodl	equ	0xFF3
  2359                           intcon	equ	0xFF2
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _LCD_cursor *****************
  2365 ;; Defined at:
  2366 ;;		line 266 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  active          1    wreg     unsigned char 
  2369 ;;  blinking        1   21[BANK0 ] unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  active          1   22[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2381 ;;      Params:         0       1       0       0
  2382 ;;      Locals:         0       1       0       0
  2383 ;;      Temps:          0       0       0       0
  2384 ;;      Totals:         0       2       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    8
  2388 ;; This function calls:
  2389 ;;		_LCD_send_command
  2390 ;; This function is called by:
  2391 ;;		_LCD_initialize
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text6
  2396  002E28                     __ptext6:
  2397                           	opt stack 0
  2398  002E28                     _LCD_cursor:
  2399                           	opt stack 20
  2400                           
  2401                           ;incstack = 0
  2402                           ;LCD_cursor@active stored from wreg
  2403  002E28  0100               	movlb	0	; () banked
  2404  002E2A  6F76               	movwf	LCD_cursor@active& (0+255),b
  2405                           
  2406                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2407  002E2C  0E00               	movlw	0
  2408  002E2E  0100               	movlb	0	; () banked
  2409  002E30  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2410  002E32  0E00               	movlw	0
  2411  002E34  0100               	movlb	0	; () banked
  2412  002E36  6F73               	movwf	LCD_send_command@D1& (0+255),b
  2413  002E38  0E00               	movlw	0
  2414  002E3A  0100               	movlb	0	; () banked
  2415  002E3C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  2416  002E3E  0E00               	movlw	0
  2417  002E40  ECF9  F016         	call	_LCD_send_command
  2418                           
  2419                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2420  002E44  0E01               	movlw	1
  2421  002E46  0100               	movlb	0	; () banked
  2422  002E48  6F72               	movwf	LCD_send_command@D2& (0+255),b
  2423  002E4A  C076  F073         	movff	LCD_cursor@active,LCD_send_command@D1
  2424  002E4E  C075  F074         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2425  002E52  0E01               	movlw	1
  2426  002E54  ECF9  F016         	call	_LCD_send_command
  2427  002E58  0012               	return		;funcret
  2428  002E5A                     __end_of_LCD_cursor:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _LCD_backlight *****************
  2441 ;; Defined at:
  2442 ;;		line 275 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  active          1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  active          1   24[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;		None               void
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2456 ;;      Params:         0       0       0       0
  2457 ;;      Locals:         1       0       0       0
  2458 ;;      Temps:          0       0       0       0
  2459 ;;      Totals:         1       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    4
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_board_initialization
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text7
  2471  003082                     __ptext7:
  2472                           	opt stack 0
  2473  003082                     _LCD_backlight:
  2474                           	opt stack 25
  2475                           
  2476                           ;incstack = 0
  2477                           ;LCD_backlight@active stored from wreg
  2478  003082  6E3C               	movwf	LCD_backlight@active,c
  2479                           
  2480                           ;src\LCD_44780.c: 277: PORTEbits.RE1 = active;
  2481  003084  B03C               	btfsc	LCD_backlight@active,0,c
  2482  003086  D002               	bra	u3615
  2483  003088  9284               	bcf	3972,1,c	;volatile
  2484  00308A  D001               	bra	u3616
  2485  00308C                     u3615:
  2486  00308C  8284               	bsf	3972,1,c	;volatile
  2487  00308E                     u3616:
  2488  00308E  0012               	return		;funcret
  2489  003090                     __end_of_LCD_backlight:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           prodl	equ	0xFF3
  2496                           intcon	equ	0xFF2
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function _USART_Send *****************
  2502 ;; Defined at:
  2503 ;;		line 222 in file "telecomando.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2517 ;;      Params:         0       0       0       0
  2518 ;;      Locals:         0       0       0       0
  2519 ;;      Temps:          0       0       0       0
  2520 ;;      Totals:         0       0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    6
  2524 ;; This function calls:
  2525 ;;		_putsUSART
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text8
  2532  002EBE                     __ptext8:
  2533                           	opt stack 0
  2534  002EBE                     _USART_Send:
  2535                           	opt stack 24
  2536                           
  2537                           ;telecomando.c: 223: set_speed_pk1 = set_speed >> 8;
  2538                           
  2539                           ;incstack = 0
  2540  002EBE  500E               	movf	_set_speed+1,w,c	;volatile
  2541  002EC0  6E17               	movwf	_set_speed_pk1,c	;volatile
  2542                           
  2543                           ;telecomando.c: 224: set_speed_pk0 = set_speed;
  2544  002EC2  C00D  F016         	movff	_set_speed,_set_speed_pk0	;volatile
  2545                           
  2546                           ;telecomando.c: 225: USART_Tx[1] = dir;
  2547  002EC6  0E00               	movlw	0
  2548  002EC8  B243               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  2549  002ECA  0E01               	movlw	1
  2550  002ECC  0100               	movlb	0	; () banked
  2551  002ECE  6FEA               	movwf	(_USART_Tx+1)& (0+255),b
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;telecomando.c: 226: USART_Tx[2] = set_speed_pk1;
  2555  002ED0  C017  F0EB         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;telecomando.c: 227: USART_Tx[3] = set_speed_pk0;
  2559  002ED4  C016  F0EC         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;telecomando.c: 228: USART_Tx[4] = set_steering;
  2563  002ED8  C018  F0ED         	movff	_set_steering,_USART_Tx+4	;volatile
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;telecomando.c: 229: USART_Tx[5] = analogic_brake;
  2567  002EDC  C014  F0EE         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;telecomando.c: 231: putsUSART((char *) USART_Tx);
  2571  002EE0  0EE9               	movlw	low _USART_Tx
  2572  002EE2  6E3D               	movwf	putsUSART@data,c
  2573  002EE4  0E00               	movlw	high _USART_Tx
  2574  002EE6  6E3E               	movwf	putsUSART@data+1,c
  2575  002EE8  ECD0  F017         	call	_putsUSART	;wreg free
  2576  002EEC  0012               	return		;funcret
  2577  002EEE                     __end_of_USART_Send:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodl	equ	0xFF3
  2584                           intcon	equ	0xFF2
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _putsUSART *****************
  2590 ;; Defined at:
  2591 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  data            2   25[COMRAM] PTR unsigned char 
  2594 ;;		 -> USART_Tx(7), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2606 ;;      Params:         2       0       0       0
  2607 ;;      Locals:         0       0       0       0
  2608 ;;      Temps:          0       0       0       0
  2609 ;;      Totals:         2       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    5
  2613 ;; This function calls:
  2614 ;;		_WriteUSART
  2615 ;; This function is called by:
  2616 ;;		_USART_Send
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text9
  2621  002FA0                     __ptext9:
  2622                           	opt stack 0
  2623  002FA0                     _putsUSART:
  2624                           	opt stack 24
  2625  002FA0                     l436:
  2626  002FA0  A2AC               	btfss	4012,1,c	;volatile
  2627  002FA2  D7FE               	goto	l436
  2628  002FA4  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2629  002FA8  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2630  002FAC  50DF               	movf	indf2,w,c
  2631  002FAE  EC38  F018         	call	_WriteUSART
  2632  002FB2  C03D  FFD9         	movff	putsUSART@data,fsr2l
  2633  002FB6  C03E  FFDA         	movff	putsUSART@data+1,fsr2h
  2634  002FBA  4A3D               	infsnz	putsUSART@data,f,c
  2635  002FBC  2A3E               	incf	putsUSART@data+1,f,c
  2636  002FBE  50DF               	movf	indf2,w,c
  2637  002FC0  B4D8               	btfsc	status,2,c
  2638  002FC2  0012               	return	
  2639  002FC4  D7ED               	goto	l436
  2640  002FC6                     __end_of_putsUSART:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodl	equ	0xFF3
  2647                           intcon	equ	0xFF2
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           indf2	equ	0xFDF
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _WriteUSART *****************
  2656 ;; Defined at:
  2657 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  data            1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  data            1   24[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2671 ;;      Params:         0       0       0       0
  2672 ;;      Locals:         1       0       0       0
  2673 ;;      Temps:          0       0       0       0
  2674 ;;      Totals:         1       0       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_putsUSART
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text10
  2686  003070                     __ptext10:
  2687                           	opt stack 0
  2688  003070                     _WriteUSART:
  2689                           	opt stack 24
  2690                           
  2691                           ;incstack = 0
  2692                           ;WriteUSART@data stored from wreg
  2693  003070  6E3C               	movwf	WriteUSART@data,c
  2694  003072  ACAC               	btfss	4012,6,c	;volatile
  2695  003074  D003               	goto	l3331
  2696  003076  90AC               	bcf	4012,0,c	;volatile
  2697  003078  B211               	btfsc	_USART_Status,1,c
  2698  00307A  80AC               	bsf	4012,0,c	;volatile
  2699  00307C                     l3331:
  2700  00307C  C03C  FFAD         	movff	WriteUSART@data,4013	;volatile
  2701  003080  0012               	return		;funcret
  2702  003082                     __end_of_WriteUSART:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf2	equ	0xFDF
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _LCD_Handler *****************
  2718 ;; Defined at:
  2719 ;;		line 234 in file "telecomando.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2733 ;;      Params:         0       0       0       0
  2734 ;;      Locals:         0       0       0       0
  2735 ;;      Temps:          0       0       0       0
  2736 ;;      Totals:         0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:   10
  2740 ;; This function calls:
  2741 ;;		_LCD_clear
  2742 ;;		_LCD_goto_line
  2743 ;;		_LCD_write_message
  2744 ;;		_LCD_write_string
  2745 ;;		___lwdiv
  2746 ;;		___xxtofl
  2747 ;;		_sprintf
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text11
  2754  0024BA                     __ptext11:
  2755                           	opt stack 0
  2756  0024BA                     _LCD_Handler:
  2757                           	opt stack 20
  2758                           
  2759                           ;telecomando.c: 235: actual_speed_kmh = actual_speed / 278;
  2760                           
  2761                           ;incstack = 0
  2762  0024BA  0E01               	movlw	1
  2763  0024BC  6E3F               	movwf	___lwdiv@divisor+1,c
  2764  0024BE  0E16               	movlw	22
  2765  0024C0  6E3E               	movwf	___lwdiv@divisor,c
  2766  0024C2  C0E0  F03C         	movff	_actual_speed,___lwdiv@dividend	;volatile
  2767  0024C6  C0E1  F03D         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  2768  0024CA  EC65  F016         	call	___lwdiv	;wreg free
  2769  0024CE  C03C  F070         	movff	?___lwdiv,___xxtofl@val
  2770  0024D2  C03D  F071         	movff	?___lwdiv+1,___xxtofl@val+1
  2771  0024D6  0100               	movlb	0	; () banked
  2772  0024D8  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2773  0024DA  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2774  0024DC  0E00               	movlw	0
  2775  0024DE  EC99  F00E         	call	___xxtofl
  2776  0024E2  C070  F0D8         	movff	?___xxtofl,_actual_speed_kmh
  2777  0024E6  C071  F0D9         	movff	?___xxtofl+1,_actual_speed_kmh+1
  2778  0024EA  C072  F0DA         	movff	?___xxtofl+2,_actual_speed_kmh+2
  2779  0024EE  C073  F0DB         	movff	?___xxtofl+3,_actual_speed_kmh+3
  2780                           
  2781                           ;telecomando.c: 237: LCD_clear();
  2782  0024F2  EC2D  F017         	call	_LCD_clear	;wreg free
  2783                           
  2784                           ;telecomando.c: 238: LCD_goto_line(1);
  2785  0024F6  0E01               	movlw	1
  2786  0024F8  EC6E  F013         	call	_LCD_goto_line
  2787                           
  2788                           ;telecomando.c: 239: LCD_write_message("=== VEHICLE DATA ===");
  2789  0024FC  0EA5               	movlw	low STR_5
  2790  0024FE  0100               	movlb	0	; () banked
  2791  002500  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2792  002502  0E3F               	movlw	high STR_5
  2793  002504  0100               	movlb	0	; () banked
  2794  002506  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2795  002508  ECA4  F017         	call	_LCD_write_message	;wreg free
  2796                           
  2797                           ;telecomando.c: 241: LCD_goto_line(2);
  2798  00250C  0E02               	movlw	2
  2799  00250E  EC6E  F013         	call	_LCD_goto_line
  2800                           
  2801                           ;telecomando.c: 242: LCD_write_message("Direction: ");
  2802  002512  0ECF               	movlw	low STR_6
  2803  002514  0100               	movlb	0	; () banked
  2804  002516  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2805  002518  0E3F               	movlw	high STR_6
  2806  00251A  0100               	movlb	0	; () banked
  2807  00251C  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2808  00251E  ECA4  F017         	call	_LCD_write_message	;wreg free
  2809                           
  2810                           ;telecomando.c: 243: if (switch_position != 0) {
  2811  002522  5019               	movf	_switch_position,w,c	;volatile
  2812  002524  B4D8               	btfsc	status,2,c
  2813  002526  D014               	goto	l5453
  2814                           
  2815                           ;telecomando.c: 244: if (dir == 1) {
  2816  002528  A243               	btfss	_dir/(0+8),_dir& (0+7),c	;volatile
  2817  00252A  D009               	goto	l5451
  2818                           
  2819                           ;telecomando.c: 245: LCD_write_message("FWD");
  2820  00252C  0EF9               	movlw	low STR_7
  2821  00252E  0100               	movlb	0	; () banked
  2822  002530  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2823  002532  0E3F               	movlw	high STR_7
  2824  002534  0100               	movlb	0	; () banked
  2825  002536  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2826  002538  ECA4  F017         	call	_LCD_write_message	;wreg free
  2827                           
  2828                           ;telecomando.c: 246: } else {
  2829  00253C  D011               	goto	l5455
  2830  00253E                     l5451:
  2831                           
  2832                           ;telecomando.c: 247: LCD_write_message("BKWD");
  2833  00253E  0EEF               	movlw	low STR_8
  2834  002540  0100               	movlb	0	; () banked
  2835  002542  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2836  002544  0E3F               	movlw	high STR_8
  2837  002546  0100               	movlb	0	; () banked
  2838  002548  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2839  00254A  ECA4  F017         	call	_LCD_write_message	;wreg free
  2840                           
  2841                           ;telecomando.c: 248: }
  2842                           ;telecomando.c: 249: } else {
  2843  00254E  D008               	goto	l5455
  2844  002550                     l5453:
  2845                           
  2846                           ;telecomando.c: 250: LCD_write_message("P");
  2847  002550  0EFD               	movlw	low STR_9
  2848  002552  0100               	movlb	0	; () banked
  2849  002554  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2850  002556  0E3F               	movlw	high STR_9
  2851  002558  0100               	movlb	0	; () banked
  2852  00255A  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2853  00255C  ECA4  F017         	call	_LCD_write_message	;wreg free
  2854  002560                     l5455:
  2855                           
  2856                           ;telecomando.c: 251: }
  2857                           ;telecomando.c: 253: LCD_goto_line(3);
  2858  002560  0E03               	movlw	3
  2859  002562  EC6E  F013         	call	_LCD_goto_line
  2860                           
  2861                           ;telecomando.c: 254: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  2862  002566  0E19               	movlw	low _str
  2863  002568  0100               	movlb	0	; () banked
  2864  00256A  6FC0               	movwf	sprintf@sp& (0+255),b
  2865  00256C  0E01               	movlw	high _str
  2866  00256E  0100               	movlb	0	; () banked
  2867  002570  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  2868  002572  0EDB               	movlw	low STR_10
  2869  002574  0100               	movlb	0	; () banked
  2870  002576  6FC2               	movwf	sprintf@f& (0+255),b
  2871  002578  0E3F               	movlw	high STR_10
  2872  00257A  0100               	movlb	0	; () banked
  2873  00257C  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  2874  00257E  C0D8  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  2875  002582  C0D9  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  2876  002586  C0DA  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  2877  00258A  C0DB  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  2878  00258E  EC62  F000         	call	_sprintf	;wreg free
  2879                           
  2880                           ;telecomando.c: 255: str[11] = '\0';
  2881  002592  0E00               	movlw	0
  2882  002594  0101               	movlb	1	; () banked
  2883  002596  6F24               	movwf	(_str+11)& (0+255),b
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;telecomando.c: 256: LCD_write_string(str);
  2887  002598  0E19               	movlw	low _str
  2888  00259A  0100               	movlb	0	; () banked
  2889  00259C  6F7A               	movwf	LCD_write_string@buffer& (0+255),b
  2890  00259E  0E01               	movlw	high _str
  2891  0025A0  0100               	movlb	0	; () banked
  2892  0025A2  6F7B               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2893  0025A4  ECE3  F017         	call	_LCD_write_string	;wreg free
  2894                           
  2895                           ;telecomando.c: 257: LCD_write_message("Km/h");
  2896  0025A8  0EF4               	movlw	low STR_11
  2897  0025AA  0100               	movlb	0	; () banked
  2898  0025AC  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2899  0025AE  0E3F               	movlw	high STR_11
  2900  0025B0  0100               	movlb	0	; () banked
  2901  0025B2  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2902  0025B4  ECA4  F017         	call	_LCD_write_message	;wreg free
  2903                           
  2904                           ;telecomando.c: 259: LCD_goto_line(4);
  2905  0025B8  0E04               	movlw	4
  2906  0025BA  EC6E  F013         	call	_LCD_goto_line
  2907                           
  2908                           ;telecomando.c: 260: LCD_write_message("====================");
  2909  0025BE  0EBA               	movlw	low STR_1
  2910  0025C0  0100               	movlb	0	; () banked
  2911  0025C2  6F7A               	movwf	LCD_write_message@buffer& (0+255),b
  2912  0025C4  0E3F               	movlw	high STR_1
  2913  0025C6  0100               	movlb	0	; () banked
  2914  0025C8  6F7B               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2915  0025CA  ECA4  F017         	call	_LCD_write_message	;wreg free
  2916  0025CE  0012               	return		;funcret
  2917  0025D0                     __end_of_LCD_Handler:
  2918                           	opt stack 0
  2919                           tblptru	equ	0xFF8
  2920                           tblptrh	equ	0xFF7
  2921                           tblptrl	equ	0xFF6
  2922                           tablat	equ	0xFF5
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           indf2	equ	0xFDF
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _sprintf *****************
  2933 ;; Defined at:
  2934 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  2937 ;;		 -> str(12), 
  2938 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  2939 ;;		 -> STR_10(12), 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2942 ;;  tmpval          4   14[BANK1 ] struct .
  2943 ;;  val             4    8[BANK1 ] unsigned long 
  2944 ;;  cp              3    0        PTR const unsigned char 
  2945 ;;  prec            2   18[BANK1 ] int 
  2946 ;;  exp             2   12[BANK1 ] int 
  2947 ;;  flag            2    6[BANK1 ] unsigned short 
  2948 ;;  ap              2    4[BANK1 ] PTR void [1]
  2949 ;;		 -> ?_sprintf(2), 
  2950 ;;  len             2    0        unsigned int 
  2951 ;;  width           2    0        int 
  2952 ;;  c               1   24[BANK1 ] char 
  2953 ;;  d               1    0        unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2   96[BANK0 ] int 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2963 ;;      Params:         0       8       0       0
  2964 ;;      Locals:         0       0      25       0
  2965 ;;      Temps:          0       2       0       0
  2966 ;;      Totals:         0      10      25       0
  2967 ;;Total ram usage:       35 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    6
  2970 ;; This function calls:
  2971 ;;		___awdiv
  2972 ;;		___fladd
  2973 ;;		___flge
  2974 ;;		___flmul
  2975 ;;		___flneg
  2976 ;;		___flsub
  2977 ;;		___fltol
  2978 ;;		___lldiv
  2979 ;;		___llmod
  2980 ;;		___wmul
  2981 ;;		___xxtofl
  2982 ;;		__div_to_l_
  2983 ;;		__tdiv_to_l_
  2984 ;;		_fround
  2985 ;;		_isdigit
  2986 ;;		_scale
  2987 ;; This function is called by:
  2988 ;;		_LCD_Handler
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text12
  2993  0000C4                     __ptext12:
  2994                           	opt stack 0
  2995  0000C4                     _sprintf:
  2996                           	opt stack 23
  2997                           
  2998                           ;doprnt.c: 494: va_list ap;
  2999                           ;doprnt.c: 499: signed char c;
  3000                           ;doprnt.c: 501: int width;
  3001                           ;doprnt.c: 504: int prec;
  3002                           ;doprnt.c: 508: unsigned short flag;
  3003                           ;doprnt.c: 515: char d;
  3004                           ;doprnt.c: 516: double fval;
  3005                           ;doprnt.c: 517: int exp;
  3006                           ;doprnt.c: 523: union {
  3007                           ;doprnt.c: 524: unsigned long vd;
  3008                           ;doprnt.c: 525: double integ;
  3009                           ;doprnt.c: 526: } tmpval;
  3010                           ;doprnt.c: 528: unsigned long val;
  3011                           ;doprnt.c: 529: unsigned len;
  3012                           ;doprnt.c: 530: const char * cp;
  3013                           ;doprnt.c: 533: *ap = __va_start();
  3014                           
  3015                           ;incstack = 0
  3016  0000C4  0EC4               	movlw	low (?_sprintf+4)
  3017  0000C6  0101               	movlb	1	; () banked
  3018  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3019  0000CA  0E00               	movlw	high (?_sprintf+4)
  3020  0000CC  0101               	movlb	1	; () banked
  3021  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3022                           
  3023                           ;doprnt.c: 536: while(c = *f++) {
  3024  0000D0  EF7A  F004         	goto	l5337
  3025  0000D4                     l5139:
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;doprnt.c: 538: if(c != '%')
  3029  0000D4  0E25               	movlw	37
  3030  0000D6  0101               	movlb	1	; () banked
  3031  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3032  0000DA  B4D8               	btfsc	status,2,c
  3033  0000DC  D008               	goto	l5145
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;doprnt.c: 540: {
  3037                           ;doprnt.c: 541: ((*sp++ = (c)));
  3038  0000DE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3039  0000E2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3040  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3041  0000EA  EF77  F004         	goto	l5335
  3042  0000EE                     l5145:
  3043                           
  3044                           ;doprnt.c: 543: }
  3045                           ;doprnt.c: 548: flag = 0;
  3046  0000EE  0E00               	movlw	0
  3047  0000F0  0101               	movlb	1	; () banked
  3048  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3049  0000F4  0E00               	movlw	0
  3050  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;doprnt.c: 611: if(*f == '.') {
  3054  0000F8  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3055  0000FC  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3056  000100                     	if	0	;tblptru may be non-zero
  3057  000100                     	endif
  3058  000100                     	if	0	;tblptru may be non-zero
  3059  000100                     	endif
  3060  000100  0008               	tblrd		*
  3061  000102  50F5               	movf	tablat,w,c
  3062  000104  0A2E               	xorlw	46
  3063  000106  A4D8               	btfss	status,2,c
  3064  000108  D034               	goto	l5159
  3065                           
  3066                           ; BSR set to: 1
  3067                           ;doprnt.c: 612: flag |= 0x4000;
  3068  00010A  0101               	movlb	1	; () banked
  3069  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3070                           
  3071                           ;doprnt.c: 613: f++;
  3072  00010E  0100               	movlb	0	; () banked
  3073  000110  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3074  000112  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;doprnt.c: 620: {
  3078                           ;doprnt.c: 621: prec = 0;
  3079  000114  0E00               	movlw	0
  3080  000116  0101               	movlb	1	; () banked
  3081  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3082  00011A  0E00               	movlw	0
  3083  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3084                           
  3085                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3086  00011E  D01E               	goto	l5157
  3087  000120                     l5153:
  3088                           
  3089                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3090  000120  C112  F03C         	movff	sprintf@prec,___wmul@multiplier
  3091  000124  C113  F03D         	movff	sprintf@prec+1,___wmul@multiplier+1
  3092  000128  0E00               	movlw	0
  3093  00012A  6E3F               	movwf	___wmul@multiplicand+1,c
  3094  00012C  0E0A               	movlw	10
  3095  00012E  6E3E               	movwf	___wmul@multiplicand,c
  3096  000130  ECF6  F017         	call	___wmul	;wreg free
  3097  000134  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3098  000138  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3099  00013C                     	if	0	;tblptru may be non-zero
  3100  00013C                     	endif
  3101  00013C                     	if	0	;tblptru may be non-zero
  3102  00013C                     	endif
  3103  00013C  0008               	tblrd		*
  3104  00013E  50F5               	movf	tablat,w,c
  3105  000140  263C               	addwf	?___wmul,f,c
  3106  000142  0E00               	movlw	0
  3107  000144  223D               	addwfc	?___wmul+1,f,c
  3108  000146  0ED0               	movlw	208
  3109  000148  243C               	addwf	?___wmul,w,c
  3110  00014A  0101               	movlb	1	; () banked
  3111  00014C  6F12               	movwf	sprintf@prec& (0+255),b
  3112  00014E  0EFF               	movlw	255
  3113  000150  203D               	addwfc	?___wmul+1,w,c
  3114  000152  0101               	movlb	1	; () banked
  3115  000154  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3116                           
  3117                           ; BSR set to: 1
  3118  000156  0100               	movlb	0	; () banked
  3119  000158  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3120  00015A  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3121  00015C                     l5157:
  3122  00015C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3123  000160  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3124  000164                     	if	0	;tblptru may be non-zero
  3125  000164                     	endif
  3126  000164                     	if	0	;tblptru may be non-zero
  3127  000164                     	endif
  3128  000164  0008               	tblrd		*
  3129  000166  50F5               	movf	tablat,w,c
  3130  000168  EC1A  F018         	call	_isdigit
  3131  00016C  A0D8               	btfss	status,0,c
  3132  00016E  D00C               	goto	l5167
  3133  000170  D7D7               	goto	l5153
  3134  000172                     l5159:
  3135                           
  3136                           ;doprnt.c: 626: prec = 0;
  3137  000172  0E00               	movlw	0
  3138  000174  0101               	movlb	1	; () banked
  3139  000176  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3140  000178  0E00               	movlw	0
  3141  00017A  6F12               	movwf	sprintf@prec& (0+255),b
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;doprnt.c: 628: flag |= 0x1000;
  3145  00017C  0101               	movlb	1	; () banked
  3146  00017E  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3147                           
  3148                           ; BSR set to: 1
  3149                           ;doprnt.c: 630: }
  3150                           ;doprnt.c: 635: switch(c = *f++) {
  3151  000180  D003               	goto	l5167
  3152  000182                     l5163:
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;doprnt.c: 663: flag |= 0x400;
  3156  000182  0101               	movlb	1	; () banked
  3157  000184  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3158                           
  3159                           ;doprnt.c: 664: break;
  3160  000186  D013               	goto	l5169
  3161  000188                     l5167:
  3162  000188  C0C2  FFF6         	movff	sprintf@f,tblptrl
  3163  00018C  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  3164  000190  0100               	movlb	0	; () banked
  3165  000192  4BC2               	infsnz	sprintf@f& (0+255),f,b
  3166  000194  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  3167  000196                     	if	0	;tblptru may be non-zero
  3168  000196                     	endif
  3169  000196                     	if	0	;tblptru may be non-zero
  3170  000196                     	endif
  3171  000196  0008               	tblrd		*
  3172  000198  CFF5 F118          	movff	tablat,sprintf@c
  3173  00019C  0101               	movlb	1	; () banked
  3174  00019E  5118               	movf	sprintf@c& (0+255),w,b
  3175                           
  3176                           ; Switch size 1, requested type "space"
  3177                           ; Number of cases is 2, Range of values is 0 to 102
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte            7     4 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182  0001A0  0A00               	xorlw	0	; case 0
  3183  0001A2  B4D8               	btfsc	status,2,c
  3184  0001A4  D3B6               	goto	l5339
  3185  0001A6  0A66               	xorlw	102	; case 102
  3186  0001A8  B4D8               	btfsc	status,2,c
  3187  0001AA  D7EB               	goto	l5163
  3188  0001AC  D3A3               	goto	l5337
  3189  0001AE                     l5169:
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;doprnt.c: 825: if(flag & (0x700)) {
  3193  0001AE  0E07               	movlw	7
  3194  0001B0  0101               	movlb	1	; () banked
  3195  0001B2  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3196  0001B4  B4D8               	btfsc	status,2,c
  3197  0001B6  D346               	goto	l5317
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;doprnt.c: 827: if(flag & 0x1000)
  3201  0001B8  0101               	movlb	1	; () banked
  3202  0001BA  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3203  0001BC  D005               	goto	l5175
  3204                           
  3205                           ; BSR set to: 1
  3206                           ;doprnt.c: 829: prec = 6;
  3207  0001BE  0E00               	movlw	0
  3208  0001C0  0101               	movlb	1	; () banked
  3209  0001C2  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3210  0001C4  0E06               	movlw	6
  3211  0001C6  6F12               	movwf	sprintf@prec& (0+255),b
  3212  0001C8                     l5175:
  3213                           
  3214                           ; BSR set to: 1
  3215                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3216  0001C8  C104  FFD9         	movff	sprintf@ap,fsr2l
  3217  0001CC  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3218  0001D0  CFDE F114          	movff	postinc2,sprintf@fval
  3219  0001D4  CFDE F115          	movff	postinc2,sprintf@fval+1
  3220  0001D8  CFDE F116          	movff	postinc2,sprintf@fval+2
  3221  0001DC  CFDE F117          	movff	postinc2,sprintf@fval+3
  3222                           
  3223                           ; BSR set to: 1
  3224  0001E0  0E04               	movlw	4
  3225  0001E2  0101               	movlb	1	; () banked
  3226  0001E4  2704               	addwf	sprintf@ap& (0+255),f,b
  3227  0001E6  0E00               	movlw	0
  3228  0001E8  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3229                           
  3230                           ; BSR set to: 1
  3231                           ;doprnt.c: 831: if(fval < 0.0) {
  3232  0001EA  0101               	movlb	1	; () banked
  3233  0001EC  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3234  0001EE  D015               	goto	l5185
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;doprnt.c: 832: fval = -fval;
  3238  0001F0  C114  F03C         	movff	sprintf@fval,___flneg@f1
  3239  0001F4  C115  F03D         	movff	sprintf@fval+1,___flneg@f1+1
  3240  0001F8  C116  F03E         	movff	sprintf@fval+2,___flneg@f1+2
  3241  0001FC  C117  F03F         	movff	sprintf@fval+3,___flneg@f1+3
  3242  000200  EC77  F017         	call	___flneg	;wreg free
  3243  000204  C03C  F114         	movff	?___flneg,sprintf@fval
  3244  000208  C03D  F115         	movff	?___flneg+1,sprintf@fval+1
  3245  00020C  C03E  F116         	movff	?___flneg+2,sprintf@fval+2
  3246  000210  C03F  F117         	movff	?___flneg+3,sprintf@fval+3
  3247                           
  3248                           ;doprnt.c: 833: flag |= 0x03;
  3249  000214  0E03               	movlw	3
  3250  000216  0101               	movlb	1	; () banked
  3251  000218  1306               	iorwf	sprintf@flag& (0+255),f,b
  3252  00021A                     l5185:
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;doprnt.c: 834: }
  3256                           ;doprnt.c: 835: exp = 0;
  3257  00021A  0E00               	movlw	0
  3258  00021C  0101               	movlb	1	; () banked
  3259  00021E  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3260  000220  0E00               	movlw	0
  3261  000222  6F0C               	movwf	sprintf@exp& (0+255),b
  3262                           
  3263                           ; BSR set to: 1
  3264                           ;doprnt.c: 836: if( fval!=0) {
  3265  000224  0101               	movlb	1	; () banked
  3266  000226  5114               	movf	sprintf@fval& (0+255),w,b
  3267  000228  0101               	movlb	1	; () banked
  3268  00022A  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3269  00022C  0101               	movlb	1	; () banked
  3270  00022E  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3271  000230  0101               	movlb	1	; () banked
  3272  000232  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3273  000234  B4D8               	btfsc	status,2,c
  3274  000236  D08D               	goto	l5213
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3278  000238  0101               	movlb	1	; () banked
  3279  00023A  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3280  00023C  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3281  00023E  0F82               	addlw	130
  3282  000240  0101               	movlb	1	; () banked
  3283  000242  6F0C               	movwf	sprintf@exp& (0+255),b
  3284  000244  0101               	movlb	1	; () banked
  3285  000246  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3286  000248  0EFF               	movlw	255
  3287  00024A  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;doprnt.c: 838: exp--;
  3291  00024C  0101               	movlb	1	; () banked
  3292  00024E  070C               	decf	sprintf@exp& (0+255),f,b
  3293  000250  A0D8               	btfss	status,0,c
  3294  000252  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 839: exp *= 3;
  3298  000254  C10C  F03C         	movff	sprintf@exp,___wmul@multiplier
  3299  000258  C10D  F03D         	movff	sprintf@exp+1,___wmul@multiplier+1
  3300  00025C  0E00               	movlw	0
  3301  00025E  6E3F               	movwf	___wmul@multiplicand+1,c
  3302  000260  0E03               	movlw	3
  3303  000262  6E3E               	movwf	___wmul@multiplicand,c
  3304  000264  ECF6  F017         	call	___wmul	;wreg free
  3305  000268  C03C  F10C         	movff	?___wmul,sprintf@exp
  3306  00026C  C03D  F10D         	movff	?___wmul+1,sprintf@exp+1
  3307                           
  3308                           ;doprnt.c: 840: exp /= 10;
  3309  000270  C10C  F070         	movff	sprintf@exp,___awdiv@dividend
  3310  000274  C10D  F071         	movff	sprintf@exp+1,___awdiv@dividend+1
  3311  000278  0E00               	movlw	0
  3312  00027A  0100               	movlb	0	; () banked
  3313  00027C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  3314  00027E  0E0A               	movlw	10
  3315  000280  6F72               	movwf	___awdiv@divisor& (0+255),b
  3316  000282  EC53  F014         	call	___awdiv	;wreg free
  3317  000286  C070  F10C         	movff	?___awdiv,sprintf@exp
  3318  00028A  C071  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3319                           
  3320                           ;doprnt.c: 841: if(exp < 0)
  3321  00028E  0101               	movlb	1	; () banked
  3322  000290  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3323  000292  D004               	goto	l5201
  3324                           
  3325                           ; BSR set to: 1
  3326                           ;doprnt.c: 842: exp--;
  3327  000294  0101               	movlb	1	; () banked
  3328  000296  070C               	decf	sprintf@exp& (0+255),f,b
  3329  000298  A0D8               	btfss	status,0,c
  3330  00029A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3331  00029C                     l5201:
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3335  00029C  0101               	movlb	1	; () banked
  3336  00029E  510C               	movf	sprintf@exp& (0+255),w,b
  3337  0002A0  0800               	sublw	0
  3338  0002A2  EC37  F009         	call	_scale
  3339  0002A6  C097  F10E         	movff	?_scale,sprintf@tmpval
  3340  0002AA  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3341  0002AE  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3342  0002B2  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3343                           
  3344                           ;doprnt.c: 847: tmpval.integ *= fval;
  3345  0002B6  C10E  F07E         	movff	sprintf@tmpval,___flmul@b
  3346  0002BA  C10F  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  3347  0002BE  C110  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  3348  0002C2  C111  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  3349  0002C6  C114  F082         	movff	sprintf@fval,___flmul@a
  3350  0002CA  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3351  0002CE  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3352  0002D2  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3353  0002D6  ECE4  F006         	call	___flmul	;wreg free
  3354  0002DA  C07E  F10E         	movff	?___flmul,sprintf@tmpval
  3355  0002DE  C07F  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3356  0002E2  C080  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3357  0002E6  C081  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3358                           
  3359                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3360  0002EA  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3361  0002EE  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3362  0002F2  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3363  0002F6  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3364  0002FA  0E00               	movlw	0
  3365  0002FC  0100               	movlb	0	; () banked
  3366  0002FE  6F74               	movwf	___flge@ff2& (0+255),b
  3367  000300  0E00               	movlw	0
  3368  000302  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3369  000304  0E80               	movlw	128
  3370  000306  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3371  000308  0E3F               	movlw	63
  3372  00030A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3373  00030C  ECAF  F011         	call	___flge	;wreg free
  3374  000310  0100               	movlb	0	; () banked
  3375  000312  B0D8               	btfsc	status,0,c
  3376  000314  D005               	goto	l5209
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;doprnt.c: 849: exp--;
  3380  000316  0101               	movlb	1	; () banked
  3381  000318  070C               	decf	sprintf@exp& (0+255),f,b
  3382  00031A  A0D8               	btfss	status,0,c
  3383  00031C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3384  00031E  D019               	goto	l5213
  3385  000320                     l5209:
  3386                           
  3387                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3388  000320  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3389  000324  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3390  000328  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3391  00032C  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3392  000330  0E00               	movlw	0
  3393  000332  0100               	movlb	0	; () banked
  3394  000334  6F74               	movwf	___flge@ff2& (0+255),b
  3395  000336  0E00               	movlw	0
  3396  000338  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3397  00033A  0E20               	movlw	32
  3398  00033C  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3399  00033E  0E41               	movlw	65
  3400  000340  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3401  000342  ECAF  F011         	call	___flge	;wreg free
  3402  000346  0100               	movlb	0	; () banked
  3403  000348  A0D8               	btfss	status,0,c
  3404  00034A  D003               	goto	l5213
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;doprnt.c: 851: exp++;
  3408  00034C  0101               	movlb	1	; () banked
  3409  00034E  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3410  000350  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3411  000352                     l5213:
  3412                           
  3413                           ;doprnt.c: 852: }
  3414                           ;doprnt.c: 1112: if(prec <= 12)
  3415  000352  0101               	movlb	1	; () banked
  3416  000354  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3417  000356  D008               	goto	l5215
  3418  000358  0101               	movlb	1	; () banked
  3419  00035A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3420  00035C  E123               	bnz	l5217
  3421  00035E  0E0D               	movlw	13
  3422  000360  0101               	movlb	1	; () banked
  3423  000362  5D12               	subwf	sprintf@prec& (0+255),w,b
  3424  000364  B0D8               	btfsc	status,0,c
  3425  000366  D01E               	goto	l5217
  3426  000368                     l5215:
  3427                           
  3428                           ; BSR set to: 1
  3429                           ;doprnt.c: 1113: fval += fround(prec);
  3430  000368  C114  F0A4         	movff	sprintf@fval,___fladd@b
  3431  00036C  C115  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  3432  000370  C116  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  3433  000374  C117  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  3434  000378  0101               	movlb	1	; () banked
  3435  00037A  5112               	movf	sprintf@prec& (0+255),w,b
  3436  00037C  EC3E  F00D         	call	_fround
  3437  000380  C097  F0A8         	movff	?_fround,___fladd@a
  3438  000384  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  3439  000388  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  3440  00038C  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  3441  000390  EC90  F004         	call	___fladd	;wreg free
  3442  000394  C0A4  F114         	movff	?___fladd,sprintf@fval
  3443  000398  C0A5  F115         	movff	?___fladd+1,sprintf@fval+1
  3444  00039C  C0A6  F116         	movff	?___fladd+2,sprintf@fval+2
  3445  0003A0  C0A7  F117         	movff	?___fladd+3,sprintf@fval+3
  3446  0003A4                     l5217:
  3447                           
  3448                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3449  0003A4  0101               	movlb	1	; () banked
  3450  0003A6  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3451  0003A8  D008               	goto	l5219
  3452  0003AA  0101               	movlb	1	; () banked
  3453  0003AC  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3454  0003AE  E12E               	bnz	l5225
  3455  0003B0  0E0A               	movlw	10
  3456  0003B2  0101               	movlb	1	; () banked
  3457  0003B4  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3458  0003B6  B0D8               	btfsc	status,0,c
  3459  0003B8  D029               	goto	l5225
  3460  0003BA                     l5219:
  3461                           
  3462                           ; BSR set to: 1
  3463  0003BA  0101               	movlb	1	; () banked
  3464  0003BC  5114               	movf	sprintf@fval& (0+255),w,b
  3465  0003BE  0101               	movlb	1	; () banked
  3466  0003C0  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3467  0003C2  0101               	movlb	1	; () banked
  3468  0003C4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3469  0003C6  0101               	movlb	1	; () banked
  3470  0003C8  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3471  0003CA  B4D8               	btfsc	status,2,c
  3472  0003CC  D06D               	goto	l5239
  3473                           
  3474                           ; BSR set to: 1
  3475  0003CE  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3476  0003D2  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3477  0003D6  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3478  0003DA  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3479  0003DE  ECE8  F012         	call	___fltol	;wreg free
  3480  0003E2  0100               	movlb	0	; () banked
  3481  0003E4  51A0               	movf	?___fltol& (0+255),w,b
  3482  0003E6  0100               	movlb	0	; () banked
  3483  0003E8  11A1               	iorwf	(?___fltol+1)& (0+255),w,b
  3484  0003EA  0100               	movlb	0	; () banked
  3485  0003EC  11A2               	iorwf	(?___fltol+2)& (0+255),w,b
  3486  0003EE  0100               	movlb	0	; () banked
  3487  0003F0  11A3               	iorwf	(?___fltol+3)& (0+255),w,b
  3488  0003F2  A4D8               	btfss	status,2,c
  3489  0003F4  D059               	goto	l5239
  3490                           
  3491                           ; BSR set to: 0
  3492  0003F6  0101               	movlb	1	; () banked
  3493  0003F8  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3494  0003FA  D056               	goto	l5239
  3495  0003FC  0101               	movlb	1	; () banked
  3496  0003FE  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3497  000400  E105               	bnz	l5225
  3498  000402  0E02               	movlw	2
  3499  000404  0101               	movlb	1	; () banked
  3500  000406  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3501  000408  A0D8               	btfss	status,0,c
  3502  00040A  D04E               	goto	l5239
  3503  00040C                     l5225:
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3507  00040C  C10E  F070         	movff	sprintf@tmpval,___flge@ff1
  3508  000410  C10F  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  3509  000414  C110  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  3510  000418  C111  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  3511  00041C  0E5F               	movlw	95
  3512  00041E  0100               	movlb	0	; () banked
  3513  000420  6F74               	movwf	___flge@ff2& (0+255),b
  3514  000422  0E70               	movlw	112
  3515  000424  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  3516  000426  0E89               	movlw	137
  3517  000428  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  3518  00042A  0E40               	movlw	64
  3519  00042C  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  3520  00042E  ECAF  F011         	call	___flge	;wreg free
  3521  000432  0100               	movlb	0	; () banked
  3522  000434  B0D8               	btfsc	status,0,c
  3523  000436  D003               	goto	l5229
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3527  000438  0101               	movlb	1	; () banked
  3528  00043A  0EF7               	movlw	247
  3529  00043C  D002               	goto	L2
  3530  00043E                     l5229:
  3531                           
  3532                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3533  00043E  0101               	movlb	1	; () banked
  3534  000440  0EF8               	movlw	248
  3535  000442                     L2:
  3536  000442  270C               	addwf	sprintf@exp& (0+255),f,b
  3537  000444  0EFF               	movlw	255
  3538  000446  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3539                           
  3540                           ; BSR set to: 1
  3541                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3542                           
  3543                           ; BSR set to: 1
  3544  000448  0101               	movlb	1	; () banked
  3545  00044A  510C               	movf	sprintf@exp& (0+255),w,b
  3546  00044C  EC37  F009         	call	_scale
  3547  000450  C097  F10E         	movff	?_scale,sprintf@tmpval
  3548  000454  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3549  000458  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  3550  00045C  C09A  F111         	movff	?_scale+3,sprintf@tmpval+3
  3551  000460  C114  F070         	movff	sprintf@fval,__div_to_l_@f1
  3552  000464  C115  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3553  000468  C116  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3554  00046C  C117  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3555  000470  C10E  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  3556  000474  C10F  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3557  000478  C110  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3558  00047C  C111  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3559  000480  EC00  F011         	call	__div_to_l_	;wreg free
  3560  000484  C070  F108         	movff	?__div_to_l_,sprintf@val
  3561  000488  C071  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3562  00048C  C072  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3563  000490  C073  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3564                           
  3565                           ;doprnt.c: 1129: fval = 0.0;
  3566  000494  0E00               	movlw	0
  3567  000496  0101               	movlb	1	; () banked
  3568  000498  6F14               	movwf	sprintf@fval& (0+255),b
  3569  00049A  0E00               	movlw	0
  3570  00049C  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3571  00049E  0E00               	movlw	0
  3572  0004A0  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3573  0004A2  0E00               	movlw	0
  3574  0004A4  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3575                           
  3576                           ;doprnt.c: 1130: } else {
  3577  0004A6  D03C               	goto	l5243
  3578  0004A8                     l5239:
  3579                           
  3580                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3581  0004A8  C114  F0A0         	movff	sprintf@fval,___fltol@f1
  3582  0004AC  C115  F0A1         	movff	sprintf@fval+1,___fltol@f1+1
  3583  0004B0  C116  F0A2         	movff	sprintf@fval+2,___fltol@f1+2
  3584  0004B4  C117  F0A3         	movff	sprintf@fval+3,___fltol@f1+3
  3585  0004B8  ECE8  F012         	call	___fltol	;wreg free
  3586  0004BC  C0A0  F108         	movff	?___fltol,sprintf@val
  3587  0004C0  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3588  0004C4  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3589  0004C8  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3590                           
  3591                           ;doprnt.c: 1132: fval -= (double)val;
  3592  0004CC  C114  F0B8         	movff	sprintf@fval,___flsub@b
  3593  0004D0  C115  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  3594  0004D4  C116  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  3595  0004D8  C117  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  3596  0004DC  C108  F070         	movff	sprintf@val,___xxtofl@val
  3597  0004E0  C109  F071         	movff	sprintf@val+1,___xxtofl@val+1
  3598  0004E4  C10A  F072         	movff	sprintf@val+2,___xxtofl@val+2
  3599  0004E8  C10B  F073         	movff	sprintf@val+3,___xxtofl@val+3
  3600  0004EC  0E00               	movlw	0
  3601  0004EE  EC99  F00E         	call	___xxtofl
  3602  0004F2  C070  F0BC         	movff	?___xxtofl,___flsub@a
  3603  0004F6  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  3604  0004FA  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  3605  0004FE  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  3606  000502  EC8E  F016         	call	___flsub	;wreg free
  3607  000506  C0B8  F114         	movff	?___flsub,sprintf@fval
  3608  00050A  C0B9  F115         	movff	?___flsub+1,sprintf@fval+1
  3609  00050E  C0BA  F116         	movff	?___flsub+2,sprintf@fval+2
  3610  000512  C0BB  F117         	movff	?___flsub+3,sprintf@fval+3
  3611                           
  3612                           ;doprnt.c: 1133: exp = 0;
  3613  000516  0E00               	movlw	0
  3614  000518  0101               	movlb	1	; () banked
  3615  00051A  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3616  00051C  0E00               	movlw	0
  3617  00051E  6F0C               	movwf	sprintf@exp& (0+255),b
  3618  000520                     l5243:
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;doprnt.c: 1134: }
  3622                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3623  000520  0E01               	movlw	1
  3624  000522  0101               	movlb	1	; () banked
  3625  000524  6F18               	movwf	sprintf@c& (0+255),b
  3626  000526                     l5245:
  3627                           
  3628                           ; BSR set to: 1
  3629  000526  0E0A               	movlw	10
  3630  000528  0101               	movlb	1	; () banked
  3631  00052A  1918               	xorwf	sprintf@c& (0+255),w,b
  3632  00052C  B4D8               	btfsc	status,2,c
  3633  00052E  D01E               	goto	l5257
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;doprnt.c: 1137: if(val < dpowers[c])
  3637                           
  3638                           ; BSR set to: 1
  3639                           
  3640                           ; BSR set to: 1
  3641  000530  0101               	movlb	1	; () banked
  3642  000532  5118               	movf	sprintf@c& (0+255),w,b
  3643  000534  0D04               	mullw	4
  3644  000536  0E53               	movlw	low _dpowers
  3645  000538  24F3               	addwf	prodl,w,c
  3646  00053A  6EF6               	movwf	tblptrl,c
  3647  00053C  0E3F               	movlw	high _dpowers
  3648  00053E  20F4               	addwfc	prodh,w,c
  3649  000540  6EF7               	movwf	tblptrh,c
  3650  000542                     	if	0	;There are less than 3 active tblptr bytes
  3651  000542                     	endif
  3652  000542  0009               	tblrd		*+
  3653  000544  50F5               	movf	tablat,w,c
  3654  000546  0101               	movlb	1	; () banked
  3655  000548  5D08               	subwf	sprintf@val& (0+255),w,b
  3656  00054A  0009               	tblrd		*+
  3657  00054C  50F5               	movf	tablat,w,c
  3658  00054E  0101               	movlb	1	; () banked
  3659  000550  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3660  000552  0009               	tblrd		*+
  3661  000554  50F5               	movf	tablat,w,c
  3662  000556  0101               	movlb	1	; () banked
  3663  000558  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3664  00055A  0009               	tblrd		*+
  3665  00055C  50F5               	movf	tablat,w,c
  3666  00055E  0101               	movlb	1	; () banked
  3667  000560  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3668  000562  A0D8               	btfss	status,0,c
  3669  000564  D003               	goto	l5257
  3670                           
  3671                           ; BSR set to: 1
  3672                           
  3673                           ; BSR set to: 1
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;doprnt.c: 1138: break;
  3677  000566  0101               	movlb	1	; () banked
  3678  000568  2B18               	incf	sprintf@c& (0+255),f,b
  3679  00056A  D7DD               	goto	l5245
  3680  00056C                     l5257:
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;doprnt.c: 1175: {
  3684                           ;doprnt.c: 1188: if(flag & 0x03)
  3685  00056C  0E03               	movlw	3
  3686  00056E  0101               	movlb	1	; () banked
  3687  000570  1506               	andwf	sprintf@flag& (0+255),w,b
  3688  000572  0100               	movlb	0	; () banked
  3689  000574  6FC8               	movwf	??_sprintf& (0+255),b
  3690  000576  0E00               	movlw	0
  3691  000578  0101               	movlb	1	; () banked
  3692  00057A  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3693  00057C  0100               	movlb	0	; () banked
  3694  00057E  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  3695  000580  0100               	movlb	0	; () banked
  3696  000582  51C8               	movf	??_sprintf& (0+255),w,b
  3697  000584  0100               	movlb	0	; () banked
  3698  000586  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  3699  000588  B4D8               	btfsc	status,2,c
  3700  00058A  D055               	goto	l5271
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3704  00058C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3705  000590  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3706  000594  0E2D               	movlw	45
  3707  000596  D04D               	goto	L3
  3708  000598                     l5261:
  3709                           
  3710                           ; BSR set to: 0
  3711  000598  0100               	movlb	0	; () banked
  3712  00059A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3713  00059C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;doprnt.c: 1195: }
  3717                           ;doprnt.c: 1196: while(c--) {
  3718  00059E  D04B               	goto	l5271
  3719  0005A0                     l5263:
  3720                           
  3721                           ;doprnt.c: 1200: {
  3722                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3723  0005A0  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3724  0005A4  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3725  0005A8  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3726  0005AC  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3727  0005B0  0101               	movlb	1	; () banked
  3728  0005B2  5118               	movf	sprintf@c& (0+255),w,b
  3729  0005B4  0D04               	mullw	4
  3730  0005B6  0E53               	movlw	low _dpowers
  3731  0005B8  24F3               	addwf	prodl,w,c
  3732  0005BA  6EF6               	movwf	tblptrl,c
  3733  0005BC  0E3F               	movlw	high _dpowers
  3734  0005BE  20F4               	addwfc	prodh,w,c
  3735  0005C0  6EF7               	movwf	tblptrh,c
  3736  0005C2                     	if	0	;There are less than 3 active tblptr bytes
  3737  0005C2                     	endif
  3738  0005C2  0009               	tblrd		*+
  3739  0005C4  CFF5 F074          	movff	tablat,___lldiv@divisor
  3740  0005C8  0009               	tblrd		*+
  3741  0005CA  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3742  0005CE  0009               	tblrd		*+
  3743  0005D0  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3744  0005D4  000A               	tblrd		*-
  3745  0005D6  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3746  0005DA  EC10  F015         	call	___lldiv	;wreg free
  3747  0005DE  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3748  0005E2  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3749  0005E6  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3750  0005EA  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3751                           
  3752                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3753  0005EE  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3754  0005F2  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3755  0005F6  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3756  0005FA  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3757  0005FE  0E0A               	movlw	10
  3758  000600  0100               	movlb	0	; () banked
  3759  000602  6F74               	movwf	___llmod@divisor& (0+255),b
  3760  000604  0E00               	movlw	0
  3761  000606  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3762  000608  0E00               	movlw	0
  3763  00060A  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3764  00060C  0E00               	movlw	0
  3765  00060E  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3766  000610  ECB3  F015         	call	___llmod	;wreg free
  3767  000614  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3768  000618  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3769  00061C  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3770  000620  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3771                           
  3772                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3773  000624  0101               	movlb	1	; () banked
  3774  000626  510E               	movf	sprintf@tmpval& (0+255),w,b
  3775  000628  0F30               	addlw	48
  3776  00062A  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3777  00062E  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3778  000632                     L3:
  3779  000632  6EDF               	movwf	indf2,c
  3780  000634  D7B1               	goto	l5261
  3781  000636                     l5271:
  3782                           
  3783                           ; BSR set to: 0
  3784  000636  0101               	movlb	1	; () banked
  3785  000638  0718               	decf	sprintf@c& (0+255),f,b
  3786  00063A  0101               	movlb	1	; () banked
  3787  00063C  2918               	incf	sprintf@c& (0+255),w,b
  3788  00063E  B4D8               	btfsc	status,2,c
  3789  000640  D00E               	goto	l5279
  3790  000642  D7AE               	goto	l5263
  3791  000644                     l5273:
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3795  000644  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3796  000648  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3797  00064C  0E30               	movlw	48
  3798  00064E  6EDF               	movwf	indf2,c
  3799                           
  3800                           ; BSR set to: 1
  3801  000650  0100               	movlb	0	; () banked
  3802  000652  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3803  000654  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;doprnt.c: 1209: exp--;
  3807  000656  0101               	movlb	1	; () banked
  3808  000658  070C               	decf	sprintf@exp& (0+255),f,b
  3809  00065A  A0D8               	btfss	status,0,c
  3810  00065C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3811  00065E                     l5279:
  3812                           
  3813                           ; BSR set to: 1
  3814  00065E  0101               	movlb	1	; () banked
  3815  000660  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3816  000662  D007               	goto	l5281
  3817  000664  0101               	movlb	1	; () banked
  3818  000666  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3819  000668  E1ED               	bnz	l5273
  3820  00066A  0101               	movlb	1	; () banked
  3821  00066C  050C               	decf	sprintf@exp& (0+255),w,b
  3822  00066E  B0D8               	btfsc	status,0,c
  3823  000670  D7E9               	goto	l5273
  3824  000672                     l5281:
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;doprnt.c: 1210: }
  3828                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3829  000672  0101               	movlb	1	; () banked
  3830  000674  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3831  000676  D00C               	goto	l367
  3832  000678  0101               	movlb	1	; () banked
  3833  00067A  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3834  00067C  E105               	bnz	u6130
  3835  00067E  0E09               	movlw	9
  3836  000680  0101               	movlb	1	; () banked
  3837  000682  5D12               	subwf	sprintf@prec& (0+255),w,b
  3838  000684  A0D8               	btfss	status,0,c
  3839  000686  D004               	goto	l367
  3840  000688                     u6130:
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3844  000688  0E08               	movlw	8
  3845  00068A  0101               	movlb	1	; () banked
  3846  00068C  6F18               	movwf	sprintf@c& (0+255),b
  3847  00068E  D002               	goto	l5285
  3848  000690                     l367:
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;doprnt.c: 1213: else
  3852                           ;doprnt.c: 1214: c = prec;
  3853  000690  C112  F118         	movff	sprintf@prec,sprintf@c
  3854  000694                     l5285:
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;doprnt.c: 1215: prec -= c;
  3858  000694  0101               	movlb	1	; () banked
  3859  000696  5118               	movf	sprintf@c& (0+255),w,b
  3860  000698  0101               	movlb	1	; () banked
  3861  00069A  5F12               	subwf	sprintf@prec& (0+255),f,b
  3862  00069C  0E00               	movlw	0
  3863  00069E  0101               	movlb	1	; () banked
  3864  0006A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  3865  0006A2  0EFF               	movlw	255
  3866  0006A4  0101               	movlb	1	; () banked
  3867  0006A6  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;doprnt.c: 1219: if(c)
  3871  0006A8  0101               	movlb	1	; () banked
  3872  0006AA  5118               	movf	sprintf@c& (0+255),w,b
  3873  0006AC  0101               	movlb	1	; () banked
  3874  0006AE  B4D8               	btfsc	status,2,c
  3875  0006B0  D009               	goto	l5293
  3876                           
  3877                           ; BSR set to: 1
  3878                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3879  0006B2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3880  0006B6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3881  0006BA  0E2E               	movlw	46
  3882  0006BC  6EDF               	movwf	indf2,c
  3883                           
  3884                           ; BSR set to: 1
  3885  0006BE  0100               	movlb	0	; () banked
  3886  0006C0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3887  0006C2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3888  0006C4                     l5293:
  3889                           
  3890                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3891  0006C4  0101               	movlb	1	; () banked
  3892  0006C6  5118               	movf	sprintf@c& (0+255),w,b
  3893  0006C8  EC37  F009         	call	_scale
  3894  0006CC  C097  F100         	movff	?_scale,_sprintf$2474
  3895  0006D0  C098  F101         	movff	?_scale+1,_sprintf$2474+1
  3896  0006D4  C099  F102         	movff	?_scale+2,_sprintf$2474+2
  3897  0006D8  C09A  F103         	movff	?_scale+3,_sprintf$2474+3
  3898                           
  3899                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3900  0006DC  C114  F082         	movff	sprintf@fval,___flmul@a
  3901  0006E0  C115  F083         	movff	sprintf@fval+1,___flmul@a+1
  3902  0006E4  C116  F084         	movff	sprintf@fval+2,___flmul@a+2
  3903  0006E8  C117  F085         	movff	sprintf@fval+3,___flmul@a+3
  3904  0006EC  C100  F07E         	movff	_sprintf$2474,___flmul@b
  3905  0006F0  C101  F07F         	movff	_sprintf$2474+1,___flmul@b+1
  3906  0006F4  C102  F080         	movff	_sprintf$2474+2,___flmul@b+2
  3907  0006F8  C103  F081         	movff	_sprintf$2474+3,___flmul@b+3
  3908  0006FC  ECE4  F006         	call	___flmul	;wreg free
  3909  000700  C07E  F0A0         	movff	?___flmul,___fltol@f1
  3910  000704  C07F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  3911  000708  C080  F0A2         	movff	?___flmul+2,___fltol@f1+2
  3912  00070C  C081  F0A3         	movff	?___flmul+3,___fltol@f1+3
  3913  000710  ECE8  F012         	call	___fltol	;wreg free
  3914  000714  C0A0  F108         	movff	?___fltol,sprintf@val
  3915  000718  C0A1  F109         	movff	?___fltol+1,sprintf@val+1
  3916  00071C  C0A2  F10A         	movff	?___fltol+2,sprintf@val+2
  3917  000720  C0A3  F10B         	movff	?___fltol+3,sprintf@val+3
  3918                           
  3919                           ;doprnt.c: 1228: while(c--) {
  3920  000724  D074               	goto	l5307
  3921  000726                     l5297:
  3922                           
  3923                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3924  000726  C108  F070         	movff	sprintf@val,___lldiv@dividend
  3925  00072A  C109  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  3926  00072E  C10A  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  3927  000732  C10B  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  3928  000736  0101               	movlb	1	; () banked
  3929  000738  5118               	movf	sprintf@c& (0+255),w,b
  3930  00073A  0D04               	mullw	4
  3931  00073C  0E53               	movlw	low _dpowers
  3932  00073E  24F3               	addwf	prodl,w,c
  3933  000740  6EF6               	movwf	tblptrl,c
  3934  000742  0E3F               	movlw	high _dpowers
  3935  000744  20F4               	addwfc	prodh,w,c
  3936  000746  6EF7               	movwf	tblptrh,c
  3937  000748                     	if	0	;There are less than 3 active tblptr bytes
  3938  000748                     	endif
  3939  000748  0009               	tblrd		*+
  3940  00074A  CFF5 F074          	movff	tablat,___lldiv@divisor
  3941  00074E  0009               	tblrd		*+
  3942  000750  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  3943  000754  0009               	tblrd		*+
  3944  000756  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  3945  00075A  000A               	tblrd		*-
  3946  00075C  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  3947  000760  EC10  F015         	call	___lldiv	;wreg free
  3948  000764  C070  F10E         	movff	?___lldiv,sprintf@tmpval
  3949  000768  C071  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3950  00076C  C072  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3951  000770  C073  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3952                           
  3953                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3954  000774  C10E  F070         	movff	sprintf@tmpval,___llmod@dividend
  3955  000778  C10F  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3956  00077C  C110  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3957  000780  C111  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3958  000784  0E0A               	movlw	10
  3959  000786  0100               	movlb	0	; () banked
  3960  000788  6F74               	movwf	___llmod@divisor& (0+255),b
  3961  00078A  0E00               	movlw	0
  3962  00078C  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  3963  00078E  0E00               	movlw	0
  3964  000790  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  3965  000792  0E00               	movlw	0
  3966  000794  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  3967  000796  ECB3  F015         	call	___llmod	;wreg free
  3968  00079A  C070  F10E         	movff	?___llmod,sprintf@tmpval
  3969  00079E  C071  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3970  0007A2  C072  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3971  0007A6  C073  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3972                           
  3973                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3974  0007AA  0101               	movlb	1	; () banked
  3975  0007AC  510E               	movf	sprintf@tmpval& (0+255),w,b
  3976  0007AE  0F30               	addlw	48
  3977  0007B0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  3978  0007B4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  3979  0007B8  6EDF               	movwf	indf2,c
  3980                           
  3981                           ; BSR set to: 1
  3982  0007BA  0100               	movlb	0	; () banked
  3983  0007BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  3984  0007BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;doprnt.c: 1232: val %= dpowers[c];
  3988  0007C0  C108  F070         	movff	sprintf@val,___llmod@dividend
  3989  0007C4  C109  F071         	movff	sprintf@val+1,___llmod@dividend+1
  3990  0007C8  C10A  F072         	movff	sprintf@val+2,___llmod@dividend+2
  3991  0007CC  C10B  F073         	movff	sprintf@val+3,___llmod@dividend+3
  3992  0007D0  0101               	movlb	1	; () banked
  3993  0007D2  5118               	movf	sprintf@c& (0+255),w,b
  3994  0007D4  0D04               	mullw	4
  3995  0007D6  0E53               	movlw	low _dpowers
  3996  0007D8  24F3               	addwf	prodl,w,c
  3997  0007DA  6EF6               	movwf	tblptrl,c
  3998  0007DC  0E3F               	movlw	high _dpowers
  3999  0007DE  20F4               	addwfc	prodh,w,c
  4000  0007E0  6EF7               	movwf	tblptrh,c
  4001  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  4002  0007E2                     	endif
  4003  0007E2  0009               	tblrd		*+
  4004  0007E4  CFF5 F074          	movff	tablat,___llmod@divisor
  4005  0007E8  0009               	tblrd		*+
  4006  0007EA  CFF5 F075          	movff	tablat,___llmod@divisor+1
  4007  0007EE  0009               	tblrd		*+
  4008  0007F0  CFF5 F076          	movff	tablat,___llmod@divisor+2
  4009  0007F4  000A               	tblrd		*-
  4010  0007F6  CFF5 F077          	movff	tablat,___llmod@divisor+3
  4011  0007FA  ECB3  F015         	call	___llmod	;wreg free
  4012  0007FE  C070  F108         	movff	?___llmod,sprintf@val
  4013  000802  C071  F109         	movff	?___llmod+1,sprintf@val+1
  4014  000806  C072  F10A         	movff	?___llmod+2,sprintf@val+2
  4015  00080A  C073  F10B         	movff	?___llmod+3,sprintf@val+3
  4016  00080E                     l5307:
  4017  00080E  0101               	movlb	1	; () banked
  4018  000810  0718               	decf	sprintf@c& (0+255),f,b
  4019  000812  0101               	movlb	1	; () banked
  4020  000814  2918               	incf	sprintf@c& (0+255),w,b
  4021  000816  B4D8               	btfsc	status,2,c
  4022  000818  D00E               	goto	l5315
  4023  00081A  D785               	goto	l5297
  4024  00081C                     l5309:
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4028  00081C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4029  000820  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4030  000824  0E30               	movlw	48
  4031  000826  6EDF               	movwf	indf2,c
  4032                           
  4033                           ; BSR set to: 1
  4034  000828  0100               	movlb	0	; () banked
  4035  00082A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4036  00082C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;doprnt.c: 1237: prec--;
  4040  00082E  0101               	movlb	1	; () banked
  4041  000830  0712               	decf	sprintf@prec& (0+255),f,b
  4042  000832  A0D8               	btfss	status,0,c
  4043  000834  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4044  000836                     l5315:
  4045                           
  4046                           ; BSR set to: 1
  4047  000836  0101               	movlb	1	; () banked
  4048  000838  5112               	movf	sprintf@prec& (0+255),w,b
  4049  00083A  0101               	movlb	1	; () banked
  4050  00083C  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4051  00083E  B4D8               	btfsc	status,2,c
  4052  000840  D059               	goto	l5337
  4053  000842  D7EC               	goto	l5309
  4054  000844                     l5317:
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;doprnt.c: 1246: }
  4058                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4059  000844  0101               	movlb	1	; () banked
  4060  000846  5112               	movf	sprintf@prec& (0+255),w,b
  4061  000848  0101               	movlb	1	; () banked
  4062  00084A  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4063  00084C  A4D8               	btfss	status,2,c
  4064  00084E  D00D               	goto	l5323
  4065                           
  4066                           ; BSR set to: 1
  4067  000850  0101               	movlb	1	; () banked
  4068  000852  5108               	movf	sprintf@val& (0+255),w,b
  4069  000854  0101               	movlb	1	; () banked
  4070  000856  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4071  000858  0101               	movlb	1	; () banked
  4072  00085A  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4073  00085C  0101               	movlb	1	; () banked
  4074  00085E  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4075  000860  A4D8               	btfss	status,2,c
  4076  000862  D003               	goto	l5323
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;doprnt.c: 1291: prec++;
  4080  000864  0101               	movlb	1	; () banked
  4081  000866  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4082  000868  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4083  00086A                     l5323:
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;doprnt.c: 1339: if(c < prec)
  4087  00086A  0E80               	movlw	128
  4088  00086C  0101               	movlb	1	; () banked
  4089  00086E  BF18               	btfsc	sprintf@c& (0+255),7,b
  4090  000870  0E7F               	movlw	127
  4091  000872  0100               	movlb	0	; () banked
  4092  000874  6FC8               	movwf	??_sprintf& (0+255),b
  4093  000876  0101               	movlb	1	; () banked
  4094  000878  5112               	movf	sprintf@prec& (0+255),w,b
  4095  00087A  0101               	movlb	1	; () banked
  4096  00087C  5D18               	subwf	sprintf@c& (0+255),w,b
  4097  00087E  0101               	movlb	1	; () banked
  4098  000880  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4099  000882  0A80               	xorlw	128
  4100  000884  0100               	movlb	0	; () banked
  4101  000886  59C8               	subwfb	??_sprintf& (0+255),w,b
  4102  000888  B0D8               	btfsc	status,0,c
  4103  00088A  D003               	goto	l5327
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;doprnt.c: 1340: c = prec;
  4107  00088C  C112  F118         	movff	sprintf@prec,sprintf@c
  4108  000890  D018               	goto	l5331
  4109  000892                     l5327:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;doprnt.c: 1341: else if(prec < c)
  4113  000892  0101               	movlb	1	; () banked
  4114  000894  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4115  000896  0A80               	xorlw	128
  4116  000898  0100               	movlb	0	; () banked
  4117  00089A  6FC8               	movwf	??_sprintf& (0+255),b
  4118  00089C  0101               	movlb	1	; () banked
  4119  00089E  5118               	movf	sprintf@c& (0+255),w,b
  4120  0008A0  0101               	movlb	1	; () banked
  4121  0008A2  5D12               	subwf	sprintf@prec& (0+255),w,b
  4122  0008A4  0E80               	movlw	128
  4123  0008A6  0101               	movlb	1	; () banked
  4124  0008A8  BF18               	btfsc	sprintf@c& (0+255),7,b
  4125  0008AA  0E7F               	movlw	127
  4126  0008AC  0100               	movlb	0	; () banked
  4127  0008AE  59C8               	subwfb	??_sprintf& (0+255),w,b
  4128  0008B0  B0D8               	btfsc	status,0,c
  4129  0008B2  D007               	goto	l5331
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;doprnt.c: 1342: prec = c;
  4133  0008B4  0101               	movlb	1	; () banked
  4134  0008B6  5118               	movf	sprintf@c& (0+255),w,b
  4135  0008B8  0101               	movlb	1	; () banked
  4136  0008BA  6F12               	movwf	sprintf@prec& (0+255),b
  4137  0008BC  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4138  0008BE  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4139  0008C0  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4140  0008C2                     l5331:
  4141                           
  4142                           ;doprnt.c: 1422: {
  4143                           ;doprnt.c: 1438: if(flag & 0x03)
  4144  0008C2  0E03               	movlw	3
  4145  0008C4  0101               	movlb	1	; () banked
  4146  0008C6  1506               	andwf	sprintf@flag& (0+255),w,b
  4147  0008C8  0100               	movlb	0	; () banked
  4148  0008CA  6FC8               	movwf	??_sprintf& (0+255),b
  4149  0008CC  0E00               	movlw	0
  4150  0008CE  0101               	movlb	1	; () banked
  4151  0008D0  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4152  0008D2  0100               	movlb	0	; () banked
  4153  0008D4  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  4154  0008D6  0100               	movlb	0	; () banked
  4155  0008D8  51C8               	movf	??_sprintf& (0+255),w,b
  4156  0008DA  0100               	movlb	0	; () banked
  4157  0008DC  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  4158  0008DE  B4D8               	btfsc	status,2,c
  4159  0008E0  D009               	goto	l5337
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4163  0008E2  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4164  0008E6  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4165  0008EA  0E2D               	movlw	45
  4166  0008EC  6EDF               	movwf	indf2,c
  4167  0008EE                     l5335:
  4168                           
  4169                           ; BSR set to: 0
  4170  0008EE  0100               	movlb	0	; () banked
  4171  0008F0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  4172  0008F2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  4173  0008F4                     l5337:
  4174  0008F4  C0C2  FFF6         	movff	sprintf@f,tblptrl
  4175  0008F8  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  4176  0008FC  0100               	movlb	0	; () banked
  4177  0008FE  4BC2               	infsnz	sprintf@f& (0+255),f,b
  4178  000900  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  4179  000902                     	if	0	;tblptru may be non-zero
  4180  000902                     	endif
  4181  000902                     	if	0	;tblptru may be non-zero
  4182  000902                     	endif
  4183  000902  0008               	tblrd		*
  4184  000904  CFF5 F118          	movff	tablat,sprintf@c
  4185  000908  0101               	movlb	1	; () banked
  4186  00090A  5118               	movf	sprintf@c& (0+255),w,b
  4187  00090C  A4D8               	btfss	status,2,c
  4188  00090E  EF6A  F000         	goto	l5139
  4189  000912                     l5339:
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;doprnt.c: 1538: *sp = 0;
  4193  000912  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  4194  000916  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  4195  00091A  0E00               	movlw	0
  4196  00091C  6EDF               	movwf	indf2,c
  4197  00091E  0012               	return	
  4198  000920                     __end_of_sprintf:
  4199                           	opt stack 0
  4200                           tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           prodh	equ	0xFF4
  4205                           prodl	equ	0xFF3
  4206                           intcon	equ	0xFF2
  4207                           postinc0	equ	0xFEE
  4208                           wreg	equ	0xFE8
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _scale *****************
  4216 ;; Defined at:
  4217 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  scl             1    wreg     char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  scl             1   63[BANK0 ] char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  4   55[BANK0 ] char 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4231 ;;      Params:         0       4       0       0
  4232 ;;      Locals:         0       5       0       0
  4233 ;;      Temps:          0       0       0       0
  4234 ;;      Totals:         0       9       0       0
  4235 ;;Total ram usage:        9 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    5
  4238 ;; This function calls:
  4239 ;;		___awdiv
  4240 ;;		___awmod
  4241 ;;		___flmul
  4242 ;; This function is called by:
  4243 ;;		_sprintf
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text13
  4248  00126E                     __ptext13:
  4249                           	opt stack 0
  4250  00126E                     _scale:
  4251                           	opt stack 23
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;incstack = 0
  4255                           ;scale@scl stored from wreg
  4256  00126E  0100               	movlb	0	; () banked
  4257  001270  6F9F               	movwf	scale@scl& (0+255),b
  4258                           
  4259                           ;doprnt.c: 428: if(scl < 0) {
  4260  001272  0100               	movlb	0	; () banked
  4261  001274  AF9F               	btfss	scale@scl& (0+255),7,b
  4262  001276  D125               	goto	l4753
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;doprnt.c: 429: scl = -scl;
  4266  001278  0100               	movlb	0	; () banked
  4267  00127A  6D9F               	negf	scale@scl& (0+255),b
  4268                           
  4269                           ;doprnt.c: 430: if(scl>=110)
  4270  00127C  0100               	movlb	0	; () banked
  4271  00127E  519F               	movf	scale@scl& (0+255),w,b
  4272  001280  0A80               	xorlw	128
  4273  001282  0F12               	addlw	-238
  4274  001284  A0D8               	btfss	status,0,c
  4275  001286  D0AA               	goto	l4743
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4279  001288  0E00               	movlw	0
  4280  00128A  0100               	movlb	0	; () banked
  4281  00128C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4282  00128E  0E0A               	movlw	10
  4283  001290  6F72               	movwf	___awdiv@divisor& (0+255),b
  4284  001292  0E00               	movlw	0
  4285  001294  6E3F               	movwf	___awmod@divisor+1,c
  4286  001296  0E64               	movlw	100
  4287  001298  6E3E               	movwf	___awmod@divisor,c
  4288  00129A  0100               	movlb	0	; () banked
  4289  00129C  519F               	movf	scale@scl& (0+255),w,b
  4290  00129E  6E3C               	movwf	___awmod@dividend,c
  4291  0012A0  6A3D               	clrf	___awmod@dividend+1,c
  4292  0012A2  BE3C               	btfsc	___awmod@dividend,7,c
  4293  0012A4  063D               	decf	___awmod@dividend+1,f,c
  4294  0012A6  ECFD  F015         	call	___awmod	;wreg free
  4295  0012AA  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4296  0012AE  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4297  0012B2  EC53  F014         	call	___awdiv	;wreg free
  4298  0012B6  0100               	movlb	0	; () banked
  4299  0012B8  90D8               	bcf	status,0,c
  4300  0012BA  3770               	rlcf	?___awdiv& (0+255),f,b
  4301  0012BC  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4302  0012BE  0100               	movlb	0	; () banked
  4303  0012C0  90D8               	bcf	status,0,c
  4304  0012C2  3770               	rlcf	?___awdiv& (0+255),f,b
  4305  0012C4  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4306  0012C6  0E24               	movlw	36
  4307  0012C8  0100               	movlb	0	; () banked
  4308  0012CA  2770               	addwf	?___awdiv& (0+255),f,b
  4309  0012CC  0E00               	movlw	0
  4310  0012CE  0100               	movlb	0	; () banked
  4311  0012D0  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4312  0012D2  0EEB               	movlw	low __npowers_
  4313  0012D4  0100               	movlb	0	; () banked
  4314  0012D6  2570               	addwf	?___awdiv& (0+255),w,b
  4315  0012D8  6EF6               	movwf	tblptrl,c
  4316  0012DA  0E3E               	movlw	high __npowers_
  4317  0012DC  0100               	movlb	0	; () banked
  4318  0012DE  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4319  0012E0  6EF7               	movwf	tblptrh,c
  4320  0012E2                     	if	0	;There are less than 3 active tblptr bytes
  4321  0012E2                     	endif
  4322  0012E2  0009               	tblrd		*+
  4323  0012E4  CFF5 F082          	movff	tablat,___flmul@a
  4324  0012E8  0009               	tblrd		*+
  4325  0012EA  CFF5 F083          	movff	tablat,___flmul@a+1
  4326  0012EE  0009               	tblrd		*+
  4327  0012F0  CFF5 F084          	movff	tablat,___flmul@a+2
  4328  0012F4  000A               	tblrd		*-
  4329  0012F6  CFF5 F085          	movff	tablat,___flmul@a+3
  4330  0012FA  0E00               	movlw	0
  4331  0012FC  0100               	movlb	0	; () banked
  4332  0012FE  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4333  001300  0E64               	movlw	100
  4334  001302  6F72               	movwf	___awdiv@divisor& (0+255),b
  4335  001304  0100               	movlb	0	; () banked
  4336  001306  519F               	movf	scale@scl& (0+255),w,b
  4337  001308  0100               	movlb	0	; () banked
  4338  00130A  6F70               	movwf	___awdiv@dividend& (0+255),b
  4339  00130C  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4340  00130E  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4341  001310  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4342  001312  EC53  F014         	call	___awdiv	;wreg free
  4343  001316  0100               	movlb	0	; () banked
  4344  001318  90D8               	bcf	status,0,c
  4345  00131A  3770               	rlcf	?___awdiv& (0+255),f,b
  4346  00131C  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4347  00131E  0100               	movlb	0	; () banked
  4348  001320  90D8               	bcf	status,0,c
  4349  001322  3770               	rlcf	?___awdiv& (0+255),f,b
  4350  001324  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4351  001326  0E48               	movlw	72
  4352  001328  0100               	movlb	0	; () banked
  4353  00132A  2770               	addwf	?___awdiv& (0+255),f,b
  4354  00132C  0E00               	movlw	0
  4355  00132E  0100               	movlb	0	; () banked
  4356  001330  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4357  001332  0EEB               	movlw	low __npowers_
  4358  001334  0100               	movlb	0	; () banked
  4359  001336  2570               	addwf	?___awdiv& (0+255),w,b
  4360  001338  6EF6               	movwf	tblptrl,c
  4361  00133A  0E3E               	movlw	high __npowers_
  4362  00133C  0100               	movlb	0	; () banked
  4363  00133E  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4364  001340  6EF7               	movwf	tblptrh,c
  4365  001342                     	if	0	;There are less than 3 active tblptr bytes
  4366  001342                     	endif
  4367  001342  0009               	tblrd		*+
  4368  001344  CFF5 F07E          	movff	tablat,___flmul@b
  4369  001348  0009               	tblrd		*+
  4370  00134A  CFF5 F07F          	movff	tablat,___flmul@b+1
  4371  00134E  0009               	tblrd		*+
  4372  001350  CFF5 F080          	movff	tablat,___flmul@b+2
  4373  001354  000A               	tblrd		*-
  4374  001356  CFF5 F081          	movff	tablat,___flmul@b+3
  4375  00135A  ECE4  F006         	call	___flmul	;wreg free
  4376  00135E  C07E  F09B         	movff	?___flmul,_scale$2473
  4377  001362  C07F  F09C         	movff	?___flmul+1,_scale$2473+1
  4378  001366  C080  F09D         	movff	?___flmul+2,_scale$2473+2
  4379  00136A  C081  F09E         	movff	?___flmul+3,_scale$2473+3
  4380                           
  4381                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4382  00136E  C09B  F07E         	movff	_scale$2473,___flmul@b
  4383  001372  C09C  F07F         	movff	_scale$2473+1,___flmul@b+1
  4384  001376  C09D  F080         	movff	_scale$2473+2,___flmul@b+2
  4385  00137A  C09E  F081         	movff	_scale$2473+3,___flmul@b+3
  4386  00137E  0E00               	movlw	0
  4387  001380  6E3F               	movwf	___awmod@divisor+1,c
  4388  001382  0E0A               	movlw	10
  4389  001384  6E3E               	movwf	___awmod@divisor,c
  4390  001386  0100               	movlb	0	; () banked
  4391  001388  519F               	movf	scale@scl& (0+255),w,b
  4392  00138A  6E3C               	movwf	___awmod@dividend,c
  4393  00138C  6A3D               	clrf	___awmod@dividend+1,c
  4394  00138E  BE3C               	btfsc	___awmod@dividend,7,c
  4395  001390  063D               	decf	___awmod@dividend+1,f,c
  4396  001392  ECFD  F015         	call	___awmod	;wreg free
  4397  001396  90D8               	bcf	status,0,c
  4398  001398  363C               	rlcf	?___awmod,f,c
  4399  00139A  363D               	rlcf	?___awmod+1,f,c
  4400  00139C  90D8               	bcf	status,0,c
  4401  00139E  363C               	rlcf	?___awmod,f,c
  4402  0013A0  363D               	rlcf	?___awmod+1,f,c
  4403  0013A2  0EEB               	movlw	low __npowers_
  4404  0013A4  243C               	addwf	?___awmod,w,c
  4405  0013A6  6EF6               	movwf	tblptrl,c
  4406  0013A8  0E3E               	movlw	high __npowers_
  4407  0013AA  203D               	addwfc	?___awmod+1,w,c
  4408  0013AC  6EF7               	movwf	tblptrh,c
  4409  0013AE                     	if	0	;There are less than 3 active tblptr bytes
  4410  0013AE                     	endif
  4411  0013AE  0009               	tblrd		*+
  4412  0013B0  CFF5 F082          	movff	tablat,___flmul@a
  4413  0013B4  0009               	tblrd		*+
  4414  0013B6  CFF5 F083          	movff	tablat,___flmul@a+1
  4415  0013BA  0009               	tblrd		*+
  4416  0013BC  CFF5 F084          	movff	tablat,___flmul@a+2
  4417  0013C0  000A               	tblrd		*-
  4418  0013C2  CFF5 F085          	movff	tablat,___flmul@a+3
  4419  0013C6  ECE4  F006         	call	___flmul	;wreg free
  4420  0013CA  C07E  F097         	movff	?___flmul,?_scale
  4421  0013CE  C07F  F098         	movff	?___flmul+1,?_scale+1
  4422  0013D2  C080  F099         	movff	?___flmul+2,?_scale+2
  4423  0013D6  C081  F09A         	movff	?___flmul+3,?_scale+3
  4424  0013DA  0012               	return	
  4425  0013DC                     l4743:
  4426                           
  4427                           ;doprnt.c: 432: else if(scl > 10)
  4428  0013DC  0100               	movlb	0	; () banked
  4429  0013DE  519F               	movf	scale@scl& (0+255),w,b
  4430  0013E0  0A80               	xorlw	128
  4431  0013E2  0F75               	addlw	-139
  4432  0013E4  A0D8               	btfss	status,0,c
  4433  0013E6  D057               	goto	l4749
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4437  0013E8  0E00               	movlw	0
  4438  0013EA  0100               	movlb	0	; () banked
  4439  0013EC  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4440  0013EE  0E0A               	movlw	10
  4441  0013F0  6F72               	movwf	___awdiv@divisor& (0+255),b
  4442  0013F2  0100               	movlb	0	; () banked
  4443  0013F4  519F               	movf	scale@scl& (0+255),w,b
  4444  0013F6  0100               	movlb	0	; () banked
  4445  0013F8  6F70               	movwf	___awdiv@dividend& (0+255),b
  4446  0013FA  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4447  0013FC  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4448  0013FE  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4449  001400  EC53  F014         	call	___awdiv	;wreg free
  4450  001404  0100               	movlb	0	; () banked
  4451  001406  90D8               	bcf	status,0,c
  4452  001408  3770               	rlcf	?___awdiv& (0+255),f,b
  4453  00140A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4454  00140C  0100               	movlb	0	; () banked
  4455  00140E  90D8               	bcf	status,0,c
  4456  001410  3770               	rlcf	?___awdiv& (0+255),f,b
  4457  001412  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4458  001414  0E24               	movlw	36
  4459  001416  0100               	movlb	0	; () banked
  4460  001418  2770               	addwf	?___awdiv& (0+255),f,b
  4461  00141A  0E00               	movlw	0
  4462  00141C  0100               	movlb	0	; () banked
  4463  00141E  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4464  001420  0EEB               	movlw	low __npowers_
  4465  001422  0100               	movlb	0	; () banked
  4466  001424  2570               	addwf	?___awdiv& (0+255),w,b
  4467  001426  6EF6               	movwf	tblptrl,c
  4468  001428  0E3E               	movlw	high __npowers_
  4469  00142A  0100               	movlb	0	; () banked
  4470  00142C  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4471  00142E  6EF7               	movwf	tblptrh,c
  4472  001430                     	if	0	;There are less than 3 active tblptr bytes
  4473  001430                     	endif
  4474  001430  0009               	tblrd		*+
  4475  001432  CFF5 F07E          	movff	tablat,___flmul@b
  4476  001436  0009               	tblrd		*+
  4477  001438  CFF5 F07F          	movff	tablat,___flmul@b+1
  4478  00143C  0009               	tblrd		*+
  4479  00143E  CFF5 F080          	movff	tablat,___flmul@b+2
  4480  001442  000A               	tblrd		*-
  4481  001444  CFF5 F081          	movff	tablat,___flmul@b+3
  4482  001448  0E00               	movlw	0
  4483  00144A  6E3F               	movwf	___awmod@divisor+1,c
  4484  00144C  0E0A               	movlw	10
  4485  00144E  6E3E               	movwf	___awmod@divisor,c
  4486  001450  0100               	movlb	0	; () banked
  4487  001452  519F               	movf	scale@scl& (0+255),w,b
  4488  001454  6E3C               	movwf	___awmod@dividend,c
  4489  001456  6A3D               	clrf	___awmod@dividend+1,c
  4490  001458  BE3C               	btfsc	___awmod@dividend,7,c
  4491  00145A  063D               	decf	___awmod@dividend+1,f,c
  4492  00145C  ECFD  F015         	call	___awmod	;wreg free
  4493  001460  90D8               	bcf	status,0,c
  4494  001462  363C               	rlcf	?___awmod,f,c
  4495  001464  363D               	rlcf	?___awmod+1,f,c
  4496  001466  90D8               	bcf	status,0,c
  4497  001468  363C               	rlcf	?___awmod,f,c
  4498  00146A  363D               	rlcf	?___awmod+1,f,c
  4499  00146C  0EEB               	movlw	low __npowers_
  4500  00146E  243C               	addwf	?___awmod,w,c
  4501  001470  6EF6               	movwf	tblptrl,c
  4502  001472  0E3E               	movlw	high __npowers_
  4503  001474  203D               	addwfc	?___awmod+1,w,c
  4504  001476  6EF7               	movwf	tblptrh,c
  4505  001478                     	if	0	;There are less than 3 active tblptr bytes
  4506  001478                     	endif
  4507  001478  0009               	tblrd		*+
  4508  00147A  CFF5 F082          	movff	tablat,___flmul@a
  4509  00147E  0009               	tblrd		*+
  4510  001480  CFF5 F083          	movff	tablat,___flmul@a+1
  4511  001484  0009               	tblrd		*+
  4512  001486  CFF5 F084          	movff	tablat,___flmul@a+2
  4513  00148A  000A               	tblrd		*-
  4514  00148C  CFF5 F085          	movff	tablat,___flmul@a+3
  4515  001490  ECE4  F006         	call	___flmul	;wreg free
  4516  001494  D79A               	goto	L4
  4517  001496                     l4749:
  4518                           
  4519                           ;doprnt.c: 434: return _npowers_[scl];
  4520  001496  0100               	movlb	0	; () banked
  4521  001498  519F               	movf	scale@scl& (0+255),w,b
  4522  00149A  0D04               	mullw	4
  4523  00149C  0EEB               	movlw	low __npowers_
  4524  00149E  24F3               	addwf	prodl,w,c
  4525  0014A0  6EF6               	movwf	tblptrl,c
  4526  0014A2  0E3E               	movlw	high __npowers_
  4527  0014A4  20F4               	addwfc	prodh,w,c
  4528  0014A6  6EF7               	movwf	tblptrh,c
  4529  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  4530  0014A8                     	endif
  4531  0014A8  0009               	tblrd		*+
  4532  0014AA  CFF5 F097          	movff	tablat,?_scale
  4533  0014AE  0009               	tblrd		*+
  4534  0014B0  CFF5 F098          	movff	tablat,?_scale+1
  4535  0014B4  0009               	tblrd		*+
  4536  0014B6  CFF5 F099          	movff	tablat,?_scale+2
  4537  0014BA  000A               	tblrd		*-
  4538  0014BC  CFF5 F09A          	movff	tablat,?_scale+3
  4539                           
  4540                           ; BSR set to: 0
  4541  0014C0  0012               	return	
  4542  0014C2                     l4753:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;doprnt.c: 435: }
  4546                           ;doprnt.c: 436: if(scl>=110)
  4547  0014C2  0100               	movlb	0	; () banked
  4548  0014C4  519F               	movf	scale@scl& (0+255),w,b
  4549  0014C6  0A80               	xorlw	128
  4550  0014C8  0F12               	addlw	-238
  4551  0014CA  A0D8               	btfss	status,0,c
  4552  0014CC  D0AA               	goto	l4761
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4556  0014CE  0E00               	movlw	0
  4557  0014D0  0100               	movlb	0	; () banked
  4558  0014D2  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4559  0014D4  0E0A               	movlw	10
  4560  0014D6  6F72               	movwf	___awdiv@divisor& (0+255),b
  4561  0014D8  0E00               	movlw	0
  4562  0014DA  6E3F               	movwf	___awmod@divisor+1,c
  4563  0014DC  0E64               	movlw	100
  4564  0014DE  6E3E               	movwf	___awmod@divisor,c
  4565  0014E0  0100               	movlb	0	; () banked
  4566  0014E2  519F               	movf	scale@scl& (0+255),w,b
  4567  0014E4  6E3C               	movwf	___awmod@dividend,c
  4568  0014E6  6A3D               	clrf	___awmod@dividend+1,c
  4569  0014E8  BE3C               	btfsc	___awmod@dividend,7,c
  4570  0014EA  063D               	decf	___awmod@dividend+1,f,c
  4571  0014EC  ECFD  F015         	call	___awmod	;wreg free
  4572  0014F0  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4573  0014F4  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4574  0014F8  EC53  F014         	call	___awdiv	;wreg free
  4575  0014FC  0100               	movlb	0	; () banked
  4576  0014FE  90D8               	bcf	status,0,c
  4577  001500  3770               	rlcf	?___awdiv& (0+255),f,b
  4578  001502  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4579  001504  0100               	movlb	0	; () banked
  4580  001506  90D8               	bcf	status,0,c
  4581  001508  3770               	rlcf	?___awdiv& (0+255),f,b
  4582  00150A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4583  00150C  0E24               	movlw	36
  4584  00150E  0100               	movlb	0	; () banked
  4585  001510  2770               	addwf	?___awdiv& (0+255),f,b
  4586  001512  0E00               	movlw	0
  4587  001514  0100               	movlb	0	; () banked
  4588  001516  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4589  001518  0E1F               	movlw	low __powers_
  4590  00151A  0100               	movlb	0	; () banked
  4591  00151C  2570               	addwf	?___awdiv& (0+255),w,b
  4592  00151E  6EF6               	movwf	tblptrl,c
  4593  001520  0E3F               	movlw	high __powers_
  4594  001522  0100               	movlb	0	; () banked
  4595  001524  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4596  001526  6EF7               	movwf	tblptrh,c
  4597  001528                     	if	0	;There are less than 3 active tblptr bytes
  4598  001528                     	endif
  4599  001528  0009               	tblrd		*+
  4600  00152A  CFF5 F082          	movff	tablat,___flmul@a
  4601  00152E  0009               	tblrd		*+
  4602  001530  CFF5 F083          	movff	tablat,___flmul@a+1
  4603  001534  0009               	tblrd		*+
  4604  001536  CFF5 F084          	movff	tablat,___flmul@a+2
  4605  00153A  000A               	tblrd		*-
  4606  00153C  CFF5 F085          	movff	tablat,___flmul@a+3
  4607  001540  0E00               	movlw	0
  4608  001542  0100               	movlb	0	; () banked
  4609  001544  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4610  001546  0E64               	movlw	100
  4611  001548  6F72               	movwf	___awdiv@divisor& (0+255),b
  4612  00154A  0100               	movlb	0	; () banked
  4613  00154C  519F               	movf	scale@scl& (0+255),w,b
  4614  00154E  0100               	movlb	0	; () banked
  4615  001550  6F70               	movwf	___awdiv@dividend& (0+255),b
  4616  001552  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4617  001554  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4618  001556  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4619  001558  EC53  F014         	call	___awdiv	;wreg free
  4620  00155C  0100               	movlb	0	; () banked
  4621  00155E  90D8               	bcf	status,0,c
  4622  001560  3770               	rlcf	?___awdiv& (0+255),f,b
  4623  001562  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4624  001564  0100               	movlb	0	; () banked
  4625  001566  90D8               	bcf	status,0,c
  4626  001568  3770               	rlcf	?___awdiv& (0+255),f,b
  4627  00156A  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4628  00156C  0E48               	movlw	72
  4629  00156E  0100               	movlb	0	; () banked
  4630  001570  2770               	addwf	?___awdiv& (0+255),f,b
  4631  001572  0E00               	movlw	0
  4632  001574  0100               	movlb	0	; () banked
  4633  001576  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4634  001578  0E1F               	movlw	low __powers_
  4635  00157A  0100               	movlb	0	; () banked
  4636  00157C  2570               	addwf	?___awdiv& (0+255),w,b
  4637  00157E  6EF6               	movwf	tblptrl,c
  4638  001580  0E3F               	movlw	high __powers_
  4639  001582  0100               	movlb	0	; () banked
  4640  001584  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4641  001586  6EF7               	movwf	tblptrh,c
  4642  001588                     	if	0	;There are less than 3 active tblptr bytes
  4643  001588                     	endif
  4644  001588  0009               	tblrd		*+
  4645  00158A  CFF5 F07E          	movff	tablat,___flmul@b
  4646  00158E  0009               	tblrd		*+
  4647  001590  CFF5 F07F          	movff	tablat,___flmul@b+1
  4648  001594  0009               	tblrd		*+
  4649  001596  CFF5 F080          	movff	tablat,___flmul@b+2
  4650  00159A  000A               	tblrd		*-
  4651  00159C  CFF5 F081          	movff	tablat,___flmul@b+3
  4652  0015A0  ECE4  F006         	call	___flmul	;wreg free
  4653  0015A4  C07E  F09B         	movff	?___flmul,_scale$2473
  4654  0015A8  C07F  F09C         	movff	?___flmul+1,_scale$2473+1
  4655  0015AC  C080  F09D         	movff	?___flmul+2,_scale$2473+2
  4656  0015B0  C081  F09E         	movff	?___flmul+3,_scale$2473+3
  4657                           
  4658                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4659  0015B4  C09B  F07E         	movff	_scale$2473,___flmul@b
  4660  0015B8  C09C  F07F         	movff	_scale$2473+1,___flmul@b+1
  4661  0015BC  C09D  F080         	movff	_scale$2473+2,___flmul@b+2
  4662  0015C0  C09E  F081         	movff	_scale$2473+3,___flmul@b+3
  4663  0015C4  0E00               	movlw	0
  4664  0015C6  6E3F               	movwf	___awmod@divisor+1,c
  4665  0015C8  0E0A               	movlw	10
  4666  0015CA  6E3E               	movwf	___awmod@divisor,c
  4667  0015CC  0100               	movlb	0	; () banked
  4668  0015CE  519F               	movf	scale@scl& (0+255),w,b
  4669  0015D0  6E3C               	movwf	___awmod@dividend,c
  4670  0015D2  6A3D               	clrf	___awmod@dividend+1,c
  4671  0015D4  BE3C               	btfsc	___awmod@dividend,7,c
  4672  0015D6  063D               	decf	___awmod@dividend+1,f,c
  4673  0015D8  ECFD  F015         	call	___awmod	;wreg free
  4674  0015DC  90D8               	bcf	status,0,c
  4675  0015DE  363C               	rlcf	?___awmod,f,c
  4676  0015E0  363D               	rlcf	?___awmod+1,f,c
  4677  0015E2  90D8               	bcf	status,0,c
  4678  0015E4  363C               	rlcf	?___awmod,f,c
  4679  0015E6  363D               	rlcf	?___awmod+1,f,c
  4680  0015E8  0E1F               	movlw	low __powers_
  4681  0015EA  243C               	addwf	?___awmod,w,c
  4682  0015EC  6EF6               	movwf	tblptrl,c
  4683  0015EE  0E3F               	movlw	high __powers_
  4684  0015F0  203D               	addwfc	?___awmod+1,w,c
  4685  0015F2  6EF7               	movwf	tblptrh,c
  4686  0015F4                     	if	0	;There are less than 3 active tblptr bytes
  4687  0015F4                     	endif
  4688  0015F4  0009               	tblrd		*+
  4689  0015F6  CFF5 F082          	movff	tablat,___flmul@a
  4690  0015FA  0009               	tblrd		*+
  4691  0015FC  CFF5 F083          	movff	tablat,___flmul@a+1
  4692  001600  0009               	tblrd		*+
  4693  001602  CFF5 F084          	movff	tablat,___flmul@a+2
  4694  001606  000A               	tblrd		*-
  4695  001608  CFF5 F085          	movff	tablat,___flmul@a+3
  4696  00160C  ECE4  F006         	call	___flmul	;wreg free
  4697  001610  C07E  F097         	movff	?___flmul,?_scale
  4698  001614  C07F  F098         	movff	?___flmul+1,?_scale+1
  4699  001618  C080  F099         	movff	?___flmul+2,?_scale+2
  4700  00161C  C081  F09A         	movff	?___flmul+3,?_scale+3
  4701  001620  0012               	return	
  4702  001622                     l4761:
  4703                           
  4704                           ;doprnt.c: 438: else if(scl > 10)
  4705  001622  0100               	movlb	0	; () banked
  4706  001624  519F               	movf	scale@scl& (0+255),w,b
  4707  001626  0A80               	xorlw	128
  4708  001628  0F75               	addlw	-139
  4709  00162A  A0D8               	btfss	status,0,c
  4710  00162C  D057               	goto	l4767
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4714  00162E  0E00               	movlw	0
  4715  001630  0100               	movlb	0	; () banked
  4716  001632  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4717  001634  0E0A               	movlw	10
  4718  001636  6F72               	movwf	___awdiv@divisor& (0+255),b
  4719  001638  0100               	movlb	0	; () banked
  4720  00163A  519F               	movf	scale@scl& (0+255),w,b
  4721  00163C  0100               	movlb	0	; () banked
  4722  00163E  6F70               	movwf	___awdiv@dividend& (0+255),b
  4723  001640  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  4724  001642  BF70               	btfsc	___awdiv@dividend& (0+255),7,b
  4725  001644  0771               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4726  001646  EC53  F014         	call	___awdiv	;wreg free
  4727  00164A  0100               	movlb	0	; () banked
  4728  00164C  90D8               	bcf	status,0,c
  4729  00164E  3770               	rlcf	?___awdiv& (0+255),f,b
  4730  001650  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4731  001652  0100               	movlb	0	; () banked
  4732  001654  90D8               	bcf	status,0,c
  4733  001656  3770               	rlcf	?___awdiv& (0+255),f,b
  4734  001658  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4735  00165A  0E24               	movlw	36
  4736  00165C  0100               	movlb	0	; () banked
  4737  00165E  2770               	addwf	?___awdiv& (0+255),f,b
  4738  001660  0E00               	movlw	0
  4739  001662  0100               	movlb	0	; () banked
  4740  001664  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4741  001666  0E1F               	movlw	low __powers_
  4742  001668  0100               	movlb	0	; () banked
  4743  00166A  2570               	addwf	?___awdiv& (0+255),w,b
  4744  00166C  6EF6               	movwf	tblptrl,c
  4745  00166E  0E3F               	movlw	high __powers_
  4746  001670  0100               	movlb	0	; () banked
  4747  001672  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4748  001674  6EF7               	movwf	tblptrh,c
  4749  001676                     	if	0	;There are less than 3 active tblptr bytes
  4750  001676                     	endif
  4751  001676  0009               	tblrd		*+
  4752  001678  CFF5 F07E          	movff	tablat,___flmul@b
  4753  00167C  0009               	tblrd		*+
  4754  00167E  CFF5 F07F          	movff	tablat,___flmul@b+1
  4755  001682  0009               	tblrd		*+
  4756  001684  CFF5 F080          	movff	tablat,___flmul@b+2
  4757  001688  000A               	tblrd		*-
  4758  00168A  CFF5 F081          	movff	tablat,___flmul@b+3
  4759  00168E  0E00               	movlw	0
  4760  001690  6E3F               	movwf	___awmod@divisor+1,c
  4761  001692  0E0A               	movlw	10
  4762  001694  6E3E               	movwf	___awmod@divisor,c
  4763  001696  0100               	movlb	0	; () banked
  4764  001698  519F               	movf	scale@scl& (0+255),w,b
  4765  00169A  6E3C               	movwf	___awmod@dividend,c
  4766  00169C  6A3D               	clrf	___awmod@dividend+1,c
  4767  00169E  BE3C               	btfsc	___awmod@dividend,7,c
  4768  0016A0  063D               	decf	___awmod@dividend+1,f,c
  4769  0016A2  ECFD  F015         	call	___awmod	;wreg free
  4770  0016A6  90D8               	bcf	status,0,c
  4771  0016A8  363C               	rlcf	?___awmod,f,c
  4772  0016AA  363D               	rlcf	?___awmod+1,f,c
  4773  0016AC  90D8               	bcf	status,0,c
  4774  0016AE  363C               	rlcf	?___awmod,f,c
  4775  0016B0  363D               	rlcf	?___awmod+1,f,c
  4776  0016B2  0E1F               	movlw	low __powers_
  4777  0016B4  243C               	addwf	?___awmod,w,c
  4778  0016B6  6EF6               	movwf	tblptrl,c
  4779  0016B8  0E3F               	movlw	high __powers_
  4780  0016BA  203D               	addwfc	?___awmod+1,w,c
  4781  0016BC  6EF7               	movwf	tblptrh,c
  4782  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  4783  0016BE                     	endif
  4784  0016BE  0009               	tblrd		*+
  4785  0016C0  CFF5 F082          	movff	tablat,___flmul@a
  4786  0016C4  0009               	tblrd		*+
  4787  0016C6  CFF5 F083          	movff	tablat,___flmul@a+1
  4788  0016CA  0009               	tblrd		*+
  4789  0016CC  CFF5 F084          	movff	tablat,___flmul@a+2
  4790  0016D0  000A               	tblrd		*-
  4791  0016D2  CFF5 F085          	movff	tablat,___flmul@a+3
  4792  0016D6  ECE4  F006         	call	___flmul	;wreg free
  4793  0016DA  D79A               	goto	L5
  4794  0016DC                     l4767:
  4795                           
  4796                           ;doprnt.c: 440: return _powers_[scl];
  4797  0016DC  0100               	movlb	0	; () banked
  4798  0016DE  519F               	movf	scale@scl& (0+255),w,b
  4799  0016E0  0D04               	mullw	4
  4800  0016E2  0E1F               	movlw	low __powers_
  4801  0016E4  24F3               	addwf	prodl,w,c
  4802  0016E6  6EF6               	movwf	tblptrl,c
  4803  0016E8  0E3F               	movlw	high __powers_
  4804  0016EA  20F4               	addwfc	prodh,w,c
  4805  0016EC  6EF7               	movwf	tblptrh,c
  4806  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  4807  0016EE                     	endif
  4808  0016EE  0009               	tblrd		*+
  4809  0016F0  CFF5 F097          	movff	tablat,?_scale
  4810  0016F4  0009               	tblrd		*+
  4811  0016F6  CFF5 F098          	movff	tablat,?_scale+1
  4812  0016FA  0009               	tblrd		*+
  4813  0016FC  CFF5 F099          	movff	tablat,?_scale+2
  4814  001700  000A               	tblrd		*-
  4815  001702  CFF5 F09A          	movff	tablat,?_scale+3
  4816  001706  0012               	return	
  4817  001708                     __end_of_scale:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon	equ	0xFF2
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _isdigit *****************
  4835 ;; Defined at:
  4836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  c               1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  c               1   26[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;		None               void
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4850 ;;      Params:         0       0       0       0
  4851 ;;      Locals:         2       0       0       0
  4852 ;;      Temps:          1       0       0       0
  4853 ;;      Totals:         3       0       0       0
  4854 ;;Total ram usage:        3 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    4
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_sprintf
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text14
  4865  003034                     __ptext14:
  4866                           	opt stack 0
  4867  003034                     _isdigit:
  4868                           	opt stack 24
  4869                           
  4870                           ;incstack = 0
  4871                           ;isdigit@c stored from wreg
  4872  003034  6E3E               	movwf	isdigit@c,c
  4873  003036  0E00               	movlw	0
  4874  003038  6E3D               	movwf	_isdigit$2080,c
  4875  00303A  0E3A               	movlw	58
  4876  00303C  603E               	cpfslt	isdigit@c,c
  4877  00303E  D005               	goto	l4779
  4878  003040  0E2F               	movlw	47
  4879  003042  643E               	cpfsgt	isdigit@c,c
  4880  003044  D002               	goto	l4779
  4881  003046  0E01               	movlw	1
  4882  003048  6E3D               	movwf	_isdigit$2080,c
  4883  00304A                     l4779:
  4884  00304A  C03D  F03C         	movff	_isdigit$2080,??_isdigit
  4885  00304E  303C               	rrcf	??_isdigit,w,c
  4886  003050  0012               	return	
  4887  003052                     __end_of_isdigit:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           intcon	equ	0xFF2
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           indf2	equ	0xFDF
  4899                           postinc2	equ	0xFDE
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _fround *****************
  4905 ;; Defined at:
  4906 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  prec            1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  prec            1   67[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  4   55[BANK0 ] unsigned char 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4920 ;;      Params:         0       4       0       0
  4921 ;;      Locals:         0       9       0       0
  4922 ;;      Temps:          0       0       0       0
  4923 ;;      Totals:         0      13       0       0
  4924 ;;Total ram usage:       13 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    5
  4927 ;; This function calls:
  4928 ;;		___awdiv
  4929 ;;		___awmod
  4930 ;;		___flmul
  4931 ;; This function is called by:
  4932 ;;		_sprintf
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text15
  4937  001A7C                     __ptext15:
  4938                           	opt stack 0
  4939  001A7C                     _fround:
  4940                           	opt stack 23
  4941                           
  4942                           ;incstack = 0
  4943                           ;fround@prec stored from wreg
  4944  001A7C  0100               	movlb	0	; () banked
  4945  001A7E  6FA3               	movwf	fround@prec& (0+255),b
  4946                           
  4947                           ;doprnt.c: 413: if(prec>=110)
  4948  001A80  0E6D               	movlw	109
  4949  001A82  0100               	movlb	0	; () banked
  4950  001A84  65A3               	cpfsgt	fround@prec& (0+255),b
  4951  001A86  D0BC               	goto	l4721
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4955  001A88  0E00               	movlw	0
  4956  001A8A  0100               	movlb	0	; () banked
  4957  001A8C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4958  001A8E  0E0A               	movlw	10
  4959  001A90  6F72               	movwf	___awdiv@divisor& (0+255),b
  4960  001A92  0E00               	movlw	0
  4961  001A94  6E3F               	movwf	___awmod@divisor+1,c
  4962  001A96  0E64               	movlw	100
  4963  001A98  6E3E               	movwf	___awmod@divisor,c
  4964  001A9A  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  4965  001A9E  6A3D               	clrf	___awmod@dividend+1,c
  4966  001AA0  ECFD  F015         	call	___awmod	;wreg free
  4967  001AA4  C03C  F070         	movff	?___awmod,___awdiv@dividend
  4968  001AA8  C03D  F071         	movff	?___awmod+1,___awdiv@dividend+1
  4969  001AAC  EC53  F014         	call	___awdiv	;wreg free
  4970  001AB0  0100               	movlb	0	; () banked
  4971  001AB2  90D8               	bcf	status,0,c
  4972  001AB4  3770               	rlcf	?___awdiv& (0+255),f,b
  4973  001AB6  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4974  001AB8  0100               	movlb	0	; () banked
  4975  001ABA  90D8               	bcf	status,0,c
  4976  001ABC  3770               	rlcf	?___awdiv& (0+255),f,b
  4977  001ABE  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  4978  001AC0  0E24               	movlw	36
  4979  001AC2  0100               	movlb	0	; () banked
  4980  001AC4  2770               	addwf	?___awdiv& (0+255),f,b
  4981  001AC6  0E00               	movlw	0
  4982  001AC8  0100               	movlb	0	; () banked
  4983  001ACA  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  4984  001ACC  0EEB               	movlw	low __npowers_
  4985  001ACE  0100               	movlb	0	; () banked
  4986  001AD0  2570               	addwf	?___awdiv& (0+255),w,b
  4987  001AD2  6EF6               	movwf	tblptrl,c
  4988  001AD4  0E3E               	movlw	high __npowers_
  4989  001AD6  0100               	movlb	0	; () banked
  4990  001AD8  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  4991  001ADA  6EF7               	movwf	tblptrh,c
  4992  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  4993  001ADC                     	endif
  4994  001ADC  0009               	tblrd		*+
  4995  001ADE  CFF5 F082          	movff	tablat,___flmul@a
  4996  001AE2  0009               	tblrd		*+
  4997  001AE4  CFF5 F083          	movff	tablat,___flmul@a+1
  4998  001AE8  0009               	tblrd		*+
  4999  001AEA  CFF5 F084          	movff	tablat,___flmul@a+2
  5000  001AEE  000A               	tblrd		*-
  5001  001AF0  CFF5 F085          	movff	tablat,___flmul@a+3
  5002  001AF4  0E00               	movlw	0
  5003  001AF6  0100               	movlb	0	; () banked
  5004  001AF8  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5005  001AFA  0E64               	movlw	100
  5006  001AFC  6F72               	movwf	___awdiv@divisor& (0+255),b
  5007  001AFE  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5008  001B02  0100               	movlb	0	; () banked
  5009  001B04  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5010  001B06  EC53  F014         	call	___awdiv	;wreg free
  5011  001B0A  0100               	movlb	0	; () banked
  5012  001B0C  90D8               	bcf	status,0,c
  5013  001B0E  3770               	rlcf	?___awdiv& (0+255),f,b
  5014  001B10  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5015  001B12  0100               	movlb	0	; () banked
  5016  001B14  90D8               	bcf	status,0,c
  5017  001B16  3770               	rlcf	?___awdiv& (0+255),f,b
  5018  001B18  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5019  001B1A  0E48               	movlw	72
  5020  001B1C  0100               	movlb	0	; () banked
  5021  001B1E  2770               	addwf	?___awdiv& (0+255),f,b
  5022  001B20  0E00               	movlw	0
  5023  001B22  0100               	movlb	0	; () banked
  5024  001B24  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5025  001B26  0EEB               	movlw	low __npowers_
  5026  001B28  0100               	movlb	0	; () banked
  5027  001B2A  2570               	addwf	?___awdiv& (0+255),w,b
  5028  001B2C  6EF6               	movwf	tblptrl,c
  5029  001B2E  0E3E               	movlw	high __npowers_
  5030  001B30  0100               	movlb	0	; () banked
  5031  001B32  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5032  001B34  6EF7               	movwf	tblptrh,c
  5033  001B36                     	if	0	;There are less than 3 active tblptr bytes
  5034  001B36                     	endif
  5035  001B36  0009               	tblrd		*+
  5036  001B38  CFF5 F07E          	movff	tablat,___flmul@b
  5037  001B3C  0009               	tblrd		*+
  5038  001B3E  CFF5 F07F          	movff	tablat,___flmul@b+1
  5039  001B42  0009               	tblrd		*+
  5040  001B44  CFF5 F080          	movff	tablat,___flmul@b+2
  5041  001B48  000A               	tblrd		*-
  5042  001B4A  CFF5 F081          	movff	tablat,___flmul@b+3
  5043  001B4E  ECE4  F006         	call	___flmul	;wreg free
  5044  001B52  C07E  F09F         	movff	?___flmul,_fround$2471
  5045  001B56  C07F  F0A0         	movff	?___flmul+1,_fround$2471+1
  5046  001B5A  C080  F0A1         	movff	?___flmul+2,_fround$2471+2
  5047  001B5E  C081  F0A2         	movff	?___flmul+3,_fround$2471+3
  5048                           
  5049                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5050  001B62  0E00               	movlw	0
  5051  001B64  6E3F               	movwf	___awmod@divisor+1,c
  5052  001B66  0E0A               	movlw	10
  5053  001B68  6E3E               	movwf	___awmod@divisor,c
  5054  001B6A  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5055  001B6E  6A3D               	clrf	___awmod@dividend+1,c
  5056  001B70  ECFD  F015         	call	___awmod	;wreg free
  5057  001B74  90D8               	bcf	status,0,c
  5058  001B76  363C               	rlcf	?___awmod,f,c
  5059  001B78  363D               	rlcf	?___awmod+1,f,c
  5060  001B7A  90D8               	bcf	status,0,c
  5061  001B7C  363C               	rlcf	?___awmod,f,c
  5062  001B7E  363D               	rlcf	?___awmod+1,f,c
  5063  001B80  0EEB               	movlw	low __npowers_
  5064  001B82  243C               	addwf	?___awmod,w,c
  5065  001B84  6EF6               	movwf	tblptrl,c
  5066  001B86  0E3E               	movlw	high __npowers_
  5067  001B88  203D               	addwfc	?___awmod+1,w,c
  5068  001B8A  6EF7               	movwf	tblptrh,c
  5069  001B8C                     	if	0	;There are less than 3 active tblptr bytes
  5070  001B8C                     	endif
  5071  001B8C  0009               	tblrd		*+
  5072  001B8E  CFF5 F082          	movff	tablat,___flmul@a
  5073  001B92  0009               	tblrd		*+
  5074  001B94  CFF5 F083          	movff	tablat,___flmul@a+1
  5075  001B98  0009               	tblrd		*+
  5076  001B9A  CFF5 F084          	movff	tablat,___flmul@a+2
  5077  001B9E  000A               	tblrd		*-
  5078  001BA0  CFF5 F085          	movff	tablat,___flmul@a+3
  5079  001BA4  C09F  F07E         	movff	_fround$2471,___flmul@b
  5080  001BA8  C0A0  F07F         	movff	_fround$2471+1,___flmul@b+1
  5081  001BAC  C0A1  F080         	movff	_fround$2471+2,___flmul@b+2
  5082  001BB0  C0A2  F081         	movff	_fround$2471+3,___flmul@b+3
  5083  001BB4  ECE4  F006         	call	___flmul	;wreg free
  5084  001BB8  C07E  F09B         	movff	?___flmul,_fround$2472
  5085  001BBC  C07F  F09C         	movff	?___flmul+1,_fround$2472+1
  5086  001BC0  C080  F09D         	movff	?___flmul+2,_fround$2472+2
  5087  001BC4  C081  F09E         	movff	?___flmul+3,_fround$2472+3
  5088                           
  5089                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5090  001BC8  C09B  F07E         	movff	_fround$2472,___flmul@b
  5091  001BCC  C09C  F07F         	movff	_fround$2472+1,___flmul@b+1
  5092  001BD0  C09D  F080         	movff	_fround$2472+2,___flmul@b+2
  5093  001BD4  C09E  F081         	movff	_fround$2472+3,___flmul@b+3
  5094  001BD8  0E00               	movlw	0
  5095  001BDA  0100               	movlb	0	; () banked
  5096  001BDC  6F82               	movwf	___flmul@a& (0+255),b
  5097  001BDE  0E00               	movlw	0
  5098  001BE0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5099  001BE2  0E00               	movlw	0
  5100  001BE4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5101  001BE6  0E3F               	movlw	63
  5102  001BE8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5103  001BEA  ECE4  F006         	call	___flmul	;wreg free
  5104  001BEE  C07E  F097         	movff	?___flmul,?_fround
  5105  001BF2  C07F  F098         	movff	?___flmul+1,?_fround+1
  5106  001BF6  C080  F099         	movff	?___flmul+2,?_fround+2
  5107  001BFA  C081  F09A         	movff	?___flmul+3,?_fround+3
  5108  001BFE  0012               	return	
  5109  001C00                     l4721:
  5110                           
  5111                           ;doprnt.c: 415: else if(prec > 10)
  5112  001C00  0E0A               	movlw	10
  5113  001C02  0100               	movlb	0	; () banked
  5114  001C04  65A3               	cpfsgt	fround@prec& (0+255),b
  5115  001C06  D06C               	goto	l4729
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5119  001C08  0E00               	movlw	0
  5120  001C0A  6E3F               	movwf	___awmod@divisor+1,c
  5121  001C0C  0E0A               	movlw	10
  5122  001C0E  6E3E               	movwf	___awmod@divisor,c
  5123  001C10  C0A3  F03C         	movff	fround@prec,___awmod@dividend
  5124  001C14  6A3D               	clrf	___awmod@dividend+1,c
  5125  001C16  ECFD  F015         	call	___awmod	;wreg free
  5126  001C1A  90D8               	bcf	status,0,c
  5127  001C1C  363C               	rlcf	?___awmod,f,c
  5128  001C1E  363D               	rlcf	?___awmod+1,f,c
  5129  001C20  90D8               	bcf	status,0,c
  5130  001C22  363C               	rlcf	?___awmod,f,c
  5131  001C24  363D               	rlcf	?___awmod+1,f,c
  5132  001C26  0EEB               	movlw	low __npowers_
  5133  001C28  243C               	addwf	?___awmod,w,c
  5134  001C2A  6EF6               	movwf	tblptrl,c
  5135  001C2C  0E3E               	movlw	high __npowers_
  5136  001C2E  203D               	addwfc	?___awmod+1,w,c
  5137  001C30  6EF7               	movwf	tblptrh,c
  5138  001C32                     	if	0	;There are less than 3 active tblptr bytes
  5139  001C32                     	endif
  5140  001C32  0009               	tblrd		*+
  5141  001C34  CFF5 F082          	movff	tablat,___flmul@a
  5142  001C38  0009               	tblrd		*+
  5143  001C3A  CFF5 F083          	movff	tablat,___flmul@a+1
  5144  001C3E  0009               	tblrd		*+
  5145  001C40  CFF5 F084          	movff	tablat,___flmul@a+2
  5146  001C44  000A               	tblrd		*-
  5147  001C46  CFF5 F085          	movff	tablat,___flmul@a+3
  5148  001C4A  0E00               	movlw	0
  5149  001C4C  0100               	movlb	0	; () banked
  5150  001C4E  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  5151  001C50  0E0A               	movlw	10
  5152  001C52  6F72               	movwf	___awdiv@divisor& (0+255),b
  5153  001C54  C0A3  F070         	movff	fround@prec,___awdiv@dividend
  5154  001C58  0100               	movlb	0	; () banked
  5155  001C5A  6B71               	clrf	(___awdiv@dividend+1)& (0+255),b
  5156  001C5C  EC53  F014         	call	___awdiv	;wreg free
  5157  001C60  0100               	movlb	0	; () banked
  5158  001C62  90D8               	bcf	status,0,c
  5159  001C64  3770               	rlcf	?___awdiv& (0+255),f,b
  5160  001C66  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5161  001C68  0100               	movlb	0	; () banked
  5162  001C6A  90D8               	bcf	status,0,c
  5163  001C6C  3770               	rlcf	?___awdiv& (0+255),f,b
  5164  001C6E  3771               	rlcf	(?___awdiv+1)& (0+255),f,b
  5165  001C70  0E24               	movlw	36
  5166  001C72  0100               	movlb	0	; () banked
  5167  001C74  2770               	addwf	?___awdiv& (0+255),f,b
  5168  001C76  0E00               	movlw	0
  5169  001C78  0100               	movlb	0	; () banked
  5170  001C7A  2371               	addwfc	(?___awdiv+1)& (0+255),f,b
  5171  001C7C  0EEB               	movlw	low __npowers_
  5172  001C7E  0100               	movlb	0	; () banked
  5173  001C80  2570               	addwf	?___awdiv& (0+255),w,b
  5174  001C82  6EF6               	movwf	tblptrl,c
  5175  001C84  0E3E               	movlw	high __npowers_
  5176  001C86  0100               	movlb	0	; () banked
  5177  001C88  2171               	addwfc	(?___awdiv+1)& (0+255),w,b
  5178  001C8A  6EF7               	movwf	tblptrh,c
  5179  001C8C                     	if	0	;There are less than 3 active tblptr bytes
  5180  001C8C                     	endif
  5181  001C8C  0009               	tblrd		*+
  5182  001C8E  CFF5 F07E          	movff	tablat,___flmul@b
  5183  001C92  0009               	tblrd		*+
  5184  001C94  CFF5 F07F          	movff	tablat,___flmul@b+1
  5185  001C98  0009               	tblrd		*+
  5186  001C9A  CFF5 F080          	movff	tablat,___flmul@b+2
  5187  001C9E  000A               	tblrd		*-
  5188  001CA0  CFF5 F081          	movff	tablat,___flmul@b+3
  5189  001CA4  ECE4  F006         	call	___flmul	;wreg free
  5190  001CA8  C07E  F09F         	movff	?___flmul,_fround$2471
  5191  001CAC  C07F  F0A0         	movff	?___flmul+1,_fround$2471+1
  5192  001CB0  C080  F0A1         	movff	?___flmul+2,_fround$2471+2
  5193  001CB4  C081  F0A2         	movff	?___flmul+3,_fround$2471+3
  5194                           
  5195                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5196  001CB8  C09F  F07E         	movff	_fround$2471,___flmul@b
  5197  001CBC  C0A0  F07F         	movff	_fround$2471+1,___flmul@b+1
  5198  001CC0  C0A1  F080         	movff	_fround$2471+2,___flmul@b+2
  5199  001CC4  C0A2  F081         	movff	_fround$2471+3,___flmul@b+3
  5200  001CC8  0E00               	movlw	0
  5201  001CCA  0100               	movlb	0	; () banked
  5202  001CCC  6F82               	movwf	___flmul@a& (0+255),b
  5203  001CCE  0E00               	movlw	0
  5204  001CD0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5205  001CD2  0E00               	movlw	0
  5206  001CD4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5207  001CD6  0E3F               	movlw	63
  5208  001CD8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5209  001CDA  ECE4  F006         	call	___flmul	;wreg free
  5210  001CDE  D787               	goto	L6
  5211  001CE0                     l4729:
  5212                           
  5213                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5214  001CE0  0100               	movlb	0	; () banked
  5215  001CE2  51A3               	movf	fround@prec& (0+255),w,b
  5216  001CE4  0D04               	mullw	4
  5217  001CE6  0EEB               	movlw	low __npowers_
  5218  001CE8  24F3               	addwf	prodl,w,c
  5219  001CEA  6EF6               	movwf	tblptrl,c
  5220  001CEC  0E3E               	movlw	high __npowers_
  5221  001CEE  20F4               	addwfc	prodh,w,c
  5222  001CF0  6EF7               	movwf	tblptrh,c
  5223  001CF2                     	if	0	;There are less than 3 active tblptr bytes
  5224  001CF2                     	endif
  5225  001CF2  0009               	tblrd		*+
  5226  001CF4  CFF5 F07E          	movff	tablat,___flmul@b
  5227  001CF8  0009               	tblrd		*+
  5228  001CFA  CFF5 F07F          	movff	tablat,___flmul@b+1
  5229  001CFE  0009               	tblrd		*+
  5230  001D00  CFF5 F080          	movff	tablat,___flmul@b+2
  5231  001D04  000A               	tblrd		*-
  5232  001D06  CFF5 F081          	movff	tablat,___flmul@b+3
  5233  001D0A  0E00               	movlw	0
  5234  001D0C  0100               	movlb	0	; () banked
  5235  001D0E  6F82               	movwf	___flmul@a& (0+255),b
  5236  001D10  0E00               	movlw	0
  5237  001D12  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5238  001D14  0E00               	movlw	0
  5239  001D16  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5240  001D18  0E3F               	movlw	63
  5241  001D1A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5242  001D1C  ECE4  F006         	call	___flmul	;wreg free
  5243  001D20  C07E  F097         	movff	?___flmul,?_fround
  5244  001D24  C07F  F098         	movff	?___flmul+1,?_fround+1
  5245  001D28  C080  F099         	movff	?___flmul+2,?_fround+2
  5246  001D2C  C081  F09A         	movff	?___flmul+3,?_fround+3
  5247  001D30  0012               	return	
  5248  001D32                     __end_of_fround:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           intcon	equ	0xFF2
  5257                           postinc0	equ	0xFEE
  5258                           wreg	equ	0xFE8
  5259                           indf2	equ	0xFDF
  5260                           postinc2	equ	0xFDE
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           status	equ	0xFD8
  5264                           
  5265 ;; *************** function ___flmul *****************
  5266 ;; Defined at:
  5267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  b               4   30[BANK0 ] unsigned char 
  5270 ;;  a               4   34[BANK0 ] unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  prod            4   49[BANK0 ] struct .
  5273 ;;  grs             4   44[BANK0 ] unsigned long 
  5274 ;;  temp            2   53[BANK0 ] struct .
  5275 ;;  bexp            1   48[BANK0 ] unsigned char 
  5276 ;;  aexp            1   43[BANK0 ] unsigned char 
  5277 ;;  sign            1   42[BANK0 ] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  4   30[BANK0 ] unsigned char 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, prodl, prodh
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5287 ;;      Params:         0       8       0       0
  5288 ;;      Locals:         0      13       0       0
  5289 ;;      Temps:          0       4       0       0
  5290 ;;      Totals:         0      25       0       0
  5291 ;;Total ram usage:       25 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;;		_fround
  5299 ;;		_scale
  5300 ;;		_sprintf
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text16
  5305  000DC8                     __ptext16:
  5306                           	opt stack 0
  5307  000DC8                     ___flmul:
  5308                           	opt stack 26
  5309                           
  5310                           ;incstack = 0
  5311  000DC8  0100               	movlb	0	; () banked
  5312  000DCA  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5313  000DCC  0B80               	andlw	128
  5314  000DCE  0100               	movlb	0	; () banked
  5315  000DD0  6F8A               	movwf	___flmul@sign& (0+255),b
  5316  000DD2  0100               	movlb	0	; () banked
  5317  000DD4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  5318  000DD6  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  5319  000DD8  0100               	movlb	0	; () banked
  5320  000DDA  6F90               	movwf	___flmul@bexp& (0+255),b
  5321                           
  5322                           ; BSR set to: 0
  5323  000DDC  0100               	movlb	0	; () banked
  5324  000DDE  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  5325  000DE0  D002               	goto	l4485
  5326                           
  5327                           ; BSR set to: 0
  5328  000DE2  0100               	movlb	0	; () banked
  5329  000DE4  8190               	bsf	___flmul@bexp& (0+255),0,b
  5330  000DE6                     l4485:
  5331                           
  5332                           ; BSR set to: 0
  5333  000DE6  0100               	movlb	0	; () banked
  5334  000DE8  5190               	movf	___flmul@bexp& (0+255),w,b
  5335  000DEA  0100               	movlb	0	; () banked
  5336  000DEC  B4D8               	btfsc	status,2,c
  5337  000DEE  D010               	goto	l4493
  5338                           
  5339                           ; BSR set to: 0
  5340  000DF0  0100               	movlb	0	; () banked
  5341  000DF2  2990               	incf	___flmul@bexp& (0+255),w,b
  5342  000DF4  A4D8               	btfss	status,2,c
  5343  000DF6  D009               	goto	l4491
  5344                           
  5345                           ; BSR set to: 0
  5346  000DF8  0E00               	movlw	0
  5347  000DFA  0100               	movlb	0	; () banked
  5348  000DFC  6F7E               	movwf	___flmul@b& (0+255),b
  5349  000DFE  0E00               	movlw	0
  5350  000E00  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5351  000E02  0E00               	movlw	0
  5352  000E04  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5353  000E06  0E00               	movlw	0
  5354  000E08  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5355  000E0A                     l4491:
  5356                           
  5357                           ; BSR set to: 0
  5358  000E0A  0100               	movlb	0	; () banked
  5359  000E0C  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  5360  000E0E  D009               	goto	l4495
  5361  000E10                     l4493:
  5362                           
  5363                           ; BSR set to: 0
  5364  000E10  0E00               	movlw	0
  5365  000E12  0100               	movlb	0	; () banked
  5366  000E14  6F7E               	movwf	___flmul@b& (0+255),b
  5367  000E16  0E00               	movlw	0
  5368  000E18  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  5369  000E1A  0E00               	movlw	0
  5370  000E1C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  5371  000E1E  0E00               	movlw	0
  5372  000E20  6F81               	movwf	(___flmul@b+3)& (0+255),b
  5373  000E22                     l4495:
  5374                           
  5375                           ; BSR set to: 0
  5376  000E22  0100               	movlb	0	; () banked
  5377  000E24  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5378  000E26  0B80               	andlw	128
  5379  000E28  0100               	movlb	0	; () banked
  5380  000E2A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  5381                           
  5382                           ; BSR set to: 0
  5383  000E2C  0100               	movlb	0	; () banked
  5384  000E2E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  5385  000E30  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  5386  000E32  0100               	movlb	0	; () banked
  5387  000E34  6F8B               	movwf	___flmul@aexp& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390  000E36  0100               	movlb	0	; () banked
  5391  000E38  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  5392  000E3A  D002               	goto	l4503
  5393                           
  5394                           ; BSR set to: 0
  5395  000E3C  0100               	movlb	0	; () banked
  5396  000E3E  818B               	bsf	___flmul@aexp& (0+255),0,b
  5397  000E40                     l4503:
  5398                           
  5399                           ; BSR set to: 0
  5400  000E40  0100               	movlb	0	; () banked
  5401  000E42  518B               	movf	___flmul@aexp& (0+255),w,b
  5402  000E44  0100               	movlb	0	; () banked
  5403  000E46  B4D8               	btfsc	status,2,c
  5404  000E48  D010               	goto	l4511
  5405                           
  5406                           ; BSR set to: 0
  5407  000E4A  0100               	movlb	0	; () banked
  5408  000E4C  298B               	incf	___flmul@aexp& (0+255),w,b
  5409  000E4E  A4D8               	btfss	status,2,c
  5410  000E50  D009               	goto	l4509
  5411                           
  5412                           ; BSR set to: 0
  5413  000E52  0E00               	movlw	0
  5414  000E54  0100               	movlb	0	; () banked
  5415  000E56  6F82               	movwf	___flmul@a& (0+255),b
  5416  000E58  0E00               	movlw	0
  5417  000E5A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5418  000E5C  0E00               	movlw	0
  5419  000E5E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5420  000E60  0E00               	movlw	0
  5421  000E62  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5422  000E64                     l4509:
  5423                           
  5424                           ; BSR set to: 0
  5425  000E64  0100               	movlb	0	; () banked
  5426  000E66  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  5427  000E68  D009               	goto	l1047
  5428  000E6A                     l4511:
  5429                           
  5430                           ; BSR set to: 0
  5431  000E6A  0E00               	movlw	0
  5432  000E6C  0100               	movlb	0	; () banked
  5433  000E6E  6F82               	movwf	___flmul@a& (0+255),b
  5434  000E70  0E00               	movlw	0
  5435  000E72  6F83               	movwf	(___flmul@a+1)& (0+255),b
  5436  000E74  0E00               	movlw	0
  5437  000E76  6F84               	movwf	(___flmul@a+2)& (0+255),b
  5438  000E78  0E00               	movlw	0
  5439  000E7A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  5440  000E7C                     l1047:
  5441                           
  5442                           ; BSR set to: 0
  5443  000E7C  0100               	movlb	0	; () banked
  5444  000E7E  518B               	movf	___flmul@aexp& (0+255),w,b
  5445  000E80  0100               	movlb	0	; () banked
  5446  000E82  B4D8               	btfsc	status,2,c
  5447  000E84  D005               	goto	l4515
  5448                           
  5449                           ; BSR set to: 0
  5450  000E86  0100               	movlb	0	; () banked
  5451  000E88  5190               	movf	___flmul@bexp& (0+255),w,b
  5452  000E8A  0100               	movlb	0	; () banked
  5453  000E8C  A4D8               	btfss	status,2,c
  5454  000E8E  D00A               	goto	l4519
  5455  000E90                     l4515:
  5456                           
  5457                           ; BSR set to: 0
  5458  000E90  0E00               	movlw	0
  5459  000E92  0100               	movlb	0	; () banked
  5460  000E94  6F7E               	movwf	?___flmul& (0+255),b
  5461  000E96  0E00               	movlw	0
  5462  000E98  6F7F               	movwf	(?___flmul+1)& (0+255),b
  5463  000E9A  0E00               	movlw	0
  5464  000E9C  6F80               	movwf	(?___flmul+2)& (0+255),b
  5465  000E9E  0E00               	movlw	0
  5466  000EA0  6F81               	movwf	(?___flmul+3)& (0+255),b
  5467                           
  5468                           ; BSR set to: 0
  5469  000EA2  0012               	return	
  5470  000EA4                     l4519:
  5471                           
  5472                           ; BSR set to: 0
  5473  000EA4  0100               	movlb	0	; () banked
  5474  000EA6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5475  000EA8  0100               	movlb	0	; () banked
  5476  000EAA  037E               	mulwf	___flmul@b& (0+255),b
  5477  000EAC  CFF3 F095          	movff	prodl,___flmul@temp
  5478  000EB0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5479                           
  5480                           ; BSR set to: 0
  5481  000EB4  0100               	movlb	0	; () banked
  5482  000EB6  5195               	movf	___flmul@temp& (0+255),w,b
  5483  000EB8  0100               	movlb	0	; () banked
  5484  000EBA  6F8C               	movwf	___flmul@grs& (0+255),b
  5485  000EBC  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  5486  000EBE  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  5487  000EC0  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  5488                           
  5489                           ; BSR set to: 0
  5490  000EC2  0100               	movlb	0	; () banked
  5491  000EC4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5492  000EC6  0100               	movlb	0	; () banked
  5493  000EC8  6F91               	movwf	___flmul@prod& (0+255),b
  5494  000ECA  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  5495  000ECC  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  5496  000ECE  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  5497  000ED0  0100               	movlb	0	; () banked
  5498  000ED2  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5499  000ED4  0100               	movlb	0	; () banked
  5500  000ED6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5501  000ED8  CFF3 F095          	movff	prodl,___flmul@temp
  5502  000EDC  CFF4 F096          	movff	prodh,___flmul@temp+1
  5503                           
  5504                           ; BSR set to: 0
  5505  000EE0  0100               	movlb	0	; () banked
  5506  000EE2  5195               	movf	___flmul@temp& (0+255),w,b
  5507  000EE4  0100               	movlb	0	; () banked
  5508  000EE6  278C               	addwf	___flmul@grs& (0+255),f,b
  5509  000EE8  0E00               	movlw	0
  5510  000EEA  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5511  000EEC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5512  000EEE  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5513                           
  5514                           ; BSR set to: 0
  5515  000EF0  0100               	movlb	0	; () banked
  5516  000EF2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5517  000EF4  0100               	movlb	0	; () banked
  5518  000EF6  2791               	addwf	___flmul@prod& (0+255),f,b
  5519  000EF8  0E00               	movlw	0
  5520  000EFA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5521  000EFC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5522  000EFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5523  000F00  0100               	movlb	0	; () banked
  5524  000F02  5182               	movf	___flmul@a& (0+255),w,b
  5525  000F04  0100               	movlb	0	; () banked
  5526  000F06  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5527  000F08  CFF3 F095          	movff	prodl,___flmul@temp
  5528  000F0C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5529                           
  5530                           ; BSR set to: 0
  5531  000F10  0100               	movlb	0	; () banked
  5532  000F12  5195               	movf	___flmul@temp& (0+255),w,b
  5533  000F14  0100               	movlb	0	; () banked
  5534  000F16  278C               	addwf	___flmul@grs& (0+255),f,b
  5535  000F18  0E00               	movlw	0
  5536  000F1A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5537  000F1C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5538  000F1E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5539                           
  5540                           ; BSR set to: 0
  5541  000F20  0100               	movlb	0	; () banked
  5542  000F22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5543  000F24  0100               	movlb	0	; () banked
  5544  000F26  2791               	addwf	___flmul@prod& (0+255),f,b
  5545  000F28  0E00               	movlw	0
  5546  000F2A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5547  000F2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5548  000F2E  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5549                           
  5550                           ; BSR set to: 0
  5551  000F30  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5552  000F34  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5553  000F38  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5554  000F3C  0100               	movlb	0	; () banked
  5555  000F3E  6B8C               	clrf	___flmul@grs& (0+255),b
  5556                           
  5557                           ; BSR set to: 0
  5558  000F40  0100               	movlb	0	; () banked
  5559  000F42  5182               	movf	___flmul@a& (0+255),w,b
  5560  000F44  0100               	movlb	0	; () banked
  5561  000F46  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5562  000F48  CFF3 F095          	movff	prodl,___flmul@temp
  5563  000F4C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5564                           
  5565                           ; BSR set to: 0
  5566  000F50  0100               	movlb	0	; () banked
  5567  000F52  5195               	movf	___flmul@temp& (0+255),w,b
  5568  000F54  0100               	movlb	0	; () banked
  5569  000F56  278C               	addwf	___flmul@grs& (0+255),f,b
  5570  000F58  0100               	movlb	0	; () banked
  5571  000F5A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5572  000F5C  0100               	movlb	0	; () banked
  5573  000F5E  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5574  000F60  0E00               	movlw	0
  5575  000F62  0100               	movlb	0	; () banked
  5576  000F64  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5577  000F66  0E00               	movlw	0
  5578  000F68  0100               	movlb	0	; () banked
  5579  000F6A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5580                           
  5581                           ; BSR set to: 0
  5582  000F6C  0100               	movlb	0	; () banked
  5583  000F6E  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5584  000F70  0100               	movlb	0	; () banked
  5585  000F72  037E               	mulwf	___flmul@b& (0+255),b
  5586  000F74  CFF3 F095          	movff	prodl,___flmul@temp
  5587  000F78  CFF4 F096          	movff	prodh,___flmul@temp+1
  5588                           
  5589                           ; BSR set to: 0
  5590  000F7C  0100               	movlb	0	; () banked
  5591  000F7E  5195               	movf	___flmul@temp& (0+255),w,b
  5592  000F80  0100               	movlb	0	; () banked
  5593  000F82  278C               	addwf	___flmul@grs& (0+255),f,b
  5594  000F84  0100               	movlb	0	; () banked
  5595  000F86  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5596  000F88  0100               	movlb	0	; () banked
  5597  000F8A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5598  000F8C  0E00               	movlw	0
  5599  000F8E  0100               	movlb	0	; () banked
  5600  000F90  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5601  000F92  0E00               	movlw	0
  5602  000F94  0100               	movlb	0	; () banked
  5603  000F96  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5604                           
  5605                           ; BSR set to: 0
  5606  000F98  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5607  000F9C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5608  000FA0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5609  000FA4  0100               	movlb	0	; () banked
  5610  000FA6  6B8C               	clrf	___flmul@grs& (0+255),b
  5611  000FA8  0100               	movlb	0	; () banked
  5612  000FAA  5182               	movf	___flmul@a& (0+255),w,b
  5613  000FAC  0100               	movlb	0	; () banked
  5614  000FAE  037E               	mulwf	___flmul@b& (0+255),b
  5615  000FB0  CFF3 F095          	movff	prodl,___flmul@temp
  5616  000FB4  CFF4 F096          	movff	prodh,___flmul@temp+1
  5617                           
  5618                           ; BSR set to: 0
  5619  000FB8  0100               	movlb	0	; () banked
  5620  000FBA  5195               	movf	___flmul@temp& (0+255),w,b
  5621  000FBC  0100               	movlb	0	; () banked
  5622  000FBE  278C               	addwf	___flmul@grs& (0+255),f,b
  5623  000FC0  0100               	movlb	0	; () banked
  5624  000FC2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5625  000FC4  0100               	movlb	0	; () banked
  5626  000FC6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5627  000FC8  0E00               	movlw	0
  5628  000FCA  0100               	movlb	0	; () banked
  5629  000FCC  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5630  000FCE  0E00               	movlw	0
  5631  000FD0  0100               	movlb	0	; () banked
  5632  000FD2  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5633                           
  5634                           ; BSR set to: 0
  5635  000FD4  0100               	movlb	0	; () banked
  5636  000FD6  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5637  000FD8  0100               	movlb	0	; () banked
  5638  000FDA  037F               	mulwf	(___flmul@b+1)& (0+255),b
  5639  000FDC  CFF3 F095          	movff	prodl,___flmul@temp
  5640  000FE0  CFF4 F096          	movff	prodh,___flmul@temp+1
  5641  000FE4  0100               	movlb	0	; () banked
  5642  000FE6  5195               	movf	___flmul@temp& (0+255),w,b
  5643  000FE8  0100               	movlb	0	; () banked
  5644  000FEA  2791               	addwf	___flmul@prod& (0+255),f,b
  5645  000FEC  0100               	movlb	0	; () banked
  5646  000FEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5647  000FF0  0100               	movlb	0	; () banked
  5648  000FF2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5649  000FF4  0E00               	movlw	0
  5650  000FF6  0100               	movlb	0	; () banked
  5651  000FF8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5652  000FFA  0E00               	movlw	0
  5653  000FFC  0100               	movlb	0	; () banked
  5654  000FFE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5655                           
  5656                           ; BSR set to: 0
  5657  001000  0100               	movlb	0	; () banked
  5658  001002  5183               	movf	(___flmul@a+1)& (0+255),w,b
  5659  001004  0100               	movlb	0	; () banked
  5660  001006  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5661  001008  CFF3 F095          	movff	prodl,___flmul@temp
  5662  00100C  CFF4 F096          	movff	prodh,___flmul@temp+1
  5663                           
  5664                           ; BSR set to: 0
  5665  001010  0100               	movlb	0	; () banked
  5666  001012  5195               	movf	___flmul@temp& (0+255),w,b
  5667  001014  0100               	movlb	0	; () banked
  5668  001016  2791               	addwf	___flmul@prod& (0+255),f,b
  5669  001018  0100               	movlb	0	; () banked
  5670  00101A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5671  00101C  0100               	movlb	0	; () banked
  5672  00101E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5673  001020  0E00               	movlw	0
  5674  001022  0100               	movlb	0	; () banked
  5675  001024  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5676  001026  0E00               	movlw	0
  5677  001028  0100               	movlb	0	; () banked
  5678  00102A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5679  00102C  0100               	movlb	0	; () banked
  5680  00102E  5184               	movf	(___flmul@a+2)& (0+255),w,b
  5681  001030  0100               	movlb	0	; () banked
  5682  001032  0380               	mulwf	(___flmul@b+2)& (0+255),b
  5683  001034  CFF3 F095          	movff	prodl,___flmul@temp
  5684  001038  CFF4 F096          	movff	prodh,___flmul@temp+1
  5685                           
  5686                           ; BSR set to: 0
  5687  00103C  0100               	movlb	0	; () banked
  5688  00103E  5195               	movf	___flmul@temp& (0+255),w,b
  5689  001040  0100               	movlb	0	; () banked
  5690  001042  6F86               	movwf	??___flmul& (0+255),b
  5691  001044  0100               	movlb	0	; () banked
  5692  001046  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5693  001048  0100               	movlb	0	; () banked
  5694  00104A  6F87               	movwf	(??___flmul+1)& (0+255),b
  5695  00104C  0100               	movlb	0	; () banked
  5696  00104E  6B88               	clrf	(??___flmul+2)& (0+255),b
  5697  001050  0100               	movlb	0	; () banked
  5698  001052  6B89               	clrf	(??___flmul+3)& (0+255),b
  5699  001054  C088  F089         	movff	??___flmul+2,??___flmul+3
  5700  001058  C087  F088         	movff	??___flmul+1,??___flmul+2
  5701  00105C  C086  F087         	movff	??___flmul,??___flmul+1
  5702  001060  0100               	movlb	0	; () banked
  5703  001062  6B86               	clrf	??___flmul& (0+255),b
  5704  001064  0100               	movlb	0	; () banked
  5705  001066  5186               	movf	??___flmul& (0+255),w,b
  5706  001068  0100               	movlb	0	; () banked
  5707  00106A  2791               	addwf	___flmul@prod& (0+255),f,b
  5708  00106C  0100               	movlb	0	; () banked
  5709  00106E  5187               	movf	(??___flmul+1)& (0+255),w,b
  5710  001070  0100               	movlb	0	; () banked
  5711  001072  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5712  001074  0100               	movlb	0	; () banked
  5713  001076  5188               	movf	(??___flmul+2)& (0+255),w,b
  5714  001078  0100               	movlb	0	; () banked
  5715  00107A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5716  00107C  0100               	movlb	0	; () banked
  5717  00107E  5189               	movf	(??___flmul+3)& (0+255),w,b
  5718  001080  0100               	movlb	0	; () banked
  5719  001082  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 0
  5722  001084  C08C  F086         	movff	___flmul@grs,??___flmul
  5723  001088  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  5724  00108C  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  5725  001090  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  5726  001094  0E19               	movlw	25
  5727  001096  D006               	goto	u5110
  5728  001098                     u5115:
  5729  001098  0100               	movlb	0	; () banked
  5730  00109A  90D8               	bcf	status,0,c
  5731  00109C  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5732  00109E  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5733  0010A0  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5734  0010A2  3386               	rrcf	??___flmul& (0+255),f,b
  5735  0010A4                     u5110:
  5736  0010A4  2EE8               	decfsz	wreg,f,c
  5737  0010A6  D7F8               	goto	u5115
  5738  0010A8  0100               	movlb	0	; () banked
  5739  0010AA  5186               	movf	??___flmul& (0+255),w,b
  5740  0010AC  0100               	movlb	0	; () banked
  5741  0010AE  2791               	addwf	___flmul@prod& (0+255),f,b
  5742  0010B0  0100               	movlb	0	; () banked
  5743  0010B2  5187               	movf	(??___flmul+1)& (0+255),w,b
  5744  0010B4  0100               	movlb	0	; () banked
  5745  0010B6  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5746  0010B8  0100               	movlb	0	; () banked
  5747  0010BA  5188               	movf	(??___flmul+2)& (0+255),w,b
  5748  0010BC  0100               	movlb	0	; () banked
  5749  0010BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5750  0010C0  0100               	movlb	0	; () banked
  5751  0010C2  5189               	movf	(??___flmul+3)& (0+255),w,b
  5752  0010C4  0100               	movlb	0	; () banked
  5753  0010C6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5754                           
  5755                           ; BSR set to: 0
  5756  0010C8  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  5757  0010CC  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  5758  0010D0  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  5759  0010D4  0100               	movlb	0	; () banked
  5760  0010D6  6B8C               	clrf	___flmul@grs& (0+255),b
  5761                           
  5762                           ; BSR set to: 0
  5763  0010D8  0100               	movlb	0	; () banked
  5764  0010DA  518B               	movf	___flmul@aexp& (0+255),w,b
  5765  0010DC  C090  F086         	movff	___flmul@bexp,??___flmul
  5766  0010E0  0100               	movlb	0	; () banked
  5767  0010E2  6B87               	clrf	(??___flmul+1)& (0+255),b
  5768  0010E4  0100               	movlb	0	; () banked
  5769  0010E6  2786               	addwf	??___flmul& (0+255),f,b
  5770  0010E8  0E00               	movlw	0
  5771  0010EA  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  5772  0010EC  0E82               	movlw	130
  5773  0010EE  0100               	movlb	0	; () banked
  5774  0010F0  2586               	addwf	??___flmul& (0+255),w,b
  5775  0010F2  0100               	movlb	0	; () banked
  5776  0010F4  6F95               	movwf	___flmul@temp& (0+255),b
  5777  0010F6  0EFF               	movlw	255
  5778  0010F8  0100               	movlb	0	; () banked
  5779  0010FA  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  5780  0010FC  0100               	movlb	0	; () banked
  5781  0010FE  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  5782  001100  D015               	goto	l4567
  5783  001102                     l4561:
  5784                           
  5785                           ; BSR set to: 0
  5786  001102  0100               	movlb	0	; () banked
  5787  001104  90D8               	bcf	status,0,c
  5788  001106  3791               	rlcf	___flmul@prod& (0+255),f,b
  5789  001108  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5790  00110A  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5791  00110C  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5792                           
  5793                           ; BSR set to: 0
  5794  00110E  0100               	movlb	0	; () banked
  5795  001110  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5796  001112  D002               	goto	l1054
  5797                           
  5798                           ; BSR set to: 0
  5799  001114  0100               	movlb	0	; () banked
  5800  001116  8191               	bsf	___flmul@prod& (0+255),0,b
  5801  001118                     l1054:
  5802                           
  5803                           ; BSR set to: 0
  5804  001118  0100               	movlb	0	; () banked
  5805  00111A  90D8               	bcf	status,0,c
  5806  00111C  378C               	rlcf	___flmul@grs& (0+255),f,b
  5807  00111E  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5808  001120  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5809  001122  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5810  001124  0100               	movlb	0	; () banked
  5811  001126  0795               	decf	___flmul@temp& (0+255),f,b
  5812  001128  A0D8               	btfss	status,0,c
  5813  00112A  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  5814  00112C                     l4567:
  5815                           
  5816                           ; BSR set to: 0
  5817  00112C  0100               	movlb	0	; () banked
  5818  00112E  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  5819  001130  D7E8               	goto	l4561
  5820                           
  5821                           ; BSR set to: 0
  5822                           
  5823                           ; BSR set to: 0
  5824  001132  0E00               	movlw	0
  5825  001134  0100               	movlb	0	; () banked
  5826  001136  6F8B               	movwf	___flmul@aexp& (0+255),b
  5827                           
  5828                           ; BSR set to: 0
  5829  001138  0100               	movlb	0	; () banked
  5830  00113A  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5831  00113C  D024               	goto	l1056
  5832                           
  5833                           ; BSR set to: 0
  5834  00113E  0EFF               	movlw	255
  5835  001140  0100               	movlb	0	; () banked
  5836  001142  158C               	andwf	___flmul@grs& (0+255),w,b
  5837  001144  0100               	movlb	0	; () banked
  5838  001146  6F86               	movwf	??___flmul& (0+255),b
  5839  001148  0EFF               	movlw	255
  5840  00114A  0100               	movlb	0	; () banked
  5841  00114C  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5842  00114E  0100               	movlb	0	; () banked
  5843  001150  6F87               	movwf	(??___flmul+1)& (0+255),b
  5844  001152  0EFF               	movlw	255
  5845  001154  0100               	movlb	0	; () banked
  5846  001156  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5847  001158  0100               	movlb	0	; () banked
  5848  00115A  6F88               	movwf	(??___flmul+2)& (0+255),b
  5849  00115C  0E7F               	movlw	127
  5850  00115E  0100               	movlb	0	; () banked
  5851  001160  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5852  001162  0100               	movlb	0	; () banked
  5853  001164  6F89               	movwf	(??___flmul+3)& (0+255),b
  5854  001166  0100               	movlb	0	; () banked
  5855  001168  5186               	movf	??___flmul& (0+255),w,b
  5856  00116A  0100               	movlb	0	; () banked
  5857  00116C  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  5858  00116E  0100               	movlb	0	; () banked
  5859  001170  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  5860  001172  0100               	movlb	0	; () banked
  5861  001174  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  5862  001176  A4D8               	btfss	status,2,c
  5863  001178  D003               	goto	l4577
  5864                           
  5865                           ; BSR set to: 0
  5866                           
  5867                           ; BSR set to: 0
  5868  00117A  0100               	movlb	0	; () banked
  5869  00117C  A191               	btfss	___flmul@prod& (0+255),0,b
  5870  00117E  D003               	goto	l1056
  5871  001180                     l4577:
  5872                           
  5873                           ; BSR set to: 0
  5874  001180  0E01               	movlw	1
  5875  001182  0100               	movlb	0	; () banked
  5876  001184  6F8B               	movwf	___flmul@aexp& (0+255),b
  5877  001186                     l1056:
  5878                           
  5879                           ; BSR set to: 0
  5880  001186  0100               	movlb	0	; () banked
  5881  001188  518B               	movf	___flmul@aexp& (0+255),w,b
  5882  00118A  0100               	movlb	0	; () banked
  5883  00118C  B4D8               	btfsc	status,2,c
  5884  00118E  D023               	goto	l4587
  5885                           
  5886                           ; BSR set to: 0
  5887  001190  0E01               	movlw	1
  5888  001192  0100               	movlb	0	; () banked
  5889  001194  2791               	addwf	___flmul@prod& (0+255),f,b
  5890  001196  0E00               	movlw	0
  5891  001198  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5892  00119A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5893  00119C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5894                           
  5895                           ; BSR set to: 0
  5896  00119E  0100               	movlb	0	; () banked
  5897  0011A0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  5898  0011A2  D019               	goto	l4587
  5899                           
  5900                           ; BSR set to: 0
  5901  0011A4  C091  F086         	movff	___flmul@prod,??___flmul
  5902  0011A8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  5903  0011AC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  5904  0011B0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  5905  0011B4  0100               	movlb	0	; () banked
  5906  0011B6  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  5907  0011B8  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  5908  0011BA  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  5909  0011BC  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  5910  0011BE  3386               	rrcf	??___flmul& (0+255),f,b
  5911  0011C0  C086  F091         	movff	??___flmul,___flmul@prod
  5912  0011C4  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  5913  0011C8  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  5914  0011CC  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  5915                           
  5916                           ; BSR set to: 0
  5917  0011D0  0100               	movlb	0	; () banked
  5918  0011D2  4B95               	infsnz	___flmul@temp& (0+255),f,b
  5919  0011D4  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  5920  0011D6                     l4587:
  5921                           
  5922                           ; BSR set to: 0
  5923  0011D6  0100               	movlb	0	; () banked
  5924  0011D8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5925  0011DA  D010               	goto	l4591
  5926  0011DC  0100               	movlb	0	; () banked
  5927  0011DE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5928  0011E0  E104               	bnz	u5190
  5929  0011E2  0100               	movlb	0	; () banked
  5930  0011E4  2995               	incf	___flmul@temp& (0+255),w,b
  5931  0011E6  A0D8               	btfss	status,0,c
  5932  0011E8  D009               	goto	l4591
  5933  0011EA                     u5190:
  5934                           
  5935                           ; BSR set to: 0
  5936  0011EA  0E00               	movlw	0
  5937  0011EC  0100               	movlb	0	; () banked
  5938  0011EE  6F91               	movwf	___flmul@prod& (0+255),b
  5939  0011F0  0E00               	movlw	0
  5940  0011F2  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5941  0011F4  0E80               	movlw	128
  5942  0011F6  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5943  0011F8  0E7F               	movlw	127
  5944  0011FA  D02B               	goto	L7
  5945  0011FC                     l4591:
  5946                           
  5947                           ; BSR set to: 0
  5948  0011FC  0100               	movlb	0	; () banked
  5949  0011FE  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5950  001200  D007               	goto	l4593
  5951  001202  0100               	movlb	0	; () banked
  5952  001204  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  5953  001206  E111               	bnz	l1064
  5954  001208  0100               	movlb	0	; () banked
  5955  00120A  0595               	decf	___flmul@temp& (0+255),w,b
  5956  00120C  B0D8               	btfsc	status,0,c
  5957  00120E  D00D               	goto	l1064
  5958  001210                     l4593:
  5959                           
  5960                           ; BSR set to: 0
  5961  001210  0E00               	movlw	0
  5962  001212  0100               	movlb	0	; () banked
  5963  001214  6F91               	movwf	___flmul@prod& (0+255),b
  5964  001216  0E00               	movlw	0
  5965  001218  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  5966  00121A  0E00               	movlw	0
  5967  00121C  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  5968  00121E  0E00               	movlw	0
  5969  001220  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  5970  001222  0E00               	movlw	0
  5971  001224  0100               	movlb	0	; () banked
  5972  001226  6F8A               	movwf	___flmul@sign& (0+255),b
  5973  001228  D015               	goto	l4603
  5974  00122A                     l1064:
  5975                           
  5976                           ; BSR set to: 0
  5977  00122A  C095  F090         	movff	___flmul@temp,___flmul@bexp
  5978                           
  5979                           ; BSR set to: 0
  5980  00122E  0EFF               	movlw	255
  5981  001230  0100               	movlb	0	; () banked
  5982  001232  1791               	andwf	___flmul@prod& (0+255),f,b
  5983  001234  0EFF               	movlw	255
  5984  001236  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  5985  001238  0E7F               	movlw	127
  5986  00123A  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  5987  00123C  0E00               	movlw	0
  5988  00123E  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  5989                           
  5990                           ; BSR set to: 0
  5991  001240  0100               	movlb	0	; () banked
  5992  001242  A190               	btfss	___flmul@bexp& (0+255),0,b
  5993  001244  D002               	goto	l4601
  5994                           
  5995                           ; BSR set to: 0
  5996  001246  0100               	movlb	0	; () banked
  5997  001248  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  5998  00124A                     l4601:
  5999                           
  6000                           ; BSR set to: 0
  6001  00124A  0100               	movlb	0	; () banked
  6002  00124C  90D8               	bcf	status,0,c
  6003  00124E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6004  001250  0100               	movlb	0	; () banked
  6005  001252                     L7:
  6006  001252  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6007  001254                     l4603:
  6008                           
  6009                           ; BSR set to: 0
  6010  001254  0100               	movlb	0	; () banked
  6011  001256  518A               	movf	___flmul@sign& (0+255),w,b
  6012  001258  0100               	movlb	0	; () banked
  6013  00125A  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 0
  6016  00125C  C091  F07E         	movff	___flmul@prod,?___flmul
  6017  001260  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6018  001264  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6019  001268  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6020  00126C  0012               	return	
  6021  00126E                     __end_of___flmul:
  6022                           	opt stack 0
  6023                           tblptru	equ	0xFF8
  6024                           tblptrh	equ	0xFF7
  6025                           tblptrl	equ	0xFF6
  6026                           tablat	equ	0xFF5
  6027                           prodh	equ	0xFF4
  6028                           prodl	equ	0xFF3
  6029                           intcon	equ	0xFF2
  6030                           postinc0	equ	0xFEE
  6031                           wreg	equ	0xFE8
  6032                           indf2	equ	0xFDF
  6033                           postinc2	equ	0xFDE
  6034                           fsr2h	equ	0xFDA
  6035                           fsr2l	equ	0xFD9
  6036                           status	equ	0xFD8
  6037                           
  6038 ;; *************** function ___awmod *****************
  6039 ;; Defined at:
  6040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  dividend        2   24[COMRAM] int 
  6043 ;;  divisor         2   26[COMRAM] int 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  sign            1   29[COMRAM] unsigned char 
  6046 ;;  counter         1   28[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  2   24[COMRAM] int 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6056 ;;      Params:         4       0       0       0
  6057 ;;      Locals:         2       0       0       0
  6058 ;;      Temps:          0       0       0       0
  6059 ;;      Totals:         6       0       0       0
  6060 ;;Total ram usage:        6 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    4
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_fround
  6067 ;;		_scale
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text17
  6072  002BFA                     __ptext17:
  6073                           	opt stack 0
  6074  002BFA                     ___awmod:
  6075                           	opt stack 23
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;incstack = 0
  6079  002BFA  0E00               	movlw	0
  6080  002BFC  6E41               	movwf	___awmod@sign,c
  6081  002BFE  AE3D               	btfss	___awmod@dividend+1,7,c
  6082  002C00  D006               	goto	l4661
  6083  002C02  6C3C               	negf	___awmod@dividend,c
  6084  002C04  1E3D               	comf	___awmod@dividend+1,f,c
  6085  002C06  B0D8               	btfsc	status,0,c
  6086  002C08  2A3D               	incf	___awmod@dividend+1,f,c
  6087  002C0A  0E01               	movlw	1
  6088  002C0C  6E41               	movwf	___awmod@sign,c
  6089  002C0E                     l4661:
  6090  002C0E  AE3F               	btfss	___awmod@divisor+1,7,c
  6091  002C10  D004               	goto	l4665
  6092  002C12  6C3E               	negf	___awmod@divisor,c
  6093  002C14  1E3F               	comf	___awmod@divisor+1,f,c
  6094  002C16  B0D8               	btfsc	status,0,c
  6095  002C18  2A3F               	incf	___awmod@divisor+1,f,c
  6096  002C1A                     l4665:
  6097  002C1A  503E               	movf	___awmod@divisor,w,c
  6098  002C1C  103F               	iorwf	___awmod@divisor+1,w,c
  6099  002C1E  B4D8               	btfsc	status,2,c
  6100  002C20  D018               	goto	l4681
  6101  002C22  0E01               	movlw	1
  6102  002C24  6E40               	movwf	___awmod@counter,c
  6103  002C26  D004               	goto	l4671
  6104  002C28                     l4669:
  6105  002C28  90D8               	bcf	status,0,c
  6106  002C2A  363E               	rlcf	___awmod@divisor,f,c
  6107  002C2C  363F               	rlcf	___awmod@divisor+1,f,c
  6108  002C2E  2A40               	incf	___awmod@counter,f,c
  6109  002C30                     l4671:
  6110  002C30  AE3F               	btfss	___awmod@divisor+1,7,c
  6111  002C32  D7FA               	goto	l4669
  6112  002C34                     l4673:
  6113  002C34  503E               	movf	___awmod@divisor,w,c
  6114  002C36  5C3C               	subwf	___awmod@dividend,w,c
  6115  002C38  503F               	movf	___awmod@divisor+1,w,c
  6116  002C3A  583D               	subwfb	___awmod@dividend+1,w,c
  6117  002C3C  A0D8               	btfss	status,0,c
  6118  002C3E  D004               	goto	l4677
  6119  002C40  503E               	movf	___awmod@divisor,w,c
  6120  002C42  5E3C               	subwf	___awmod@dividend,f,c
  6121  002C44  503F               	movf	___awmod@divisor+1,w,c
  6122  002C46  5A3D               	subwfb	___awmod@dividend+1,f,c
  6123  002C48                     l4677:
  6124  002C48  90D8               	bcf	status,0,c
  6125  002C4A  323F               	rrcf	___awmod@divisor+1,f,c
  6126  002C4C  323E               	rrcf	___awmod@divisor,f,c
  6127  002C4E  2E40               	decfsz	___awmod@counter,f,c
  6128  002C50  D7F1               	goto	l4673
  6129  002C52                     l4681:
  6130  002C52  5041               	movf	___awmod@sign,w,c
  6131  002C54  B4D8               	btfsc	status,2,c
  6132  002C56  D004               	goto	l4685
  6133  002C58  6C3C               	negf	___awmod@dividend,c
  6134  002C5A  1E3D               	comf	___awmod@dividend+1,f,c
  6135  002C5C  B0D8               	btfsc	status,0,c
  6136  002C5E  2A3D               	incf	___awmod@dividend+1,f,c
  6137  002C60                     l4685:
  6138  002C60  C03C  F03C         	movff	___awmod@dividend,?___awmod
  6139  002C64  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  6140  002C68  0012               	return	
  6141  002C6A                     __end_of___awmod:
  6142                           	opt stack 0
  6143                           tblptru	equ	0xFF8
  6144                           tblptrh	equ	0xFF7
  6145                           tblptrl	equ	0xFF6
  6146                           tablat	equ	0xFF5
  6147                           prodh	equ	0xFF4
  6148                           prodl	equ	0xFF3
  6149                           intcon	equ	0xFF2
  6150                           postinc0	equ	0xFEE
  6151                           wreg	equ	0xFE8
  6152                           indf2	equ	0xFDF
  6153                           postinc2	equ	0xFDE
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function ___awdiv *****************
  6159 ;; Defined at:
  6160 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  dividend        2   16[BANK0 ] int 
  6163 ;;  divisor         2   18[BANK0 ] int 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  quotient        2   22[BANK0 ] int 
  6166 ;;  sign            1   21[BANK0 ] unsigned char 
  6167 ;;  counter         1   20[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  2   16[BANK0 ] int 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6177 ;;      Params:         0       4       0       0
  6178 ;;      Locals:         0       4       0       0
  6179 ;;      Temps:          0       0       0       0
  6180 ;;      Totals:         0       8       0       0
  6181 ;;Total ram usage:        8 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    4
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_fround
  6188 ;;		_scale
  6189 ;;		_sprintf
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text18
  6194  0028A6                     __ptext18:
  6195                           	opt stack 0
  6196  0028A6                     ___awdiv:
  6197                           	opt stack 23
  6198                           
  6199                           ;incstack = 0
  6200  0028A6  0E00               	movlw	0
  6201  0028A8  0100               	movlb	0	; () banked
  6202  0028AA  6F75               	movwf	___awdiv@sign& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205  0028AC  0100               	movlb	0	; () banked
  6206  0028AE  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6207  0028B0  D008               	goto	l4617
  6208                           
  6209                           ; BSR set to: 0
  6210  0028B2  0100               	movlb	0	; () banked
  6211  0028B4  6D72               	negf	___awdiv@divisor& (0+255),b
  6212  0028B6  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6213  0028B8  B0D8               	btfsc	status,0,c
  6214  0028BA  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6215                           
  6216                           ; BSR set to: 0
  6217  0028BC  0E01               	movlw	1
  6218  0028BE  0100               	movlb	0	; () banked
  6219  0028C0  6F75               	movwf	___awdiv@sign& (0+255),b
  6220  0028C2                     l4617:
  6221                           
  6222                           ; BSR set to: 0
  6223  0028C2  0100               	movlb	0	; () banked
  6224  0028C4  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6225  0028C6  D008               	goto	l4623
  6226                           
  6227                           ; BSR set to: 0
  6228  0028C8  0100               	movlb	0	; () banked
  6229  0028CA  6D70               	negf	___awdiv@dividend& (0+255),b
  6230  0028CC  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6231  0028CE  B0D8               	btfsc	status,0,c
  6232  0028D0  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6233                           
  6234                           ; BSR set to: 0
  6235  0028D2  0E01               	movlw	1
  6236  0028D4  0100               	movlb	0	; () banked
  6237  0028D6  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  6238  0028D8                     l4623:
  6239                           
  6240                           ; BSR set to: 0
  6241  0028D8  0E00               	movlw	0
  6242  0028DA  0100               	movlb	0	; () banked
  6243  0028DC  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  6244  0028DE  0E00               	movlw	0
  6245  0028E0  6F76               	movwf	___awdiv@quotient& (0+255),b
  6246                           
  6247                           ; BSR set to: 0
  6248  0028E2  0100               	movlb	0	; () banked
  6249  0028E4  5172               	movf	___awdiv@divisor& (0+255),w,b
  6250  0028E6  0100               	movlb	0	; () banked
  6251  0028E8  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6252  0028EA  B4D8               	btfsc	status,2,c
  6253  0028EC  D02C               	goto	l4645
  6254                           
  6255                           ; BSR set to: 0
  6256  0028EE  0E01               	movlw	1
  6257  0028F0  0100               	movlb	0	; () banked
  6258  0028F2  6F74               	movwf	___awdiv@counter& (0+255),b
  6259  0028F4  D006               	goto	l4631
  6260  0028F6                     l4629:
  6261                           
  6262                           ; BSR set to: 0
  6263  0028F6  0100               	movlb	0	; () banked
  6264  0028F8  90D8               	bcf	status,0,c
  6265  0028FA  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  6266  0028FC  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6267  0028FE  0100               	movlb	0	; () banked
  6268  002900  2B74               	incf	___awdiv@counter& (0+255),f,b
  6269  002902                     l4631:
  6270                           
  6271                           ; BSR set to: 0
  6272  002902  0100               	movlb	0	; () banked
  6273  002904  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6274  002906  D7F7               	goto	l4629
  6275  002908                     l4633:
  6276                           
  6277                           ; BSR set to: 0
  6278  002908  0100               	movlb	0	; () banked
  6279  00290A  90D8               	bcf	status,0,c
  6280  00290C  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  6281  00290E  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6282                           
  6283                           ; BSR set to: 0
  6284  002910  0100               	movlb	0	; () banked
  6285  002912  5172               	movf	___awdiv@divisor& (0+255),w,b
  6286  002914  0100               	movlb	0	; () banked
  6287  002916  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  6288  002918  0100               	movlb	0	; () banked
  6289  00291A  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6290  00291C  0100               	movlb	0	; () banked
  6291  00291E  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6292  002920  A0D8               	btfss	status,0,c
  6293  002922  D00A               	goto	l4641
  6294                           
  6295                           ; BSR set to: 0
  6296  002924  0100               	movlb	0	; () banked
  6297  002926  5172               	movf	___awdiv@divisor& (0+255),w,b
  6298  002928  0100               	movlb	0	; () banked
  6299  00292A  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  6300  00292C  0100               	movlb	0	; () banked
  6301  00292E  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6302  002930  0100               	movlb	0	; () banked
  6303  002932  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6304                           
  6305                           ; BSR set to: 0
  6306  002934  0100               	movlb	0	; () banked
  6307  002936  8176               	bsf	___awdiv@quotient& (0+255),0,b
  6308  002938                     l4641:
  6309                           
  6310                           ; BSR set to: 0
  6311  002938  0100               	movlb	0	; () banked
  6312  00293A  90D8               	bcf	status,0,c
  6313  00293C  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6314  00293E  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  6315                           
  6316                           ; BSR set to: 0
  6317  002940  0100               	movlb	0	; () banked
  6318  002942  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  6319  002944  D7E1               	goto	l4633
  6320  002946                     l4645:
  6321                           
  6322                           ; BSR set to: 0
  6323  002946  0100               	movlb	0	; () banked
  6324  002948  5175               	movf	___awdiv@sign& (0+255),w,b
  6325  00294A  0100               	movlb	0	; () banked
  6326  00294C  B4D8               	btfsc	status,2,c
  6327  00294E  D005               	goto	l4649
  6328                           
  6329                           ; BSR set to: 0
  6330  002950  0100               	movlb	0	; () banked
  6331  002952  6D76               	negf	___awdiv@quotient& (0+255),b
  6332  002954  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6333  002956  B0D8               	btfsc	status,0,c
  6334  002958  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6335  00295A                     l4649:
  6336                           
  6337                           ; BSR set to: 0
  6338  00295A  C076  F070         	movff	___awdiv@quotient,?___awdiv
  6339  00295E  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  6340  002962  0012               	return	
  6341  002964                     __end_of___awdiv:
  6342                           	opt stack 0
  6343                           tblptru	equ	0xFF8
  6344                           tblptrh	equ	0xFF7
  6345                           tblptrl	equ	0xFF6
  6346                           tablat	equ	0xFF5
  6347                           prodh	equ	0xFF4
  6348                           prodl	equ	0xFF3
  6349                           intcon	equ	0xFF2
  6350                           postinc0	equ	0xFEE
  6351                           wreg	equ	0xFE8
  6352                           indf2	equ	0xFDF
  6353                           postinc2	equ	0xFDE
  6354                           fsr2h	equ	0xFDA
  6355                           fsr2l	equ	0xFD9
  6356                           status	equ	0xFD8
  6357                           
  6358 ;; *************** function __tdiv_to_l_ *****************
  6359 ;; Defined at:
  6360 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  f1              4   16[BANK0 ] float 
  6363 ;;  f2              4   20[BANK0 ] float 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  quot            4   24[BANK0 ] unsigned long 
  6366 ;;  exp1            1   29[BANK0 ] unsigned char 
  6367 ;;  cntr            1   28[BANK0 ] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  4   16[BANK0 ] unsigned long 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6377 ;;      Params:         0       8       0       0
  6378 ;;      Locals:         0       6       0       0
  6379 ;;      Temps:          3       0       0       0
  6380 ;;      Totals:         3      14       0       0
  6381 ;;Total ram usage:       17 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    4
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_sprintf
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text19
  6392  001F00                     __ptext19:
  6393                           	opt stack 0
  6394  001F00                     __tdiv_to_l_:
  6395                           	opt stack 24
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;incstack = 0
  6399  001F00  C072  F03C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6400  001F04  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6401  001F06  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6402  001F08  0100               	movlb	0	; () banked
  6403  001F0A  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6404  001F0C  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6405  001F0E  E301               	bnc	u5431
  6406  001F10  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6407  001F12                     u5431:
  6408  001F12  503C               	movf	??__tdiv_to_l_,w,c
  6409  001F14  0100               	movlb	0	; () banked
  6410  001F16  6F7D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6411  001F18  0100               	movlb	0	; () banked
  6412  001F1A  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6413  001F1C  A4D8               	btfss	status,2,c
  6414  001F1E  D00A               	goto	l4789
  6415                           
  6416                           ; BSR set to: 0
  6417  001F20  0E00               	movlw	0
  6418  001F22  0100               	movlb	0	; () banked
  6419  001F24  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6420  001F26  0E00               	movlw	0
  6421  001F28  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6422  001F2A  0E00               	movlw	0
  6423  001F2C  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6424  001F2E  0E00               	movlw	0
  6425  001F30  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6426                           
  6427                           ; BSR set to: 0
  6428  001F32  0012               	return	
  6429  001F34                     l4789:
  6430                           
  6431                           ; BSR set to: 0
  6432  001F34  C076  F03C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6433  001F38  6A3D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6434  001F3A  6A3E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6435  001F3C  0100               	movlb	0	; () banked
  6436  001F3E  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6437  001F40  363C               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6438  001F42  E301               	bnc	u5451
  6439  001F44  803D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6440  001F46                     u5451:
  6441  001F46  503C               	movf	??__tdiv_to_l_,w,c
  6442  001F48  0100               	movlb	0	; () banked
  6443  001F4A  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6444  001F4C  0100               	movlb	0	; () banked
  6445  001F4E  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6446  001F50  A4D8               	btfss	status,2,c
  6447  001F52  D00A               	goto	l4795
  6448                           
  6449                           ; BSR set to: 0
  6450  001F54  0E00               	movlw	0
  6451  001F56  0100               	movlb	0	; () banked
  6452  001F58  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6453  001F5A  0E00               	movlw	0
  6454  001F5C  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6455  001F5E  0E00               	movlw	0
  6456  001F60  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6457  001F62  0E00               	movlw	0
  6458  001F64  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6459                           
  6460                           ; BSR set to: 0
  6461  001F66  0012               	return	
  6462  001F68                     l4795:
  6463                           
  6464                           ; BSR set to: 0
  6465  001F68  0100               	movlb	0	; () banked
  6466  001F6A  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6467                           
  6468                           ; BSR set to: 0
  6469  001F6C  0EFF               	movlw	255
  6470  001F6E  0100               	movlb	0	; () banked
  6471  001F70  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6472  001F72  0EFF               	movlw	255
  6473  001F74  0100               	movlb	0	; () banked
  6474  001F76  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6475  001F78  0E00               	movlw	0
  6476  001F7A  0100               	movlb	0	; () banked
  6477  001F7C  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6478  001F7E  0100               	movlb	0	; () banked
  6479  001F80  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6480                           
  6481                           ; BSR set to: 0
  6482  001F82  0EFF               	movlw	255
  6483  001F84  0100               	movlb	0	; () banked
  6484  001F86  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6485  001F88  0EFF               	movlw	255
  6486  001F8A  0100               	movlb	0	; () banked
  6487  001F8C  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6488  001F8E  0E00               	movlw	0
  6489  001F90  0100               	movlb	0	; () banked
  6490  001F92  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6491                           
  6492                           ; BSR set to: 0
  6493  001F94  0E00               	movlw	0
  6494  001F96  0100               	movlb	0	; () banked
  6495  001F98  6F78               	movwf	__tdiv_to_l_@quot& (0+255),b
  6496  001F9A  0E00               	movlw	0
  6497  001F9C  6F79               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6498  001F9E  0E00               	movlw	0
  6499  001FA0  6F7A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6500  001FA2  0E00               	movlw	0
  6501  001FA4  6F7B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6502                           
  6503                           ; BSR set to: 0
  6504  001FA6  0E7F               	movlw	127
  6505  001FA8  0100               	movlb	0	; () banked
  6506  001FAA  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6507                           
  6508                           ; BSR set to: 0
  6509  001FAC  0100               	movlb	0	; () banked
  6510  001FAE  517C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6511  001FB0  0F98               	addlw	152
  6512  001FB2  0100               	movlb	0	; () banked
  6513  001FB4  5F7D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6514                           
  6515                           ; BSR set to: 0
  6516  001FB6  0E18               	movlw	24
  6517  001FB8  0100               	movlb	0	; () banked
  6518  001FBA  6F7C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6519  001FBC                     l771:
  6520                           
  6521                           ; BSR set to: 0
  6522  001FBC  0100               	movlb	0	; () banked
  6523  001FBE  90D8               	bcf	status,0,c
  6524  001FC0  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6525  001FC2  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6526  001FC4  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6527  001FC6  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6528                           
  6529                           ; BSR set to: 0
  6530  001FC8  0100               	movlb	0	; () banked
  6531  001FCA  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6532  001FCC  0100               	movlb	0	; () banked
  6533  001FCE  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6534  001FD0  0100               	movlb	0	; () banked
  6535  001FD2  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6536  001FD4  0100               	movlb	0	; () banked
  6537  001FD6  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6538  001FD8  0100               	movlb	0	; () banked
  6539  001FDA  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6540  001FDC  0100               	movlb	0	; () banked
  6541  001FDE  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6542  001FE0  A0D8               	btfss	status,0,c
  6543  001FE2  D00E               	goto	l772
  6544                           
  6545                           ; BSR set to: 0
  6546  001FE4  0100               	movlb	0	; () banked
  6547  001FE6  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6548  001FE8  0100               	movlb	0	; () banked
  6549  001FEA  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6550  001FEC  0100               	movlb	0	; () banked
  6551  001FEE  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6552  001FF0  0100               	movlb	0	; () banked
  6553  001FF2  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6554  001FF4  0100               	movlb	0	; () banked
  6555  001FF6  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6556  001FF8  0100               	movlb	0	; () banked
  6557  001FFA  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6558                           
  6559                           ; BSR set to: 0
  6560  001FFC  0100               	movlb	0	; () banked
  6561  001FFE  8178               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6562  002000                     l772:
  6563                           
  6564                           ; BSR set to: 0
  6565  002000  0100               	movlb	0	; () banked
  6566  002002  90D8               	bcf	status,0,c
  6567  002004  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6568  002006  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6569  002008  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6570                           
  6571                           ; BSR set to: 0
  6572  00200A  0100               	movlb	0	; () banked
  6573  00200C  2F7C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6574  00200E  D7D6               	goto	l771
  6575                           
  6576                           ; BSR set to: 0
  6577                           
  6578                           ; BSR set to: 0
  6579  002010  0100               	movlb	0	; () banked
  6580  002012  AF7D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6581  002014  D01A               	goto	l4829
  6582                           
  6583                           ; BSR set to: 0
  6584  002016  0100               	movlb	0	; () banked
  6585  002018  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6586  00201A  0A80               	xorlw	128
  6587  00201C  0F97               	addlw	151
  6588  00201E  B0D8               	btfsc	status,0,c
  6589  002020  D00A               	goto	l4825
  6590                           
  6591                           ; BSR set to: 0
  6592  002022  0E00               	movlw	0
  6593  002024  0100               	movlb	0	; () banked
  6594  002026  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6595  002028  0E00               	movlw	0
  6596  00202A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6597  00202C  0E00               	movlw	0
  6598  00202E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6599  002030  0E00               	movlw	0
  6600  002032  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603  002034  0012               	return	
  6604  002036                     l4825:
  6605                           
  6606                           ; BSR set to: 0
  6607  002036  0100               	movlb	0	; () banked
  6608  002038  90D8               	bcf	status,0,c
  6609  00203A  337B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6610  00203C  337A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6611  00203E  3379               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6612  002040  3378               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  002042  0100               	movlb	0	; () banked
  6616  002044  3F7D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6617  002046  D7F7               	goto	l4825
  6618                           
  6619                           ; BSR set to: 0
  6620  002048  D01B               	goto	l778
  6621  00204A                     l4829:
  6622                           
  6623                           ; BSR set to: 0
  6624  00204A  0E17               	movlw	23
  6625  00204C  0100               	movlb	0	; () banked
  6626  00204E  657D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6627  002050  D012               	goto	l4837
  6628                           
  6629                           ; BSR set to: 0
  6630  002052  0E00               	movlw	0
  6631  002054  0100               	movlb	0	; () banked
  6632  002056  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  6633  002058  0E00               	movlw	0
  6634  00205A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6635  00205C  0E00               	movlw	0
  6636  00205E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6637  002060  0E00               	movlw	0
  6638  002062  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6639                           
  6640                           ; BSR set to: 0
  6641  002064  0012               	return	
  6642  002066                     l4835:
  6643                           
  6644                           ; BSR set to: 0
  6645  002066  0100               	movlb	0	; () banked
  6646  002068  90D8               	bcf	status,0,c
  6647  00206A  3778               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6648  00206C  3779               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6649  00206E  377A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6650  002070  377B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6651  002072  0100               	movlb	0	; () banked
  6652  002074  077D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6653  002076                     l4837:
  6654                           
  6655                           ; BSR set to: 0
  6656  002076  0100               	movlb	0	; () banked
  6657  002078  517D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6658  00207A  0100               	movlb	0	; () banked
  6659  00207C  A4D8               	btfss	status,2,c
  6660  00207E  D7F3               	goto	l4835
  6661  002080                     l778:
  6662                           
  6663                           ; BSR set to: 0
  6664  002080  C078  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6665  002084  C079  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6666  002088  C07A  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6667  00208C  C07B  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6668                           
  6669                           ; BSR set to: 0
  6670  002090  0012               	return		;funcret
  6671  002092                     __end_of__tdiv_to_l_:
  6672                           	opt stack 0
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           prodh	equ	0xFF4
  6678                           prodl	equ	0xFF3
  6679                           intcon	equ	0xFF2
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           indf2	equ	0xFDF
  6683                           postinc2	equ	0xFDE
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function __div_to_l_ *****************
  6689 ;; Defined at:
  6690 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  f1              4   16[BANK0 ] unsigned long 
  6693 ;;  f2              4   20[BANK0 ] unsigned long 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  quot            4   24[COMRAM] unsigned long 
  6696 ;;  exp1            1   29[COMRAM] unsigned char 
  6697 ;;  cntr            1   28[COMRAM] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  4   16[BANK0 ] unsigned long 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6707 ;;      Params:         0       8       0       0
  6708 ;;      Locals:         6       0       0       0
  6709 ;;      Temps:          0       0       0       0
  6710 ;;      Totals:         6       8       0       0
  6711 ;;Total ram usage:       14 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    4
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_sprintf
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text20
  6722  002200                     __ptext20:
  6723                           	opt stack 0
  6724  002200                     __div_to_l_:
  6725                           	opt stack 24
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;incstack = 0
  6729  002200  0100               	movlb	0	; () banked
  6730  002202  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6731  002204  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6732  002206  6E41               	movwf	__div_to_l_@exp1,c
  6733  002208  5041               	movf	__div_to_l_@exp1,w,c
  6734  00220A  A4D8               	btfss	status,2,c
  6735  00220C  D00A               	goto	l4845
  6736                           
  6737                           ; BSR set to: 0
  6738  00220E  0E00               	movlw	0
  6739  002210  0100               	movlb	0	; () banked
  6740  002212  6F70               	movwf	?__div_to_l_& (0+255),b
  6741  002214  0E00               	movlw	0
  6742  002216  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6743  002218  0E00               	movlw	0
  6744  00221A  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6745  00221C  0E00               	movlw	0
  6746  00221E  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6747                           
  6748                           ; BSR set to: 0
  6749  002220  0012               	return	
  6750  002222                     l4845:
  6751                           
  6752                           ; BSR set to: 0
  6753  002222  0100               	movlb	0	; () banked
  6754  002224  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6755  002226  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6756  002228  6E40               	movwf	__div_to_l_@cntr,c
  6757  00222A  5040               	movf	__div_to_l_@cntr,w,c
  6758  00222C  A4D8               	btfss	status,2,c
  6759  00222E  D00A               	goto	l4851
  6760                           
  6761                           ; BSR set to: 0
  6762  002230  0E00               	movlw	0
  6763  002232  0100               	movlb	0	; () banked
  6764  002234  6F70               	movwf	?__div_to_l_& (0+255),b
  6765  002236  0E00               	movlw	0
  6766  002238  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6767  00223A  0E00               	movlw	0
  6768  00223C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6769  00223E  0E00               	movlw	0
  6770  002240  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6771                           
  6772                           ; BSR set to: 0
  6773  002242  0012               	return	
  6774  002244                     l4851:
  6775                           
  6776                           ; BSR set to: 0
  6777  002244  0100               	movlb	0	; () banked
  6778  002246  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6779                           
  6780                           ; BSR set to: 0
  6781  002248  0EFF               	movlw	255
  6782  00224A  0100               	movlb	0	; () banked
  6783  00224C  1770               	andwf	__div_to_l_@f1& (0+255),f,b
  6784  00224E  0EFF               	movlw	255
  6785  002250  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6786  002252  0EFF               	movlw	255
  6787  002254  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6788  002256  0E00               	movlw	0
  6789  002258  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6790                           
  6791                           ; BSR set to: 0
  6792  00225A  0100               	movlb	0	; () banked
  6793  00225C  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6794  00225E  0EFF               	movlw	255
  6795  002260  0100               	movlb	0	; () banked
  6796  002262  1774               	andwf	__div_to_l_@f2& (0+255),f,b
  6797  002264  0EFF               	movlw	255
  6798  002266  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6799  002268  0EFF               	movlw	255
  6800  00226A  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6801  00226C  0E00               	movlw	0
  6802  00226E  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6803                           
  6804                           ; BSR set to: 0
  6805  002270  0E00               	movlw	0
  6806  002272  6E3C               	movwf	__div_to_l_@quot,c
  6807  002274  0E00               	movlw	0
  6808  002276  6E3D               	movwf	__div_to_l_@quot+1,c
  6809  002278  0E00               	movlw	0
  6810  00227A  6E3E               	movwf	__div_to_l_@quot+2,c
  6811  00227C  0E00               	movlw	0
  6812  00227E  6E3F               	movwf	__div_to_l_@quot+3,c
  6813                           
  6814                           ; BSR set to: 0
  6815  002280  0E7F               	movlw	127
  6816  002282  5E41               	subwf	__div_to_l_@exp1,f,c
  6817                           
  6818                           ; BSR set to: 0
  6819  002284  5040               	movf	__div_to_l_@cntr,w,c
  6820  002286  0FA0               	addlw	160
  6821  002288  5E41               	subwf	__div_to_l_@exp1,f,c
  6822                           
  6823                           ; BSR set to: 0
  6824  00228A  0E20               	movlw	32
  6825  00228C  6E40               	movwf	__div_to_l_@cntr,c
  6826  00228E                     l4865:
  6827                           
  6828                           ; BSR set to: 0
  6829  00228E  90D8               	bcf	status,0,c
  6830  002290  363C               	rlcf	__div_to_l_@quot,f,c
  6831  002292  363D               	rlcf	__div_to_l_@quot+1,f,c
  6832  002294  363E               	rlcf	__div_to_l_@quot+2,f,c
  6833  002296  363F               	rlcf	__div_to_l_@quot+3,f,c
  6834                           
  6835                           ; BSR set to: 0
  6836  002298  0100               	movlb	0	; () banked
  6837  00229A  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6838  00229C  0100               	movlb	0	; () banked
  6839  00229E  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
  6840  0022A0  0100               	movlb	0	; () banked
  6841  0022A2  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6842  0022A4  0100               	movlb	0	; () banked
  6843  0022A6  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6844  0022A8  0100               	movlb	0	; () banked
  6845  0022AA  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6846  0022AC  0100               	movlb	0	; () banked
  6847  0022AE  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6848  0022B0  0100               	movlb	0	; () banked
  6849  0022B2  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6850  0022B4  0100               	movlb	0	; () banked
  6851  0022B6  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6852  0022B8  A0D8               	btfss	status,0,c
  6853  0022BA  D011               	goto	l4873
  6854                           
  6855                           ; BSR set to: 0
  6856  0022BC  0100               	movlb	0	; () banked
  6857  0022BE  5174               	movf	__div_to_l_@f2& (0+255),w,b
  6858  0022C0  0100               	movlb	0	; () banked
  6859  0022C2  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
  6860  0022C4  0100               	movlb	0	; () banked
  6861  0022C6  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6862  0022C8  0100               	movlb	0	; () banked
  6863  0022CA  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6864  0022CC  0100               	movlb	0	; () banked
  6865  0022CE  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6866  0022D0  0100               	movlb	0	; () banked
  6867  0022D2  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6868  0022D4  0100               	movlb	0	; () banked
  6869  0022D6  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6870  0022D8  0100               	movlb	0	; () banked
  6871  0022DA  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6872                           
  6873                           ; BSR set to: 0
  6874  0022DC  803C               	bsf	__div_to_l_@quot,0,c
  6875  0022DE                     l4873:
  6876                           
  6877                           ; BSR set to: 0
  6878  0022DE  0100               	movlb	0	; () banked
  6879  0022E0  90D8               	bcf	status,0,c
  6880  0022E2  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
  6881  0022E4  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6882  0022E6  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6883  0022E8  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6884                           
  6885                           ; BSR set to: 0
  6886  0022EA  2E40               	decfsz	__div_to_l_@cntr,f,c
  6887  0022EC  D7D0               	goto	l4865
  6888                           
  6889                           ; BSR set to: 0
  6890                           
  6891                           ; BSR set to: 0
  6892  0022EE  AE41               	btfss	__div_to_l_@exp1,7,c
  6893  0022F0  D017               	goto	l4889
  6894                           
  6895                           ; BSR set to: 0
  6896  0022F2  5041               	movf	__div_to_l_@exp1,w,c
  6897  0022F4  0A80               	xorlw	128
  6898  0022F6  0F9F               	addlw	159
  6899  0022F8  B0D8               	btfsc	status,0,c
  6900  0022FA  D00A               	goto	l4885
  6901                           
  6902                           ; BSR set to: 0
  6903  0022FC  0E00               	movlw	0
  6904  0022FE  0100               	movlb	0	; () banked
  6905  002300  6F70               	movwf	?__div_to_l_& (0+255),b
  6906  002302  0E00               	movlw	0
  6907  002304  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6908  002306  0E00               	movlw	0
  6909  002308  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6910  00230A  0E00               	movlw	0
  6911  00230C  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6912                           
  6913                           ; BSR set to: 0
  6914  00230E  0012               	return	
  6915  002310                     l4885:
  6916  002310  90D8               	bcf	status,0,c
  6917  002312  323F               	rrcf	__div_to_l_@quot+3,f,c
  6918  002314  323E               	rrcf	__div_to_l_@quot+2,f,c
  6919  002316  323D               	rrcf	__div_to_l_@quot+1,f,c
  6920  002318  323C               	rrcf	__div_to_l_@quot,f,c
  6921  00231A  3E41               	incfsz	__div_to_l_@exp1,f,c
  6922  00231C  D7F9               	goto	l4885
  6923  00231E  D016               	goto	l674
  6924  002320                     l4889:
  6925  002320  0E1F               	movlw	31
  6926  002322  6441               	cpfsgt	__div_to_l_@exp1,c
  6927  002324  D010               	goto	l4897
  6928  002326  0E00               	movlw	0
  6929  002328  0100               	movlb	0	; () banked
  6930  00232A  6F70               	movwf	?__div_to_l_& (0+255),b
  6931  00232C  0E00               	movlw	0
  6932  00232E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
  6933  002330  0E00               	movlw	0
  6934  002332  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
  6935  002334  0E00               	movlw	0
  6936  002336  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939  002338  0012               	return	
  6940  00233A                     l4895:
  6941  00233A  90D8               	bcf	status,0,c
  6942  00233C  363C               	rlcf	__div_to_l_@quot,f,c
  6943  00233E  363D               	rlcf	__div_to_l_@quot+1,f,c
  6944  002340  363E               	rlcf	__div_to_l_@quot+2,f,c
  6945  002342  363F               	rlcf	__div_to_l_@quot+3,f,c
  6946  002344  0641               	decf	__div_to_l_@exp1,f,c
  6947  002346                     l4897:
  6948  002346  5041               	movf	__div_to_l_@exp1,w,c
  6949  002348  A4D8               	btfss	status,2,c
  6950  00234A  D7F7               	goto	l4895
  6951  00234C                     l674:
  6952  00234C  C03C  F070         	movff	__div_to_l_@quot,?__div_to_l_
  6953  002350  C03D  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6954  002354  C03E  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6955  002358  C03F  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6956  00235C  0012               	return		;funcret
  6957  00235E                     __end_of__div_to_l_:
  6958                           	opt stack 0
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           prodh	equ	0xFF4
  6964                           prodl	equ	0xFF3
  6965                           intcon	equ	0xFF2
  6966                           postinc0	equ	0xFEE
  6967                           wreg	equ	0xFE8
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           fsr2h	equ	0xFDA
  6971                           fsr2l	equ	0xFD9
  6972                           status	equ	0xFD8
  6973                           
  6974 ;; *************** function ___xxtofl *****************
  6975 ;; Defined at:
  6976 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  sign            1    wreg     unsigned char 
  6979 ;;  val             4   16[BANK0 ] long 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  sign            1   24[BANK0 ] unsigned char 
  6982 ;;  arg             4   26[BANK0 ] unsigned long 
  6983 ;;  exp             1   25[BANK0 ] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  4   16[BANK0 ] unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6993 ;;      Params:         0       4       0       0
  6994 ;;      Locals:         0       6       0       0
  6995 ;;      Temps:          0       4       0       0
  6996 ;;      Totals:         0      14       0       0
  6997 ;;Total ram usage:       14 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    4
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;;		_LCD_Handler
  7005 ;;		_sprintf
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text21
  7010  001D32                     __ptext21:
  7011                           	opt stack 0
  7012  001D32                     ___xxtofl:
  7013                           	opt stack 26
  7014                           
  7015                           ;incstack = 0
  7016                           ;___xxtofl@sign stored from wreg
  7017  001D32  0100               	movlb	0	; () banked
  7018  001D34  6F78               	movwf	___xxtofl@sign& (0+255),b
  7019  001D36  0100               	movlb	0	; () banked
  7020  001D38  5178               	movf	___xxtofl@sign& (0+255),w,b
  7021  001D3A  0100               	movlb	0	; () banked
  7022  001D3C  B4D8               	btfsc	status,2,c
  7023  001D3E  D01E               	goto	l1069
  7024                           
  7025                           ; BSR set to: 0
  7026  001D40  0100               	movlb	0	; () banked
  7027  001D42  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7028  001D44  D01B               	goto	l1069
  7029                           
  7030                           ; BSR set to: 0
  7031  001D46  C070  F074         	movff	___xxtofl@val,??___xxtofl
  7032  001D4A  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  7033  001D4E  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  7034  001D52  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  7035  001D56  0100               	movlb	0	; () banked
  7036  001D58  1F74               	comf	??___xxtofl& (0+255),f,b
  7037  001D5A  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  7038  001D5C  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  7039  001D5E  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  7040  001D60  2B74               	incf	??___xxtofl& (0+255),f,b
  7041  001D62  0E00               	movlw	0
  7042  001D64  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7043  001D66  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7044  001D68  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7045  001D6A  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  7046  001D6E  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7047  001D72  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7048  001D76  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7049  001D7A  D008               	goto	l5023
  7050  001D7C                     l1069:
  7051                           
  7052                           ; BSR set to: 0
  7053  001D7C  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  7054  001D80  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7055  001D84  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7056  001D88  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7057  001D8C                     l5023:
  7058                           
  7059                           ; BSR set to: 0
  7060  001D8C  0100               	movlb	0	; () banked
  7061  001D8E  5170               	movf	___xxtofl@val& (0+255),w,b
  7062  001D90  0100               	movlb	0	; () banked
  7063  001D92  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7064  001D94  0100               	movlb	0	; () banked
  7065  001D96  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7066  001D98  0100               	movlb	0	; () banked
  7067  001D9A  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7068  001D9C  A4D8               	btfss	status,2,c
  7069  001D9E  D00A               	goto	l5029
  7070                           
  7071                           ; BSR set to: 0
  7072  001DA0  0E00               	movlw	0
  7073  001DA2  0100               	movlb	0	; () banked
  7074  001DA4  6F70               	movwf	?___xxtofl& (0+255),b
  7075  001DA6  0E00               	movlw	0
  7076  001DA8  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  7077  001DAA  0E00               	movlw	0
  7078  001DAC  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  7079  001DAE  0E00               	movlw	0
  7080  001DB0  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  7081                           
  7082                           ; BSR set to: 0
  7083  001DB2  0012               	return	
  7084  001DB4                     l5029:
  7085                           
  7086                           ; BSR set to: 0
  7087  001DB4  0E96               	movlw	150
  7088  001DB6  0100               	movlb	0	; () banked
  7089  001DB8  6F79               	movwf	___xxtofl@exp& (0+255),b
  7090  001DBA  D008               	goto	l5033
  7091  001DBC                     l5031:
  7092                           
  7093                           ; BSR set to: 0
  7094  001DBC  0100               	movlb	0	; () banked
  7095  001DBE  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7096  001DC0  0100               	movlb	0	; () banked
  7097  001DC2  90D8               	bcf	status,0,c
  7098  001DC4  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7099  001DC6  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7100  001DC8  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7101  001DCA  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7102  001DCC                     l5033:
  7103                           
  7104                           ; BSR set to: 0
  7105  001DCC  0E00               	movlw	0
  7106  001DCE  0100               	movlb	0	; () banked
  7107  001DD0  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7108  001DD2  0100               	movlb	0	; () banked
  7109  001DD4  6F74               	movwf	??___xxtofl& (0+255),b
  7110  001DD6  0E00               	movlw	0
  7111  001DD8  0100               	movlb	0	; () banked
  7112  001DDA  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7113  001DDC  0100               	movlb	0	; () banked
  7114  001DDE  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7115  001DE0  0E00               	movlw	0
  7116  001DE2  0100               	movlb	0	; () banked
  7117  001DE4  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7118  001DE6  0100               	movlb	0	; () banked
  7119  001DE8  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7120  001DEA  0EFE               	movlw	254
  7121  001DEC  0100               	movlb	0	; () banked
  7122  001DEE  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7123  001DF0  0100               	movlb	0	; () banked
  7124  001DF2  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7125  001DF4  0100               	movlb	0	; () banked
  7126  001DF6  5174               	movf	??___xxtofl& (0+255),w,b
  7127  001DF8  0100               	movlb	0	; () banked
  7128  001DFA  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7129  001DFC  0100               	movlb	0	; () banked
  7130  001DFE  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7131  001E00  0100               	movlb	0	; () banked
  7132  001E02  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7133  001E04  B4D8               	btfsc	status,2,c
  7134  001E06  D010               	goto	l1076
  7135  001E08  D7D9               	goto	l5031
  7136  001E0A                     l5035:
  7137                           
  7138                           ; BSR set to: 0
  7139  001E0A  0100               	movlb	0	; () banked
  7140  001E0C  2B79               	incf	___xxtofl@exp& (0+255),f,b
  7141                           
  7142                           ; BSR set to: 0
  7143  001E0E  0E01               	movlw	1
  7144  001E10  0100               	movlb	0	; () banked
  7145  001E12  277A               	addwf	___xxtofl@arg& (0+255),f,b
  7146  001E14  0E00               	movlw	0
  7147  001E16  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7148  001E18  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7149  001E1A  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7150                           
  7151                           ; BSR set to: 0
  7152  001E1C  0100               	movlb	0	; () banked
  7153  001E1E  90D8               	bcf	status,0,c
  7154  001E20  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7155  001E22  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7156  001E24  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7157  001E26  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  7158  001E28                     l1076:
  7159                           
  7160                           ; BSR set to: 0
  7161  001E28  0E00               	movlw	0
  7162  001E2A  0100               	movlb	0	; () banked
  7163  001E2C  157A               	andwf	___xxtofl@arg& (0+255),w,b
  7164  001E2E  0100               	movlb	0	; () banked
  7165  001E30  6F74               	movwf	??___xxtofl& (0+255),b
  7166  001E32  0E00               	movlw	0
  7167  001E34  0100               	movlb	0	; () banked
  7168  001E36  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7169  001E38  0100               	movlb	0	; () banked
  7170  001E3A  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  7171  001E3C  0E00               	movlw	0
  7172  001E3E  0100               	movlb	0	; () banked
  7173  001E40  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7174  001E42  0100               	movlb	0	; () banked
  7175  001E44  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  7176  001E46  0EFF               	movlw	255
  7177  001E48  0100               	movlb	0	; () banked
  7178  001E4A  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7179  001E4C  0100               	movlb	0	; () banked
  7180  001E4E  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  7181  001E50  0100               	movlb	0	; () banked
  7182  001E52  5174               	movf	??___xxtofl& (0+255),w,b
  7183  001E54  0100               	movlb	0	; () banked
  7184  001E56  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7185  001E58  0100               	movlb	0	; () banked
  7186  001E5A  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7187  001E5C  0100               	movlb	0	; () banked
  7188  001E5E  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7189  001E60  B4D8               	btfsc	status,2,c
  7190  001E62  D009               	goto	l5043
  7191  001E64  D7D2               	goto	l5035
  7192  001E66                     l5041:
  7193                           
  7194                           ; BSR set to: 0
  7195  001E66  0100               	movlb	0	; () banked
  7196  001E68  0779               	decf	___xxtofl@exp& (0+255),f,b
  7197  001E6A  0100               	movlb	0	; () banked
  7198  001E6C  90D8               	bcf	status,0,c
  7199  001E6E  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  7200  001E70  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7201  001E72  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7202  001E74  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7203  001E76                     l5043:
  7204                           
  7205                           ; BSR set to: 0
  7206  001E76  0100               	movlb	0	; () banked
  7207  001E78  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7208  001E7A  D004               	goto	l1083
  7209                           
  7210                           ; BSR set to: 0
  7211  001E7C  0E02               	movlw	2
  7212  001E7E  0100               	movlb	0	; () banked
  7213  001E80  6179               	cpfslt	___xxtofl@exp& (0+255),b
  7214  001E82  D7F1               	goto	l5041
  7215  001E84                     l1083:
  7216                           
  7217                           ; BSR set to: 0
  7218  001E84  0100               	movlb	0	; () banked
  7219  001E86  B179               	btfsc	___xxtofl@exp& (0+255),0,b
  7220  001E88  D009               	goto	l1084
  7221                           
  7222                           ; BSR set to: 0
  7223  001E8A  0EFF               	movlw	255
  7224  001E8C  0100               	movlb	0	; () banked
  7225  001E8E  177A               	andwf	___xxtofl@arg& (0+255),f,b
  7226  001E90  0EFF               	movlw	255
  7227  001E92  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7228  001E94  0E7F               	movlw	127
  7229  001E96  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7230  001E98  0EFF               	movlw	255
  7231  001E9A  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7232  001E9C                     l1084:
  7233                           
  7234                           ; BSR set to: 0
  7235  001E9C  0100               	movlb	0	; () banked
  7236  001E9E  90D8               	bcf	status,0,c
  7237  001EA0  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  7238  001EA2  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  7239  001EA6  0100               	movlb	0	; () banked
  7240  001EA8  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7241  001EAA  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7242  001EAC  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  7243  001EAE  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  7244  001EB2  0100               	movlb	0	; () banked
  7245  001EB4  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  7246  001EB6  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  7247  001EB8  6B74               	clrf	??___xxtofl& (0+255),b
  7248  001EBA  0100               	movlb	0	; () banked
  7249  001EBC  5174               	movf	??___xxtofl& (0+255),w,b
  7250  001EBE  0100               	movlb	0	; () banked
  7251  001EC0  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  7252  001EC2  0100               	movlb	0	; () banked
  7253  001EC4  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  7254  001EC6  0100               	movlb	0	; () banked
  7255  001EC8  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7256  001ECA  0100               	movlb	0	; () banked
  7257  001ECC  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  7258  001ECE  0100               	movlb	0	; () banked
  7259  001ED0  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7260  001ED2  0100               	movlb	0	; () banked
  7261  001ED4  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  7262  001ED6  0100               	movlb	0	; () banked
  7263  001ED8  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7264                           
  7265                           ; BSR set to: 0
  7266  001EDA  0100               	movlb	0	; () banked
  7267  001EDC  5178               	movf	___xxtofl@sign& (0+255),w,b
  7268  001EDE  0100               	movlb	0	; () banked
  7269  001EE0  B4D8               	btfsc	status,2,c
  7270  001EE2  D005               	goto	l5055
  7271                           
  7272                           ; BSR set to: 0
  7273  001EE4  0100               	movlb	0	; () banked
  7274  001EE6  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7275  001EE8  D002               	goto	l5055
  7276                           
  7277                           ; BSR set to: 0
  7278  001EEA  0100               	movlb	0	; () banked
  7279  001EEC  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7280  001EEE                     l5055:
  7281                           
  7282                           ; BSR set to: 0
  7283  001EEE  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  7284  001EF2  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  7285  001EF6  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  7286  001EFA  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  7287  001EFE  0012               	return	
  7288  001F00                     __end_of___xxtofl:
  7289                           	opt stack 0
  7290                           tblptru	equ	0xFF8
  7291                           tblptrh	equ	0xFF7
  7292                           tblptrl	equ	0xFF6
  7293                           tablat	equ	0xFF5
  7294                           prodh	equ	0xFF4
  7295                           prodl	equ	0xFF3
  7296                           intcon	equ	0xFF2
  7297                           postinc0	equ	0xFEE
  7298                           wreg	equ	0xFE8
  7299                           indf2	equ	0xFDF
  7300                           postinc2	equ	0xFDE
  7301                           fsr2h	equ	0xFDA
  7302                           fsr2l	equ	0xFD9
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function ___llmod *****************
  7306 ;; Defined at:
  7307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  dividend        4   16[BANK0 ] unsigned long 
  7310 ;;  divisor         4   20[BANK0 ] unsigned long 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  counter         1   24[COMRAM] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  4   16[BANK0 ] unsigned long 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7322 ;;      Params:         0       8       0       0
  7323 ;;      Locals:         1       0       0       0
  7324 ;;      Temps:          0       0       0       0
  7325 ;;      Totals:         1       8       0       0
  7326 ;;Total ram usage:        9 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    4
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_sprintf
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text22
  7337  002B66                     __ptext22:
  7338                           	opt stack 0
  7339  002B66                     ___llmod:
  7340                           	opt stack 24
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;incstack = 0
  7344  002B66  0100               	movlb	0	; () banked
  7345  002B68  5174               	movf	___llmod@divisor& (0+255),w,b
  7346  002B6A  0100               	movlb	0	; () banked
  7347  002B6C  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7348  002B6E  0100               	movlb	0	; () banked
  7349  002B70  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7350  002B72  0100               	movlb	0	; () banked
  7351  002B74  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7352  002B76  B4D8               	btfsc	status,2,c
  7353  002B78  D037               	goto	l877
  7354                           
  7355                           ; BSR set to: 0
  7356  002B7A  0E01               	movlw	1
  7357  002B7C  6E3C               	movwf	___llmod@counter,c
  7358  002B7E  D007               	goto	l5007
  7359  002B80                     l5005:
  7360                           
  7361                           ; BSR set to: 0
  7362  002B80  0100               	movlb	0	; () banked
  7363  002B82  90D8               	bcf	status,0,c
  7364  002B84  3774               	rlcf	___llmod@divisor& (0+255),f,b
  7365  002B86  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7366  002B88  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7367  002B8A  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7368  002B8C  2A3C               	incf	___llmod@counter,f,c
  7369  002B8E                     l5007:
  7370                           
  7371                           ; BSR set to: 0
  7372  002B8E  0100               	movlb	0	; () banked
  7373  002B90  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7374  002B92  D7F6               	goto	l5005
  7375  002B94                     l5009:
  7376                           
  7377                           ; BSR set to: 0
  7378  002B94  0100               	movlb	0	; () banked
  7379  002B96  5174               	movf	___llmod@divisor& (0+255),w,b
  7380  002B98  0100               	movlb	0	; () banked
  7381  002B9A  5D70               	subwf	___llmod@dividend& (0+255),w,b
  7382  002B9C  0100               	movlb	0	; () banked
  7383  002B9E  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7384  002BA0  0100               	movlb	0	; () banked
  7385  002BA2  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7386  002BA4  0100               	movlb	0	; () banked
  7387  002BA6  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7388  002BA8  0100               	movlb	0	; () banked
  7389  002BAA  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7390  002BAC  0100               	movlb	0	; () banked
  7391  002BAE  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7392  002BB0  0100               	movlb	0	; () banked
  7393  002BB2  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7394  002BB4  A0D8               	btfss	status,0,c
  7395  002BB6  D010               	goto	l5013
  7396                           
  7397                           ; BSR set to: 0
  7398  002BB8  0100               	movlb	0	; () banked
  7399  002BBA  5174               	movf	___llmod@divisor& (0+255),w,b
  7400  002BBC  0100               	movlb	0	; () banked
  7401  002BBE  5F70               	subwf	___llmod@dividend& (0+255),f,b
  7402  002BC0  0100               	movlb	0	; () banked
  7403  002BC2  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
  7404  002BC4  0100               	movlb	0	; () banked
  7405  002BC6  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7406  002BC8  0100               	movlb	0	; () banked
  7407  002BCA  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
  7408  002BCC  0100               	movlb	0	; () banked
  7409  002BCE  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7410  002BD0  0100               	movlb	0	; () banked
  7411  002BD2  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
  7412  002BD4  0100               	movlb	0	; () banked
  7413  002BD6  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7414  002BD8                     l5013:
  7415                           
  7416                           ; BSR set to: 0
  7417  002BD8  0100               	movlb	0	; () banked
  7418  002BDA  90D8               	bcf	status,0,c
  7419  002BDC  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7420  002BDE  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7421  002BE0  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7422  002BE2  3374               	rrcf	___llmod@divisor& (0+255),f,b
  7423                           
  7424                           ; BSR set to: 0
  7425  002BE4  2E3C               	decfsz	___llmod@counter,f,c
  7426  002BE6  D7D6               	goto	l5009
  7427  002BE8                     l877:
  7428                           
  7429                           ; BSR set to: 0
  7430  002BE8  C070  F070         	movff	___llmod@dividend,?___llmod
  7431  002BEC  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
  7432  002BF0  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
  7433  002BF4  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
  7434                           
  7435                           ; BSR set to: 0
  7436  002BF8  0012               	return		;funcret
  7437  002BFA                     __end_of___llmod:
  7438                           	opt stack 0
  7439                           tblptru	equ	0xFF8
  7440                           tblptrh	equ	0xFF7
  7441                           tblptrl	equ	0xFF6
  7442                           tablat	equ	0xFF5
  7443                           prodh	equ	0xFF4
  7444                           prodl	equ	0xFF3
  7445                           intcon	equ	0xFF2
  7446                           postinc0	equ	0xFEE
  7447                           wreg	equ	0xFE8
  7448                           indf2	equ	0xFDF
  7449                           postinc2	equ	0xFDE
  7450                           fsr2h	equ	0xFDA
  7451                           fsr2l	equ	0xFD9
  7452                           status	equ	0xFD8
  7453                           
  7454 ;; *************** function ___lldiv *****************
  7455 ;; Defined at:
  7456 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  dividend        4   16[BANK0 ] unsigned long 
  7459 ;;  divisor         4   20[BANK0 ] unsigned long 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  quotient        4   24[COMRAM] unsigned long 
  7462 ;;  counter         1   28[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  4   16[BANK0 ] unsigned long 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7472 ;;      Params:         0       8       0       0
  7473 ;;      Locals:         5       0       0       0
  7474 ;;      Temps:          0       0       0       0
  7475 ;;      Totals:         5       8       0       0
  7476 ;;Total ram usage:       13 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    4
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_sprintf
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text23
  7487  002A20                     __ptext23:
  7488                           	opt stack 0
  7489  002A20                     ___lldiv:
  7490                           	opt stack 24
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;incstack = 0
  7494  002A20  0E00               	movlw	0
  7495  002A22  6E3C               	movwf	___lldiv@quotient,c
  7496  002A24  0E00               	movlw	0
  7497  002A26  6E3D               	movwf	___lldiv@quotient+1,c
  7498  002A28  0E00               	movlw	0
  7499  002A2A  6E3E               	movwf	___lldiv@quotient+2,c
  7500  002A2C  0E00               	movlw	0
  7501  002A2E  6E3F               	movwf	___lldiv@quotient+3,c
  7502  002A30  0100               	movlb	0	; () banked
  7503  002A32  5174               	movf	___lldiv@divisor& (0+255),w,b
  7504  002A34  0100               	movlb	0	; () banked
  7505  002A36  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7506  002A38  0100               	movlb	0	; () banked
  7507  002A3A  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7508  002A3C  0100               	movlb	0	; () banked
  7509  002A3E  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7510  002A40  B4D8               	btfsc	status,2,c
  7511  002A42  D03D               	goto	l867
  7512                           
  7513                           ; BSR set to: 0
  7514  002A44  0E01               	movlw	1
  7515  002A46  6E40               	movwf	___lldiv@counter,c
  7516  002A48  D007               	goto	l4987
  7517  002A4A                     l4985:
  7518                           
  7519                           ; BSR set to: 0
  7520  002A4A  0100               	movlb	0	; () banked
  7521  002A4C  90D8               	bcf	status,0,c
  7522  002A4E  3774               	rlcf	___lldiv@divisor& (0+255),f,b
  7523  002A50  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7524  002A52  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7525  002A54  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7526  002A56  2A40               	incf	___lldiv@counter,f,c
  7527  002A58                     l4987:
  7528                           
  7529                           ; BSR set to: 0
  7530  002A58  0100               	movlb	0	; () banked
  7531  002A5A  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7532  002A5C  D7F6               	goto	l4985
  7533  002A5E                     l4989:
  7534                           
  7535                           ; BSR set to: 0
  7536  002A5E  90D8               	bcf	status,0,c
  7537  002A60  363C               	rlcf	___lldiv@quotient,f,c
  7538  002A62  363D               	rlcf	___lldiv@quotient+1,f,c
  7539  002A64  363E               	rlcf	___lldiv@quotient+2,f,c
  7540  002A66  363F               	rlcf	___lldiv@quotient+3,f,c
  7541                           
  7542                           ; BSR set to: 0
  7543  002A68  0100               	movlb	0	; () banked
  7544  002A6A  5174               	movf	___lldiv@divisor& (0+255),w,b
  7545  002A6C  0100               	movlb	0	; () banked
  7546  002A6E  5D70               	subwf	___lldiv@dividend& (0+255),w,b
  7547  002A70  0100               	movlb	0	; () banked
  7548  002A72  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7549  002A74  0100               	movlb	0	; () banked
  7550  002A76  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7551  002A78  0100               	movlb	0	; () banked
  7552  002A7A  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7553  002A7C  0100               	movlb	0	; () banked
  7554  002A7E  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7555  002A80  0100               	movlb	0	; () banked
  7556  002A82  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7557  002A84  0100               	movlb	0	; () banked
  7558  002A86  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7559  002A88  A0D8               	btfss	status,0,c
  7560  002A8A  D011               	goto	l4997
  7561                           
  7562                           ; BSR set to: 0
  7563  002A8C  0100               	movlb	0	; () banked
  7564  002A8E  5174               	movf	___lldiv@divisor& (0+255),w,b
  7565  002A90  0100               	movlb	0	; () banked
  7566  002A92  5F70               	subwf	___lldiv@dividend& (0+255),f,b
  7567  002A94  0100               	movlb	0	; () banked
  7568  002A96  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7569  002A98  0100               	movlb	0	; () banked
  7570  002A9A  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7571  002A9C  0100               	movlb	0	; () banked
  7572  002A9E  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7573  002AA0  0100               	movlb	0	; () banked
  7574  002AA2  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7575  002AA4  0100               	movlb	0	; () banked
  7576  002AA6  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7577  002AA8  0100               	movlb	0	; () banked
  7578  002AAA  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 0
  7581  002AAC  803C               	bsf	___lldiv@quotient,0,c
  7582  002AAE                     l4997:
  7583                           
  7584                           ; BSR set to: 0
  7585  002AAE  0100               	movlb	0	; () banked
  7586  002AB0  90D8               	bcf	status,0,c
  7587  002AB2  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7588  002AB4  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7589  002AB6  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7590  002AB8  3374               	rrcf	___lldiv@divisor& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593  002ABA  2E40               	decfsz	___lldiv@counter,f,c
  7594  002ABC  D7D0               	goto	l4989
  7595  002ABE                     l867:
  7596                           
  7597                           ; BSR set to: 0
  7598  002ABE  C03C  F070         	movff	___lldiv@quotient,?___lldiv
  7599  002AC2  C03D  F071         	movff	___lldiv@quotient+1,?___lldiv+1
  7600  002AC6  C03E  F072         	movff	___lldiv@quotient+2,?___lldiv+2
  7601  002ACA  C03F  F073         	movff	___lldiv@quotient+3,?___lldiv+3
  7602                           
  7603                           ; BSR set to: 0
  7604  002ACE  0012               	return		;funcret
  7605  002AD0                     __end_of___lldiv:
  7606                           	opt stack 0
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           wreg	equ	0xFE8
  7616                           indf2	equ	0xFDF
  7617                           postinc2	equ	0xFDE
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function ___fltol *****************
  7623 ;; Defined at:
  7624 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  f1              4   64[BANK0 ] unsigned long 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  exp1            1   73[BANK0 ] unsigned char 
  7629 ;;  sign1           1   72[BANK0 ] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  4   64[BANK0 ] long 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7639 ;;      Params:         0       4       0       0
  7640 ;;      Locals:         0       2       0       0
  7641 ;;      Temps:          0       4       0       0
  7642 ;;      Totals:         0      10       0       0
  7643 ;;Total ram usage:       10 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    4
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;;		_sprintf
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text24
  7655  0025D0                     __ptext24:
  7656                           	opt stack 0
  7657  0025D0                     ___fltol:
  7658                           	opt stack 26
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;incstack = 0
  7662  0025D0  0100               	movlb	0	; () banked
  7663  0025D2  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7664  0025D4  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7665  0025D6  0100               	movlb	0	; () banked
  7666  0025D8  6FA9               	movwf	___fltol@exp1& (0+255),b
  7667  0025DA  0100               	movlb	0	; () banked
  7668  0025DC  51A9               	movf	___fltol@exp1& (0+255),w,b
  7669  0025DE  A4D8               	btfss	status,2,c
  7670  0025E0  D00A               	goto	l4941
  7671                           
  7672                           ; BSR set to: 0
  7673  0025E2  0E00               	movlw	0
  7674  0025E4  0100               	movlb	0	; () banked
  7675  0025E6  6FA0               	movwf	?___fltol& (0+255),b
  7676  0025E8  0E00               	movlw	0
  7677  0025EA  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7678  0025EC  0E00               	movlw	0
  7679  0025EE  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7680  0025F0  0E00               	movlw	0
  7681  0025F2  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7682                           
  7683                           ; BSR set to: 0
  7684  0025F4  0012               	return	
  7685  0025F6                     l4941:
  7686                           
  7687                           ; BSR set to: 0
  7688  0025F6  C0A0  F0A4         	movff	___fltol@f1,??___fltol
  7689  0025FA  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
  7690  0025FE  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
  7691  002602  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
  7692  002606  0E20               	movlw	32
  7693  002608  D006               	goto	u5660
  7694  00260A                     u5665:
  7695  00260A  0100               	movlb	0	; () banked
  7696  00260C  90D8               	bcf	status,0,c
  7697  00260E  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
  7698  002610  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
  7699  002612  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
  7700  002614  33A4               	rrcf	??___fltol& (0+255),f,b
  7701  002616                     u5660:
  7702  002616  2EE8               	decfsz	wreg,f,c
  7703  002618  D7F8               	goto	u5665
  7704  00261A  0100               	movlb	0	; () banked
  7705  00261C  51A4               	movf	??___fltol& (0+255),w,b
  7706  00261E  0100               	movlb	0	; () banked
  7707  002620  6FA8               	movwf	___fltol@sign1& (0+255),b
  7708                           
  7709                           ; BSR set to: 0
  7710  002622  0100               	movlb	0	; () banked
  7711  002624  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
  7712                           
  7713                           ; BSR set to: 0
  7714  002626  0EFF               	movlw	255
  7715  002628  0100               	movlb	0	; () banked
  7716  00262A  17A0               	andwf	___fltol@f1& (0+255),f,b
  7717  00262C  0EFF               	movlw	255
  7718  00262E  17A1               	andwf	(___fltol@f1+1)& (0+255),f,b
  7719  002630  0EFF               	movlw	255
  7720  002632  17A2               	andwf	(___fltol@f1+2)& (0+255),f,b
  7721  002634  0E00               	movlw	0
  7722  002636  17A3               	andwf	(___fltol@f1+3)& (0+255),f,b
  7723                           
  7724                           ; BSR set to: 0
  7725  002638  0E96               	movlw	150
  7726  00263A  0100               	movlb	0	; () banked
  7727  00263C  5FA9               	subwf	___fltol@exp1& (0+255),f,b
  7728                           
  7729                           ; BSR set to: 0
  7730  00263E  0100               	movlb	0	; () banked
  7731  002640  AFA9               	btfss	___fltol@exp1& (0+255),7,b
  7732  002642  D01A               	goto	l4961
  7733                           
  7734                           ; BSR set to: 0
  7735  002644  0100               	movlb	0	; () banked
  7736  002646  51A9               	movf	___fltol@exp1& (0+255),w,b
  7737  002648  0A80               	xorlw	128
  7738  00264A  0F97               	addlw	151
  7739  00264C  B0D8               	btfsc	status,0,c
  7740  00264E  D00A               	goto	l4957
  7741                           
  7742                           ; BSR set to: 0
  7743  002650  0E00               	movlw	0
  7744  002652  0100               	movlb	0	; () banked
  7745  002654  6FA0               	movwf	?___fltol& (0+255),b
  7746  002656  0E00               	movlw	0
  7747  002658  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7748  00265A  0E00               	movlw	0
  7749  00265C  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7750  00265E  0E00               	movlw	0
  7751  002660  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7752                           
  7753                           ; BSR set to: 0
  7754  002662  0012               	return	
  7755  002664                     l4957:
  7756                           
  7757                           ; BSR set to: 0
  7758  002664  0100               	movlb	0	; () banked
  7759  002666  90D8               	bcf	status,0,c
  7760  002668  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7761  00266A  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7762  00266C  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7763  00266E  33A0               	rrcf	___fltol@f1& (0+255),f,b
  7764                           
  7765                           ; BSR set to: 0
  7766  002670  0100               	movlb	0	; () banked
  7767  002672  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
  7768  002674  D7F7               	goto	l4957
  7769                           
  7770                           ; BSR set to: 0
  7771  002676  D01B               	goto	l4971
  7772  002678                     l4961:
  7773                           
  7774                           ; BSR set to: 0
  7775  002678  0E1F               	movlw	31
  7776  00267A  0100               	movlb	0	; () banked
  7777  00267C  65A9               	cpfsgt	___fltol@exp1& (0+255),b
  7778  00267E  D012               	goto	l4969
  7779                           
  7780                           ; BSR set to: 0
  7781  002680  0E00               	movlw	0
  7782  002682  0100               	movlb	0	; () banked
  7783  002684  6FA0               	movwf	?___fltol& (0+255),b
  7784  002686  0E00               	movlw	0
  7785  002688  6FA1               	movwf	(?___fltol+1)& (0+255),b
  7786  00268A  0E00               	movlw	0
  7787  00268C  6FA2               	movwf	(?___fltol+2)& (0+255),b
  7788  00268E  0E00               	movlw	0
  7789  002690  6FA3               	movwf	(?___fltol+3)& (0+255),b
  7790                           
  7791                           ; BSR set to: 0
  7792  002692  0012               	return	
  7793  002694                     l4967:
  7794                           
  7795                           ; BSR set to: 0
  7796  002694  0100               	movlb	0	; () banked
  7797  002696  90D8               	bcf	status,0,c
  7798  002698  37A0               	rlcf	___fltol@f1& (0+255),f,b
  7799  00269A  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7800  00269C  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7801  00269E  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7802  0026A0  0100               	movlb	0	; () banked
  7803  0026A2  07A9               	decf	___fltol@exp1& (0+255),f,b
  7804  0026A4                     l4969:
  7805                           
  7806                           ; BSR set to: 0
  7807  0026A4  0100               	movlb	0	; () banked
  7808  0026A6  51A9               	movf	___fltol@exp1& (0+255),w,b
  7809  0026A8  0100               	movlb	0	; () banked
  7810  0026AA  A4D8               	btfss	status,2,c
  7811  0026AC  D7F3               	goto	l4967
  7812  0026AE                     l4971:
  7813                           
  7814                           ; BSR set to: 0
  7815  0026AE  0100               	movlb	0	; () banked
  7816  0026B0  51A8               	movf	___fltol@sign1& (0+255),w,b
  7817  0026B2  0100               	movlb	0	; () banked
  7818  0026B4  B4D8               	btfsc	status,2,c
  7819  0026B6  D009               	goto	l4975
  7820                           
  7821                           ; BSR set to: 0
  7822  0026B8  0100               	movlb	0	; () banked
  7823  0026BA  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
  7824  0026BC  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
  7825  0026BE  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
  7826  0026C0  6DA0               	negf	___fltol@f1& (0+255),b
  7827  0026C2  0E00               	movlw	0
  7828  0026C4  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7829  0026C6  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7830  0026C8  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7831  0026CA                     l4975:
  7832                           
  7833                           ; BSR set to: 0
  7834  0026CA  C0A0  F0A0         	movff	___fltol@f1,?___fltol
  7835  0026CE  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
  7836  0026D2  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
  7837  0026D6  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
  7838  0026DA  0012               	return	
  7839  0026DC                     __end_of___fltol:
  7840                           	opt stack 0
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           intcon	equ	0xFF2
  7848                           postinc0	equ	0xFEE
  7849                           wreg	equ	0xFE8
  7850                           indf2	equ	0xFDF
  7851                           postinc2	equ	0xFDE
  7852                           fsr2h	equ	0xFDA
  7853                           fsr2l	equ	0xFD9
  7854                           status	equ	0xFD8
  7855                           
  7856 ;; *************** function ___flsub *****************
  7857 ;; Defined at:
  7858 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  b               4   88[BANK0 ] long 
  7861 ;;  a               4   92[BANK0 ] long 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  4   88[BANK0 ] long 
  7866 ;; Registers used:
  7867 ;;		wreg, status,2, status,0, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7873 ;;      Params:         0       8       0       0
  7874 ;;      Locals:         0       0       0       0
  7875 ;;      Temps:          0       0       0       0
  7876 ;;      Totals:         0       8       0       0
  7877 ;;Total ram usage:        8 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    5
  7880 ;; This function calls:
  7881 ;;		___fladd
  7882 ;; This function is called by:
  7883 ;;		_sprintf
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text25
  7888  002D1C                     __ptext25:
  7889                           	opt stack 0
  7890  002D1C                     ___flsub:
  7891                           	opt stack 23
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;incstack = 0
  7895  002D1C  0E00               	movlw	0
  7896  002D1E  0100               	movlb	0	; () banked
  7897  002D20  1BBC               	xorwf	___flsub@a& (0+255),f,b
  7898  002D22  0E00               	movlw	0
  7899  002D24  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
  7900  002D26  0E00               	movlw	0
  7901  002D28  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
  7902  002D2A  0E80               	movlw	128
  7903  002D2C  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
  7904                           
  7905                           ; BSR set to: 0
  7906  002D2E  C0B8  F0A4         	movff	___flsub@b,___fladd@b
  7907  002D32  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
  7908  002D36  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
  7909  002D3A  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
  7910  002D3E  C0BC  F0A8         	movff	___flsub@a,___fladd@a
  7911  002D42  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
  7912  002D46  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
  7913  002D4A  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
  7914  002D4E  EC90  F004         	call	___fladd	;wreg free
  7915  002D52  C0A4  F0B8         	movff	?___fladd,?___flsub
  7916  002D56  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
  7917  002D5A  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
  7918  002D5E  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
  7919  002D62  0012               	return	
  7920  002D64                     __end_of___flsub:
  7921                           	opt stack 0
  7922                           tblptru	equ	0xFF8
  7923                           tblptrh	equ	0xFF7
  7924                           tblptrl	equ	0xFF6
  7925                           tablat	equ	0xFF5
  7926                           prodh	equ	0xFF4
  7927                           prodl	equ	0xFF3
  7928                           intcon	equ	0xFF2
  7929                           postinc0	equ	0xFEE
  7930                           wreg	equ	0xFE8
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function ___fladd *****************
  7938 ;; Defined at:
  7939 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  b               4   68[BANK0 ] long 
  7942 ;;  a               4   72[BANK0 ] long 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  grs             1   87[BANK0 ] unsigned char 
  7945 ;;  bexp            1   86[BANK0 ] unsigned char 
  7946 ;;  aexp            1   85[BANK0 ] unsigned char 
  7947 ;;  signs           1   84[BANK0 ] unsigned char 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  4   68[BANK0 ] unsigned char 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7957 ;;      Params:         0       8       0       0
  7958 ;;      Locals:         0       4       0       0
  7959 ;;      Temps:          0       8       0       0
  7960 ;;      Totals:         0      20       0       0
  7961 ;;Total ram usage:       20 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    4
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_sprintf
  7968 ;;		___flsub
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text26
  7973  000920                     __ptext26:
  7974                           	opt stack 0
  7975  000920                     ___fladd:
  7976                           	opt stack 23
  7977                           
  7978                           ;incstack = 0
  7979  000920  0100               	movlb	0	; () banked
  7980  000922  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7981  000924  0B80               	andlw	128
  7982  000926  0100               	movlb	0	; () banked
  7983  000928  6FB4               	movwf	___fladd@signs& (0+255),b
  7984  00092A  0100               	movlb	0	; () banked
  7985  00092C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  7986  00092E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
  7987  000930  0100               	movlb	0	; () banked
  7988  000932  6FB6               	movwf	___fladd@bexp& (0+255),b
  7989                           
  7990                           ; BSR set to: 0
  7991  000934  0100               	movlb	0	; () banked
  7992  000936  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  7993  000938  D002               	goto	l4283
  7994                           
  7995                           ; BSR set to: 0
  7996  00093A  0100               	movlb	0	; () banked
  7997  00093C  81B6               	bsf	___fladd@bexp& (0+255),0,b
  7998  00093E                     l4283:
  7999                           
  8000                           ; BSR set to: 0
  8001  00093E  0100               	movlb	0	; () banked
  8002  000940  51B6               	movf	___fladd@bexp& (0+255),w,b
  8003  000942  0100               	movlb	0	; () banked
  8004  000944  B4D8               	btfsc	status,2,c
  8005  000946  D012               	goto	l4293
  8006                           
  8007                           ; BSR set to: 0
  8008  000948  0100               	movlb	0	; () banked
  8009  00094A  29B6               	incf	___fladd@bexp& (0+255),w,b
  8010  00094C  A4D8               	btfss	status,2,c
  8011  00094E  D009               	goto	l4289
  8012                           
  8013                           ; BSR set to: 0
  8014  000950  0E00               	movlw	0
  8015  000952  0100               	movlb	0	; () banked
  8016  000954  6FA4               	movwf	___fladd@b& (0+255),b
  8017  000956  0E00               	movlw	0
  8018  000958  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8019  00095A  0E00               	movlw	0
  8020  00095C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8021  00095E  0E00               	movlw	0
  8022  000960  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8023  000962                     l4289:
  8024                           
  8025                           ; BSR set to: 0
  8026  000962  0100               	movlb	0	; () banked
  8027  000964  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8028                           
  8029                           ; BSR set to: 0
  8030  000966  0E00               	movlw	0
  8031  000968  0100               	movlb	0	; () banked
  8032  00096A  D008               	goto	L8
  8033  00096C                     l4293:
  8034                           
  8035                           ; BSR set to: 0
  8036  00096C  0E00               	movlw	0
  8037  00096E  0100               	movlb	0	; () banked
  8038  000970  6FA4               	movwf	___fladd@b& (0+255),b
  8039  000972  0E00               	movlw	0
  8040  000974  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8041  000976  0E00               	movlw	0
  8042  000978  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8043  00097A  0E00               	movlw	0
  8044  00097C                     L8:
  8045  00097C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8046                           
  8047                           ; BSR set to: 0
  8048                           
  8049                           ; BSR set to: 0
  8050  00097E  0100               	movlb	0	; () banked
  8051  000980  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8052  000982  0B80               	andlw	128
  8053  000984  0100               	movlb	0	; () banked
  8054  000986  6FB5               	movwf	___fladd@aexp& (0+255),b
  8055                           
  8056                           ; BSR set to: 0
  8057  000988  0100               	movlb	0	; () banked
  8058  00098A  51B4               	movf	___fladd@signs& (0+255),w,b
  8059  00098C  0100               	movlb	0	; () banked
  8060  00098E  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  8061  000990  B4D8               	btfsc	status,2,c
  8062  000992  D002               	goto	l4301
  8063                           
  8064                           ; BSR set to: 0
  8065  000994  0100               	movlb	0	; () banked
  8066  000996  8DB4               	bsf	___fladd@signs& (0+255),6,b
  8067  000998                     l4301:
  8068                           
  8069                           ; BSR set to: 0
  8070  000998  0100               	movlb	0	; () banked
  8071  00099A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8072  00099C  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
  8073  00099E  0100               	movlb	0	; () banked
  8074  0009A0  6FB5               	movwf	___fladd@aexp& (0+255),b
  8075                           
  8076                           ; BSR set to: 0
  8077  0009A2  0100               	movlb	0	; () banked
  8078  0009A4  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
  8079  0009A6  D002               	goto	l4307
  8080                           
  8081                           ; BSR set to: 0
  8082  0009A8  0100               	movlb	0	; () banked
  8083  0009AA  81B5               	bsf	___fladd@aexp& (0+255),0,b
  8084  0009AC                     l4307:
  8085                           
  8086                           ; BSR set to: 0
  8087  0009AC  0100               	movlb	0	; () banked
  8088  0009AE  51B5               	movf	___fladd@aexp& (0+255),w,b
  8089  0009B0  0100               	movlb	0	; () banked
  8090  0009B2  B4D8               	btfsc	status,2,c
  8091  0009B4  D012               	goto	l4317
  8092                           
  8093                           ; BSR set to: 0
  8094  0009B6  0100               	movlb	0	; () banked
  8095  0009B8  29B5               	incf	___fladd@aexp& (0+255),w,b
  8096  0009BA  A4D8               	btfss	status,2,c
  8097  0009BC  D009               	goto	l4313
  8098                           
  8099                           ; BSR set to: 0
  8100  0009BE  0E00               	movlw	0
  8101  0009C0  0100               	movlb	0	; () banked
  8102  0009C2  6FA8               	movwf	___fladd@a& (0+255),b
  8103  0009C4  0E00               	movlw	0
  8104  0009C6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8105  0009C8  0E00               	movlw	0
  8106  0009CA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8107  0009CC  0E00               	movlw	0
  8108  0009CE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8109  0009D0                     l4313:
  8110                           
  8111                           ; BSR set to: 0
  8112  0009D0  0100               	movlb	0	; () banked
  8113  0009D2  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
  8114                           
  8115                           ; BSR set to: 0
  8116  0009D4  0E00               	movlw	0
  8117  0009D6  0100               	movlb	0	; () banked
  8118  0009D8  D008               	goto	L9
  8119  0009DA                     l4317:
  8120                           
  8121                           ; BSR set to: 0
  8122  0009DA  0E00               	movlw	0
  8123  0009DC  0100               	movlb	0	; () banked
  8124  0009DE  6FA8               	movwf	___fladd@a& (0+255),b
  8125  0009E0  0E00               	movlw	0
  8126  0009E2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  8127  0009E4  0E00               	movlw	0
  8128  0009E6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  8129  0009E8  0E00               	movlw	0
  8130  0009EA                     L9:
  8131  0009EA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  8132                           
  8133                           ; BSR set to: 0
  8134                           
  8135                           ; BSR set to: 0
  8136  0009EC  0100               	movlb	0	; () banked
  8137  0009EE  51B6               	movf	___fladd@bexp& (0+255),w,b
  8138  0009F0  0100               	movlb	0	; () banked
  8139  0009F2  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  8140  0009F4  B0D8               	btfsc	status,0,c
  8141  0009F6  D024               	goto	l4355
  8142                           
  8143                           ; BSR set to: 0
  8144  0009F8  0100               	movlb	0	; () banked
  8145  0009FA  ADB4               	btfss	___fladd@signs& (0+255),6,b
  8146  0009FC  D003               	goto	l4325
  8147                           
  8148                           ; BSR set to: 0
  8149  0009FE  0E80               	movlw	128
  8150  000A00  0100               	movlb	0	; () banked
  8151  000A02  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8152  000A04                     l4325:
  8153                           
  8154                           ; BSR set to: 0
  8155  000A04  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  8156                           
  8157                           ; BSR set to: 0
  8158  000A08  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8159                           
  8160                           ; BSR set to: 0
  8161  000A0C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  8162                           
  8163                           ; BSR set to: 0
  8164  000A10  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
  8165                           
  8166                           ; BSR set to: 0
  8167  000A14  C0A8  F0A4         	movff	___fladd@a,___fladd@b
  8168                           
  8169                           ; BSR set to: 0
  8170  000A18  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
  8171                           
  8172                           ; BSR set to: 0
  8173  000A1C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
  8174                           
  8175                           ; BSR set to: 0
  8176  000A20  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
  8177                           
  8178                           ; BSR set to: 0
  8179  000A24  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
  8180                           
  8181                           ; BSR set to: 0
  8182  000A28  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
  8183                           
  8184                           ; BSR set to: 0
  8185  000A2C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
  8186                           
  8187                           ; BSR set to: 0
  8188  000A30  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
  8189                           
  8190                           ; BSR set to: 0
  8191  000A34  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
  8192                           
  8193                           ; BSR set to: 0
  8194  000A38  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
  8195                           
  8196                           ; BSR set to: 0
  8197  000A3C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
  8198  000A40                     l4355:
  8199                           
  8200                           ; BSR set to: 0
  8201  000A40  0E00               	movlw	0
  8202  000A42  0100               	movlb	0	; () banked
  8203  000A44  6FB7               	movwf	___fladd@grs& (0+255),b
  8204                           
  8205                           ; BSR set to: 0
  8206  000A46  0100               	movlb	0	; () banked
  8207  000A48  51B6               	movf	___fladd@bexp& (0+255),w,b
  8208  000A4A  0100               	movlb	0	; () banked
  8209  000A4C  6FAC               	movwf	??___fladd& (0+255),b
  8210  000A4E  6BAD               	clrf	(??___fladd+1)& (0+255),b
  8211  000A50  0100               	movlb	0	; () banked
  8212  000A52  1FAC               	comf	??___fladd& (0+255),f,b
  8213  000A54  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8214  000A56  4BAC               	infsnz	??___fladd& (0+255),f,b
  8215  000A58  2BAD               	incf	(??___fladd+1)& (0+255),f,b
  8216  000A5A  0100               	movlb	0	; () banked
  8217  000A5C  51B5               	movf	___fladd@aexp& (0+255),w,b
  8218  000A5E  0100               	movlb	0	; () banked
  8219  000A60  6FAE               	movwf	(??___fladd+2)& (0+255),b
  8220  000A62  6BAF               	clrf	(??___fladd+3)& (0+255),b
  8221  000A64  0100               	movlb	0	; () banked
  8222  000A66  51AC               	movf	??___fladd& (0+255),w,b
  8223  000A68  0100               	movlb	0	; () banked
  8224  000A6A  27AE               	addwf	(??___fladd+2)& (0+255),f,b
  8225  000A6C  0100               	movlb	0	; () banked
  8226  000A6E  51AD               	movf	(??___fladd+1)& (0+255),w,b
  8227  000A70  0100               	movlb	0	; () banked
  8228  000A72  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8229  000A74  0100               	movlb	0	; () banked
  8230  000A76  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
  8231  000A78  D03D               	goto	l962
  8232  000A7A  0100               	movlb	0	; () banked
  8233  000A7C  51AF               	movf	(??___fladd+3)& (0+255),w,b
  8234  000A7E  E105               	bnz	u4730
  8235  000A80  0E1A               	movlw	26
  8236  000A82  0100               	movlb	0	; () banked
  8237  000A84  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
  8238  000A86  A0D8               	btfss	status,0,c
  8239  000A88  D035               	goto	l962
  8240  000A8A                     u4730:
  8241                           
  8242                           ; BSR set to: 0
  8243  000A8A  0100               	movlb	0	; () banked
  8244  000A8C  51A4               	movf	___fladd@b& (0+255),w,b
  8245  000A8E  0100               	movlb	0	; () banked
  8246  000A90  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8247  000A92  0100               	movlb	0	; () banked
  8248  000A94  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8249  000A96  0100               	movlb	0	; () banked
  8250  000A98  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8251  000A9A  B4D8               	btfsc	status,2,c
  8252  000A9C  D002               	goto	u4740
  8253  000A9E  0E01               	movlw	1
  8254  000AA0  D001               	goto	u4750
  8255  000AA2                     u4740:
  8256  000AA2  0E00               	movlw	0
  8257  000AA4                     u4750:
  8258  000AA4  0100               	movlb	0	; () banked
  8259  000AA6  6FB7               	movwf	___fladd@grs& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262  000AA8  0E00               	movlw	0
  8263  000AAA  0100               	movlb	0	; () banked
  8264  000AAC  6FA4               	movwf	___fladd@b& (0+255),b
  8265  000AAE  0E00               	movlw	0
  8266  000AB0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8267  000AB2  0E00               	movlw	0
  8268  000AB4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8269  000AB6  0E00               	movlw	0
  8270  000AB8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273  000ABA  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  8274  000ABE  D020               	goto	l961
  8275  000AC0                     l963:
  8276                           
  8277                           ; BSR set to: 0
  8278  000AC0  0100               	movlb	0	; () banked
  8279  000AC2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8280  000AC4  D007               	goto	l4367
  8281                           
  8282                           ; BSR set to: 0
  8283  000AC6  0100               	movlb	0	; () banked
  8284  000AC8  90D8               	bcf	status,0,c
  8285  000ACA  31B7               	rrcf	___fladd@grs& (0+255),w,b
  8286  000ACC  0901               	iorlw	1
  8287  000ACE  0100               	movlb	0	; () banked
  8288  000AD0  6FB7               	movwf	___fladd@grs& (0+255),b
  8289  000AD2  D003               	goto	l4369
  8290  000AD4                     l4367:
  8291                           
  8292                           ; BSR set to: 0
  8293  000AD4  0100               	movlb	0	; () banked
  8294  000AD6  90D8               	bcf	status,0,c
  8295  000AD8  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8296  000ADA                     l4369:
  8297                           
  8298                           ; BSR set to: 0
  8299  000ADA  0100               	movlb	0	; () banked
  8300  000ADC  A1A4               	btfss	___fladd@b& (0+255),0,b
  8301  000ADE  D002               	goto	l4373
  8302                           
  8303                           ; BSR set to: 0
  8304  000AE0  0100               	movlb	0	; () banked
  8305  000AE2  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8306  000AE4                     l4373:
  8307                           
  8308                           ; BSR set to: 0
  8309  000AE4  0100               	movlb	0	; () banked
  8310  000AE6  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8311  000AE8  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8312  000AEA  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8313  000AEC  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8314  000AEE  33A4               	rrcf	___fladd@b& (0+255),f,b
  8315                           
  8316                           ; BSR set to: 0
  8317  000AF0  0100               	movlb	0	; () banked
  8318  000AF2  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8319  000AF4                     l962:
  8320                           
  8321                           ; BSR set to: 0
  8322  000AF4  0100               	movlb	0	; () banked
  8323  000AF6  51B5               	movf	___fladd@aexp& (0+255),w,b
  8324  000AF8  0100               	movlb	0	; () banked
  8325  000AFA  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  8326  000AFC  A0D8               	btfss	status,0,c
  8327  000AFE  D7E0               	goto	l963
  8328  000B00                     l961:
  8329                           
  8330                           ; BSR set to: 0
  8331  000B00  0100               	movlb	0	; () banked
  8332  000B02  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  8333  000B04  D03F               	goto	l4401
  8334                           
  8335                           ; BSR set to: 0
  8336  000B06  0100               	movlb	0	; () banked
  8337  000B08  51B6               	movf	___fladd@bexp& (0+255),w,b
  8338  000B0A  0100               	movlb	0	; () banked
  8339  000B0C  A4D8               	btfss	status,2,c
  8340  000B0E  D00A               	goto	l4383
  8341                           
  8342                           ; BSR set to: 0
  8343  000B10  0E00               	movlw	0
  8344  000B12  0100               	movlb	0	; () banked
  8345  000B14  6FA4               	movwf	?___fladd& (0+255),b
  8346  000B16  0E00               	movlw	0
  8347  000B18  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8348  000B1A  0E00               	movlw	0
  8349  000B1C  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8350  000B1E  0E00               	movlw	0
  8351  000B20  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8352                           
  8353                           ; BSR set to: 0
  8354  000B22  0012               	return	
  8355  000B24                     l4383:
  8356                           
  8357                           ; BSR set to: 0
  8358  000B24  0100               	movlb	0	; () banked
  8359  000B26  51A8               	movf	___fladd@a& (0+255),w,b
  8360  000B28  0100               	movlb	0	; () banked
  8361  000B2A  27A4               	addwf	___fladd@b& (0+255),f,b
  8362  000B2C  0100               	movlb	0	; () banked
  8363  000B2E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8364  000B30  0100               	movlb	0	; () banked
  8365  000B32  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8366  000B34  0100               	movlb	0	; () banked
  8367  000B36  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8368  000B38  0100               	movlb	0	; () banked
  8369  000B3A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8370  000B3C  0100               	movlb	0	; () banked
  8371  000B3E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8372  000B40  0100               	movlb	0	; () banked
  8373  000B42  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8374                           
  8375                           ; BSR set to: 0
  8376  000B44  0100               	movlb	0	; () banked
  8377  000B46  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8378  000B48  D0CC               	goto	l4437
  8379                           
  8380                           ; BSR set to: 0
  8381  000B4A  0100               	movlb	0	; () banked
  8382  000B4C  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8383  000B4E  D009               	goto	l4391
  8384                           
  8385                           ; BSR set to: 0
  8386  000B50  0100               	movlb	0	; () banked
  8387  000B52  90D8               	bcf	status,0,c
  8388  000B54  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8389  000B56  0100               	movlb	0	; () banked
  8390  000B58  51B7               	movf	___fladd@grs& (0+255),w,b
  8391  000B5A  0901               	iorlw	1
  8392  000B5C  0100               	movlb	0	; () banked
  8393  000B5E  6FB7               	movwf	___fladd@grs& (0+255),b
  8394  000B60  D003               	goto	l4393
  8395  000B62                     l4391:
  8396                           
  8397                           ; BSR set to: 0
  8398  000B62  0100               	movlb	0	; () banked
  8399  000B64  90D8               	bcf	status,0,c
  8400  000B66  33B7               	rrcf	___fladd@grs& (0+255),f,b
  8401  000B68                     l4393:
  8402                           
  8403                           ; BSR set to: 0
  8404  000B68  0100               	movlb	0	; () banked
  8405  000B6A  A1A4               	btfss	___fladd@b& (0+255),0,b
  8406  000B6C  D002               	goto	l4397
  8407                           
  8408                           ; BSR set to: 0
  8409  000B6E  0100               	movlb	0	; () banked
  8410  000B70  8FB7               	bsf	___fladd@grs& (0+255),7,b
  8411  000B72                     l4397:
  8412                           
  8413                           ; BSR set to: 0
  8414  000B72  0100               	movlb	0	; () banked
  8415  000B74  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
  8416  000B76  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
  8417  000B78  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
  8418  000B7A  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
  8419  000B7C  33A4               	rrcf	___fladd@b& (0+255),f,b
  8420                           
  8421                           ; BSR set to: 0
  8422  000B7E  0100               	movlb	0	; () banked
  8423  000B80  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 0
  8426  000B82  D0AF               	goto	l4437
  8427  000B84                     l4401:
  8428                           
  8429                           ; BSR set to: 0
  8430  000B84  0100               	movlb	0	; () banked
  8431  000B86  51A8               	movf	___fladd@a& (0+255),w,b
  8432  000B88  0100               	movlb	0	; () banked
  8433  000B8A  5DA4               	subwf	___fladd@b& (0+255),w,b
  8434  000B8C  0100               	movlb	0	; () banked
  8435  000B8E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8436  000B90  0100               	movlb	0	; () banked
  8437  000B92  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
  8438  000B94  0100               	movlb	0	; () banked
  8439  000B96  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8440  000B98  0100               	movlb	0	; () banked
  8441  000B9A  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
  8442  000B9C  0100               	movlb	0	; () banked
  8443  000B9E  51A7               	movf	(___fladd@b+3)& (0+255),w,b
  8444  000BA0  0A80               	xorlw	128
  8445  000BA2  0100               	movlb	0	; () banked
  8446  000BA4  6FAC               	movwf	??___fladd& (0+255),b
  8447  000BA6  0100               	movlb	0	; () banked
  8448  000BA8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8449  000BAA  0A80               	xorlw	128
  8450  000BAC  0100               	movlb	0	; () banked
  8451  000BAE  59AC               	subwfb	??___fladd& (0+255),w,b
  8452  000BB0  B0D8               	btfsc	status,0,c
  8453  000BB2  D050               	goto	l4411
  8454                           
  8455                           ; BSR set to: 0
  8456  000BB4  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8457  000BB8  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8458  000BBC  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8459  000BC0  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8460  000BC4  0100               	movlb	0	; () banked
  8461  000BC6  1FAC               	comf	??___fladd& (0+255),f,b
  8462  000BC8  1FAD               	comf	(??___fladd+1)& (0+255),f,b
  8463  000BCA  1FAE               	comf	(??___fladd+2)& (0+255),f,b
  8464  000BCC  1FAF               	comf	(??___fladd+3)& (0+255),f,b
  8465  000BCE  2BAC               	incf	??___fladd& (0+255),f,b
  8466  000BD0  0E00               	movlw	0
  8467  000BD2  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
  8468  000BD4  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
  8469  000BD6  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
  8470  000BD8  0100               	movlb	0	; () banked
  8471  000BDA  51A8               	movf	___fladd@a& (0+255),w,b
  8472  000BDC  0100               	movlb	0	; () banked
  8473  000BDE  25AC               	addwf	??___fladd& (0+255),w,b
  8474  000BE0  0100               	movlb	0	; () banked
  8475  000BE2  6FB0               	movwf	(??___fladd+4)& (0+255),b
  8476  000BE4  0100               	movlb	0	; () banked
  8477  000BE6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8478  000BE8  0100               	movlb	0	; () banked
  8479  000BEA  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
  8480  000BEC  0100               	movlb	0	; () banked
  8481  000BEE  6FB1               	movwf	(??___fladd+5)& (0+255),b
  8482  000BF0  0100               	movlb	0	; () banked
  8483  000BF2  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8484  000BF4  0100               	movlb	0	; () banked
  8485  000BF6  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
  8486  000BF8  0100               	movlb	0	; () banked
  8487  000BFA  6FB2               	movwf	(??___fladd+6)& (0+255),b
  8488  000BFC  0100               	movlb	0	; () banked
  8489  000BFE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8490  000C00  0100               	movlb	0	; () banked
  8491  000C02  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
  8492  000C04  0100               	movlb	0	; () banked
  8493  000C06  6FB3               	movwf	(??___fladd+7)& (0+255),b
  8494  000C08  0EFF               	movlw	255
  8495  000C0A  0100               	movlb	0	; () banked
  8496  000C0C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
  8497  000C0E  0100               	movlb	0	; () banked
  8498  000C10  6FA4               	movwf	___fladd@b& (0+255),b
  8499  000C12  0EFF               	movlw	255
  8500  000C14  0100               	movlb	0	; () banked
  8501  000C16  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
  8502  000C18  0100               	movlb	0	; () banked
  8503  000C1A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8504  000C1C  0EFF               	movlw	255
  8505  000C1E  0100               	movlb	0	; () banked
  8506  000C20  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
  8507  000C22  0100               	movlb	0	; () banked
  8508  000C24  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8509  000C26  0EFF               	movlw	255
  8510  000C28  0100               	movlb	0	; () banked
  8511  000C2A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
  8512  000C2C  0100               	movlb	0	; () banked
  8513  000C2E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8514  000C30  0E80               	movlw	128
  8515  000C32  0100               	movlb	0	; () banked
  8516  000C34  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  8517                           
  8518                           ; BSR set to: 0
  8519  000C36  0100               	movlb	0	; () banked
  8520  000C38  6DB7               	negf	___fladd@grs& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523  000C3A  0100               	movlb	0	; () banked
  8524  000C3C  51B7               	movf	___fladd@grs& (0+255),w,b
  8525  000C3E  0100               	movlb	0	; () banked
  8526  000C40  A4D8               	btfss	status,2,c
  8527  000C42  D018               	goto	l978
  8528                           
  8529                           ; BSR set to: 0
  8530  000C44  0E01               	movlw	1
  8531  000C46  0100               	movlb	0	; () banked
  8532  000C48  27A4               	addwf	___fladd@b& (0+255),f,b
  8533  000C4A  0E00               	movlw	0
  8534  000C4C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8535  000C4E  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8536  000C50  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 0
  8539  000C52  D010               	goto	l978
  8540  000C54                     l4411:
  8541                           
  8542                           ; BSR set to: 0
  8543  000C54  0100               	movlb	0	; () banked
  8544  000C56  51A8               	movf	___fladd@a& (0+255),w,b
  8545  000C58  0100               	movlb	0	; () banked
  8546  000C5A  5FA4               	subwf	___fladd@b& (0+255),f,b
  8547  000C5C  0100               	movlb	0	; () banked
  8548  000C5E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
  8549  000C60  0100               	movlb	0	; () banked
  8550  000C62  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
  8551  000C64  0100               	movlb	0	; () banked
  8552  000C66  51AA               	movf	(___fladd@a+2)& (0+255),w,b
  8553  000C68  0100               	movlb	0	; () banked
  8554  000C6A  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
  8555  000C6C  0100               	movlb	0	; () banked
  8556  000C6E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
  8557  000C70  0100               	movlb	0	; () banked
  8558  000C72  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
  8559  000C74                     l978:
  8560                           
  8561                           ; BSR set to: 0
  8562  000C74  0100               	movlb	0	; () banked
  8563  000C76  51A4               	movf	___fladd@b& (0+255),w,b
  8564  000C78  0100               	movlb	0	; () banked
  8565  000C7A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
  8566  000C7C  0100               	movlb	0	; () banked
  8567  000C7E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
  8568  000C80  0100               	movlb	0	; () banked
  8569  000C82  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
  8570  000C84  A4D8               	btfss	status,2,c
  8571  000C86  D02A               	goto	l4435
  8572                           
  8573                           ; BSR set to: 0
  8574  000C88  0100               	movlb	0	; () banked
  8575  000C8A  51B7               	movf	___fladd@grs& (0+255),w,b
  8576  000C8C  0100               	movlb	0	; () banked
  8577  000C8E  A4D8               	btfss	status,2,c
  8578  000C90  D025               	goto	l4435
  8579                           
  8580                           ; BSR set to: 0
  8581  000C92  0E00               	movlw	0
  8582  000C94  0100               	movlb	0	; () banked
  8583  000C96  6FA4               	movwf	?___fladd& (0+255),b
  8584  000C98  0E00               	movlw	0
  8585  000C9A  6FA5               	movwf	(?___fladd+1)& (0+255),b
  8586  000C9C  0E00               	movlw	0
  8587  000C9E  6FA6               	movwf	(?___fladd+2)& (0+255),b
  8588  000CA0  0E00               	movlw	0
  8589  000CA2  6FA7               	movwf	(?___fladd+3)& (0+255),b
  8590                           
  8591                           ; BSR set to: 0
  8592  000CA4  0012               	return	
  8593  000CA6                     l4419:
  8594                           
  8595                           ; BSR set to: 0
  8596  000CA6  0100               	movlb	0	; () banked
  8597  000CA8  90D8               	bcf	status,0,c
  8598  000CAA  37A4               	rlcf	___fladd@b& (0+255),f,b
  8599  000CAC  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
  8600  000CAE  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
  8601  000CB0  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
  8602                           
  8603                           ; BSR set to: 0
  8604  000CB2  0100               	movlb	0	; () banked
  8605  000CB4  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8606  000CB6  D002               	goto	l4425
  8607                           
  8608                           ; BSR set to: 0
  8609  000CB8  0100               	movlb	0	; () banked
  8610  000CBA  81A4               	bsf	___fladd@b& (0+255),0,b
  8611  000CBC                     l4425:
  8612                           
  8613                           ; BSR set to: 0
  8614  000CBC  0100               	movlb	0	; () banked
  8615  000CBE  A1B7               	btfss	___fladd@grs& (0+255),0,b
  8616  000CC0  D003               	goto	l4429
  8617                           
  8618                           ; BSR set to: 0
  8619  000CC2  80D8               	bsf	status,0,c
  8620  000CC4  0100               	movlb	0	; () banked
  8621  000CC6  D002               	goto	L10
  8622  000CC8                     l4429:
  8623                           
  8624                           ; BSR set to: 0
  8625  000CC8  0100               	movlb	0	; () banked
  8626  000CCA  90D8               	bcf	status,0,c
  8627  000CCC                     L10:
  8628  000CCC  37B7               	rlcf	___fladd@grs& (0+255),f,b
  8629                           
  8630                           ; BSR set to: 0
  8631                           
  8632                           ; BSR set to: 0
  8633  000CCE  0100               	movlb	0	; () banked
  8634  000CD0  51B6               	movf	___fladd@bexp& (0+255),w,b
  8635  000CD2  0100               	movlb	0	; () banked
  8636  000CD4  B4D8               	btfsc	status,2,c
  8637  000CD6  D002               	goto	l4435
  8638                           
  8639                           ; BSR set to: 0
  8640  000CD8  0100               	movlb	0	; () banked
  8641  000CDA  07B6               	decf	___fladd@bexp& (0+255),f,b
  8642  000CDC                     l4435:
  8643                           
  8644                           ; BSR set to: 0
  8645  000CDC  0100               	movlb	0	; () banked
  8646  000CDE  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
  8647  000CE0  D7E2               	goto	l4419
  8648  000CE2                     l4437:
  8649                           
  8650                           ; BSR set to: 0
  8651  000CE2  0E00               	movlw	0
  8652  000CE4  0100               	movlb	0	; () banked
  8653  000CE6  6FB5               	movwf	___fladd@aexp& (0+255),b
  8654                           
  8655                           ; BSR set to: 0
  8656  000CE8  0100               	movlb	0	; () banked
  8657  000CEA  AFB7               	btfss	___fladd@grs& (0+255),7,b
  8658  000CEC  D00D               	goto	l987
  8659                           
  8660                           ; BSR set to: 0
  8661  000CEE  C0B7  F0AC         	movff	___fladd@grs,??___fladd
  8662  000CF2  0E7F               	movlw	127
  8663  000CF4  0100               	movlb	0	; () banked
  8664  000CF6  17AC               	andwf	??___fladd& (0+255),f,b
  8665  000CF8  A4D8               	btfss	status,2,c
  8666  000CFA  D003               	goto	l4445
  8667                           
  8668                           ; BSR set to: 0
  8669                           
  8670                           ; BSR set to: 0
  8671  000CFC  0100               	movlb	0	; () banked
  8672  000CFE  A1A4               	btfss	___fladd@b& (0+255),0,b
  8673  000D00  D003               	goto	l987
  8674  000D02                     l4445:
  8675                           
  8676                           ; BSR set to: 0
  8677  000D02  0E01               	movlw	1
  8678  000D04  0100               	movlb	0	; () banked
  8679  000D06  6FB5               	movwf	___fladd@aexp& (0+255),b
  8680  000D08                     l987:
  8681                           
  8682                           ; BSR set to: 0
  8683  000D08  0100               	movlb	0	; () banked
  8684  000D0A  51B5               	movf	___fladd@aexp& (0+255),w,b
  8685  000D0C  0100               	movlb	0	; () banked
  8686  000D0E  B4D8               	btfsc	status,2,c
  8687  000D10  D026               	goto	l4455
  8688                           
  8689                           ; BSR set to: 0
  8690  000D12  0E01               	movlw	1
  8691  000D14  0100               	movlb	0	; () banked
  8692  000D16  27A4               	addwf	___fladd@b& (0+255),f,b
  8693  000D18  0E00               	movlw	0
  8694  000D1A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
  8695  000D1C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
  8696  000D1E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  000D20  0100               	movlb	0	; () banked
  8700  000D22  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
  8701  000D24  D01C               	goto	l4455
  8702                           
  8703                           ; BSR set to: 0
  8704  000D26  C0A4  F0AC         	movff	___fladd@b,??___fladd
  8705  000D2A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
  8706  000D2E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
  8707  000D32  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
  8708  000D36  0100               	movlb	0	; () banked
  8709  000D38  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
  8710  000D3A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
  8711  000D3C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
  8712  000D3E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
  8713  000D40  33AC               	rrcf	??___fladd& (0+255),f,b
  8714  000D42  C0AC  F0A4         	movff	??___fladd,___fladd@b
  8715  000D46  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
  8716  000D4A  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
  8717  000D4E  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
  8718  000D52  0100               	movlb	0	; () banked
  8719  000D54  29B6               	incf	___fladd@bexp& (0+255),w,b
  8720  000D56  B4D8               	btfsc	status,2,c
  8721  000D58  D002               	goto	l4455
  8722                           
  8723                           ; BSR set to: 0
  8724  000D5A  0100               	movlb	0	; () banked
  8725  000D5C  2BB6               	incf	___fladd@bexp& (0+255),f,b
  8726  000D5E                     l4455:
  8727                           
  8728                           ; BSR set to: 0
  8729  000D5E  0100               	movlb	0	; () banked
  8730  000D60  29B6               	incf	___fladd@bexp& (0+255),w,b
  8731  000D62  B4D8               	btfsc	status,2,c
  8732  000D64  D005               	goto	l4459
  8733                           
  8734                           ; BSR set to: 0
  8735  000D66  0100               	movlb	0	; () banked
  8736  000D68  51B6               	movf	___fladd@bexp& (0+255),w,b
  8737  000D6A  0100               	movlb	0	; () banked
  8738  000D6C  A4D8               	btfss	status,2,c
  8739  000D6E  D011               	goto	l4463
  8740  000D70                     l4459:
  8741                           
  8742                           ; BSR set to: 0
  8743  000D70  0E00               	movlw	0
  8744  000D72  0100               	movlb	0	; () banked
  8745  000D74  6FA4               	movwf	___fladd@b& (0+255),b
  8746  000D76  0E00               	movlw	0
  8747  000D78  6FA5               	movwf	(___fladd@b+1)& (0+255),b
  8748  000D7A  0E00               	movlw	0
  8749  000D7C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
  8750  000D7E  0E00               	movlw	0
  8751  000D80  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8752  000D82  0100               	movlb	0	; () banked
  8753  000D84  51B6               	movf	___fladd@bexp& (0+255),w,b
  8754  000D86  0100               	movlb	0	; () banked
  8755  000D88  A4D8               	btfss	status,2,c
  8756  000D8A  D003               	goto	l4463
  8757                           
  8758                           ; BSR set to: 0
  8759  000D8C  0E00               	movlw	0
  8760  000D8E  0100               	movlb	0	; () banked
  8761  000D90  6FB4               	movwf	___fladd@signs& (0+255),b
  8762  000D92                     l4463:
  8763                           
  8764                           ; BSR set to: 0
  8765  000D92  0100               	movlb	0	; () banked
  8766  000D94  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  8767  000D96  D003               	goto	l4467
  8768                           
  8769                           ; BSR set to: 0
  8770  000D98  0100               	movlb	0	; () banked
  8771  000D9A  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
  8772  000D9C  D002               	goto	l4469
  8773  000D9E                     l4467:
  8774                           
  8775                           ; BSR set to: 0
  8776  000D9E  0100               	movlb	0	; () banked
  8777  000DA0  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
  8778  000DA2                     l4469:
  8779                           
  8780                           ; BSR set to: 0
  8781  000DA2  0100               	movlb	0	; () banked
  8782  000DA4  90D8               	bcf	status,0,c
  8783  000DA6  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  8784  000DA8  0100               	movlb	0	; () banked
  8785  000DAA  6FA7               	movwf	(___fladd@b+3)& (0+255),b
  8786                           
  8787                           ; BSR set to: 0
  8788  000DAC  0100               	movlb	0	; () banked
  8789  000DAE  AFB4               	btfss	___fladd@signs& (0+255),7,b
  8790  000DB0  D002               	goto	l4475
  8791                           
  8792                           ; BSR set to: 0
  8793  000DB2  0100               	movlb	0	; () banked
  8794  000DB4  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
  8795  000DB6                     l4475:
  8796                           
  8797                           ; BSR set to: 0
  8798  000DB6  C0A4  F0A4         	movff	___fladd@b,?___fladd
  8799  000DBA  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
  8800  000DBE  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
  8801  000DC2  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
  8802  000DC6  0012               	return	
  8803  000DC8                     __end_of___fladd:
  8804                           	opt stack 0
  8805                           tblptru	equ	0xFF8
  8806                           tblptrh	equ	0xFF7
  8807                           tblptrl	equ	0xFF6
  8808                           tablat	equ	0xFF5
  8809                           prodh	equ	0xFF4
  8810                           prodl	equ	0xFF3
  8811                           intcon	equ	0xFF2
  8812                           postinc0	equ	0xFEE
  8813                           wreg	equ	0xFE8
  8814                           indf2	equ	0xFDF
  8815                           postinc2	equ	0xFDE
  8816                           fsr2h	equ	0xFDA
  8817                           fsr2l	equ	0xFD9
  8818                           status	equ	0xFD8
  8819                           
  8820 ;; *************** function ___flneg *****************
  8821 ;; Defined at:
  8822 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  f1              4   24[COMRAM] unsigned char 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  4   24[COMRAM] unsigned char 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8836 ;;      Params:         4       0       0       0
  8837 ;;      Locals:         0       0       0       0
  8838 ;;      Temps:          0       0       0       0
  8839 ;;      Totals:         4       0       0       0
  8840 ;;Total ram usage:        4 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    4
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_sprintf
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text27
  8851  002EEE                     __ptext27:
  8852                           	opt stack 0
  8853  002EEE                     ___flneg:
  8854                           	opt stack 24
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;incstack = 0
  8858  002EEE  503C               	movf	___flneg@f1,w,c
  8859  002EF0  103D               	iorwf	___flneg@f1+1,w,c
  8860  002EF2  103E               	iorwf	___flneg@f1+2,w,c
  8861  002EF4  103F               	iorwf	___flneg@f1+3,w,c
  8862  002EF6  B4D8               	btfsc	status,2,c
  8863  002EF8  D008               	goto	l4931
  8864  002EFA  0E00               	movlw	0
  8865  002EFC  1A3C               	xorwf	___flneg@f1,f,c
  8866  002EFE  0E00               	movlw	0
  8867  002F00  1A3D               	xorwf	___flneg@f1+1,f,c
  8868  002F02  0E00               	movlw	0
  8869  002F04  1A3E               	xorwf	___flneg@f1+2,f,c
  8870  002F06  0E80               	movlw	128
  8871  002F08  1A3F               	xorwf	___flneg@f1+3,f,c
  8872  002F0A                     l4931:
  8873  002F0A  C03C  F03C         	movff	___flneg@f1,?___flneg
  8874  002F0E  C03D  F03D         	movff	___flneg@f1+1,?___flneg+1
  8875  002F12  C03E  F03E         	movff	___flneg@f1+2,?___flneg+2
  8876  002F16  C03F  F03F         	movff	___flneg@f1+3,?___flneg+3
  8877  002F1A  0012               	return	
  8878  002F1C                     __end_of___flneg:
  8879                           	opt stack 0
  8880                           tblptru	equ	0xFF8
  8881                           tblptrh	equ	0xFF7
  8882                           tblptrl	equ	0xFF6
  8883                           tablat	equ	0xFF5
  8884                           prodh	equ	0xFF4
  8885                           prodl	equ	0xFF3
  8886                           intcon	equ	0xFF2
  8887                           postinc0	equ	0xFEE
  8888                           wreg	equ	0xFE8
  8889                           indf2	equ	0xFDF
  8890                           postinc2	equ	0xFDE
  8891                           fsr2h	equ	0xFDA
  8892                           fsr2l	equ	0xFD9
  8893                           status	equ	0xFD8
  8894                           
  8895 ;; *************** function ___flge *****************
  8896 ;; Defined at:
  8897 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  ff1             4   16[BANK0 ] unsigned char 
  8900 ;;  ff2             4   20[BANK0 ] unsigned char 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;		None               void
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8912 ;;      Params:         0       8       0       0
  8913 ;;      Locals:         0       0       0       0
  8914 ;;      Temps:          4       0       0       0
  8915 ;;      Totals:         4       8       0       0
  8916 ;;Total ram usage:       12 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    4
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_sprintf
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text28
  8927  00235E                     __ptext28:
  8928                           	opt stack 0
  8929  00235E                     ___flge:
  8930                           	opt stack 24
  8931                           
  8932                           ;incstack = 0
  8933  00235E  0E00               	movlw	0
  8934  002360  0100               	movlb	0	; () banked
  8935  002362  1570               	andwf	___flge@ff1& (0+255),w,b
  8936  002364  6E3C               	movwf	??___flge& (0+255),c
  8937  002366  0E00               	movlw	0
  8938  002368  0100               	movlb	0	; () banked
  8939  00236A  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
  8940  00236C  6E3D               	movwf	(??___flge+1)& (0+255),c
  8941  00236E  0E80               	movlw	128
  8942  002370  0100               	movlb	0	; () banked
  8943  002372  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
  8944  002374  6E3E               	movwf	(??___flge+2)& (0+255),c
  8945  002376  0E7F               	movlw	127
  8946  002378  0100               	movlb	0	; () banked
  8947  00237A  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
  8948  00237C  6E3F               	movwf	(??___flge+3)& (0+255),c
  8949  00237E  503C               	movf	??___flge,w,c
  8950  002380  103D               	iorwf	??___flge+1,w,c
  8951  002382  103E               	iorwf	??___flge+2,w,c
  8952  002384  103F               	iorwf	??___flge+3,w,c
  8953  002386  A4D8               	btfss	status,2,c
  8954  002388  D009               	goto	l4909
  8955                           
  8956                           ; BSR set to: 0
  8957  00238A  0E00               	movlw	0
  8958  00238C  0100               	movlb	0	; () banked
  8959  00238E  6F70               	movwf	___flge@ff1& (0+255),b
  8960  002390  0E00               	movlw	0
  8961  002392  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  8962  002394  0E00               	movlw	0
  8963  002396  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  8964  002398  0E00               	movlw	0
  8965  00239A  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  8966  00239C                     l4909:
  8967                           
  8968                           ; BSR set to: 0
  8969  00239C  0E00               	movlw	0
  8970  00239E  0100               	movlb	0	; () banked
  8971  0023A0  1574               	andwf	___flge@ff2& (0+255),w,b
  8972  0023A2  6E3C               	movwf	??___flge& (0+255),c
  8973  0023A4  0E00               	movlw	0
  8974  0023A6  0100               	movlb	0	; () banked
  8975  0023A8  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
  8976  0023AA  6E3D               	movwf	(??___flge+1)& (0+255),c
  8977  0023AC  0E80               	movlw	128
  8978  0023AE  0100               	movlb	0	; () banked
  8979  0023B0  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
  8980  0023B2  6E3E               	movwf	(??___flge+2)& (0+255),c
  8981  0023B4  0E7F               	movlw	127
  8982  0023B6  0100               	movlb	0	; () banked
  8983  0023B8  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
  8984  0023BA  6E3F               	movwf	(??___flge+3)& (0+255),c
  8985  0023BC  503C               	movf	??___flge,w,c
  8986  0023BE  103D               	iorwf	??___flge+1,w,c
  8987  0023C0  103E               	iorwf	??___flge+2,w,c
  8988  0023C2  103F               	iorwf	??___flge+3,w,c
  8989  0023C4  A4D8               	btfss	status,2,c
  8990  0023C6  D009               	goto	l4913
  8991                           
  8992                           ; BSR set to: 0
  8993  0023C8  0E00               	movlw	0
  8994  0023CA  0100               	movlb	0	; () banked
  8995  0023CC  6F74               	movwf	___flge@ff2& (0+255),b
  8996  0023CE  0E00               	movlw	0
  8997  0023D0  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8998  0023D2  0E00               	movlw	0
  8999  0023D4  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9000  0023D6  0E00               	movlw	0
  9001  0023D8  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9002  0023DA                     l4913:
  9003                           
  9004                           ; BSR set to: 0
  9005  0023DA  0100               	movlb	0	; () banked
  9006  0023DC  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
  9007  0023DE  D021               	goto	l4917
  9008                           
  9009                           ; BSR set to: 0
  9010  0023E0  C070  F03C         	movff	___flge@ff1,??___flge
  9011  0023E4  C071  F03D         	movff	___flge@ff1+1,??___flge+1
  9012  0023E8  C072  F03E         	movff	___flge@ff1+2,??___flge+2
  9013  0023EC  C073  F03F         	movff	___flge@ff1+3,??___flge+3
  9014  0023F0  1E3C               	comf	??___flge,f,c
  9015  0023F2  1E3D               	comf	??___flge+1,f,c
  9016  0023F4  1E3E               	comf	??___flge+2,f,c
  9017  0023F6  1E3F               	comf	??___flge+3,f,c
  9018  0023F8  2A3C               	incf	??___flge,f,c
  9019  0023FA  0E00               	movlw	0
  9020  0023FC  223D               	addwfc	??___flge+1,f,c
  9021  0023FE  223E               	addwfc	??___flge+2,f,c
  9022  002400  223F               	addwfc	??___flge+3,f,c
  9023  002402  0E00               	movlw	0
  9024  002404  243C               	addwf	??___flge,w,c
  9025  002406  0100               	movlb	0	; () banked
  9026  002408  6F70               	movwf	___flge@ff1& (0+255),b
  9027  00240A  0E00               	movlw	0
  9028  00240C  203D               	addwfc	??___flge+1,w,c
  9029  00240E  0100               	movlb	0	; () banked
  9030  002410  6F71               	movwf	(___flge@ff1+1)& (0+255),b
  9031  002412  0E00               	movlw	0
  9032  002414  203E               	addwfc	??___flge+2,w,c
  9033  002416  0100               	movlb	0	; () banked
  9034  002418  6F72               	movwf	(___flge@ff1+2)& (0+255),b
  9035  00241A  0E80               	movlw	128
  9036  00241C  203F               	addwfc	??___flge+3,w,c
  9037  00241E  0100               	movlb	0	; () banked
  9038  002420  6F73               	movwf	(___flge@ff1+3)& (0+255),b
  9039  002422                     l4917:
  9040                           
  9041                           ; BSR set to: 0
  9042  002422  0100               	movlb	0	; () banked
  9043  002424  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
  9044  002426  D021               	goto	l684
  9045                           
  9046                           ; BSR set to: 0
  9047  002428  C074  F03C         	movff	___flge@ff2,??___flge
  9048  00242C  C075  F03D         	movff	___flge@ff2+1,??___flge+1
  9049  002430  C076  F03E         	movff	___flge@ff2+2,??___flge+2
  9050  002434  C077  F03F         	movff	___flge@ff2+3,??___flge+3
  9051  002438  1E3C               	comf	??___flge,f,c
  9052  00243A  1E3D               	comf	??___flge+1,f,c
  9053  00243C  1E3E               	comf	??___flge+2,f,c
  9054  00243E  1E3F               	comf	??___flge+3,f,c
  9055  002440  2A3C               	incf	??___flge,f,c
  9056  002442  0E00               	movlw	0
  9057  002444  223D               	addwfc	??___flge+1,f,c
  9058  002446  223E               	addwfc	??___flge+2,f,c
  9059  002448  223F               	addwfc	??___flge+3,f,c
  9060  00244A  0E00               	movlw	0
  9061  00244C  243C               	addwf	??___flge,w,c
  9062  00244E  0100               	movlb	0	; () banked
  9063  002450  6F74               	movwf	___flge@ff2& (0+255),b
  9064  002452  0E00               	movlw	0
  9065  002454  203D               	addwfc	??___flge+1,w,c
  9066  002456  0100               	movlb	0	; () banked
  9067  002458  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  9068  00245A  0E00               	movlw	0
  9069  00245C  203E               	addwfc	??___flge+2,w,c
  9070  00245E  0100               	movlb	0	; () banked
  9071  002460  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  9072  002462  0E80               	movlw	128
  9073  002464  203F               	addwfc	??___flge+3,w,c
  9074  002466  0100               	movlb	0	; () banked
  9075  002468  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  9076  00246A                     l684:
  9077                           
  9078                           ; BSR set to: 0
  9079  00246A  0E00               	movlw	0
  9080  00246C  0100               	movlb	0	; () banked
  9081  00246E  1B70               	xorwf	___flge@ff1& (0+255),f,b
  9082  002470  0E00               	movlw	0
  9083  002472  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9084  002474  0E00               	movlw	0
  9085  002476  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9086  002478  0E80               	movlw	128
  9087  00247A  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9088  00247C  0E00               	movlw	0
  9089  00247E  0100               	movlb	0	; () banked
  9090  002480  1B74               	xorwf	___flge@ff2& (0+255),f,b
  9091  002482  0E00               	movlw	0
  9092  002484  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9093  002486  0E00               	movlw	0
  9094  002488  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9095  00248A  0E80               	movlw	128
  9096  00248C  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9097  00248E  0100               	movlb	0	; () banked
  9098  002490  5174               	movf	___flge@ff2& (0+255),w,b
  9099  002492  0100               	movlb	0	; () banked
  9100  002494  5D70               	subwf	___flge@ff1& (0+255),w,b
  9101  002496  0100               	movlb	0	; () banked
  9102  002498  5175               	movf	(___flge@ff2+1)& (0+255),w,b
  9103  00249A  0100               	movlb	0	; () banked
  9104  00249C  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9105  00249E  0100               	movlb	0	; () banked
  9106  0024A0  5176               	movf	(___flge@ff2+2)& (0+255),w,b
  9107  0024A2  0100               	movlb	0	; () banked
  9108  0024A4  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9109  0024A6  0100               	movlb	0	; () banked
  9110  0024A8  5177               	movf	(___flge@ff2+3)& (0+255),w,b
  9111  0024AA  0100               	movlb	0	; () banked
  9112  0024AC  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9113  0024AE  B0D8               	btfsc	status,0,c
  9114  0024B0  D002               	goto	l4923
  9115                           
  9116                           ; BSR set to: 0
  9117  0024B2  90D8               	bcf	status,0,c
  9118  0024B4  0012               	return	
  9119  0024B6                     l4923:
  9120                           
  9121                           ; BSR set to: 0
  9122  0024B6  80D8               	bsf	status,0,c
  9123                           
  9124                           ; BSR set to: 0
  9125  0024B8  0012               	return	
  9126  0024BA                     __end_of___flge:
  9127                           	opt stack 0
  9128                           tblptru	equ	0xFF8
  9129                           tblptrh	equ	0xFF7
  9130                           tblptrl	equ	0xFF6
  9131                           tablat	equ	0xFF5
  9132                           prodh	equ	0xFF4
  9133                           prodl	equ	0xFF3
  9134                           intcon	equ	0xFF2
  9135                           postinc0	equ	0xFEE
  9136                           wreg	equ	0xFE8
  9137                           indf2	equ	0xFDF
  9138                           postinc2	equ	0xFDE
  9139                           fsr2h	equ	0xFDA
  9140                           fsr2l	equ	0xFD9
  9141                           status	equ	0xFD8
  9142                           
  9143 ;; *************** function ___lwdiv *****************
  9144 ;; Defined at:
  9145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  dividend        2   24[COMRAM] unsigned int 
  9148 ;;  divisor         2   26[COMRAM] unsigned int 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  quotient        2   28[COMRAM] unsigned int 
  9151 ;;  counter         1   30[COMRAM] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2   24[COMRAM] unsigned int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9161 ;;      Params:         4       0       0       0
  9162 ;;      Locals:         3       0       0       0
  9163 ;;      Temps:          0       0       0       0
  9164 ;;      Totals:         7       0       0       0
  9165 ;;Total ram usage:        7 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    4
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_LCD_Handler
  9172 ;;		_utoa
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text29
  9177  002CCA                     __ptext29:
  9178                           	opt stack 0
  9179  002CCA                     ___lwdiv:
  9180                           	opt stack 25
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;incstack = 0
  9184  002CCA  0E00               	movlw	0
  9185  002CCC  6E41               	movwf	___lwdiv@quotient+1,c
  9186  002CCE  0E00               	movlw	0
  9187  002CD0  6E40               	movwf	___lwdiv@quotient,c
  9188  002CD2  503E               	movf	___lwdiv@divisor,w,c
  9189  002CD4  103F               	iorwf	___lwdiv@divisor+1,w,c
  9190  002CD6  B4D8               	btfsc	status,2,c
  9191  002CD8  D01C               	goto	l920
  9192  002CDA  0E01               	movlw	1
  9193  002CDC  6E42               	movwf	___lwdiv@counter,c
  9194  002CDE  D004               	goto	l3857
  9195  002CE0                     l3855:
  9196  002CE0  90D8               	bcf	status,0,c
  9197  002CE2  363E               	rlcf	___lwdiv@divisor,f,c
  9198  002CE4  363F               	rlcf	___lwdiv@divisor+1,f,c
  9199  002CE6  2A42               	incf	___lwdiv@counter,f,c
  9200  002CE8                     l3857:
  9201  002CE8  AE3F               	btfss	___lwdiv@divisor+1,7,c
  9202  002CEA  D7FA               	goto	l3855
  9203  002CEC                     l3859:
  9204  002CEC  90D8               	bcf	status,0,c
  9205  002CEE  3640               	rlcf	___lwdiv@quotient,f,c
  9206  002CF0  3641               	rlcf	___lwdiv@quotient+1,f,c
  9207  002CF2  503E               	movf	___lwdiv@divisor,w,c
  9208  002CF4  5C3C               	subwf	___lwdiv@dividend,w,c
  9209  002CF6  503F               	movf	___lwdiv@divisor+1,w,c
  9210  002CF8  583D               	subwfb	___lwdiv@dividend+1,w,c
  9211  002CFA  A0D8               	btfss	status,0,c
  9212  002CFC  D005               	goto	l3867
  9213  002CFE  503E               	movf	___lwdiv@divisor,w,c
  9214  002D00  5E3C               	subwf	___lwdiv@dividend,f,c
  9215  002D02  503F               	movf	___lwdiv@divisor+1,w,c
  9216  002D04  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  9217  002D06  8040               	bsf	___lwdiv@quotient,0,c
  9218  002D08                     l3867:
  9219  002D08  90D8               	bcf	status,0,c
  9220  002D0A  323F               	rrcf	___lwdiv@divisor+1,f,c
  9221  002D0C  323E               	rrcf	___lwdiv@divisor,f,c
  9222  002D0E  2E42               	decfsz	___lwdiv@counter,f,c
  9223  002D10  D7ED               	goto	l3859
  9224  002D12                     l920:
  9225  002D12  C040  F03C         	movff	___lwdiv@quotient,?___lwdiv
  9226  002D16  C041  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9227  002D1A  0012               	return		;funcret
  9228  002D1C                     __end_of___lwdiv:
  9229                           	opt stack 0
  9230                           tblptru	equ	0xFF8
  9231                           tblptrh	equ	0xFF7
  9232                           tblptrl	equ	0xFF6
  9233                           tablat	equ	0xFF5
  9234                           prodh	equ	0xFF4
  9235                           prodl	equ	0xFF3
  9236                           intcon	equ	0xFF2
  9237                           postinc0	equ	0xFEE
  9238                           wreg	equ	0xFE8
  9239                           indf2	equ	0xFDF
  9240                           postinc2	equ	0xFDE
  9241                           fsr2h	equ	0xFDA
  9242                           fsr2l	equ	0xFD9
  9243                           status	equ	0xFD8
  9244                           
  9245 ;; *************** function _LCD_write_string *****************
  9246 ;; Defined at:
  9247 ;;		line 194 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
  9250 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;		None               void
  9255 ;; Registers used:
  9256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9262 ;;      Params:         0       2       0       0
  9263 ;;      Locals:         0       0       0       0
  9264 ;;      Temps:          0       0       0       0
  9265 ;;      Totals:         0       2       0       0
  9266 ;;Total ram usage:        2 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    9
  9269 ;; This function calls:
  9270 ;;		_LCD_write_char
  9271 ;; This function is called by:
  9272 ;;		_LCD_Handler
  9273 ;;		_LCD_write_integer
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text30
  9278  002FC6                     __ptext30:
  9279                           	opt stack 0
  9280  002FC6                     _LCD_write_string:
  9281                           	opt stack 20
  9282                           
  9283                           ;src\LCD_44780.c: 197: while(*buffer){
  9284                           
  9285                           ;incstack = 0
  9286  002FC6  D00A               	goto	l5093
  9287  002FC8                     l5089:
  9288                           
  9289                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9290  002FC8  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9291  002FCC  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9292  002FD0  50DF               	movf	indf2,w,c
  9293  002FD2  EC68  F015         	call	_LCD_write_char
  9294                           
  9295                           ;src\LCD_44780.c: 202: buffer++;
  9296  002FD6  0100               	movlb	0	; () banked
  9297  002FD8  4B7A               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9298  002FDA  2B7B               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9299  002FDC                     l5093:
  9300  002FDC  C07A  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9301  002FE0  C07B  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9302  002FE4  50DF               	movf	indf2,w,c
  9303  002FE6  B4D8               	btfsc	status,2,c
  9304  002FE8  0012               	return	
  9305  002FEA  D7EE               	goto	l5089
  9306  002FEC                     __end_of_LCD_write_string:
  9307                           	opt stack 0
  9308                           tblptru	equ	0xFF8
  9309                           tblptrh	equ	0xFF7
  9310                           tblptrl	equ	0xFF6
  9311                           tablat	equ	0xFF5
  9312                           prodh	equ	0xFF4
  9313                           prodl	equ	0xFF3
  9314                           intcon	equ	0xFF2
  9315                           postinc0	equ	0xFEE
  9316                           wreg	equ	0xFE8
  9317                           indf2	equ	0xFDF
  9318                           postinc2	equ	0xFDE
  9319                           fsr2h	equ	0xFDA
  9320                           fsr2l	equ	0xFD9
  9321                           status	equ	0xFD8
  9322                           
  9323 ;; *************** function _LCD_write_message *****************
  9324 ;; Defined at:
  9325 ;;		line 178 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  buffer          2   26[BANK0 ] PTR const unsigned char 
  9328 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
  9329 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
  9330 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;		None               void
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9342 ;;      Params:         0       2       0       0
  9343 ;;      Locals:         0       0       0       0
  9344 ;;      Temps:          0       0       0       0
  9345 ;;      Totals:         0       2       0       0
  9346 ;;Total ram usage:        2 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    9
  9349 ;; This function calls:
  9350 ;;		_LCD_write_char
  9351 ;; This function is called by:
  9352 ;;		_main
  9353 ;;		_LCD_Handler
  9354 ;;		_board_initialization
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text31
  9359  002F48                     __ptext31:
  9360                           	opt stack 0
  9361  002F48                     _LCD_write_message:
  9362                           	opt stack 20
  9363                           
  9364                           ;src\LCD_44780.c: 181: while(*buffer) {
  9365                           
  9366                           ;incstack = 0
  9367  002F48  D00B               	goto	l5085
  9368  002F4A                     l5081:
  9369                           
  9370                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9371  002F4A  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9372  002F4E  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9373  002F52                     	if	0	;tblptru may be non-zero
  9374  002F52                     	endif
  9375  002F52                     	if	0	;tblptru may be non-zero
  9376  002F52                     	endif
  9377  002F52  0008               	tblrd		*
  9378  002F54  50F5               	movf	tablat,w,c
  9379  002F56  EC68  F015         	call	_LCD_write_char
  9380                           
  9381                           ;src\LCD_44780.c: 186: buffer++;
  9382  002F5A  0100               	movlb	0	; () banked
  9383  002F5C  4B7A               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9384  002F5E  2B7B               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9385  002F60                     l5085:
  9386  002F60  C07A  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9387  002F64  C07B  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9388  002F68                     	if	0	;tblptru may be non-zero
  9389  002F68                     	endif
  9390  002F68                     	if	0	;tblptru may be non-zero
  9391  002F68                     	endif
  9392  002F68  0008               	tblrd		*
  9393  002F6A  50F5               	movf	tablat,w,c
  9394  002F6C  0900               	iorlw	0
  9395  002F6E  B4D8               	btfsc	status,2,c
  9396  002F70  0012               	return	
  9397  002F72  D7EB               	goto	l5081
  9398  002F74                     __end_of_LCD_write_message:
  9399                           	opt stack 0
  9400                           tblptru	equ	0xFF8
  9401                           tblptrh	equ	0xFF7
  9402                           tblptrl	equ	0xFF6
  9403                           tablat	equ	0xFF5
  9404                           prodh	equ	0xFF4
  9405                           prodl	equ	0xFF3
  9406                           intcon	equ	0xFF2
  9407                           postinc0	equ	0xFEE
  9408                           wreg	equ	0xFE8
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           fsr2h	equ	0xFDA
  9412                           fsr2l	equ	0xFD9
  9413                           status	equ	0xFD8
  9414                           
  9415 ;; *************** function _LCD_write_char *****************
  9416 ;; Defined at:
  9417 ;;		line 145 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  value           1    wreg     unsigned char 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  value           1   25[BANK0 ] unsigned char 
  9422 ;;  D0              1   24[BANK0 ] unsigned char 
  9423 ;;  D1              1   23[BANK0 ] unsigned char 
  9424 ;;  D2              1   22[BANK0 ] unsigned char 
  9425 ;;  D3              1   21[BANK0 ] unsigned char 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;		None               void
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9435 ;;      Params:         0       0       0       0
  9436 ;;      Locals:         0       5       0       0
  9437 ;;      Temps:          0       0       0       0
  9438 ;;      Totals:         0       5       0       0
  9439 ;;Total ram usage:        5 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    8
  9442 ;; This function calls:
  9443 ;;		_LCD_send_command
  9444 ;; This function is called by:
  9445 ;;		_LCD_write_message
  9446 ;;		_LCD_write_string
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text32
  9451  002AD0                     __ptext32:
  9452                           	opt stack 0
  9453  002AD0                     _LCD_write_char:
  9454                           	opt stack 20
  9455                           
  9456                           ;incstack = 0
  9457                           ;LCD_write_char@value stored from wreg
  9458  002AD0  0100               	movlb	0	; () banked
  9459  002AD2  6F79               	movwf	LCD_write_char@value& (0+255),b
  9460                           
  9461                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9462                           ;src\LCD_44780.c: 149: PORTEbits.RE2 = 1;
  9463  002AD4  8484               	bsf	3972,2,c	;volatile
  9464                           
  9465                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9466  002AD6  0100               	movlb	0	; () banked
  9467  002AD8  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9468  002ADA  0B01               	andlw	1
  9469  002ADC  0100               	movlb	0	; () banked
  9470  002ADE  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9471                           
  9472                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9473  002AE0  0100               	movlb	0	; () banked
  9474  002AE2  4579               	rlncf	LCD_write_char@value& (0+255),w,b
  9475  002AE4  46E8               	rlncf	wreg,f,c
  9476  002AE6  0B03               	andlw	3
  9477  002AE8  0B01               	andlw	1
  9478  002AEA  0100               	movlb	0	; () banked
  9479  002AEC  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9480                           
  9481                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9482  002AEE  0100               	movlb	0	; () banked
  9483  002AF0  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9484  002AF2  42E8               	rrncf	wreg,f,c
  9485  002AF4  0B07               	andlw	7
  9486  002AF6  0B01               	andlw	1
  9487  002AF8  0100               	movlb	0	; () banked
  9488  002AFA  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9489                           
  9490                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9491  002AFC  0100               	movlb	0	; () banked
  9492  002AFE  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9493  002B00  0B0F               	andlw	15
  9494  002B02  0B01               	andlw	1
  9495  002B04  0100               	movlb	0	; () banked
  9496  002B06  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9500  002B08  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9501  002B0C  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9502  002B10  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9503  002B14  0100               	movlb	0	; () banked
  9504  002B16  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9505  002B18  ECF9  F016         	call	_LCD_send_command
  9506                           
  9507                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9508  002B1C  0100               	movlb	0	; () banked
  9509  002B1E  3979               	swapf	LCD_write_char@value& (0+255),w,b
  9510  002B20  46E8               	rlncf	wreg,f,c
  9511  002B22  0B1F               	andlw	31
  9512  002B24  0B01               	andlw	1
  9513  002B26  0100               	movlb	0	; () banked
  9514  002B28  6F75               	movwf	LCD_write_char@D3& (0+255),b
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9518  002B2A  0100               	movlb	0	; () banked
  9519  002B2C  4179               	rrncf	LCD_write_char@value& (0+255),w,b
  9520  002B2E  42E8               	rrncf	wreg,f,c
  9521  002B30  0B3F               	andlw	63
  9522  002B32  0B01               	andlw	1
  9523  002B34  0100               	movlb	0	; () banked
  9524  002B36  6F76               	movwf	LCD_write_char@D2& (0+255),b
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9528  002B38  0100               	movlb	0	; () banked
  9529  002B3A  90D8               	bcf	status,0,c
  9530  002B3C  3179               	rrcf	LCD_write_char@value& (0+255),w,b
  9531  002B3E  0B01               	andlw	1
  9532  002B40  0100               	movlb	0	; () banked
  9533  002B42  6F77               	movwf	LCD_write_char@D1& (0+255),b
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9537  002B44  0100               	movlb	0	; () banked
  9538  002B46  5179               	movf	LCD_write_char@value& (0+255),w,b
  9539  002B48  0B01               	andlw	1
  9540  002B4A  0100               	movlb	0	; () banked
  9541  002B4C  6F78               	movwf	LCD_write_char@D0& (0+255),b
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9545  002B4E  C076  F072         	movff	LCD_write_char@D2,LCD_send_command@D2
  9546  002B52  C077  F073         	movff	LCD_write_char@D1,LCD_send_command@D1
  9547  002B56  C078  F074         	movff	LCD_write_char@D0,LCD_send_command@D0
  9548  002B5A  0100               	movlb	0	; () banked
  9549  002B5C  5175               	movf	LCD_write_char@D3& (0+255),w,b
  9550  002B5E  ECF9  F016         	call	_LCD_send_command
  9551                           
  9552                           ;src\LCD_44780.c: 167: PORTEbits.RE2 = 0;
  9553  002B62  9484               	bcf	3972,2,c	;volatile
  9554  002B64  0012               	return		;funcret
  9555  002B66                     __end_of_LCD_write_char:
  9556                           	opt stack 0
  9557                           tblptru	equ	0xFF8
  9558                           tblptrh	equ	0xFF7
  9559                           tblptrl	equ	0xFF6
  9560                           tablat	equ	0xFF5
  9561                           prodh	equ	0xFF4
  9562                           prodl	equ	0xFF3
  9563                           intcon	equ	0xFF2
  9564                           postinc0	equ	0xFEE
  9565                           wreg	equ	0xFE8
  9566                           indf2	equ	0xFDF
  9567                           postinc2	equ	0xFDE
  9568                           fsr2h	equ	0xFDA
  9569                           fsr2l	equ	0xFD9
  9570                           status	equ	0xFD8
  9571                           
  9572 ;; *************** function _LCD_goto_line *****************
  9573 ;; Defined at:
  9574 ;;		line 111 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  line            1    wreg     unsigned char 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  line            1   21[BANK0 ] unsigned char 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;		None               void
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9588 ;;      Params:         0       0       0       0
  9589 ;;      Locals:         0       1       0       0
  9590 ;;      Temps:          0       0       0       0
  9591 ;;      Totals:         0       1       0       0
  9592 ;;Total ram usage:        1 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    8
  9595 ;; This function calls:
  9596 ;;		_LCD_send_command
  9597 ;; This function is called by:
  9598 ;;		_main
  9599 ;;		_LCD_Handler
  9600 ;;		_board_initialization
  9601 ;;		_LCD_goto_xy
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text33
  9606  0026DC                     __ptext33:
  9607                           	opt stack 0
  9608  0026DC                     _LCD_goto_line:
  9609                           	opt stack 21
  9610                           
  9611                           ;incstack = 0
  9612                           ;LCD_goto_line@line stored from wreg
  9613  0026DC  0100               	movlb	0	; () banked
  9614  0026DE  6F75               	movwf	LCD_goto_line@line& (0+255),b
  9615                           
  9616                           ;src\LCD_44780.c: 113: switch(line) {
  9617  0026E0  D064               	goto	l5077
  9618  0026E2                     l5069:
  9619  0026E2  0E00               	movlw	0
  9620  0026E4  0100               	movlb	0	; () banked
  9621  0026E6  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9622  0026E8  0E00               	movlw	0
  9623  0026EA  0100               	movlb	0	; () banked
  9624  0026EC  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9625  0026EE  0E00               	movlw	0
  9626  0026F0  0100               	movlb	0	; () banked
  9627  0026F2  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9628  0026F4  0E01               	movlw	1
  9629  0026F6  ECF9  F016         	call	_LCD_send_command
  9630                           
  9631                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9632  0026FA  0E00               	movlw	0
  9633  0026FC  0100               	movlb	0	; () banked
  9634  0026FE  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9635  002700  0E00               	movlw	0
  9636  002702  0100               	movlb	0	; () banked
  9637  002704  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9638  002706  0E00               	movlw	0
  9639  002708  0100               	movlb	0	; () banked
  9640  00270A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9641  00270C  0E00               	movlw	0
  9642  00270E  ECF9  F016         	call	_LCD_send_command
  9643                           
  9644                           ;src\LCD_44780.c: 117: break;
  9645  002712  0012               	return	
  9646  002714                     l5071:
  9647  002714  0E01               	movlw	1
  9648  002716  0100               	movlb	0	; () banked
  9649  002718  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9650  00271A  0E00               	movlw	0
  9651  00271C  0100               	movlb	0	; () banked
  9652  00271E  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9653  002720  0E00               	movlw	0
  9654  002722  0100               	movlb	0	; () banked
  9655  002724  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9656  002726  0E01               	movlw	1
  9657  002728  ECF9  F016         	call	_LCD_send_command
  9658                           
  9659                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9660  00272C  0E00               	movlw	0
  9661  00272E  0100               	movlb	0	; () banked
  9662  002730  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9663  002732  0E00               	movlw	0
  9664  002734  0100               	movlb	0	; () banked
  9665  002736  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9666  002738  0E00               	movlw	0
  9667  00273A  0100               	movlb	0	; () banked
  9668  00273C  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9669  00273E  0E00               	movlw	0
  9670  002740  ECF9  F016         	call	_LCD_send_command
  9671                           
  9672                           ;src\LCD_44780.c: 121: break;
  9673  002744  0012               	return	
  9674  002746                     l5073:
  9675  002746  0E00               	movlw	0
  9676  002748  0100               	movlb	0	; () banked
  9677  00274A  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9678  00274C  0E00               	movlw	0
  9679  00274E  0100               	movlb	0	; () banked
  9680  002750  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9681  002752  0E01               	movlw	1
  9682  002754  0100               	movlb	0	; () banked
  9683  002756  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9684  002758  0E01               	movlw	1
  9685  00275A  ECF9  F016         	call	_LCD_send_command
  9686                           
  9687                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9688  00275E  0E01               	movlw	1
  9689  002760  0100               	movlb	0	; () banked
  9690  002762  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9691  002764  0E00               	movlw	0
  9692  002766  0100               	movlb	0	; () banked
  9693  002768  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9694  00276A  0E00               	movlw	0
  9695  00276C  0100               	movlb	0	; () banked
  9696  00276E  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9697  002770  0E00               	movlw	0
  9698  002772  ECF9  F016         	call	_LCD_send_command
  9699                           
  9700                           ;src\LCD_44780.c: 125: break;
  9701  002776  0012               	return	
  9702  002778                     l5075:
  9703  002778  0E01               	movlw	1
  9704  00277A  0100               	movlb	0	; () banked
  9705  00277C  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9706  00277E  0E00               	movlw	0
  9707  002780  0100               	movlb	0	; () banked
  9708  002782  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9709  002784  0E01               	movlw	1
  9710  002786  0100               	movlb	0	; () banked
  9711  002788  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9712  00278A  0E01               	movlw	1
  9713  00278C  ECF9  F016         	call	_LCD_send_command
  9714                           
  9715                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9716  002790  0E01               	movlw	1
  9717  002792  0100               	movlb	0	; () banked
  9718  002794  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9719  002796  0E00               	movlw	0
  9720  002798  0100               	movlb	0	; () banked
  9721  00279A  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9722  00279C  0E00               	movlw	0
  9723  00279E  0100               	movlb	0	; () banked
  9724  0027A0  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9725  0027A2  0E00               	movlw	0
  9726  0027A4  ECF9  F016         	call	_LCD_send_command
  9727                           
  9728                           ;src\LCD_44780.c: 129: }
  9729  0027A8  0012               	return	
  9730  0027AA                     l5077:
  9731  0027AA  0100               	movlb	0	; () banked
  9732  0027AC  5175               	movf	LCD_goto_line@line& (0+255),w,b
  9733                           
  9734                           ; Switch size 1, requested type "space"
  9735                           ; Number of cases is 4, Range of values is 1 to 4
  9736                           ; switch strategies available:
  9737                           ; Name         Instructions Cycles
  9738                           ; simple_byte           13     7 (average)
  9739                           ;	Chosen strategy is simple_byte
  9740  0027AE  0A01               	xorlw	1	; case 1
  9741  0027B0  B4D8               	btfsc	status,2,c
  9742  0027B2  D797               	goto	l5069
  9743  0027B4  0A03               	xorlw	3	; case 2
  9744  0027B6  B4D8               	btfsc	status,2,c
  9745  0027B8  D7AD               	goto	l5071
  9746  0027BA  0A01               	xorlw	1	; case 3
  9747  0027BC  B4D8               	btfsc	status,2,c
  9748  0027BE  D7C3               	goto	l5073
  9749  0027C0  0A07               	xorlw	7	; case 4
  9750  0027C2  A4D8               	btfss	status,2,c
  9751  0027C4  0012               	return	
  9752  0027C6  D7D8               	goto	l5075
  9753  0027C8                     __end_of_LCD_goto_line:
  9754                           	opt stack 0
  9755                           tblptru	equ	0xFF8
  9756                           tblptrh	equ	0xFF7
  9757                           tblptrl	equ	0xFF6
  9758                           tablat	equ	0xFF5
  9759                           prodh	equ	0xFF4
  9760                           prodl	equ	0xFF3
  9761                           intcon	equ	0xFF2
  9762                           postinc0	equ	0xFEE
  9763                           wreg	equ	0xFE8
  9764                           indf2	equ	0xFDF
  9765                           postinc2	equ	0xFDE
  9766                           fsr2h	equ	0xFDA
  9767                           fsr2l	equ	0xFD9
  9768                           status	equ	0xFD8
  9769                           
  9770 ;; *************** function _LCD_clear *****************
  9771 ;; Defined at:
  9772 ;;		line 257 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;		None               void
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9786 ;;      Params:         0       0       0       0
  9787 ;;      Locals:         0       0       0       0
  9788 ;;      Temps:          0       0       0       0
  9789 ;;      Totals:         0       0       0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    8
  9793 ;; This function calls:
  9794 ;;		_LCD_send_command
  9795 ;; This function is called by:
  9796 ;;		_LCD_initialize
  9797 ;;		_main
  9798 ;;		_LCD_Handler
  9799 ;;		_board_initialization
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text34
  9804  002E5A                     __ptext34:
  9805                           	opt stack 0
  9806  002E5A                     _LCD_clear:
  9807                           	opt stack 20
  9808                           
  9809                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9810                           
  9811                           ;incstack = 0
  9812  002E5A  0E00               	movlw	0
  9813  002E5C  0100               	movlb	0	; () banked
  9814  002E5E  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9815  002E60  0E00               	movlw	0
  9816  002E62  0100               	movlb	0	; () banked
  9817  002E64  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9818  002E66  0E00               	movlw	0
  9819  002E68  0100               	movlb	0	; () banked
  9820  002E6A  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9821  002E6C  0E00               	movlw	0
  9822  002E6E  ECF9  F016         	call	_LCD_send_command
  9823                           
  9824                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9825  002E72  0E00               	movlw	0
  9826  002E74  0100               	movlb	0	; () banked
  9827  002E76  6F72               	movwf	LCD_send_command@D2& (0+255),b
  9828  002E78  0E00               	movlw	0
  9829  002E7A  0100               	movlb	0	; () banked
  9830  002E7C  6F73               	movwf	LCD_send_command@D1& (0+255),b
  9831  002E7E  0E01               	movlw	1
  9832  002E80  0100               	movlb	0	; () banked
  9833  002E82  6F74               	movwf	LCD_send_command@D0& (0+255),b
  9834  002E84  0E00               	movlw	0
  9835  002E86  ECF9  F016         	call	_LCD_send_command
  9836  002E8A  0012               	return		;funcret
  9837  002E8C                     __end_of_LCD_clear:
  9838                           	opt stack 0
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           intcon	equ	0xFF2
  9846                           postinc0	equ	0xFEE
  9847                           wreg	equ	0xFE8
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           fsr2h	equ	0xFDA
  9851                           fsr2l	equ	0xFD9
  9852                           status	equ	0xFD8
  9853                           
  9854 ;; *************** function _LCD_send_command *****************
  9855 ;; Defined at:
  9856 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  D3              1    wreg     unsigned char 
  9859 ;;  D2              1   18[BANK0 ] unsigned char 
  9860 ;;  D1              1   19[BANK0 ] unsigned char 
  9861 ;;  D0              1   20[BANK0 ] unsigned char 
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;  D3              1   30[COMRAM] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;		None               void
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9873 ;;      Params:         0       3       0       0
  9874 ;;      Locals:         1       0       0       0
  9875 ;;      Temps:          0       0       0       0
  9876 ;;      Totals:         1       3       0       0
  9877 ;;Total ram usage:        4 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    7
  9880 ;; This function calls:
  9881 ;;		_LCD_enable_pulse
  9882 ;; This function is called by:
  9883 ;;		_LCD_goto_line
  9884 ;;		_LCD_write_char
  9885 ;;		_LCD_clear
  9886 ;;		_LCD_cursor
  9887 ;;		_LCD_initialize
  9888 ;;		_LCD_home
  9889 ;;		_LCD_shift
  9890 ;;		_LCD_shift_cursor
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text35
  9895  002DF2                     __ptext35:
  9896                           	opt stack 0
  9897  002DF2                     _LCD_send_command:
  9898                           	opt stack 20
  9899                           
  9900                           ;incstack = 0
  9901                           ;LCD_send_command@D3 stored from wreg
  9902  002DF2  6E42               	movwf	LCD_send_command@D3,c
  9903                           
  9904                           ;src\LCD_44780.c: 63: PORTCbits.RC2 = D0;
  9905  002DF4  0100               	movlb	0	; () banked
  9906  002DF6  B174               	btfsc	LCD_send_command@D0& (0+255),0,b
  9907  002DF8  D002               	bra	u4605
  9908  002DFA  9482               	bcf	3970,2,c	;volatile
  9909  002DFC  D001               	bra	u4606
  9910  002DFE                     u4605:
  9911  002DFE  8482               	bsf	3970,2,c	;volatile
  9912  002E00                     u4606:
  9913                           
  9914                           ;src\LCD_44780.c: 64: PORTCbits.RC3 = D1;
  9915  002E00  0100               	movlb	0	; () banked
  9916  002E02  B173               	btfsc	LCD_send_command@D1& (0+255),0,b
  9917  002E04  D002               	bra	u4615
  9918  002E06  9682               	bcf	3970,3,c	;volatile
  9919  002E08  D001               	bra	u4616
  9920  002E0A                     u4615:
  9921  002E0A  8682               	bsf	3970,3,c	;volatile
  9922  002E0C                     u4616:
  9923                           
  9924                           ;src\LCD_44780.c: 65: PORTDbits.RD0 = D2;
  9925  002E0C  0100               	movlb	0	; () banked
  9926  002E0E  B172               	btfsc	LCD_send_command@D2& (0+255),0,b
  9927  002E10  D002               	bra	u4625
  9928  002E12  9083               	bcf	3971,0,c	;volatile
  9929  002E14  D001               	bra	u4626
  9930  002E16                     u4625:
  9931  002E16  8083               	bsf	3971,0,c	;volatile
  9932  002E18                     u4626:
  9933                           
  9934                           ;src\LCD_44780.c: 66: PORTDbits.RD1 = D3;
  9935  002E18  B042               	btfsc	LCD_send_command@D3,0,c
  9936  002E1A  D002               	bra	u4635
  9937  002E1C  9283               	bcf	3971,1,c	;volatile
  9938  002E1E  D001               	bra	u4636
  9939  002E20                     u4635:
  9940  002E20  8283               	bsf	3971,1,c	;volatile
  9941  002E22                     u4636:
  9942                           
  9943                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  9944  002E22  EC09  F018         	call	_LCD_enable_pulse	;wreg free
  9945  002E26  0012               	return		;funcret
  9946  002E28                     __end_of_LCD_send_command:
  9947                           	opt stack 0
  9948                           tblptru	equ	0xFF8
  9949                           tblptrh	equ	0xFF7
  9950                           tblptrl	equ	0xFF6
  9951                           tablat	equ	0xFF5
  9952                           prodh	equ	0xFF4
  9953                           prodl	equ	0xFF3
  9954                           intcon	equ	0xFF2
  9955                           postinc0	equ	0xFEE
  9956                           wreg	equ	0xFE8
  9957                           indf2	equ	0xFDF
  9958                           postinc2	equ	0xFDE
  9959                           fsr2h	equ	0xFDA
  9960                           fsr2l	equ	0xFD9
  9961                           status	equ	0xFD8
  9962                           
  9963 ;; *************** function _LCD_enable_pulse *****************
  9964 ;; Defined at:
  9965 ;;		line 49 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;		None               void
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9979 ;;      Params:         0       0       0       0
  9980 ;;      Locals:         0       0       0       0
  9981 ;;      Temps:          0       0       0       0
  9982 ;;      Totals:         0       0       0       0
  9983 ;;Total ram usage:        0 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    6
  9986 ;; This function calls:
  9987 ;;		_delay_ms
  9988 ;; This function is called by:
  9989 ;;		_LCD_send_command
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text36
  9994  003012                     __ptext36:
  9995                           	opt stack 0
  9996  003012                     _LCD_enable_pulse:
  9997                           	opt stack 20
  9998                           
  9999                           ;src\LCD_44780.c: 51: PORTCbits.RC1 = 1;
 10000                           
 10001                           ;incstack = 0
 10002  003012  8282               	bsf	3970,1,c	;volatile
 10003                           
 10004                           ;src\LCD_44780.c: 52: delay_ms (1);
 10005  003014  0E00               	movlw	0
 10006  003016  0100               	movlb	0	; () banked
 10007  003018  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10008  00301A  0E01               	movlw	1
 10009  00301C  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10010  00301E  EC46  F017         	call	_delay_ms	;wreg free
 10011                           
 10012                           ;src\LCD_44780.c: 53: PORTCbits.RC1 = 0;
 10013  003022  9282               	bcf	3970,1,c	;volatile
 10014                           
 10015                           ;src\LCD_44780.c: 54: delay_ms (1);
 10016  003024  0E00               	movlw	0
 10017  003026  0100               	movlb	0	; () banked
 10018  003028  6F71               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10019  00302A  0E01               	movlw	1
 10020  00302C  6F70               	movwf	delay_ms@value_ms& (0+255),b
 10021  00302E  EC46  F017         	call	_delay_ms	;wreg free
 10022  003032  0012               	return		;funcret
 10023  003034                     __end_of_LCD_enable_pulse:
 10024                           	opt stack 0
 10025                           tblptru	equ	0xFF8
 10026                           tblptrh	equ	0xFF7
 10027                           tblptrl	equ	0xFF6
 10028                           tablat	equ	0xFF5
 10029                           prodh	equ	0xFF4
 10030                           prodl	equ	0xFF3
 10031                           intcon	equ	0xFF2
 10032                           postinc0	equ	0xFEE
 10033                           wreg	equ	0xFE8
 10034                           indf2	equ	0xFDF
 10035                           postinc2	equ	0xFDE
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function _delay_ms *****************
 10041 ;; Defined at:
 10042 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  value_ms        2   16[BANK0 ] unsigned int 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;		None               void
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10056 ;;      Params:         0       2       0       0
 10057 ;;      Locals:         0       0       0       0
 10058 ;;      Temps:          0       0       0       0
 10059 ;;      Totals:         0       2       0       0
 10060 ;;Total ram usage:        2 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:    5
 10063 ;; This function calls:
 10064 ;;		___wmul
 10065 ;; This function is called by:
 10066 ;;		_delay_s
 10067 ;;		_LCD_enable_pulse
 10068 ;;		_LCD_initialize
 10069 ;;		_main
 10070 ;;		_board_initialization
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text37
 10075  002E8C                     __ptext37:
 10076                           	opt stack 0
 10077  002E8C                     _delay_ms:
 10078                           	opt stack 25
 10079                           
 10080                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10081                           
 10082                           ;incstack = 0
 10083  002E8C  C046  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10084  002E90  6A3D               	clrf	___wmul@multiplier+1,c
 10085  002E92  C070  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
 10086  002E96  C071  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10087  002E9A  ECF6  F017         	call	___wmul	;wreg free
 10088  002E9E  C03C  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10089  002EA2  C03D  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10090                           
 10091                           ;src\delay.c: 75: while (clock_counter_reference) {
 10092  002EA6  D006               	goto	l95
 10093  002EA8                     l4261:
 10094                           
 10095                           ;src\delay.c: 85: _delay(240);
 10096  002EA8  0E50               	movlw	80
 10097  002EAA                     u6567:
 10098  002EAA  2EE8               	decfsz	wreg,f,c
 10099  002EAC  D7FE               	goto	u6567
 10100                           
 10101                           ;src\delay.c: 88: clock_counter_reference--;
 10102  002EAE  0644               	decf	_clock_counter_reference,f,c	;volatile
 10103  002EB0  A0D8               	btfss	status,0,c
 10104  002EB2  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10105  002EB4                     l95:
 10106  002EB4  5044               	movf	_clock_counter_reference,w,c	;volatile
 10107  002EB6  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10108  002EB8  B4D8               	btfsc	status,2,c
 10109  002EBA  0012               	return	
 10110  002EBC  D7F5               	goto	l4261
 10111  002EBE                     __end_of_delay_ms:
 10112                           	opt stack 0
 10113                           tblptru	equ	0xFF8
 10114                           tblptrh	equ	0xFF7
 10115                           tblptrl	equ	0xFF6
 10116                           tablat	equ	0xFF5
 10117                           prodh	equ	0xFF4
 10118                           prodl	equ	0xFF3
 10119                           intcon	equ	0xFF2
 10120                           postinc0	equ	0xFEE
 10121                           wreg	equ	0xFE8
 10122                           indf2	equ	0xFDF
 10123                           postinc2	equ	0xFDE
 10124                           fsr2h	equ	0xFDA
 10125                           fsr2l	equ	0xFD9
 10126                           status	equ	0xFD8
 10127                           
 10128 ;; *************** function ___wmul *****************
 10129 ;; Defined at:
 10130 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  multiplier      2   24[COMRAM] unsigned int 
 10133 ;;  multiplicand    2   26[COMRAM] unsigned int 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  product         2   28[COMRAM] unsigned int 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  2   24[COMRAM] unsigned int 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0, prodl, prodh
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10145 ;;      Params:         4       0       0       0
 10146 ;;      Locals:         2       0       0       0
 10147 ;;      Temps:          0       0       0       0
 10148 ;;      Totals:         6       0       0       0
 10149 ;;Total ram usage:        6 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    4
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_delay_ms
 10156 ;;		_sprintf
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           	psect	text38
 10161  002FEC                     __ptext38:
 10162                           	opt stack 0
 10163  002FEC                     ___wmul:
 10164                           	opt stack 25
 10165                           
 10166                           ;incstack = 0
 10167  002FEC  503C               	movf	___wmul@multiplier,w,c
 10168  002FEE  023E               	mulwf	___wmul@multiplicand,c
 10169  002FF0  CFF3 F040          	movff	prodl,___wmul@product
 10170  002FF4  CFF4 F041          	movff	prodh,___wmul@product+1
 10171  002FF8  503C               	movf	___wmul@multiplier,w,c
 10172  002FFA  023F               	mulwf	___wmul@multiplicand+1,c
 10173  002FFC  50F3               	movf	prodl,w,c
 10174  002FFE  2641               	addwf	___wmul@product+1,f,c
 10175  003000  503D               	movf	___wmul@multiplier+1,w,c
 10176  003002  023E               	mulwf	___wmul@multiplicand,c
 10177  003004  50F3               	movf	prodl,w,c
 10178  003006  2641               	addwf	___wmul@product+1,f,c
 10179  003008  C040  F03C         	movff	___wmul@product,?___wmul
 10180  00300C  C041  F03D         	movff	___wmul@product+1,?___wmul+1
 10181  003010  0012               	return	
 10182  003012                     __end_of___wmul:
 10183                           	opt stack 0
 10184                           tblptru	equ	0xFF8
 10185                           tblptrh	equ	0xFF7
 10186                           tblptrl	equ	0xFF6
 10187                           tablat	equ	0xFF5
 10188                           prodh	equ	0xFF4
 10189                           prodl	equ	0xFF3
 10190                           intcon	equ	0xFF2
 10191                           postinc0	equ	0xFEE
 10192                           wreg	equ	0xFE8
 10193                           indf2	equ	0xFDF
 10194                           postinc2	equ	0xFDE
 10195                           fsr2h	equ	0xFDA
 10196                           fsr2l	equ	0xFD9
 10197                           status	equ	0xFD8
 10198                           
 10199 ;; *************** function _Joystick_Polling *****************
 10200 ;; Defined at:
 10201 ;;		line 213 in file "telecomando.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;		None               void
 10208 ;; Registers used:
 10209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10215 ;;      Params:         0       0       0       0
 10216 ;;      Locals:         0       0       0       0
 10217 ;;      Temps:          1       0       0       0
 10218 ;;      Totals:         1       0       0       0
 10219 ;;Total ram usage:        1 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    4
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_main
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text39
 10230  002D64                     __ptext39:
 10231                           	opt stack 0
 10232  002D64                     _Joystick_Polling:
 10233                           	opt stack 26
 10234                           
 10235                           ;telecomando.c: 214: for (i = 0; i < 2; i++) {
 10236                           
 10237                           ;incstack = 0
 10238  002D64  0E00               	movlw	0
 10239  002D66  6E15               	movwf	_i,c	;volatile
 10240  002D68                     l3989:
 10241  002D68  0E01               	movlw	1
 10242  002D6A  6415               	cpfsgt	_i,c	;volatile
 10243  002D6C  D001               	goto	l271
 10244  002D6E  0012               	return	
 10245  002D70                     l271:
 10246                           
 10247                           ;telecomando.c: 215: ADCON0bits.GO = 1;
 10248  002D70  82C2               	bsf	4034,1,c	;volatile
 10249  002D72                     l273:
 10250  002D72  B2C2               	btfsc	4034,1,c	;volatile
 10251  002D74  D7FE               	goto	l273
 10252                           
 10253                           ;telecomando.c: 217: JoystickValues[i] = ADRESH - 128;
 10254  002D76  5015               	movf	_i,w,c	;volatile
 10255  002D78  0D01               	mullw	1
 10256  002D7A  0E22               	movlw	low _JoystickValues
 10257  002D7C  24F3               	addwf	prodl,w,c
 10258  002D7E  6ED9               	movwf	fsr2l,c
 10259  002D80  0E00               	movlw	high _JoystickValues
 10260  002D82  20F4               	addwfc	prodh,w,c
 10261  002D84  6EDA               	movwf	fsr2h,c
 10262  002D86  50C4               	movf	4036,w,c	;volatile
 10263  002D88  0F80               	addlw	128
 10264  002D8A  6EDF               	movwf	indf2,c
 10265                           
 10266                           ;telecomando.c: 218: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 10267  002D8C  A4C2               	btfss	4034,2,c	;volatile
 10268  002D8E  D002               	goto	u4180
 10269  002D90  0E01               	movlw	1
 10270  002D92  D001               	goto	u4186
 10271  002D94                     u4180:
 10272  002D94  0E00               	movlw	0
 10273  002D96                     u4186:
 10274  002D96  0AFF               	xorlw	255
 10275  002D98  6E3C               	movwf	??_Joystick_Polling& (0+255),c
 10276  002D9A  463C               	rlncf	??_Joystick_Polling,f,c
 10277  002D9C  463C               	rlncf	??_Joystick_Polling,f,c
 10278  002D9E  50C2               	movf	4034,w,c	;volatile
 10279  002DA0  183C               	xorwf	??_Joystick_Polling,w,c
 10280  002DA2  0BFB               	andlw	-5
 10281  002DA4  183C               	xorwf	??_Joystick_Polling,w,c
 10282  002DA6  6EC2               	movwf	4034,c	;volatile
 10283  002DA8  2A15               	incf	_i,f,c	;volatile
 10284  002DAA  D7DE               	goto	l3989
 10285  002DAC                     __end_of_Joystick_Polling:
 10286                           	opt stack 0
 10287                           tblptru	equ	0xFF8
 10288                           tblptrh	equ	0xFF7
 10289                           tblptrl	equ	0xFF6
 10290                           tablat	equ	0xFF5
 10291                           prodh	equ	0xFF4
 10292                           prodl	equ	0xFF3
 10293                           intcon	equ	0xFF2
 10294                           postinc0	equ	0xFEE
 10295                           wreg	equ	0xFE8
 10296                           indf2	equ	0xFDF
 10297                           postinc2	equ	0xFDE
 10298                           fsr2h	equ	0xFDA
 10299                           fsr2l	equ	0xFD9
 10300                           status	equ	0xFD8
 10301                           
 10302 ;; *************** function _ISR_bassa *****************
 10303 ;; Defined at:
 10304 ;;		line 109 in file "telecomando.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;		None               void
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10318 ;;      Params:         0       0       0       0
 10319 ;;      Locals:         0       0       0       0
 10320 ;;      Temps:         17       0       0       0
 10321 ;;      Totals:        17       0       0       0
 10322 ;;Total ram usage:       17 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    3
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		Interrupt level 1
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	intcodelo
 10333  000018                     __pintcodelo:
 10334                           	opt stack 0
 10335  000018                     _ISR_bassa:
 10336                           	opt stack 20
 10337                           
 10338                           ;incstack = 0
 10339  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10340  00001A  CFD8 F024          	movff	status,??_ISR_bassa
 10341  00001E  CFE8 F025          	movff	wreg,??_ISR_bassa+1
 10342  000022  CFE0 F026          	movff	bsr,??_ISR_bassa+2
 10343  000026  CFFA F027          	movff	pclath,??_ISR_bassa+3
 10344  00002A  CFFB F028          	movff	pclatu,??_ISR_bassa+4
 10345  00002E  CFE9 F029          	movff	fsr0l,??_ISR_bassa+5
 10346  000032  CFEA F02A          	movff	fsr0h,??_ISR_bassa+6
 10347  000036  CFE1 F02B          	movff	fsr1l,??_ISR_bassa+7
 10348  00003A  CFE2 F02C          	movff	fsr1h,??_ISR_bassa+8
 10349  00003E  CFD9 F02D          	movff	fsr2l,??_ISR_bassa+9
 10350  000042  CFDA F02E          	movff	fsr2h,??_ISR_bassa+10
 10351  000046  CFF3 F02F          	movff	prodl,??_ISR_bassa+11
 10352  00004A  CFF4 F030          	movff	prodh,??_ISR_bassa+12
 10353  00004E  CFF6 F031          	movff	tblptrl,??_ISR_bassa+13
 10354  000052  CFF7 F032          	movff	tblptrh,??_ISR_bassa+14
 10355  000056  CFF8 F033          	movff	tblptru,??_ISR_bassa+15
 10356  00005A  CFF5 F034          	movff	tablat,??_ISR_bassa+16
 10357                           
 10358                           ;telecomando.c: 110: if (PIR2bits.TMR3IF) {
 10359  00005E  A2A1               	btfss	4001,1,c	;volatile
 10360  000060  D00B               	goto	i1l243
 10361                           
 10362                           ;telecomando.c: 111: time_counter++;
 10363  000062  0E01               	movlw	1
 10364  000064  2609               	addwf	_time_counter,f,c	;volatile
 10365  000066  0E00               	movlw	0
 10366  000068  220A               	addwfc	_time_counter+1,f,c	;volatile
 10367  00006A  220B               	addwfc	_time_counter+2,f,c	;volatile
 10368  00006C  220C               	addwfc	_time_counter+3,f,c	;volatile
 10369                           
 10370                           ;telecomando.c: 112: TMR3H = 0x63;
 10371  00006E  0E63               	movlw	99
 10372  000070  6EB3               	movwf	4019,c	;volatile
 10373                           
 10374                           ;telecomando.c: 113: TMR3L = 0xC0;
 10375  000072  0EC0               	movlw	192
 10376  000074  6EB2               	movwf	4018,c	;volatile
 10377                           
 10378                           ;telecomando.c: 114: PIR2bits.TMR3IF = 0;
 10379  000076  92A1               	bcf	4001,1,c	;volatile
 10380  000078                     i1l243:
 10381  000078  C034  FFF5         	movff	??_ISR_bassa+16,tablat
 10382  00007C  C033  FFF8         	movff	??_ISR_bassa+15,tblptru
 10383  000080  C032  FFF7         	movff	??_ISR_bassa+14,tblptrh
 10384  000084  C031  FFF6         	movff	??_ISR_bassa+13,tblptrl
 10385  000088  C030  FFF4         	movff	??_ISR_bassa+12,prodh
 10386  00008C  C02F  FFF3         	movff	??_ISR_bassa+11,prodl
 10387  000090  C02E  FFDA         	movff	??_ISR_bassa+10,fsr2h
 10388  000094  C02D  FFD9         	movff	??_ISR_bassa+9,fsr2l
 10389  000098  C02C  FFE2         	movff	??_ISR_bassa+8,fsr1h
 10390  00009C  C02B  FFE1         	movff	??_ISR_bassa+7,fsr1l
 10391  0000A0  C02A  FFEA         	movff	??_ISR_bassa+6,fsr0h
 10392  0000A4  C029  FFE9         	movff	??_ISR_bassa+5,fsr0l
 10393  0000A8  C028  FFFB         	movff	??_ISR_bassa+4,pclatu
 10394  0000AC  C027  FFFA         	movff	??_ISR_bassa+3,pclath
 10395  0000B0  C026  FFE0         	movff	??_ISR_bassa+2,bsr
 10396  0000B4  C025  FFE8         	movff	??_ISR_bassa+1,wreg
 10397  0000B8  C024  FFD8         	movff	??_ISR_bassa,status
 10398  0000BC  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10399  0000BE  0010               	retfie	
 10400  0000C0                     __end_of_ISR_bassa:
 10401                           	opt stack 0
 10402                           pclatu	equ	0xFFB
 10403                           pclath	equ	0xFFA
 10404                           tblptru	equ	0xFF8
 10405                           tblptrh	equ	0xFF7
 10406                           tblptrl	equ	0xFF6
 10407                           tablat	equ	0xFF5
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           intcon	equ	0xFF2
 10411                           postinc0	equ	0xFEE
 10412                           fsr0h	equ	0xFEA
 10413                           fsr0l	equ	0xFE9
 10414                           wreg	equ	0xFE8
 10415                           fsr1h	equ	0xFE2
 10416                           fsr1l	equ	0xFE1
 10417                           bsr	equ	0xFE0
 10418                           indf2	equ	0xFDF
 10419                           postinc2	equ	0xFDE
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           
 10424 ;; *************** function _ISR_alta *****************
 10425 ;; Defined at:
 10426 ;;		line 94 in file "telecomando.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;		None               void
 10433 ;; Registers used:
 10434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10440 ;;      Params:         0       0       0       0
 10441 ;;      Locals:         1       0       0       0
 10442 ;;      Temps:          0      16       0       0
 10443 ;;      Totals:         1      16       0       0
 10444 ;;Total ram usage:       17 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    2
 10447 ;; This function calls:
 10448 ;;		_getsUSART
 10449 ;; This function is called by:
 10450 ;;		Interrupt level 2
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	intcode
 10455  000008                     __pintcode:
 10456                           	opt stack 0
 10457  000008                     _ISR_alta:
 10458                           	opt stack 20
 10459                           
 10460                           ;incstack = 0
 10461  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10462  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 10463  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 10464  000012  EDE4  F013         	call	int_func,f	;refresh shadow registers
 10465                           pclatu	equ	0xFFB
 10466                           pclath	equ	0xFFA
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodh	equ	0xFF4
 10472                           prodl	equ	0xFF3
 10473                           intcon	equ	0xFF2
 10474                           postinc0	equ	0xFEE
 10475                           fsr0h	equ	0xFEA
 10476                           fsr0l	equ	0xFE9
 10477                           wreg	equ	0xFE8
 10478                           fsr1h	equ	0xFE2
 10479                           fsr1l	equ	0xFE1
 10480                           bsr	equ	0xFE0
 10481                           indf2	equ	0xFDF
 10482                           postinc2	equ	0xFDE
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487                           	psect	intcode_body
 10488  0027C8                     __pintcode_body:
 10489                           	opt stack 20
 10490  0027C8                     int_func:
 10491                           	opt stack 20
 10492  0027C8  0006               	pop		; remove dummy address from shadow register refresh
 10493  0027CA  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 10494  0027CE  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 10495  0027D2  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 10496  0027D6  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 10497  0027DA  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 10498  0027DE  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 10499  0027E2  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 10500  0027E6  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 10501  0027EA  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 10502  0027EE  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 10503  0027F2  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 10504  0027F6  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 10505                           
 10506                           ;telecomando.c: 95: if (PIR1bits.RCIF == 1) {
 10507  0027FA  AA9E               	btfss	3998,5,c	;volatile
 10508  0027FC  D036               	goto	i2l239
 10509                           
 10510                           ;telecomando.c: 96: getsUSART((char*) USART_Rx, 7);
 10511  0027FE  0EE2               	movlw	low _USART_Rx
 10512  002800  6E36               	movwf	getsUSART@buffer,c
 10513  002802  0E00               	movlw	high _USART_Rx
 10514  002804  6E37               	movwf	getsUSART@buffer+1,c
 10515  002806  0E07               	movlw	7
 10516  002808  6E38               	movwf	getsUSART@len,c
 10517  00280A  ECBA  F017         	call	_getsUSART	;wreg free
 10518                           
 10519                           ;telecomando.c: 97: if ((USART_Rx[0] == 0xAA) && (USART_Rx[6] == 0xAA)) {
 10520  00280E  0EAA               	movlw	170
 10521  002810  0100               	movlb	0	; () banked
 10522  002812  19E2               	xorwf	_USART_Rx& (0+255),w,b
 10523  002814  A4D8               	btfss	status,2,c
 10524  002816  D028               	goto	i2l5533
 10525                           
 10526                           ; BSR set to: 0
 10527  002818  0EAA               	movlw	170
 10528  00281A  0100               	movlb	0	; () banked
 10529  00281C  19E8               	xorwf	(_USART_Rx+6)& (0+255),w,b
 10530  00281E  A4D8               	btfss	status,2,c
 10531  002820  D023               	goto	i2l5533
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;telecomando.c: 98: actual_dir = USART_Rx[1];
 10535  002822  0100               	movlb	0	; () banked
 10536  002824  A1E3               	btfss	(_USART_Rx+1)& (0+255),0,b
 10537  002826  D002               	goto	i2u637_40
 10538  002828  8043               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10539  00282A  D001               	goto	i2u638_45
 10540  00282C                     i2u637_40:
 10541  00282C  9043               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 10542  00282E                     i2u638_45:
 10543                           
 10544                           ;telecomando.c: 99: actual_speed_pk1 = USART_Rx[2];
 10545  00282E  C0E4  F013         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 10546                           
 10547                           ;telecomando.c: 100: actual_speed_pk0 = USART_Rx[3];
 10548  002832  C0E5  F012         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 10549                           
 10550                           ;telecomando.c: 101: ECU_Check = USART_Rx[4];
 10551  002836  C0E6  F010         	movff	_USART_Rx+4,_ECU_Check	;volatile
 10552                           
 10553                           ;telecomando.c: 102: Battery_Check = USART_Rx[5];
 10554  00283A  C0E7  F00F         	movff	_USART_Rx+5,_Battery_Check	;volatile
 10555                           
 10556                           ;telecomando.c: 103: actual_speed = (actual_speed_pk1 << 8) || (actual_speed_pk0);
 10557  00283E  0E01               	movlw	1
 10558  002840  6E3B               	movwf	_ISR_alta$1283,c
 10559  002842  5013               	movf	_actual_speed_pk1,w,c	;volatile
 10560  002844  0100               	movlb	0	; () banked
 10561  002846  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 10562  002848  6B60               	clrf	??_ISR_alta& (0+255),b
 10563  00284A  0100               	movlb	0	; () banked
 10564  00284C  5160               	movf	??_ISR_alta& (0+255),w,b
 10565  00284E  0100               	movlb	0	; () banked
 10566  002850  1161               	iorwf	(??_ISR_alta+1)& (0+255),w,b
 10567  002852  A4D8               	btfss	status,2,c
 10568  002854  D005               	goto	i2l5531
 10569                           
 10570                           ; BSR set to: 0
 10571  002856  5012               	movf	_actual_speed_pk0,w,c	;volatile
 10572  002858  A4D8               	btfss	status,2,c
 10573  00285A  D002               	goto	i2l5531
 10574                           
 10575                           ; BSR set to: 0
 10576  00285C  0E00               	movlw	0
 10577  00285E  6E3B               	movwf	_ISR_alta$1283,c
 10578  002860                     i2l5531:
 10579                           
 10580                           ; BSR set to: 0
 10581  002860  C03B  F0E0         	movff	_ISR_alta$1283,_actual_speed	;volatile
 10582  002864  0100               	movlb	0	; () banked
 10583  002866  6BE1               	clrf	(_actual_speed+1)& (0+255),b	;volatile
 10584  002868                     i2l5533:
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;telecomando.c: 104: }
 10588                           ;telecomando.c: 105: PIR1bits.RCIF = 0;
 10589  002868  9A9E               	bcf	3998,5,c	;volatile
 10590  00286A                     i2l239:
 10591  00286A  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 10592  00286E  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 10593  002872  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 10594  002876  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 10595  00287A  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 10596  00287E  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 10597  002882  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 10598  002886  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 10599  00288A  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 10600  00288E  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 10601  002892  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 10602  002896  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 10603  00289A  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 10604  00289E  C062  FFFA         	movff	??_ISR_alta+2,pclath
 10605  0028A2  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10606  0028A4  0011               	retfie		f
 10607  0028A6                     __end_of_ISR_alta:
 10608                           	opt stack 0
 10609                           pclatu	equ	0xFFB
 10610                           pclath	equ	0xFFA
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           intcon	equ	0xFF2
 10618                           postinc0	equ	0xFEE
 10619                           fsr0h	equ	0xFEA
 10620                           fsr0l	equ	0xFE9
 10621                           wreg	equ	0xFE8
 10622                           fsr1h	equ	0xFE2
 10623                           fsr1l	equ	0xFE1
 10624                           bsr	equ	0xFE0
 10625                           indf2	equ	0xFDF
 10626                           postinc2	equ	0xFDE
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function _getsUSART *****************
 10632 ;; Defined at:
 10633 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 10636 ;;		 -> USART_Rx(7), 
 10637 ;;  len             1   20[COMRAM] unsigned char 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  i               1   22[COMRAM] unsigned char 
 10640 ;;  data            1   21[COMRAM] unsigned char 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;		None               void
 10643 ;; Registers used:
 10644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10650 ;;      Params:         3       0       0       0
 10651 ;;      Locals:         2       0       0       0
 10652 ;;      Temps:          0       0       0       0
 10653 ;;      Totals:         5       0       0       0
 10654 ;;Total ram usage:        5 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    1
 10657 ;; This function calls:
 10658 ;;		_ReadUSART
 10659 ;; This function is called by:
 10660 ;;		_ISR_alta
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text42
 10665  002F74                     __ptext42:
 10666                           	opt stack 0
 10667  002F74                     _getsUSART:
 10668                           	opt stack 20
 10669                           
 10670                           ;incstack = 0
 10671  002F74  0E00               	movlw	0
 10672  002F76  6E3A               	movwf	getsUSART@i,c
 10673  002F78  D00E               	goto	i2l3889
 10674  002F7A                     i2l391:
 10675  002F7A  AA9E               	btfss	3998,5,c	;volatile
 10676  002F7C  D7FE               	goto	i2l391
 10677  002F7E  EC29  F018         	call	_ReadUSART	;wreg free
 10678  002F82  6E39               	movwf	getsUSART@data,c
 10679  002F84  C036  FFD9         	movff	getsUSART@buffer,fsr2l
 10680  002F88  C037  FFDA         	movff	getsUSART@buffer+1,fsr2h
 10681  002F8C  C039  FFDF         	movff	getsUSART@data,indf2
 10682  002F90  4A36               	infsnz	getsUSART@buffer,f,c
 10683  002F92  2A37               	incf	getsUSART@buffer+1,f,c
 10684  002F94  2A3A               	incf	getsUSART@i,f,c
 10685  002F96                     i2l3889:
 10686  002F96  5038               	movf	getsUSART@len,w,c
 10687  002F98  5C3A               	subwf	getsUSART@i,w,c
 10688  002F9A  B0D8               	btfsc	status,0,c
 10689  002F9C  0012               	return	
 10690  002F9E  D7ED               	goto	i2l391
 10691  002FA0                     __end_of_getsUSART:
 10692                           	opt stack 0
 10693                           pclatu	equ	0xFFB
 10694                           pclath	equ	0xFFA
 10695                           tblptru	equ	0xFF8
 10696                           tblptrh	equ	0xFF7
 10697                           tblptrl	equ	0xFF6
 10698                           tablat	equ	0xFF5
 10699                           prodh	equ	0xFF4
 10700                           prodl	equ	0xFF3
 10701                           intcon	equ	0xFF2
 10702                           postinc0	equ	0xFEE
 10703                           fsr0h	equ	0xFEA
 10704                           fsr0l	equ	0xFE9
 10705                           wreg	equ	0xFE8
 10706                           fsr1h	equ	0xFE2
 10707                           fsr1l	equ	0xFE1
 10708                           bsr	equ	0xFE0
 10709                           indf2	equ	0xFDF
 10710                           postinc2	equ	0xFDE
 10711                           fsr2h	equ	0xFDA
 10712                           fsr2l	equ	0xFD9
 10713                           status	equ	0xFD8
 10714                           
 10715 ;; *************** function _ReadUSART *****************
 10716 ;; Defined at:
 10717 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  data            1   17[COMRAM] unsigned char 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      unsigned char 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10731 ;;      Params:         0       0       0       0
 10732 ;;      Locals:         1       0       0       0
 10733 ;;      Temps:          0       0       0       0
 10734 ;;      Totals:         1       0       0       0
 10735 ;;Total ram usage:        1 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_getsUSART
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text43
 10745  003052                     __ptext43:
 10746                           	opt stack 0
 10747  003052                     _ReadUSART:
 10748                           	opt stack 20
 10749                           
 10750                           ;incstack = 0
 10751  003052  0EF2               	movlw	242
 10752  003054  1611               	andwf	_USART_Status,f,c
 10753  003056  ACAB               	btfss	4011,6,c	;volatile
 10754  003058  D003               	goto	i2l449
 10755  00305A  9011               	bcf	_USART_Status,0,c
 10756  00305C  B0AB               	btfsc	4011,0,c	;volatile
 10757  00305E  8011               	bsf	_USART_Status,0,c
 10758  003060                     i2l449:
 10759  003060  B4AB               	btfsc	4011,2,c	;volatile
 10760  003062  8411               	bsf	_USART_Status,2,c
 10761  003064  B2AB               	btfsc	4011,1,c	;volatile
 10762  003066  8611               	bsf	_USART_Status,3,c
 10763  003068  CFAE F035          	movff	4014,ReadUSART@data	;volatile
 10764  00306C  5035               	movf	ReadUSART@data,w,c
 10765  00306E  0012               	return	
 10766  003070                     __end_of_ReadUSART:
 10767                           	opt stack 0
 10768                           pclatu	equ	0xFFB
 10769                           pclath	equ	0xFFA
 10770                           tblptru	equ	0xFF8
 10771                           tblptrh	equ	0xFF7
 10772                           tblptrl	equ	0xFF6
 10773                           tablat	equ	0xFF5
 10774                           prodh	equ	0xFF4
 10775                           prodl	equ	0xFF3
 10776                           intcon	equ	0xFF2
 10777                           postinc0	equ	0xFEE
 10778                           fsr0h	equ	0xFEA
 10779                           fsr0l	equ	0xFE9
 10780                           wreg	equ	0xFE8
 10781                           fsr1h	equ	0xFE2
 10782                           fsr1l	equ	0xFE1
 10783                           bsr	equ	0xFE0
 10784                           indf2	equ	0xFDF
 10785                           postinc2	equ	0xFDE
 10786                           fsr2h	equ	0xFDA
 10787                           fsr2l	equ	0xFD9
 10788                           status	equ	0xFD8
 10789                           pclatu	equ	0xFFB
 10790                           pclath	equ	0xFFA
 10791                           tblptru	equ	0xFF8
 10792                           tblptrh	equ	0xFF7
 10793                           tblptrl	equ	0xFF6
 10794                           tablat	equ	0xFF5
 10795                           prodh	equ	0xFF4
 10796                           prodl	equ	0xFF3
 10797                           intcon	equ	0xFF2
 10798                           postinc0	equ	0xFEE
 10799                           fsr0h	equ	0xFEA
 10800                           fsr0l	equ	0xFE9
 10801                           wreg	equ	0xFE8
 10802                           fsr1h	equ	0xFE2
 10803                           fsr1l	equ	0xFE1
 10804                           bsr	equ	0xFE0
 10805                           indf2	equ	0xFDF
 10806                           postinc2	equ	0xFDE
 10807                           fsr2h	equ	0xFDA
 10808                           fsr2l	equ	0xFD9
 10809                           status	equ	0xFD8
 10810                           
 10811                           	psect	rparam
 10812  0000                     pclatu	equ	0xFFB
 10813                           pclath	equ	0xFFA
 10814                           tblptru	equ	0xFF8
 10815                           tblptrh	equ	0xFF7
 10816                           tblptrl	equ	0xFF6
 10817                           tablat	equ	0xFF5
 10818                           prodh	equ	0xFF4
 10819                           prodl	equ	0xFF3
 10820                           intcon	equ	0xFF2
 10821                           postinc0	equ	0xFEE
 10822                           fsr0h	equ	0xFEA
 10823                           fsr0l	equ	0xFE9
 10824                           wreg	equ	0xFE8
 10825                           fsr1h	equ	0xFE2
 10826                           fsr1l	equ	0xFE1
 10827                           bsr	equ	0xFE0
 10828                           indf2	equ	0xFDF
 10829                           postinc2	equ	0xFDE
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8
 10833                           
 10834                           	psect	temp
 10835  000047                     btemp:
 10836                           	opt stack 0
 10837  000047                     	ds	1
 10838  0000                     int$flags	set	btemp
 10839                           pclatu	equ	0xFFB
 10840                           pclath	equ	0xFFA
 10841                           tblptru	equ	0xFF8
 10842                           tblptrh	equ	0xFF7
 10843                           tblptrl	equ	0xFF6
 10844                           tablat	equ	0xFF5
 10845                           prodh	equ	0xFF4
 10846                           prodl	equ	0xFF3
 10847                           intcon	equ	0xFF2
 10848                           postinc0	equ	0xFEE
 10849                           fsr0h	equ	0xFEA
 10850                           fsr0l	equ	0xFE9
 10851                           wreg	equ	0xFE8
 10852                           fsr1h	equ	0xFE2
 10853                           fsr1l	equ	0xFE1
 10854                           bsr	equ	0xFE0
 10855                           indf2	equ	0xFDF
 10856                           postinc2	equ	0xFDE
 10857                           fsr2h	equ	0xFDA
 10858                           fsr2l	equ	0xFD9
 10859                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         77
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      70
    BANK0           160    114     144
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Tx(BANK0[7]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(BANK0[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _USART_Send->_putsUSART
    _putsUSART->_WriteUSART
    _LCD_Handler->___lwdiv
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _delay_ms->___wmul

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  174742
                                            106 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   59271
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1409
                                             18 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28104
                                             23 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8996
                                             21 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           0     0      0     130
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     130
                                             25 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   79612
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   40623
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             24 COMRAM     3     3      0
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             24 COMRAM     6     6      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             24 COMRAM     1     1      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             24 COMRAM     5     5      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             64 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             68 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             24 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             24 COMRAM     4     4      0
                                             16 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     498
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9596
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10366
                                             26 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9377
                                             21 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8888
                                             21 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8857
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8857
                                             30 COMRAM     1     1      0
                                             18 BANK0      3     0      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1341
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1341
                                             16 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            17    17      0     280
                                             23 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (10) _getsUSART                                           5     2      3     243
                                             18 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (11) _ReadUSART                                           1     1      0      23
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _USART_Send
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     72      90       4       90.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       9        0.0%
DATA                 0      0      FB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 17 16:55:00 2016

                             _i 0015       __size_of_delay_set_quartz 0008                    ?_LCD_Handler 0024  
                            l95 2EB4                    ___awdiv@sign 0075              delay_s@repeat_loop 0073  
                            bsr 000FE0             ___wmul@multiplicand 003E                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000  
                           l271 2D70                             l423 2CA0                             l247 1754  
                           l424 2CA2                             l256 1884                             l273 2D72  
                           l425 2CAC                             l257 1896                             l249 1742  
                           l426 2CAE                             l419 2C8C                             l436 2FA0  
                           l367 0690                             l920 2D12                             l674 234C  
                           l771 1FBC                             l684 246A                             l772 2000  
                           l961 0B00                             l962 0AF4                             l778 2080  
                           l963 0AC0                             l867 2ABE                             l877 2BE8  
                           l978 0C74                             l987 0D08                    getsUSART@len 0038  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 0075  
                           _dir 0219                             _str 0119                    ___awmod@sign 0041  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 008B  
                  ___flmul@bexp 0090                    ___flmul@sign 008A                    ___flmul@temp 0095  
                  ___flmul@prod 0091                    __CFG_LVP$OFF 000000          __size_of_LCD_goto_line 00EC  
                  ___fltol@exp1 00A9                    __CFG_WDT$OFF 000000                            l1054 1118  
                          l1047 0E7C                            l1064 122A                            l1056 1186  
                          l1083 1E84                            l1084 1E9C                            l1076 1E28  
                          l1069 1D7C                            l3331 307C                            l4301 0998  
                          l5013 2BD8                            l5005 2B80                            l5007 2B8E  
                          l5031 1DBC                            l5023 1D8C                            l4401 0B84  
                          l4313 09D0                            l5009 2B94                            l5041 1E66  
                          l5033 1DCC                            l5201 029C                            l4411 0C54  
                          l4307 09AC                            l5043 1E76                            l5035 1E0A  
                          l4261 2EA8                            l4325 0A04                            l4317 09DA  
                          l5029 1DB4                            l5213 0352                            l5061 2F28  
                          l5071 2714                            l5055 1EEE                            l4511 0E6A  
                          l4503 0E40                            l5215 0368                            l5073 2746  
                          l5081 2F4A                            l4425 0CBC                            l4601 124A  
                          l5225 040C                            l5217 03A4                            l5209 0320  
                          l5153 0120                            l5145 00EE                            l3801 2C8E  
                          l5065 2F3A                            l5075 2778                            l4419 0CA6  
                          l4435 0CDC                            l4355 0A40                            l4283 093E  
                          l4603 1254                            l4515 0E90                            l5331 08C2  
                          l5323 086A                            l5315 0836                            l5307 080E  
                          l5243 0520                            l5219 03BA                            l5163 0182  
                          l5139 00D4                            l5069 26E2                            l5077 27AA  
                          l5085 2F60                            l5093 2FDC                            l4445 0D02  
                          l4429 0CC8                            l4437 0CE2                            l4373 0AE4  
                          l4293 096C                            l4509 0E64                            l5309 081C  
                          l5261 0598                            l5245 0526                            l5229 043E  
                          l5317 0844                            l5157 015C                            l4463 0D92  
                          l4455 0D5E                            l4391 0B62                            l4383 0B24  
                          l4367 0AD4                            l4631 2902                            l4623 28D8  
                          l4519 0EA4                            l5335 08EE                            l5327 0892  
                          l5263 05A0                            l5271 0636                            l5239 04A8  
                          l5175 01C8                            l5167 0188                            l5159 0172  
                          l5089 2FC8                            l4393 0B68                            l4369 0ADA  
                          l4289 0962                            l4641 2938                            l4633 2908  
                          l4617 28C2                            l4561 1102                            l4721 1C00  
                          l5281 0672                            l5273 0644                            l5257 056C  
                          l5185 021A                            l5169 01AE                            l5337 08F4  
                          l4475 0DB6                            l4467 0D9E                            l4459 0D70  
                          l4491 0E0A                            l5339 0912                            l5451 253E  
                          l5611 198E                            l5603 1970                            l4469 0DA2  
                          l4397 0B72                            l4629 28F6                            l4645 2946  
                          l4661 2C0E                            l4493 0E10                            l4485 0DE6  
                          l5293 06C4                            l5285 0694                            l5453 2550  
                          l3855 2CE0                            l4671 2C30                            l4591 11FC  
                          l4567 112C                            l4495 0E22                            l4743 13DC  
                          l5279 065E                            l5455 2560                            l5607 1984  
                          l3857 2CE8                            l4913 23DA                            l4825 2036  
                          l4649 295A                            l4673 2C34                            l4681 2C52  
                          l4665 2C1A                            l4593 1210                            l4577 1180  
                          l4729 1CE0                            l4761 1622                            l4753 14C2  
                          l5297 0726                            l3793 2C80                            l5617 1A02  
                          l3867 2D08                            l3859 2CEC                            l4923 24B6  
                          l4931 2F0A                            l4851 2244                            l4835 2066  
                          l4587 11D6                            l5547 173A                            l4917 2422  
                          l4909 239C                            l4941 25F6                            l4845 2222  
                          l4837 2076                            l4829 204A                            l4685 2C60  
                          l4677 2C48                            l4669 2C28                            l4749 1496  
                          l5581 1876                            l4767 16DC                            l5591 1890  
                          l5559 1770                            l4961 2678                            l4873 22DE  
                          l4865 228E                            l5577 1862                            l4971 26AE  
                          l4795 1F68                            l4779 304A                            l5579 1870  
                          l3989 2D68                            l4957 2664                            l4885 2310  
                          l4789 1F34                            l4975 26CA                            l4967 2694  
                          l4895 233A                            l4969 26A4                            l4985 2A4A  
                          l4897 2346                            l4889 2320                            l4987 2A58  
                          l4997 2AAE                            l4989 2A5E                   getsUSART@data 0039  
                          STR_1 3FBA                            STR_2 3F90                            STR_3 3F7B  
                          STR_4 3FBA                            STR_5 3FA5                            STR_6 3FCF  
                          STR_7 3FF9                            STR_8 3FEF                            STR_9 3FFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u5110 10A4  
                          _PIE1 000F9D                            u5115 1098                            u4180 2D94  
                          u3615 308C                            u3616 308E                            u4186 2D96  
                          u6130 0688                            u4605 2DFE                            u4606 2E00  
                          u5190 11EA                            u4615 2E0A                            u5431 1F12  
                          u4616 2E0C                            u4625 2E16                            u4626 2E18  
                          u4730 0A8A                            u4635 2E20                            u5451 1F46  
                          u4636 2E22                            u4740 0AA2                            u4750 0AA4  
                          u6440 1750                            u5660 2616                            u6550 1A66  
                          u6470 1830                            u6455 1752                            u6480 1848  
                          u5665 260A                            u6486 184A                            u6567 2EAA  
                          _main 1708       __size_of_LCD_send_command 0036                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0047                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00C0                   __CFG_IESO$OFF 000000  
            __size_of_LCD_clear 0032                    _sprintf$2474 0100                  delay_s@value_s 0072  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 3034  
                 _LCD_backlight 3082         __size_of_LCD_initialize 016E                   ___fltol@sign1 00A8  
               __end_of___fladd 0DC8                           ?_main 0024                 __end_of___awdiv 2964  
               __end_of___flneg 2F1C                           STR_10 3FDB                           STR_11 3FF4  
                         STR_12 3FBA                           STR_13 3FE7                 __end_of___awmod 2C6A  
               __end_of___flmul 126E                 __end_of___flsub 2D64                 __end_of___fltol 26DC  
               __end_of___lldiv 2AD0                 ___awdiv@divisor 0072                 __end_of___llmod 2BFA  
                         _T3CON 000FB1                 __end_of___lwdiv 2D1C                           i1l243 0078  
                         i2l239 286A                           i2l391 2F7A                           i2l449 3060  
               ___awdiv@counter 0074                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR3H 000FB3                           _TMR3L 000FB2                           _SPBRG 000FAF  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TXREG 000FAD  
                         _TXSTA 000FAC                   __CFG_PWRT$OFF 000000                 __end_of_delay_s 2F48  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000              __size_of_ISR_bassa 00A8  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
              __end_of_ISR_alta 28A6                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                 __end_of_dpowers 3F7B  
                         _scale 126E                 __end_of_isdigit 3052                  __pbitbssCOMRAM 0218  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 0920  
                __CFG_PBADEN$ON 000000                     ?_USART_Send 0024             __size_of_LCD_cursor 0032  
                WriteUSART@data 003C                 __initialization 2DAC                  ?_LCD_backlight 0024  
                  __end_of_main 1A7C   __size_of_board_initialization 00BC                   _LCD_goto_line 26DC  
             ?_Joystick_Polling 0024              ??_Joystick_Polling 003C               ?_LCD_write_string 007A  
                        ??_main 00CA                   __activetblptr 000002                  _JoystickValues 0022  
            ??_LCD_write_string 0043            __size_of__tdiv_to_l_ 0192               __end_of_LCD_clear 2E8C  
        LCD_write_string@buffer 007A                          _ADCON1 000FC1                ___llmod@dividend 0070  
                        ?_scale 0097                          _ADRESH 000FC4                ___awdiv@dividend 0070  
               __CFG_BBSIZ$1024 000000                 getsUSART@buffer 0036                          i2l5531 2860  
                        i2l5533 2868                          i2l3889 2F96              __size_of_ReadUSART 001E  
                        _SPBRGH 000FB0                __end_of___xxtofl 1F00                 _switch_position 0019  
              __end_of_delay_ms 2EBE                  __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0  
              __end_of__powers_ 3F53              __size_of_OpenUSART 0060                  ?_LCD_goto_line 0024  
                        ___flge 235E                       ??___fladd 00AC                _delay_set_quartz 3090  
                        ___wmul 2FEC                       ??___awdiv 0042                       ??___flneg 0040  
                __CFG_STVREN$ON 000000                       ??___awmod 0040                       ??___flmul 0086  
                     ??___flsub 0043                       ??___fltol 00A4                       ??___lldiv 003C  
                     ??___llmod 003C                       ??___lwdiv 0040         __size_of_LCD_write_char 0096  
                        _fround 1A7C  LCD_initialize@quartz_frequency 0077                          clear_0 2DB2  
                        clear_1 2DBE                          clear_2 2DCC                ___awdiv@quotient 0076  
               ___awmod@divisor 003E                       ??_delay_s 0042            __size_of_LCD_Handler 0116  
               ___awmod@counter 0040                 __CFG_BOREN$BOHW 000000               _JoystickConstants 001A  
                  __pdataCOMRAM 0046                       ??_isdigit 003C                    __mediumconst 3EEA  
                        tblptrh 000FF7                  _analogic_brake 0014                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0030                       ??_sprintf 00C8  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                      __accesstop 0060  
       __end_of__initialization 2DE4                      ___flneg@f1 003C                _LCD_send_command 2DF2  
                 ___rparam_used 000001                      ___fltol@f1 00A0                 ??_LCD_backlight 003C  
                    _WriteUSART 3070                  __pcstackCOMRAM 0024                       ?_ISR_alta 0024  
                 __end_of_scale 1708                  _LCD_initialize 2092               _LCD_write_message 2F48  
             __end_of_ReadUSART 3070              ?_LCD_write_message 007A                      __div_to_l_ 2200  
                  ??_LCD_cursor 0043                    _actual_speed 00E0              __size_of_getsUSART 002C  
                 ReadUSART@data 0035               __end_of_OpenUSART 2CCA                 __div_to_l_@exp1 0041  
           ??_LCD_write_message 0043                 __div_to_l_@cntr 0040                         ??_scale 0043  
               __div_to_l_@quot 003C                      __pbssBANK0 00D2                      __pbssBANK1 0119  
                    __pnvCOMRAM 0044                      _actual_dir 0218                   __div_to_l_@f1 0070  
                 __div_to_l_@f2 0074                 ??_LCD_goto_line 0043              __end_of_LCD_cursor 2E5A  
        __end_of_LCD_initialize 2200                         ?___flge 0070                         ?___wmul 003C  
                    ??_ISR_alta 0060       __end_of_LCD_write_message 2F74               ?_LCD_enable_pulse 0024  
                 putsUSART@data 003D                         ?_fround 0097              ??_LCD_enable_pulse 0042  
                     ?___xxtofl 0070                LCD_cursor@active 0076                       ?_delay_ms 0070  
            __size_of_putsUSART 0026                    ??_USART_Send 003F               __end_of__npowers_ 3F1F  
                       __Hparam 0000                      _scale$2473 009B                         __Lparam 0000  
              delay_ms@value_ms 0070               __end_of_getsUSART 2FA0                     ?_WriteUSART 0024  
               ?_LCD_initialize 0024                 __size_of___flge 015C                         ___fladd 0920  
                       ___awdiv 28A6                         ___flneg 2EEE                         ___awmod 2BFA  
                       ___flmul 0DC8                         ___flsub 2D1C                         ___fltol 25D0  
                       ___lldiv 2A20                 __size_of___wmul 0026                  _LCD_write_char 2AD0  
                       ___llmod 2B66                         ___lwdiv 2CCA                         __pcinit 2DAC  
               __size_of_fround 02B6                         _delay_s 2F1C                         __ramtop 0300  
           LCD_write_char@value 0079                         __ptext0 1708                         __ptext1 2964  
                       __ptext2 2F1C                         __ptext3 2C6A                         __ptext4 2092  
                       __ptext5 3090                         __ptext6 2E28                         __ptext7 3082  
                       __ptext8 2EBE                         __ptext9 2FA0                       _ECU_Check 0010  
                   ?__div_to_l_ 0070                LCD_write_char@D0 0078                LCD_write_char@D1 0077  
              LCD_write_char@D2 0076                LCD_write_char@D3 0075                         _dpowers 3F53  
                       _isdigit 3034                      ??___xxtofl 0074                ___awmod@dividend 003C  
                    ??_delay_ms 0042    __end_of_board_initialization 2A20       __size_of_Joystick_Polling 0048  
            __end_of_USART_Send 2EEE        __end_of_delay_set_quartz 3098                         _sprintf 00C4  
                __pintcode_body 27C8                       _LCD_clear 2E5A            end_of_initialization 2DE4  
     __size_of_LCD_write_string 0026                   __Lmediumconst 3EEA                         int_func 27C8  
                 _Battery_Check 000F             LCD_backlight@active 003C                 ___lldiv@divisor 0074  
            LCD_cursor@blinking 0075                 ___lldiv@counter 0040          __end_of_LCD_write_char 2B66  
                     _RCSTAbits 000FAB                         postinc0 000FEE                         postinc2 000FDE  
             __end_of_putsUSART 2FC6      __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0070  
                __tdiv_to_l_@f2 0074                       _ISR_bassa 0018                   ??__tdiv_to_l_ 003C  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _PORTDbits 000F83                       _PORTEbits 000F84        __end_of_LCD_send_command 2E28  
                   ___fladd@grs 00B7                   ___xxtofl@sign 0078                       _TRISCbits 000F94  
                    getsUSART@i 003A             __size_of_WriteUSART 0012                      ?_LCD_clear 0024  
       _clock_counter_reference 0044                     ___flmul@grs 008C                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 015E         LCD_write_integer@F17027 00D2                 ?_LCD_write_char 0024  
                 ??_LCD_Handler 0043                  __end_of___flge 24BA                      ?_ISR_bassa 0024  
                __end_of___wmul 3012                   __pidataCOMRAM 3098               __size_of_ISR_alta 289E  
                __end_of_fround 1D32             start_initialization 2DAC                       _ReadUSART 3052  
           __end_of__tdiv_to_l_ 2092                       _OpenUSART 2C6A                 ___llmod@divisor 0074  
               ___llmod@counter 003C           __end_of_LCD_backlight 3090                        ??___flge 003C  
          _board_initialization 2964                        ??___wmul 0040                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0043                   sprintf@tmpval 010E                       ___fladd@a 00A8  
                     ___fladd@b 00A4                      fround@prec 00A3             __end_of_LCD_Handler 25D0  
                     ___flmul@a 0082                       ___flmul@b 007E                     __pbssCOMRAM 0001  
                     ___flsub@a 00BC                       ___flsub@b 00B8                      ?_ReadUSART 0024  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                _Joystick_Polling 2D64  
             __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022                    _isdigit$2080 003D  
             __size_of_delay_ms 0032                     ??_LCD_clear 0043         LCD_write_message@buffer 007A  
                 _ISR_alta$1283 003B                _LCD_write_string 2FC6                      ?_OpenUSART 003C  
                   sprintf@flag 0106                     sprintf@fval 0114                     sprintf@prec 0112  
              ??_LCD_initialize 0043       delay_set_quartz@frequency 003C                ___lwdiv@dividend 003C  
            LCD_send_command@D0 0074              LCD_send_command@D1 0073              LCD_send_command@D2 0072  
            LCD_send_command@D3 0042                    ??_WriteUSART 003C           __end_of_LCD_goto_line 27C8  
         ?_board_initialization 0024                       __pintcode 0008                   __pmediumconst 3EEA  
                      ?___fladd 00A4                        ?___awdiv 0070                        ?___flneg 003C  
                      ?___awmod 003C                        ?___flmul 007E                        ?___flsub 00B8  
                      ?___fltol 00A0                        ?___lldiv 0070                        ?___llmod 0070  
                     __npowers_ 3EEB                        ?___lwdiv 003C                     ??_ISR_bassa 0024  
                     _getsUSART 2F74                     __pintcodelo 0018                        ?_delay_s 0024  
                   __tdiv_to_l_ 1F00                    ??__div_to_l_ 003C                        ?_isdigit 0024  
              ___lwdiv@quotient 0040                        ?_sprintf 00C0                  __size_of_scale 049A  
            __end_of_WriteUSART 3082               ?_delay_set_quartz 0024              ??_delay_set_quartz 003C  
                ___wmul@product 0040                        _IPR1bits 000F9F                        _IPR2bits 000FA2  
  _delay_quartz_frequency_value 0046                        _PIE1bits 000F9D                        _PIE2bits 000FA0  
                      _PIR1bits 000F9E              __end_of__div_to_l_ 235E                        _PIR2bits 000FA1  
                      i2u637_40 282C                        i2u638_45 282E                       _pr_time_1 0001  
                     _pr_time_2 0005                       _pr_time_3 00DC                       _set_speed 000D  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000                        _ISR_alta 0008  
                   _LCD_Handler 24BA                      ?_getsUSART 0036                        _USART_Rx 00E2  
                      _USART_Tx 00E9                      _ADCON0bits 000FC2                       _putsUSART 2FA0  
                    _ADCON2bits 000FC0               ___wmul@multiplier 003C               ?_LCD_send_command 0072  
              _actual_speed_pk0 0012                _actual_speed_pk1 0013                _actual_speed_kmh 00D8  
                   ??_ReadUSART 0035              ??_LCD_send_command 0042                   _set_speed_pk0 0016  
                 _set_speed_pk1 0017                     ??_OpenUSART 003E                ??_LCD_write_char 0043  
               OpenUSART@config 003E               LCD_goto_line@line 0075                        __Hrparam 0000  
        ??_board_initialization 0043                        __Lrparam 0000                __size_of___fladd 04A8  
              __size_of___awdiv 00BE                __size_of___flneg 002E                __size_of___awmod 0070  
              __size_of___flmul 04A6                __size_of___flsub 0048                __size_of___fltol 010C  
              __size_of___lldiv 00B0                __size_of___llmod 0094                __size_of___lwdiv 0052  
                   _fround$2471 009F                     _fround$2472 009B                      ?_putsUSART 003D  
              __size_of_delay_s 002C                      sprintf@exp 010C                      sprintf@val 0108  
                      ___xxtofl 1D32                __size_of_isdigit 001E                        _delay_ms 2E8C  
               ___lwdiv@divisor 003E                 ___lwdiv@counter 0042                _LCD_enable_pulse 3012  
                      __ptext10 3070                        __ptext11 24BA                        __ptext20 2200  
                      __ptext12 00C4                        __ptext21 1D32                        __ptext13 126E  
                      __ptext30 2FC6                        __ptext22 2B66                        __ptext14 3034  
                      __ptext31 2F48                        __ptext23 2A20                        __ptext15 1A7C  
                      __ptext32 2AD0                        __ptext24 25D0                        __ptext16 0DC8  
                      __ptext33 26DC                        __ptext25 2D1C                        __ptext17 2BFA  
                      __ptext42 2F74                        __ptext34 2E5A                        __ptext26 0920  
                      __ptext18 28A6                        __ptext43 3052                        __ptext35 2DF2  
                      __ptext27 2EEE                        __ptext19 1F00                        __ptext36 3012  
                      __ptext28 235E                        __ptext37 2E8C                        __ptext29 2CCA  
                      __ptext38 2FEC                        __ptext39 2D64                        __powers_ 3F1F  
              __size_of_sprintf 085C                   __size_of_main 0374                        _wait_low 021B  
      __end_of_Joystick_Polling 2DAC                        int$flags 0047                     ??_getsUSART 0039  
      __end_of_LCD_write_string 2FEC                      _LCD_cursor 2E28                      _INTCONbits 000FF2  
                  _set_steering 0018                  OpenUSART@spbrg 003C                        isdigit@c 003E  
                      scale@scl 009F                    _time_counter 0009                        intlevel1 0000  
                      intlevel2 0000                       sprintf@ap 0104                __tdiv_to_l_@exp1 007D  
                     sprintf@sp 00C0                __tdiv_to_l_@cntr 007C                __tdiv_to_l_@quot 0078  
              ___lldiv@dividend 0070                    ?__tdiv_to_l_ 0070                     ??_putsUSART 003F  
                      sprintf@c 0118                        sprintf@f 00C2                ___lldiv@quotient 003C  
        __size_of_LCD_backlight 000E                   ___fladd@signs 00B4                    ___fladd@aexp 00B5  
                  ___fladd@bexp 00B6                    _USART_Status 0011                      _USART_Send 2EBE  
                  _power_switch 021A  
