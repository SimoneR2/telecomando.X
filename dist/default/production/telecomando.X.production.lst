

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 21:29:05 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0034BA                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  0034BA  10                 	db	16
    73                           
    74                           	psect	mediumconst
    75  003EEA                     __pmediumconst:
    76                           	opt stack 0
    77  003EEA  00                 	db	0
    78  003EEB                     __npowers_:
    79                           	opt stack 0
    80  003EEB  0000               	dw	0
    81  003EED  3F80               	dw	16256
    82  003EEF  CCCD               	dw	52429
    83  003EF1  3DCC               	dw	15820
    84  003EF3  D70A               	dw	55050
    85  003EF5  3C23               	dw	15395
    86  003EF7  126F               	dw	4719
    87  003EF9  3A83               	dw	14979
    88  003EFB  B717               	dw	46871
    89  003EFD  38D1               	dw	14545
    90  003EFF  C5AC               	dw	50604
    91  003F01  3727               	dw	14119
    92  003F03  37BD               	dw	14269
    93  003F05  3586               	dw	13702
    94  003F07  BF95               	dw	49045
    95  003F09  33D6               	dw	13270
    96  003F0B  CC77               	dw	52343
    97  003F0D  322B               	dw	12843
    98  003F0F  705F               	dw	28767
    99  003F11  3089               	dw	12425
   100  003F13  E6FF               	dw	59135
   101  003F15  2EDB               	dw	11995
   102  003F17  E508               	dw	58632
   103  003F19  1E3C               	dw	7740
   104  003F1B  4260               	dw	16992
   105  003F1D  0DA2               	dw	3490
   106  003F1F                     __end_of__npowers_:
   107                           	opt stack 0
   108  003F1F                     __powers_:
   109                           	opt stack 0
   110  003F1F  0000               	dw	0
   111  003F21  3F80               	dw	16256
   112  003F23  0000               	dw	0
   113  003F25  4120               	dw	16672
   114  003F27  0000               	dw	0
   115  003F29  42C8               	dw	17096
   116  003F2B  0000               	dw	0
   117  003F2D  447A               	dw	17530
   118  003F2F  4000               	dw	16384
   119  003F31  461C               	dw	17948
   120  003F33  5000               	dw	20480
   121  003F35  47C3               	dw	18371
   122  003F37  2400               	dw	9216
   123  003F39  4974               	dw	18804
   124  003F3B  9680               	dw	38528
   125  003F3D  4B18               	dw	19224
   126  003F3F  BC20               	dw	48160
   127  003F41  4CBE               	dw	19646
   128  003F43  6B28               	dw	27432
   129  003F45  4E6E               	dw	20078
   130  003F47  02F9               	dw	761
   131  003F49  5015               	dw	20501
   132  003F4B  78EC               	dw	30956
   133  003F4D  60AD               	dw	24749
   134  003F4F  F2CA               	dw	62154
   135  003F51  7149               	dw	29001
   136  003F53                     __end_of__powers_:
   137                           	opt stack 0
   138  003F53                     _dpowers:
   139                           	opt stack 0
   140  003F53  0001               	dw	1
   141  003F55  0000               	dw	0
   142  003F57  000A               	dw	10
   143  003F59  0000               	dw	0
   144  003F5B  0064               	dw	100
   145  003F5D  0000               	dw	0
   146  003F5F  03E8               	dw	1000
   147  003F61  0000               	dw	0
   148  003F63  2710               	dw	10000
   149  003F65  0000               	dw	0
   150  003F67  86A0               	dw	34464
   151  003F69  0001               	dw	1
   152  003F6B  4240               	dw	16960
   153  003F6D  000F               	dw	15
   154  003F6F  9680               	dw	38528
   155  003F71  0098               	dw	152
   156  003F73  E100               	dw	57600
   157  003F75  05F5               	dw	1525
   158  003F77  CA00               	dw	51712
   159  003F79  3B9A               	dw	15258
   160  003F7B                     __end_of_dpowers:
   161                           	opt stack 0
   162  003F7B                     STR_3:
   163  003F7B  54                 	db	84	;'T'
   164  003F7C  75                 	db	117	;'u'
   165  003F7D  72                 	db	114	;'r'
   166  003F7E  6E                 	db	110	;'n'
   167  003F7F  20                 	db	32
   168  003F80  74                 	db	116	;'t'
   169  003F81  68                 	db	104	;'h'
   170  003F82  65                 	db	101	;'e'
   171  003F83  20                 	db	32
   172  003F84  73                 	db	115	;'s'
   173  003F85  77                 	db	119	;'w'
   174  003F86  69                 	db	105	;'i'
   175  003F87  74                 	db	116	;'t'
   176  003F88  63                 	db	99	;'c'
   177  003F89  68                 	db	104	;'h'
   178  003F8A  20                 	db	32
   179  003F8B  4F                 	db	79	;'O'
   180  003F8C  4E                 	db	78	;'N'
   181  003F8D  21                 	db	33
   182  003F8E  20                 	db	32
   183  003F8F  00                 	db	0
   184  003F90                     STR_2:
   185  003F90  3D                 	db	61	;'='
   186  003F91  3D                 	db	61	;'='
   187  003F92  3E                 	db	62	;'>'
   188  003F93  20                 	db	32
   189  003F94  56                 	db	86	;'V'
   190  003F95  45                 	db	69	;'E'
   191  003F96  48                 	db	72	;'H'
   192  003F97  49                 	db	73	;'I'
   193  003F98  43                 	db	67	;'C'
   194  003F99  4C                 	db	76	;'L'
   195  003F9A  45                 	db	69	;'E'
   196  003F9B  20                 	db	32
   197  003F9C  20                 	db	32
   198  003F9D  4F                 	db	79	;'O'
   199  003F9E  46                 	db	70	;'F'
   200  003F9F  46                 	db	70	;'F'
   201  003FA0  20                 	db	32
   202  003FA1  3C                 	db	60	;'<'
   203  003FA2  3D                 	db	61	;'='
   204  003FA3  3D                 	db	61	;'='
   205  003FA4  00                 	db	0
   206  003FA5                     STR_5:
   207  003FA5  3D                 	db	61	;'='
   208  003FA6  3D                 	db	61	;'='
   209  003FA7  3D                 	db	61	;'='
   210  003FA8  20                 	db	32
   211  003FA9  56                 	db	86	;'V'
   212  003FAA  45                 	db	69	;'E'
   213  003FAB  48                 	db	72	;'H'
   214  003FAC  49                 	db	73	;'I'
   215  003FAD  43                 	db	67	;'C'
   216  003FAE  4C                 	db	76	;'L'
   217  003FAF  45                 	db	69	;'E'
   218  003FB0  20                 	db	32
   219  003FB1  44                 	db	68	;'D'
   220  003FB2  41                 	db	65	;'A'
   221  003FB3  54                 	db	84	;'T'
   222  003FB4  41                 	db	65	;'A'
   223  003FB5  20                 	db	32
   224  003FB6  3D                 	db	61	;'='
   225  003FB7  3D                 	db	61	;'='
   226  003FB8  3D                 	db	61	;'='
   227  003FB9  00                 	db	0
   228  003FBA                     STR_1:
   229  003FBA  3D                 	db	61	;'='
   230  003FBB  3D                 	db	61	;'='
   231  003FBC  3D                 	db	61	;'='
   232  003FBD  3D                 	db	61	;'='
   233  003FBE  3D                 	db	61	;'='
   234  003FBF  3D                 	db	61	;'='
   235  003FC0  3D                 	db	61	;'='
   236  003FC1  3D                 	db	61	;'='
   237  003FC2  3D                 	db	61	;'='
   238  003FC3  3D                 	db	61	;'='
   239  003FC4  3D                 	db	61	;'='
   240  003FC5  3D                 	db	61	;'='
   241  003FC6  3D                 	db	61	;'='
   242  003FC7  3D                 	db	61	;'='
   243  003FC8  3D                 	db	61	;'='
   244  003FC9  3D                 	db	61	;'='
   245  003FCA  3D                 	db	61	;'='
   246  003FCB  3D                 	db	61	;'='
   247  003FCC  3D                 	db	61	;'='
   248  003FCD  3D                 	db	61	;'='
   249  003FCE  00                 	db	0
   250  003FCF                     STR_6:
   251  003FCF  44                 	db	68	;'D'
   252  003FD0  69                 	db	105	;'i'
   253  003FD1  72                 	db	114	;'r'
   254  003FD2  65                 	db	101	;'e'
   255  003FD3  63                 	db	99	;'c'
   256  003FD4  74                 	db	116	;'t'
   257  003FD5  69                 	db	105	;'i'
   258  003FD6  6F                 	db	111	;'o'
   259  003FD7  6E                 	db	110	;'n'
   260  003FD8  3A                 	db	58	;':'
   261  003FD9  20                 	db	32
   262  003FDA  00                 	db	0
   263  003FDB                     STR_10:
   264  003FDB  53                 	db	83	;'S'
   265  003FDC  70                 	db	112	;'p'
   266  003FDD  65                 	db	101	;'e'
   267  003FDE  65                 	db	101	;'e'
   268  003FDF  64                 	db	100	;'d'
   269  003FE0  3A                 	db	58	;':'
   270  003FE1  20                 	db	32
   271  003FE2  25                 	db	37
   272  003FE3  2E                 	db	46
   273  003FE4  33                 	db	51	;'3'
   274  003FE5  66                 	db	102	;'f'
   275  003FE6  00                 	db	0
   276  003FE7                     STR_13:
   277  003FE7  57                 	db	87	;'W'
   278  003FE8  61                 	db	97	;'a'
   279  003FE9  69                 	db	105	;'i'
   280  003FEA  74                 	db	116	;'t'
   281  003FEB  2E                 	db	46
   282  003FEC  2E                 	db	46
   283  003FED  2E                 	db	46
   284  003FEE  00                 	db	0
   285  003FEF                     STR_8:
   286  003FEF  42                 	db	66	;'B'
   287  003FF0  4B                 	db	75	;'K'
   288  003FF1  57                 	db	87	;'W'
   289  003FF2  44                 	db	68	;'D'
   290  003FF3  00                 	db	0
   291  003FF4                     STR_11:
   292  003FF4  4B                 	db	75	;'K'
   293  003FF5  6D                 	db	109	;'m'
   294  003FF6  2F                 	db	47
   295  003FF7  68                 	db	104	;'h'
   296  003FF8  00                 	db	0
   297  003FF9                     STR_7:
   298  003FF9  46                 	db	70	;'F'
   299  003FFA  57                 	db	87	;'W'
   300  003FFB  44                 	db	68	;'D'
   301  003FFC  00                 	db	0
   302  003FFD                     STR_9:
   303  003FFD  50                 	db	80	;'P'
   304  003FFE  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  003FFF  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	nvBANK0
   310  0000F5                     __pnvBANK0:
   311                           	opt stack 0
   312  0000F5                     _clock_counter_reference:
   313                           	opt stack 0
   314  0000F5                     	ds	2
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2bits	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _INTCONbits	set	4082
   320  0000                     _IPR1bits	set	3999
   321  0000                     _IPR2bits	set	4002
   322  0000                     _LATA	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _LATD	set	3980
   327  0000                     _LATDbits	set	3980
   328  0000                     _LATE	set	3981
   329  0000                     _LATEbits	set	3981
   330  0000                     _PIE1	set	3997
   331  0000                     _PIE1bits	set	3997
   332  0000                     _PIE2bits	set	4000
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PIR2bits	set	4001
   335  0000                     _PORTAbits	set	3968
   336  0000                     _PORTBbits	set	3969
   337  0000                     _PORTDbits	set	3971
   338  0000                     _RCONbits	set	4048
   339  0000                     _RCREG	set	4014
   340  0000                     _RCSTA	set	4011
   341  0000                     _RCSTAbits	set	4011
   342  0000                     _SPBRG	set	4015
   343  0000                     _SPBRGH	set	4016
   344  0000                     _T3CON	set	4017
   345  0000                     _TMR3H	set	4019
   346  0000                     _TMR3L	set	4018
   347  0000                     _TRISA	set	3986
   348  0000                     _TRISB	set	3987
   349  0000                     _TRISC	set	3988
   350  0000                     _TRISCbits	set	3988
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISE	set	3990
   353  0000                     _TXREG	set	4013
   354  0000                     _TXSTA	set	4012
   355  0000                     _TXSTAbits	set	4012
   356                           
   357                           	psect	cinit
   358  0031F0                     __pcinit:
   359                           	opt stack 0
   360  0031F0                     start_initialization:
   361                           	opt stack 0
   362  0031F0                     __initialization:
   363                           	opt stack 0
   364                           
   365                           ; Clear objects allocated to BANK1 (12 bytes)
   366  0031F0  EE01  F019         	lfsr	0,__pbssBANK1
   367  0031F4  0E0C               	movlw	12
   368  0031F6                     clear_0:
   369  0031F6  6AEE               	clrf	postinc0,c
   370  0031F8  06E8               	decf	wreg,f,c
   371  0031FA  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (44 bytes)
   374  0031FC  EE00  F0C9         	lfsr	0,__pbssBANK0
   375  003200  0E2C               	movlw	44
   376  003202                     clear_1:
   377  003202  6AEE               	clrf	postinc0,c
   378  003204  06E8               	decf	wreg,f,c
   379  003206  E1FD               	bnz	clear_1
   380                           
   381                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   382  003208  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   383                           
   384                           ; Clear objects allocated to COMRAM (33 bytes)
   385  00320A  EE00  F023         	lfsr	0,__pbssCOMRAM
   386  00320E  0E21               	movlw	33
   387  003210                     clear_2:
   388  003210  6AEE               	clrf	postinc0,c
   389  003212  06E8               	decf	wreg,f,c
   390  003214  E1FD               	bnz	clear_2
   391                           
   392                           ; Initialize objects allocated to COMRAM (1 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  003216  0EBA               	movlw	low __pidataCOMRAM
   395  003218  6EF6               	movwf	tblptrl,c
   396  00321A  0E34               	movlw	high __pidataCOMRAM
   397  00321C  6EF7               	movwf	tblptrh,c
   398  00321E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  003220  6EF8               	movwf	tblptru,c
   400  003222  0009               	tblrd		*+	;fetch initializer
   401  003224  CFF5 F045          	movff	tablat,__pdataCOMRAM
   402  003228                     end_of_initialization:
   403                           	opt stack 0
   404  003228                     __end_of__initialization:
   405                           	opt stack 0
   406  003228  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   407  00322A  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   408  00322C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   409  00322E  6EF8               	movwf	tblptru,c
   410  003230  0100               	movlb	0
   411  003232  EFA6  F00B         	goto	_main	;jump to C main() function
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419                           	psect	bitbssCOMRAM
   420  000220                     __pbitbssCOMRAM:
   421                           	opt stack 0
   422  000220                     _actual_dir:
   423                           	opt stack 0
   424  000220                     	ds	1
   425  000221                     _power_switch:
   426                           	opt stack 0
   427  000221                     	ds	1
   428  000222                     _wait_low:
   429                           	opt stack 0
   430  000222                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	bssCOMRAM
   439  000023                     __pbssCOMRAM:
   440                           	opt stack 0
   441  000023                     _JoystickConstants:
   442                           	opt stack 0
   443  000023                     	ds	8
   444  00002B                     _pr_time_1:
   445                           	opt stack 0
   446  00002B                     	ds	4
   447  00002F                     _time_counter:
   448                           	opt stack 0
   449  00002F                     	ds	4
   450  000033                     _JoystickValues:
   451                           	opt stack 0
   452  000033                     	ds	2
   453  000035                     _set_speed:
   454                           	opt stack 0
   455  000035                     	ds	2
   456  000037                     _Battery_Check:
   457                           	opt stack 0
   458  000037                     	ds	1
   459  000038                     _ECU_Check:
   460                           	opt stack 0
   461  000038                     	ds	1
   462  000039                     _USART_Status:
   463                           	opt stack 0
   464  000039                     	ds	1
   465  00003A                     _actual_speed_pk0:
   466                           	opt stack 0
   467  00003A                     	ds	1
   468  00003B                     _actual_speed_pk1:
   469                           	opt stack 0
   470  00003B                     	ds	1
   471  00003C                     _analogic_brake:
   472                           	opt stack 0
   473  00003C                     	ds	1
   474  00003D                     _dir:
   475                           	opt stack 0
   476  00003D                     	ds	1
   477  00003E                     _i:
   478                           	opt stack 0
   479  00003E                     	ds	1
   480  00003F                     _set_speed_pk0:
   481                           	opt stack 0
   482  00003F                     	ds	1
   483  000040                     _set_speed_pk1:
   484                           	opt stack 0
   485  000040                     	ds	1
   486  000041                     _set_steering:
   487                           	opt stack 0
   488  000041                     	ds	1
   489  000042                     _spam_counter:
   490                           	opt stack 0
   491  000042                     	ds	1
   492  000043                     _switch_position:
   493                           	opt stack 0
   494  000043                     	ds	1
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	dataCOMRAM
   503  000045                     __pdataCOMRAM:
   504                           	opt stack 0
   505  000045                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  000045                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515                           	psect	bssBANK0
   516  0000C9                     __pbssBANK0:
   517                           	opt stack 0
   518  0000C9                     _USART_Rx:
   519                           	opt stack 0
   520  0000C9                     	ds	8
   521  0000D1                     _USART_Tx_Old:
   522                           	opt stack 0
   523  0000D1                     	ds	8
   524  0000D9                     LCD_write_integer@F17027:
   525                           	opt stack 0
   526  0000D9                     	ds	6
   527  0000DF                     _actual_speed_kmh:
   528                           	opt stack 0
   529  0000DF                     	ds	4
   530  0000E3                     _pr_time_2:
   531                           	opt stack 0
   532  0000E3                     	ds	4
   533  0000E7                     _pr_time_3:
   534                           	opt stack 0
   535  0000E7                     	ds	4
   536  0000EB                     _actual_speed:
   537                           	opt stack 0
   538  0000EB                     	ds	2
   539  0000ED                     _USART_Tx:
   540                           	opt stack 0
   541  0000ED                     	ds	8
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           
   549                           	psect	bssBANK1
   550  000119                     __pbssBANK1:
   551                           	opt stack 0
   552  000119                     _str:
   553                           	opt stack 0
   554  000119                     	ds	12
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           
   562                           	psect	cstackBANK1
   563  000100                     __pcstackBANK1:
   564                           	opt stack 0
   565  000100                     _sprintf$2399:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x0
   569  000100                     	ds	4
   570  000104                     sprintf@ap:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  000104                     	ds	2
   575  000106                     sprintf@flag:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x6
   579  000106                     	ds	2
   580  000108                     sprintf@val:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x8
   584  000108                     	ds	4
   585  00010C                     sprintf@exp:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589  00010C                     	ds	2
   590  00010E                     sprintf@tmpval:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0xE
   594  00010E                     	ds	4
   595  000112                     sprintf@prec:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x12
   599  000112                     	ds	2
   600  000114                     sprintf@fval:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x14
   604  000114                     	ds	4
   605  000118                     sprintf@c:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x18
   609  000118                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           	psect	cstackBANK0
   618  000060                     __pcstackBANK0:
   619                           	opt stack 0
   620  000060                     ??_USART_RX:
   621  000060                     ??_Joystick_Polling:
   622  000060                     ??_isdigit:
   623  000060                     ?___wmul:
   624                           	opt stack 0
   625  000060                     ?___awmod:
   626                           	opt stack 0
   627  000060                     ?___lwdiv:
   628                           	opt stack 0
   629  000060                     ?__tdiv_to_l_:
   630                           	opt stack 0
   631  000060                     ?__div_to_l_:
   632                           	opt stack 0
   633  000060                     ?___flneg:
   634                           	opt stack 0
   635  000060                     ?___lldiv:
   636                           	opt stack 0
   637  000060                     ?___llmod:
   638                           	opt stack 0
   639  000060                     delay_set_quartz@frequency:
   640                           	opt stack 0
   641  000060                     LCD_backlight@active:
   642                           	opt stack 0
   643  000060                     WriteUSART@data:
   644                           	opt stack 0
   645  000060                     OpenUSART@spbrg:
   646                           	opt stack 0
   647  000060                     ___wmul@multiplier:
   648                           	opt stack 0
   649  000060                     ___awmod@dividend:
   650                           	opt stack 0
   651  000060                     ___lwdiv@dividend:
   652                           	opt stack 0
   653  000060                     __div_to_l_@f1:
   654                           	opt stack 0
   655  000060                     ___flge@ff1:
   656                           	opt stack 0
   657  000060                     ___flneg@f1:
   658                           	opt stack 0
   659  000060                     __tdiv_to_l_@f1:
   660                           	opt stack 0
   661  000060                     ___lldiv@dividend:
   662                           	opt stack 0
   663  000060                     ___llmod@dividend:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x0
   667  000060                     	ds	1
   668  000061                     _isdigit$2005:
   669                           	opt stack 0
   670  000061                     putsUSART@data:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x1
   674  000061                     	ds	1
   675  000062                     USART_RX@i:
   676                           	opt stack 0
   677  000062                     OpenUSART@config:
   678                           	opt stack 0
   679  000062                     isdigit@c:
   680                           	opt stack 0
   681  000062                     ___wmul@multiplicand:
   682                           	opt stack 0
   683  000062                     ___awmod@divisor:
   684                           	opt stack 0
   685  000062                     ___lwdiv@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x2
   689  000062                     	ds	1
   690  000063                     
   691                           ; 0 bytes @ 0x3
   692  000063                     	ds	1
   693  000064                     ___awmod@counter:
   694                           	opt stack 0
   695  000064                     ___lwdiv@counter:
   696                           	opt stack 0
   697  000064                     ___wmul@product:
   698                           	opt stack 0
   699  000064                     __div_to_l_@f2:
   700                           	opt stack 0
   701  000064                     ___flge@ff2:
   702                           	opt stack 0
   703  000064                     __tdiv_to_l_@f2:
   704                           	opt stack 0
   705  000064                     ___lldiv@divisor:
   706                           	opt stack 0
   707  000064                     ___llmod@divisor:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x4
   711  000064                     	ds	1
   712  000065                     ___awmod@sign:
   713                           	opt stack 0
   714  000065                     ___lwdiv@quotient:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x5
   718  000065                     	ds	1
   719  000066                     ?___awdiv:
   720                           	opt stack 0
   721  000066                     delay_ms@value_ms:
   722                           	opt stack 0
   723  000066                     ___awdiv@dividend:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x6
   727  000066                     	ds	1
   728  000067                     ?___xxtofl:
   729                           	opt stack 0
   730  000067                     ___xxtofl@val:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x7
   734  000067                     	ds	1
   735  000068                     ??_USART_Send:
   736  000068                     ??__tdiv_to_l_:
   737  000068                     ??___flge:
   738  000068                     delay_s@value_s:
   739                           	opt stack 0
   740  000068                     LCD_send_command@D2:
   741                           	opt stack 0
   742  000068                     ___llmod@counter:
   743                           	opt stack 0
   744  000068                     ___awdiv@divisor:
   745                           	opt stack 0
   746  000068                     __div_to_l_@quot:
   747                           	opt stack 0
   748  000068                     ___lldiv@quotient:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x8
   752  000068                     	ds	1
   753  000069                     delay_s@repeat_loop:
   754                           	opt stack 0
   755  000069                     LCD_send_command@D1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x9
   759  000069                     	ds	1
   760  00006A                     LCD_send_command@D0:
   761                           	opt stack 0
   762  00006A                     USART_Send@i:
   763                           	opt stack 0
   764  00006A                     ___awdiv@counter:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0xA
   768  00006A                     	ds	1
   769  00006B                     ??___xxtofl:
   770  00006B                     LCD_send_command@D3:
   771                           	opt stack 0
   772  00006B                     USART_Send@i_1320:
   773                           	opt stack 0
   774  00006B                     ___awdiv@sign:
   775                           	opt stack 0
   776  00006B                     __tdiv_to_l_@quot:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0xB
   780  00006B                     	ds	1
   781  00006C                     LCD_goto_line@line:
   782                           	opt stack 0
   783  00006C                     LCD_write_char@D3:
   784                           	opt stack 0
   785  00006C                     LCD_cursor@blinking:
   786                           	opt stack 0
   787  00006C                     USART_Send@i_1329:
   788                           	opt stack 0
   789  00006C                     __div_to_l_@cntr:
   790                           	opt stack 0
   791  00006C                     ___lldiv@counter:
   792                           	opt stack 0
   793  00006C                     ___awdiv@quotient:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0xC
   797  00006C                     	ds	1
   798  00006D                     LCD_write_char@D2:
   799                           	opt stack 0
   800  00006D                     LCD_cursor@active:
   801                           	opt stack 0
   802  00006D                     __div_to_l_@exp1:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806  00006D                     	ds	1
   807  00006E                     LCD_write_char@D1:
   808                           	opt stack 0
   809  00006E                     LCD_initialize@quartz_frequency:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0xE
   813  00006E                     	ds	1
   814  00006F                     LCD_write_char@D0:
   815                           	opt stack 0
   816  00006F                     __tdiv_to_l_@cntr:
   817                           	opt stack 0
   818  00006F                     ___xxtofl@sign:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0xF
   822  00006F                     	ds	1
   823  000070                     LCD_write_char@value:
   824                           	opt stack 0
   825  000070                     __tdiv_to_l_@exp1:
   826                           	opt stack 0
   827  000070                     ___xxtofl@exp:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x10
   831  000070                     	ds	1
   832  000071                     LCD_write_message@buffer:
   833                           	opt stack 0
   834  000071                     LCD_write_string@buffer:
   835                           	opt stack 0
   836  000071                     ___xxtofl@arg:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x11
   840  000071                     	ds	2
   841  000073                     
   842                           ; 0 bytes @ 0x13
   843  000073                     	ds	2
   844  000075                     ?___flmul:
   845                           	opt stack 0
   846  000075                     ___flmul@b:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x15
   850  000075                     	ds	4
   851  000079                     ___flmul@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x19
   855  000079                     	ds	4
   856  00007D                     ??___flmul:
   857                           
   858                           ; 0 bytes @ 0x1D
   859  00007D                     	ds	4
   860  000081                     ___flmul@sign:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x21
   864  000081                     	ds	1
   865  000082                     ___flmul@aexp:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x22
   869  000082                     	ds	1
   870  000083                     ___flmul@grs:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x23
   874  000083                     	ds	4
   875  000087                     ___flmul@bexp:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x27
   879  000087                     	ds	1
   880  000088                     ___flmul@prod:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x28
   884  000088                     	ds	4
   885  00008C                     ___flmul@temp:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x2C
   889  00008C                     	ds	2
   890  00008E                     ?_fround:
   891                           	opt stack 0
   892  00008E                     ?_scale:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x2E
   896  00008E                     	ds	4
   897  000092                     _fround$2397:
   898                           	opt stack 0
   899  000092                     _scale$2398:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x32
   903  000092                     	ds	4
   904  000096                     scale@scl:
   905                           	opt stack 0
   906  000096                     _fround$2396:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x36
   910  000096                     	ds	1
   911  000097                     ?___fltol:
   912                           	opt stack 0
   913  000097                     ___fltol@f1:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x37
   917  000097                     	ds	3
   918  00009A                     fround@prec:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x3A
   922  00009A                     	ds	1
   923  00009B                     ??___fltol:
   924  00009B                     ?___fladd:
   925                           	opt stack 0
   926  00009B                     ___fladd@b:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x3B
   930  00009B                     	ds	4
   931  00009F                     ___fltol@sign1:
   932                           	opt stack 0
   933  00009F                     ___fladd@a:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x3F
   937  00009F                     	ds	1
   938  0000A0                     ___fltol@exp1:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x40
   942  0000A0                     	ds	3
   943  0000A3                     ??___fladd:
   944                           
   945                           ; 0 bytes @ 0x43
   946  0000A3                     	ds	8
   947  0000AB                     ___fladd@signs:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x4B
   951  0000AB                     	ds	1
   952  0000AC                     ___fladd@aexp:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x4C
   956  0000AC                     	ds	1
   957  0000AD                     ___fladd@bexp:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x4D
   961  0000AD                     	ds	1
   962  0000AE                     ___fladd@grs:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x4E
   966  0000AE                     	ds	1
   967  0000AF                     ?___flsub:
   968                           	opt stack 0
   969  0000AF                     ___flsub@b:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x4F
   973  0000AF                     	ds	4
   974  0000B3                     ___flsub@a:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x53
   978  0000B3                     	ds	4
   979  0000B7                     ?_sprintf:
   980                           	opt stack 0
   981  0000B7                     sprintf@sp:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x57
   985  0000B7                     	ds	2
   986  0000B9                     sprintf@f:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x59
   990  0000B9                     	ds	6
   991  0000BF                     ??_sprintf:
   992                           
   993                           ; 0 bytes @ 0x5F
   994  0000BF                     	ds	2
   995  0000C1                     ??_main:
   996                           
   997                           ; 0 bytes @ 0x61
   998  0000C1                     	ds	8
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           
  1006                           	psect	cstackCOMRAM
  1007  000001                     __pcstackCOMRAM:
  1008                           	opt stack 0
  1009  000001                     ??_ISR_bassa:
  1010  000001                     
  1011                           ; 0 bytes @ 0x0
  1012  000001                     	ds	17
  1013  000012                     ??i2_USART_RX:
  1014                           
  1015                           ; 0 bytes @ 0x11
  1016  000012                     	ds	2
  1017  000014                     i2USART_RX@i:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x13
  1021  000014                     	ds	1
  1022  000015                     ??_ISR_alta:
  1023                           
  1024                           ; 0 bytes @ 0x14
  1025  000015                     	ds	14
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 117 in file "telecomando.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1052 ;;      Params:         0       0       0       0
  1053 ;;      Locals:         0       0       0       0
  1054 ;;      Temps:          0       8       0       0
  1055 ;;      Totals:         0       8       0       0
  1056 ;;Total ram usage:        8 bytes
  1057 ;; Hardware stack levels required when called:   10
  1058 ;; This function calls:
  1059 ;;		_Joystick_Polling
  1060 ;;		_LCD_Handler
  1061 ;;		_LCD_clear
  1062 ;;		_LCD_goto_line
  1063 ;;		_LCD_write_message
  1064 ;;		_PWR_Button_Polling
  1065 ;;		_USART_RX
  1066 ;;		_USART_Send
  1067 ;;		___flmul
  1068 ;;		___fltol
  1069 ;;		___xxtofl
  1070 ;;		_board_initialization
  1071 ;;		_delay_ms
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text0
  1078  00174C                     __ptext0:
  1079                           	opt stack 0
  1080  00174C                     _main:
  1081                           	opt stack 21
  1082                           
  1083                           ;telecomando.c: 118: board_initialization();
  1084                           
  1085                           ;incstack = 0
  1086  00174C  EC4A  F015         	call	_board_initialization	;wreg free
  1087                           
  1088                           ;telecomando.c: 120: PORTDbits.RD7 = 0;
  1089  001750  9E83               	bcf	3971,7,c	;volatile
  1090                           
  1091                           ;telecomando.c: 123: USART_Tx[0] = 0xAA;
  1092  001752  0EAA               	movlw	170
  1093  001754  0100               	movlb	0	; () banked
  1094  001756  6FED               	movwf	_USART_Tx& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;telecomando.c: 124: USART_Tx[1] = 0x01;
  1098  001758  0E01               	movlw	1
  1099  00175A  0100               	movlb	0	; () banked
  1100  00175C  6FEE               	movwf	(_USART_Tx+1)& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;telecomando.c: 125: USART_Tx[2] = 0x01;
  1104  00175E  0E01               	movlw	1
  1105  001760  0100               	movlb	0	; () banked
  1106  001762  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;telecomando.c: 126: USART_Tx[3] = 0x01;
  1110  001764  0E01               	movlw	1
  1111  001766  0100               	movlb	0	; () banked
  1112  001768  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;telecomando.c: 127: USART_Tx[4] = 0x01;
  1116  00176A  0E01               	movlw	1
  1117  00176C  0100               	movlb	0	; () banked
  1118  00176E  6FF1               	movwf	(_USART_Tx+4)& (0+255),b
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;telecomando.c: 128: USART_Tx[5] = 0x01;
  1122  001770  0E01               	movlw	1
  1123  001772  0100               	movlb	0	; () banked
  1124  001774  6FF2               	movwf	(_USART_Tx+5)& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;telecomando.c: 129: USART_Tx[6] = 0xAA;
  1128  001776  0EAA               	movlw	170
  1129  001778  0100               	movlb	0	; () banked
  1130  00177A  6FF3               	movwf	(_USART_Tx+6)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;telecomando.c: 130: USART_Tx[7] = '\0';
  1134  00177C  0E00               	movlw	0
  1135  00177E  0100               	movlb	0	; () banked
  1136  001780  6FF4               	movwf	(_USART_Tx+7)& (0+255),b
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;telecomando.c: 131: JoystickConstants[0] = 0.703;
  1140  001782  0ECF               	movlw	207
  1141  001784  6E23               	movwf	_JoystickConstants,c	;volatile
  1142  001786  0EF7               	movlw	247
  1143  001788  6E24               	movwf	_JoystickConstants+1,c	;volatile
  1144  00178A  0E33               	movlw	51
  1145  00178C  6E25               	movwf	_JoystickConstants+2,c	;volatile
  1146  00178E  0E3F               	movlw	63
  1147  001790  6E26               	movwf	_JoystickConstants+3,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;telecomando.c: 132: JoystickConstants[1] = 35;
  1151  001792  0E00               	movlw	0
  1152  001794  6E27               	movwf	_JoystickConstants+4,c	;volatile
  1153  001796  0E00               	movlw	0
  1154  001798  6E28               	movwf	_JoystickConstants+5,c	;volatile
  1155  00179A  0E0C               	movlw	12
  1156  00179C  6E29               	movwf	_JoystickConstants+6,c	;volatile
  1157  00179E  0E42               	movlw	66
  1158  0017A0  6E2A               	movwf	_JoystickConstants+7,c	;volatile
  1159  0017A2                     l6073:
  1160                           
  1161                           ;telecomando.c: 138: USART_RX();
  1162  0017A2  EC76  F016         	call	_USART_RX	;wreg free
  1163                           
  1164                           ;telecomando.c: 139: PWR_Button_Polling();
  1165  0017A6  EC37  F01A         	call	_PWR_Button_Polling	;wreg free
  1166                           
  1167                           ;telecomando.c: 141: if (power_switch == 0) {
  1168  0017AA  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1169  0017AC  D094               	goto	l6107
  1170                           
  1171                           ;telecomando.c: 142: dir = 2;
  1172  0017AE  0E02               	movlw	2
  1173  0017B0  6E3D               	movwf	_dir,c	;volatile
  1174                           
  1175                           ;telecomando.c: 143: set_speed = 0;
  1176  0017B2  0E00               	movlw	0
  1177  0017B4  6E36               	movwf	_set_speed+1,c	;volatile
  1178  0017B6  0E00               	movlw	0
  1179  0017B8  6E35               	movwf	_set_speed,c	;volatile
  1180                           
  1181                           ;telecomando.c: 144: set_steering = 90;
  1182  0017BA  0E5A               	movlw	90
  1183  0017BC  6E41               	movwf	_set_steering,c	;volatile
  1184                           
  1185                           ;telecomando.c: 145: analogic_brake = 0;
  1186  0017BE  0E00               	movlw	0
  1187  0017C0  6E3C               	movwf	_analogic_brake,c	;volatile
  1188  0017C2                     l254:
  1189  0017C2  A2AC               	btfss	4012,1,c	;volatile
  1190  0017C4  D7FE               	goto	l254
  1191                           
  1192                           ;telecomando.c: 147: };
  1193                           ;telecomando.c: 148: USART_Send();
  1194  0017C6  EC4E  F012         	call	_USART_Send	;wreg free
  1195                           
  1196                           ;telecomando.c: 149: while (power_switch == 0) {
  1197  0017CA  D082               	goto	l6105
  1198  0017CC                     l6083:
  1199                           
  1200                           ;telecomando.c: 150: LCD_clear();
  1201  0017CC  ECA5  F019         	call	_LCD_clear	;wreg free
  1202                           
  1203                           ;telecomando.c: 151: LCD_goto_line(1);
  1204  0017D0  0E01               	movlw	1
  1205  0017D2  ECD4  F014         	call	_LCD_goto_line
  1206                           
  1207                           ;telecomando.c: 152: LCD_write_message("====================");
  1208  0017D6  0EBA               	movlw	low STR_1
  1209  0017D8  0100               	movlb	0	; () banked
  1210  0017DA  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1211  0017DC  0E3F               	movlw	high STR_1
  1212  0017DE  0100               	movlb	0	; () banked
  1213  0017E0  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1214  0017E2  ECD4  F019         	call	_LCD_write_message	;wreg free
  1215                           
  1216                           ;telecomando.c: 153: LCD_goto_line(2);
  1217  0017E6  0E02               	movlw	2
  1218  0017E8  ECD4  F014         	call	_LCD_goto_line
  1219                           
  1220                           ;telecomando.c: 154: LCD_write_message("==> VEHICLE  OFF <==");
  1221  0017EC  0E90               	movlw	low STR_2
  1222  0017EE  0100               	movlb	0	; () banked
  1223  0017F0  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1224  0017F2  0E3F               	movlw	high STR_2
  1225  0017F4  0100               	movlb	0	; () banked
  1226  0017F6  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1227  0017F8  ECD4  F019         	call	_LCD_write_message	;wreg free
  1228                           
  1229                           ;telecomando.c: 155: LCD_goto_line(3);
  1230  0017FC  0E03               	movlw	3
  1231  0017FE  ECD4  F014         	call	_LCD_goto_line
  1232                           
  1233                           ;telecomando.c: 156: LCD_write_message("Turn the switch ON! ");
  1234  001802  0E7B               	movlw	low STR_3
  1235  001804  0100               	movlb	0	; () banked
  1236  001806  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1237  001808  0E3F               	movlw	high STR_3
  1238  00180A  0100               	movlb	0	; () banked
  1239  00180C  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1240  00180E  ECD4  F019         	call	_LCD_write_message	;wreg free
  1241                           
  1242                           ;telecomando.c: 157: LCD_goto_line(4);
  1243  001812  0E04               	movlw	4
  1244  001814  ECD4  F014         	call	_LCD_goto_line
  1245                           
  1246                           ;telecomando.c: 158: LCD_write_message("====================");
  1247  001818  0EBA               	movlw	low STR_1
  1248  00181A  0100               	movlb	0	; () banked
  1249  00181C  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1250  00181E  0E3F               	movlw	high STR_1
  1251  001820  0100               	movlb	0	; () banked
  1252  001822  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1253  001824  ECD4  F019         	call	_LCD_write_message	;wreg free
  1254                           
  1255                           ;telecomando.c: 159: if ((time_counter - pr_time_1) >= 50) {
  1256  001828  C02B  F0C1         	movff	_pr_time_1,??_main	;volatile
  1257  00182C  C02C  F0C2         	movff	_pr_time_1+1,??_main+1	;volatile
  1258  001830  C02D  F0C3         	movff	_pr_time_1+2,??_main+2	;volatile
  1259  001834  C02E  F0C4         	movff	_pr_time_1+3,??_main+3	;volatile
  1260  001838  0100               	movlb	0	; () banked
  1261  00183A  1FC1               	comf	??_main& (0+255),f,b
  1262  00183C  1FC2               	comf	(??_main+1)& (0+255),f,b
  1263  00183E  1FC3               	comf	(??_main+2)& (0+255),f,b
  1264  001840  1FC4               	comf	(??_main+3)& (0+255),f,b
  1265  001842  2BC1               	incf	??_main& (0+255),f,b
  1266  001844  0E00               	movlw	0
  1267  001846  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1268  001848  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1269  00184A  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1270  00184C  502F               	movf	_time_counter,w,c	;volatile
  1271  00184E  0100               	movlb	0	; () banked
  1272  001850  25C1               	addwf	??_main& (0+255),w,b
  1273  001852  0100               	movlb	0	; () banked
  1274  001854  6FC5               	movwf	(??_main+4)& (0+255),b
  1275  001856  5030               	movf	_time_counter+1,w,c	;volatile
  1276  001858  0100               	movlb	0	; () banked
  1277  00185A  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1278  00185C  0100               	movlb	0	; () banked
  1279  00185E  6FC6               	movwf	(??_main+5)& (0+255),b
  1280  001860  5031               	movf	_time_counter+2,w,c	;volatile
  1281  001862  0100               	movlb	0	; () banked
  1282  001864  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1283  001866  0100               	movlb	0	; () banked
  1284  001868  6FC7               	movwf	(??_main+6)& (0+255),b
  1285  00186A  5032               	movf	_time_counter+3,w,c	;volatile
  1286  00186C  0100               	movlb	0	; () banked
  1287  00186E  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1288  001870  0100               	movlb	0	; () banked
  1289  001872  6FC8               	movwf	(??_main+7)& (0+255),b
  1290  001874  0100               	movlb	0	; () banked
  1291  001876  51C8               	movf	(??_main+7)& (0+255),w,b
  1292  001878  0100               	movlb	0	; () banked
  1293  00187A  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1294  00187C  0100               	movlb	0	; () banked
  1295  00187E  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1296  001880  E105               	bnz	u7360
  1297  001882  0E32               	movlw	50
  1298  001884  0100               	movlb	0	; () banked
  1299  001886  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1300  001888  A0D8               	btfss	status,0,c
  1301  00188A  D019               	goto	l6101
  1302  00188C                     u7360:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;telecomando.c: 160: pr_time_1 = time_counter;
  1306  00188C  C02F  F02B         	movff	_time_counter,_pr_time_1	;volatile
  1307  001890  C030  F02C         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1308  001894  C031  F02D         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1309  001898  C032  F02E         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;telecomando.c: 161: PORTDbits.RD7 = ~PORTDbits.RD7;
  1313  00189C  AE83               	btfss	3971,7,c	;volatile
  1314  00189E  D002               	goto	u7370
  1315  0018A0  0E01               	movlw	1
  1316  0018A2  D001               	goto	u7376
  1317  0018A4                     u7370:
  1318  0018A4  0E00               	movlw	0
  1319  0018A6                     u7376:
  1320  0018A6  0AFF               	xorlw	255
  1321  0018A8  0100               	movlb	0	; () banked
  1322  0018AA  6FC1               	movwf	??_main& (0+255),b
  1323  0018AC  0100               	movlb	0	; () banked
  1324  0018AE  33C1               	rrcf	??_main& (0+255),f,b
  1325  0018B0  33C1               	rrcf	??_main& (0+255),f,b
  1326  0018B2  5083               	movf	3971,w,c	;volatile
  1327  0018B4  0100               	movlb	0	; () banked
  1328  0018B6  19C1               	xorwf	??_main& (0+255),w,b
  1329  0018B8  0B7F               	andlw	-129
  1330  0018BA  19C1               	xorwf	??_main& (0+255),w,b
  1331  0018BC  6E83               	movwf	3971,c	;volatile
  1332  0018BE                     l6101:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;telecomando.c: 162: }
  1336                           ;telecomando.c: 163: PWR_Button_Polling();
  1337  0018BE  EC37  F01A         	call	_PWR_Button_Polling	;wreg free
  1338                           
  1339                           ;telecomando.c: 164: delay_ms(300);
  1340  0018C2  0E01               	movlw	1
  1341  0018C4  0100               	movlb	0	; () banked
  1342  0018C6  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1343  0018C8  0E2C               	movlw	44
  1344  0018CA  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1345  0018CC  EC38  F019         	call	_delay_ms	;wreg free
  1346  0018D0                     l6105:
  1347  0018D0  A244               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1348  0018D2  D77C               	goto	l6083
  1349                           
  1350                           ;telecomando.c: 165: }
  1351                           ;telecomando.c: 166: PORTDbits.RD7 = 0;
  1352  0018D4  9E83               	bcf	3971,7,c	;volatile
  1353  0018D6                     l6107:
  1354                           
  1355                           ;telecomando.c: 167: }
  1356                           ;telecomando.c: 169: Joystick_Polling();
  1357  0018D6  ECAE  F018         	call	_Joystick_Polling	;wreg free
  1358                           
  1359                           ;telecomando.c: 172: if (PORTAbits.RA2 == 1) {
  1360  0018DA  A480               	btfss	3968,2,c	;volatile
  1361  0018DC  D003               	goto	l261
  1362                           
  1363                           ;telecomando.c: 173: switch_position = 0;
  1364  0018DE  0E00               	movlw	0
  1365  0018E0  6E43               	movwf	_switch_position,c	;volatile
  1366                           
  1367                           ;telecomando.c: 174: } else {
  1368  0018E2  D00A               	goto	l6117
  1369  0018E4                     l261:
  1370                           
  1371                           ;telecomando.c: 175: if (PORTAbits.RA3 == 0) {
  1372  0018E4  B680               	btfsc	3968,3,c	;volatile
  1373  0018E6  D004               	goto	l6115
  1374                           
  1375                           ;telecomando.c: 176: switch_position = 1;
  1376  0018E8  0E01               	movlw	1
  1377  0018EA  6E43               	movwf	_switch_position,c	;volatile
  1378                           
  1379                           ;telecomando.c: 177: dir = 2;
  1380  0018EC  0E02               	movlw	2
  1381  0018EE  D003               	goto	L1
  1382  0018F0                     l6115:
  1383                           
  1384                           ;telecomando.c: 179: switch_position = 2;
  1385  0018F0  0E02               	movlw	2
  1386  0018F2  6E43               	movwf	_switch_position,c	;volatile
  1387                           
  1388                           ;telecomando.c: 180: dir = 1;
  1389  0018F4  0E01               	movlw	1
  1390  0018F6                     L1:
  1391  0018F6  6E3D               	movwf	_dir,c	;volatile
  1392  0018F8                     l6117:
  1393                           
  1394                           ;telecomando.c: 181: }
  1395                           ;telecomando.c: 182: }
  1396                           ;telecomando.c: 184: set_steering = (JoystickValues[0])*(JoystickConstants[0]);
  1397  0018F8  C023  F079         	movff	_JoystickConstants,___flmul@a	;volatile
  1398  0018FC  C024  F07A         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  1399  001900  C025  F07B         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  1400  001904  C026  F07C         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  1401  001908  5033               	movf	_JoystickValues,w,c	;volatile
  1402  00190A  0100               	movlb	0	; () banked
  1403  00190C  6F67               	movwf	___xxtofl@val& (0+255),b
  1404  00190E  6B68               	clrf	(___xxtofl@val+1)& (0+255),b
  1405  001910  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1406  001912  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1407  001914  0E00               	movlw	0
  1408  001916  EC0C  F00F         	call	___xxtofl
  1409  00191A  C067  F075         	movff	?___xxtofl,___flmul@b
  1410  00191E  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1411  001922  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1412  001926  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1413  00192A  EC53  F009         	call	___flmul	;wreg free
  1414  00192E  C075  F097         	movff	?___flmul,___fltol@f1
  1415  001932  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1416  001936  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1417  00193A  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1418  00193E  EC4E  F014         	call	___fltol	;wreg free
  1419  001942  0100               	movlb	0	; () banked
  1420  001944  5197               	movf	?___fltol& (0+255),w,b
  1421  001946  6E41               	movwf	_set_steering,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;telecomando.c: 185: if (switch_position != 0) {
  1425  001948  5043               	movf	_switch_position,w,c	;volatile
  1426  00194A  B4D8               	btfsc	status,2,c
  1427  00194C  D083               	goto	l6131
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;telecomando.c: 186: if (JoystickValues[1] > 132) {
  1431  00194E  0E84               	movlw	132
  1432  001950  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  1433  001952  D041               	goto	l6127
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;telecomando.c: 187: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  1437  001954  C027  F079         	movff	_JoystickConstants+4,___flmul@a	;volatile
  1438  001958  C028  F07A         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  1439  00195C  C029  F07B         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  1440  001960  C02A  F07C         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  1441  001964  0E7E               	movlw	126
  1442  001966  0100               	movlb	0	; () banked
  1443  001968  6FC1               	movwf	??_main& (0+255),b
  1444  00196A  0EFF               	movlw	255
  1445  00196C  0100               	movlb	0	; () banked
  1446  00196E  6FC2               	movwf	(??_main+1)& (0+255),b
  1447  001970  5034               	movf	_JoystickValues+1,w,c	;volatile
  1448  001972  0100               	movlb	0	; () banked
  1449  001974  6FC3               	movwf	(??_main+2)& (0+255),b
  1450  001976  6BC4               	clrf	(??_main+3)& (0+255),b
  1451  001978  0100               	movlb	0	; () banked
  1452  00197A  51C1               	movf	??_main& (0+255),w,b
  1453  00197C  0100               	movlb	0	; () banked
  1454  00197E  27C3               	addwf	(??_main+2)& (0+255),f,b
  1455  001980  0100               	movlb	0	; () banked
  1456  001982  51C2               	movf	(??_main+1)& (0+255),w,b
  1457  001984  0100               	movlb	0	; () banked
  1458  001986  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1459  001988  C0C3  F067         	movff	??_main+2,___xxtofl@val
  1460  00198C  C0C4  F068         	movff	??_main+3,___xxtofl@val+1
  1461  001990  0100               	movlb	0	; () banked
  1462  001992  0E00               	movlw	0
  1463  001994  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1464  001996  0EFF               	movlw	-1
  1465  001998  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1466  00199A  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1467  00199C  0E01               	movlw	1
  1468  00199E  EC0C  F00F         	call	___xxtofl
  1469  0019A2  C067  F075         	movff	?___xxtofl,___flmul@b
  1470  0019A6  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1471  0019AA  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1472  0019AE  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1473  0019B2  EC53  F009         	call	___flmul	;wreg free
  1474  0019B6  C075  F097         	movff	?___flmul,___fltol@f1
  1475  0019BA  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1476  0019BE  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1477  0019C2  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1478  0019C6  EC4E  F014         	call	___fltol	;wreg free
  1479  0019CA  C097  F035         	movff	?___fltol,_set_speed	;volatile
  1480  0019CE  C098  F036         	movff	?___fltol+1,_set_speed+1	;volatile
  1481                           
  1482                           ;telecomando.c: 188: analogic_brake = 0;
  1483  0019D2  0E00               	movlw	0
  1484  0019D4  D03E               	goto	L2
  1485  0019D6                     l6127:
  1486                           
  1487                           ;telecomando.c: 190: set_speed = 0;
  1488  0019D6  0E00               	movlw	0
  1489  0019D8  6E36               	movwf	_set_speed+1,c	;volatile
  1490  0019DA  0E00               	movlw	0
  1491  0019DC  6E35               	movwf	_set_speed,c	;volatile
  1492                           
  1493                           ;telecomando.c: 191: analogic_brake = ((130 - JoystickValues[1]))*(1.9);
  1494  0019DE  0E33               	movlw	51
  1495  0019E0  0100               	movlb	0	; () banked
  1496  0019E2  6F79               	movwf	___flmul@a& (0+255),b
  1497  0019E4  0E33               	movlw	51
  1498  0019E6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  1499  0019E8  0EF3               	movlw	243
  1500  0019EA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  1501  0019EC  0E3F               	movlw	63
  1502  0019EE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  1503  0019F0  5034               	movf	_JoystickValues+1,w,c	;volatile
  1504  0019F2  0100               	movlb	0	; () banked
  1505  0019F4  6FC1               	movwf	??_main& (0+255),b
  1506  0019F6  6BC2               	clrf	(??_main+1)& (0+255),b
  1507  0019F8  0100               	movlb	0	; () banked
  1508  0019FA  1FC1               	comf	??_main& (0+255),f,b
  1509  0019FC  1FC2               	comf	(??_main+1)& (0+255),f,b
  1510  0019FE  4BC1               	infsnz	??_main& (0+255),f,b
  1511  001A00  2BC2               	incf	(??_main+1)& (0+255),f,b
  1512  001A02  0E82               	movlw	130
  1513  001A04  0100               	movlb	0	; () banked
  1514  001A06  27C1               	addwf	??_main& (0+255),f,b
  1515  001A08  0E00               	movlw	0
  1516  001A0A  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1517  001A0C  C0C1  F067         	movff	??_main,___xxtofl@val
  1518  001A10  C0C2  F068         	movff	??_main+1,___xxtofl@val+1
  1519  001A14  0100               	movlb	0	; () banked
  1520  001A16  0E00               	movlw	0
  1521  001A18  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1522  001A1A  0EFF               	movlw	-1
  1523  001A1C  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  1524  001A1E  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  1525  001A20  0E01               	movlw	1
  1526  001A22  EC0C  F00F         	call	___xxtofl
  1527  001A26  C067  F075         	movff	?___xxtofl,___flmul@b
  1528  001A2A  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1529  001A2E  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1530  001A32  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1531  001A36  EC53  F009         	call	___flmul	;wreg free
  1532  001A3A  C075  F097         	movff	?___flmul,___fltol@f1
  1533  001A3E  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  1534  001A42  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  1535  001A46  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  1536  001A4A  EC4E  F014         	call	___fltol	;wreg free
  1537  001A4E  0100               	movlb	0	; () banked
  1538  001A50  5197               	movf	?___fltol& (0+255),w,b
  1539  001A52                     L2:
  1540  001A52  6E3C               	movwf	_analogic_brake,c	;volatile
  1541  001A54                     l6131:
  1542                           
  1543                           ;telecomando.c: 192: }
  1544                           ;telecomando.c: 193: }
  1545                           ;telecomando.c: 195: if ((time_counter - pr_time_2) >= 2) {
  1546  001A54  C0E3  F0C1         	movff	_pr_time_2,??_main	;volatile
  1547  001A58  C0E4  F0C2         	movff	_pr_time_2+1,??_main+1	;volatile
  1548  001A5C  C0E5  F0C3         	movff	_pr_time_2+2,??_main+2	;volatile
  1549  001A60  C0E6  F0C4         	movff	_pr_time_2+3,??_main+3	;volatile
  1550  001A64  0100               	movlb	0	; () banked
  1551  001A66  1FC1               	comf	??_main& (0+255),f,b
  1552  001A68  1FC2               	comf	(??_main+1)& (0+255),f,b
  1553  001A6A  1FC3               	comf	(??_main+2)& (0+255),f,b
  1554  001A6C  1FC4               	comf	(??_main+3)& (0+255),f,b
  1555  001A6E  2BC1               	incf	??_main& (0+255),f,b
  1556  001A70  0E00               	movlw	0
  1557  001A72  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1558  001A74  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1559  001A76  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1560  001A78  502F               	movf	_time_counter,w,c	;volatile
  1561  001A7A  0100               	movlb	0	; () banked
  1562  001A7C  25C1               	addwf	??_main& (0+255),w,b
  1563  001A7E  0100               	movlb	0	; () banked
  1564  001A80  6FC5               	movwf	(??_main+4)& (0+255),b
  1565  001A82  5030               	movf	_time_counter+1,w,c	;volatile
  1566  001A84  0100               	movlb	0	; () banked
  1567  001A86  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1568  001A88  0100               	movlb	0	; () banked
  1569  001A8A  6FC6               	movwf	(??_main+5)& (0+255),b
  1570  001A8C  5031               	movf	_time_counter+2,w,c	;volatile
  1571  001A8E  0100               	movlb	0	; () banked
  1572  001A90  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1573  001A92  0100               	movlb	0	; () banked
  1574  001A94  6FC7               	movwf	(??_main+6)& (0+255),b
  1575  001A96  5032               	movf	_time_counter+3,w,c	;volatile
  1576  001A98  0100               	movlb	0	; () banked
  1577  001A9A  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1578  001A9C  0100               	movlb	0	; () banked
  1579  001A9E  6FC8               	movwf	(??_main+7)& (0+255),b
  1580  001AA0  0100               	movlb	0	; () banked
  1581  001AA2  51C8               	movf	(??_main+7)& (0+255),w,b
  1582  001AA4  0100               	movlb	0	; () banked
  1583  001AA6  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1584  001AA8  0100               	movlb	0	; () banked
  1585  001AAA  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1586  001AAC  E105               	bnz	u7430
  1587  001AAE  0E02               	movlw	2
  1588  001AB0  0100               	movlb	0	; () banked
  1589  001AB2  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1590  001AB4  A0D8               	btfss	status,0,c
  1591  001AB6  D00A               	goto	l6137
  1592  001AB8                     u7430:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;telecomando.c: 196: pr_time_2 = time_counter;
  1596  001AB8  C02F  F0E3         	movff	_time_counter,_pr_time_2	;volatile
  1597  001ABC  C030  F0E4         	movff	_time_counter+1,_pr_time_2+1	;volatile
  1598  001AC0  C031  F0E5         	movff	_time_counter+2,_pr_time_2+2	;volatile
  1599  001AC4  C032  F0E6         	movff	_time_counter+3,_pr_time_2+3	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;telecomando.c: 197: USART_Send();
  1603  001AC8  EC4E  F012         	call	_USART_Send	;wreg free
  1604  001ACC                     l6137:
  1605                           
  1606                           ;telecomando.c: 198: }
  1607                           ;telecomando.c: 200: if ((time_counter - pr_time_3) >= 50) {
  1608  001ACC  C0E7  F0C1         	movff	_pr_time_3,??_main	;volatile
  1609  001AD0  C0E8  F0C2         	movff	_pr_time_3+1,??_main+1	;volatile
  1610  001AD4  C0E9  F0C3         	movff	_pr_time_3+2,??_main+2	;volatile
  1611  001AD8  C0EA  F0C4         	movff	_pr_time_3+3,??_main+3	;volatile
  1612  001ADC  0100               	movlb	0	; () banked
  1613  001ADE  1FC1               	comf	??_main& (0+255),f,b
  1614  001AE0  1FC2               	comf	(??_main+1)& (0+255),f,b
  1615  001AE2  1FC3               	comf	(??_main+2)& (0+255),f,b
  1616  001AE4  1FC4               	comf	(??_main+3)& (0+255),f,b
  1617  001AE6  2BC1               	incf	??_main& (0+255),f,b
  1618  001AE8  0E00               	movlw	0
  1619  001AEA  23C2               	addwfc	(??_main+1)& (0+255),f,b
  1620  001AEC  23C3               	addwfc	(??_main+2)& (0+255),f,b
  1621  001AEE  23C4               	addwfc	(??_main+3)& (0+255),f,b
  1622  001AF0  502F               	movf	_time_counter,w,c	;volatile
  1623  001AF2  0100               	movlb	0	; () banked
  1624  001AF4  25C1               	addwf	??_main& (0+255),w,b
  1625  001AF6  0100               	movlb	0	; () banked
  1626  001AF8  6FC5               	movwf	(??_main+4)& (0+255),b
  1627  001AFA  5030               	movf	_time_counter+1,w,c	;volatile
  1628  001AFC  0100               	movlb	0	; () banked
  1629  001AFE  21C2               	addwfc	(??_main+1)& (0+255),w,b
  1630  001B00  0100               	movlb	0	; () banked
  1631  001B02  6FC6               	movwf	(??_main+5)& (0+255),b
  1632  001B04  5031               	movf	_time_counter+2,w,c	;volatile
  1633  001B06  0100               	movlb	0	; () banked
  1634  001B08  21C3               	addwfc	(??_main+2)& (0+255),w,b
  1635  001B0A  0100               	movlb	0	; () banked
  1636  001B0C  6FC7               	movwf	(??_main+6)& (0+255),b
  1637  001B0E  5032               	movf	_time_counter+3,w,c	;volatile
  1638  001B10  0100               	movlb	0	; () banked
  1639  001B12  21C4               	addwfc	(??_main+3)& (0+255),w,b
  1640  001B14  0100               	movlb	0	; () banked
  1641  001B16  6FC8               	movwf	(??_main+7)& (0+255),b
  1642  001B18  0100               	movlb	0	; () banked
  1643  001B1A  51C8               	movf	(??_main+7)& (0+255),w,b
  1644  001B1C  0100               	movlb	0	; () banked
  1645  001B1E  11C7               	iorwf	(??_main+6)& (0+255),w,b
  1646  001B20  0100               	movlb	0	; () banked
  1647  001B22  11C6               	iorwf	(??_main+5)& (0+255),w,b
  1648  001B24  E105               	bnz	u7440
  1649  001B26  0E32               	movlw	50
  1650  001B28  0100               	movlb	0	; () banked
  1651  001B2A  5DC5               	subwf	(??_main+4)& (0+255),w,b
  1652  001B2C  A0D8               	btfss	status,0,c
  1653  001B2E  D639               	goto	l6073
  1654  001B30                     u7440:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;telecomando.c: 201: pr_time_3 = time_counter;
  1658  001B30  C02F  F0E7         	movff	_time_counter,_pr_time_3	;volatile
  1659  001B34  C030  F0E8         	movff	_time_counter+1,_pr_time_3+1	;volatile
  1660  001B38  C031  F0E9         	movff	_time_counter+2,_pr_time_3+2	;volatile
  1661  001B3C  C032  F0EA         	movff	_time_counter+3,_pr_time_3+3	;volatile
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;telecomando.c: 202: LCD_Handler();
  1665  001B40  ECBE  F013         	call	_LCD_Handler	;wreg free
  1666  001B44  D62E               	goto	l6073
  1667  001B46                     __end_of_main:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _board_initialization *****************
  1678 ;; Defined at:
  1679 ;;		line 354 in file "telecomando.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1693 ;;      Params:         0       0       0       0
  1694 ;;      Locals:         0       0       0       0
  1695 ;;      Temps:          0       0       0       0
  1696 ;;      Totals:         0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    9
  1700 ;; This function calls:
  1701 ;;		_LCD_backlight
  1702 ;;		_LCD_clear
  1703 ;;		_LCD_goto_line
  1704 ;;		_LCD_initialize
  1705 ;;		_LCD_write_message
  1706 ;;		_OpenUSART
  1707 ;;		_delay_ms
  1708 ;;		_delay_s
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715  002A94                     __ptext1:
  1716                           	opt stack 0
  1717  002A94                     _board_initialization:
  1718                           	opt stack 21
  1719                           
  1720                           ;telecomando.c: 356: LATA = 0x00;
  1721                           
  1722                           ;incstack = 0
  1723  002A94  0E00               	movlw	0
  1724  002A96  6E89               	movwf	3977,c	;volatile
  1725                           
  1726                           ;telecomando.c: 357: TRISA = 0b00001111;
  1727  002A98  0E0F               	movlw	15
  1728  002A9A  6E92               	movwf	3986,c	;volatile
  1729                           
  1730                           ;telecomando.c: 358: LATB = 0x00;
  1731  002A9C  0E00               	movlw	0
  1732  002A9E  6E8A               	movwf	3978,c	;volatile
  1733                           
  1734                           ;telecomando.c: 359: TRISB = 0xFF;
  1735  002AA0  6893               	setf	3987,c	;volatile
  1736                           
  1737                           ;telecomando.c: 360: LATC = 0x00;
  1738  002AA2  0E00               	movlw	0
  1739  002AA4  6E8B               	movwf	3979,c	;volatile
  1740                           
  1741                           ;telecomando.c: 361: TRISC = 0b10110000;
  1742  002AA6  0EB0               	movlw	176
  1743  002AA8  6E94               	movwf	3988,c	;volatile
  1744                           
  1745                           ;telecomando.c: 362: LATD = 0x00;
  1746  002AAA  0E00               	movlw	0
  1747  002AAC  6E8C               	movwf	3980,c	;volatile
  1748                           
  1749                           ;telecomando.c: 363: TRISD = 0x00;
  1750  002AAE  0E00               	movlw	0
  1751  002AB0  6E95               	movwf	3989,c	;volatile
  1752                           
  1753                           ;telecomando.c: 364: LATE = 0x00;
  1754  002AB2  0E00               	movlw	0
  1755  002AB4  6E8D               	movwf	3981,c	;volatile
  1756                           
  1757                           ;telecomando.c: 365: TRISE = 0x00;
  1758  002AB6  0E00               	movlw	0
  1759  002AB8  6E96               	movwf	3990,c	;volatile
  1760                           
  1761                           ;telecomando.c: 368: PIR1bits.RCIF = 0;
  1762  002ABA  9A9E               	bcf	3998,5,c	;volatile
  1763                           
  1764                           ;telecomando.c: 369: PIR2bits.TMR3IF = 0;
  1765  002ABC  92A1               	bcf	4001,1,c	;volatile
  1766                           
  1767                           ;telecomando.c: 372: RCONbits.IPEN = 1;
  1768  002ABE  8ED0               	bsf	4048,7,c	;volatile
  1769                           
  1770                           ;telecomando.c: 373: IPR1bits.RCIP = 1;
  1771  002AC0  8A9F               	bsf	3999,5,c	;volatile
  1772                           
  1773                           ;telecomando.c: 374: IPR2bits.TMR3IP = 0;
  1774  002AC2  92A2               	bcf	4002,1,c	;volatile
  1775                           
  1776                           ;telecomando.c: 377: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1777  002AC4  0E4F               	movlw	79
  1778  002AC6  16AB               	andwf	4011,f,c	;volatile
  1779  002AC8  9AAC               	bcf	4012,5,c	;volatile
  1780  002ACA  0ECF               	movlw	207
  1781  002ACC  169D               	andwf	3997,f,c	;volatile
  1782                           
  1783                           ;telecomando.c: 378: delay_ms(10);
  1784  002ACE  0E00               	movlw	0
  1785  002AD0  0100               	movlb	0	; () banked
  1786  002AD2  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1787  002AD4  0E0A               	movlw	10
  1788  002AD6  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1789  002AD8  EC38  F019         	call	_delay_ms	;wreg free
  1790                           
  1791                           ;telecomando.c: 379: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1792                           ;telecomando.c: 380: & 0b11111101 & 0b11111111 & 0b11111111, 25);
  1793  002ADC  0E00               	movlw	0
  1794  002ADE  0100               	movlb	0	; () banked
  1795  002AE0  6F61               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1796  002AE2  0E19               	movlw	25
  1797  002AE4  6F60               	movwf	OpenUSART@spbrg& (0+255),b
  1798  002AE6  0E7C               	movlw	124
  1799  002AE8  EC3B  F018         	call	_OpenUSART
  1800                           
  1801                           ;telecomando.c: 383: ADCON1 = 0b00001101;
  1802  002AEC  0E0D               	movlw	13
  1803  002AEE  6EC1               	movwf	4033,c	;volatile
  1804                           
  1805                           ;telecomando.c: 384: ADCON0bits.CHS2 = 0;
  1806  002AF0  98C2               	bcf	4034,4,c	;volatile
  1807                           
  1808                           ;telecomando.c: 385: ADCON0bits.CHS1 = 0;
  1809  002AF2  96C2               	bcf	4034,3,c	;volatile
  1810                           
  1811                           ;telecomando.c: 386: ADCON0bits.CHS0 = 0;
  1812  002AF4  94C2               	bcf	4034,2,c	;volatile
  1813                           
  1814                           ;telecomando.c: 387: ADCON2bits.ACQT2 = 1;
  1815  002AF6  8AC0               	bsf	4032,5,c	;volatile
  1816                           
  1817                           ;telecomando.c: 388: ADCON2bits.ACQT1 = 1;
  1818  002AF8  88C0               	bsf	4032,4,c	;volatile
  1819                           
  1820                           ;telecomando.c: 389: ADCON2bits.ACQT0 = 0;
  1821  002AFA  96C0               	bcf	4032,3,c	;volatile
  1822                           
  1823                           ;telecomando.c: 390: ADCON2bits.ADCS2 = 1;
  1824  002AFC  84C0               	bsf	4032,2,c	;volatile
  1825                           
  1826                           ;telecomando.c: 391: ADCON2bits.ADCS1 = 0;
  1827  002AFE  92C0               	bcf	4032,1,c	;volatile
  1828                           
  1829                           ;telecomando.c: 392: ADCON2bits.ADCS0 = 1;
  1830  002B00  80C0               	bsf	4032,0,c	;volatile
  1831                           
  1832                           ;telecomando.c: 393: ADCON2bits.ADFM = 0;
  1833  002B02  9EC0               	bcf	4032,7,c	;volatile
  1834                           
  1835                           ;telecomando.c: 394: ADCON0bits.ADON = 1;
  1836  002B04  80C2               	bsf	4034,0,c	;volatile
  1837                           
  1838                           ;telecomando.c: 396: PORTDbits.RD2 = 1;
  1839  002B06  8483               	bsf	3971,2,c	;volatile
  1840                           
  1841                           ;telecomando.c: 397: delay_ms(10);
  1842  002B08  0E00               	movlw	0
  1843  002B0A  0100               	movlb	0	; () banked
  1844  002B0C  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1845  002B0E  0E0A               	movlw	10
  1846  002B10  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1847  002B12  EC38  F019         	call	_delay_ms	;wreg free
  1848                           
  1849                           ;telecomando.c: 398: PORTDbits.RD3 = 1;
  1850  002B16  8683               	bsf	3971,3,c	;volatile
  1851                           
  1852                           ;telecomando.c: 399: delay_s(1);
  1853  002B18  0E01               	movlw	1
  1854  002B1A  ECBE  F019         	call	_delay_s
  1855                           
  1856                           ;telecomando.c: 401: LCD_initialize(16);
  1857  002B1E  0E10               	movlw	16
  1858  002B20  EC07  F013         	call	_LCD_initialize
  1859                           
  1860                           ;telecomando.c: 402: LCD_backlight(0);
  1861  002B24  0E00               	movlw	0
  1862  002B26  EC4F  F01A         	call	_LCD_backlight
  1863                           
  1864                           ;telecomando.c: 403: LCD_clear();
  1865  002B2A  ECA5  F019         	call	_LCD_clear	;wreg free
  1866                           
  1867                           ;telecomando.c: 404: LCD_goto_line(1);
  1868  002B2E  0E01               	movlw	1
  1869  002B30  ECD4  F014         	call	_LCD_goto_line
  1870                           
  1871                           ;telecomando.c: 406: LCD_write_message("Wait...");
  1872  002B34  0EE7               	movlw	low STR_13
  1873  002B36  0100               	movlb	0	; () banked
  1874  002B38  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  1875  002B3A  0E3F               	movlw	high STR_13
  1876  002B3C  0100               	movlb	0	; () banked
  1877  002B3E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1878  002B40  ECD4  F019         	call	_LCD_write_message	;wreg free
  1879                           
  1880                           ;telecomando.c: 407: delay_ms(300);
  1881  002B44  0E01               	movlw	1
  1882  002B46  0100               	movlb	0	; () banked
  1883  002B48  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1884  002B4A  0E2C               	movlw	44
  1885  002B4C  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1886  002B4E  EC38  F019         	call	_delay_ms	;wreg free
  1887                           
  1888                           ;telecomando.c: 409: PORTDbits.RD2 = 0;
  1889  002B52  9483               	bcf	3971,2,c	;volatile
  1890                           
  1891                           ;telecomando.c: 410: PORTDbits.RD3 = 0;
  1892  002B54  9683               	bcf	3971,3,c	;volatile
  1893                           
  1894                           ;telecomando.c: 413: TMR3H = 0x63;
  1895  002B56  0E63               	movlw	99
  1896  002B58  6EB3               	movwf	4019,c	;volatile
  1897                           
  1898                           ;telecomando.c: 414: TMR3L = 0xC0;
  1899  002B5A  0EC0               	movlw	192
  1900  002B5C  6EB2               	movwf	4018,c	;volatile
  1901                           
  1902                           ;telecomando.c: 417: PIE1bits.RCIE = 1;
  1903  002B5E  8A9D               	bsf	3997,5,c	;volatile
  1904                           
  1905                           ;telecomando.c: 418: PIE2bits.TMR3IE = 1;
  1906  002B60  82A0               	bsf	4000,1,c	;volatile
  1907                           
  1908                           ;telecomando.c: 419: INTCONbits.GIEH = 1;
  1909  002B62  8EF2               	bsf	intcon,7,c	;volatile
  1910                           
  1911                           ;telecomando.c: 420: INTCONbits.GIEL = 1;
  1912  002B64  8CF2               	bsf	intcon,6,c	;volatile
  1913                           
  1914                           ;telecomando.c: 422: RCSTAbits.SPEN = 1;
  1915  002B66  8EAB               	bsf	4011,7,c	;volatile
  1916                           
  1917                           ;telecomando.c: 423: T3CON = 0x01;
  1918  002B68  0E01               	movlw	1
  1919  002B6A  6EB1               	movwf	4017,c	;volatile
  1920                           
  1921                           ;telecomando.c: 424: LCD_clear();
  1922  002B6C  ECA5  F019         	call	_LCD_clear	;wreg free
  1923  002B70  0012               	return		;funcret
  1924  002B72                     __end_of_board_initialization:
  1925                           	opt stack 0
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           intcon	equ	0xFF2
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function _delay_s *****************
  1936 ;; Defined at:
  1937 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  value_s         1    wreg     unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  value_s         1    8[BANK0 ] unsigned char 
  1942 ;;  repeat_loop     1    9[BANK0 ] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1952 ;;      Params:         0       0       0       0
  1953 ;;      Locals:         0       2       0       0
  1954 ;;      Temps:          0       0       0       0
  1955 ;;      Totals:         0       2       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    5
  1959 ;; This function calls:
  1960 ;;		_delay_ms
  1961 ;; This function is called by:
  1962 ;;		_board_initialization
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text2
  1967  00337C                     __ptext2:
  1968                           	opt stack 0
  1969  00337C                     _delay_s:
  1970                           	opt stack 24
  1971                           
  1972                           ;incstack = 0
  1973                           ;delay_s@value_s stored from wreg
  1974  00337C  0100               	movlb	0	; () banked
  1975  00337E  6F68               	movwf	delay_s@value_s& (0+255),b
  1976                           
  1977                           ;src\delay.c: 104: unsigned char repeat_loop;
  1978                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1979  003380  0E00               	movlw	0
  1980  003382  0100               	movlb	0	; () banked
  1981  003384  6F69               	movwf	delay_s@repeat_loop& (0+255),b
  1982  003386  D009               	goto	l5355
  1983  003388                     l5351:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;src\delay.c: 107: delay_ms (1000);
  1987  003388  0E03               	movlw	3
  1988  00338A  0100               	movlb	0	; () banked
  1989  00338C  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1990  00338E  0EE8               	movlw	232
  1991  003390  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1992  003392  EC38  F019         	call	_delay_ms	;wreg free
  1993  003396  0100               	movlb	0	; () banked
  1994  003398  2B69               	incf	delay_s@repeat_loop& (0+255),f,b
  1995  00339A                     l5355:
  1996                           
  1997                           ; BSR set to: 0
  1998  00339A  0100               	movlb	0	; () banked
  1999  00339C  5168               	movf	delay_s@value_s& (0+255),w,b
  2000  00339E  0100               	movlb	0	; () banked
  2001  0033A0  5D69               	subwf	delay_s@repeat_loop& (0+255),w,b
  2002  0033A2  B0D8               	btfsc	status,0,c
  2003  0033A4  0012               	return	
  2004  0033A6  D7F0               	goto	l5351
  2005  0033A8                     __end_of_delay_s:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           intcon	equ	0xFF2
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _OpenUSART *****************
  2017 ;; Defined at:
  2018 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  config          1    wreg     unsigned char 
  2021 ;;  spbrg           2    0[BANK0 ] unsigned int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  config          1    2[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;		None               void
  2026 ;; Registers used:
  2027 ;;		wreg, status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2033 ;;      Params:         0       2       0       0
  2034 ;;      Locals:         0       1       0       0
  2035 ;;      Temps:          0       0       0       0
  2036 ;;      Totals:         0       3       0       0
  2037 ;;Total ram usage:        3 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    3
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_board_initialization
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text3
  2048  003076                     __ptext3:
  2049                           	opt stack 0
  2050  003076                     _OpenUSART:
  2051                           	opt stack 26
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;incstack = 0
  2055                           ;OpenUSART@config stored from wreg
  2056  003076  0100               	movlb	0	; () banked
  2057  003078  6F62               	movwf	OpenUSART@config& (0+255),b
  2058  00307A  0E00               	movlw	0
  2059  00307C  6EAC               	movwf	4012,c	;volatile
  2060  00307E  0E00               	movlw	0
  2061  003080  6EAB               	movwf	4011,c	;volatile
  2062  003082  0100               	movlb	0	; () banked
  2063  003084  B162               	btfsc	OpenUSART@config& (0+255),0,b
  2064                           
  2065                           ; BSR set to: 0
  2066  003086  88AC               	bsf	4012,4,c	;volatile
  2067                           
  2068                           ; BSR set to: 0
  2069                           
  2070                           ; BSR set to: 0
  2071  003088  0100               	movlb	0	; () banked
  2072  00308A  A362               	btfss	OpenUSART@config& (0+255),1,b
  2073  00308C  D002               	goto	l5649
  2074                           
  2075                           ; BSR set to: 0
  2076  00308E  8CAC               	bsf	4012,6,c	;volatile
  2077  003090  8CAB               	bsf	4011,6,c	;volatile
  2078  003092                     l5649:
  2079                           
  2080                           ; BSR set to: 0
  2081  003092  0100               	movlb	0	; () banked
  2082  003094  B562               	btfsc	OpenUSART@config& (0+255),2,b
  2083                           
  2084                           ; BSR set to: 0
  2085  003096  8EAC               	bsf	4012,7,c	;volatile
  2086                           
  2087                           ; BSR set to: 0
  2088                           
  2089                           ; BSR set to: 0
  2090  003098  0100               	movlb	0	; () banked
  2091  00309A  A762               	btfss	OpenUSART@config& (0+255),3,b
  2092  00309C  D002               	goto	l448
  2093                           
  2094                           ; BSR set to: 0
  2095  00309E  88AB               	bsf	4011,4,c	;volatile
  2096  0030A0  D001               	goto	l5657
  2097  0030A2                     l448:
  2098                           
  2099                           ; BSR set to: 0
  2100  0030A2  8AAB               	bsf	4011,5,c	;volatile
  2101  0030A4                     l5657:
  2102                           
  2103                           ; BSR set to: 0
  2104  0030A4  0100               	movlb	0	; () banked
  2105  0030A6  B962               	btfsc	OpenUSART@config& (0+255),4,b
  2106                           
  2107                           ; BSR set to: 0
  2108  0030A8  84AC               	bsf	4012,2,c	;volatile
  2109                           
  2110                           ; BSR set to: 0
  2111  0030AA  989E               	bcf	3998,4,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  0030AC  0100               	movlb	0	; () banked
  2115  0030AE  BB62               	btfsc	OpenUSART@config& (0+255),5,b
  2116                           
  2117                           ; BSR set to: 0
  2118  0030B0  86AB               	bsf	4011,3,c	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           
  2122                           ; BSR set to: 0
  2123  0030B2  0100               	movlb	0	; () banked
  2124  0030B4  AD62               	btfss	OpenUSART@config& (0+255),6,b
  2125  0030B6  D002               	goto	l452
  2126                           
  2127                           ; BSR set to: 0
  2128  0030B8  8A9D               	bsf	3997,5,c	;volatile
  2129  0030BA  D001               	goto	l453
  2130  0030BC                     l452:
  2131                           
  2132                           ; BSR set to: 0
  2133  0030BC  9A9D               	bcf	3997,5,c	;volatile
  2134  0030BE                     l453:
  2135                           
  2136                           ; BSR set to: 0
  2137  0030BE  9A9E               	bcf	3998,5,c	;volatile
  2138                           
  2139                           ; BSR set to: 0
  2140  0030C0  0100               	movlb	0	; () banked
  2141  0030C2  AF62               	btfss	OpenUSART@config& (0+255),7,b
  2142  0030C4  D002               	goto	l454
  2143                           
  2144                           ; BSR set to: 0
  2145  0030C6  889D               	bsf	3997,4,c	;volatile
  2146  0030C8  D001               	goto	l455
  2147  0030CA                     l454:
  2148                           
  2149                           ; BSR set to: 0
  2150  0030CA  989D               	bcf	3997,4,c	;volatile
  2151  0030CC                     l455:
  2152                           
  2153                           ; BSR set to: 0
  2154  0030CC  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157  0030D0  0100               	movlb	0	; () banked
  2158  0030D2  5161               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  2159  0030D4  6EB0               	movwf	4016,c	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162  0030D6  8AAC               	bsf	4012,5,c	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165  0030D8  8EAB               	bsf	4011,7,c	;volatile
  2166                           
  2167                           ; BSR set to: 0
  2168  0030DA  9C94               	bcf	3988,6,c	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171  0030DC  8E94               	bsf	3988,7,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174  0030DE  A8AC               	btfss	4012,4,c	;volatile
  2175  0030E0  0012               	return	
  2176                           
  2177                           ; BSR set to: 0
  2178  0030E2  BEAC               	btfsc	4012,7,c	;volatile
  2179  0030E4  0012               	return	
  2180                           
  2181                           ; BSR set to: 0
  2182  0030E6  8C94               	bsf	3988,6,c	;volatile
  2183  0030E8  0012               	return	
  2184  0030EA                     __end_of_OpenUSART:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           intcon	equ	0xFF2
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _LCD_initialize *****************
  2196 ;; Defined at:
  2197 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  quartz_frequ    1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  quartz_frequ    1   14[BANK0 ] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2211 ;;      Params:         0       0       0       0
  2212 ;;      Locals:         0       1       0       0
  2213 ;;      Temps:          0       0       0       0
  2214 ;;      Totals:         0       1       0       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    8
  2218 ;; This function calls:
  2219 ;;		_LCD_clear
  2220 ;;		_LCD_cursor
  2221 ;;		_LCD_send_command
  2222 ;;		_delay_ms
  2223 ;;		_delay_set_quartz
  2224 ;; This function is called by:
  2225 ;;		_board_initialization
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text4
  2230  00260E                     __ptext4:
  2231                           	opt stack 0
  2232  00260E                     _LCD_initialize:
  2233                           	opt stack 21
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;incstack = 0
  2237                           ;LCD_initialize@quartz_frequency stored from wreg
  2238  00260E  0100               	movlb	0	; () banked
  2239  002610  6F6E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2240                           
  2241                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2242  002612  0100               	movlb	0	; () banked
  2243  002614  516E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2244  002616  EC58  F01A         	call	_delay_set_quartz
  2245                           
  2246                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2247  00261A  948D               	bcf	3981,2,c	;volatile
  2248                           
  2249                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2250  00261C  928B               	bcf	3979,1,c	;volatile
  2251                           
  2252                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2253  00261E  908B               	bcf	3979,0,c	;volatile
  2254                           
  2255                           ;src\LCD_44780.c: 291: delay_ms (100);
  2256  002620  0E00               	movlw	0
  2257  002622  0100               	movlb	0	; () banked
  2258  002624  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2259  002626  0E64               	movlw	100
  2260  002628  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2261  00262A  EC38  F019         	call	_delay_ms	;wreg free
  2262                           
  2263                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2264  00262E  0E00               	movlw	0
  2265  002630  0100               	movlb	0	; () banked
  2266  002632  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2267  002634  0E01               	movlw	1
  2268  002636  0100               	movlb	0	; () banked
  2269  002638  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2270  00263A  0E01               	movlw	1
  2271  00263C  0100               	movlb	0	; () banked
  2272  00263E  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2273  002640  0E00               	movlw	0
  2274  002642  EC1B  F019         	call	_LCD_send_command
  2275                           
  2276                           ;src\LCD_44780.c: 293: delay_ms (100);
  2277  002646  0E00               	movlw	0
  2278  002648  0100               	movlb	0	; () banked
  2279  00264A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2280  00264C  0E64               	movlw	100
  2281  00264E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2282  002650  EC38  F019         	call	_delay_ms	;wreg free
  2283                           
  2284                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2285  002654  0E00               	movlw	0
  2286  002656  0100               	movlb	0	; () banked
  2287  002658  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2288  00265A  0E01               	movlw	1
  2289  00265C  0100               	movlb	0	; () banked
  2290  00265E  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2291  002660  0E01               	movlw	1
  2292  002662  0100               	movlb	0	; () banked
  2293  002664  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2294  002666  0E00               	movlw	0
  2295  002668  EC1B  F019         	call	_LCD_send_command
  2296                           
  2297                           ;src\LCD_44780.c: 295: delay_ms (10);
  2298  00266C  0E00               	movlw	0
  2299  00266E  0100               	movlb	0	; () banked
  2300  002670  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2301  002672  0E0A               	movlw	10
  2302  002674  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2303  002676  EC38  F019         	call	_delay_ms	;wreg free
  2304                           
  2305                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2306  00267A  0E00               	movlw	0
  2307  00267C  0100               	movlb	0	; () banked
  2308  00267E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2309  002680  0E01               	movlw	1
  2310  002682  0100               	movlb	0	; () banked
  2311  002684  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2312  002686  0E01               	movlw	1
  2313  002688  0100               	movlb	0	; () banked
  2314  00268A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2315  00268C  0E00               	movlw	0
  2316  00268E  EC1B  F019         	call	_LCD_send_command
  2317                           
  2318                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2319  002692  0E00               	movlw	0
  2320  002694  0100               	movlb	0	; () banked
  2321  002696  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2322  002698  0E01               	movlw	1
  2323  00269A  0100               	movlb	0	; () banked
  2324  00269C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2325  00269E  0E00               	movlw	0
  2326  0026A0  0100               	movlb	0	; () banked
  2327  0026A2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2328  0026A4  0E00               	movlw	0
  2329  0026A6  EC1B  F019         	call	_LCD_send_command
  2330                           
  2331                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2332  0026AA  0E00               	movlw	0
  2333  0026AC  0100               	movlb	0	; () banked
  2334  0026AE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2335  0026B0  0E01               	movlw	1
  2336  0026B2  0100               	movlb	0	; () banked
  2337  0026B4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2338  0026B6  0E00               	movlw	0
  2339  0026B8  0100               	movlb	0	; () banked
  2340  0026BA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2341  0026BC  0E00               	movlw	0
  2342  0026BE  EC1B  F019         	call	_LCD_send_command
  2343                           
  2344                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2345  0026C2  0E00               	movlw	0
  2346  0026C4  0100               	movlb	0	; () banked
  2347  0026C6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2348  0026C8  0E00               	movlw	0
  2349  0026CA  0100               	movlb	0	; () banked
  2350  0026CC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2351  0026CE  0E00               	movlw	0
  2352  0026D0  0100               	movlb	0	; () banked
  2353  0026D2  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2354  0026D4  0E01               	movlw	1
  2355  0026D6  EC1B  F019         	call	_LCD_send_command
  2356                           
  2357                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2358  0026DA  0E00               	movlw	0
  2359  0026DC  0100               	movlb	0	; () banked
  2360  0026DE  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2361  0026E0  0E00               	movlw	0
  2362  0026E2  0100               	movlb	0	; () banked
  2363  0026E4  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2364  0026E6  0E00               	movlw	0
  2365  0026E8  0100               	movlb	0	; () banked
  2366  0026EA  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2367  0026EC  0E00               	movlw	0
  2368  0026EE  EC1B  F019         	call	_LCD_send_command
  2369                           
  2370                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2371  0026F2  0E00               	movlw	0
  2372  0026F4  0100               	movlb	0	; () banked
  2373  0026F6  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2374  0026F8  0E00               	movlw	0
  2375  0026FA  0100               	movlb	0	; () banked
  2376  0026FC  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2377  0026FE  0E00               	movlw	0
  2378  002700  0100               	movlb	0	; () banked
  2379  002702  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2380  002704  0E01               	movlw	1
  2381  002706  EC1B  F019         	call	_LCD_send_command
  2382                           
  2383                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2384  00270A  0E00               	movlw	0
  2385  00270C  0100               	movlb	0	; () banked
  2386  00270E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2387  002710  0E00               	movlw	0
  2388  002712  0100               	movlb	0	; () banked
  2389  002714  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2390  002716  0E00               	movlw	0
  2391  002718  0100               	movlb	0	; () banked
  2392  00271A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2393  00271C  0E00               	movlw	0
  2394  00271E  EC1B  F019         	call	_LCD_send_command
  2395                           
  2396                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2397  002722  0E00               	movlw	0
  2398  002724  0100               	movlb	0	; () banked
  2399  002726  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2400  002728  0E00               	movlw	0
  2401  00272A  0100               	movlb	0	; () banked
  2402  00272C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2403  00272E  0E01               	movlw	1
  2404  002730  0100               	movlb	0	; () banked
  2405  002732  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2406  002734  0E00               	movlw	0
  2407  002736  EC1B  F019         	call	_LCD_send_command
  2408                           
  2409                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2410  00273A  0E00               	movlw	0
  2411  00273C  0100               	movlb	0	; () banked
  2412  00273E  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2413  002740  0E00               	movlw	0
  2414  002742  0100               	movlb	0	; () banked
  2415  002744  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2416  002746  0E00               	movlw	0
  2417  002748  0100               	movlb	0	; () banked
  2418  00274A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2419  00274C  0E00               	movlw	0
  2420  00274E  EC1B  F019         	call	_LCD_send_command
  2421                           
  2422                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2423  002752  0E01               	movlw	1
  2424  002754  0100               	movlb	0	; () banked
  2425  002756  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2426  002758  0E01               	movlw	1
  2427  00275A  0100               	movlb	0	; () banked
  2428  00275C  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2429  00275E  0E00               	movlw	0
  2430  002760  0100               	movlb	0	; () banked
  2431  002762  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2432  002764  0E00               	movlw	0
  2433  002766  EC1B  F019         	call	_LCD_send_command
  2434                           
  2435                           ;src\LCD_44780.c: 312: LCD_clear ();
  2436  00276A  ECA5  F019         	call	_LCD_clear	;wreg free
  2437                           
  2438                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2439  00276E  0E00               	movlw	0
  2440  002770  0100               	movlb	0	; () banked
  2441  002772  6F6C               	movwf	LCD_cursor@blinking& (0+255),b
  2442  002774  0E00               	movlw	0
  2443  002776  EC8C  F019         	call	_LCD_cursor
  2444  00277A  0012               	return		;funcret
  2445  00277C                     __end_of_LCD_initialize:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _delay_set_quartz *****************
  2457 ;; Defined at:
  2458 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  frequency       1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  frequency       1    0[BANK0 ] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2472 ;;      Params:         0       0       0       0
  2473 ;;      Locals:         0       1       0       0
  2474 ;;      Temps:          0       0       0       0
  2475 ;;      Totals:         0       1       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    3
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_LCD_initialize
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text5
  2487  0034B0                     __ptext5:
  2488                           	opt stack 0
  2489  0034B0                     _delay_set_quartz:
  2490                           	opt stack 25
  2491                           
  2492                           ;incstack = 0
  2493                           ;delay_set_quartz@frequency stored from wreg
  2494  0034B0  0100               	movlb	0	; () banked
  2495  0034B2  6F60               	movwf	delay_set_quartz@frequency& (0+255),b
  2496                           
  2497                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2498  0034B4  C060  F045         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2499  0034B8  0012               	return		;funcret
  2500  0034BA                     __end_of_delay_set_quartz:
  2501                           	opt stack 0
  2502                           tblptru	equ	0xFF8
  2503                           tblptrh	equ	0xFF7
  2504                           tblptrl	equ	0xFF6
  2505                           tablat	equ	0xFF5
  2506                           intcon	equ	0xFF2
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _LCD_cursor *****************
  2512 ;; Defined at:
  2513 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  active          1    wreg     unsigned char 
  2516 ;;  blinking        1   12[BANK0 ] unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  active          1   13[BANK0 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2528 ;;      Params:         0       1       0       0
  2529 ;;      Locals:         0       1       0       0
  2530 ;;      Temps:          0       0       0       0
  2531 ;;      Totals:         0       2       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    7
  2535 ;; This function calls:
  2536 ;;		_LCD_send_command
  2537 ;; This function is called by:
  2538 ;;		_LCD_initialize
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text6
  2543  003318                     __ptext6:
  2544                           	opt stack 0
  2545  003318                     _LCD_cursor:
  2546                           	opt stack 21
  2547                           
  2548                           ;incstack = 0
  2549                           ;LCD_cursor@active stored from wreg
  2550  003318  0100               	movlb	0	; () banked
  2551  00331A  6F6D               	movwf	LCD_cursor@active& (0+255),b
  2552                           
  2553                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2554  00331C  0E00               	movlw	0
  2555  00331E  0100               	movlb	0	; () banked
  2556  003320  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2557  003322  0E00               	movlw	0
  2558  003324  0100               	movlb	0	; () banked
  2559  003326  6F69               	movwf	LCD_send_command@D1& (0+255),b
  2560  003328  0E00               	movlw	0
  2561  00332A  0100               	movlb	0	; () banked
  2562  00332C  6F6A               	movwf	LCD_send_command@D0& (0+255),b
  2563  00332E  0E00               	movlw	0
  2564  003330  EC1B  F019         	call	_LCD_send_command
  2565                           
  2566                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2567  003334  0E01               	movlw	1
  2568  003336  0100               	movlb	0	; () banked
  2569  003338  6F68               	movwf	LCD_send_command@D2& (0+255),b
  2570  00333A  C06D  F069         	movff	LCD_cursor@active,LCD_send_command@D1
  2571  00333E  C06C  F06A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2572  003342  0E01               	movlw	1
  2573  003344  EC1B  F019         	call	_LCD_send_command
  2574  003348  0012               	return		;funcret
  2575  00334A                     __end_of_LCD_cursor:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _LCD_backlight *****************
  2587 ;; Defined at:
  2588 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  active          1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  active          1    0[BANK0 ] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2602 ;;      Params:         0       0       0       0
  2603 ;;      Locals:         0       1       0       0
  2604 ;;      Temps:          0       0       0       0
  2605 ;;      Totals:         0       1       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    3
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_board_initialization
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text7
  2617  00349E                     __ptext7:
  2618                           	opt stack 0
  2619  00349E                     _LCD_backlight:
  2620                           	opt stack 26
  2621                           
  2622                           ;incstack = 0
  2623                           ;LCD_backlight@active stored from wreg
  2624  00349E  0100               	movlb	0	; () banked
  2625  0034A0  6F60               	movwf	LCD_backlight@active& (0+255),b
  2626                           
  2627                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2628  0034A2  0100               	movlb	0	; () banked
  2629  0034A4  B160               	btfsc	LCD_backlight@active& (0+255),0,b
  2630  0034A6  D002               	bra	u6395
  2631  0034A8  988B               	bcf	3979,4,c	;volatile
  2632  0034AA  D001               	bra	u6396
  2633  0034AC                     u6395:
  2634  0034AC  888B               	bsf	3979,4,c	;volatile
  2635  0034AE                     u6396:
  2636  0034AE  0012               	return		;funcret
  2637  0034B0                     __end_of_LCD_backlight:
  2638                           	opt stack 0
  2639                           tblptru	equ	0xFF8
  2640                           tblptrh	equ	0xFF7
  2641                           tblptrl	equ	0xFF6
  2642                           tablat	equ	0xFF5
  2643                           intcon	equ	0xFF2
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _USART_Send *****************
  2649 ;; Defined at:
  2650 ;;		line 230 in file "telecomando.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  i               1   12[BANK0 ] unsigned char 
  2655 ;;  i               1   11[BANK0 ] unsigned char 
  2656 ;;  i               1   10[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2666 ;;      Params:         0       0       0       0
  2667 ;;      Locals:         0       3       0       0
  2668 ;;      Temps:          0       2       0       0
  2669 ;;      Totals:         0       5       0       0
  2670 ;;Total ram usage:        5 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    5
  2673 ;; This function calls:
  2674 ;;		_delay_ms
  2675 ;;		_putsUSART
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text8
  2682  00249C                     __ptext8:
  2683                           	opt stack 0
  2684  00249C                     _USART_Send:
  2685                           	opt stack 25
  2686                           
  2687                           ;telecomando.c: 231: if (switch_position == 2) {
  2688                           
  2689                           ;incstack = 0
  2690  00249C  0E02               	movlw	2
  2691  00249E  1843               	xorwf	_switch_position,w,c	;volatile
  2692  0024A0  A4D8               	btfss	status,2,c
  2693  0024A2  D010               	goto	l5865
  2694                           
  2695                           ;telecomando.c: 232: set_speed = set_speed / 4;
  2696  0024A4  C035  F068         	movff	_set_speed,??_USART_Send	;volatile
  2697  0024A8  C036  F069         	movff	_set_speed+1,??_USART_Send+1	;volatile
  2698  0024AC  0100               	movlb	0	; () banked
  2699  0024AE  90D8               	bcf	status,0,c
  2700  0024B0  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2701  0024B2  3368               	rrcf	??_USART_Send& (0+255),f,b
  2702  0024B4  0100               	movlb	0	; () banked
  2703  0024B6  90D8               	bcf	status,0,c
  2704  0024B8  3369               	rrcf	(??_USART_Send+1)& (0+255),f,b
  2705  0024BA  3368               	rrcf	??_USART_Send& (0+255),f,b
  2706  0024BC  C068  F035         	movff	??_USART_Send,_set_speed	;volatile
  2707  0024C0  C069  F036         	movff	??_USART_Send+1,_set_speed+1	;volatile
  2708  0024C4                     l5865:
  2709                           
  2710                           ;telecomando.c: 233: }
  2711                           ;telecomando.c: 234: set_speed_pk1 = set_speed >> 8;
  2712  0024C4  5036               	movf	_set_speed+1,w,c	;volatile
  2713  0024C6  6E40               	movwf	_set_speed_pk1,c	;volatile
  2714                           
  2715                           ;telecomando.c: 235: if (set_speed_pk1 == 0x00) {
  2716  0024C8  5040               	movf	_set_speed_pk1,w,c	;volatile
  2717  0024CA  A4D8               	btfss	status,2,c
  2718  0024CC  D002               	goto	l5871
  2719                           
  2720                           ;telecomando.c: 236: set_speed_pk1 = 0b10000000;
  2721  0024CE  0E80               	movlw	128
  2722  0024D0  6E40               	movwf	_set_speed_pk1,c	;volatile
  2723  0024D2                     l5871:
  2724                           
  2725                           ;telecomando.c: 237: }
  2726                           ;telecomando.c: 238: set_speed_pk0 = set_speed;
  2727  0024D2  C035  F03F         	movff	_set_speed,_set_speed_pk0	;volatile
  2728                           
  2729                           ;telecomando.c: 239: USART_Tx[1] = dir;
  2730  0024D6  C03D  F0EE         	movff	_dir,_USART_Tx+1	;volatile
  2731                           
  2732                           ;telecomando.c: 240: USART_Tx[2] = set_speed_pk1;
  2733  0024DA  C040  F0EF         	movff	_set_speed_pk1,_USART_Tx+2	;volatile
  2734                           
  2735                           ;telecomando.c: 241: USART_Tx[3] = set_speed_pk0;
  2736  0024DE  C03F  F0F0         	movff	_set_speed_pk0,_USART_Tx+3	;volatile
  2737                           
  2738                           ;telecomando.c: 243: if ((switch_position == 0) || ((JoystickValues[1] >= 128)&&(Joystic
      +                          kValues[1] <= 132))) {
  2739  0024E2  5043               	movf	_switch_position,w,c	;volatile
  2740  0024E4  B4D8               	btfsc	status,2,c
  2741  0024E6  D006               	goto	l5883
  2742  0024E8  0E7F               	movlw	127
  2743  0024EA  6434               	cpfsgt	_JoystickValues+1,c	;volatile
  2744  0024EC  D009               	goto	l5885
  2745  0024EE  0E85               	movlw	133
  2746  0024F0  6034               	cpfslt	_JoystickValues+1,c	;volatile
  2747  0024F2  D006               	goto	l5885
  2748  0024F4                     l5883:
  2749                           
  2750                           ;telecomando.c: 244: USART_Tx[2] = 0b10000000;
  2751  0024F4  0E80               	movlw	128
  2752  0024F6  0100               	movlb	0	; () banked
  2753  0024F8  6FEF               	movwf	(_USART_Tx+2)& (0+255),b
  2754                           
  2755                           ;telecomando.c: 245: USART_Tx[3] = 0b00000001;
  2756  0024FA  0E01               	movlw	1
  2757  0024FC  0100               	movlb	0	; () banked
  2758  0024FE  6FF0               	movwf	(_USART_Tx+3)& (0+255),b
  2759  002500                     l5885:
  2760                           
  2761                           ;telecomando.c: 246: }
  2762                           ;telecomando.c: 247: USART_Tx[4] = set_steering;
  2763  002500  C041  F0F1         	movff	_set_steering,_USART_Tx+4	;volatile
  2764                           
  2765                           ;telecomando.c: 248: USART_Tx[5] = analogic_brake;
  2766  002504  C03C  F0F2         	movff	_analogic_brake,_USART_Tx+5	;volatile
  2767                           
  2768                           ;telecomando.c: 251: for (char i = 0; i < 6; i++) {
  2769  002508  0E00               	movlw	0
  2770  00250A  0100               	movlb	0	; () banked
  2771  00250C  6F6A               	movwf	USART_Send@i& (0+255),b
  2772  00250E                     l5889:
  2773                           
  2774                           ; BSR set to: 0
  2775  00250E  0E05               	movlw	5
  2776  002510  0100               	movlb	0	; () banked
  2777  002512  656A               	cpfsgt	USART_Send@i& (0+255),b
  2778  002514  D001               	goto	l5893
  2779  002516  D01A               	goto	l5901
  2780  002518                     l5893:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;telecomando.c: 252: if (USART_Tx[i] == 0) {
  2784  002518  0100               	movlb	0	; () banked
  2785  00251A  516A               	movf	USART_Send@i& (0+255),w,b
  2786  00251C  0D01               	mullw	1
  2787  00251E  0EED               	movlw	low _USART_Tx
  2788  002520  24F3               	addwf	prodl,w,c
  2789  002522  6ED9               	movwf	fsr2l,c
  2790  002524  0E00               	movlw	high _USART_Tx
  2791  002526  20F4               	addwfc	prodh,w,c
  2792  002528  6EDA               	movwf	fsr2h,c
  2793  00252A  50DF               	movf	indf2,w,c
  2794  00252C  A4D8               	btfss	status,2,c
  2795  00252E  D00B               	goto	l5897
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;telecomando.c: 253: USART_Tx[i] = 1;
  2799  002530  0100               	movlb	0	; () banked
  2800  002532  516A               	movf	USART_Send@i& (0+255),w,b
  2801  002534  0D01               	mullw	1
  2802  002536  0EED               	movlw	low _USART_Tx
  2803  002538  24F3               	addwf	prodl,w,c
  2804  00253A  6ED9               	movwf	fsr2l,c
  2805  00253C  0E00               	movlw	high _USART_Tx
  2806  00253E  20F4               	addwfc	prodh,w,c
  2807  002540  6EDA               	movwf	fsr2h,c
  2808  002542  0E01               	movlw	1
  2809  002544  6EDF               	movwf	indf2,c
  2810  002546                     l5897:
  2811                           
  2812                           ; BSR set to: 0
  2813  002546  0100               	movlb	0	; () banked
  2814  002548  2B6A               	incf	USART_Send@i& (0+255),f,b
  2815  00254A  D7E1               	goto	l5889
  2816  00254C                     l5901:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;telecomando.c: 254: }
  2820                           ;telecomando.c: 256: }
  2821                           ;telecomando.c: 259: spam_counter = 0;
  2822  00254C  0E00               	movlw	0
  2823  00254E  6E42               	movwf	_spam_counter,c	;volatile
  2824                           
  2825                           ;telecomando.c: 260: for (char i = 1; i < 6; i++) {
  2826  002550  0E01               	movlw	1
  2827  002552  0100               	movlb	0	; () banked
  2828  002554  6F6B               	movwf	USART_Send@i_1320& (0+255),b
  2829  002556                     l5903:
  2830                           
  2831                           ; BSR set to: 0
  2832  002556  0E05               	movlw	5
  2833  002558  0100               	movlb	0	; () banked
  2834  00255A  656B               	cpfsgt	USART_Send@i_1320& (0+255),b
  2835  00255C  D001               	goto	l5907
  2836  00255E  D019               	goto	l299
  2837  002560                     l5907:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;telecomando.c: 261: if (USART_Tx[i] == USART_Tx_Old[i]) {
  2841  002560  0100               	movlb	0	; () banked
  2842  002562  516B               	movf	USART_Send@i_1320& (0+255),w,b
  2843  002564  0D01               	mullw	1
  2844  002566  0ED1               	movlw	low _USART_Tx_Old
  2845  002568  24F3               	addwf	prodl,w,c
  2846  00256A  6ED9               	movwf	fsr2l,c
  2847  00256C  0E00               	movlw	high _USART_Tx_Old
  2848  00256E  20F4               	addwfc	prodh,w,c
  2849  002570  6EDA               	movwf	fsr2h,c
  2850  002572  0100               	movlb	0	; () banked
  2851  002574  516B               	movf	USART_Send@i_1320& (0+255),w,b
  2852  002576  0D01               	mullw	1
  2853  002578  0EED               	movlw	low _USART_Tx
  2854  00257A  24F3               	addwf	prodl,w,c
  2855  00257C  6EE1               	movwf	fsr1l,c
  2856  00257E  0E00               	movlw	high _USART_Tx
  2857  002580  20F4               	addwfc	prodh,w,c
  2858  002582  6EE2               	movwf	fsr1h,c
  2859  002584  50DE               	movf	postinc2,w,c
  2860  002586  18E6               	xorwf	postinc1,w,c
  2861  002588  B4D8               	btfsc	status,2,c
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;telecomando.c: 262: spam_counter++;
  2865  00258A  2A42               	incf	_spam_counter,f,c	;volatile
  2866                           
  2867                           ; BSR set to: 0
  2868  00258C  0100               	movlb	0	; () banked
  2869  00258E  2B6B               	incf	USART_Send@i_1320& (0+255),f,b
  2870  002590  D7E2               	goto	l5903
  2871  002592                     l299:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;telecomando.c: 263: }
  2875                           ;telecomando.c: 264: }
  2876                           ;telecomando.c: 265: if ((((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) || (switch_posi
      +                          tion == 0)) {
  2877  002592  A2AC               	btfss	4012,1,c	;volatile
  2878  002594  D004               	goto	l5915
  2879                           
  2880                           ; BSR set to: 0
  2881  002596  0E05               	movlw	5
  2882  002598  1842               	xorwf	_spam_counter,w,c	;volatile
  2883  00259A  A4D8               	btfss	status,2,c
  2884  00259C  D003               	goto	l5917
  2885  00259E                     l5915:
  2886                           
  2887                           ; BSR set to: 0
  2888  00259E  5043               	movf	_switch_position,w,c	;volatile
  2889  0025A0  A4D8               	btfss	status,2,c
  2890  0025A2  0012               	return	
  2891  0025A4                     l5917:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;telecomando.c: 267: if (switch_position == 0) {
  2895  0025A4  5043               	movf	_switch_position,w,c	;volatile
  2896  0025A6  A4D8               	btfss	status,2,c
  2897  0025A8  D007               	goto	l5921
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;telecomando.c: 268: delay_ms(100);
  2901  0025AA  0E00               	movlw	0
  2902  0025AC  0100               	movlb	0	; () banked
  2903  0025AE  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2904  0025B0  0E64               	movlw	100
  2905  0025B2  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2906  0025B4  EC38  F019         	call	_delay_ms	;wreg free
  2907  0025B8                     l5921:
  2908                           
  2909                           ;telecomando.c: 269: }
  2910                           ;telecomando.c: 270: INTCONbits.GIEH = 0;
  2911  0025B8  9EF2               	bcf	intcon,7,c	;volatile
  2912                           
  2913                           ;telecomando.c: 271: INTCONbits.GIEL = 0;
  2914  0025BA  9CF2               	bcf	intcon,6,c	;volatile
  2915                           
  2916                           ;telecomando.c: 272: putsUSART(USART_Tx);
  2917  0025BC  0EED               	movlw	low _USART_Tx
  2918  0025BE  0100               	movlb	0	; () banked
  2919  0025C0  6F61               	movwf	putsUSART@data& (0+255),b
  2920  0025C2  0E00               	movlw	high _USART_Tx
  2921  0025C4  0100               	movlb	0	; () banked
  2922  0025C6  6F62               	movwf	(putsUSART@data+1)& (0+255),b
  2923  0025C8  ECFF  F019         	call	_putsUSART	;wreg free
  2924                           
  2925                           ;telecomando.c: 274: INTCONbits.GIEH = 1;
  2926  0025CC  8EF2               	bsf	intcon,7,c	;volatile
  2927                           
  2928                           ;telecomando.c: 275: INTCONbits.GIEL = 1;
  2929  0025CE  8CF2               	bsf	intcon,6,c	;volatile
  2930                           
  2931                           ;telecomando.c: 276: for (char i = 0; i < 6; i++) {
  2932  0025D0  0E00               	movlw	0
  2933  0025D2  0100               	movlb	0	; () banked
  2934  0025D4  6F6C               	movwf	USART_Send@i_1329& (0+255),b
  2935  0025D6                     l5933:
  2936                           
  2937                           ; BSR set to: 0
  2938  0025D6  0E05               	movlw	5
  2939  0025D8  0100               	movlb	0	; () banked
  2940  0025DA  656C               	cpfsgt	USART_Send@i_1329& (0+255),b
  2941  0025DC  D001               	goto	l5937
  2942  0025DE  0012               	return	
  2943  0025E0                     l5937:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;telecomando.c: 278: USART_Tx_Old[i] = USART_Tx[i];
  2947  0025E0  0100               	movlb	0	; () banked
  2948  0025E2  516C               	movf	USART_Send@i_1329& (0+255),w,b
  2949  0025E4  0D01               	mullw	1
  2950  0025E6  0EED               	movlw	low _USART_Tx
  2951  0025E8  24F3               	addwf	prodl,w,c
  2952  0025EA  6ED9               	movwf	fsr2l,c
  2953  0025EC  0E00               	movlw	high _USART_Tx
  2954  0025EE  20F4               	addwfc	prodh,w,c
  2955  0025F0  6EDA               	movwf	fsr2h,c
  2956  0025F2  0100               	movlb	0	; () banked
  2957  0025F4  516C               	movf	USART_Send@i_1329& (0+255),w,b
  2958  0025F6  0D01               	mullw	1
  2959  0025F8  0ED1               	movlw	low _USART_Tx_Old
  2960  0025FA  24F3               	addwf	prodl,w,c
  2961  0025FC  6EE1               	movwf	fsr1l,c
  2962  0025FE  0E00               	movlw	high _USART_Tx_Old
  2963  002600  20F4               	addwfc	prodh,w,c
  2964  002602  6EE2               	movwf	fsr1h,c
  2965  002604  CFDF FFE7          	movff	indf2,indf1
  2966                           
  2967                           ; BSR set to: 0
  2968  002608  0100               	movlb	0	; () banked
  2969  00260A  2B6C               	incf	USART_Send@i_1329& (0+255),f,b
  2970  00260C  D7E4               	goto	l5933
  2971  00260E                     __end_of_USART_Send:
  2972                           	opt stack 0
  2973                           tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           prodh	equ	0xFF4
  2978                           prodl	equ	0xFF3
  2979                           intcon	equ	0xFF2
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           indf1	equ	0xFE7
  2983                           postinc1	equ	0xFE6
  2984                           fsr1h	equ	0xFE2
  2985                           fsr1l	equ	0xFE1
  2986                           indf2	equ	0xFDF
  2987                           postinc2	equ	0xFDE
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _putsUSART *****************
  2993 ;; Defined at:
  2994 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  data            2    1[BANK0 ] PTR unsigned char 
  2997 ;;		 -> USART_Tx(8), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3009 ;;      Params:         0       2       0       0
  3010 ;;      Locals:         0       0       0       0
  3011 ;;      Temps:          0       0       0       0
  3012 ;;      Totals:         0       2       0       0
  3013 ;;Total ram usage:        2 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    4
  3016 ;; This function calls:
  3017 ;;		_WriteUSART
  3018 ;; This function is called by:
  3019 ;;		_USART_Send
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text9
  3024  0033FE                     __ptext9:
  3025                           	opt stack 0
  3026  0033FE                     _putsUSART:
  3027                           	opt stack 25
  3028  0033FE                     l465:
  3029  0033FE  A2AC               	btfss	4012,1,c	;volatile
  3030  003400  D7FE               	goto	l465
  3031  003402  C061  FFD9         	movff	putsUSART@data,fsr2l
  3032  003406  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3033  00340A  50DF               	movf	indf2,w,c
  3034  00340C  EC45  F01A         	call	_WriteUSART
  3035  003410  C061  FFD9         	movff	putsUSART@data,fsr2l
  3036  003414  C062  FFDA         	movff	putsUSART@data+1,fsr2h
  3037  003418  0100               	movlb	0	; () banked
  3038  00341A  4B61               	infsnz	putsUSART@data& (0+255),f,b
  3039  00341C  2B62               	incf	(putsUSART@data+1)& (0+255),f,b
  3040  00341E  50DF               	movf	indf2,w,c
  3041  003420  B4D8               	btfsc	status,2,c
  3042  003422  0012               	return	
  3043  003424  D7EC               	goto	l465
  3044  003426                     __end_of_putsUSART:
  3045                           	opt stack 0
  3046                           tblptru	equ	0xFF8
  3047                           tblptrh	equ	0xFF7
  3048                           tblptrl	equ	0xFF6
  3049                           tablat	equ	0xFF5
  3050                           prodh	equ	0xFF4
  3051                           prodl	equ	0xFF3
  3052                           intcon	equ	0xFF2
  3053                           postinc0	equ	0xFEE
  3054                           wreg	equ	0xFE8
  3055                           indf1	equ	0xFE7
  3056                           postinc1	equ	0xFE6
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           indf2	equ	0xFDF
  3060                           postinc2	equ	0xFDE
  3061                           fsr2h	equ	0xFDA
  3062                           fsr2l	equ	0xFD9
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _WriteUSART *****************
  3066 ;; Defined at:
  3067 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  data            1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  data            1    0[BANK0 ] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;		None               void
  3074 ;; Registers used:
  3075 ;;		wreg
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3081 ;;      Params:         0       0       0       0
  3082 ;;      Locals:         0       1       0       0
  3083 ;;      Temps:          0       0       0       0
  3084 ;;      Totals:         0       1       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    3
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_putsUSART
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text10
  3096  00348A                     __ptext10:
  3097                           	opt stack 0
  3098  00348A                     _WriteUSART:
  3099                           	opt stack 25
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;incstack = 0
  3103                           ;WriteUSART@data stored from wreg
  3104  00348A  0100               	movlb	0	; () banked
  3105  00348C  6F60               	movwf	WriteUSART@data& (0+255),b
  3106  00348E  ACAC               	btfss	4012,6,c	;volatile
  3107  003490  D003               	goto	l5187
  3108  003492  90AC               	bcf	4012,0,c	;volatile
  3109  003494  B239               	btfsc	_USART_Status,1,c
  3110  003496  80AC               	bsf	4012,0,c	;volatile
  3111  003498                     l5187:
  3112  003498  C060  FFAD         	movff	WriteUSART@data,4013	;volatile
  3113  00349C  0012               	return		;funcret
  3114  00349E                     __end_of_WriteUSART:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           indf1	equ	0xFE7
  3126                           postinc1	equ	0xFE6
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8
  3134                           
  3135 ;; *************** function _USART_RX *****************
  3136 ;; Defined at:
  3137 ;;		line 283 in file "telecomando.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  i               1    2[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3151 ;;      Params:         0       0       0       0
  3152 ;;      Locals:         0       1       0       0
  3153 ;;      Temps:          0       2       0       0
  3154 ;;      Totals:         0       3       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text11
  3166  002CEC                     __ptext11:
  3167                           	opt stack 0
  3168  002CEC                     _USART_RX:
  3169                           	opt stack 27
  3170                           
  3171                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
  3172                           
  3173                           ;incstack = 0
  3174  002CEC  AA9E               	btfss	3998,5,c	;volatile
  3175  002CEE  D04F               	goto	l5761
  3176                           
  3177                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
  3178  002CF0  9EF2               	bcf	intcon,7,c	;volatile
  3179                           
  3180                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
  3181  002CF2  9CF2               	bcf	intcon,6,c	;volatile
  3182                           
  3183                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
  3184  002CF4  92A0               	bcf	4000,1,c	;volatile
  3185                           
  3186                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
  3187  002CF6  9A9D               	bcf	3997,5,c	;volatile
  3188                           
  3189                           ;telecomando.c: 290: if (RCREG == 0xAA) {
  3190  002CF8  0EAA               	movlw	170
  3191  002CFA  18AE               	xorwf	4014,w,c	;volatile
  3192  002CFC  A4D8               	btfss	status,2,c
  3193  002CFE  D01A               	goto	l5739
  3194                           
  3195                           ;telecomando.c: 292: for (unsigned char i = 0; i < 7; i++) {
  3196  002D00  0E00               	movlw	0
  3197  002D02  0100               	movlb	0	; () banked
  3198  002D04  6F62               	movwf	USART_RX@i& (0+255),b
  3199  002D06                     l5727:
  3200                           
  3201                           ; BSR set to: 0
  3202  002D06  0E06               	movlw	6
  3203  002D08  0100               	movlb	0	; () banked
  3204  002D0A  6562               	cpfsgt	USART_RX@i& (0+255),b
  3205  002D0C  D001               	goto	l314
  3206  002D0E  D012               	goto	l5739
  3207  002D10                     l314:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
  3211  002D10  8E83               	bsf	3971,7,c	;volatile
  3212  002D12                     l316:
  3213  002D12  AA9E               	btfss	3998,5,c	;volatile
  3214  002D14  D7FE               	goto	l316
  3215                           
  3216                           ;telecomando.c: 295: }
  3217                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
  3218  002D16  0100               	movlb	0	; () banked
  3219  002D18  5162               	movf	USART_RX@i& (0+255),w,b
  3220  002D1A  0D01               	mullw	1
  3221  002D1C  0EC9               	movlw	low _USART_Rx
  3222  002D1E  24F3               	addwf	prodl,w,c
  3223  002D20  6ED9               	movwf	fsr2l,c
  3224  002D22  0E00               	movlw	high _USART_Rx
  3225  002D24  20F4               	addwfc	prodh,w,c
  3226  002D26  6EDA               	movwf	fsr2h,c
  3227  002D28  CFAE FFDF          	movff	4014,indf2	;volatile
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
  3231  002D2C  9A9E               	bcf	3998,5,c	;volatile
  3232                           
  3233                           ; BSR set to: 0
  3234  002D2E  0100               	movlb	0	; () banked
  3235  002D30  2B62               	incf	USART_RX@i& (0+255),f,b
  3236  002D32  D7E9               	goto	l5727
  3237  002D34                     l5739:
  3238                           
  3239                           ;telecomando.c: 299: }
  3240                           ;telecomando.c: 301: }
  3241                           ;telecomando.c: 302: if (USART_Rx[5] == 0xAA) {
  3242  002D34  0EAA               	movlw	170
  3243  002D36  0100               	movlb	0	; () banked
  3244  002D38  19CE               	xorwf	(_USART_Rx+5)& (0+255),w,b
  3245  002D3A  A4D8               	btfss	status,2,c
  3246  002D3C  D025               	goto	l5755
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
  3250  002D3E  0100               	movlb	0	; () banked
  3251  002D40  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
  3252  002D42  D002               	goto	u6940
  3253  002D44  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3254  002D46  D001               	goto	u6955
  3255  002D48                     u6940:
  3256  002D48  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
  3257  002D4A                     u6955:
  3258                           
  3259                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
  3260  002D4A  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
  3261                           
  3262                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
  3263  002D4E  0E80               	movlw	128
  3264  002D50  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
  3265  002D52  A4D8               	btfss	status,2,c
  3266  002D54  D002               	goto	l5747
  3267                           
  3268                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
  3269  002D56  0E00               	movlw	0
  3270  002D58  6E3B               	movwf	_actual_speed_pk1,c	;volatile
  3271  002D5A                     l5747:
  3272                           
  3273                           ;telecomando.c: 308: }
  3274                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
  3275  002D5A  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
  3276                           
  3277                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
  3278  002D5E  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
  3279                           
  3280                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
  3281  002D62  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
  3282                           
  3283                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
  3284  002D66  503A               	movf	_actual_speed_pk0,w,c	;volatile
  3285  002D68  C03B  F060         	movff	_actual_speed_pk1,??_USART_RX	;volatile
  3286  002D6C  0100               	movlb	0	; () banked
  3287  002D6E  6B61               	clrf	(??_USART_RX+1)& (0+255),b
  3288  002D70  C060  F061         	movff	??_USART_RX,??_USART_RX+1
  3289  002D74  0100               	movlb	0	; () banked
  3290  002D76  6B60               	clrf	??_USART_RX& (0+255),b
  3291  002D78  0100               	movlb	0	; () banked
  3292  002D7A  1160               	iorwf	??_USART_RX& (0+255),w,b
  3293  002D7C  0100               	movlb	0	; () banked
  3294  002D7E  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
  3295  002D80  0100               	movlb	0	; () banked
  3296  002D82  5161               	movf	(??_USART_RX+1)& (0+255),w,b
  3297  002D84  0100               	movlb	0	; () banked
  3298  002D86  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
  3299  002D88                     l5755:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;telecomando.c: 313: }
  3303                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
  3304  002D88  9A9E               	bcf	3998,5,c	;volatile
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
  3308  002D8A  8A9D               	bsf	3997,5,c	;volatile
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
  3312  002D8C  82A0               	bsf	4000,1,c	;volatile
  3313  002D8E                     l5761:
  3314                           
  3315                           ;telecomando.c: 317: }
  3316                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
  3317  002D8E  8EF2               	bsf	intcon,7,c	;volatile
  3318                           
  3319                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
  3320  002D90  8CF2               	bsf	intcon,6,c	;volatile
  3321  002D92  0012               	return		;funcret
  3322  002D94                     __end_of_USART_RX:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           intcon	equ	0xFF2
  3331                           postinc0	equ	0xFEE
  3332                           wreg	equ	0xFE8
  3333                           indf1	equ	0xFE7
  3334                           postinc1	equ	0xFE6
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           postinc2	equ	0xFDE
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _PWR_Button_Polling *****************
  3344 ;; Defined at:
  3345 ;;		line 211 in file "telecomando.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;		None               void
  3352 ;; Registers used:
  3353 ;;		None
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3359 ;;      Params:         0       0       0       0
  3360 ;;      Locals:         0       0       0       0
  3361 ;;      Temps:          0       0       0       0
  3362 ;;      Totals:         0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    3
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text12
  3374  00346E                     __ptext12:
  3375                           	opt stack 0
  3376  00346E                     _PWR_Button_Polling:
  3377                           	opt stack 27
  3378                           
  3379                           ;telecomando.c: 212: if ((PORTBbits.RB3 == 0) || (wait_low == 0)) {
  3380                           
  3381                           ;incstack = 0
  3382  00346E  A681               	btfss	3969,3,c	;volatile
  3383  003470  D002               	goto	l277
  3384  003472  B444               	btfsc	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3385  003474  0012               	return	
  3386  003476                     l277:
  3387                           
  3388                           ;telecomando.c: 213: wait_low = 0;
  3389  003476  9444               	bcf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3390                           
  3391                           ;telecomando.c: 214: if (PORTBbits.RB3 == 1) {
  3392  003478  A681               	btfss	3969,3,c	;volatile
  3393  00347A  0012               	return	
  3394                           
  3395                           ;telecomando.c: 215: power_switch = ~power_switch;
  3396  00347C  B244               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3397  00347E  D002               	goto	u7000
  3398  003480  8244               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3399  003482  D001               	goto	u7015
  3400  003484                     u7000:
  3401  003484  9244               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  3402  003486                     u7015:
  3403                           
  3404                           ;telecomando.c: 216: wait_low = 1;
  3405  003486  8444               	bsf	_wait_low/(0+8),_wait_low& (0+7),c	;volatile
  3406  003488  0012               	return	
  3407  00348A                     __end_of_PWR_Button_Polling:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           indf1	equ	0xFE7
  3419                           postinc1	equ	0xFE6
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _LCD_Handler *****************
  3429 ;; Defined at:
  3430 ;;		line 322 in file "telecomando.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3444 ;;      Params:         0       0       0       0
  3445 ;;      Locals:         0       0       0       0
  3446 ;;      Temps:          0       0       0       0
  3447 ;;      Totals:         0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    9
  3451 ;; This function calls:
  3452 ;;		_LCD_clear
  3453 ;;		_LCD_goto_line
  3454 ;;		_LCD_write_message
  3455 ;;		_LCD_write_string
  3456 ;;		___lwdiv
  3457 ;;		___xxtofl
  3458 ;;		_sprintf
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text13
  3465  00277C                     __ptext13:
  3466                           	opt stack 0
  3467  00277C                     _LCD_Handler:
  3468                           	opt stack 21
  3469                           
  3470                           ;telecomando.c: 323: actual_speed_kmh = actual_speed / 278;
  3471                           
  3472                           ;incstack = 0
  3473  00277C  0E01               	movlw	1
  3474  00277E  0100               	movlb	0	; () banked
  3475  002780  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3476  002782  0E16               	movlw	22
  3477  002784  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3478  002786  C0EB  F060         	movff	_actual_speed,___lwdiv@dividend	;volatile
  3479  00278A  C0EC  F061         	movff	_actual_speed+1,___lwdiv@dividend+1	;volatile
  3480  00278E  ECFF  F017         	call	___lwdiv	;wreg free
  3481  002792  0100               	movlb	0	; () banked
  3482  002794  C060  F067         	movff	?___lwdiv,___xxtofl@val
  3483  002798  0100               	movlb	0	; () banked
  3484  00279A  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  3485  00279E  0100               	movlb	0	; () banked
  3486  0027A0  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  3487  0027A2  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  3488  0027A4  0E00               	movlw	0
  3489  0027A6  EC0C  F00F         	call	___xxtofl
  3490  0027AA  C067  F0DF         	movff	?___xxtofl,_actual_speed_kmh
  3491  0027AE  C068  F0E0         	movff	?___xxtofl+1,_actual_speed_kmh+1
  3492  0027B2  C069  F0E1         	movff	?___xxtofl+2,_actual_speed_kmh+2
  3493  0027B6  C06A  F0E2         	movff	?___xxtofl+3,_actual_speed_kmh+3
  3494                           
  3495                           ;telecomando.c: 325: LCD_clear();
  3496  0027BA  ECA5  F019         	call	_LCD_clear	;wreg free
  3497                           
  3498                           ;telecomando.c: 326: LCD_goto_line(1);
  3499  0027BE  0E01               	movlw	1
  3500  0027C0  ECD4  F014         	call	_LCD_goto_line
  3501                           
  3502                           ;telecomando.c: 327: LCD_write_message("=== VEHICLE DATA ===");
  3503  0027C4  0EA5               	movlw	low STR_5
  3504  0027C6  0100               	movlb	0	; () banked
  3505  0027C8  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3506  0027CA  0E3F               	movlw	high STR_5
  3507  0027CC  0100               	movlb	0	; () banked
  3508  0027CE  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3509  0027D0  ECD4  F019         	call	_LCD_write_message	;wreg free
  3510                           
  3511                           ;telecomando.c: 329: LCD_goto_line(2);
  3512  0027D4  0E02               	movlw	2
  3513  0027D6  ECD4  F014         	call	_LCD_goto_line
  3514                           
  3515                           ;telecomando.c: 330: LCD_write_message("Direction: ");
  3516  0027DA  0ECF               	movlw	low STR_6
  3517  0027DC  0100               	movlb	0	; () banked
  3518  0027DE  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3519  0027E0  0E3F               	movlw	high STR_6
  3520  0027E2  0100               	movlb	0	; () banked
  3521  0027E4  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3522  0027E6  ECD4  F019         	call	_LCD_write_message	;wreg free
  3523                           
  3524                           ;telecomando.c: 331: if (switch_position != 0) {
  3525  0027EA  5043               	movf	_switch_position,w,c	;volatile
  3526  0027EC  B4D8               	btfsc	status,2,c
  3527  0027EE  D016               	goto	l5977
  3528                           
  3529                           ;telecomando.c: 332: if (dir == 2) {
  3530  0027F0  0E02               	movlw	2
  3531  0027F2  183D               	xorwf	_dir,w,c	;volatile
  3532  0027F4  A4D8               	btfss	status,2,c
  3533  0027F6  D009               	goto	l5975
  3534                           
  3535                           ;telecomando.c: 333: LCD_write_message("FWD");
  3536  0027F8  0EF9               	movlw	low STR_7
  3537  0027FA  0100               	movlb	0	; () banked
  3538  0027FC  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3539  0027FE  0E3F               	movlw	high STR_7
  3540  002800  0100               	movlb	0	; () banked
  3541  002802  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3542  002804  ECD4  F019         	call	_LCD_write_message	;wreg free
  3543                           
  3544                           ;telecomando.c: 334: } else {
  3545  002808  D011               	goto	l5979
  3546  00280A                     l5975:
  3547                           
  3548                           ;telecomando.c: 335: LCD_write_message("BKWD");
  3549  00280A  0EEF               	movlw	low STR_8
  3550  00280C  0100               	movlb	0	; () banked
  3551  00280E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3552  002810  0E3F               	movlw	high STR_8
  3553  002812  0100               	movlb	0	; () banked
  3554  002814  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3555  002816  ECD4  F019         	call	_LCD_write_message	;wreg free
  3556                           
  3557                           ;telecomando.c: 336: }
  3558                           ;telecomando.c: 337: } else {
  3559  00281A  D008               	goto	l5979
  3560  00281C                     l5977:
  3561                           
  3562                           ;telecomando.c: 339: LCD_write_message("P");
  3563  00281C  0EFD               	movlw	low STR_9
  3564  00281E  0100               	movlb	0	; () banked
  3565  002820  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3566  002822  0E3F               	movlw	high STR_9
  3567  002824  0100               	movlb	0	; () banked
  3568  002826  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3569  002828  ECD4  F019         	call	_LCD_write_message	;wreg free
  3570  00282C                     l5979:
  3571                           
  3572                           ;telecomando.c: 340: }
  3573                           ;telecomando.c: 342: LCD_goto_line(3);
  3574  00282C  0E03               	movlw	3
  3575  00282E  ECD4  F014         	call	_LCD_goto_line
  3576                           
  3577                           ;telecomando.c: 343: sprintf(str, "Speed: %.3f", actual_speed_kmh);
  3578  002832  0E19               	movlw	low _str
  3579  002834  0100               	movlb	0	; () banked
  3580  002836  6FB7               	movwf	sprintf@sp& (0+255),b
  3581  002838  0E01               	movlw	high _str
  3582  00283A  0100               	movlb	0	; () banked
  3583  00283C  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  3584  00283E  0EDB               	movlw	low STR_10
  3585  002840  0100               	movlb	0	; () banked
  3586  002842  6FB9               	movwf	sprintf@f& (0+255),b
  3587  002844  0E3F               	movlw	high STR_10
  3588  002846  0100               	movlb	0	; () banked
  3589  002848  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  3590  00284A  C0DF  F0BB         	movff	_actual_speed_kmh,?_sprintf+4
  3591  00284E  C0E0  F0BC         	movff	_actual_speed_kmh+1,?_sprintf+5
  3592  002852  C0E1  F0BD         	movff	_actual_speed_kmh+2,?_sprintf+6
  3593  002856  C0E2  F0BE         	movff	_actual_speed_kmh+3,?_sprintf+7
  3594  00285A  EC62  F000         	call	_sprintf	;wreg free
  3595                           
  3596                           ;telecomando.c: 344: str[11] = '\0';
  3597  00285E  0E00               	movlw	0
  3598  002860  0101               	movlb	1	; () banked
  3599  002862  6F24               	movwf	(_str+11)& (0+255),b
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;telecomando.c: 345: LCD_write_string(str);
  3603  002864  0E19               	movlw	low _str
  3604  002866  0100               	movlb	0	; () banked
  3605  002868  6F71               	movwf	LCD_write_string@buffer& (0+255),b
  3606  00286A  0E01               	movlw	high _str
  3607  00286C  0100               	movlb	0	; () banked
  3608  00286E  6F72               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3609  002870  EC13  F01A         	call	_LCD_write_string	;wreg free
  3610                           
  3611                           ;telecomando.c: 346: LCD_write_message("Km/h");
  3612  002874  0EF4               	movlw	low STR_11
  3613  002876  0100               	movlb	0	; () banked
  3614  002878  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3615  00287A  0E3F               	movlw	high STR_11
  3616  00287C  0100               	movlb	0	; () banked
  3617  00287E  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3618  002880  ECD4  F019         	call	_LCD_write_message	;wreg free
  3619                           
  3620                           ;telecomando.c: 350: LCD_goto_line(4);
  3621  002884  0E04               	movlw	4
  3622  002886  ECD4  F014         	call	_LCD_goto_line
  3623                           
  3624                           ;telecomando.c: 351: LCD_write_message("====================");
  3625  00288A  0EBA               	movlw	low STR_1
  3626  00288C  0100               	movlb	0	; () banked
  3627  00288E  6F71               	movwf	LCD_write_message@buffer& (0+255),b
  3628  002890  0E3F               	movlw	high STR_1
  3629  002892  0100               	movlb	0	; () banked
  3630  002894  6F72               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3631  002896  ECD4  F019         	call	_LCD_write_message	;wreg free
  3632  00289A  0012               	return		;funcret
  3633  00289C                     __end_of_LCD_Handler:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           postinc0	equ	0xFEE
  3643                           wreg	equ	0xFE8
  3644                           indf1	equ	0xFE7
  3645                           postinc1	equ	0xFE6
  3646                           fsr1h	equ	0xFE2
  3647                           fsr1l	equ	0xFE1
  3648                           indf2	equ	0xFDF
  3649                           postinc2	equ	0xFDE
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _sprintf *****************
  3655 ;; Defined at:
  3656 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  3659 ;;		 -> str(12), 
  3660 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  3661 ;;		 -> STR_10(12), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  3664 ;;  tmpval          4   14[BANK1 ] struct .
  3665 ;;  val             4    8[BANK1 ] unsigned long 
  3666 ;;  cp              3    0        PTR const unsigned char 
  3667 ;;  prec            2   18[BANK1 ] int 
  3668 ;;  exp             2   12[BANK1 ] int 
  3669 ;;  flag            2    6[BANK1 ] unsigned short 
  3670 ;;  ap              2    4[BANK1 ] PTR void [1]
  3671 ;;		 -> ?_sprintf(2), 
  3672 ;;  len             2    0        unsigned int 
  3673 ;;  width           2    0        int 
  3674 ;;  c               1   24[BANK1 ] char 
  3675 ;;  d               1    0        unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2   87[BANK0 ] int 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3685 ;;      Params:         0       8       0       0
  3686 ;;      Locals:         0       0      25       0
  3687 ;;      Temps:          0       2       0       0
  3688 ;;      Totals:         0      10      25       0
  3689 ;;Total ram usage:       35 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		___awdiv
  3694 ;;		___fladd
  3695 ;;		___flge
  3696 ;;		___flmul
  3697 ;;		___flneg
  3698 ;;		___flsub
  3699 ;;		___fltol
  3700 ;;		___lldiv
  3701 ;;		___llmod
  3702 ;;		___wmul
  3703 ;;		___xxtofl
  3704 ;;		__div_to_l_
  3705 ;;		__tdiv_to_l_
  3706 ;;		_fround
  3707 ;;		_isdigit
  3708 ;;		_scale
  3709 ;; This function is called by:
  3710 ;;		_LCD_Handler
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text14
  3715  0000C4                     __ptext14:
  3716                           	opt stack 0
  3717  0000C4                     _sprintf:
  3718                           	opt stack 24
  3719                           
  3720                           ;doprnt.c: 494: va_list ap;
  3721                           ;doprnt.c: 499: signed char c;
  3722                           ;doprnt.c: 501: int width;
  3723                           ;doprnt.c: 504: int prec;
  3724                           ;doprnt.c: 508: unsigned short flag;
  3725                           ;doprnt.c: 515: char d;
  3726                           ;doprnt.c: 516: double fval;
  3727                           ;doprnt.c: 517: int exp;
  3728                           ;doprnt.c: 523: union {
  3729                           ;doprnt.c: 524: unsigned long vd;
  3730                           ;doprnt.c: 525: double integ;
  3731                           ;doprnt.c: 526: } tmpval;
  3732                           ;doprnt.c: 528: unsigned long val;
  3733                           ;doprnt.c: 529: unsigned len;
  3734                           ;doprnt.c: 530: const char * cp;
  3735                           ;doprnt.c: 533: *ap = __va_start();
  3736                           
  3737                           ;incstack = 0
  3738  0000C4  0EBB               	movlw	low (?_sprintf+4)
  3739  0000C6  0101               	movlb	1	; () banked
  3740  0000C8  6F04               	movwf	sprintf@ap& (0+255),b
  3741  0000CA  0E00               	movlw	high (?_sprintf+4)
  3742  0000CC  0101               	movlb	1	; () banked
  3743  0000CE  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3744                           
  3745                           ;doprnt.c: 536: while(c = *f++) {
  3746  0000D0  EF80  F004         	goto	l5633
  3747  0000D4                     l5435:
  3748                           
  3749                           ; BSR set to: 1
  3750                           ;doprnt.c: 538: if(c != '%')
  3751  0000D4  0E25               	movlw	37
  3752  0000D6  0101               	movlb	1	; () banked
  3753  0000D8  1918               	xorwf	sprintf@c& (0+255),w,b
  3754  0000DA  B4D8               	btfsc	status,2,c
  3755  0000DC  D008               	goto	l5441
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;doprnt.c: 540: {
  3759                           ;doprnt.c: 541: ((*sp++ = (c)));
  3760  0000DE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3761  0000E2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3762  0000E6  C118  FFDF         	movff	sprintf@c,indf2
  3763  0000EA  EF7D  F004         	goto	l5631
  3764  0000EE                     l5441:
  3765                           
  3766                           ;doprnt.c: 543: }
  3767                           ;doprnt.c: 548: flag = 0;
  3768  0000EE  0E00               	movlw	0
  3769  0000F0  0101               	movlb	1	; () banked
  3770  0000F2  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3771  0000F4  0E00               	movlw	0
  3772  0000F6  6F06               	movwf	sprintf@flag& (0+255),b
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;doprnt.c: 611: if(*f == '.') {
  3776  0000F8  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3777  0000FC  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3778  000100                     	if	0	;tblptru may be non-zero
  3779  000100                     	endif
  3780  000100                     	if	0	;tblptru may be non-zero
  3781  000100                     	endif
  3782  000100  0008               	tblrd		*
  3783  000102  50F5               	movf	tablat,w,c
  3784  000104  0A2E               	xorlw	46
  3785  000106  A4D8               	btfss	status,2,c
  3786  000108  D039               	goto	l5455
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;doprnt.c: 612: flag |= 0x4000;
  3790  00010A  0101               	movlb	1	; () banked
  3791  00010C  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3792                           
  3793                           ;doprnt.c: 613: f++;
  3794  00010E  0100               	movlb	0	; () banked
  3795  000110  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3796  000112  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;doprnt.c: 620: {
  3800                           ;doprnt.c: 621: prec = 0;
  3801  000114  0E00               	movlw	0
  3802  000116  0101               	movlb	1	; () banked
  3803  000118  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3804  00011A  0E00               	movlw	0
  3805  00011C  6F12               	movwf	sprintf@prec& (0+255),b
  3806                           
  3807                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3808  00011E  D023               	goto	l5453
  3809  000120                     l5449:
  3810                           
  3811                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3812  000120  C112  F060         	movff	sprintf@prec,___wmul@multiplier
  3813  000124  C113  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  3814  000128  0E00               	movlw	0
  3815  00012A  0100               	movlb	0	; () banked
  3816  00012C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3817  00012E  0E0A               	movlw	10
  3818  000130  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3819  000132  EC71  F019         	call	___wmul	;wreg free
  3820  000136  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3821  00013A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3822  00013E                     	if	0	;tblptru may be non-zero
  3823  00013E                     	endif
  3824  00013E                     	if	0	;tblptru may be non-zero
  3825  00013E                     	endif
  3826  00013E  0008               	tblrd		*
  3827  000140  50F5               	movf	tablat,w,c
  3828  000142  0100               	movlb	0	; () banked
  3829  000144  2760               	addwf	?___wmul& (0+255),f,b
  3830  000146  0E00               	movlw	0
  3831  000148  0100               	movlb	0	; () banked
  3832  00014A  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  3833  00014C  0ED0               	movlw	208
  3834  00014E  0100               	movlb	0	; () banked
  3835  000150  2560               	addwf	?___wmul& (0+255),w,b
  3836  000152  0101               	movlb	1	; () banked
  3837  000154  6F12               	movwf	sprintf@prec& (0+255),b
  3838  000156  0EFF               	movlw	255
  3839  000158  0100               	movlb	0	; () banked
  3840  00015A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3841  00015C  0101               	movlb	1	; () banked
  3842  00015E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3843                           
  3844                           ; BSR set to: 1
  3845  000160  0100               	movlb	0	; () banked
  3846  000162  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3847  000164  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3848  000166                     l5453:
  3849  000166  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3850  00016A  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3851  00016E                     	if	0	;tblptru may be non-zero
  3852  00016E                     	endif
  3853  00016E                     	if	0	;tblptru may be non-zero
  3854  00016E                     	endif
  3855  00016E  0008               	tblrd		*
  3856  000170  50F5               	movf	tablat,w,c
  3857  000172  ECEA  F019         	call	_isdigit
  3858  000176  A0D8               	btfss	status,0,c
  3859  000178  D00C               	goto	l5463
  3860  00017A  D7D2               	goto	l5449
  3861  00017C                     l5455:
  3862                           
  3863                           ;doprnt.c: 626: prec = 0;
  3864  00017C  0E00               	movlw	0
  3865  00017E  0101               	movlb	1	; () banked
  3866  000180  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3867  000182  0E00               	movlw	0
  3868  000184  6F12               	movwf	sprintf@prec& (0+255),b
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;doprnt.c: 628: flag |= 0x1000;
  3872  000186  0101               	movlb	1	; () banked
  3873  000188  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3874                           
  3875                           ; BSR set to: 1
  3876                           ;doprnt.c: 630: }
  3877                           ;doprnt.c: 635: switch(c = *f++) {
  3878  00018A  D003               	goto	l5463
  3879  00018C                     l5459:
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;doprnt.c: 663: flag |= 0x400;
  3883  00018C  0101               	movlb	1	; () banked
  3884  00018E  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3885                           
  3886                           ;doprnt.c: 664: break;
  3887  000190  D013               	goto	l5465
  3888  000192                     l5463:
  3889  000192  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3890  000196  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3891  00019A  0100               	movlb	0	; () banked
  3892  00019C  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3893  00019E  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3894  0001A0                     	if	0	;tblptru may be non-zero
  3895  0001A0                     	endif
  3896  0001A0                     	if	0	;tblptru may be non-zero
  3897  0001A0                     	endif
  3898  0001A0  0008               	tblrd		*
  3899  0001A2  CFF5 F118          	movff	tablat,sprintf@c
  3900  0001A6  0101               	movlb	1	; () banked
  3901  0001A8  5118               	movf	sprintf@c& (0+255),w,b
  3902                           
  3903                           ; Switch size 1, requested type "space"
  3904                           ; Number of cases is 2, Range of values is 0 to 102
  3905                           ; switch strategies available:
  3906                           ; Name         Instructions Cycles
  3907                           ; simple_byte            7     4 (average)
  3908                           ;	Chosen strategy is simple_byte
  3909  0001AA  0A00               	xorlw	0	; case 0
  3910  0001AC  B4D8               	btfsc	status,2,c
  3911  0001AE  D3B7               	goto	l5635
  3912  0001B0  0A66               	xorlw	102	; case 102
  3913  0001B2  B4D8               	btfsc	status,2,c
  3914  0001B4  D7EB               	goto	l5459
  3915  0001B6  D3A4               	goto	l5633
  3916  0001B8                     l5465:
  3917                           
  3918                           ; BSR set to: 1
  3919                           ;doprnt.c: 825: if(flag & (0x700)) {
  3920  0001B8  0E07               	movlw	7
  3921  0001BA  0101               	movlb	1	; () banked
  3922  0001BC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3923  0001BE  B4D8               	btfsc	status,2,c
  3924  0001C0  D347               	goto	l5613
  3925                           
  3926                           ; BSR set to: 1
  3927                           ;doprnt.c: 827: if(flag & 0x1000)
  3928  0001C2  0101               	movlb	1	; () banked
  3929  0001C4  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3930  0001C6  D005               	goto	l5471
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;doprnt.c: 829: prec = 6;
  3934  0001C8  0E00               	movlw	0
  3935  0001CA  0101               	movlb	1	; () banked
  3936  0001CC  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3937  0001CE  0E06               	movlw	6
  3938  0001D0  6F12               	movwf	sprintf@prec& (0+255),b
  3939  0001D2                     l5471:
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3943  0001D2  C104  FFD9         	movff	sprintf@ap,fsr2l
  3944  0001D6  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3945  0001DA  CFDE F114          	movff	postinc2,sprintf@fval
  3946  0001DE  CFDE F115          	movff	postinc2,sprintf@fval+1
  3947  0001E2  CFDE F116          	movff	postinc2,sprintf@fval+2
  3948  0001E6  CFDE F117          	movff	postinc2,sprintf@fval+3
  3949                           
  3950                           ; BSR set to: 1
  3951  0001EA  0E04               	movlw	4
  3952  0001EC  0101               	movlb	1	; () banked
  3953  0001EE  2704               	addwf	sprintf@ap& (0+255),f,b
  3954  0001F0  0E00               	movlw	0
  3955  0001F2  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;doprnt.c: 831: if(fval < 0.0) {
  3959  0001F4  0101               	movlb	1	; () banked
  3960  0001F6  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3961  0001F8  D015               	goto	l5481
  3962                           
  3963                           ; BSR set to: 1
  3964                           ;doprnt.c: 832: fval = -fval;
  3965  0001FA  C114  F060         	movff	sprintf@fval,___flneg@f1
  3966  0001FE  C115  F061         	movff	sprintf@fval+1,___flneg@f1+1
  3967  000202  C116  F062         	movff	sprintf@fval+2,___flneg@f1+2
  3968  000206  C117  F063         	movff	sprintf@fval+3,___flneg@f1+3
  3969  00020A  EC55  F019         	call	___flneg	;wreg free
  3970  00020E  C060  F114         	movff	?___flneg,sprintf@fval
  3971  000212  C061  F115         	movff	?___flneg+1,sprintf@fval+1
  3972  000216  C062  F116         	movff	?___flneg+2,sprintf@fval+2
  3973  00021A  C063  F117         	movff	?___flneg+3,sprintf@fval+3
  3974                           
  3975                           ;doprnt.c: 833: flag |= 0x03;
  3976  00021E  0E03               	movlw	3
  3977  000220  0101               	movlb	1	; () banked
  3978  000222  1306               	iorwf	sprintf@flag& (0+255),f,b
  3979  000224                     l5481:
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;doprnt.c: 834: }
  3983                           ;doprnt.c: 835: exp = 0;
  3984  000224  0E00               	movlw	0
  3985  000226  0101               	movlb	1	; () banked
  3986  000228  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3987  00022A  0E00               	movlw	0
  3988  00022C  6F0C               	movwf	sprintf@exp& (0+255),b
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;doprnt.c: 836: if( fval!=0) {
  3992  00022E  0101               	movlb	1	; () banked
  3993  000230  5114               	movf	sprintf@fval& (0+255),w,b
  3994  000232  0101               	movlb	1	; () banked
  3995  000234  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3996  000236  0101               	movlb	1	; () banked
  3997  000238  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3998  00023A  0101               	movlb	1	; () banked
  3999  00023C  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4000  00023E  B4D8               	btfsc	status,2,c
  4001  000240  D08E               	goto	l5509
  4002                           
  4003                           ; BSR set to: 1
  4004                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4005  000242  0101               	movlb	1	; () banked
  4006  000244  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4007  000246  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4008  000248  0F82               	addlw	130
  4009  00024A  0101               	movlb	1	; () banked
  4010  00024C  6F0C               	movwf	sprintf@exp& (0+255),b
  4011  00024E  0101               	movlb	1	; () banked
  4012  000250  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  4013  000252  0EFF               	movlw	255
  4014  000254  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;doprnt.c: 838: exp--;
  4018  000256  0101               	movlb	1	; () banked
  4019  000258  070C               	decf	sprintf@exp& (0+255),f,b
  4020  00025A  A0D8               	btfss	status,0,c
  4021  00025C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4022                           
  4023                           ; BSR set to: 1
  4024                           ;doprnt.c: 839: exp *= 3;
  4025  00025E  C10C  F060         	movff	sprintf@exp,___wmul@multiplier
  4026  000262  C10D  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  4027  000266  0E00               	movlw	0
  4028  000268  0100               	movlb	0	; () banked
  4029  00026A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4030  00026C  0E03               	movlw	3
  4031  00026E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4032  000270  EC71  F019         	call	___wmul	;wreg free
  4033  000274  C060  F10C         	movff	?___wmul,sprintf@exp
  4034  000278  C061  F10D         	movff	?___wmul+1,sprintf@exp+1
  4035                           
  4036                           ;doprnt.c: 840: exp /= 10;
  4037  00027C  C10C  F066         	movff	sprintf@exp,___awdiv@dividend
  4038  000280  C10D  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  4039  000284  0E00               	movlw	0
  4040  000286  0100               	movlb	0	; () banked
  4041  000288  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4042  00028A  0E0A               	movlw	10
  4043  00028C  6F68               	movwf	___awdiv@divisor& (0+255),b
  4044  00028E  ECB9  F015         	call	___awdiv	;wreg free
  4045  000292  C066  F10C         	movff	?___awdiv,sprintf@exp
  4046  000296  C067  F10D         	movff	?___awdiv+1,sprintf@exp+1
  4047                           
  4048                           ;doprnt.c: 841: if(exp < 0)
  4049  00029A  0101               	movlb	1	; () banked
  4050  00029C  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  4051  00029E  D004               	goto	l5497
  4052                           
  4053                           ; BSR set to: 1
  4054                           ;doprnt.c: 842: exp--;
  4055  0002A0  0101               	movlb	1	; () banked
  4056  0002A2  070C               	decf	sprintf@exp& (0+255),f,b
  4057  0002A4  A0D8               	btfss	status,0,c
  4058  0002A6  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4059  0002A8                     l5497:
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4063  0002A8  0101               	movlb	1	; () banked
  4064  0002AA  510C               	movf	sprintf@exp& (0+255),w,b
  4065  0002AC  0800               	sublw	0
  4066  0002AE  EC96  F004         	call	_scale
  4067  0002B2  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4068  0002B6  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4069  0002BA  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4070  0002BE  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4071                           
  4072                           ;doprnt.c: 847: tmpval.integ *= fval;
  4073  0002C2  C10E  F075         	movff	sprintf@tmpval,___flmul@b
  4074  0002C6  C10F  F076         	movff	sprintf@tmpval+1,___flmul@b+1
  4075  0002CA  C110  F077         	movff	sprintf@tmpval+2,___flmul@b+2
  4076  0002CE  C111  F078         	movff	sprintf@tmpval+3,___flmul@b+3
  4077  0002D2  C114  F079         	movff	sprintf@fval,___flmul@a
  4078  0002D6  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4079  0002DA  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4080  0002DE  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4081  0002E2  EC53  F009         	call	___flmul	;wreg free
  4082  0002E6  C075  F10E         	movff	?___flmul,sprintf@tmpval
  4083  0002EA  C076  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  4084  0002EE  C077  F110         	movff	?___flmul+2,sprintf@tmpval+2
  4085  0002F2  C078  F111         	movff	?___flmul+3,sprintf@tmpval+3
  4086                           
  4087                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4088  0002F6  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4089  0002FA  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4090  0002FE  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4091  000302  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4092  000306  0E00               	movlw	0
  4093  000308  0100               	movlb	0	; () banked
  4094  00030A  6F64               	movwf	___flge@ff2& (0+255),b
  4095  00030C  0E00               	movlw	0
  4096  00030E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4097  000310  0E80               	movlw	128
  4098  000312  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4099  000314  0E3F               	movlw	63
  4100  000316  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4101  000318  ECC2  F010         	call	___flge	;wreg free
  4102  00031C  0100               	movlb	0	; () banked
  4103  00031E  B0D8               	btfsc	status,0,c
  4104  000320  D005               	goto	l5505
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;doprnt.c: 849: exp--;
  4108  000322  0101               	movlb	1	; () banked
  4109  000324  070C               	decf	sprintf@exp& (0+255),f,b
  4110  000326  A0D8               	btfss	status,0,c
  4111  000328  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4112  00032A  D019               	goto	l5509
  4113  00032C                     l5505:
  4114                           
  4115                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4116  00032C  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4117  000330  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4118  000334  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4119  000338  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4120  00033C  0E00               	movlw	0
  4121  00033E  0100               	movlb	0	; () banked
  4122  000340  6F64               	movwf	___flge@ff2& (0+255),b
  4123  000342  0E00               	movlw	0
  4124  000344  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4125  000346  0E20               	movlw	32
  4126  000348  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4127  00034A  0E41               	movlw	65
  4128  00034C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4129  00034E  ECC2  F010         	call	___flge	;wreg free
  4130  000352  0100               	movlb	0	; () banked
  4131  000354  A0D8               	btfss	status,0,c
  4132  000356  D003               	goto	l5509
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;doprnt.c: 851: exp++;
  4136  000358  0101               	movlb	1	; () banked
  4137  00035A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  4138  00035C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  4139  00035E                     l5509:
  4140                           
  4141                           ;doprnt.c: 852: }
  4142                           ;doprnt.c: 1112: if(prec <= 12)
  4143  00035E  0101               	movlb	1	; () banked
  4144  000360  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4145  000362  D008               	goto	l5511
  4146  000364  0101               	movlb	1	; () banked
  4147  000366  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4148  000368  E123               	bnz	l5513
  4149  00036A  0E0D               	movlw	13
  4150  00036C  0101               	movlb	1	; () banked
  4151  00036E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4152  000370  B0D8               	btfsc	status,0,c
  4153  000372  D01E               	goto	l5513
  4154  000374                     l5511:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;doprnt.c: 1113: fval += fround(prec);
  4158  000374  C114  F09B         	movff	sprintf@fval,___fladd@b
  4159  000378  C115  F09C         	movff	sprintf@fval+1,___fladd@b+1
  4160  00037C  C116  F09D         	movff	sprintf@fval+2,___fladd@b+2
  4161  000380  C117  F09E         	movff	sprintf@fval+3,___fladd@b+3
  4162  000384  0101               	movlb	1	; () banked
  4163  000386  5112               	movf	sprintf@prec& (0+255),w,b
  4164  000388  ECA3  F00D         	call	_fround
  4165  00038C  C08E  F09F         	movff	?_fround,___fladd@a
  4166  000390  C08F  F0A0         	movff	?_fround+1,___fladd@a+1
  4167  000394  C090  F0A1         	movff	?_fround+2,___fladd@a+2
  4168  000398  C091  F0A2         	movff	?_fround+3,___fladd@a+3
  4169  00039C  ECFF  F006         	call	___fladd	;wreg free
  4170  0003A0  C09B  F114         	movff	?___fladd,sprintf@fval
  4171  0003A4  C09C  F115         	movff	?___fladd+1,sprintf@fval+1
  4172  0003A8  C09D  F116         	movff	?___fladd+2,sprintf@fval+2
  4173  0003AC  C09E  F117         	movff	?___fladd+3,sprintf@fval+3
  4174  0003B0                     l5513:
  4175                           
  4176                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4177  0003B0  0101               	movlb	1	; () banked
  4178  0003B2  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4179  0003B4  D008               	goto	l5515
  4180  0003B6  0101               	movlb	1	; () banked
  4181  0003B8  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4182  0003BA  E12E               	bnz	l5521
  4183  0003BC  0E0A               	movlw	10
  4184  0003BE  0101               	movlb	1	; () banked
  4185  0003C0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4186  0003C2  B0D8               	btfsc	status,0,c
  4187  0003C4  D029               	goto	l5521
  4188  0003C6                     l5515:
  4189                           
  4190                           ; BSR set to: 1
  4191  0003C6  0101               	movlb	1	; () banked
  4192  0003C8  5114               	movf	sprintf@fval& (0+255),w,b
  4193  0003CA  0101               	movlb	1	; () banked
  4194  0003CC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4195  0003CE  0101               	movlb	1	; () banked
  4196  0003D0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4197  0003D2  0101               	movlb	1	; () banked
  4198  0003D4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4199  0003D6  B4D8               	btfsc	status,2,c
  4200  0003D8  D06D               	goto	l5535
  4201                           
  4202                           ; BSR set to: 1
  4203  0003DA  C114  F097         	movff	sprintf@fval,___fltol@f1
  4204  0003DE  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4205  0003E2  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4206  0003E6  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4207  0003EA  EC4E  F014         	call	___fltol	;wreg free
  4208  0003EE  0100               	movlb	0	; () banked
  4209  0003F0  5197               	movf	?___fltol& (0+255),w,b
  4210  0003F2  0100               	movlb	0	; () banked
  4211  0003F4  1198               	iorwf	(?___fltol+1)& (0+255),w,b
  4212  0003F6  0100               	movlb	0	; () banked
  4213  0003F8  1199               	iorwf	(?___fltol+2)& (0+255),w,b
  4214  0003FA  0100               	movlb	0	; () banked
  4215  0003FC  119A               	iorwf	(?___fltol+3)& (0+255),w,b
  4216  0003FE  A4D8               	btfss	status,2,c
  4217  000400  D059               	goto	l5535
  4218                           
  4219                           ; BSR set to: 0
  4220  000402  0101               	movlb	1	; () banked
  4221  000404  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4222  000406  D056               	goto	l5535
  4223  000408  0101               	movlb	1	; () banked
  4224  00040A  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4225  00040C  E105               	bnz	l5521
  4226  00040E  0E02               	movlw	2
  4227  000410  0101               	movlb	1	; () banked
  4228  000412  5D0C               	subwf	sprintf@exp& (0+255),w,b
  4229  000414  A0D8               	btfss	status,0,c
  4230  000416  D04E               	goto	l5535
  4231  000418                     l5521:
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4235  000418  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  4236  00041C  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  4237  000420  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  4238  000424  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  4239  000428  0E5F               	movlw	95
  4240  00042A  0100               	movlb	0	; () banked
  4241  00042C  6F64               	movwf	___flge@ff2& (0+255),b
  4242  00042E  0E70               	movlw	112
  4243  000430  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4244  000432  0E89               	movlw	137
  4245  000434  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4246  000436  0E40               	movlw	64
  4247  000438  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4248  00043A  ECC2  F010         	call	___flge	;wreg free
  4249  00043E  0100               	movlb	0	; () banked
  4250  000440  B0D8               	btfsc	status,0,c
  4251  000442  D003               	goto	l5525
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4255  000444  0101               	movlb	1	; () banked
  4256  000446  0EF7               	movlw	247
  4257  000448  D002               	goto	L3
  4258  00044A                     l5525:
  4259                           
  4260                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4261  00044A  0101               	movlb	1	; () banked
  4262  00044C  0EF8               	movlw	248
  4263  00044E                     L3:
  4264  00044E  270C               	addwf	sprintf@exp& (0+255),f,b
  4265  000450  0EFF               	movlw	255
  4266  000452  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4267                           
  4268                           ; BSR set to: 1
  4269                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4270                           
  4271                           ; BSR set to: 1
  4272  000454  0101               	movlb	1	; () banked
  4273  000456  510C               	movf	sprintf@exp& (0+255),w,b
  4274  000458  EC96  F004         	call	_scale
  4275  00045C  C08E  F10E         	movff	?_scale,sprintf@tmpval
  4276  000460  C08F  F10F         	movff	?_scale+1,sprintf@tmpval+1
  4277  000464  C090  F110         	movff	?_scale+2,sprintf@tmpval+2
  4278  000468  C091  F111         	movff	?_scale+3,sprintf@tmpval+3
  4279  00046C  C114  F060         	movff	sprintf@fval,__div_to_l_@f1
  4280  000470  C115  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4281  000474  C116  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4282  000478  C117  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  4283  00047C  C10E  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  4284  000480  C10F  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  4285  000484  C110  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  4286  000488  C111  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  4287  00048C  EC8A  F011         	call	__div_to_l_	;wreg free
  4288  000490  C060  F108         	movff	?__div_to_l_,sprintf@val
  4289  000494  C061  F109         	movff	?__div_to_l_+1,sprintf@val+1
  4290  000498  C062  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  4291  00049C  C063  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  4292                           
  4293                           ;doprnt.c: 1129: fval = 0.0;
  4294  0004A0  0E00               	movlw	0
  4295  0004A2  0101               	movlb	1	; () banked
  4296  0004A4  6F14               	movwf	sprintf@fval& (0+255),b
  4297  0004A6  0E00               	movlw	0
  4298  0004A8  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  4299  0004AA  0E00               	movlw	0
  4300  0004AC  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  4301  0004AE  0E00               	movlw	0
  4302  0004B0  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  4303                           
  4304                           ;doprnt.c: 1130: } else {
  4305  0004B2  D03C               	goto	l5539
  4306  0004B4                     l5535:
  4307                           
  4308                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4309  0004B4  C114  F097         	movff	sprintf@fval,___fltol@f1
  4310  0004B8  C115  F098         	movff	sprintf@fval+1,___fltol@f1+1
  4311  0004BC  C116  F099         	movff	sprintf@fval+2,___fltol@f1+2
  4312  0004C0  C117  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  4313  0004C4  EC4E  F014         	call	___fltol	;wreg free
  4314  0004C8  C097  F108         	movff	?___fltol,sprintf@val
  4315  0004CC  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4316  0004D0  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4317  0004D4  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4318                           
  4319                           ;doprnt.c: 1132: fval -= (double)val;
  4320  0004D8  C114  F0AF         	movff	sprintf@fval,___flsub@b
  4321  0004DC  C115  F0B0         	movff	sprintf@fval+1,___flsub@b+1
  4322  0004E0  C116  F0B1         	movff	sprintf@fval+2,___flsub@b+2
  4323  0004E4  C117  F0B2         	movff	sprintf@fval+3,___flsub@b+3
  4324  0004E8  C108  F067         	movff	sprintf@val,___xxtofl@val
  4325  0004EC  C109  F068         	movff	sprintf@val+1,___xxtofl@val+1
  4326  0004F0  C10A  F069         	movff	sprintf@val+2,___xxtofl@val+2
  4327  0004F4  C10B  F06A         	movff	sprintf@val+3,___xxtofl@val+3
  4328  0004F8  0E00               	movlw	0
  4329  0004FA  EC0C  F00F         	call	___xxtofl
  4330  0004FE  C067  F0B3         	movff	?___xxtofl,___flsub@a
  4331  000502  C068  F0B4         	movff	?___xxtofl+1,___flsub@a+1
  4332  000506  C069  F0B5         	movff	?___xxtofl+2,___flsub@a+2
  4333  00050A  C06A  F0B6         	movff	?___xxtofl+3,___flsub@a+3
  4334  00050E  ECD4  F018         	call	___flsub	;wreg free
  4335  000512  C0AF  F114         	movff	?___flsub,sprintf@fval
  4336  000516  C0B0  F115         	movff	?___flsub+1,sprintf@fval+1
  4337  00051A  C0B1  F116         	movff	?___flsub+2,sprintf@fval+2
  4338  00051E  C0B2  F117         	movff	?___flsub+3,sprintf@fval+3
  4339                           
  4340                           ;doprnt.c: 1133: exp = 0;
  4341  000522  0E00               	movlw	0
  4342  000524  0101               	movlb	1	; () banked
  4343  000526  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  4344  000528  0E00               	movlw	0
  4345  00052A  6F0C               	movwf	sprintf@exp& (0+255),b
  4346  00052C                     l5539:
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;doprnt.c: 1134: }
  4350                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4351  00052C  0E01               	movlw	1
  4352  00052E  0101               	movlb	1	; () banked
  4353  000530  6F18               	movwf	sprintf@c& (0+255),b
  4354  000532                     l5541:
  4355                           
  4356                           ; BSR set to: 1
  4357  000532  0E0A               	movlw	10
  4358  000534  0101               	movlb	1	; () banked
  4359  000536  1918               	xorwf	sprintf@c& (0+255),w,b
  4360  000538  B4D8               	btfsc	status,2,c
  4361  00053A  D01E               	goto	l5553
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;doprnt.c: 1137: if(val < dpowers[c])
  4365                           
  4366                           ; BSR set to: 1
  4367                           
  4368                           ; BSR set to: 1
  4369  00053C  0101               	movlb	1	; () banked
  4370  00053E  5118               	movf	sprintf@c& (0+255),w,b
  4371  000540  0D04               	mullw	4
  4372  000542  0E53               	movlw	low _dpowers
  4373  000544  24F3               	addwf	prodl,w,c
  4374  000546  6EF6               	movwf	tblptrl,c
  4375  000548  0E3F               	movlw	high _dpowers
  4376  00054A  20F4               	addwfc	prodh,w,c
  4377  00054C  6EF7               	movwf	tblptrh,c
  4378  00054E                     	if	0	;There are less than 3 active tblptr bytes
  4379  00054E                     	endif
  4380  00054E  0009               	tblrd		*+
  4381  000550  50F5               	movf	tablat,w,c
  4382  000552  0101               	movlb	1	; () banked
  4383  000554  5D08               	subwf	sprintf@val& (0+255),w,b
  4384  000556  0009               	tblrd		*+
  4385  000558  50F5               	movf	tablat,w,c
  4386  00055A  0101               	movlb	1	; () banked
  4387  00055C  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  4388  00055E  0009               	tblrd		*+
  4389  000560  50F5               	movf	tablat,w,c
  4390  000562  0101               	movlb	1	; () banked
  4391  000564  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  4392  000566  0009               	tblrd		*+
  4393  000568  50F5               	movf	tablat,w,c
  4394  00056A  0101               	movlb	1	; () banked
  4395  00056C  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  4396  00056E  A0D8               	btfss	status,0,c
  4397  000570  D003               	goto	l5553
  4398                           
  4399                           ; BSR set to: 1
  4400                           
  4401                           ; BSR set to: 1
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;doprnt.c: 1138: break;
  4405  000572  0101               	movlb	1	; () banked
  4406  000574  2B18               	incf	sprintf@c& (0+255),f,b
  4407  000576  D7DD               	goto	l5541
  4408  000578                     l5553:
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;doprnt.c: 1175: {
  4412                           ;doprnt.c: 1188: if(flag & 0x03)
  4413  000578  0E03               	movlw	3
  4414  00057A  0101               	movlb	1	; () banked
  4415  00057C  1506               	andwf	sprintf@flag& (0+255),w,b
  4416  00057E  0100               	movlb	0	; () banked
  4417  000580  6FBF               	movwf	??_sprintf& (0+255),b
  4418  000582  0E00               	movlw	0
  4419  000584  0101               	movlb	1	; () banked
  4420  000586  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4421  000588  0100               	movlb	0	; () banked
  4422  00058A  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4423  00058C  0100               	movlb	0	; () banked
  4424  00058E  51BF               	movf	??_sprintf& (0+255),w,b
  4425  000590  0100               	movlb	0	; () banked
  4426  000592  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4427  000594  B4D8               	btfsc	status,2,c
  4428  000596  D055               	goto	l5567
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4432  000598  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4433  00059C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4434  0005A0  0E2D               	movlw	45
  4435  0005A2  D04D               	goto	L4
  4436  0005A4                     l5557:
  4437                           
  4438                           ; BSR set to: 0
  4439  0005A4  0100               	movlb	0	; () banked
  4440  0005A6  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4441  0005A8  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;doprnt.c: 1195: }
  4445                           ;doprnt.c: 1196: while(c--) {
  4446  0005AA  D04B               	goto	l5567
  4447  0005AC                     l5559:
  4448                           
  4449                           ;doprnt.c: 1200: {
  4450                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4451  0005AC  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4452  0005B0  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4453  0005B4  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4454  0005B8  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4455  0005BC  0101               	movlb	1	; () banked
  4456  0005BE  5118               	movf	sprintf@c& (0+255),w,b
  4457  0005C0  0D04               	mullw	4
  4458  0005C2  0E53               	movlw	low _dpowers
  4459  0005C4  24F3               	addwf	prodl,w,c
  4460  0005C6  6EF6               	movwf	tblptrl,c
  4461  0005C8  0E3F               	movlw	high _dpowers
  4462  0005CA  20F4               	addwfc	prodh,w,c
  4463  0005CC  6EF7               	movwf	tblptrh,c
  4464  0005CE                     	if	0	;There are less than 3 active tblptr bytes
  4465  0005CE                     	endif
  4466  0005CE  0009               	tblrd		*+
  4467  0005D0  CFF5 F064          	movff	tablat,___lldiv@divisor
  4468  0005D4  0009               	tblrd		*+
  4469  0005D6  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4470  0005DA  0009               	tblrd		*+
  4471  0005DC  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4472  0005E0  000A               	tblrd		*-
  4473  0005E2  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4474  0005E6  EC18  F016         	call	___lldiv	;wreg free
  4475  0005EA  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4476  0005EE  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4477  0005F2  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4478  0005F6  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4479                           
  4480                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4481  0005FA  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4482  0005FE  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4483  000602  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4484  000606  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4485  00060A  0E0A               	movlw	10
  4486  00060C  0100               	movlb	0	; () banked
  4487  00060E  6F64               	movwf	___llmod@divisor& (0+255),b
  4488  000610  0E00               	movlw	0
  4489  000612  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4490  000614  0E00               	movlw	0
  4491  000616  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4492  000618  0E00               	movlw	0
  4493  00061A  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4494  00061C  EC1B  F017         	call	___llmod	;wreg free
  4495  000620  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4496  000624  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4497  000628  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4498  00062C  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4499                           
  4500                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4501  000630  0101               	movlb	1	; () banked
  4502  000632  510E               	movf	sprintf@tmpval& (0+255),w,b
  4503  000634  0F30               	addlw	48
  4504  000636  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4505  00063A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4506  00063E                     L4:
  4507  00063E  6EDF               	movwf	indf2,c
  4508  000640  D7B1               	goto	l5557
  4509  000642                     l5567:
  4510                           
  4511                           ; BSR set to: 0
  4512  000642  0101               	movlb	1	; () banked
  4513  000644  0718               	decf	sprintf@c& (0+255),f,b
  4514  000646  0101               	movlb	1	; () banked
  4515  000648  2918               	incf	sprintf@c& (0+255),w,b
  4516  00064A  B4D8               	btfsc	status,2,c
  4517  00064C  D00E               	goto	l5575
  4518  00064E  D7AE               	goto	l5559
  4519  000650                     l5569:
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4523  000650  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4524  000654  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4525  000658  0E30               	movlw	48
  4526  00065A  6EDF               	movwf	indf2,c
  4527                           
  4528                           ; BSR set to: 1
  4529  00065C  0100               	movlb	0	; () banked
  4530  00065E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4531  000660  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;doprnt.c: 1209: exp--;
  4535  000662  0101               	movlb	1	; () banked
  4536  000664  070C               	decf	sprintf@exp& (0+255),f,b
  4537  000666  A0D8               	btfss	status,0,c
  4538  000668  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4539  00066A                     l5575:
  4540                           
  4541                           ; BSR set to: 1
  4542  00066A  0101               	movlb	1	; () banked
  4543  00066C  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4544  00066E  D007               	goto	l5577
  4545  000670  0101               	movlb	1	; () banked
  4546  000672  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4547  000674  E1ED               	bnz	l5569
  4548  000676  0101               	movlb	1	; () banked
  4549  000678  050C               	decf	sprintf@exp& (0+255),w,b
  4550  00067A  B0D8               	btfsc	status,0,c
  4551  00067C  D7E9               	goto	l5569
  4552  00067E                     l5577:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;doprnt.c: 1210: }
  4556                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4557  00067E  0101               	movlb	1	; () banked
  4558  000680  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4559  000682  D00C               	goto	l409
  4560  000684  0101               	movlb	1	; () banked
  4561  000686  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4562  000688  E105               	bnz	u6640
  4563  00068A  0E09               	movlw	9
  4564  00068C  0101               	movlb	1	; () banked
  4565  00068E  5D12               	subwf	sprintf@prec& (0+255),w,b
  4566  000690  A0D8               	btfss	status,0,c
  4567  000692  D004               	goto	l409
  4568  000694                     u6640:
  4569                           
  4570                           ; BSR set to: 1
  4571                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4572  000694  0E08               	movlw	8
  4573  000696  0101               	movlb	1	; () banked
  4574  000698  6F18               	movwf	sprintf@c& (0+255),b
  4575  00069A  D002               	goto	l5581
  4576  00069C                     l409:
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;doprnt.c: 1213: else
  4580                           ;doprnt.c: 1214: c = prec;
  4581  00069C  C112  F118         	movff	sprintf@prec,sprintf@c
  4582  0006A0                     l5581:
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;doprnt.c: 1215: prec -= c;
  4586  0006A0  0101               	movlb	1	; () banked
  4587  0006A2  5118               	movf	sprintf@c& (0+255),w,b
  4588  0006A4  0101               	movlb	1	; () banked
  4589  0006A6  5F12               	subwf	sprintf@prec& (0+255),f,b
  4590  0006A8  0E00               	movlw	0
  4591  0006AA  0101               	movlb	1	; () banked
  4592  0006AC  BF18               	btfsc	sprintf@c& (0+255),7,b
  4593  0006AE  0EFF               	movlw	255
  4594  0006B0  0101               	movlb	1	; () banked
  4595  0006B2  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4596                           
  4597                           ; BSR set to: 1
  4598                           ;doprnt.c: 1219: if(c)
  4599  0006B4  0101               	movlb	1	; () banked
  4600  0006B6  5118               	movf	sprintf@c& (0+255),w,b
  4601  0006B8  0101               	movlb	1	; () banked
  4602  0006BA  B4D8               	btfsc	status,2,c
  4603  0006BC  D009               	goto	l5589
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4607  0006BE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4608  0006C2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4609  0006C6  0E2E               	movlw	46
  4610  0006C8  6EDF               	movwf	indf2,c
  4611                           
  4612                           ; BSR set to: 1
  4613  0006CA  0100               	movlb	0	; () banked
  4614  0006CC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4615  0006CE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4616  0006D0                     l5589:
  4617                           
  4618                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4619  0006D0  0101               	movlb	1	; () banked
  4620  0006D2  5118               	movf	sprintf@c& (0+255),w,b
  4621  0006D4  EC96  F004         	call	_scale
  4622  0006D8  C08E  F100         	movff	?_scale,_sprintf$2399
  4623  0006DC  C08F  F101         	movff	?_scale+1,_sprintf$2399+1
  4624  0006E0  C090  F102         	movff	?_scale+2,_sprintf$2399+2
  4625  0006E4  C091  F103         	movff	?_scale+3,_sprintf$2399+3
  4626                           
  4627                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4628  0006E8  C114  F079         	movff	sprintf@fval,___flmul@a
  4629  0006EC  C115  F07A         	movff	sprintf@fval+1,___flmul@a+1
  4630  0006F0  C116  F07B         	movff	sprintf@fval+2,___flmul@a+2
  4631  0006F4  C117  F07C         	movff	sprintf@fval+3,___flmul@a+3
  4632  0006F8  C100  F075         	movff	_sprintf$2399,___flmul@b
  4633  0006FC  C101  F076         	movff	_sprintf$2399+1,___flmul@b+1
  4634  000700  C102  F077         	movff	_sprintf$2399+2,___flmul@b+2
  4635  000704  C103  F078         	movff	_sprintf$2399+3,___flmul@b+3
  4636  000708  EC53  F009         	call	___flmul	;wreg free
  4637  00070C  C075  F097         	movff	?___flmul,___fltol@f1
  4638  000710  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  4639  000714  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  4640  000718  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  4641  00071C  EC4E  F014         	call	___fltol	;wreg free
  4642  000720  C097  F108         	movff	?___fltol,sprintf@val
  4643  000724  C098  F109         	movff	?___fltol+1,sprintf@val+1
  4644  000728  C099  F10A         	movff	?___fltol+2,sprintf@val+2
  4645  00072C  C09A  F10B         	movff	?___fltol+3,sprintf@val+3
  4646                           
  4647                           ;doprnt.c: 1228: while(c--) {
  4648  000730  D074               	goto	l5603
  4649  000732                     l5593:
  4650                           
  4651                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4652  000732  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4653  000736  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4654  00073A  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4655  00073E  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4656  000742  0101               	movlb	1	; () banked
  4657  000744  5118               	movf	sprintf@c& (0+255),w,b
  4658  000746  0D04               	mullw	4
  4659  000748  0E53               	movlw	low _dpowers
  4660  00074A  24F3               	addwf	prodl,w,c
  4661  00074C  6EF6               	movwf	tblptrl,c
  4662  00074E  0E3F               	movlw	high _dpowers
  4663  000750  20F4               	addwfc	prodh,w,c
  4664  000752  6EF7               	movwf	tblptrh,c
  4665  000754                     	if	0	;There are less than 3 active tblptr bytes
  4666  000754                     	endif
  4667  000754  0009               	tblrd		*+
  4668  000756  CFF5 F064          	movff	tablat,___lldiv@divisor
  4669  00075A  0009               	tblrd		*+
  4670  00075C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4671  000760  0009               	tblrd		*+
  4672  000762  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4673  000766  000A               	tblrd		*-
  4674  000768  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4675  00076C  EC18  F016         	call	___lldiv	;wreg free
  4676  000770  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4677  000774  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4678  000778  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4679  00077C  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4680                           
  4681                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4682  000780  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4683  000784  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4684  000788  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4685  00078C  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4686  000790  0E0A               	movlw	10
  4687  000792  0100               	movlb	0	; () banked
  4688  000794  6F64               	movwf	___llmod@divisor& (0+255),b
  4689  000796  0E00               	movlw	0
  4690  000798  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4691  00079A  0E00               	movlw	0
  4692  00079C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4693  00079E  0E00               	movlw	0
  4694  0007A0  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4695  0007A2  EC1B  F017         	call	___llmod	;wreg free
  4696  0007A6  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4697  0007AA  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4698  0007AE  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4699  0007B2  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4700                           
  4701                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4702  0007B6  0101               	movlb	1	; () banked
  4703  0007B8  510E               	movf	sprintf@tmpval& (0+255),w,b
  4704  0007BA  0F30               	addlw	48
  4705  0007BC  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4706  0007C0  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4707  0007C4  6EDF               	movwf	indf2,c
  4708                           
  4709                           ; BSR set to: 1
  4710  0007C6  0100               	movlb	0	; () banked
  4711  0007C8  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4712  0007CA  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;doprnt.c: 1232: val %= dpowers[c];
  4716  0007CC  C108  F060         	movff	sprintf@val,___llmod@dividend
  4717  0007D0  C109  F061         	movff	sprintf@val+1,___llmod@dividend+1
  4718  0007D4  C10A  F062         	movff	sprintf@val+2,___llmod@dividend+2
  4719  0007D8  C10B  F063         	movff	sprintf@val+3,___llmod@dividend+3
  4720  0007DC  0101               	movlb	1	; () banked
  4721  0007DE  5118               	movf	sprintf@c& (0+255),w,b
  4722  0007E0  0D04               	mullw	4
  4723  0007E2  0E53               	movlw	low _dpowers
  4724  0007E4  24F3               	addwf	prodl,w,c
  4725  0007E6  6EF6               	movwf	tblptrl,c
  4726  0007E8  0E3F               	movlw	high _dpowers
  4727  0007EA  20F4               	addwfc	prodh,w,c
  4728  0007EC  6EF7               	movwf	tblptrh,c
  4729  0007EE                     	if	0	;There are less than 3 active tblptr bytes
  4730  0007EE                     	endif
  4731  0007EE  0009               	tblrd		*+
  4732  0007F0  CFF5 F064          	movff	tablat,___llmod@divisor
  4733  0007F4  0009               	tblrd		*+
  4734  0007F6  CFF5 F065          	movff	tablat,___llmod@divisor+1
  4735  0007FA  0009               	tblrd		*+
  4736  0007FC  CFF5 F066          	movff	tablat,___llmod@divisor+2
  4737  000800  000A               	tblrd		*-
  4738  000802  CFF5 F067          	movff	tablat,___llmod@divisor+3
  4739  000806  EC1B  F017         	call	___llmod	;wreg free
  4740  00080A  C060  F108         	movff	?___llmod,sprintf@val
  4741  00080E  C061  F109         	movff	?___llmod+1,sprintf@val+1
  4742  000812  C062  F10A         	movff	?___llmod+2,sprintf@val+2
  4743  000816  C063  F10B         	movff	?___llmod+3,sprintf@val+3
  4744  00081A                     l5603:
  4745  00081A  0101               	movlb	1	; () banked
  4746  00081C  0718               	decf	sprintf@c& (0+255),f,b
  4747  00081E  0101               	movlb	1	; () banked
  4748  000820  2918               	incf	sprintf@c& (0+255),w,b
  4749  000822  B4D8               	btfsc	status,2,c
  4750  000824  D00E               	goto	l5611
  4751  000826  D785               	goto	l5593
  4752  000828                     l5605:
  4753                           
  4754                           ; BSR set to: 1
  4755                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4756  000828  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4757  00082C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4758  000830  0E30               	movlw	48
  4759  000832  6EDF               	movwf	indf2,c
  4760                           
  4761                           ; BSR set to: 1
  4762  000834  0100               	movlb	0	; () banked
  4763  000836  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4764  000838  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;doprnt.c: 1237: prec--;
  4768  00083A  0101               	movlb	1	; () banked
  4769  00083C  0712               	decf	sprintf@prec& (0+255),f,b
  4770  00083E  A0D8               	btfss	status,0,c
  4771  000840  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4772  000842                     l5611:
  4773                           
  4774                           ; BSR set to: 1
  4775  000842  0101               	movlb	1	; () banked
  4776  000844  5112               	movf	sprintf@prec& (0+255),w,b
  4777  000846  0101               	movlb	1	; () banked
  4778  000848  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4779  00084A  B4D8               	btfsc	status,2,c
  4780  00084C  D059               	goto	l5633
  4781  00084E  D7EC               	goto	l5605
  4782  000850                     l5613:
  4783                           
  4784                           ; BSR set to: 1
  4785                           ;doprnt.c: 1246: }
  4786                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4787  000850  0101               	movlb	1	; () banked
  4788  000852  5112               	movf	sprintf@prec& (0+255),w,b
  4789  000854  0101               	movlb	1	; () banked
  4790  000856  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4791  000858  A4D8               	btfss	status,2,c
  4792  00085A  D00D               	goto	l5619
  4793                           
  4794                           ; BSR set to: 1
  4795  00085C  0101               	movlb	1	; () banked
  4796  00085E  5108               	movf	sprintf@val& (0+255),w,b
  4797  000860  0101               	movlb	1	; () banked
  4798  000862  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4799  000864  0101               	movlb	1	; () banked
  4800  000866  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4801  000868  0101               	movlb	1	; () banked
  4802  00086A  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4803  00086C  A4D8               	btfss	status,2,c
  4804  00086E  D003               	goto	l5619
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;doprnt.c: 1291: prec++;
  4808  000870  0101               	movlb	1	; () banked
  4809  000872  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4810  000874  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4811  000876                     l5619:
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;doprnt.c: 1339: if(c < prec)
  4815  000876  0E80               	movlw	128
  4816  000878  0101               	movlb	1	; () banked
  4817  00087A  BF18               	btfsc	sprintf@c& (0+255),7,b
  4818  00087C  0E7F               	movlw	127
  4819  00087E  0100               	movlb	0	; () banked
  4820  000880  6FBF               	movwf	??_sprintf& (0+255),b
  4821  000882  0101               	movlb	1	; () banked
  4822  000884  5112               	movf	sprintf@prec& (0+255),w,b
  4823  000886  0101               	movlb	1	; () banked
  4824  000888  5D18               	subwf	sprintf@c& (0+255),w,b
  4825  00088A  0101               	movlb	1	; () banked
  4826  00088C  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4827  00088E  0A80               	xorlw	128
  4828  000890  0100               	movlb	0	; () banked
  4829  000892  59BF               	subwfb	??_sprintf& (0+255),w,b
  4830  000894  B0D8               	btfsc	status,0,c
  4831  000896  D003               	goto	l5623
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;doprnt.c: 1340: c = prec;
  4835  000898  C112  F118         	movff	sprintf@prec,sprintf@c
  4836  00089C  D018               	goto	l5627
  4837  00089E                     l5623:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;doprnt.c: 1341: else if(prec < c)
  4841  00089E  0101               	movlb	1	; () banked
  4842  0008A0  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4843  0008A2  0A80               	xorlw	128
  4844  0008A4  0100               	movlb	0	; () banked
  4845  0008A6  6FBF               	movwf	??_sprintf& (0+255),b
  4846  0008A8  0101               	movlb	1	; () banked
  4847  0008AA  5118               	movf	sprintf@c& (0+255),w,b
  4848  0008AC  0101               	movlb	1	; () banked
  4849  0008AE  5D12               	subwf	sprintf@prec& (0+255),w,b
  4850  0008B0  0E80               	movlw	128
  4851  0008B2  0101               	movlb	1	; () banked
  4852  0008B4  BF18               	btfsc	sprintf@c& (0+255),7,b
  4853  0008B6  0E7F               	movlw	127
  4854  0008B8  0100               	movlb	0	; () banked
  4855  0008BA  59BF               	subwfb	??_sprintf& (0+255),w,b
  4856  0008BC  B0D8               	btfsc	status,0,c
  4857  0008BE  D007               	goto	l5627
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;doprnt.c: 1342: prec = c;
  4861  0008C0  0101               	movlb	1	; () banked
  4862  0008C2  5118               	movf	sprintf@c& (0+255),w,b
  4863  0008C4  0101               	movlb	1	; () banked
  4864  0008C6  6F12               	movwf	sprintf@prec& (0+255),b
  4865  0008C8  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4866  0008CA  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4867  0008CC  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4868  0008CE                     l5627:
  4869                           
  4870                           ;doprnt.c: 1422: {
  4871                           ;doprnt.c: 1438: if(flag & 0x03)
  4872  0008CE  0E03               	movlw	3
  4873  0008D0  0101               	movlb	1	; () banked
  4874  0008D2  1506               	andwf	sprintf@flag& (0+255),w,b
  4875  0008D4  0100               	movlb	0	; () banked
  4876  0008D6  6FBF               	movwf	??_sprintf& (0+255),b
  4877  0008D8  0E00               	movlw	0
  4878  0008DA  0101               	movlb	1	; () banked
  4879  0008DC  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4880  0008DE  0100               	movlb	0	; () banked
  4881  0008E0  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  4882  0008E2  0100               	movlb	0	; () banked
  4883  0008E4  51BF               	movf	??_sprintf& (0+255),w,b
  4884  0008E6  0100               	movlb	0	; () banked
  4885  0008E8  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  4886  0008EA  B4D8               	btfsc	status,2,c
  4887  0008EC  D009               	goto	l5633
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4891  0008EE  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4892  0008F2  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4893  0008F6  0E2D               	movlw	45
  4894  0008F8  6EDF               	movwf	indf2,c
  4895  0008FA                     l5631:
  4896                           
  4897                           ; BSR set to: 0
  4898  0008FA  0100               	movlb	0	; () banked
  4899  0008FC  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  4900  0008FE  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  4901  000900                     l5633:
  4902  000900  C0B9  FFF6         	movff	sprintf@f,tblptrl
  4903  000904  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  4904  000908  0100               	movlb	0	; () banked
  4905  00090A  4BB9               	infsnz	sprintf@f& (0+255),f,b
  4906  00090C  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  4907  00090E                     	if	0	;tblptru may be non-zero
  4908  00090E                     	endif
  4909  00090E                     	if	0	;tblptru may be non-zero
  4910  00090E                     	endif
  4911  00090E  0008               	tblrd		*
  4912  000910  CFF5 F118          	movff	tablat,sprintf@c
  4913  000914  0101               	movlb	1	; () banked
  4914  000916  5118               	movf	sprintf@c& (0+255),w,b
  4915  000918  A4D8               	btfss	status,2,c
  4916  00091A  EF6A  F000         	goto	l5435
  4917  00091E                     l5635:
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;doprnt.c: 1538: *sp = 0;
  4921  00091E  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  4922  000922  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  4923  000926  0E00               	movlw	0
  4924  000928  6EDF               	movwf	indf2,c
  4925  00092A  0012               	return	
  4926  00092C                     __end_of_sprintf:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           postinc0	equ	0xFEE
  4936                           wreg	equ	0xFE8
  4937                           indf1	equ	0xFE7
  4938                           postinc1	equ	0xFE6
  4939                           fsr1h	equ	0xFE2
  4940                           fsr1l	equ	0xFE1
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           fsr2h	equ	0xFDA
  4944                           fsr2l	equ	0xFD9
  4945                           status	equ	0xFD8
  4946                           
  4947 ;; *************** function _scale *****************
  4948 ;; Defined at:
  4949 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  scl             1    wreg     char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  scl             1   54[BANK0 ] char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  4   46[BANK0 ] char 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4963 ;;      Params:         0       4       0       0
  4964 ;;      Locals:         0       5       0       0
  4965 ;;      Temps:          0       0       0       0
  4966 ;;      Totals:         0       9       0       0
  4967 ;;Total ram usage:        9 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    4
  4970 ;; This function calls:
  4971 ;;		___awdiv
  4972 ;;		___awmod
  4973 ;;		___flmul
  4974 ;; This function is called by:
  4975 ;;		_sprintf
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text15
  4980  00092C                     __ptext15:
  4981                           	opt stack 0
  4982  00092C                     _scale:
  4983                           	opt stack 24
  4984                           
  4985                           ; BSR set to: 1
  4986                           ;incstack = 0
  4987                           ;scale@scl stored from wreg
  4988  00092C  0100               	movlb	0	; () banked
  4989  00092E  6F96               	movwf	scale@scl& (0+255),b
  4990                           
  4991                           ;doprnt.c: 428: if(scl < 0) {
  4992  000930  0100               	movlb	0	; () banked
  4993  000932  AF96               	btfss	scale@scl& (0+255),7,b
  4994  000934  D133               	goto	l5035
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;doprnt.c: 429: scl = -scl;
  4998  000936  0100               	movlb	0	; () banked
  4999  000938  6D96               	negf	scale@scl& (0+255),b
  5000                           
  5001                           ;doprnt.c: 430: if(scl>=110)
  5002  00093A  0100               	movlb	0	; () banked
  5003  00093C  5196               	movf	scale@scl& (0+255),w,b
  5004  00093E  0A80               	xorlw	128
  5005  000940  0F12               	addlw	-238
  5006  000942  A0D8               	btfss	status,0,c
  5007  000944  D0B2               	goto	l5025
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5011  000946  0E00               	movlw	0
  5012  000948  0100               	movlb	0	; () banked
  5013  00094A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5014  00094C  0E0A               	movlw	10
  5015  00094E  6F68               	movwf	___awdiv@divisor& (0+255),b
  5016  000950  0E00               	movlw	0
  5017  000952  0100               	movlb	0	; () banked
  5018  000954  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5019  000956  0E64               	movlw	100
  5020  000958  6F62               	movwf	___awmod@divisor& (0+255),b
  5021  00095A  0100               	movlb	0	; () banked
  5022  00095C  5196               	movf	scale@scl& (0+255),w,b
  5023  00095E  0100               	movlb	0	; () banked
  5024  000960  6F60               	movwf	___awmod@dividend& (0+255),b
  5025  000962  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5026  000964  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5027  000966  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5028  000968  ECCA  F016         	call	___awmod	;wreg free
  5029  00096C  C060  F066         	movff	?___awmod,___awdiv@dividend
  5030  000970  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5031  000974  ECB9  F015         	call	___awdiv	;wreg free
  5032  000978  0100               	movlb	0	; () banked
  5033  00097A  90D8               	bcf	status,0,c
  5034  00097C  3766               	rlcf	?___awdiv& (0+255),f,b
  5035  00097E  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5036  000980  0100               	movlb	0	; () banked
  5037  000982  90D8               	bcf	status,0,c
  5038  000984  3766               	rlcf	?___awdiv& (0+255),f,b
  5039  000986  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5040  000988  0E24               	movlw	36
  5041  00098A  0100               	movlb	0	; () banked
  5042  00098C  2766               	addwf	?___awdiv& (0+255),f,b
  5043  00098E  0E00               	movlw	0
  5044  000990  0100               	movlb	0	; () banked
  5045  000992  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5046  000994  0EEB               	movlw	low __npowers_
  5047  000996  0100               	movlb	0	; () banked
  5048  000998  2566               	addwf	?___awdiv& (0+255),w,b
  5049  00099A  6EF6               	movwf	tblptrl,c
  5050  00099C  0E3E               	movlw	high __npowers_
  5051  00099E  0100               	movlb	0	; () banked
  5052  0009A0  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5053  0009A2  6EF7               	movwf	tblptrh,c
  5054  0009A4                     	if	0	;There are less than 3 active tblptr bytes
  5055  0009A4                     	endif
  5056  0009A4  0009               	tblrd		*+
  5057  0009A6  CFF5 F079          	movff	tablat,___flmul@a
  5058  0009AA  0009               	tblrd		*+
  5059  0009AC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5060  0009B0  0009               	tblrd		*+
  5061  0009B2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5062  0009B6  000A               	tblrd		*-
  5063  0009B8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5064  0009BC  0E00               	movlw	0
  5065  0009BE  0100               	movlb	0	; () banked
  5066  0009C0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5067  0009C2  0E64               	movlw	100
  5068  0009C4  6F68               	movwf	___awdiv@divisor& (0+255),b
  5069  0009C6  0100               	movlb	0	; () banked
  5070  0009C8  5196               	movf	scale@scl& (0+255),w,b
  5071  0009CA  0100               	movlb	0	; () banked
  5072  0009CC  6F66               	movwf	___awdiv@dividend& (0+255),b
  5073  0009CE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5074  0009D0  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5075  0009D2  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5076  0009D4  ECB9  F015         	call	___awdiv	;wreg free
  5077  0009D8  0100               	movlb	0	; () banked
  5078  0009DA  90D8               	bcf	status,0,c
  5079  0009DC  3766               	rlcf	?___awdiv& (0+255),f,b
  5080  0009DE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5081  0009E0  0100               	movlb	0	; () banked
  5082  0009E2  90D8               	bcf	status,0,c
  5083  0009E4  3766               	rlcf	?___awdiv& (0+255),f,b
  5084  0009E6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5085  0009E8  0E48               	movlw	72
  5086  0009EA  0100               	movlb	0	; () banked
  5087  0009EC  2766               	addwf	?___awdiv& (0+255),f,b
  5088  0009EE  0E00               	movlw	0
  5089  0009F0  0100               	movlb	0	; () banked
  5090  0009F2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5091  0009F4  0EEB               	movlw	low __npowers_
  5092  0009F6  0100               	movlb	0	; () banked
  5093  0009F8  2566               	addwf	?___awdiv& (0+255),w,b
  5094  0009FA  6EF6               	movwf	tblptrl,c
  5095  0009FC  0E3E               	movlw	high __npowers_
  5096  0009FE  0100               	movlb	0	; () banked
  5097  000A00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5098  000A02  6EF7               	movwf	tblptrh,c
  5099  000A04                     	if	0	;There are less than 3 active tblptr bytes
  5100  000A04                     	endif
  5101  000A04  0009               	tblrd		*+
  5102  000A06  CFF5 F075          	movff	tablat,___flmul@b
  5103  000A0A  0009               	tblrd		*+
  5104  000A0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5105  000A10  0009               	tblrd		*+
  5106  000A12  CFF5 F077          	movff	tablat,___flmul@b+2
  5107  000A16  000A               	tblrd		*-
  5108  000A18  CFF5 F078          	movff	tablat,___flmul@b+3
  5109  000A1C  EC53  F009         	call	___flmul	;wreg free
  5110  000A20  C075  F092         	movff	?___flmul,_scale$2398
  5111  000A24  C076  F093         	movff	?___flmul+1,_scale$2398+1
  5112  000A28  C077  F094         	movff	?___flmul+2,_scale$2398+2
  5113  000A2C  C078  F095         	movff	?___flmul+3,_scale$2398+3
  5114                           
  5115                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5116  000A30  C092  F075         	movff	_scale$2398,___flmul@b
  5117  000A34  C093  F076         	movff	_scale$2398+1,___flmul@b+1
  5118  000A38  C094  F077         	movff	_scale$2398+2,___flmul@b+2
  5119  000A3C  C095  F078         	movff	_scale$2398+3,___flmul@b+3
  5120  000A40  0E00               	movlw	0
  5121  000A42  0100               	movlb	0	; () banked
  5122  000A44  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5123  000A46  0E0A               	movlw	10
  5124  000A48  6F62               	movwf	___awmod@divisor& (0+255),b
  5125  000A4A  0100               	movlb	0	; () banked
  5126  000A4C  5196               	movf	scale@scl& (0+255),w,b
  5127  000A4E  0100               	movlb	0	; () banked
  5128  000A50  6F60               	movwf	___awmod@dividend& (0+255),b
  5129  000A52  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5130  000A54  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5131  000A56  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5132  000A58  ECCA  F016         	call	___awmod	;wreg free
  5133  000A5C  0100               	movlb	0	; () banked
  5134  000A5E  90D8               	bcf	status,0,c
  5135  000A60  3760               	rlcf	?___awmod& (0+255),f,b
  5136  000A62  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5137  000A64  0100               	movlb	0	; () banked
  5138  000A66  90D8               	bcf	status,0,c
  5139  000A68  3760               	rlcf	?___awmod& (0+255),f,b
  5140  000A6A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5141  000A6C  0EEB               	movlw	low __npowers_
  5142  000A6E  0100               	movlb	0	; () banked
  5143  000A70  2560               	addwf	?___awmod& (0+255),w,b
  5144  000A72  6EF6               	movwf	tblptrl,c
  5145  000A74  0E3E               	movlw	high __npowers_
  5146  000A76  0100               	movlb	0	; () banked
  5147  000A78  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5148  000A7A  6EF7               	movwf	tblptrh,c
  5149  000A7C                     	if	0	;There are less than 3 active tblptr bytes
  5150  000A7C                     	endif
  5151  000A7C  0009               	tblrd		*+
  5152  000A7E  CFF5 F079          	movff	tablat,___flmul@a
  5153  000A82  0009               	tblrd		*+
  5154  000A84  CFF5 F07A          	movff	tablat,___flmul@a+1
  5155  000A88  0009               	tblrd		*+
  5156  000A8A  CFF5 F07B          	movff	tablat,___flmul@a+2
  5157  000A8E  000A               	tblrd		*-
  5158  000A90  CFF5 F07C          	movff	tablat,___flmul@a+3
  5159  000A94  EC53  F009         	call	___flmul	;wreg free
  5160  000A98  C075  F08E         	movff	?___flmul,?_scale
  5161  000A9C  C076  F08F         	movff	?___flmul+1,?_scale+1
  5162  000AA0  C077  F090         	movff	?___flmul+2,?_scale+2
  5163  000AA4  C078  F091         	movff	?___flmul+3,?_scale+3
  5164  000AA8  0012               	return	
  5165  000AAA                     l5025:
  5166                           
  5167                           ;doprnt.c: 432: else if(scl > 10)
  5168  000AAA  0100               	movlb	0	; () banked
  5169  000AAC  5196               	movf	scale@scl& (0+255),w,b
  5170  000AAE  0A80               	xorlw	128
  5171  000AB0  0F75               	addlw	-139
  5172  000AB2  A0D8               	btfss	status,0,c
  5173  000AB4  D05D               	goto	l5031
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5177  000AB6  0E00               	movlw	0
  5178  000AB8  0100               	movlb	0	; () banked
  5179  000ABA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5180  000ABC  0E0A               	movlw	10
  5181  000ABE  6F68               	movwf	___awdiv@divisor& (0+255),b
  5182  000AC0  0100               	movlb	0	; () banked
  5183  000AC2  5196               	movf	scale@scl& (0+255),w,b
  5184  000AC4  0100               	movlb	0	; () banked
  5185  000AC6  6F66               	movwf	___awdiv@dividend& (0+255),b
  5186  000AC8  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5187  000ACA  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5188  000ACC  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5189  000ACE  ECB9  F015         	call	___awdiv	;wreg free
  5190  000AD2  0100               	movlb	0	; () banked
  5191  000AD4  90D8               	bcf	status,0,c
  5192  000AD6  3766               	rlcf	?___awdiv& (0+255),f,b
  5193  000AD8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5194  000ADA  0100               	movlb	0	; () banked
  5195  000ADC  90D8               	bcf	status,0,c
  5196  000ADE  3766               	rlcf	?___awdiv& (0+255),f,b
  5197  000AE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5198  000AE2  0E24               	movlw	36
  5199  000AE4  0100               	movlb	0	; () banked
  5200  000AE6  2766               	addwf	?___awdiv& (0+255),f,b
  5201  000AE8  0E00               	movlw	0
  5202  000AEA  0100               	movlb	0	; () banked
  5203  000AEC  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5204  000AEE  0EEB               	movlw	low __npowers_
  5205  000AF0  0100               	movlb	0	; () banked
  5206  000AF2  2566               	addwf	?___awdiv& (0+255),w,b
  5207  000AF4  6EF6               	movwf	tblptrl,c
  5208  000AF6  0E3E               	movlw	high __npowers_
  5209  000AF8  0100               	movlb	0	; () banked
  5210  000AFA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5211  000AFC  6EF7               	movwf	tblptrh,c
  5212  000AFE                     	if	0	;There are less than 3 active tblptr bytes
  5213  000AFE                     	endif
  5214  000AFE  0009               	tblrd		*+
  5215  000B00  CFF5 F075          	movff	tablat,___flmul@b
  5216  000B04  0009               	tblrd		*+
  5217  000B06  CFF5 F076          	movff	tablat,___flmul@b+1
  5218  000B0A  0009               	tblrd		*+
  5219  000B0C  CFF5 F077          	movff	tablat,___flmul@b+2
  5220  000B10  000A               	tblrd		*-
  5221  000B12  CFF5 F078          	movff	tablat,___flmul@b+3
  5222  000B16  0E00               	movlw	0
  5223  000B18  0100               	movlb	0	; () banked
  5224  000B1A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5225  000B1C  0E0A               	movlw	10
  5226  000B1E  6F62               	movwf	___awmod@divisor& (0+255),b
  5227  000B20  0100               	movlb	0	; () banked
  5228  000B22  5196               	movf	scale@scl& (0+255),w,b
  5229  000B24  0100               	movlb	0	; () banked
  5230  000B26  6F60               	movwf	___awmod@dividend& (0+255),b
  5231  000B28  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5232  000B2A  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5233  000B2C  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5234  000B2E  ECCA  F016         	call	___awmod	;wreg free
  5235  000B32  0100               	movlb	0	; () banked
  5236  000B34  90D8               	bcf	status,0,c
  5237  000B36  3760               	rlcf	?___awmod& (0+255),f,b
  5238  000B38  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5239  000B3A  0100               	movlb	0	; () banked
  5240  000B3C  90D8               	bcf	status,0,c
  5241  000B3E  3760               	rlcf	?___awmod& (0+255),f,b
  5242  000B40  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5243  000B42  0EEB               	movlw	low __npowers_
  5244  000B44  0100               	movlb	0	; () banked
  5245  000B46  2560               	addwf	?___awmod& (0+255),w,b
  5246  000B48  6EF6               	movwf	tblptrl,c
  5247  000B4A  0E3E               	movlw	high __npowers_
  5248  000B4C  0100               	movlb	0	; () banked
  5249  000B4E  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5250  000B50  6EF7               	movwf	tblptrh,c
  5251  000B52                     	if	0	;There are less than 3 active tblptr bytes
  5252  000B52                     	endif
  5253  000B52  0009               	tblrd		*+
  5254  000B54  CFF5 F079          	movff	tablat,___flmul@a
  5255  000B58  0009               	tblrd		*+
  5256  000B5A  CFF5 F07A          	movff	tablat,___flmul@a+1
  5257  000B5E  0009               	tblrd		*+
  5258  000B60  CFF5 F07B          	movff	tablat,___flmul@a+2
  5259  000B64  000A               	tblrd		*-
  5260  000B66  CFF5 F07C          	movff	tablat,___flmul@a+3
  5261  000B6A  EC53  F009         	call	___flmul	;wreg free
  5262  000B6E  D794               	goto	L5
  5263  000B70                     l5031:
  5264                           
  5265                           ;doprnt.c: 434: return _npowers_[scl];
  5266  000B70  0100               	movlb	0	; () banked
  5267  000B72  5196               	movf	scale@scl& (0+255),w,b
  5268  000B74  0D04               	mullw	4
  5269  000B76  0EEB               	movlw	low __npowers_
  5270  000B78  24F3               	addwf	prodl,w,c
  5271  000B7A  6EF6               	movwf	tblptrl,c
  5272  000B7C  0E3E               	movlw	high __npowers_
  5273  000B7E  20F4               	addwfc	prodh,w,c
  5274  000B80  6EF7               	movwf	tblptrh,c
  5275  000B82                     	if	0	;There are less than 3 active tblptr bytes
  5276  000B82                     	endif
  5277  000B82  0009               	tblrd		*+
  5278  000B84  CFF5 F08E          	movff	tablat,?_scale
  5279  000B88  0009               	tblrd		*+
  5280  000B8A  CFF5 F08F          	movff	tablat,?_scale+1
  5281  000B8E  0009               	tblrd		*+
  5282  000B90  CFF5 F090          	movff	tablat,?_scale+2
  5283  000B94  000A               	tblrd		*-
  5284  000B96  CFF5 F091          	movff	tablat,?_scale+3
  5285                           
  5286                           ; BSR set to: 0
  5287  000B9A  0012               	return	
  5288  000B9C                     l5035:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;doprnt.c: 435: }
  5292                           ;doprnt.c: 436: if(scl>=110)
  5293  000B9C  0100               	movlb	0	; () banked
  5294  000B9E  5196               	movf	scale@scl& (0+255),w,b
  5295  000BA0  0A80               	xorlw	128
  5296  000BA2  0F12               	addlw	-238
  5297  000BA4  A0D8               	btfss	status,0,c
  5298  000BA6  D0B2               	goto	l5043
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5302  000BA8  0E00               	movlw	0
  5303  000BAA  0100               	movlb	0	; () banked
  5304  000BAC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5305  000BAE  0E0A               	movlw	10
  5306  000BB0  6F68               	movwf	___awdiv@divisor& (0+255),b
  5307  000BB2  0E00               	movlw	0
  5308  000BB4  0100               	movlb	0	; () banked
  5309  000BB6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5310  000BB8  0E64               	movlw	100
  5311  000BBA  6F62               	movwf	___awmod@divisor& (0+255),b
  5312  000BBC  0100               	movlb	0	; () banked
  5313  000BBE  5196               	movf	scale@scl& (0+255),w,b
  5314  000BC0  0100               	movlb	0	; () banked
  5315  000BC2  6F60               	movwf	___awmod@dividend& (0+255),b
  5316  000BC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5317  000BC6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5318  000BC8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5319  000BCA  ECCA  F016         	call	___awmod	;wreg free
  5320  000BCE  C060  F066         	movff	?___awmod,___awdiv@dividend
  5321  000BD2  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5322  000BD6  ECB9  F015         	call	___awdiv	;wreg free
  5323  000BDA  0100               	movlb	0	; () banked
  5324  000BDC  90D8               	bcf	status,0,c
  5325  000BDE  3766               	rlcf	?___awdiv& (0+255),f,b
  5326  000BE0  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5327  000BE2  0100               	movlb	0	; () banked
  5328  000BE4  90D8               	bcf	status,0,c
  5329  000BE6  3766               	rlcf	?___awdiv& (0+255),f,b
  5330  000BE8  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5331  000BEA  0E24               	movlw	36
  5332  000BEC  0100               	movlb	0	; () banked
  5333  000BEE  2766               	addwf	?___awdiv& (0+255),f,b
  5334  000BF0  0E00               	movlw	0
  5335  000BF2  0100               	movlb	0	; () banked
  5336  000BF4  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5337  000BF6  0E1F               	movlw	low __powers_
  5338  000BF8  0100               	movlb	0	; () banked
  5339  000BFA  2566               	addwf	?___awdiv& (0+255),w,b
  5340  000BFC  6EF6               	movwf	tblptrl,c
  5341  000BFE  0E3F               	movlw	high __powers_
  5342  000C00  0100               	movlb	0	; () banked
  5343  000C02  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5344  000C04  6EF7               	movwf	tblptrh,c
  5345  000C06                     	if	0	;There are less than 3 active tblptr bytes
  5346  000C06                     	endif
  5347  000C06  0009               	tblrd		*+
  5348  000C08  CFF5 F079          	movff	tablat,___flmul@a
  5349  000C0C  0009               	tblrd		*+
  5350  000C0E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5351  000C12  0009               	tblrd		*+
  5352  000C14  CFF5 F07B          	movff	tablat,___flmul@a+2
  5353  000C18  000A               	tblrd		*-
  5354  000C1A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5355  000C1E  0E00               	movlw	0
  5356  000C20  0100               	movlb	0	; () banked
  5357  000C22  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5358  000C24  0E64               	movlw	100
  5359  000C26  6F68               	movwf	___awdiv@divisor& (0+255),b
  5360  000C28  0100               	movlb	0	; () banked
  5361  000C2A  5196               	movf	scale@scl& (0+255),w,b
  5362  000C2C  0100               	movlb	0	; () banked
  5363  000C2E  6F66               	movwf	___awdiv@dividend& (0+255),b
  5364  000C30  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5365  000C32  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5366  000C34  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5367  000C36  ECB9  F015         	call	___awdiv	;wreg free
  5368  000C3A  0100               	movlb	0	; () banked
  5369  000C3C  90D8               	bcf	status,0,c
  5370  000C3E  3766               	rlcf	?___awdiv& (0+255),f,b
  5371  000C40  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5372  000C42  0100               	movlb	0	; () banked
  5373  000C44  90D8               	bcf	status,0,c
  5374  000C46  3766               	rlcf	?___awdiv& (0+255),f,b
  5375  000C48  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5376  000C4A  0E48               	movlw	72
  5377  000C4C  0100               	movlb	0	; () banked
  5378  000C4E  2766               	addwf	?___awdiv& (0+255),f,b
  5379  000C50  0E00               	movlw	0
  5380  000C52  0100               	movlb	0	; () banked
  5381  000C54  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5382  000C56  0E1F               	movlw	low __powers_
  5383  000C58  0100               	movlb	0	; () banked
  5384  000C5A  2566               	addwf	?___awdiv& (0+255),w,b
  5385  000C5C  6EF6               	movwf	tblptrl,c
  5386  000C5E  0E3F               	movlw	high __powers_
  5387  000C60  0100               	movlb	0	; () banked
  5388  000C62  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5389  000C64  6EF7               	movwf	tblptrh,c
  5390  000C66                     	if	0	;There are less than 3 active tblptr bytes
  5391  000C66                     	endif
  5392  000C66  0009               	tblrd		*+
  5393  000C68  CFF5 F075          	movff	tablat,___flmul@b
  5394  000C6C  0009               	tblrd		*+
  5395  000C6E  CFF5 F076          	movff	tablat,___flmul@b+1
  5396  000C72  0009               	tblrd		*+
  5397  000C74  CFF5 F077          	movff	tablat,___flmul@b+2
  5398  000C78  000A               	tblrd		*-
  5399  000C7A  CFF5 F078          	movff	tablat,___flmul@b+3
  5400  000C7E  EC53  F009         	call	___flmul	;wreg free
  5401  000C82  C075  F092         	movff	?___flmul,_scale$2398
  5402  000C86  C076  F093         	movff	?___flmul+1,_scale$2398+1
  5403  000C8A  C077  F094         	movff	?___flmul+2,_scale$2398+2
  5404  000C8E  C078  F095         	movff	?___flmul+3,_scale$2398+3
  5405                           
  5406                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5407  000C92  C092  F075         	movff	_scale$2398,___flmul@b
  5408  000C96  C093  F076         	movff	_scale$2398+1,___flmul@b+1
  5409  000C9A  C094  F077         	movff	_scale$2398+2,___flmul@b+2
  5410  000C9E  C095  F078         	movff	_scale$2398+3,___flmul@b+3
  5411  000CA2  0E00               	movlw	0
  5412  000CA4  0100               	movlb	0	; () banked
  5413  000CA6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5414  000CA8  0E0A               	movlw	10
  5415  000CAA  6F62               	movwf	___awmod@divisor& (0+255),b
  5416  000CAC  0100               	movlb	0	; () banked
  5417  000CAE  5196               	movf	scale@scl& (0+255),w,b
  5418  000CB0  0100               	movlb	0	; () banked
  5419  000CB2  6F60               	movwf	___awmod@dividend& (0+255),b
  5420  000CB4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5421  000CB6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5422  000CB8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5423  000CBA  ECCA  F016         	call	___awmod	;wreg free
  5424  000CBE  0100               	movlb	0	; () banked
  5425  000CC0  90D8               	bcf	status,0,c
  5426  000CC2  3760               	rlcf	?___awmod& (0+255),f,b
  5427  000CC4  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5428  000CC6  0100               	movlb	0	; () banked
  5429  000CC8  90D8               	bcf	status,0,c
  5430  000CCA  3760               	rlcf	?___awmod& (0+255),f,b
  5431  000CCC  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5432  000CCE  0E1F               	movlw	low __powers_
  5433  000CD0  0100               	movlb	0	; () banked
  5434  000CD2  2560               	addwf	?___awmod& (0+255),w,b
  5435  000CD4  6EF6               	movwf	tblptrl,c
  5436  000CD6  0E3F               	movlw	high __powers_
  5437  000CD8  0100               	movlb	0	; () banked
  5438  000CDA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5439  000CDC  6EF7               	movwf	tblptrh,c
  5440  000CDE                     	if	0	;There are less than 3 active tblptr bytes
  5441  000CDE                     	endif
  5442  000CDE  0009               	tblrd		*+
  5443  000CE0  CFF5 F079          	movff	tablat,___flmul@a
  5444  000CE4  0009               	tblrd		*+
  5445  000CE6  CFF5 F07A          	movff	tablat,___flmul@a+1
  5446  000CEA  0009               	tblrd		*+
  5447  000CEC  CFF5 F07B          	movff	tablat,___flmul@a+2
  5448  000CF0  000A               	tblrd		*-
  5449  000CF2  CFF5 F07C          	movff	tablat,___flmul@a+3
  5450  000CF6  EC53  F009         	call	___flmul	;wreg free
  5451  000CFA  C075  F08E         	movff	?___flmul,?_scale
  5452  000CFE  C076  F08F         	movff	?___flmul+1,?_scale+1
  5453  000D02  C077  F090         	movff	?___flmul+2,?_scale+2
  5454  000D06  C078  F091         	movff	?___flmul+3,?_scale+3
  5455  000D0A  0012               	return	
  5456  000D0C                     l5043:
  5457                           
  5458                           ;doprnt.c: 438: else if(scl > 10)
  5459  000D0C  0100               	movlb	0	; () banked
  5460  000D0E  5196               	movf	scale@scl& (0+255),w,b
  5461  000D10  0A80               	xorlw	128
  5462  000D12  0F75               	addlw	-139
  5463  000D14  A0D8               	btfss	status,0,c
  5464  000D16  D05D               	goto	l5049
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5468  000D18  0E00               	movlw	0
  5469  000D1A  0100               	movlb	0	; () banked
  5470  000D1C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5471  000D1E  0E0A               	movlw	10
  5472  000D20  6F68               	movwf	___awdiv@divisor& (0+255),b
  5473  000D22  0100               	movlb	0	; () banked
  5474  000D24  5196               	movf	scale@scl& (0+255),w,b
  5475  000D26  0100               	movlb	0	; () banked
  5476  000D28  6F66               	movwf	___awdiv@dividend& (0+255),b
  5477  000D2A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5478  000D2C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  5479  000D2E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5480  000D30  ECB9  F015         	call	___awdiv	;wreg free
  5481  000D34  0100               	movlb	0	; () banked
  5482  000D36  90D8               	bcf	status,0,c
  5483  000D38  3766               	rlcf	?___awdiv& (0+255),f,b
  5484  000D3A  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5485  000D3C  0100               	movlb	0	; () banked
  5486  000D3E  90D8               	bcf	status,0,c
  5487  000D40  3766               	rlcf	?___awdiv& (0+255),f,b
  5488  000D42  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5489  000D44  0E24               	movlw	36
  5490  000D46  0100               	movlb	0	; () banked
  5491  000D48  2766               	addwf	?___awdiv& (0+255),f,b
  5492  000D4A  0E00               	movlw	0
  5493  000D4C  0100               	movlb	0	; () banked
  5494  000D4E  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5495  000D50  0E1F               	movlw	low __powers_
  5496  000D52  0100               	movlb	0	; () banked
  5497  000D54  2566               	addwf	?___awdiv& (0+255),w,b
  5498  000D56  6EF6               	movwf	tblptrl,c
  5499  000D58  0E3F               	movlw	high __powers_
  5500  000D5A  0100               	movlb	0	; () banked
  5501  000D5C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5502  000D5E  6EF7               	movwf	tblptrh,c
  5503  000D60                     	if	0	;There are less than 3 active tblptr bytes
  5504  000D60                     	endif
  5505  000D60  0009               	tblrd		*+
  5506  000D62  CFF5 F075          	movff	tablat,___flmul@b
  5507  000D66  0009               	tblrd		*+
  5508  000D68  CFF5 F076          	movff	tablat,___flmul@b+1
  5509  000D6C  0009               	tblrd		*+
  5510  000D6E  CFF5 F077          	movff	tablat,___flmul@b+2
  5511  000D72  000A               	tblrd		*-
  5512  000D74  CFF5 F078          	movff	tablat,___flmul@b+3
  5513  000D78  0E00               	movlw	0
  5514  000D7A  0100               	movlb	0	; () banked
  5515  000D7C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5516  000D7E  0E0A               	movlw	10
  5517  000D80  6F62               	movwf	___awmod@divisor& (0+255),b
  5518  000D82  0100               	movlb	0	; () banked
  5519  000D84  5196               	movf	scale@scl& (0+255),w,b
  5520  000D86  0100               	movlb	0	; () banked
  5521  000D88  6F60               	movwf	___awmod@dividend& (0+255),b
  5522  000D8A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5523  000D8C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5524  000D8E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5525  000D90  ECCA  F016         	call	___awmod	;wreg free
  5526  000D94  0100               	movlb	0	; () banked
  5527  000D96  90D8               	bcf	status,0,c
  5528  000D98  3760               	rlcf	?___awmod& (0+255),f,b
  5529  000D9A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5530  000D9C  0100               	movlb	0	; () banked
  5531  000D9E  90D8               	bcf	status,0,c
  5532  000DA0  3760               	rlcf	?___awmod& (0+255),f,b
  5533  000DA2  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5534  000DA4  0E1F               	movlw	low __powers_
  5535  000DA6  0100               	movlb	0	; () banked
  5536  000DA8  2560               	addwf	?___awmod& (0+255),w,b
  5537  000DAA  6EF6               	movwf	tblptrl,c
  5538  000DAC  0E3F               	movlw	high __powers_
  5539  000DAE  0100               	movlb	0	; () banked
  5540  000DB0  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5541  000DB2  6EF7               	movwf	tblptrh,c
  5542  000DB4                     	if	0	;There are less than 3 active tblptr bytes
  5543  000DB4                     	endif
  5544  000DB4  0009               	tblrd		*+
  5545  000DB6  CFF5 F079          	movff	tablat,___flmul@a
  5546  000DBA  0009               	tblrd		*+
  5547  000DBC  CFF5 F07A          	movff	tablat,___flmul@a+1
  5548  000DC0  0009               	tblrd		*+
  5549  000DC2  CFF5 F07B          	movff	tablat,___flmul@a+2
  5550  000DC6  000A               	tblrd		*-
  5551  000DC8  CFF5 F07C          	movff	tablat,___flmul@a+3
  5552  000DCC  EC53  F009         	call	___flmul	;wreg free
  5553  000DD0  D794               	goto	L6
  5554  000DD2                     l5049:
  5555                           
  5556                           ;doprnt.c: 440: return _powers_[scl];
  5557  000DD2  0100               	movlb	0	; () banked
  5558  000DD4  5196               	movf	scale@scl& (0+255),w,b
  5559  000DD6  0D04               	mullw	4
  5560  000DD8  0E1F               	movlw	low __powers_
  5561  000DDA  24F3               	addwf	prodl,w,c
  5562  000DDC  6EF6               	movwf	tblptrl,c
  5563  000DDE  0E3F               	movlw	high __powers_
  5564  000DE0  20F4               	addwfc	prodh,w,c
  5565  000DE2  6EF7               	movwf	tblptrh,c
  5566  000DE4                     	if	0	;There are less than 3 active tblptr bytes
  5567  000DE4                     	endif
  5568  000DE4  0009               	tblrd		*+
  5569  000DE6  CFF5 F08E          	movff	tablat,?_scale
  5570  000DEA  0009               	tblrd		*+
  5571  000DEC  CFF5 F08F          	movff	tablat,?_scale+1
  5572  000DF0  0009               	tblrd		*+
  5573  000DF2  CFF5 F090          	movff	tablat,?_scale+2
  5574  000DF6  000A               	tblrd		*-
  5575  000DF8  CFF5 F091          	movff	tablat,?_scale+3
  5576  000DFC  0012               	return	
  5577  000DFE                     __end_of_scale:
  5578                           	opt stack 0
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           intcon	equ	0xFF2
  5586                           postinc0	equ	0xFEE
  5587                           wreg	equ	0xFE8
  5588                           indf1	equ	0xFE7
  5589                           postinc1	equ	0xFE6
  5590                           fsr1h	equ	0xFE2
  5591                           fsr1l	equ	0xFE1
  5592                           indf2	equ	0xFDF
  5593                           postinc2	equ	0xFDE
  5594                           fsr2h	equ	0xFDA
  5595                           fsr2l	equ	0xFD9
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function _isdigit *****************
  5599 ;; Defined at:
  5600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  c               1    wreg     unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  c               1    2[BANK0 ] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;		None               void
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5614 ;;      Params:         0       0       0       0
  5615 ;;      Locals:         0       2       0       0
  5616 ;;      Temps:          0       1       0       0
  5617 ;;      Totals:         0       3       0       0
  5618 ;;Total ram usage:        3 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    3
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_sprintf
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text16
  5629  0033D4                     __ptext16:
  5630                           	opt stack 0
  5631  0033D4                     _isdigit:
  5632                           	opt stack 25
  5633                           
  5634                           ;incstack = 0
  5635                           ;isdigit@c stored from wreg
  5636  0033D4  0100               	movlb	0	; () banked
  5637  0033D6  6F62               	movwf	isdigit@c& (0+255),b
  5638  0033D8  0E00               	movlw	0
  5639  0033DA  0100               	movlb	0	; () banked
  5640  0033DC  6F61               	movwf	_isdigit$2005& (0+255),b
  5641                           
  5642                           ; BSR set to: 0
  5643  0033DE  0E3A               	movlw	58
  5644  0033E0  0100               	movlb	0	; () banked
  5645  0033E2  6162               	cpfslt	isdigit@c& (0+255),b
  5646  0033E4  D007               	goto	l5061
  5647                           
  5648                           ; BSR set to: 0
  5649  0033E6  0E2F               	movlw	47
  5650  0033E8  0100               	movlb	0	; () banked
  5651  0033EA  6562               	cpfsgt	isdigit@c& (0+255),b
  5652  0033EC  D003               	goto	l5061
  5653                           
  5654                           ; BSR set to: 0
  5655  0033EE  0E01               	movlw	1
  5656  0033F0  0100               	movlb	0	; () banked
  5657  0033F2  6F61               	movwf	_isdigit$2005& (0+255),b
  5658  0033F4                     l5061:
  5659                           
  5660                           ; BSR set to: 0
  5661  0033F4  C061  F060         	movff	_isdigit$2005,??_isdigit
  5662  0033F8  0100               	movlb	0	; () banked
  5663  0033FA  3160               	rrcf	??_isdigit& (0+255),w,b
  5664  0033FC  0012               	return	
  5665  0033FE                     __end_of_isdigit:
  5666                           	opt stack 0
  5667                           tblptru	equ	0xFF8
  5668                           tblptrh	equ	0xFF7
  5669                           tblptrl	equ	0xFF6
  5670                           tablat	equ	0xFF5
  5671                           prodh	equ	0xFF4
  5672                           prodl	equ	0xFF3
  5673                           intcon	equ	0xFF2
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           indf1	equ	0xFE7
  5677                           postinc1	equ	0xFE6
  5678                           fsr1h	equ	0xFE2
  5679                           fsr1l	equ	0xFE1
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function _fround *****************
  5687 ;; Defined at:
  5688 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  prec            1    wreg     unsigned char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  prec            1   58[BANK0 ] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  4   46[BANK0 ] unsigned char 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5702 ;;      Params:         0       4       0       0
  5703 ;;      Locals:         0       9       0       0
  5704 ;;      Temps:          0       0       0       0
  5705 ;;      Totals:         0      13       0       0
  5706 ;;Total ram usage:       13 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    4
  5709 ;; This function calls:
  5710 ;;		___awdiv
  5711 ;;		___awmod
  5712 ;;		___flmul
  5713 ;; This function is called by:
  5714 ;;		_sprintf
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text17
  5719  001B46                     __ptext17:
  5720                           	opt stack 0
  5721  001B46                     _fround:
  5722                           	opt stack 24
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;incstack = 0
  5726                           ;fround@prec stored from wreg
  5727  001B46  0100               	movlb	0	; () banked
  5728  001B48  6F9A               	movwf	fround@prec& (0+255),b
  5729                           
  5730                           ;doprnt.c: 413: if(prec>=110)
  5731  001B4A  0E6D               	movlw	109
  5732  001B4C  0100               	movlb	0	; () banked
  5733  001B4E  659A               	cpfsgt	fround@prec& (0+255),b
  5734  001B50  D0C4               	goto	l5003
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5738  001B52  0E00               	movlw	0
  5739  001B54  0100               	movlb	0	; () banked
  5740  001B56  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5741  001B58  0E0A               	movlw	10
  5742  001B5A  6F68               	movwf	___awdiv@divisor& (0+255),b
  5743  001B5C  0E00               	movlw	0
  5744  001B5E  0100               	movlb	0	; () banked
  5745  001B60  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5746  001B62  0E64               	movlw	100
  5747  001B64  6F62               	movwf	___awmod@divisor& (0+255),b
  5748  001B66  C09A  F060         	movff	fround@prec,___awmod@dividend
  5749  001B6A  0100               	movlb	0	; () banked
  5750  001B6C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5751  001B6E  ECCA  F016         	call	___awmod	;wreg free
  5752  001B72  C060  F066         	movff	?___awmod,___awdiv@dividend
  5753  001B76  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5754  001B7A  ECB9  F015         	call	___awdiv	;wreg free
  5755  001B7E  0100               	movlb	0	; () banked
  5756  001B80  90D8               	bcf	status,0,c
  5757  001B82  3766               	rlcf	?___awdiv& (0+255),f,b
  5758  001B84  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5759  001B86  0100               	movlb	0	; () banked
  5760  001B88  90D8               	bcf	status,0,c
  5761  001B8A  3766               	rlcf	?___awdiv& (0+255),f,b
  5762  001B8C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5763  001B8E  0E24               	movlw	36
  5764  001B90  0100               	movlb	0	; () banked
  5765  001B92  2766               	addwf	?___awdiv& (0+255),f,b
  5766  001B94  0E00               	movlw	0
  5767  001B96  0100               	movlb	0	; () banked
  5768  001B98  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5769  001B9A  0EEB               	movlw	low __npowers_
  5770  001B9C  0100               	movlb	0	; () banked
  5771  001B9E  2566               	addwf	?___awdiv& (0+255),w,b
  5772  001BA0  6EF6               	movwf	tblptrl,c
  5773  001BA2  0E3E               	movlw	high __npowers_
  5774  001BA4  0100               	movlb	0	; () banked
  5775  001BA6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5776  001BA8  6EF7               	movwf	tblptrh,c
  5777  001BAA                     	if	0	;There are less than 3 active tblptr bytes
  5778  001BAA                     	endif
  5779  001BAA  0009               	tblrd		*+
  5780  001BAC  CFF5 F079          	movff	tablat,___flmul@a
  5781  001BB0  0009               	tblrd		*+
  5782  001BB2  CFF5 F07A          	movff	tablat,___flmul@a+1
  5783  001BB6  0009               	tblrd		*+
  5784  001BB8  CFF5 F07B          	movff	tablat,___flmul@a+2
  5785  001BBC  000A               	tblrd		*-
  5786  001BBE  CFF5 F07C          	movff	tablat,___flmul@a+3
  5787  001BC2  0E00               	movlw	0
  5788  001BC4  0100               	movlb	0	; () banked
  5789  001BC6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5790  001BC8  0E64               	movlw	100
  5791  001BCA  6F68               	movwf	___awdiv@divisor& (0+255),b
  5792  001BCC  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5793  001BD0  0100               	movlb	0	; () banked
  5794  001BD2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5795  001BD4  ECB9  F015         	call	___awdiv	;wreg free
  5796  001BD8  0100               	movlb	0	; () banked
  5797  001BDA  90D8               	bcf	status,0,c
  5798  001BDC  3766               	rlcf	?___awdiv& (0+255),f,b
  5799  001BDE  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5800  001BE0  0100               	movlb	0	; () banked
  5801  001BE2  90D8               	bcf	status,0,c
  5802  001BE4  3766               	rlcf	?___awdiv& (0+255),f,b
  5803  001BE6  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5804  001BE8  0E48               	movlw	72
  5805  001BEA  0100               	movlb	0	; () banked
  5806  001BEC  2766               	addwf	?___awdiv& (0+255),f,b
  5807  001BEE  0E00               	movlw	0
  5808  001BF0  0100               	movlb	0	; () banked
  5809  001BF2  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5810  001BF4  0EEB               	movlw	low __npowers_
  5811  001BF6  0100               	movlb	0	; () banked
  5812  001BF8  2566               	addwf	?___awdiv& (0+255),w,b
  5813  001BFA  6EF6               	movwf	tblptrl,c
  5814  001BFC  0E3E               	movlw	high __npowers_
  5815  001BFE  0100               	movlb	0	; () banked
  5816  001C00  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5817  001C02  6EF7               	movwf	tblptrh,c
  5818  001C04                     	if	0	;There are less than 3 active tblptr bytes
  5819  001C04                     	endif
  5820  001C04  0009               	tblrd		*+
  5821  001C06  CFF5 F075          	movff	tablat,___flmul@b
  5822  001C0A  0009               	tblrd		*+
  5823  001C0C  CFF5 F076          	movff	tablat,___flmul@b+1
  5824  001C10  0009               	tblrd		*+
  5825  001C12  CFF5 F077          	movff	tablat,___flmul@b+2
  5826  001C16  000A               	tblrd		*-
  5827  001C18  CFF5 F078          	movff	tablat,___flmul@b+3
  5828  001C1C  EC53  F009         	call	___flmul	;wreg free
  5829  001C20  C075  F096         	movff	?___flmul,_fround$2396
  5830  001C24  C076  F097         	movff	?___flmul+1,_fround$2396+1
  5831  001C28  C077  F098         	movff	?___flmul+2,_fround$2396+2
  5832  001C2C  C078  F099         	movff	?___flmul+3,_fround$2396+3
  5833                           
  5834                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5835  001C30  0E00               	movlw	0
  5836  001C32  0100               	movlb	0	; () banked
  5837  001C34  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5838  001C36  0E0A               	movlw	10
  5839  001C38  6F62               	movwf	___awmod@divisor& (0+255),b
  5840  001C3A  C09A  F060         	movff	fround@prec,___awmod@dividend
  5841  001C3E  0100               	movlb	0	; () banked
  5842  001C40  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5843  001C42  ECCA  F016         	call	___awmod	;wreg free
  5844  001C46  0100               	movlb	0	; () banked
  5845  001C48  90D8               	bcf	status,0,c
  5846  001C4A  3760               	rlcf	?___awmod& (0+255),f,b
  5847  001C4C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5848  001C4E  0100               	movlb	0	; () banked
  5849  001C50  90D8               	bcf	status,0,c
  5850  001C52  3760               	rlcf	?___awmod& (0+255),f,b
  5851  001C54  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5852  001C56  0EEB               	movlw	low __npowers_
  5853  001C58  0100               	movlb	0	; () banked
  5854  001C5A  2560               	addwf	?___awmod& (0+255),w,b
  5855  001C5C  6EF6               	movwf	tblptrl,c
  5856  001C5E  0E3E               	movlw	high __npowers_
  5857  001C60  0100               	movlb	0	; () banked
  5858  001C62  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5859  001C64  6EF7               	movwf	tblptrh,c
  5860  001C66                     	if	0	;There are less than 3 active tblptr bytes
  5861  001C66                     	endif
  5862  001C66  0009               	tblrd		*+
  5863  001C68  CFF5 F079          	movff	tablat,___flmul@a
  5864  001C6C  0009               	tblrd		*+
  5865  001C6E  CFF5 F07A          	movff	tablat,___flmul@a+1
  5866  001C72  0009               	tblrd		*+
  5867  001C74  CFF5 F07B          	movff	tablat,___flmul@a+2
  5868  001C78  000A               	tblrd		*-
  5869  001C7A  CFF5 F07C          	movff	tablat,___flmul@a+3
  5870  001C7E  C096  F075         	movff	_fround$2396,___flmul@b
  5871  001C82  C097  F076         	movff	_fround$2396+1,___flmul@b+1
  5872  001C86  C098  F077         	movff	_fround$2396+2,___flmul@b+2
  5873  001C8A  C099  F078         	movff	_fround$2396+3,___flmul@b+3
  5874  001C8E  EC53  F009         	call	___flmul	;wreg free
  5875  001C92  C075  F092         	movff	?___flmul,_fround$2397
  5876  001C96  C076  F093         	movff	?___flmul+1,_fround$2397+1
  5877  001C9A  C077  F094         	movff	?___flmul+2,_fround$2397+2
  5878  001C9E  C078  F095         	movff	?___flmul+3,_fround$2397+3
  5879                           
  5880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5881  001CA2  C092  F075         	movff	_fround$2397,___flmul@b
  5882  001CA6  C093  F076         	movff	_fround$2397+1,___flmul@b+1
  5883  001CAA  C094  F077         	movff	_fround$2397+2,___flmul@b+2
  5884  001CAE  C095  F078         	movff	_fround$2397+3,___flmul@b+3
  5885  001CB2  0E00               	movlw	0
  5886  001CB4  0100               	movlb	0	; () banked
  5887  001CB6  6F79               	movwf	___flmul@a& (0+255),b
  5888  001CB8  0E00               	movlw	0
  5889  001CBA  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5890  001CBC  0E00               	movlw	0
  5891  001CBE  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5892  001CC0  0E3F               	movlw	63
  5893  001CC2  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5894  001CC4  EC53  F009         	call	___flmul	;wreg free
  5895  001CC8  C075  F08E         	movff	?___flmul,?_fround
  5896  001CCC  C076  F08F         	movff	?___flmul+1,?_fround+1
  5897  001CD0  C077  F090         	movff	?___flmul+2,?_fround+2
  5898  001CD4  C078  F091         	movff	?___flmul+3,?_fround+3
  5899  001CD8  0012               	return	
  5900  001CDA                     l5003:
  5901                           
  5902                           ;doprnt.c: 415: else if(prec > 10)
  5903  001CDA  0E0A               	movlw	10
  5904  001CDC  0100               	movlb	0	; () banked
  5905  001CDE  659A               	cpfsgt	fround@prec& (0+255),b
  5906  001CE0  D072               	goto	l5011
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5910  001CE2  0E00               	movlw	0
  5911  001CE4  0100               	movlb	0	; () banked
  5912  001CE6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5913  001CE8  0E0A               	movlw	10
  5914  001CEA  6F62               	movwf	___awmod@divisor& (0+255),b
  5915  001CEC  C09A  F060         	movff	fround@prec,___awmod@dividend
  5916  001CF0  0100               	movlb	0	; () banked
  5917  001CF2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5918  001CF4  ECCA  F016         	call	___awmod	;wreg free
  5919  001CF8  0100               	movlb	0	; () banked
  5920  001CFA  90D8               	bcf	status,0,c
  5921  001CFC  3760               	rlcf	?___awmod& (0+255),f,b
  5922  001CFE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5923  001D00  0100               	movlb	0	; () banked
  5924  001D02  90D8               	bcf	status,0,c
  5925  001D04  3760               	rlcf	?___awmod& (0+255),f,b
  5926  001D06  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  5927  001D08  0EEB               	movlw	low __npowers_
  5928  001D0A  0100               	movlb	0	; () banked
  5929  001D0C  2560               	addwf	?___awmod& (0+255),w,b
  5930  001D0E  6EF6               	movwf	tblptrl,c
  5931  001D10  0E3E               	movlw	high __npowers_
  5932  001D12  0100               	movlb	0	; () banked
  5933  001D14  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  5934  001D16  6EF7               	movwf	tblptrh,c
  5935  001D18                     	if	0	;There are less than 3 active tblptr bytes
  5936  001D18                     	endif
  5937  001D18  0009               	tblrd		*+
  5938  001D1A  CFF5 F079          	movff	tablat,___flmul@a
  5939  001D1E  0009               	tblrd		*+
  5940  001D20  CFF5 F07A          	movff	tablat,___flmul@a+1
  5941  001D24  0009               	tblrd		*+
  5942  001D26  CFF5 F07B          	movff	tablat,___flmul@a+2
  5943  001D2A  000A               	tblrd		*-
  5944  001D2C  CFF5 F07C          	movff	tablat,___flmul@a+3
  5945  001D30  0E00               	movlw	0
  5946  001D32  0100               	movlb	0	; () banked
  5947  001D34  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5948  001D36  0E0A               	movlw	10
  5949  001D38  6F68               	movwf	___awdiv@divisor& (0+255),b
  5950  001D3A  C09A  F066         	movff	fround@prec,___awdiv@dividend
  5951  001D3E  0100               	movlb	0	; () banked
  5952  001D40  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  5953  001D42  ECB9  F015         	call	___awdiv	;wreg free
  5954  001D46  0100               	movlb	0	; () banked
  5955  001D48  90D8               	bcf	status,0,c
  5956  001D4A  3766               	rlcf	?___awdiv& (0+255),f,b
  5957  001D4C  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5958  001D4E  0100               	movlb	0	; () banked
  5959  001D50  90D8               	bcf	status,0,c
  5960  001D52  3766               	rlcf	?___awdiv& (0+255),f,b
  5961  001D54  3767               	rlcf	(?___awdiv+1)& (0+255),f,b
  5962  001D56  0E24               	movlw	36
  5963  001D58  0100               	movlb	0	; () banked
  5964  001D5A  2766               	addwf	?___awdiv& (0+255),f,b
  5965  001D5C  0E00               	movlw	0
  5966  001D5E  0100               	movlb	0	; () banked
  5967  001D60  2367               	addwfc	(?___awdiv+1)& (0+255),f,b
  5968  001D62  0EEB               	movlw	low __npowers_
  5969  001D64  0100               	movlb	0	; () banked
  5970  001D66  2566               	addwf	?___awdiv& (0+255),w,b
  5971  001D68  6EF6               	movwf	tblptrl,c
  5972  001D6A  0E3E               	movlw	high __npowers_
  5973  001D6C  0100               	movlb	0	; () banked
  5974  001D6E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5975  001D70  6EF7               	movwf	tblptrh,c
  5976  001D72                     	if	0	;There are less than 3 active tblptr bytes
  5977  001D72                     	endif
  5978  001D72  0009               	tblrd		*+
  5979  001D74  CFF5 F075          	movff	tablat,___flmul@b
  5980  001D78  0009               	tblrd		*+
  5981  001D7A  CFF5 F076          	movff	tablat,___flmul@b+1
  5982  001D7E  0009               	tblrd		*+
  5983  001D80  CFF5 F077          	movff	tablat,___flmul@b+2
  5984  001D84  000A               	tblrd		*-
  5985  001D86  CFF5 F078          	movff	tablat,___flmul@b+3
  5986  001D8A  EC53  F009         	call	___flmul	;wreg free
  5987  001D8E  C075  F096         	movff	?___flmul,_fround$2396
  5988  001D92  C076  F097         	movff	?___flmul+1,_fround$2396+1
  5989  001D96  C077  F098         	movff	?___flmul+2,_fround$2396+2
  5990  001D9A  C078  F099         	movff	?___flmul+3,_fround$2396+3
  5991                           
  5992                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5993  001D9E  C096  F075         	movff	_fround$2396,___flmul@b
  5994  001DA2  C097  F076         	movff	_fround$2396+1,___flmul@b+1
  5995  001DA6  C098  F077         	movff	_fround$2396+2,___flmul@b+2
  5996  001DAA  C099  F078         	movff	_fround$2396+3,___flmul@b+3
  5997  001DAE  0E00               	movlw	0
  5998  001DB0  0100               	movlb	0	; () banked
  5999  001DB2  6F79               	movwf	___flmul@a& (0+255),b
  6000  001DB4  0E00               	movlw	0
  6001  001DB6  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6002  001DB8  0E00               	movlw	0
  6003  001DBA  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6004  001DBC  0E3F               	movlw	63
  6005  001DBE  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6006  001DC0  EC53  F009         	call	___flmul	;wreg free
  6007  001DC4  D781               	goto	L7
  6008  001DC6                     l5011:
  6009                           
  6010                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6011  001DC6  0100               	movlb	0	; () banked
  6012  001DC8  519A               	movf	fround@prec& (0+255),w,b
  6013  001DCA  0D04               	mullw	4
  6014  001DCC  0EEB               	movlw	low __npowers_
  6015  001DCE  24F3               	addwf	prodl,w,c
  6016  001DD0  6EF6               	movwf	tblptrl,c
  6017  001DD2  0E3E               	movlw	high __npowers_
  6018  001DD4  20F4               	addwfc	prodh,w,c
  6019  001DD6  6EF7               	movwf	tblptrh,c
  6020  001DD8                     	if	0	;There are less than 3 active tblptr bytes
  6021  001DD8                     	endif
  6022  001DD8  0009               	tblrd		*+
  6023  001DDA  CFF5 F075          	movff	tablat,___flmul@b
  6024  001DDE  0009               	tblrd		*+
  6025  001DE0  CFF5 F076          	movff	tablat,___flmul@b+1
  6026  001DE4  0009               	tblrd		*+
  6027  001DE6  CFF5 F077          	movff	tablat,___flmul@b+2
  6028  001DEA  000A               	tblrd		*-
  6029  001DEC  CFF5 F078          	movff	tablat,___flmul@b+3
  6030  001DF0  0E00               	movlw	0
  6031  001DF2  0100               	movlb	0	; () banked
  6032  001DF4  6F79               	movwf	___flmul@a& (0+255),b
  6033  001DF6  0E00               	movlw	0
  6034  001DF8  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6035  001DFA  0E00               	movlw	0
  6036  001DFC  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6037  001DFE  0E3F               	movlw	63
  6038  001E00  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6039  001E02  EC53  F009         	call	___flmul	;wreg free
  6040  001E06  C075  F08E         	movff	?___flmul,?_fround
  6041  001E0A  C076  F08F         	movff	?___flmul+1,?_fround+1
  6042  001E0E  C077  F090         	movff	?___flmul+2,?_fround+2
  6043  001E12  C078  F091         	movff	?___flmul+3,?_fround+3
  6044  001E16  0012               	return	
  6045  001E18                     __end_of_fround:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           indf1	equ	0xFE7
  6057                           postinc1	equ	0xFE6
  6058                           fsr1h	equ	0xFE2
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function ___flmul *****************
  6067 ;; Defined at:
  6068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  b               4   21[BANK0 ] unsigned char 
  6071 ;;  a               4   25[BANK0 ] unsigned char 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  prod            4   40[BANK0 ] struct .
  6074 ;;  grs             4   35[BANK0 ] unsigned long 
  6075 ;;  temp            2   44[BANK0 ] struct .
  6076 ;;  bexp            1   39[BANK0 ] unsigned char 
  6077 ;;  aexp            1   34[BANK0 ] unsigned char 
  6078 ;;  sign            1   33[BANK0 ] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  4   21[BANK0 ] unsigned char 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0, prodl, prodh
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6088 ;;      Params:         0       8       0       0
  6089 ;;      Locals:         0      13       0       0
  6090 ;;      Temps:          0       4       0       0
  6091 ;;      Totals:         0      25       0       0
  6092 ;;Total ram usage:       25 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    3
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_main
  6099 ;;		_fround
  6100 ;;		_scale
  6101 ;;		_sprintf
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text18
  6106  0012A6                     __ptext18:
  6107                           	opt stack 0
  6108  0012A6                     ___flmul:
  6109                           	opt stack 27
  6110                           
  6111                           ;incstack = 0
  6112  0012A6  0100               	movlb	0	; () banked
  6113  0012A8  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6114  0012AA  0B80               	andlw	128
  6115  0012AC  0100               	movlb	0	; () banked
  6116  0012AE  6F81               	movwf	___flmul@sign& (0+255),b
  6117  0012B0  0100               	movlb	0	; () banked
  6118  0012B2  5178               	movf	(___flmul@b+3)& (0+255),w,b
  6119  0012B4  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  6120  0012B6  0100               	movlb	0	; () banked
  6121  0012B8  6F87               	movwf	___flmul@bexp& (0+255),b
  6122                           
  6123                           ; BSR set to: 0
  6124  0012BA  0100               	movlb	0	; () banked
  6125  0012BC  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  6126  0012BE  D002               	goto	l4765
  6127                           
  6128                           ; BSR set to: 0
  6129  0012C0  0100               	movlb	0	; () banked
  6130  0012C2  8187               	bsf	___flmul@bexp& (0+255),0,b
  6131  0012C4                     l4765:
  6132                           
  6133                           ; BSR set to: 0
  6134  0012C4  0100               	movlb	0	; () banked
  6135  0012C6  5187               	movf	___flmul@bexp& (0+255),w,b
  6136  0012C8  0100               	movlb	0	; () banked
  6137  0012CA  B4D8               	btfsc	status,2,c
  6138  0012CC  D010               	goto	l4773
  6139                           
  6140                           ; BSR set to: 0
  6141  0012CE  0100               	movlb	0	; () banked
  6142  0012D0  2987               	incf	___flmul@bexp& (0+255),w,b
  6143  0012D2  A4D8               	btfss	status,2,c
  6144  0012D4  D009               	goto	l4771
  6145                           
  6146                           ; BSR set to: 0
  6147  0012D6  0E00               	movlw	0
  6148  0012D8  0100               	movlb	0	; () banked
  6149  0012DA  6F75               	movwf	___flmul@b& (0+255),b
  6150  0012DC  0E00               	movlw	0
  6151  0012DE  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6152  0012E0  0E00               	movlw	0
  6153  0012E2  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6154  0012E4  0E00               	movlw	0
  6155  0012E6  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6156  0012E8                     l4771:
  6157                           
  6158                           ; BSR set to: 0
  6159  0012E8  0100               	movlb	0	; () banked
  6160  0012EA  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  6161  0012EC  D009               	goto	l4775
  6162  0012EE                     l4773:
  6163                           
  6164                           ; BSR set to: 0
  6165  0012EE  0E00               	movlw	0
  6166  0012F0  0100               	movlb	0	; () banked
  6167  0012F2  6F75               	movwf	___flmul@b& (0+255),b
  6168  0012F4  0E00               	movlw	0
  6169  0012F6  6F76               	movwf	(___flmul@b+1)& (0+255),b
  6170  0012F8  0E00               	movlw	0
  6171  0012FA  6F77               	movwf	(___flmul@b+2)& (0+255),b
  6172  0012FC  0E00               	movlw	0
  6173  0012FE  6F78               	movwf	(___flmul@b+3)& (0+255),b
  6174  001300                     l4775:
  6175                           
  6176                           ; BSR set to: 0
  6177  001300  0100               	movlb	0	; () banked
  6178  001302  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6179  001304  0B80               	andlw	128
  6180  001306  0100               	movlb	0	; () banked
  6181  001308  1B81               	xorwf	___flmul@sign& (0+255),f,b
  6182                           
  6183                           ; BSR set to: 0
  6184  00130A  0100               	movlb	0	; () banked
  6185  00130C  517C               	movf	(___flmul@a+3)& (0+255),w,b
  6186  00130E  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  6187  001310  0100               	movlb	0	; () banked
  6188  001312  6F82               	movwf	___flmul@aexp& (0+255),b
  6189                           
  6190                           ; BSR set to: 0
  6191  001314  0100               	movlb	0	; () banked
  6192  001316  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  6193  001318  D002               	goto	l4783
  6194                           
  6195                           ; BSR set to: 0
  6196  00131A  0100               	movlb	0	; () banked
  6197  00131C  8182               	bsf	___flmul@aexp& (0+255),0,b
  6198  00131E                     l4783:
  6199                           
  6200                           ; BSR set to: 0
  6201  00131E  0100               	movlb	0	; () banked
  6202  001320  5182               	movf	___flmul@aexp& (0+255),w,b
  6203  001322  0100               	movlb	0	; () banked
  6204  001324  B4D8               	btfsc	status,2,c
  6205  001326  D010               	goto	l4791
  6206                           
  6207                           ; BSR set to: 0
  6208  001328  0100               	movlb	0	; () banked
  6209  00132A  2982               	incf	___flmul@aexp& (0+255),w,b
  6210  00132C  A4D8               	btfss	status,2,c
  6211  00132E  D009               	goto	l4789
  6212                           
  6213                           ; BSR set to: 0
  6214  001330  0E00               	movlw	0
  6215  001332  0100               	movlb	0	; () banked
  6216  001334  6F79               	movwf	___flmul@a& (0+255),b
  6217  001336  0E00               	movlw	0
  6218  001338  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6219  00133A  0E00               	movlw	0
  6220  00133C  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6221  00133E  0E00               	movlw	0
  6222  001340  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6223  001342                     l4789:
  6224                           
  6225                           ; BSR set to: 0
  6226  001342  0100               	movlb	0	; () banked
  6227  001344  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  6228  001346  D009               	goto	l1063
  6229  001348                     l4791:
  6230                           
  6231                           ; BSR set to: 0
  6232  001348  0E00               	movlw	0
  6233  00134A  0100               	movlb	0	; () banked
  6234  00134C  6F79               	movwf	___flmul@a& (0+255),b
  6235  00134E  0E00               	movlw	0
  6236  001350  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  6237  001352  0E00               	movlw	0
  6238  001354  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  6239  001356  0E00               	movlw	0
  6240  001358  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  6241  00135A                     l1063:
  6242                           
  6243                           ; BSR set to: 0
  6244  00135A  0100               	movlb	0	; () banked
  6245  00135C  5182               	movf	___flmul@aexp& (0+255),w,b
  6246  00135E  0100               	movlb	0	; () banked
  6247  001360  B4D8               	btfsc	status,2,c
  6248  001362  D005               	goto	l4795
  6249                           
  6250                           ; BSR set to: 0
  6251  001364  0100               	movlb	0	; () banked
  6252  001366  5187               	movf	___flmul@bexp& (0+255),w,b
  6253  001368  0100               	movlb	0	; () banked
  6254  00136A  A4D8               	btfss	status,2,c
  6255  00136C  D00A               	goto	l4799
  6256  00136E                     l4795:
  6257                           
  6258                           ; BSR set to: 0
  6259  00136E  0E00               	movlw	0
  6260  001370  0100               	movlb	0	; () banked
  6261  001372  6F75               	movwf	?___flmul& (0+255),b
  6262  001374  0E00               	movlw	0
  6263  001376  6F76               	movwf	(?___flmul+1)& (0+255),b
  6264  001378  0E00               	movlw	0
  6265  00137A  6F77               	movwf	(?___flmul+2)& (0+255),b
  6266  00137C  0E00               	movlw	0
  6267  00137E  6F78               	movwf	(?___flmul+3)& (0+255),b
  6268                           
  6269                           ; BSR set to: 0
  6270  001380  0012               	return	
  6271  001382                     l4799:
  6272                           
  6273                           ; BSR set to: 0
  6274  001382  0100               	movlb	0	; () banked
  6275  001384  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6276  001386  0100               	movlb	0	; () banked
  6277  001388  0375               	mulwf	___flmul@b& (0+255),b
  6278  00138A  CFF3 F08C          	movff	prodl,___flmul@temp
  6279  00138E  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6280                           
  6281                           ; BSR set to: 0
  6282  001392  0100               	movlb	0	; () banked
  6283  001394  518C               	movf	___flmul@temp& (0+255),w,b
  6284  001396  0100               	movlb	0	; () banked
  6285  001398  6F83               	movwf	___flmul@grs& (0+255),b
  6286  00139A  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  6287  00139C  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  6288  00139E  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  6289                           
  6290                           ; BSR set to: 0
  6291  0013A0  0100               	movlb	0	; () banked
  6292  0013A2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6293  0013A4  0100               	movlb	0	; () banked
  6294  0013A6  6F88               	movwf	___flmul@prod& (0+255),b
  6295  0013A8  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  6296  0013AA  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  6297  0013AC  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  6298  0013AE  0100               	movlb	0	; () banked
  6299  0013B0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6300  0013B2  0100               	movlb	0	; () banked
  6301  0013B4  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6302  0013B6  CFF3 F08C          	movff	prodl,___flmul@temp
  6303  0013BA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6304                           
  6305                           ; BSR set to: 0
  6306  0013BE  0100               	movlb	0	; () banked
  6307  0013C0  518C               	movf	___flmul@temp& (0+255),w,b
  6308  0013C2  0100               	movlb	0	; () banked
  6309  0013C4  2783               	addwf	___flmul@grs& (0+255),f,b
  6310  0013C6  0E00               	movlw	0
  6311  0013C8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6312  0013CA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6313  0013CC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6314                           
  6315                           ; BSR set to: 0
  6316  0013CE  0100               	movlb	0	; () banked
  6317  0013D0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6318  0013D2  0100               	movlb	0	; () banked
  6319  0013D4  2788               	addwf	___flmul@prod& (0+255),f,b
  6320  0013D6  0E00               	movlw	0
  6321  0013D8  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6322  0013DA  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6323  0013DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6324  0013DE  0100               	movlb	0	; () banked
  6325  0013E0  5179               	movf	___flmul@a& (0+255),w,b
  6326  0013E2  0100               	movlb	0	; () banked
  6327  0013E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6328  0013E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6329  0013EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6330                           
  6331                           ; BSR set to: 0
  6332  0013EE  0100               	movlb	0	; () banked
  6333  0013F0  518C               	movf	___flmul@temp& (0+255),w,b
  6334  0013F2  0100               	movlb	0	; () banked
  6335  0013F4  2783               	addwf	___flmul@grs& (0+255),f,b
  6336  0013F6  0E00               	movlw	0
  6337  0013F8  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6338  0013FA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6339  0013FC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6340                           
  6341                           ; BSR set to: 0
  6342  0013FE  0100               	movlb	0	; () banked
  6343  001400  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6344  001402  0100               	movlb	0	; () banked
  6345  001404  2788               	addwf	___flmul@prod& (0+255),f,b
  6346  001406  0E00               	movlw	0
  6347  001408  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6348  00140A  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6349  00140C  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6350                           
  6351                           ; BSR set to: 0
  6352  00140E  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6353  001412  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6354  001416  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6355  00141A  0100               	movlb	0	; () banked
  6356  00141C  6B83               	clrf	___flmul@grs& (0+255),b
  6357                           
  6358                           ; BSR set to: 0
  6359  00141E  0100               	movlb	0	; () banked
  6360  001420  5179               	movf	___flmul@a& (0+255),w,b
  6361  001422  0100               	movlb	0	; () banked
  6362  001424  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6363  001426  CFF3 F08C          	movff	prodl,___flmul@temp
  6364  00142A  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6365                           
  6366                           ; BSR set to: 0
  6367  00142E  0100               	movlb	0	; () banked
  6368  001430  518C               	movf	___flmul@temp& (0+255),w,b
  6369  001432  0100               	movlb	0	; () banked
  6370  001434  2783               	addwf	___flmul@grs& (0+255),f,b
  6371  001436  0100               	movlb	0	; () banked
  6372  001438  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6373  00143A  0100               	movlb	0	; () banked
  6374  00143C  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6375  00143E  0E00               	movlw	0
  6376  001440  0100               	movlb	0	; () banked
  6377  001442  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6378  001444  0E00               	movlw	0
  6379  001446  0100               	movlb	0	; () banked
  6380  001448  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6381                           
  6382                           ; BSR set to: 0
  6383  00144A  0100               	movlb	0	; () banked
  6384  00144C  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6385  00144E  0100               	movlb	0	; () banked
  6386  001450  0375               	mulwf	___flmul@b& (0+255),b
  6387  001452  CFF3 F08C          	movff	prodl,___flmul@temp
  6388  001456  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6389                           
  6390                           ; BSR set to: 0
  6391  00145A  0100               	movlb	0	; () banked
  6392  00145C  518C               	movf	___flmul@temp& (0+255),w,b
  6393  00145E  0100               	movlb	0	; () banked
  6394  001460  2783               	addwf	___flmul@grs& (0+255),f,b
  6395  001462  0100               	movlb	0	; () banked
  6396  001464  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6397  001466  0100               	movlb	0	; () banked
  6398  001468  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6399  00146A  0E00               	movlw	0
  6400  00146C  0100               	movlb	0	; () banked
  6401  00146E  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6402  001470  0E00               	movlw	0
  6403  001472  0100               	movlb	0	; () banked
  6404  001474  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6405                           
  6406                           ; BSR set to: 0
  6407  001476  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6408  00147A  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6409  00147E  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6410  001482  0100               	movlb	0	; () banked
  6411  001484  6B83               	clrf	___flmul@grs& (0+255),b
  6412  001486  0100               	movlb	0	; () banked
  6413  001488  5179               	movf	___flmul@a& (0+255),w,b
  6414  00148A  0100               	movlb	0	; () banked
  6415  00148C  0375               	mulwf	___flmul@b& (0+255),b
  6416  00148E  CFF3 F08C          	movff	prodl,___flmul@temp
  6417  001492  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6418                           
  6419                           ; BSR set to: 0
  6420  001496  0100               	movlb	0	; () banked
  6421  001498  518C               	movf	___flmul@temp& (0+255),w,b
  6422  00149A  0100               	movlb	0	; () banked
  6423  00149C  2783               	addwf	___flmul@grs& (0+255),f,b
  6424  00149E  0100               	movlb	0	; () banked
  6425  0014A0  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6426  0014A2  0100               	movlb	0	; () banked
  6427  0014A4  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6428  0014A6  0E00               	movlw	0
  6429  0014A8  0100               	movlb	0	; () banked
  6430  0014AA  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6431  0014AC  0E00               	movlw	0
  6432  0014AE  0100               	movlb	0	; () banked
  6433  0014B0  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6434                           
  6435                           ; BSR set to: 0
  6436  0014B2  0100               	movlb	0	; () banked
  6437  0014B4  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6438  0014B6  0100               	movlb	0	; () banked
  6439  0014B8  0376               	mulwf	(___flmul@b+1)& (0+255),b
  6440  0014BA  CFF3 F08C          	movff	prodl,___flmul@temp
  6441  0014BE  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6442  0014C2  0100               	movlb	0	; () banked
  6443  0014C4  518C               	movf	___flmul@temp& (0+255),w,b
  6444  0014C6  0100               	movlb	0	; () banked
  6445  0014C8  2788               	addwf	___flmul@prod& (0+255),f,b
  6446  0014CA  0100               	movlb	0	; () banked
  6447  0014CC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6448  0014CE  0100               	movlb	0	; () banked
  6449  0014D0  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6450  0014D2  0E00               	movlw	0
  6451  0014D4  0100               	movlb	0	; () banked
  6452  0014D6  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6453  0014D8  0E00               	movlw	0
  6454  0014DA  0100               	movlb	0	; () banked
  6455  0014DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6456                           
  6457                           ; BSR set to: 0
  6458  0014DE  0100               	movlb	0	; () banked
  6459  0014E0  517A               	movf	(___flmul@a+1)& (0+255),w,b
  6460  0014E2  0100               	movlb	0	; () banked
  6461  0014E4  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6462  0014E6  CFF3 F08C          	movff	prodl,___flmul@temp
  6463  0014EA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6464                           
  6465                           ; BSR set to: 0
  6466  0014EE  0100               	movlb	0	; () banked
  6467  0014F0  518C               	movf	___flmul@temp& (0+255),w,b
  6468  0014F2  0100               	movlb	0	; () banked
  6469  0014F4  2788               	addwf	___flmul@prod& (0+255),f,b
  6470  0014F6  0100               	movlb	0	; () banked
  6471  0014F8  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6472  0014FA  0100               	movlb	0	; () banked
  6473  0014FC  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6474  0014FE  0E00               	movlw	0
  6475  001500  0100               	movlb	0	; () banked
  6476  001502  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6477  001504  0E00               	movlw	0
  6478  001506  0100               	movlb	0	; () banked
  6479  001508  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6480  00150A  0100               	movlb	0	; () banked
  6481  00150C  517B               	movf	(___flmul@a+2)& (0+255),w,b
  6482  00150E  0100               	movlb	0	; () banked
  6483  001510  0377               	mulwf	(___flmul@b+2)& (0+255),b
  6484  001512  CFF3 F08C          	movff	prodl,___flmul@temp
  6485  001516  CFF4 F08D          	movff	prodh,___flmul@temp+1
  6486                           
  6487                           ; BSR set to: 0
  6488  00151A  0100               	movlb	0	; () banked
  6489  00151C  518C               	movf	___flmul@temp& (0+255),w,b
  6490  00151E  0100               	movlb	0	; () banked
  6491  001520  6F7D               	movwf	??___flmul& (0+255),b
  6492  001522  0100               	movlb	0	; () banked
  6493  001524  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6494  001526  0100               	movlb	0	; () banked
  6495  001528  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6496  00152A  0100               	movlb	0	; () banked
  6497  00152C  6B7F               	clrf	(??___flmul+2)& (0+255),b
  6498  00152E  0100               	movlb	0	; () banked
  6499  001530  6B80               	clrf	(??___flmul+3)& (0+255),b
  6500  001532  C07F  F080         	movff	??___flmul+2,??___flmul+3
  6501  001536  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  6502  00153A  C07D  F07E         	movff	??___flmul,??___flmul+1
  6503  00153E  0100               	movlb	0	; () banked
  6504  001540  6B7D               	clrf	??___flmul& (0+255),b
  6505  001542  0100               	movlb	0	; () banked
  6506  001544  517D               	movf	??___flmul& (0+255),w,b
  6507  001546  0100               	movlb	0	; () banked
  6508  001548  2788               	addwf	___flmul@prod& (0+255),f,b
  6509  00154A  0100               	movlb	0	; () banked
  6510  00154C  517E               	movf	(??___flmul+1)& (0+255),w,b
  6511  00154E  0100               	movlb	0	; () banked
  6512  001550  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6513  001552  0100               	movlb	0	; () banked
  6514  001554  517F               	movf	(??___flmul+2)& (0+255),w,b
  6515  001556  0100               	movlb	0	; () banked
  6516  001558  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6517  00155A  0100               	movlb	0	; () banked
  6518  00155C  5180               	movf	(??___flmul+3)& (0+255),w,b
  6519  00155E  0100               	movlb	0	; () banked
  6520  001560  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6521                           
  6522                           ; BSR set to: 0
  6523  001562  C083  F07D         	movff	___flmul@grs,??___flmul
  6524  001566  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  6525  00156A  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  6526  00156E  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  6527  001572  0E19               	movlw	25
  6528  001574  D006               	goto	u5570
  6529  001576                     u5575:
  6530  001576  0100               	movlb	0	; () banked
  6531  001578  90D8               	bcf	status,0,c
  6532  00157A  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6533  00157C  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6534  00157E  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6535  001580  337D               	rrcf	??___flmul& (0+255),f,b
  6536  001582                     u5570:
  6537  001582  2EE8               	decfsz	wreg,f,c
  6538  001584  D7F8               	goto	u5575
  6539  001586  0100               	movlb	0	; () banked
  6540  001588  517D               	movf	??___flmul& (0+255),w,b
  6541  00158A  0100               	movlb	0	; () banked
  6542  00158C  2788               	addwf	___flmul@prod& (0+255),f,b
  6543  00158E  0100               	movlb	0	; () banked
  6544  001590  517E               	movf	(??___flmul+1)& (0+255),w,b
  6545  001592  0100               	movlb	0	; () banked
  6546  001594  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6547  001596  0100               	movlb	0	; () banked
  6548  001598  517F               	movf	(??___flmul+2)& (0+255),w,b
  6549  00159A  0100               	movlb	0	; () banked
  6550  00159C  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6551  00159E  0100               	movlb	0	; () banked
  6552  0015A0  5180               	movf	(??___flmul+3)& (0+255),w,b
  6553  0015A2  0100               	movlb	0	; () banked
  6554  0015A4  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6555                           
  6556                           ; BSR set to: 0
  6557  0015A6  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  6558  0015AA  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  6559  0015AE  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  6560  0015B2  0100               	movlb	0	; () banked
  6561  0015B4  6B83               	clrf	___flmul@grs& (0+255),b
  6562                           
  6563                           ; BSR set to: 0
  6564  0015B6  0100               	movlb	0	; () banked
  6565  0015B8  5182               	movf	___flmul@aexp& (0+255),w,b
  6566  0015BA  C087  F07D         	movff	___flmul@bexp,??___flmul
  6567  0015BE  0100               	movlb	0	; () banked
  6568  0015C0  6B7E               	clrf	(??___flmul+1)& (0+255),b
  6569  0015C2  0100               	movlb	0	; () banked
  6570  0015C4  277D               	addwf	??___flmul& (0+255),f,b
  6571  0015C6  0E00               	movlw	0
  6572  0015C8  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  6573  0015CA  0E82               	movlw	130
  6574  0015CC  0100               	movlb	0	; () banked
  6575  0015CE  257D               	addwf	??___flmul& (0+255),w,b
  6576  0015D0  0100               	movlb	0	; () banked
  6577  0015D2  6F8C               	movwf	___flmul@temp& (0+255),b
  6578  0015D4  0EFF               	movlw	255
  6579  0015D6  0100               	movlb	0	; () banked
  6580  0015D8  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  6581  0015DA  0100               	movlb	0	; () banked
  6582  0015DC  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  6583  0015DE  D015               	goto	l4847
  6584  0015E0                     l4841:
  6585                           
  6586                           ; BSR set to: 0
  6587  0015E0  0100               	movlb	0	; () banked
  6588  0015E2  90D8               	bcf	status,0,c
  6589  0015E4  3788               	rlcf	___flmul@prod& (0+255),f,b
  6590  0015E6  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6591  0015E8  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6592  0015EA  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6593                           
  6594                           ; BSR set to: 0
  6595  0015EC  0100               	movlb	0	; () banked
  6596  0015EE  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6597  0015F0  D002               	goto	l1070
  6598                           
  6599                           ; BSR set to: 0
  6600  0015F2  0100               	movlb	0	; () banked
  6601  0015F4  8188               	bsf	___flmul@prod& (0+255),0,b
  6602  0015F6                     l1070:
  6603                           
  6604                           ; BSR set to: 0
  6605  0015F6  0100               	movlb	0	; () banked
  6606  0015F8  90D8               	bcf	status,0,c
  6607  0015FA  3783               	rlcf	___flmul@grs& (0+255),f,b
  6608  0015FC  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6609  0015FE  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6610  001600  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6611  001602  0100               	movlb	0	; () banked
  6612  001604  078C               	decf	___flmul@temp& (0+255),f,b
  6613  001606  A0D8               	btfss	status,0,c
  6614  001608  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  6615  00160A                     l4847:
  6616                           
  6617                           ; BSR set to: 0
  6618  00160A  0100               	movlb	0	; () banked
  6619  00160C  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  6620  00160E  D7E8               	goto	l4841
  6621                           
  6622                           ; BSR set to: 0
  6623                           
  6624                           ; BSR set to: 0
  6625  001610  0E00               	movlw	0
  6626  001612  0100               	movlb	0	; () banked
  6627  001614  6F82               	movwf	___flmul@aexp& (0+255),b
  6628                           
  6629                           ; BSR set to: 0
  6630  001616  0100               	movlb	0	; () banked
  6631  001618  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  6632  00161A  D024               	goto	l1072
  6633                           
  6634                           ; BSR set to: 0
  6635  00161C  0EFF               	movlw	255
  6636  00161E  0100               	movlb	0	; () banked
  6637  001620  1583               	andwf	___flmul@grs& (0+255),w,b
  6638  001622  0100               	movlb	0	; () banked
  6639  001624  6F7D               	movwf	??___flmul& (0+255),b
  6640  001626  0EFF               	movlw	255
  6641  001628  0100               	movlb	0	; () banked
  6642  00162A  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  6643  00162C  0100               	movlb	0	; () banked
  6644  00162E  6F7E               	movwf	(??___flmul+1)& (0+255),b
  6645  001630  0EFF               	movlw	255
  6646  001632  0100               	movlb	0	; () banked
  6647  001634  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  6648  001636  0100               	movlb	0	; () banked
  6649  001638  6F7F               	movwf	(??___flmul+2)& (0+255),b
  6650  00163A  0E7F               	movlw	127
  6651  00163C  0100               	movlb	0	; () banked
  6652  00163E  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  6653  001640  0100               	movlb	0	; () banked
  6654  001642  6F80               	movwf	(??___flmul+3)& (0+255),b
  6655  001644  0100               	movlb	0	; () banked
  6656  001646  517D               	movf	??___flmul& (0+255),w,b
  6657  001648  0100               	movlb	0	; () banked
  6658  00164A  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  6659  00164C  0100               	movlb	0	; () banked
  6660  00164E  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  6661  001650  0100               	movlb	0	; () banked
  6662  001652  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  6663  001654  A4D8               	btfss	status,2,c
  6664  001656  D003               	goto	l4857
  6665                           
  6666                           ; BSR set to: 0
  6667                           
  6668                           ; BSR set to: 0
  6669  001658  0100               	movlb	0	; () banked
  6670  00165A  A188               	btfss	___flmul@prod& (0+255),0,b
  6671  00165C  D003               	goto	l1072
  6672  00165E                     l4857:
  6673                           
  6674                           ; BSR set to: 0
  6675  00165E  0E01               	movlw	1
  6676  001660  0100               	movlb	0	; () banked
  6677  001662  6F82               	movwf	___flmul@aexp& (0+255),b
  6678  001664                     l1072:
  6679                           
  6680                           ; BSR set to: 0
  6681  001664  0100               	movlb	0	; () banked
  6682  001666  5182               	movf	___flmul@aexp& (0+255),w,b
  6683  001668  0100               	movlb	0	; () banked
  6684  00166A  B4D8               	btfsc	status,2,c
  6685  00166C  D023               	goto	l4867
  6686                           
  6687                           ; BSR set to: 0
  6688  00166E  0E01               	movlw	1
  6689  001670  0100               	movlb	0	; () banked
  6690  001672  2788               	addwf	___flmul@prod& (0+255),f,b
  6691  001674  0E00               	movlw	0
  6692  001676  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6693  001678  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6694  00167A  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6695                           
  6696                           ; BSR set to: 0
  6697  00167C  0100               	movlb	0	; () banked
  6698  00167E  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  6699  001680  D019               	goto	l4867
  6700                           
  6701                           ; BSR set to: 0
  6702  001682  C088  F07D         	movff	___flmul@prod,??___flmul
  6703  001686  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  6704  00168A  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  6705  00168E  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  6706  001692  0100               	movlb	0	; () banked
  6707  001694  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  6708  001696  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  6709  001698  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  6710  00169A  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  6711  00169C  337D               	rrcf	??___flmul& (0+255),f,b
  6712  00169E  C07D  F088         	movff	??___flmul,___flmul@prod
  6713  0016A2  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  6714  0016A6  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  6715  0016AA  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  6716                           
  6717                           ; BSR set to: 0
  6718  0016AE  0100               	movlb	0	; () banked
  6719  0016B0  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  6720  0016B2  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  6721  0016B4                     l4867:
  6722                           
  6723                           ; BSR set to: 0
  6724  0016B4  0100               	movlb	0	; () banked
  6725  0016B6  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6726  0016B8  D010               	goto	l4871
  6727  0016BA  0100               	movlb	0	; () banked
  6728  0016BC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6729  0016BE  E104               	bnz	u5650
  6730  0016C0  0100               	movlb	0	; () banked
  6731  0016C2  298C               	incf	___flmul@temp& (0+255),w,b
  6732  0016C4  A0D8               	btfss	status,0,c
  6733  0016C6  D009               	goto	l4871
  6734  0016C8                     u5650:
  6735                           
  6736                           ; BSR set to: 0
  6737  0016C8  0E00               	movlw	0
  6738  0016CA  0100               	movlb	0	; () banked
  6739  0016CC  6F88               	movwf	___flmul@prod& (0+255),b
  6740  0016CE  0E00               	movlw	0
  6741  0016D0  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6742  0016D2  0E80               	movlw	128
  6743  0016D4  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6744  0016D6  0E7F               	movlw	127
  6745  0016D8  D02B               	goto	L8
  6746  0016DA                     l4871:
  6747                           
  6748                           ; BSR set to: 0
  6749  0016DA  0100               	movlb	0	; () banked
  6750  0016DC  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6751  0016DE  D007               	goto	l4873
  6752  0016E0  0100               	movlb	0	; () banked
  6753  0016E2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  6754  0016E4  E111               	bnz	l1080
  6755  0016E6  0100               	movlb	0	; () banked
  6756  0016E8  058C               	decf	___flmul@temp& (0+255),w,b
  6757  0016EA  B0D8               	btfsc	status,0,c
  6758  0016EC  D00D               	goto	l1080
  6759  0016EE                     l4873:
  6760                           
  6761                           ; BSR set to: 0
  6762  0016EE  0E00               	movlw	0
  6763  0016F0  0100               	movlb	0	; () banked
  6764  0016F2  6F88               	movwf	___flmul@prod& (0+255),b
  6765  0016F4  0E00               	movlw	0
  6766  0016F6  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  6767  0016F8  0E00               	movlw	0
  6768  0016FA  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  6769  0016FC  0E00               	movlw	0
  6770  0016FE  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6771  001700  0E00               	movlw	0
  6772  001702  0100               	movlb	0	; () banked
  6773  001704  6F81               	movwf	___flmul@sign& (0+255),b
  6774  001706  D015               	goto	l4883
  6775  001708                     l1080:
  6776                           
  6777                           ; BSR set to: 0
  6778  001708  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  6779                           
  6780                           ; BSR set to: 0
  6781  00170C  0EFF               	movlw	255
  6782  00170E  0100               	movlb	0	; () banked
  6783  001710  1788               	andwf	___flmul@prod& (0+255),f,b
  6784  001712  0EFF               	movlw	255
  6785  001714  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  6786  001716  0E7F               	movlw	127
  6787  001718  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  6788  00171A  0E00               	movlw	0
  6789  00171C  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  6790                           
  6791                           ; BSR set to: 0
  6792  00171E  0100               	movlb	0	; () banked
  6793  001720  A187               	btfss	___flmul@bexp& (0+255),0,b
  6794  001722  D002               	goto	l4881
  6795                           
  6796                           ; BSR set to: 0
  6797  001724  0100               	movlb	0	; () banked
  6798  001726  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  6799  001728                     l4881:
  6800                           
  6801                           ; BSR set to: 0
  6802  001728  0100               	movlb	0	; () banked
  6803  00172A  90D8               	bcf	status,0,c
  6804  00172C  3187               	rrcf	___flmul@bexp& (0+255),w,b
  6805  00172E  0100               	movlb	0	; () banked
  6806  001730                     L8:
  6807  001730  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  6808  001732                     l4883:
  6809                           
  6810                           ; BSR set to: 0
  6811  001732  0100               	movlb	0	; () banked
  6812  001734  5181               	movf	___flmul@sign& (0+255),w,b
  6813  001736  0100               	movlb	0	; () banked
  6814  001738  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 0
  6817  00173A  C088  F075         	movff	___flmul@prod,?___flmul
  6818  00173E  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  6819  001742  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  6820  001746  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  6821  00174A  0012               	return	
  6822  00174C                     __end_of___flmul:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           intcon	equ	0xFF2
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           indf1	equ	0xFE7
  6834                           postinc1	equ	0xFE6
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           fsr2h	equ	0xFDA
  6840                           fsr2l	equ	0xFD9
  6841                           status	equ	0xFD8
  6842                           
  6843 ;; *************** function ___awmod *****************
  6844 ;; Defined at:
  6845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  dividend        2    0[BANK0 ] int 
  6848 ;;  divisor         2    2[BANK0 ] int 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  sign            1    5[BANK0 ] unsigned char 
  6851 ;;  counter         1    4[BANK0 ] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  2    0[BANK0 ] int 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6861 ;;      Params:         0       4       0       0
  6862 ;;      Locals:         0       2       0       0
  6863 ;;      Temps:          0       0       0       0
  6864 ;;      Totals:         0       6       0       0
  6865 ;;Total ram usage:        6 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    3
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_fround
  6872 ;;		_scale
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text19
  6877  002D94                     __ptext19:
  6878                           	opt stack 0
  6879  002D94                     ___awmod:
  6880                           	opt stack 24
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;incstack = 0
  6884  002D94  0E00               	movlw	0
  6885  002D96  0100               	movlb	0	; () banked
  6886  002D98  6F65               	movwf	___awmod@sign& (0+255),b
  6887                           
  6888                           ; BSR set to: 0
  6889  002D9A  0100               	movlb	0	; () banked
  6890  002D9C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6891  002D9E  D008               	goto	l4941
  6892                           
  6893                           ; BSR set to: 0
  6894  002DA0  0100               	movlb	0	; () banked
  6895  002DA2  6D60               	negf	___awmod@dividend& (0+255),b
  6896  002DA4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6897  002DA6  B0D8               	btfsc	status,0,c
  6898  002DA8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6899                           
  6900                           ; BSR set to: 0
  6901  002DAA  0E01               	movlw	1
  6902  002DAC  0100               	movlb	0	; () banked
  6903  002DAE  6F65               	movwf	___awmod@sign& (0+255),b
  6904  002DB0                     l4941:
  6905                           
  6906                           ; BSR set to: 0
  6907  002DB0  0100               	movlb	0	; () banked
  6908  002DB2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6909  002DB4  D005               	goto	l4945
  6910                           
  6911                           ; BSR set to: 0
  6912  002DB6  0100               	movlb	0	; () banked
  6913  002DB8  6D62               	negf	___awmod@divisor& (0+255),b
  6914  002DBA  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6915  002DBC  B0D8               	btfsc	status,0,c
  6916  002DBE  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6917  002DC0                     l4945:
  6918                           
  6919                           ; BSR set to: 0
  6920  002DC0  0100               	movlb	0	; () banked
  6921  002DC2  5162               	movf	___awmod@divisor& (0+255),w,b
  6922  002DC4  0100               	movlb	0	; () banked
  6923  002DC6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6924  002DC8  B4D8               	btfsc	status,2,c
  6925  002DCA  D026               	goto	l4961
  6926                           
  6927                           ; BSR set to: 0
  6928  002DCC  0E01               	movlw	1
  6929  002DCE  0100               	movlb	0	; () banked
  6930  002DD0  6F64               	movwf	___awmod@counter& (0+255),b
  6931  002DD2  D006               	goto	l4951
  6932  002DD4                     l4949:
  6933                           
  6934                           ; BSR set to: 0
  6935  002DD4  0100               	movlb	0	; () banked
  6936  002DD6  90D8               	bcf	status,0,c
  6937  002DD8  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6938  002DDA  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6939  002DDC  0100               	movlb	0	; () banked
  6940  002DDE  2B64               	incf	___awmod@counter& (0+255),f,b
  6941  002DE0                     l4951:
  6942                           
  6943                           ; BSR set to: 0
  6944  002DE0  0100               	movlb	0	; () banked
  6945  002DE2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6946  002DE4  D7F7               	goto	l4949
  6947  002DE6                     l4953:
  6948                           
  6949                           ; BSR set to: 0
  6950  002DE6  0100               	movlb	0	; () banked
  6951  002DE8  5162               	movf	___awmod@divisor& (0+255),w,b
  6952  002DEA  0100               	movlb	0	; () banked
  6953  002DEC  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6954  002DEE  0100               	movlb	0	; () banked
  6955  002DF0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6956  002DF2  0100               	movlb	0	; () banked
  6957  002DF4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6958  002DF6  A0D8               	btfss	status,0,c
  6959  002DF8  D008               	goto	l4957
  6960                           
  6961                           ; BSR set to: 0
  6962  002DFA  0100               	movlb	0	; () banked
  6963  002DFC  5162               	movf	___awmod@divisor& (0+255),w,b
  6964  002DFE  0100               	movlb	0	; () banked
  6965  002E00  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6966  002E02  0100               	movlb	0	; () banked
  6967  002E04  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6968  002E06  0100               	movlb	0	; () banked
  6969  002E08  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6970  002E0A                     l4957:
  6971                           
  6972                           ; BSR set to: 0
  6973  002E0A  0100               	movlb	0	; () banked
  6974  002E0C  90D8               	bcf	status,0,c
  6975  002E0E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6976  002E10  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6977                           
  6978                           ; BSR set to: 0
  6979  002E12  0100               	movlb	0	; () banked
  6980  002E14  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6981  002E16  D7E7               	goto	l4953
  6982  002E18                     l4961:
  6983                           
  6984                           ; BSR set to: 0
  6985  002E18  0100               	movlb	0	; () banked
  6986  002E1A  5165               	movf	___awmod@sign& (0+255),w,b
  6987  002E1C  0100               	movlb	0	; () banked
  6988  002E1E  B4D8               	btfsc	status,2,c
  6989  002E20  D005               	goto	l4965
  6990                           
  6991                           ; BSR set to: 0
  6992  002E22  0100               	movlb	0	; () banked
  6993  002E24  6D60               	negf	___awmod@dividend& (0+255),b
  6994  002E26  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6995  002E28  B0D8               	btfsc	status,0,c
  6996  002E2A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6997  002E2C                     l4965:
  6998                           
  6999                           ; BSR set to: 0
  7000  002E2C  C060  F060         	movff	___awmod@dividend,?___awmod
  7001  002E30  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7002  002E34  0012               	return	
  7003  002E36                     __end_of___awmod:
  7004                           	opt stack 0
  7005                           tblptru	equ	0xFF8
  7006                           tblptrh	equ	0xFF7
  7007                           tblptrl	equ	0xFF6
  7008                           tablat	equ	0xFF5
  7009                           prodh	equ	0xFF4
  7010                           prodl	equ	0xFF3
  7011                           intcon	equ	0xFF2
  7012                           postinc0	equ	0xFEE
  7013                           wreg	equ	0xFE8
  7014                           indf1	equ	0xFE7
  7015                           postinc1	equ	0xFE6
  7016                           fsr1h	equ	0xFE2
  7017                           fsr1l	equ	0xFE1
  7018                           indf2	equ	0xFDF
  7019                           postinc2	equ	0xFDE
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function ___awdiv *****************
  7025 ;; Defined at:
  7026 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  dividend        2    6[BANK0 ] int 
  7029 ;;  divisor         2    8[BANK0 ] int 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  quotient        2   12[BANK0 ] int 
  7032 ;;  sign            1   11[BANK0 ] unsigned char 
  7033 ;;  counter         1   10[BANK0 ] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  2    6[BANK0 ] int 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7043 ;;      Params:         0       4       0       0
  7044 ;;      Locals:         0       4       0       0
  7045 ;;      Temps:          0       0       0       0
  7046 ;;      Totals:         0       8       0       0
  7047 ;;Total ram usage:        8 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    3
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_fround
  7054 ;;		_scale
  7055 ;;		_sprintf
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text20
  7060  002B72                     __ptext20:
  7061                           	opt stack 0
  7062  002B72                     ___awdiv:
  7063                           	opt stack 24
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;incstack = 0
  7067  002B72  0E00               	movlw	0
  7068  002B74  0100               	movlb	0	; () banked
  7069  002B76  6F6B               	movwf	___awdiv@sign& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072  002B78  0100               	movlb	0	; () banked
  7073  002B7A  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7074  002B7C  D008               	goto	l4897
  7075                           
  7076                           ; BSR set to: 0
  7077  002B7E  0100               	movlb	0	; () banked
  7078  002B80  6D68               	negf	___awdiv@divisor& (0+255),b
  7079  002B82  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7080  002B84  B0D8               	btfsc	status,0,c
  7081  002B86  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7082                           
  7083                           ; BSR set to: 0
  7084  002B88  0E01               	movlw	1
  7085  002B8A  0100               	movlb	0	; () banked
  7086  002B8C  6F6B               	movwf	___awdiv@sign& (0+255),b
  7087  002B8E                     l4897:
  7088                           
  7089                           ; BSR set to: 0
  7090  002B8E  0100               	movlb	0	; () banked
  7091  002B90  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7092  002B92  D008               	goto	l4903
  7093                           
  7094                           ; BSR set to: 0
  7095  002B94  0100               	movlb	0	; () banked
  7096  002B96  6D66               	negf	___awdiv@dividend& (0+255),b
  7097  002B98  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7098  002B9A  B0D8               	btfsc	status,0,c
  7099  002B9C  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 0
  7102  002B9E  0E01               	movlw	1
  7103  002BA0  0100               	movlb	0	; () banked
  7104  002BA2  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  7105  002BA4                     l4903:
  7106                           
  7107                           ; BSR set to: 0
  7108  002BA4  0E00               	movlw	0
  7109  002BA6  0100               	movlb	0	; () banked
  7110  002BA8  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  7111  002BAA  0E00               	movlw	0
  7112  002BAC  6F6C               	movwf	___awdiv@quotient& (0+255),b
  7113                           
  7114                           ; BSR set to: 0
  7115  002BAE  0100               	movlb	0	; () banked
  7116  002BB0  5168               	movf	___awdiv@divisor& (0+255),w,b
  7117  002BB2  0100               	movlb	0	; () banked
  7118  002BB4  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7119  002BB6  B4D8               	btfsc	status,2,c
  7120  002BB8  D02C               	goto	l4925
  7121                           
  7122                           ; BSR set to: 0
  7123  002BBA  0E01               	movlw	1
  7124  002BBC  0100               	movlb	0	; () banked
  7125  002BBE  6F6A               	movwf	___awdiv@counter& (0+255),b
  7126  002BC0  D006               	goto	l4911
  7127  002BC2                     l4909:
  7128                           
  7129                           ; BSR set to: 0
  7130  002BC2  0100               	movlb	0	; () banked
  7131  002BC4  90D8               	bcf	status,0,c
  7132  002BC6  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  7133  002BC8  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7134  002BCA  0100               	movlb	0	; () banked
  7135  002BCC  2B6A               	incf	___awdiv@counter& (0+255),f,b
  7136  002BCE                     l4911:
  7137                           
  7138                           ; BSR set to: 0
  7139  002BCE  0100               	movlb	0	; () banked
  7140  002BD0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7141  002BD2  D7F7               	goto	l4909
  7142  002BD4                     l4913:
  7143                           
  7144                           ; BSR set to: 0
  7145  002BD4  0100               	movlb	0	; () banked
  7146  002BD6  90D8               	bcf	status,0,c
  7147  002BD8  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  7148  002BDA  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7149                           
  7150                           ; BSR set to: 0
  7151  002BDC  0100               	movlb	0	; () banked
  7152  002BDE  5168               	movf	___awdiv@divisor& (0+255),w,b
  7153  002BE0  0100               	movlb	0	; () banked
  7154  002BE2  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  7155  002BE4  0100               	movlb	0	; () banked
  7156  002BE6  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7157  002BE8  0100               	movlb	0	; () banked
  7158  002BEA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7159  002BEC  A0D8               	btfss	status,0,c
  7160  002BEE  D00A               	goto	l4921
  7161                           
  7162                           ; BSR set to: 0
  7163  002BF0  0100               	movlb	0	; () banked
  7164  002BF2  5168               	movf	___awdiv@divisor& (0+255),w,b
  7165  002BF4  0100               	movlb	0	; () banked
  7166  002BF6  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  7167  002BF8  0100               	movlb	0	; () banked
  7168  002BFA  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7169  002BFC  0100               	movlb	0	; () banked
  7170  002BFE  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173  002C00  0100               	movlb	0	; () banked
  7174  002C02  816C               	bsf	___awdiv@quotient& (0+255),0,b
  7175  002C04                     l4921:
  7176                           
  7177                           ; BSR set to: 0
  7178  002C04  0100               	movlb	0	; () banked
  7179  002C06  90D8               	bcf	status,0,c
  7180  002C08  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7181  002C0A  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  7182                           
  7183                           ; BSR set to: 0
  7184  002C0C  0100               	movlb	0	; () banked
  7185  002C0E  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  7186  002C10  D7E1               	goto	l4913
  7187  002C12                     l4925:
  7188                           
  7189                           ; BSR set to: 0
  7190  002C12  0100               	movlb	0	; () banked
  7191  002C14  516B               	movf	___awdiv@sign& (0+255),w,b
  7192  002C16  0100               	movlb	0	; () banked
  7193  002C18  B4D8               	btfsc	status,2,c
  7194  002C1A  D005               	goto	l4929
  7195                           
  7196                           ; BSR set to: 0
  7197  002C1C  0100               	movlb	0	; () banked
  7198  002C1E  6D6C               	negf	___awdiv@quotient& (0+255),b
  7199  002C20  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7200  002C22  B0D8               	btfsc	status,0,c
  7201  002C24  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7202  002C26                     l4929:
  7203                           
  7204                           ; BSR set to: 0
  7205  002C26  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  7206  002C2A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  7207  002C2E  0012               	return	
  7208  002C30                     __end_of___awdiv:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           intcon	equ	0xFF2
  7217                           postinc0	equ	0xFEE
  7218                           wreg	equ	0xFE8
  7219                           indf1	equ	0xFE7
  7220                           postinc1	equ	0xFE6
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           fsr2h	equ	0xFDA
  7226                           fsr2l	equ	0xFD9
  7227                           status	equ	0xFD8
  7228                           
  7229 ;; *************** function __tdiv_to_l_ *****************
  7230 ;; Defined at:
  7231 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  f1              4    0[BANK0 ] float 
  7234 ;;  f2              4    4[BANK0 ] float 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  quot            4   11[BANK0 ] unsigned long 
  7237 ;;  exp1            1   16[BANK0 ] unsigned char 
  7238 ;;  cntr            1   15[BANK0 ] unsigned char 
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  4    0[BANK0 ] unsigned long 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7248 ;;      Params:         0       8       0       0
  7249 ;;      Locals:         0       6       0       0
  7250 ;;      Temps:          0       3       0       0
  7251 ;;      Totals:         0      17       0       0
  7252 ;;Total ram usage:       17 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    3
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_sprintf
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text21
  7263  001FE6                     __ptext21:
  7264                           	opt stack 0
  7265  001FE6                     __tdiv_to_l_:
  7266                           	opt stack 25
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;incstack = 0
  7270  001FE6  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7271  001FEA  0100               	movlb	0	; () banked
  7272  001FEC  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7273  001FEE  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7274  001FF0  0100               	movlb	0	; () banked
  7275  001FF2  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7276  001FF4  0100               	movlb	0	; () banked
  7277  001FF6  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7278  001FF8  E301               	bnc	u5891
  7279  001FFA  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7280  001FFC                     u5891:
  7281  001FFC  0100               	movlb	0	; () banked
  7282  001FFE  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7283  002000  0100               	movlb	0	; () banked
  7284  002002  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7285  002004  0100               	movlb	0	; () banked
  7286  002006  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7287  002008  A4D8               	btfss	status,2,c
  7288  00200A  D00A               	goto	l5071
  7289                           
  7290                           ; BSR set to: 0
  7291  00200C  0E00               	movlw	0
  7292  00200E  0100               	movlb	0	; () banked
  7293  002010  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7294  002012  0E00               	movlw	0
  7295  002014  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7296  002016  0E00               	movlw	0
  7297  002018  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7298  00201A  0E00               	movlw	0
  7299  00201C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7300                           
  7301                           ; BSR set to: 0
  7302  00201E  0012               	return	
  7303  002020                     l5071:
  7304                           
  7305                           ; BSR set to: 0
  7306  002020  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7307  002024  0100               	movlb	0	; () banked
  7308  002026  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7309  002028  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7310  00202A  0100               	movlb	0	; () banked
  7311  00202C  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7312  00202E  0100               	movlb	0	; () banked
  7313  002030  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7314  002032  E301               	bnc	u5911
  7315  002034  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7316  002036                     u5911:
  7317  002036  0100               	movlb	0	; () banked
  7318  002038  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  7319  00203A  0100               	movlb	0	; () banked
  7320  00203C  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7321  00203E  0100               	movlb	0	; () banked
  7322  002040  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7323  002042  A4D8               	btfss	status,2,c
  7324  002044  D00A               	goto	l5077
  7325                           
  7326                           ; BSR set to: 0
  7327  002046  0E00               	movlw	0
  7328  002048  0100               	movlb	0	; () banked
  7329  00204A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7330  00204C  0E00               	movlw	0
  7331  00204E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7332  002050  0E00               	movlw	0
  7333  002052  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7334  002054  0E00               	movlw	0
  7335  002056  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7336                           
  7337                           ; BSR set to: 0
  7338  002058  0012               	return	
  7339  00205A                     l5077:
  7340                           
  7341                           ; BSR set to: 0
  7342  00205A  0100               	movlb	0	; () banked
  7343  00205C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7344                           
  7345                           ; BSR set to: 0
  7346  00205E  0EFF               	movlw	255
  7347  002060  0100               	movlb	0	; () banked
  7348  002062  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7349  002064  0EFF               	movlw	255
  7350  002066  0100               	movlb	0	; () banked
  7351  002068  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7352  00206A  0E00               	movlw	0
  7353  00206C  0100               	movlb	0	; () banked
  7354  00206E  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7355  002070  0100               	movlb	0	; () banked
  7356  002072  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7357                           
  7358                           ; BSR set to: 0
  7359  002074  0EFF               	movlw	255
  7360  002076  0100               	movlb	0	; () banked
  7361  002078  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7362  00207A  0EFF               	movlw	255
  7363  00207C  0100               	movlb	0	; () banked
  7364  00207E  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7365  002080  0E00               	movlw	0
  7366  002082  0100               	movlb	0	; () banked
  7367  002084  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7368                           
  7369                           ; BSR set to: 0
  7370  002086  0E00               	movlw	0
  7371  002088  0100               	movlb	0	; () banked
  7372  00208A  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  7373  00208C  0E00               	movlw	0
  7374  00208E  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7375  002090  0E00               	movlw	0
  7376  002092  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7377  002094  0E00               	movlw	0
  7378  002096  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381  002098  0E7F               	movlw	127
  7382  00209A  0100               	movlb	0	; () banked
  7383  00209C  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7384                           
  7385                           ; BSR set to: 0
  7386  00209E  0100               	movlb	0	; () banked
  7387  0020A0  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7388  0020A2  0F98               	addlw	152
  7389  0020A4  0100               	movlb	0	; () banked
  7390  0020A6  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  0020A8  0E18               	movlw	24
  7394  0020AA  0100               	movlb	0	; () banked
  7395  0020AC  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7396  0020AE                     l787:
  7397                           
  7398                           ; BSR set to: 0
  7399  0020AE  0100               	movlb	0	; () banked
  7400  0020B0  90D8               	bcf	status,0,c
  7401  0020B2  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7402  0020B4  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7403  0020B6  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7404  0020B8  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7405                           
  7406                           ; BSR set to: 0
  7407  0020BA  0100               	movlb	0	; () banked
  7408  0020BC  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7409  0020BE  0100               	movlb	0	; () banked
  7410  0020C0  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7411  0020C2  0100               	movlb	0	; () banked
  7412  0020C4  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7413  0020C6  0100               	movlb	0	; () banked
  7414  0020C8  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7415  0020CA  0100               	movlb	0	; () banked
  7416  0020CC  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7417  0020CE  0100               	movlb	0	; () banked
  7418  0020D0  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7419  0020D2  A0D8               	btfss	status,0,c
  7420  0020D4  D00E               	goto	l788
  7421                           
  7422                           ; BSR set to: 0
  7423  0020D6  0100               	movlb	0	; () banked
  7424  0020D8  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7425  0020DA  0100               	movlb	0	; () banked
  7426  0020DC  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7427  0020DE  0100               	movlb	0	; () banked
  7428  0020E0  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7429  0020E2  0100               	movlb	0	; () banked
  7430  0020E4  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7431  0020E6  0100               	movlb	0	; () banked
  7432  0020E8  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7433  0020EA  0100               	movlb	0	; () banked
  7434  0020EC  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7435                           
  7436                           ; BSR set to: 0
  7437  0020EE  0100               	movlb	0	; () banked
  7438  0020F0  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7439  0020F2                     l788:
  7440                           
  7441                           ; BSR set to: 0
  7442  0020F2  0100               	movlb	0	; () banked
  7443  0020F4  90D8               	bcf	status,0,c
  7444  0020F6  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7445  0020F8  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7446  0020FA  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7447                           
  7448                           ; BSR set to: 0
  7449  0020FC  0100               	movlb	0	; () banked
  7450  0020FE  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7451  002100  D7D6               	goto	l787
  7452                           
  7453                           ; BSR set to: 0
  7454                           
  7455                           ; BSR set to: 0
  7456  002102  0100               	movlb	0	; () banked
  7457  002104  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7458  002106  D01A               	goto	l5111
  7459                           
  7460                           ; BSR set to: 0
  7461  002108  0100               	movlb	0	; () banked
  7462  00210A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7463  00210C  0A80               	xorlw	128
  7464  00210E  0F97               	addlw	151
  7465  002110  B0D8               	btfsc	status,0,c
  7466  002112  D00A               	goto	l5107
  7467                           
  7468                           ; BSR set to: 0
  7469  002114  0E00               	movlw	0
  7470  002116  0100               	movlb	0	; () banked
  7471  002118  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7472  00211A  0E00               	movlw	0
  7473  00211C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7474  00211E  0E00               	movlw	0
  7475  002120  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7476  002122  0E00               	movlw	0
  7477  002124  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480  002126  0012               	return	
  7481  002128                     l5107:
  7482                           
  7483                           ; BSR set to: 0
  7484  002128  0100               	movlb	0	; () banked
  7485  00212A  90D8               	bcf	status,0,c
  7486  00212C  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7487  00212E  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7488  002130  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7489  002132  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7490                           
  7491                           ; BSR set to: 0
  7492  002134  0100               	movlb	0	; () banked
  7493  002136  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7494  002138  D7F7               	goto	l5107
  7495                           
  7496                           ; BSR set to: 0
  7497  00213A  D01B               	goto	l794
  7498  00213C                     l5111:
  7499                           
  7500                           ; BSR set to: 0
  7501  00213C  0E17               	movlw	23
  7502  00213E  0100               	movlb	0	; () banked
  7503  002140  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7504  002142  D012               	goto	l5119
  7505                           
  7506                           ; BSR set to: 0
  7507  002144  0E00               	movlw	0
  7508  002146  0100               	movlb	0	; () banked
  7509  002148  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7510  00214A  0E00               	movlw	0
  7511  00214C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7512  00214E  0E00               	movlw	0
  7513  002150  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7514  002152  0E00               	movlw	0
  7515  002154  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7516                           
  7517                           ; BSR set to: 0
  7518  002156  0012               	return	
  7519  002158                     l5117:
  7520                           
  7521                           ; BSR set to: 0
  7522  002158  0100               	movlb	0	; () banked
  7523  00215A  90D8               	bcf	status,0,c
  7524  00215C  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7525  00215E  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7526  002160  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7527  002162  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7528  002164  0100               	movlb	0	; () banked
  7529  002166  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7530  002168                     l5119:
  7531                           
  7532                           ; BSR set to: 0
  7533  002168  0100               	movlb	0	; () banked
  7534  00216A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7535  00216C  0100               	movlb	0	; () banked
  7536  00216E  A4D8               	btfss	status,2,c
  7537  002170  D7F3               	goto	l5117
  7538  002172                     l794:
  7539                           
  7540                           ; BSR set to: 0
  7541  002172  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7542  002176  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7543  00217A  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7544  00217E  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7545                           
  7546                           ; BSR set to: 0
  7547  002182  0012               	return		;funcret
  7548  002184                     __end_of__tdiv_to_l_:
  7549                           	opt stack 0
  7550                           tblptru	equ	0xFF8
  7551                           tblptrh	equ	0xFF7
  7552                           tblptrl	equ	0xFF6
  7553                           tablat	equ	0xFF5
  7554                           prodh	equ	0xFF4
  7555                           prodl	equ	0xFF3
  7556                           intcon	equ	0xFF2
  7557                           postinc0	equ	0xFEE
  7558                           wreg	equ	0xFE8
  7559                           indf1	equ	0xFE7
  7560                           postinc1	equ	0xFE6
  7561                           fsr1h	equ	0xFE2
  7562                           fsr1l	equ	0xFE1
  7563                           indf2	equ	0xFDF
  7564                           postinc2	equ	0xFDE
  7565                           fsr2h	equ	0xFDA
  7566                           fsr2l	equ	0xFD9
  7567                           status	equ	0xFD8
  7568                           
  7569 ;; *************** function __div_to_l_ *****************
  7570 ;; Defined at:
  7571 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  f1              4    0[BANK0 ] unsigned long 
  7574 ;;  f2              4    4[BANK0 ] unsigned long 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  quot            4    8[BANK0 ] unsigned long 
  7577 ;;  exp1            1   13[BANK0 ] unsigned char 
  7578 ;;  cntr            1   12[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  4    0[BANK0 ] unsigned long 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7588 ;;      Params:         0       8       0       0
  7589 ;;      Locals:         0       6       0       0
  7590 ;;      Temps:          0       0       0       0
  7591 ;;      Totals:         0      14       0       0
  7592 ;;Total ram usage:       14 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    3
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_sprintf
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text22
  7603  002314                     __ptext22:
  7604                           	opt stack 0
  7605  002314                     __div_to_l_:
  7606                           	opt stack 25
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;incstack = 0
  7610  002314  0100               	movlb	0	; () banked
  7611  002316  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7612  002318  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7613  00231A  0100               	movlb	0	; () banked
  7614  00231C  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  7615  00231E  0100               	movlb	0	; () banked
  7616  002320  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7617  002322  A4D8               	btfss	status,2,c
  7618  002324  D00A               	goto	l5127
  7619                           
  7620                           ; BSR set to: 0
  7621  002326  0E00               	movlw	0
  7622  002328  0100               	movlb	0	; () banked
  7623  00232A  6F60               	movwf	?__div_to_l_& (0+255),b
  7624  00232C  0E00               	movlw	0
  7625  00232E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7626  002330  0E00               	movlw	0
  7627  002332  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7628  002334  0E00               	movlw	0
  7629  002336  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7630                           
  7631                           ; BSR set to: 0
  7632  002338  0012               	return	
  7633  00233A                     l5127:
  7634                           
  7635                           ; BSR set to: 0
  7636  00233A  0100               	movlb	0	; () banked
  7637  00233C  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7638  00233E  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7639  002340  0100               	movlb	0	; () banked
  7640  002342  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7641  002344  0100               	movlb	0	; () banked
  7642  002346  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7643  002348  A4D8               	btfss	status,2,c
  7644  00234A  D00A               	goto	l5133
  7645                           
  7646                           ; BSR set to: 0
  7647  00234C  0E00               	movlw	0
  7648  00234E  0100               	movlb	0	; () banked
  7649  002350  6F60               	movwf	?__div_to_l_& (0+255),b
  7650  002352  0E00               	movlw	0
  7651  002354  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7652  002356  0E00               	movlw	0
  7653  002358  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7654  00235A  0E00               	movlw	0
  7655  00235C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7656                           
  7657                           ; BSR set to: 0
  7658  00235E  0012               	return	
  7659  002360                     l5133:
  7660                           
  7661                           ; BSR set to: 0
  7662  002360  0100               	movlb	0	; () banked
  7663  002362  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7664                           
  7665                           ; BSR set to: 0
  7666  002364  0EFF               	movlw	255
  7667  002366  0100               	movlb	0	; () banked
  7668  002368  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  7669  00236A  0EFF               	movlw	255
  7670  00236C  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7671  00236E  0EFF               	movlw	255
  7672  002370  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7673  002372  0E00               	movlw	0
  7674  002374  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7675                           
  7676                           ; BSR set to: 0
  7677  002376  0100               	movlb	0	; () banked
  7678  002378  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7679  00237A  0EFF               	movlw	255
  7680  00237C  0100               	movlb	0	; () banked
  7681  00237E  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  7682  002380  0EFF               	movlw	255
  7683  002382  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7684  002384  0EFF               	movlw	255
  7685  002386  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7686  002388  0E00               	movlw	0
  7687  00238A  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690  00238C  0E00               	movlw	0
  7691  00238E  0100               	movlb	0	; () banked
  7692  002390  6F68               	movwf	__div_to_l_@quot& (0+255),b
  7693  002392  0E00               	movlw	0
  7694  002394  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7695  002396  0E00               	movlw	0
  7696  002398  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7697  00239A  0E00               	movlw	0
  7698  00239C  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7699                           
  7700                           ; BSR set to: 0
  7701  00239E  0E7F               	movlw	127
  7702  0023A0  0100               	movlb	0	; () banked
  7703  0023A2  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7704                           
  7705                           ; BSR set to: 0
  7706  0023A4  0100               	movlb	0	; () banked
  7707  0023A6  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  7708  0023A8  0FA0               	addlw	160
  7709  0023AA  0100               	movlb	0	; () banked
  7710  0023AC  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7711                           
  7712                           ; BSR set to: 0
  7713  0023AE  0E20               	movlw	32
  7714  0023B0  0100               	movlb	0	; () banked
  7715  0023B2  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  7716  0023B4                     l5147:
  7717                           
  7718                           ; BSR set to: 0
  7719  0023B4  0100               	movlb	0	; () banked
  7720  0023B6  90D8               	bcf	status,0,c
  7721  0023B8  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7722  0023BA  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7723  0023BC  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7724  0023BE  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7725                           
  7726                           ; BSR set to: 0
  7727  0023C0  0100               	movlb	0	; () banked
  7728  0023C2  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7729  0023C4  0100               	movlb	0	; () banked
  7730  0023C6  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  7731  0023C8  0100               	movlb	0	; () banked
  7732  0023CA  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7733  0023CC  0100               	movlb	0	; () banked
  7734  0023CE  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7735  0023D0  0100               	movlb	0	; () banked
  7736  0023D2  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7737  0023D4  0100               	movlb	0	; () banked
  7738  0023D6  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7739  0023D8  0100               	movlb	0	; () banked
  7740  0023DA  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7741  0023DC  0100               	movlb	0	; () banked
  7742  0023DE  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7743  0023E0  A0D8               	btfss	status,0,c
  7744  0023E2  D012               	goto	l5155
  7745                           
  7746                           ; BSR set to: 0
  7747  0023E4  0100               	movlb	0	; () banked
  7748  0023E6  5164               	movf	__div_to_l_@f2& (0+255),w,b
  7749  0023E8  0100               	movlb	0	; () banked
  7750  0023EA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  7751  0023EC  0100               	movlb	0	; () banked
  7752  0023EE  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7753  0023F0  0100               	movlb	0	; () banked
  7754  0023F2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7755  0023F4  0100               	movlb	0	; () banked
  7756  0023F6  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7757  0023F8  0100               	movlb	0	; () banked
  7758  0023FA  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7759  0023FC  0100               	movlb	0	; () banked
  7760  0023FE  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7761  002400  0100               	movlb	0	; () banked
  7762  002402  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7763                           
  7764                           ; BSR set to: 0
  7765  002404  0100               	movlb	0	; () banked
  7766  002406  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  7767  002408                     l5155:
  7768                           
  7769                           ; BSR set to: 0
  7770  002408  0100               	movlb	0	; () banked
  7771  00240A  90D8               	bcf	status,0,c
  7772  00240C  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  7773  00240E  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7774  002410  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7775  002412  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7776                           
  7777                           ; BSR set to: 0
  7778  002414  0100               	movlb	0	; () banked
  7779  002416  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7780  002418  D7CD               	goto	l5147
  7781                           
  7782                           ; BSR set to: 0
  7783                           
  7784                           ; BSR set to: 0
  7785  00241A  0100               	movlb	0	; () banked
  7786  00241C  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  7787  00241E  D01A               	goto	l5171
  7788                           
  7789                           ; BSR set to: 0
  7790  002420  0100               	movlb	0	; () banked
  7791  002422  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7792  002424  0A80               	xorlw	128
  7793  002426  0F9F               	addlw	159
  7794  002428  B0D8               	btfsc	status,0,c
  7795  00242A  D00A               	goto	l5167
  7796                           
  7797                           ; BSR set to: 0
  7798  00242C  0E00               	movlw	0
  7799  00242E  0100               	movlb	0	; () banked
  7800  002430  6F60               	movwf	?__div_to_l_& (0+255),b
  7801  002432  0E00               	movlw	0
  7802  002434  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7803  002436  0E00               	movlw	0
  7804  002438  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7805  00243A  0E00               	movlw	0
  7806  00243C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7807                           
  7808                           ; BSR set to: 0
  7809  00243E  0012               	return	
  7810  002440                     l5167:
  7811                           
  7812                           ; BSR set to: 0
  7813  002440  0100               	movlb	0	; () banked
  7814  002442  90D8               	bcf	status,0,c
  7815  002444  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7816  002446  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7817  002448  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7818  00244A  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  7819                           
  7820                           ; BSR set to: 0
  7821  00244C  0100               	movlb	0	; () banked
  7822  00244E  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7823  002450  D7F7               	goto	l5167
  7824                           
  7825                           ; BSR set to: 0
  7826  002452  D01B               	goto	l690
  7827  002454                     l5171:
  7828                           
  7829                           ; BSR set to: 0
  7830  002454  0E1F               	movlw	31
  7831  002456  0100               	movlb	0	; () banked
  7832  002458  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7833  00245A  D012               	goto	l5179
  7834                           
  7835                           ; BSR set to: 0
  7836  00245C  0E00               	movlw	0
  7837  00245E  0100               	movlb	0	; () banked
  7838  002460  6F60               	movwf	?__div_to_l_& (0+255),b
  7839  002462  0E00               	movlw	0
  7840  002464  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7841  002466  0E00               	movlw	0
  7842  002468  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7843  00246A  0E00               	movlw	0
  7844  00246C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7845                           
  7846                           ; BSR set to: 0
  7847  00246E  0012               	return	
  7848  002470                     l5177:
  7849                           
  7850                           ; BSR set to: 0
  7851  002470  0100               	movlb	0	; () banked
  7852  002472  90D8               	bcf	status,0,c
  7853  002474  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  7854  002476  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7855  002478  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7856  00247A  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7857  00247C  0100               	movlb	0	; () banked
  7858  00247E  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  7859  002480                     l5179:
  7860                           
  7861                           ; BSR set to: 0
  7862  002480  0100               	movlb	0	; () banked
  7863  002482  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  7864  002484  0100               	movlb	0	; () banked
  7865  002486  A4D8               	btfss	status,2,c
  7866  002488  D7F3               	goto	l5177
  7867  00248A                     l690:
  7868                           
  7869                           ; BSR set to: 0
  7870  00248A  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  7871  00248E  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7872  002492  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7873  002496  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7874                           
  7875                           ; BSR set to: 0
  7876  00249A  0012               	return		;funcret
  7877  00249C                     __end_of__div_to_l_:
  7878                           	opt stack 0
  7879                           tblptru	equ	0xFF8
  7880                           tblptrh	equ	0xFF7
  7881                           tblptrl	equ	0xFF6
  7882                           tablat	equ	0xFF5
  7883                           prodh	equ	0xFF4
  7884                           prodl	equ	0xFF3
  7885                           intcon	equ	0xFF2
  7886                           postinc0	equ	0xFEE
  7887                           wreg	equ	0xFE8
  7888                           indf1	equ	0xFE7
  7889                           postinc1	equ	0xFE6
  7890                           fsr1h	equ	0xFE2
  7891                           fsr1l	equ	0xFE1
  7892                           indf2	equ	0xFDF
  7893                           postinc2	equ	0xFDE
  7894                           fsr2h	equ	0xFDA
  7895                           fsr2l	equ	0xFD9
  7896                           status	equ	0xFD8
  7897                           
  7898 ;; *************** function ___xxtofl *****************
  7899 ;; Defined at:
  7900 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  sign            1    wreg     unsigned char 
  7903 ;;  val             4    7[BANK0 ] long 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  sign            1   15[BANK0 ] unsigned char 
  7906 ;;  arg             4   17[BANK0 ] unsigned long 
  7907 ;;  exp             1   16[BANK0 ] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  4    7[BANK0 ] unsigned char 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7917 ;;      Params:         0       4       0       0
  7918 ;;      Locals:         0       6       0       0
  7919 ;;      Temps:          0       4       0       0
  7920 ;;      Totals:         0      14       0       0
  7921 ;;Total ram usage:       14 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    3
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;;		_LCD_Handler
  7929 ;;		_sprintf
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text23
  7934  001E18                     __ptext23:
  7935                           	opt stack 0
  7936  001E18                     ___xxtofl:
  7937                           	opt stack 27
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;incstack = 0
  7941                           ;___xxtofl@sign stored from wreg
  7942  001E18  0100               	movlb	0	; () banked
  7943  001E1A  6F6F               	movwf	___xxtofl@sign& (0+255),b
  7944  001E1C  0100               	movlb	0	; () banked
  7945  001E1E  516F               	movf	___xxtofl@sign& (0+255),w,b
  7946  001E20  0100               	movlb	0	; () banked
  7947  001E22  B4D8               	btfsc	status,2,c
  7948  001E24  D01E               	goto	l1085
  7949                           
  7950                           ; BSR set to: 0
  7951  001E26  0100               	movlb	0	; () banked
  7952  001E28  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7953  001E2A  D01B               	goto	l1085
  7954                           
  7955                           ; BSR set to: 0
  7956  001E2C  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  7957  001E30  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  7958  001E34  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  7959  001E38  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  7960  001E3C  0100               	movlb	0	; () banked
  7961  001E3E  1F6B               	comf	??___xxtofl& (0+255),f,b
  7962  001E40  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  7963  001E42  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  7964  001E44  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  7965  001E46  2B6B               	incf	??___xxtofl& (0+255),f,b
  7966  001E48  0E00               	movlw	0
  7967  001E4A  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7968  001E4C  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7969  001E4E  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7970  001E50  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  7971  001E54  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  7972  001E58  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  7973  001E5C  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  7974  001E60  D008               	goto	l5313
  7975  001E62                     l1085:
  7976                           
  7977                           ; BSR set to: 0
  7978  001E62  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  7979  001E66  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7980  001E6A  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7981  001E6E  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7982  001E72                     l5313:
  7983                           
  7984                           ; BSR set to: 0
  7985  001E72  0100               	movlb	0	; () banked
  7986  001E74  5167               	movf	___xxtofl@val& (0+255),w,b
  7987  001E76  0100               	movlb	0	; () banked
  7988  001E78  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7989  001E7A  0100               	movlb	0	; () banked
  7990  001E7C  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7991  001E7E  0100               	movlb	0	; () banked
  7992  001E80  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7993  001E82  A4D8               	btfss	status,2,c
  7994  001E84  D00A               	goto	l5319
  7995                           
  7996                           ; BSR set to: 0
  7997  001E86  0E00               	movlw	0
  7998  001E88  0100               	movlb	0	; () banked
  7999  001E8A  6F67               	movwf	?___xxtofl& (0+255),b
  8000  001E8C  0E00               	movlw	0
  8001  001E8E  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  8002  001E90  0E00               	movlw	0
  8003  001E92  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  8004  001E94  0E00               	movlw	0
  8005  001E96  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  8006                           
  8007                           ; BSR set to: 0
  8008  001E98  0012               	return	
  8009  001E9A                     l5319:
  8010                           
  8011                           ; BSR set to: 0
  8012  001E9A  0E96               	movlw	150
  8013  001E9C  0100               	movlb	0	; () banked
  8014  001E9E  6F70               	movwf	___xxtofl@exp& (0+255),b
  8015  001EA0  D008               	goto	l5323
  8016  001EA2                     l5321:
  8017                           
  8018                           ; BSR set to: 0
  8019  001EA2  0100               	movlb	0	; () banked
  8020  001EA4  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8021  001EA6  0100               	movlb	0	; () banked
  8022  001EA8  90D8               	bcf	status,0,c
  8023  001EAA  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8024  001EAC  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8025  001EAE  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8026  001EB0  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8027  001EB2                     l5323:
  8028                           
  8029                           ; BSR set to: 0
  8030  001EB2  0E00               	movlw	0
  8031  001EB4  0100               	movlb	0	; () banked
  8032  001EB6  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8033  001EB8  0100               	movlb	0	; () banked
  8034  001EBA  6F6B               	movwf	??___xxtofl& (0+255),b
  8035  001EBC  0E00               	movlw	0
  8036  001EBE  0100               	movlb	0	; () banked
  8037  001EC0  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8038  001EC2  0100               	movlb	0	; () banked
  8039  001EC4  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8040  001EC6  0E00               	movlw	0
  8041  001EC8  0100               	movlb	0	; () banked
  8042  001ECA  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8043  001ECC  0100               	movlb	0	; () banked
  8044  001ECE  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8045  001ED0  0EFE               	movlw	254
  8046  001ED2  0100               	movlb	0	; () banked
  8047  001ED4  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8048  001ED6  0100               	movlb	0	; () banked
  8049  001ED8  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8050  001EDA  0100               	movlb	0	; () banked
  8051  001EDC  516B               	movf	??___xxtofl& (0+255),w,b
  8052  001EDE  0100               	movlb	0	; () banked
  8053  001EE0  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8054  001EE2  0100               	movlb	0	; () banked
  8055  001EE4  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8056  001EE6  0100               	movlb	0	; () banked
  8057  001EE8  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8058  001EEA  B4D8               	btfsc	status,2,c
  8059  001EEC  D010               	goto	l1092
  8060  001EEE  D7D9               	goto	l5321
  8061  001EF0                     l5325:
  8062                           
  8063                           ; BSR set to: 0
  8064  001EF0  0100               	movlb	0	; () banked
  8065  001EF2  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8066                           
  8067                           ; BSR set to: 0
  8068  001EF4  0E01               	movlw	1
  8069  001EF6  0100               	movlb	0	; () banked
  8070  001EF8  2771               	addwf	___xxtofl@arg& (0+255),f,b
  8071  001EFA  0E00               	movlw	0
  8072  001EFC  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8073  001EFE  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8074  001F00  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8075                           
  8076                           ; BSR set to: 0
  8077  001F02  0100               	movlb	0	; () banked
  8078  001F04  90D8               	bcf	status,0,c
  8079  001F06  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8080  001F08  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8081  001F0A  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8082  001F0C  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8083  001F0E                     l1092:
  8084                           
  8085                           ; BSR set to: 0
  8086  001F0E  0E00               	movlw	0
  8087  001F10  0100               	movlb	0	; () banked
  8088  001F12  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8089  001F14  0100               	movlb	0	; () banked
  8090  001F16  6F6B               	movwf	??___xxtofl& (0+255),b
  8091  001F18  0E00               	movlw	0
  8092  001F1A  0100               	movlb	0	; () banked
  8093  001F1C  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8094  001F1E  0100               	movlb	0	; () banked
  8095  001F20  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8096  001F22  0E00               	movlw	0
  8097  001F24  0100               	movlb	0	; () banked
  8098  001F26  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8099  001F28  0100               	movlb	0	; () banked
  8100  001F2A  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8101  001F2C  0EFF               	movlw	255
  8102  001F2E  0100               	movlb	0	; () banked
  8103  001F30  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8104  001F32  0100               	movlb	0	; () banked
  8105  001F34  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8106  001F36  0100               	movlb	0	; () banked
  8107  001F38  516B               	movf	??___xxtofl& (0+255),w,b
  8108  001F3A  0100               	movlb	0	; () banked
  8109  001F3C  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8110  001F3E  0100               	movlb	0	; () banked
  8111  001F40  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8112  001F42  0100               	movlb	0	; () banked
  8113  001F44  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8114  001F46  B4D8               	btfsc	status,2,c
  8115  001F48  D009               	goto	l5333
  8116  001F4A  D7D2               	goto	l5325
  8117  001F4C                     l5331:
  8118                           
  8119                           ; BSR set to: 0
  8120  001F4C  0100               	movlb	0	; () banked
  8121  001F4E  0770               	decf	___xxtofl@exp& (0+255),f,b
  8122  001F50  0100               	movlb	0	; () banked
  8123  001F52  90D8               	bcf	status,0,c
  8124  001F54  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  8125  001F56  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8126  001F58  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8127  001F5A  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8128  001F5C                     l5333:
  8129                           
  8130                           ; BSR set to: 0
  8131  001F5C  0100               	movlb	0	; () banked
  8132  001F5E  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8133  001F60  D004               	goto	l1099
  8134                           
  8135                           ; BSR set to: 0
  8136  001F62  0E02               	movlw	2
  8137  001F64  0100               	movlb	0	; () banked
  8138  001F66  6170               	cpfslt	___xxtofl@exp& (0+255),b
  8139  001F68  D7F1               	goto	l5331
  8140  001F6A                     l1099:
  8141                           
  8142                           ; BSR set to: 0
  8143  001F6A  0100               	movlb	0	; () banked
  8144  001F6C  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  8145  001F6E  D009               	goto	l1100
  8146                           
  8147                           ; BSR set to: 0
  8148  001F70  0EFF               	movlw	255
  8149  001F72  0100               	movlb	0	; () banked
  8150  001F74  1771               	andwf	___xxtofl@arg& (0+255),f,b
  8151  001F76  0EFF               	movlw	255
  8152  001F78  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8153  001F7A  0E7F               	movlw	127
  8154  001F7C  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8155  001F7E  0EFF               	movlw	255
  8156  001F80  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8157  001F82                     l1100:
  8158                           
  8159                           ; BSR set to: 0
  8160  001F82  0100               	movlb	0	; () banked
  8161  001F84  90D8               	bcf	status,0,c
  8162  001F86  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  8163  001F88  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  8164  001F8C  0100               	movlb	0	; () banked
  8165  001F8E  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8166  001F90  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8167  001F92  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  8168  001F94  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  8169  001F98  0100               	movlb	0	; () banked
  8170  001F9A  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8171  001F9C  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8172  001F9E  6B6B               	clrf	??___xxtofl& (0+255),b
  8173  001FA0  0100               	movlb	0	; () banked
  8174  001FA2  516B               	movf	??___xxtofl& (0+255),w,b
  8175  001FA4  0100               	movlb	0	; () banked
  8176  001FA6  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  8177  001FA8  0100               	movlb	0	; () banked
  8178  001FAA  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  8179  001FAC  0100               	movlb	0	; () banked
  8180  001FAE  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8181  001FB0  0100               	movlb	0	; () banked
  8182  001FB2  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  8183  001FB4  0100               	movlb	0	; () banked
  8184  001FB6  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8185  001FB8  0100               	movlb	0	; () banked
  8186  001FBA  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  8187  001FBC  0100               	movlb	0	; () banked
  8188  001FBE  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8189                           
  8190                           ; BSR set to: 0
  8191  001FC0  0100               	movlb	0	; () banked
  8192  001FC2  516F               	movf	___xxtofl@sign& (0+255),w,b
  8193  001FC4  0100               	movlb	0	; () banked
  8194  001FC6  B4D8               	btfsc	status,2,c
  8195  001FC8  D005               	goto	l5345
  8196                           
  8197                           ; BSR set to: 0
  8198  001FCA  0100               	movlb	0	; () banked
  8199  001FCC  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8200  001FCE  D002               	goto	l5345
  8201                           
  8202                           ; BSR set to: 0
  8203  001FD0  0100               	movlb	0	; () banked
  8204  001FD2  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8205  001FD4                     l5345:
  8206                           
  8207                           ; BSR set to: 0
  8208  001FD4  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  8209  001FD8  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  8210  001FDC  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  8211  001FE0  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8212  001FE4  0012               	return	
  8213  001FE6                     __end_of___xxtofl:
  8214                           	opt stack 0
  8215                           tblptru	equ	0xFF8
  8216                           tblptrh	equ	0xFF7
  8217                           tblptrl	equ	0xFF6
  8218                           tablat	equ	0xFF5
  8219                           prodh	equ	0xFF4
  8220                           prodl	equ	0xFF3
  8221                           intcon	equ	0xFF2
  8222                           postinc0	equ	0xFEE
  8223                           wreg	equ	0xFE8
  8224                           indf1	equ	0xFE7
  8225                           postinc1	equ	0xFE6
  8226                           fsr1h	equ	0xFE2
  8227                           fsr1l	equ	0xFE1
  8228                           indf2	equ	0xFDF
  8229                           postinc2	equ	0xFDE
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function ___llmod *****************
  8235 ;; Defined at:
  8236 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  dividend        4    0[BANK0 ] unsigned long 
  8239 ;;  divisor         4    4[BANK0 ] unsigned long 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  counter         1    8[BANK0 ] unsigned char 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  4    0[BANK0 ] unsigned long 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8251 ;;      Params:         0       8       0       0
  8252 ;;      Locals:         0       1       0       0
  8253 ;;      Temps:          0       0       0       0
  8254 ;;      Totals:         0       9       0       0
  8255 ;;Total ram usage:        9 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    3
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_sprintf
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text24
  8266  002E36                     __ptext24:
  8267                           	opt stack 0
  8268  002E36                     ___llmod:
  8269                           	opt stack 25
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;incstack = 0
  8273  002E36  0100               	movlb	0	; () banked
  8274  002E38  5164               	movf	___llmod@divisor& (0+255),w,b
  8275  002E3A  0100               	movlb	0	; () banked
  8276  002E3C  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8277  002E3E  0100               	movlb	0	; () banked
  8278  002E40  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8279  002E42  0100               	movlb	0	; () banked
  8280  002E44  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8281  002E46  B4D8               	btfsc	status,2,c
  8282  002E48  D03A               	goto	l893
  8283                           
  8284                           ; BSR set to: 0
  8285  002E4A  0E01               	movlw	1
  8286  002E4C  0100               	movlb	0	; () banked
  8287  002E4E  6F68               	movwf	___llmod@counter& (0+255),b
  8288  002E50  D008               	goto	l5297
  8289  002E52                     l5295:
  8290                           
  8291                           ; BSR set to: 0
  8292  002E52  0100               	movlb	0	; () banked
  8293  002E54  90D8               	bcf	status,0,c
  8294  002E56  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8295  002E58  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8296  002E5A  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8297  002E5C  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8298  002E5E  0100               	movlb	0	; () banked
  8299  002E60  2B68               	incf	___llmod@counter& (0+255),f,b
  8300  002E62                     l5297:
  8301                           
  8302                           ; BSR set to: 0
  8303  002E62  0100               	movlb	0	; () banked
  8304  002E64  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8305  002E66  D7F5               	goto	l5295
  8306  002E68                     l5299:
  8307                           
  8308                           ; BSR set to: 0
  8309  002E68  0100               	movlb	0	; () banked
  8310  002E6A  5164               	movf	___llmod@divisor& (0+255),w,b
  8311  002E6C  0100               	movlb	0	; () banked
  8312  002E6E  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8313  002E70  0100               	movlb	0	; () banked
  8314  002E72  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8315  002E74  0100               	movlb	0	; () banked
  8316  002E76  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8317  002E78  0100               	movlb	0	; () banked
  8318  002E7A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8319  002E7C  0100               	movlb	0	; () banked
  8320  002E7E  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8321  002E80  0100               	movlb	0	; () banked
  8322  002E82  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8323  002E84  0100               	movlb	0	; () banked
  8324  002E86  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8325  002E88  A0D8               	btfss	status,0,c
  8326  002E8A  D010               	goto	l5303
  8327                           
  8328                           ; BSR set to: 0
  8329  002E8C  0100               	movlb	0	; () banked
  8330  002E8E  5164               	movf	___llmod@divisor& (0+255),w,b
  8331  002E90  0100               	movlb	0	; () banked
  8332  002E92  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8333  002E94  0100               	movlb	0	; () banked
  8334  002E96  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8335  002E98  0100               	movlb	0	; () banked
  8336  002E9A  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8337  002E9C  0100               	movlb	0	; () banked
  8338  002E9E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8339  002EA0  0100               	movlb	0	; () banked
  8340  002EA2  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8341  002EA4  0100               	movlb	0	; () banked
  8342  002EA6  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8343  002EA8  0100               	movlb	0	; () banked
  8344  002EAA  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8345  002EAC                     l5303:
  8346                           
  8347                           ; BSR set to: 0
  8348  002EAC  0100               	movlb	0	; () banked
  8349  002EAE  90D8               	bcf	status,0,c
  8350  002EB0  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8351  002EB2  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8352  002EB4  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8353  002EB6  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8354                           
  8355                           ; BSR set to: 0
  8356  002EB8  0100               	movlb	0	; () banked
  8357  002EBA  2F68               	decfsz	___llmod@counter& (0+255),f,b
  8358  002EBC  D7D5               	goto	l5299
  8359  002EBE                     l893:
  8360                           
  8361                           ; BSR set to: 0
  8362  002EBE  C060  F060         	movff	___llmod@dividend,?___llmod
  8363  002EC2  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8364  002EC6  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8365  002ECA  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8366                           
  8367                           ; BSR set to: 0
  8368  002ECE  0012               	return		;funcret
  8369  002ED0                     __end_of___llmod:
  8370                           	opt stack 0
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           intcon	equ	0xFF2
  8378                           postinc0	equ	0xFEE
  8379                           wreg	equ	0xFE8
  8380                           indf1	equ	0xFE7
  8381                           postinc1	equ	0xFE6
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           fsr2h	equ	0xFDA
  8387                           fsr2l	equ	0xFD9
  8388                           status	equ	0xFD8
  8389                           
  8390 ;; *************** function ___lldiv *****************
  8391 ;; Defined at:
  8392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  dividend        4    0[BANK0 ] unsigned long 
  8395 ;;  divisor         4    4[BANK0 ] unsigned long 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  quotient        4    8[BANK0 ] unsigned long 
  8398 ;;  counter         1   12[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  4    0[BANK0 ] unsigned long 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8408 ;;      Params:         0       8       0       0
  8409 ;;      Locals:         0       5       0       0
  8410 ;;      Temps:          0       0       0       0
  8411 ;;      Totals:         0      13       0       0
  8412 ;;Total ram usage:       13 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    3
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_sprintf
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text25
  8423  002C30                     __ptext25:
  8424                           	opt stack 0
  8425  002C30                     ___lldiv:
  8426                           	opt stack 25
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  002C30  0E00               	movlw	0
  8431  002C32  0100               	movlb	0	; () banked
  8432  002C34  6F68               	movwf	___lldiv@quotient& (0+255),b
  8433  002C36  0E00               	movlw	0
  8434  002C38  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8435  002C3A  0E00               	movlw	0
  8436  002C3C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8437  002C3E  0E00               	movlw	0
  8438  002C40  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8439                           
  8440                           ; BSR set to: 0
  8441  002C42  0100               	movlb	0	; () banked
  8442  002C44  5164               	movf	___lldiv@divisor& (0+255),w,b
  8443  002C46  0100               	movlb	0	; () banked
  8444  002C48  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8445  002C4A  0100               	movlb	0	; () banked
  8446  002C4C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8447  002C4E  0100               	movlb	0	; () banked
  8448  002C50  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8449  002C52  B4D8               	btfsc	status,2,c
  8450  002C54  D042               	goto	l883
  8451                           
  8452                           ; BSR set to: 0
  8453  002C56  0E01               	movlw	1
  8454  002C58  0100               	movlb	0	; () banked
  8455  002C5A  6F6C               	movwf	___lldiv@counter& (0+255),b
  8456  002C5C  D008               	goto	l5277
  8457  002C5E                     l5275:
  8458                           
  8459                           ; BSR set to: 0
  8460  002C5E  0100               	movlb	0	; () banked
  8461  002C60  90D8               	bcf	status,0,c
  8462  002C62  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8463  002C64  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8464  002C66  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8465  002C68  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8466  002C6A  0100               	movlb	0	; () banked
  8467  002C6C  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8468  002C6E                     l5277:
  8469                           
  8470                           ; BSR set to: 0
  8471  002C6E  0100               	movlb	0	; () banked
  8472  002C70  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8473  002C72  D7F5               	goto	l5275
  8474  002C74                     l5279:
  8475                           
  8476                           ; BSR set to: 0
  8477  002C74  0100               	movlb	0	; () banked
  8478  002C76  90D8               	bcf	status,0,c
  8479  002C78  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8480  002C7A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8481  002C7C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8482  002C7E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8483                           
  8484                           ; BSR set to: 0
  8485  002C80  0100               	movlb	0	; () banked
  8486  002C82  5164               	movf	___lldiv@divisor& (0+255),w,b
  8487  002C84  0100               	movlb	0	; () banked
  8488  002C86  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8489  002C88  0100               	movlb	0	; () banked
  8490  002C8A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8491  002C8C  0100               	movlb	0	; () banked
  8492  002C8E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8493  002C90  0100               	movlb	0	; () banked
  8494  002C92  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8495  002C94  0100               	movlb	0	; () banked
  8496  002C96  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8497  002C98  0100               	movlb	0	; () banked
  8498  002C9A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8499  002C9C  0100               	movlb	0	; () banked
  8500  002C9E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8501  002CA0  A0D8               	btfss	status,0,c
  8502  002CA2  D012               	goto	l5287
  8503                           
  8504                           ; BSR set to: 0
  8505  002CA4  0100               	movlb	0	; () banked
  8506  002CA6  5164               	movf	___lldiv@divisor& (0+255),w,b
  8507  002CA8  0100               	movlb	0	; () banked
  8508  002CAA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8509  002CAC  0100               	movlb	0	; () banked
  8510  002CAE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8511  002CB0  0100               	movlb	0	; () banked
  8512  002CB2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8513  002CB4  0100               	movlb	0	; () banked
  8514  002CB6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8515  002CB8  0100               	movlb	0	; () banked
  8516  002CBA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8517  002CBC  0100               	movlb	0	; () banked
  8518  002CBE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8519  002CC0  0100               	movlb	0	; () banked
  8520  002CC2  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 0
  8523  002CC4  0100               	movlb	0	; () banked
  8524  002CC6  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8525  002CC8                     l5287:
  8526                           
  8527                           ; BSR set to: 0
  8528  002CC8  0100               	movlb	0	; () banked
  8529  002CCA  90D8               	bcf	status,0,c
  8530  002CCC  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8531  002CCE  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8532  002CD0  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8533  002CD2  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8534                           
  8535                           ; BSR set to: 0
  8536  002CD4  0100               	movlb	0	; () banked
  8537  002CD6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8538  002CD8  D7CD               	goto	l5279
  8539  002CDA                     l883:
  8540                           
  8541                           ; BSR set to: 0
  8542  002CDA  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8543  002CDE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8544  002CE2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8545  002CE6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8546                           
  8547                           ; BSR set to: 0
  8548  002CEA  0012               	return		;funcret
  8549  002CEC                     __end_of___lldiv:
  8550                           	opt stack 0
  8551                           tblptru	equ	0xFF8
  8552                           tblptrh	equ	0xFF7
  8553                           tblptrl	equ	0xFF6
  8554                           tablat	equ	0xFF5
  8555                           prodh	equ	0xFF4
  8556                           prodl	equ	0xFF3
  8557                           intcon	equ	0xFF2
  8558                           postinc0	equ	0xFEE
  8559                           wreg	equ	0xFE8
  8560                           indf1	equ	0xFE7
  8561                           postinc1	equ	0xFE6
  8562                           fsr1h	equ	0xFE2
  8563                           fsr1l	equ	0xFE1
  8564                           indf2	equ	0xFDF
  8565                           postinc2	equ	0xFDE
  8566                           fsr2h	equ	0xFDA
  8567                           fsr2l	equ	0xFD9
  8568                           status	equ	0xFD8
  8569                           
  8570 ;; *************** function ___fltol *****************
  8571 ;; Defined at:
  8572 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  f1              4   55[BANK0 ] unsigned long 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  exp1            1   64[BANK0 ] unsigned char 
  8577 ;;  sign1           1   63[BANK0 ] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  4   55[BANK0 ] long 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8587 ;;      Params:         0       4       0       0
  8588 ;;      Locals:         0       2       0       0
  8589 ;;      Temps:          0       4       0       0
  8590 ;;      Totals:         0      10       0       0
  8591 ;;Total ram usage:       10 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    3
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;;		_sprintf
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text26
  8603  00289C                     __ptext26:
  8604                           	opt stack 0
  8605  00289C                     ___fltol:
  8606                           	opt stack 27
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;incstack = 0
  8610  00289C  0100               	movlb	0	; () banked
  8611  00289E  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8612  0028A0  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8613  0028A2  0100               	movlb	0	; () banked
  8614  0028A4  6FA0               	movwf	___fltol@exp1& (0+255),b
  8615  0028A6  0100               	movlb	0	; () banked
  8616  0028A8  51A0               	movf	___fltol@exp1& (0+255),w,b
  8617  0028AA  A4D8               	btfss	status,2,c
  8618  0028AC  D00A               	goto	l5231
  8619                           
  8620                           ; BSR set to: 0
  8621  0028AE  0E00               	movlw	0
  8622  0028B0  0100               	movlb	0	; () banked
  8623  0028B2  6F97               	movwf	?___fltol& (0+255),b
  8624  0028B4  0E00               	movlw	0
  8625  0028B6  6F98               	movwf	(?___fltol+1)& (0+255),b
  8626  0028B8  0E00               	movlw	0
  8627  0028BA  6F99               	movwf	(?___fltol+2)& (0+255),b
  8628  0028BC  0E00               	movlw	0
  8629  0028BE  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8630                           
  8631                           ; BSR set to: 0
  8632  0028C0  0012               	return	
  8633  0028C2                     l5231:
  8634                           
  8635                           ; BSR set to: 0
  8636  0028C2  C097  F09B         	movff	___fltol@f1,??___fltol
  8637  0028C6  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  8638  0028CA  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  8639  0028CE  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  8640  0028D2  0E20               	movlw	32
  8641  0028D4  D006               	goto	u6140
  8642  0028D6                     u6145:
  8643  0028D6  0100               	movlb	0	; () banked
  8644  0028D8  90D8               	bcf	status,0,c
  8645  0028DA  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  8646  0028DC  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  8647  0028DE  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  8648  0028E0  339B               	rrcf	??___fltol& (0+255),f,b
  8649  0028E2                     u6140:
  8650  0028E2  2EE8               	decfsz	wreg,f,c
  8651  0028E4  D7F8               	goto	u6145
  8652  0028E6  0100               	movlb	0	; () banked
  8653  0028E8  519B               	movf	??___fltol& (0+255),w,b
  8654  0028EA  0100               	movlb	0	; () banked
  8655  0028EC  6F9F               	movwf	___fltol@sign1& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658  0028EE  0100               	movlb	0	; () banked
  8659  0028F0  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  8660                           
  8661                           ; BSR set to: 0
  8662  0028F2  0EFF               	movlw	255
  8663  0028F4  0100               	movlb	0	; () banked
  8664  0028F6  1797               	andwf	___fltol@f1& (0+255),f,b
  8665  0028F8  0EFF               	movlw	255
  8666  0028FA  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  8667  0028FC  0EFF               	movlw	255
  8668  0028FE  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  8669  002900  0E00               	movlw	0
  8670  002902  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8671                           
  8672                           ; BSR set to: 0
  8673  002904  0E96               	movlw	150
  8674  002906  0100               	movlb	0	; () banked
  8675  002908  5FA0               	subwf	___fltol@exp1& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  00290A  0100               	movlb	0	; () banked
  8679  00290C  AFA0               	btfss	___fltol@exp1& (0+255),7,b
  8680  00290E  D01A               	goto	l5251
  8681                           
  8682                           ; BSR set to: 0
  8683  002910  0100               	movlb	0	; () banked
  8684  002912  51A0               	movf	___fltol@exp1& (0+255),w,b
  8685  002914  0A80               	xorlw	128
  8686  002916  0F97               	addlw	151
  8687  002918  B0D8               	btfsc	status,0,c
  8688  00291A  D00A               	goto	l5247
  8689                           
  8690                           ; BSR set to: 0
  8691  00291C  0E00               	movlw	0
  8692  00291E  0100               	movlb	0	; () banked
  8693  002920  6F97               	movwf	?___fltol& (0+255),b
  8694  002922  0E00               	movlw	0
  8695  002924  6F98               	movwf	(?___fltol+1)& (0+255),b
  8696  002926  0E00               	movlw	0
  8697  002928  6F99               	movwf	(?___fltol+2)& (0+255),b
  8698  00292A  0E00               	movlw	0
  8699  00292C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702  00292E  0012               	return	
  8703  002930                     l5247:
  8704                           
  8705                           ; BSR set to: 0
  8706  002930  0100               	movlb	0	; () banked
  8707  002932  90D8               	bcf	status,0,c
  8708  002934  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8709  002936  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8710  002938  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8711  00293A  3397               	rrcf	___fltol@f1& (0+255),f,b
  8712                           
  8713                           ; BSR set to: 0
  8714  00293C  0100               	movlb	0	; () banked
  8715  00293E  3FA0               	incfsz	___fltol@exp1& (0+255),f,b
  8716  002940  D7F7               	goto	l5247
  8717                           
  8718                           ; BSR set to: 0
  8719  002942  D01B               	goto	l5261
  8720  002944                     l5251:
  8721                           
  8722                           ; BSR set to: 0
  8723  002944  0E1F               	movlw	31
  8724  002946  0100               	movlb	0	; () banked
  8725  002948  65A0               	cpfsgt	___fltol@exp1& (0+255),b
  8726  00294A  D012               	goto	l5259
  8727                           
  8728                           ; BSR set to: 0
  8729  00294C  0E00               	movlw	0
  8730  00294E  0100               	movlb	0	; () banked
  8731  002950  6F97               	movwf	?___fltol& (0+255),b
  8732  002952  0E00               	movlw	0
  8733  002954  6F98               	movwf	(?___fltol+1)& (0+255),b
  8734  002956  0E00               	movlw	0
  8735  002958  6F99               	movwf	(?___fltol+2)& (0+255),b
  8736  00295A  0E00               	movlw	0
  8737  00295C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740  00295E  0012               	return	
  8741  002960                     l5257:
  8742                           
  8743                           ; BSR set to: 0
  8744  002960  0100               	movlb	0	; () banked
  8745  002962  90D8               	bcf	status,0,c
  8746  002964  3797               	rlcf	___fltol@f1& (0+255),f,b
  8747  002966  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8748  002968  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8749  00296A  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8750  00296C  0100               	movlb	0	; () banked
  8751  00296E  07A0               	decf	___fltol@exp1& (0+255),f,b
  8752  002970                     l5259:
  8753                           
  8754                           ; BSR set to: 0
  8755  002970  0100               	movlb	0	; () banked
  8756  002972  51A0               	movf	___fltol@exp1& (0+255),w,b
  8757  002974  0100               	movlb	0	; () banked
  8758  002976  A4D8               	btfss	status,2,c
  8759  002978  D7F3               	goto	l5257
  8760  00297A                     l5261:
  8761                           
  8762                           ; BSR set to: 0
  8763  00297A  0100               	movlb	0	; () banked
  8764  00297C  519F               	movf	___fltol@sign1& (0+255),w,b
  8765  00297E  0100               	movlb	0	; () banked
  8766  002980  B4D8               	btfsc	status,2,c
  8767  002982  D009               	goto	l5265
  8768                           
  8769                           ; BSR set to: 0
  8770  002984  0100               	movlb	0	; () banked
  8771  002986  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  8772  002988  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  8773  00298A  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  8774  00298C  6D97               	negf	___fltol@f1& (0+255),b
  8775  00298E  0E00               	movlw	0
  8776  002990  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8777  002992  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8778  002994  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8779  002996                     l5265:
  8780                           
  8781                           ; BSR set to: 0
  8782  002996  C097  F097         	movff	___fltol@f1,?___fltol
  8783  00299A  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  8784  00299E  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  8785  0029A2  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  8786  0029A6  0012               	return	
  8787  0029A8                     __end_of___fltol:
  8788                           	opt stack 0
  8789                           tblptru	equ	0xFF8
  8790                           tblptrh	equ	0xFF7
  8791                           tblptrl	equ	0xFF6
  8792                           tablat	equ	0xFF5
  8793                           prodh	equ	0xFF4
  8794                           prodl	equ	0xFF3
  8795                           intcon	equ	0xFF2
  8796                           postinc0	equ	0xFEE
  8797                           wreg	equ	0xFE8
  8798                           indf1	equ	0xFE7
  8799                           postinc1	equ	0xFE6
  8800                           fsr1h	equ	0xFE2
  8801                           fsr1l	equ	0xFE1
  8802                           indf2	equ	0xFDF
  8803                           postinc2	equ	0xFDE
  8804                           fsr2h	equ	0xFDA
  8805                           fsr2l	equ	0xFD9
  8806                           status	equ	0xFD8
  8807                           
  8808 ;; *************** function ___flsub *****************
  8809 ;; Defined at:
  8810 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;  b               4   79[BANK0 ] long 
  8813 ;;  a               4   83[BANK0 ] long 
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  4   79[BANK0 ] long 
  8818 ;; Registers used:
  8819 ;;		wreg, status,2, status,0, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8825 ;;      Params:         0       8       0       0
  8826 ;;      Locals:         0       0       0       0
  8827 ;;      Temps:          0       0       0       0
  8828 ;;      Totals:         0       8       0       0
  8829 ;;Total ram usage:        8 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    4
  8832 ;; This function calls:
  8833 ;;		___fladd
  8834 ;; This function is called by:
  8835 ;;		_sprintf
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text27
  8840  0031A8                     __ptext27:
  8841                           	opt stack 0
  8842  0031A8                     ___flsub:
  8843                           	opt stack 24
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;incstack = 0
  8847  0031A8  0E00               	movlw	0
  8848  0031AA  0100               	movlb	0	; () banked
  8849  0031AC  1BB3               	xorwf	___flsub@a& (0+255),f,b
  8850  0031AE  0E00               	movlw	0
  8851  0031B0  1BB4               	xorwf	(___flsub@a+1)& (0+255),f,b
  8852  0031B2  0E00               	movlw	0
  8853  0031B4  1BB5               	xorwf	(___flsub@a+2)& (0+255),f,b
  8854  0031B6  0E80               	movlw	128
  8855  0031B8  1BB6               	xorwf	(___flsub@a+3)& (0+255),f,b
  8856                           
  8857                           ; BSR set to: 0
  8858  0031BA  C0AF  F09B         	movff	___flsub@b,___fladd@b
  8859  0031BE  C0B0  F09C         	movff	___flsub@b+1,___fladd@b+1
  8860  0031C2  C0B1  F09D         	movff	___flsub@b+2,___fladd@b+2
  8861  0031C6  C0B2  F09E         	movff	___flsub@b+3,___fladd@b+3
  8862  0031CA  C0B3  F09F         	movff	___flsub@a,___fladd@a
  8863  0031CE  C0B4  F0A0         	movff	___flsub@a+1,___fladd@a+1
  8864  0031D2  C0B5  F0A1         	movff	___flsub@a+2,___fladd@a+2
  8865  0031D6  C0B6  F0A2         	movff	___flsub@a+3,___fladd@a+3
  8866  0031DA  ECFF  F006         	call	___fladd	;wreg free
  8867  0031DE  C09B  F0AF         	movff	?___fladd,?___flsub
  8868  0031E2  C09C  F0B0         	movff	?___fladd+1,?___flsub+1
  8869  0031E6  C09D  F0B1         	movff	?___fladd+2,?___flsub+2
  8870  0031EA  C09E  F0B2         	movff	?___fladd+3,?___flsub+3
  8871  0031EE  0012               	return	
  8872  0031F0                     __end_of___flsub:
  8873                           	opt stack 0
  8874                           tblptru	equ	0xFF8
  8875                           tblptrh	equ	0xFF7
  8876                           tblptrl	equ	0xFF6
  8877                           tablat	equ	0xFF5
  8878                           prodh	equ	0xFF4
  8879                           prodl	equ	0xFF3
  8880                           intcon	equ	0xFF2
  8881                           postinc0	equ	0xFEE
  8882                           wreg	equ	0xFE8
  8883                           indf1	equ	0xFE7
  8884                           postinc1	equ	0xFE6
  8885                           fsr1h	equ	0xFE2
  8886                           fsr1l	equ	0xFE1
  8887                           indf2	equ	0xFDF
  8888                           postinc2	equ	0xFDE
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8
  8892                           
  8893 ;; *************** function ___fladd *****************
  8894 ;; Defined at:
  8895 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  b               4   59[BANK0 ] long 
  8898 ;;  a               4   63[BANK0 ] long 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  grs             1   78[BANK0 ] unsigned char 
  8901 ;;  bexp            1   77[BANK0 ] unsigned char 
  8902 ;;  aexp            1   76[BANK0 ] unsigned char 
  8903 ;;  signs           1   75[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  4   59[BANK0 ] unsigned char 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8913 ;;      Params:         0       8       0       0
  8914 ;;      Locals:         0       4       0       0
  8915 ;;      Temps:          0       8       0       0
  8916 ;;      Totals:         0      20       0       0
  8917 ;;Total ram usage:       20 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    3
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_sprintf
  8924 ;;		___flsub
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text28
  8929  000DFE                     __ptext28:
  8930                           	opt stack 0
  8931  000DFE                     ___fladd:
  8932                           	opt stack 24
  8933                           
  8934                           ;incstack = 0
  8935  000DFE  0100               	movlb	0	; () banked
  8936  000E00  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8937  000E02  0B80               	andlw	128
  8938  000E04  0100               	movlb	0	; () banked
  8939  000E06  6FAB               	movwf	___fladd@signs& (0+255),b
  8940  000E08  0100               	movlb	0	; () banked
  8941  000E0A  519E               	movf	(___fladd@b+3)& (0+255),w,b
  8942  000E0C  259E               	addwf	(___fladd@b+3)& (0+255),w,b
  8943  000E0E  0100               	movlb	0	; () banked
  8944  000E10  6FAD               	movwf	___fladd@bexp& (0+255),b
  8945                           
  8946                           ; BSR set to: 0
  8947  000E12  0100               	movlb	0	; () banked
  8948  000E14  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  8949  000E16  D002               	goto	l4563
  8950                           
  8951                           ; BSR set to: 0
  8952  000E18  0100               	movlb	0	; () banked
  8953  000E1A  81AD               	bsf	___fladd@bexp& (0+255),0,b
  8954  000E1C                     l4563:
  8955                           
  8956                           ; BSR set to: 0
  8957  000E1C  0100               	movlb	0	; () banked
  8958  000E1E  51AD               	movf	___fladd@bexp& (0+255),w,b
  8959  000E20  0100               	movlb	0	; () banked
  8960  000E22  B4D8               	btfsc	status,2,c
  8961  000E24  D012               	goto	l4573
  8962                           
  8963                           ; BSR set to: 0
  8964  000E26  0100               	movlb	0	; () banked
  8965  000E28  29AD               	incf	___fladd@bexp& (0+255),w,b
  8966  000E2A  A4D8               	btfss	status,2,c
  8967  000E2C  D009               	goto	l4569
  8968                           
  8969                           ; BSR set to: 0
  8970  000E2E  0E00               	movlw	0
  8971  000E30  0100               	movlb	0	; () banked
  8972  000E32  6F9B               	movwf	___fladd@b& (0+255),b
  8973  000E34  0E00               	movlw	0
  8974  000E36  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  8975  000E38  0E00               	movlw	0
  8976  000E3A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  8977  000E3C  0E00               	movlw	0
  8978  000E3E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  8979  000E40                     l4569:
  8980                           
  8981                           ; BSR set to: 0
  8982  000E40  0100               	movlb	0	; () banked
  8983  000E42  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  8984                           
  8985                           ; BSR set to: 0
  8986  000E44  0E00               	movlw	0
  8987  000E46  0100               	movlb	0	; () banked
  8988  000E48  D008               	goto	L9
  8989  000E4A                     l4573:
  8990                           
  8991                           ; BSR set to: 0
  8992  000E4A  0E00               	movlw	0
  8993  000E4C  0100               	movlb	0	; () banked
  8994  000E4E  6F9B               	movwf	___fladd@b& (0+255),b
  8995  000E50  0E00               	movlw	0
  8996  000E52  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  8997  000E54  0E00               	movlw	0
  8998  000E56  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  8999  000E58  0E00               	movlw	0
  9000  000E5A                     L9:
  9001  000E5A  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9002                           
  9003                           ; BSR set to: 0
  9004                           
  9005                           ; BSR set to: 0
  9006  000E5C  0100               	movlb	0	; () banked
  9007  000E5E  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9008  000E60  0B80               	andlw	128
  9009  000E62  0100               	movlb	0	; () banked
  9010  000E64  6FAC               	movwf	___fladd@aexp& (0+255),b
  9011                           
  9012                           ; BSR set to: 0
  9013  000E66  0100               	movlb	0	; () banked
  9014  000E68  51AB               	movf	___fladd@signs& (0+255),w,b
  9015  000E6A  0100               	movlb	0	; () banked
  9016  000E6C  19AC               	xorwf	___fladd@aexp& (0+255),w,b
  9017  000E6E  B4D8               	btfsc	status,2,c
  9018  000E70  D002               	goto	l4581
  9019                           
  9020                           ; BSR set to: 0
  9021  000E72  0100               	movlb	0	; () banked
  9022  000E74  8DAB               	bsf	___fladd@signs& (0+255),6,b
  9023  000E76                     l4581:
  9024                           
  9025                           ; BSR set to: 0
  9026  000E76  0100               	movlb	0	; () banked
  9027  000E78  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9028  000E7A  25A2               	addwf	(___fladd@a+3)& (0+255),w,b
  9029  000E7C  0100               	movlb	0	; () banked
  9030  000E7E  6FAC               	movwf	___fladd@aexp& (0+255),b
  9031                           
  9032                           ; BSR set to: 0
  9033  000E80  0100               	movlb	0	; () banked
  9034  000E82  AFA1               	btfss	(___fladd@a+2)& (0+255),7,b
  9035  000E84  D002               	goto	l4587
  9036                           
  9037                           ; BSR set to: 0
  9038  000E86  0100               	movlb	0	; () banked
  9039  000E88  81AC               	bsf	___fladd@aexp& (0+255),0,b
  9040  000E8A                     l4587:
  9041                           
  9042                           ; BSR set to: 0
  9043  000E8A  0100               	movlb	0	; () banked
  9044  000E8C  51AC               	movf	___fladd@aexp& (0+255),w,b
  9045  000E8E  0100               	movlb	0	; () banked
  9046  000E90  B4D8               	btfsc	status,2,c
  9047  000E92  D012               	goto	l4597
  9048                           
  9049                           ; BSR set to: 0
  9050  000E94  0100               	movlb	0	; () banked
  9051  000E96  29AC               	incf	___fladd@aexp& (0+255),w,b
  9052  000E98  A4D8               	btfss	status,2,c
  9053  000E9A  D009               	goto	l4593
  9054                           
  9055                           ; BSR set to: 0
  9056  000E9C  0E00               	movlw	0
  9057  000E9E  0100               	movlb	0	; () banked
  9058  000EA0  6F9F               	movwf	___fladd@a& (0+255),b
  9059  000EA2  0E00               	movlw	0
  9060  000EA4  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9061  000EA6  0E00               	movlw	0
  9062  000EA8  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9063  000EAA  0E00               	movlw	0
  9064  000EAC  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9065  000EAE                     l4593:
  9066                           
  9067                           ; BSR set to: 0
  9068  000EAE  0100               	movlb	0	; () banked
  9069  000EB0  8FA1               	bsf	(___fladd@a+2)& (0+255),7,b
  9070                           
  9071                           ; BSR set to: 0
  9072  000EB2  0E00               	movlw	0
  9073  000EB4  0100               	movlb	0	; () banked
  9074  000EB6  D008               	goto	L10
  9075  000EB8                     l4597:
  9076                           
  9077                           ; BSR set to: 0
  9078  000EB8  0E00               	movlw	0
  9079  000EBA  0100               	movlb	0	; () banked
  9080  000EBC  6F9F               	movwf	___fladd@a& (0+255),b
  9081  000EBE  0E00               	movlw	0
  9082  000EC0  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  9083  000EC2  0E00               	movlw	0
  9084  000EC4  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  9085  000EC6  0E00               	movlw	0
  9086  000EC8                     L10:
  9087  000EC8  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  9088                           
  9089                           ; BSR set to: 0
  9090                           
  9091                           ; BSR set to: 0
  9092  000ECA  0100               	movlb	0	; () banked
  9093  000ECC  51AD               	movf	___fladd@bexp& (0+255),w,b
  9094  000ECE  0100               	movlb	0	; () banked
  9095  000ED0  5DAC               	subwf	___fladd@aexp& (0+255),w,b
  9096  000ED2  B0D8               	btfsc	status,0,c
  9097  000ED4  D024               	goto	l4635
  9098                           
  9099                           ; BSR set to: 0
  9100  000ED6  0100               	movlb	0	; () banked
  9101  000ED8  ADAB               	btfss	___fladd@signs& (0+255),6,b
  9102  000EDA  D003               	goto	l4605
  9103                           
  9104                           ; BSR set to: 0
  9105  000EDC  0E80               	movlw	128
  9106  000EDE  0100               	movlb	0	; () banked
  9107  000EE0  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9108  000EE2                     l4605:
  9109                           
  9110                           ; BSR set to: 0
  9111  000EE2  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
  9112                           
  9113                           ; BSR set to: 0
  9114  000EE6  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9115                           
  9116                           ; BSR set to: 0
  9117  000EEA  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
  9118                           
  9119                           ; BSR set to: 0
  9120  000EEE  C09B  F0AE         	movff	___fladd@b,___fladd@grs
  9121                           
  9122                           ; BSR set to: 0
  9123  000EF2  C09F  F09B         	movff	___fladd@a,___fladd@b
  9124                           
  9125                           ; BSR set to: 0
  9126  000EF6  C0AE  F09F         	movff	___fladd@grs,___fladd@a
  9127                           
  9128                           ; BSR set to: 0
  9129  000EFA  C09C  F0AE         	movff	___fladd@b+1,___fladd@grs
  9130                           
  9131                           ; BSR set to: 0
  9132  000EFE  C0A0  F09C         	movff	___fladd@a+1,___fladd@b+1
  9133                           
  9134                           ; BSR set to: 0
  9135  000F02  C0AE  F0A0         	movff	___fladd@grs,___fladd@a+1
  9136                           
  9137                           ; BSR set to: 0
  9138  000F06  C09D  F0AE         	movff	___fladd@b+2,___fladd@grs
  9139                           
  9140                           ; BSR set to: 0
  9141  000F0A  C0A1  F09D         	movff	___fladd@a+2,___fladd@b+2
  9142                           
  9143                           ; BSR set to: 0
  9144  000F0E  C0AE  F0A1         	movff	___fladd@grs,___fladd@a+2
  9145                           
  9146                           ; BSR set to: 0
  9147  000F12  C09E  F0AE         	movff	___fladd@b+3,___fladd@grs
  9148                           
  9149                           ; BSR set to: 0
  9150  000F16  C0A2  F09E         	movff	___fladd@a+3,___fladd@b+3
  9151                           
  9152                           ; BSR set to: 0
  9153  000F1A  C0AE  F0A2         	movff	___fladd@grs,___fladd@a+3
  9154  000F1E                     l4635:
  9155                           
  9156                           ; BSR set to: 0
  9157  000F1E  0E00               	movlw	0
  9158  000F20  0100               	movlb	0	; () banked
  9159  000F22  6FAE               	movwf	___fladd@grs& (0+255),b
  9160                           
  9161                           ; BSR set to: 0
  9162  000F24  0100               	movlb	0	; () banked
  9163  000F26  51AD               	movf	___fladd@bexp& (0+255),w,b
  9164  000F28  0100               	movlb	0	; () banked
  9165  000F2A  6FA3               	movwf	??___fladd& (0+255),b
  9166  000F2C  6BA4               	clrf	(??___fladd+1)& (0+255),b
  9167  000F2E  0100               	movlb	0	; () banked
  9168  000F30  1FA3               	comf	??___fladd& (0+255),f,b
  9169  000F32  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9170  000F34  4BA3               	infsnz	??___fladd& (0+255),f,b
  9171  000F36  2BA4               	incf	(??___fladd+1)& (0+255),f,b
  9172  000F38  0100               	movlb	0	; () banked
  9173  000F3A  51AC               	movf	___fladd@aexp& (0+255),w,b
  9174  000F3C  0100               	movlb	0	; () banked
  9175  000F3E  6FA5               	movwf	(??___fladd+2)& (0+255),b
  9176  000F40  6BA6               	clrf	(??___fladd+3)& (0+255),b
  9177  000F42  0100               	movlb	0	; () banked
  9178  000F44  51A3               	movf	??___fladd& (0+255),w,b
  9179  000F46  0100               	movlb	0	; () banked
  9180  000F48  27A5               	addwf	(??___fladd+2)& (0+255),f,b
  9181  000F4A  0100               	movlb	0	; () banked
  9182  000F4C  51A4               	movf	(??___fladd+1)& (0+255),w,b
  9183  000F4E  0100               	movlb	0	; () banked
  9184  000F50  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9185  000F52  0100               	movlb	0	; () banked
  9186  000F54  BFA6               	btfsc	(??___fladd+3)& (0+255),7,b
  9187  000F56  D03D               	goto	l978
  9188  000F58  0100               	movlb	0	; () banked
  9189  000F5A  51A6               	movf	(??___fladd+3)& (0+255),w,b
  9190  000F5C  E105               	bnz	u5190
  9191  000F5E  0E1A               	movlw	26
  9192  000F60  0100               	movlb	0	; () banked
  9193  000F62  5DA5               	subwf	(??___fladd+2)& (0+255),w,b
  9194  000F64  A0D8               	btfss	status,0,c
  9195  000F66  D035               	goto	l978
  9196  000F68                     u5190:
  9197                           
  9198                           ; BSR set to: 0
  9199  000F68  0100               	movlb	0	; () banked
  9200  000F6A  519B               	movf	___fladd@b& (0+255),w,b
  9201  000F6C  0100               	movlb	0	; () banked
  9202  000F6E  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9203  000F70  0100               	movlb	0	; () banked
  9204  000F72  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9205  000F74  0100               	movlb	0	; () banked
  9206  000F76  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9207  000F78  B4D8               	btfsc	status,2,c
  9208  000F7A  D002               	goto	u5200
  9209  000F7C  0E01               	movlw	1
  9210  000F7E  D001               	goto	u5210
  9211  000F80                     u5200:
  9212  000F80  0E00               	movlw	0
  9213  000F82                     u5210:
  9214  000F82  0100               	movlb	0	; () banked
  9215  000F84  6FAE               	movwf	___fladd@grs& (0+255),b
  9216                           
  9217                           ; BSR set to: 0
  9218  000F86  0E00               	movlw	0
  9219  000F88  0100               	movlb	0	; () banked
  9220  000F8A  6F9B               	movwf	___fladd@b& (0+255),b
  9221  000F8C  0E00               	movlw	0
  9222  000F8E  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9223  000F90  0E00               	movlw	0
  9224  000F92  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9225  000F94  0E00               	movlw	0
  9226  000F96  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229  000F98  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  9230  000F9C  D020               	goto	l977
  9231  000F9E                     l979:
  9232                           
  9233                           ; BSR set to: 0
  9234  000F9E  0100               	movlb	0	; () banked
  9235  000FA0  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9236  000FA2  D007               	goto	l4647
  9237                           
  9238                           ; BSR set to: 0
  9239  000FA4  0100               	movlb	0	; () banked
  9240  000FA6  90D8               	bcf	status,0,c
  9241  000FA8  31AE               	rrcf	___fladd@grs& (0+255),w,b
  9242  000FAA  0901               	iorlw	1
  9243  000FAC  0100               	movlb	0	; () banked
  9244  000FAE  6FAE               	movwf	___fladd@grs& (0+255),b
  9245  000FB0  D003               	goto	l4649
  9246  000FB2                     l4647:
  9247                           
  9248                           ; BSR set to: 0
  9249  000FB2  0100               	movlb	0	; () banked
  9250  000FB4  90D8               	bcf	status,0,c
  9251  000FB6  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9252  000FB8                     l4649:
  9253                           
  9254                           ; BSR set to: 0
  9255  000FB8  0100               	movlb	0	; () banked
  9256  000FBA  A19B               	btfss	___fladd@b& (0+255),0,b
  9257  000FBC  D002               	goto	l4653
  9258                           
  9259                           ; BSR set to: 0
  9260  000FBE  0100               	movlb	0	; () banked
  9261  000FC0  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9262  000FC2                     l4653:
  9263                           
  9264                           ; BSR set to: 0
  9265  000FC2  0100               	movlb	0	; () banked
  9266  000FC4  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9267  000FC6  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9268  000FC8  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9269  000FCA  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9270  000FCC  339B               	rrcf	___fladd@b& (0+255),f,b
  9271                           
  9272                           ; BSR set to: 0
  9273  000FCE  0100               	movlb	0	; () banked
  9274  000FD0  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9275  000FD2                     l978:
  9276                           
  9277                           ; BSR set to: 0
  9278  000FD2  0100               	movlb	0	; () banked
  9279  000FD4  51AC               	movf	___fladd@aexp& (0+255),w,b
  9280  000FD6  0100               	movlb	0	; () banked
  9281  000FD8  5DAD               	subwf	___fladd@bexp& (0+255),w,b
  9282  000FDA  A0D8               	btfss	status,0,c
  9283  000FDC  D7E0               	goto	l979
  9284  000FDE                     l977:
  9285                           
  9286                           ; BSR set to: 0
  9287  000FDE  0100               	movlb	0	; () banked
  9288  000FE0  BDAB               	btfsc	___fladd@signs& (0+255),6,b
  9289  000FE2  D03F               	goto	l4681
  9290                           
  9291                           ; BSR set to: 0
  9292  000FE4  0100               	movlb	0	; () banked
  9293  000FE6  51AD               	movf	___fladd@bexp& (0+255),w,b
  9294  000FE8  0100               	movlb	0	; () banked
  9295  000FEA  A4D8               	btfss	status,2,c
  9296  000FEC  D00A               	goto	l4663
  9297                           
  9298                           ; BSR set to: 0
  9299  000FEE  0E00               	movlw	0
  9300  000FF0  0100               	movlb	0	; () banked
  9301  000FF2  6F9B               	movwf	?___fladd& (0+255),b
  9302  000FF4  0E00               	movlw	0
  9303  000FF6  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9304  000FF8  0E00               	movlw	0
  9305  000FFA  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9306  000FFC  0E00               	movlw	0
  9307  000FFE  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9308                           
  9309                           ; BSR set to: 0
  9310  001000  0012               	return	
  9311  001002                     l4663:
  9312                           
  9313                           ; BSR set to: 0
  9314  001002  0100               	movlb	0	; () banked
  9315  001004  519F               	movf	___fladd@a& (0+255),w,b
  9316  001006  0100               	movlb	0	; () banked
  9317  001008  279B               	addwf	___fladd@b& (0+255),f,b
  9318  00100A  0100               	movlb	0	; () banked
  9319  00100C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9320  00100E  0100               	movlb	0	; () banked
  9321  001010  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9322  001012  0100               	movlb	0	; () banked
  9323  001014  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9324  001016  0100               	movlb	0	; () banked
  9325  001018  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9326  00101A  0100               	movlb	0	; () banked
  9327  00101C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9328  00101E  0100               	movlb	0	; () banked
  9329  001020  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9330                           
  9331                           ; BSR set to: 0
  9332  001022  0100               	movlb	0	; () banked
  9333  001024  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9334  001026  D0CC               	goto	l4717
  9335                           
  9336                           ; BSR set to: 0
  9337  001028  0100               	movlb	0	; () banked
  9338  00102A  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9339  00102C  D009               	goto	l4671
  9340                           
  9341                           ; BSR set to: 0
  9342  00102E  0100               	movlb	0	; () banked
  9343  001030  90D8               	bcf	status,0,c
  9344  001032  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9345  001034  0100               	movlb	0	; () banked
  9346  001036  51AE               	movf	___fladd@grs& (0+255),w,b
  9347  001038  0901               	iorlw	1
  9348  00103A  0100               	movlb	0	; () banked
  9349  00103C  6FAE               	movwf	___fladd@grs& (0+255),b
  9350  00103E  D003               	goto	l4673
  9351  001040                     l4671:
  9352                           
  9353                           ; BSR set to: 0
  9354  001040  0100               	movlb	0	; () banked
  9355  001042  90D8               	bcf	status,0,c
  9356  001044  33AE               	rrcf	___fladd@grs& (0+255),f,b
  9357  001046                     l4673:
  9358                           
  9359                           ; BSR set to: 0
  9360  001046  0100               	movlb	0	; () banked
  9361  001048  A19B               	btfss	___fladd@b& (0+255),0,b
  9362  00104A  D002               	goto	l4677
  9363                           
  9364                           ; BSR set to: 0
  9365  00104C  0100               	movlb	0	; () banked
  9366  00104E  8FAE               	bsf	___fladd@grs& (0+255),7,b
  9367  001050                     l4677:
  9368                           
  9369                           ; BSR set to: 0
  9370  001050  0100               	movlb	0	; () banked
  9371  001052  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  9372  001054  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  9373  001056  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  9374  001058  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  9375  00105A  339B               	rrcf	___fladd@b& (0+255),f,b
  9376                           
  9377                           ; BSR set to: 0
  9378  00105C  0100               	movlb	0	; () banked
  9379  00105E  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9380                           
  9381                           ; BSR set to: 0
  9382  001060  D0AF               	goto	l4717
  9383  001062                     l4681:
  9384                           
  9385                           ; BSR set to: 0
  9386  001062  0100               	movlb	0	; () banked
  9387  001064  519F               	movf	___fladd@a& (0+255),w,b
  9388  001066  0100               	movlb	0	; () banked
  9389  001068  5D9B               	subwf	___fladd@b& (0+255),w,b
  9390  00106A  0100               	movlb	0	; () banked
  9391  00106C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9392  00106E  0100               	movlb	0	; () banked
  9393  001070  599C               	subwfb	(___fladd@b+1)& (0+255),w,b
  9394  001072  0100               	movlb	0	; () banked
  9395  001074  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9396  001076  0100               	movlb	0	; () banked
  9397  001078  599D               	subwfb	(___fladd@b+2)& (0+255),w,b
  9398  00107A  0100               	movlb	0	; () banked
  9399  00107C  519E               	movf	(___fladd@b+3)& (0+255),w,b
  9400  00107E  0A80               	xorlw	128
  9401  001080  0100               	movlb	0	; () banked
  9402  001082  6FA3               	movwf	??___fladd& (0+255),b
  9403  001084  0100               	movlb	0	; () banked
  9404  001086  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9405  001088  0A80               	xorlw	128
  9406  00108A  0100               	movlb	0	; () banked
  9407  00108C  59A3               	subwfb	??___fladd& (0+255),w,b
  9408  00108E  B0D8               	btfsc	status,0,c
  9409  001090  D050               	goto	l4691
  9410                           
  9411                           ; BSR set to: 0
  9412  001092  C09B  F0A3         	movff	___fladd@b,??___fladd
  9413  001096  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9414  00109A  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9415  00109E  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9416  0010A2  0100               	movlb	0	; () banked
  9417  0010A4  1FA3               	comf	??___fladd& (0+255),f,b
  9418  0010A6  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  9419  0010A8  1FA5               	comf	(??___fladd+2)& (0+255),f,b
  9420  0010AA  1FA6               	comf	(??___fladd+3)& (0+255),f,b
  9421  0010AC  2BA3               	incf	??___fladd& (0+255),f,b
  9422  0010AE  0E00               	movlw	0
  9423  0010B0  23A4               	addwfc	(??___fladd+1)& (0+255),f,b
  9424  0010B2  23A5               	addwfc	(??___fladd+2)& (0+255),f,b
  9425  0010B4  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  9426  0010B6  0100               	movlb	0	; () banked
  9427  0010B8  519F               	movf	___fladd@a& (0+255),w,b
  9428  0010BA  0100               	movlb	0	; () banked
  9429  0010BC  25A3               	addwf	??___fladd& (0+255),w,b
  9430  0010BE  0100               	movlb	0	; () banked
  9431  0010C0  6FA7               	movwf	(??___fladd+4)& (0+255),b
  9432  0010C2  0100               	movlb	0	; () banked
  9433  0010C4  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9434  0010C6  0100               	movlb	0	; () banked
  9435  0010C8  21A4               	addwfc	(??___fladd+1)& (0+255),w,b
  9436  0010CA  0100               	movlb	0	; () banked
  9437  0010CC  6FA8               	movwf	(??___fladd+5)& (0+255),b
  9438  0010CE  0100               	movlb	0	; () banked
  9439  0010D0  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9440  0010D2  0100               	movlb	0	; () banked
  9441  0010D4  21A5               	addwfc	(??___fladd+2)& (0+255),w,b
  9442  0010D6  0100               	movlb	0	; () banked
  9443  0010D8  6FA9               	movwf	(??___fladd+6)& (0+255),b
  9444  0010DA  0100               	movlb	0	; () banked
  9445  0010DC  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9446  0010DE  0100               	movlb	0	; () banked
  9447  0010E0  21A6               	addwfc	(??___fladd+3)& (0+255),w,b
  9448  0010E2  0100               	movlb	0	; () banked
  9449  0010E4  6FAA               	movwf	(??___fladd+7)& (0+255),b
  9450  0010E6  0EFF               	movlw	255
  9451  0010E8  0100               	movlb	0	; () banked
  9452  0010EA  25A7               	addwf	(??___fladd+4)& (0+255),w,b
  9453  0010EC  0100               	movlb	0	; () banked
  9454  0010EE  6F9B               	movwf	___fladd@b& (0+255),b
  9455  0010F0  0EFF               	movlw	255
  9456  0010F2  0100               	movlb	0	; () banked
  9457  0010F4  21A8               	addwfc	(??___fladd+5)& (0+255),w,b
  9458  0010F6  0100               	movlb	0	; () banked
  9459  0010F8  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9460  0010FA  0EFF               	movlw	255
  9461  0010FC  0100               	movlb	0	; () banked
  9462  0010FE  21A9               	addwfc	(??___fladd+6)& (0+255),w,b
  9463  001100  0100               	movlb	0	; () banked
  9464  001102  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9465  001104  0EFF               	movlw	255
  9466  001106  0100               	movlb	0	; () banked
  9467  001108  21AA               	addwfc	(??___fladd+7)& (0+255),w,b
  9468  00110A  0100               	movlb	0	; () banked
  9469  00110C  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9470  00110E  0E80               	movlw	128
  9471  001110  0100               	movlb	0	; () banked
  9472  001112  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  9473                           
  9474                           ; BSR set to: 0
  9475  001114  0100               	movlb	0	; () banked
  9476  001116  6DAE               	negf	___fladd@grs& (0+255),b
  9477                           
  9478                           ; BSR set to: 0
  9479  001118  0100               	movlb	0	; () banked
  9480  00111A  51AE               	movf	___fladd@grs& (0+255),w,b
  9481  00111C  0100               	movlb	0	; () banked
  9482  00111E  A4D8               	btfss	status,2,c
  9483  001120  D018               	goto	l994
  9484                           
  9485                           ; BSR set to: 0
  9486  001122  0E01               	movlw	1
  9487  001124  0100               	movlb	0	; () banked
  9488  001126  279B               	addwf	___fladd@b& (0+255),f,b
  9489  001128  0E00               	movlw	0
  9490  00112A  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9491  00112C  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9492  00112E  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9493                           
  9494                           ; BSR set to: 0
  9495  001130  D010               	goto	l994
  9496  001132                     l4691:
  9497                           
  9498                           ; BSR set to: 0
  9499  001132  0100               	movlb	0	; () banked
  9500  001134  519F               	movf	___fladd@a& (0+255),w,b
  9501  001136  0100               	movlb	0	; () banked
  9502  001138  5F9B               	subwf	___fladd@b& (0+255),f,b
  9503  00113A  0100               	movlb	0	; () banked
  9504  00113C  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  9505  00113E  0100               	movlb	0	; () banked
  9506  001140  5B9C               	subwfb	(___fladd@b+1)& (0+255),f,b
  9507  001142  0100               	movlb	0	; () banked
  9508  001144  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  9509  001146  0100               	movlb	0	; () banked
  9510  001148  5B9D               	subwfb	(___fladd@b+2)& (0+255),f,b
  9511  00114A  0100               	movlb	0	; () banked
  9512  00114C  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  9513  00114E  0100               	movlb	0	; () banked
  9514  001150  5B9E               	subwfb	(___fladd@b+3)& (0+255),f,b
  9515  001152                     l994:
  9516                           
  9517                           ; BSR set to: 0
  9518  001152  0100               	movlb	0	; () banked
  9519  001154  519B               	movf	___fladd@b& (0+255),w,b
  9520  001156  0100               	movlb	0	; () banked
  9521  001158  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  9522  00115A  0100               	movlb	0	; () banked
  9523  00115C  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  9524  00115E  0100               	movlb	0	; () banked
  9525  001160  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  9526  001162  A4D8               	btfss	status,2,c
  9527  001164  D02A               	goto	l4715
  9528                           
  9529                           ; BSR set to: 0
  9530  001166  0100               	movlb	0	; () banked
  9531  001168  51AE               	movf	___fladd@grs& (0+255),w,b
  9532  00116A  0100               	movlb	0	; () banked
  9533  00116C  A4D8               	btfss	status,2,c
  9534  00116E  D025               	goto	l4715
  9535                           
  9536                           ; BSR set to: 0
  9537  001170  0E00               	movlw	0
  9538  001172  0100               	movlb	0	; () banked
  9539  001174  6F9B               	movwf	?___fladd& (0+255),b
  9540  001176  0E00               	movlw	0
  9541  001178  6F9C               	movwf	(?___fladd+1)& (0+255),b
  9542  00117A  0E00               	movlw	0
  9543  00117C  6F9D               	movwf	(?___fladd+2)& (0+255),b
  9544  00117E  0E00               	movlw	0
  9545  001180  6F9E               	movwf	(?___fladd+3)& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548  001182  0012               	return	
  9549  001184                     l4699:
  9550                           
  9551                           ; BSR set to: 0
  9552  001184  0100               	movlb	0	; () banked
  9553  001186  90D8               	bcf	status,0,c
  9554  001188  379B               	rlcf	___fladd@b& (0+255),f,b
  9555  00118A  379C               	rlcf	(___fladd@b+1)& (0+255),f,b
  9556  00118C  379D               	rlcf	(___fladd@b+2)& (0+255),f,b
  9557  00118E  379E               	rlcf	(___fladd@b+3)& (0+255),f,b
  9558                           
  9559                           ; BSR set to: 0
  9560  001190  0100               	movlb	0	; () banked
  9561  001192  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9562  001194  D002               	goto	l4705
  9563                           
  9564                           ; BSR set to: 0
  9565  001196  0100               	movlb	0	; () banked
  9566  001198  819B               	bsf	___fladd@b& (0+255),0,b
  9567  00119A                     l4705:
  9568                           
  9569                           ; BSR set to: 0
  9570  00119A  0100               	movlb	0	; () banked
  9571  00119C  A1AE               	btfss	___fladd@grs& (0+255),0,b
  9572  00119E  D003               	goto	l4709
  9573                           
  9574                           ; BSR set to: 0
  9575  0011A0  80D8               	bsf	status,0,c
  9576  0011A2  0100               	movlb	0	; () banked
  9577  0011A4  D002               	goto	L11
  9578  0011A6                     l4709:
  9579                           
  9580                           ; BSR set to: 0
  9581  0011A6  0100               	movlb	0	; () banked
  9582  0011A8  90D8               	bcf	status,0,c
  9583  0011AA                     L11:
  9584  0011AA  37AE               	rlcf	___fladd@grs& (0+255),f,b
  9585                           
  9586                           ; BSR set to: 0
  9587                           
  9588                           ; BSR set to: 0
  9589  0011AC  0100               	movlb	0	; () banked
  9590  0011AE  51AD               	movf	___fladd@bexp& (0+255),w,b
  9591  0011B0  0100               	movlb	0	; () banked
  9592  0011B2  B4D8               	btfsc	status,2,c
  9593  0011B4  D002               	goto	l4715
  9594                           
  9595                           ; BSR set to: 0
  9596  0011B6  0100               	movlb	0	; () banked
  9597  0011B8  07AD               	decf	___fladd@bexp& (0+255),f,b
  9598  0011BA                     l4715:
  9599                           
  9600                           ; BSR set to: 0
  9601  0011BA  0100               	movlb	0	; () banked
  9602  0011BC  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  9603  0011BE  D7E2               	goto	l4699
  9604  0011C0                     l4717:
  9605                           
  9606                           ; BSR set to: 0
  9607  0011C0  0E00               	movlw	0
  9608  0011C2  0100               	movlb	0	; () banked
  9609  0011C4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9610                           
  9611                           ; BSR set to: 0
  9612  0011C6  0100               	movlb	0	; () banked
  9613  0011C8  AFAE               	btfss	___fladd@grs& (0+255),7,b
  9614  0011CA  D00D               	goto	l1003
  9615                           
  9616                           ; BSR set to: 0
  9617  0011CC  C0AE  F0A3         	movff	___fladd@grs,??___fladd
  9618  0011D0  0E7F               	movlw	127
  9619  0011D2  0100               	movlb	0	; () banked
  9620  0011D4  17A3               	andwf	??___fladd& (0+255),f,b
  9621  0011D6  A4D8               	btfss	status,2,c
  9622  0011D8  D003               	goto	l4725
  9623                           
  9624                           ; BSR set to: 0
  9625                           
  9626                           ; BSR set to: 0
  9627  0011DA  0100               	movlb	0	; () banked
  9628  0011DC  A19B               	btfss	___fladd@b& (0+255),0,b
  9629  0011DE  D003               	goto	l1003
  9630  0011E0                     l4725:
  9631                           
  9632                           ; BSR set to: 0
  9633  0011E0  0E01               	movlw	1
  9634  0011E2  0100               	movlb	0	; () banked
  9635  0011E4  6FAC               	movwf	___fladd@aexp& (0+255),b
  9636  0011E6                     l1003:
  9637                           
  9638                           ; BSR set to: 0
  9639  0011E6  0100               	movlb	0	; () banked
  9640  0011E8  51AC               	movf	___fladd@aexp& (0+255),w,b
  9641  0011EA  0100               	movlb	0	; () banked
  9642  0011EC  B4D8               	btfsc	status,2,c
  9643  0011EE  D026               	goto	l4735
  9644                           
  9645                           ; BSR set to: 0
  9646  0011F0  0E01               	movlw	1
  9647  0011F2  0100               	movlb	0	; () banked
  9648  0011F4  279B               	addwf	___fladd@b& (0+255),f,b
  9649  0011F6  0E00               	movlw	0
  9650  0011F8  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  9651  0011FA  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  9652  0011FC  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655  0011FE  0100               	movlb	0	; () banked
  9656  001200  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  9657  001202  D01C               	goto	l4735
  9658                           
  9659                           ; BSR set to: 0
  9660  001204  C09B  F0A3         	movff	___fladd@b,??___fladd
  9661  001208  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  9662  00120C  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  9663  001210  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  9664  001214  0100               	movlb	0	; () banked
  9665  001216  35A6               	rlcf	(??___fladd+3)& (0+255),w,b
  9666  001218  33A6               	rrcf	(??___fladd+3)& (0+255),f,b
  9667  00121A  33A5               	rrcf	(??___fladd+2)& (0+255),f,b
  9668  00121C  33A4               	rrcf	(??___fladd+1)& (0+255),f,b
  9669  00121E  33A3               	rrcf	??___fladd& (0+255),f,b
  9670  001220  C0A3  F09B         	movff	??___fladd,___fladd@b
  9671  001224  C0A4  F09C         	movff	??___fladd+1,___fladd@b+1
  9672  001228  C0A5  F09D         	movff	??___fladd+2,___fladd@b+2
  9673  00122C  C0A6  F09E         	movff	??___fladd+3,___fladd@b+3
  9674  001230  0100               	movlb	0	; () banked
  9675  001232  29AD               	incf	___fladd@bexp& (0+255),w,b
  9676  001234  B4D8               	btfsc	status,2,c
  9677  001236  D002               	goto	l4735
  9678                           
  9679                           ; BSR set to: 0
  9680  001238  0100               	movlb	0	; () banked
  9681  00123A  2BAD               	incf	___fladd@bexp& (0+255),f,b
  9682  00123C                     l4735:
  9683                           
  9684                           ; BSR set to: 0
  9685  00123C  0100               	movlb	0	; () banked
  9686  00123E  29AD               	incf	___fladd@bexp& (0+255),w,b
  9687  001240  B4D8               	btfsc	status,2,c
  9688  001242  D005               	goto	l4739
  9689                           
  9690                           ; BSR set to: 0
  9691  001244  0100               	movlb	0	; () banked
  9692  001246  51AD               	movf	___fladd@bexp& (0+255),w,b
  9693  001248  0100               	movlb	0	; () banked
  9694  00124A  A4D8               	btfss	status,2,c
  9695  00124C  D011               	goto	l4743
  9696  00124E                     l4739:
  9697                           
  9698                           ; BSR set to: 0
  9699  00124E  0E00               	movlw	0
  9700  001250  0100               	movlb	0	; () banked
  9701  001252  6F9B               	movwf	___fladd@b& (0+255),b
  9702  001254  0E00               	movlw	0
  9703  001256  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  9704  001258  0E00               	movlw	0
  9705  00125A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  9706  00125C  0E00               	movlw	0
  9707  00125E  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9708  001260  0100               	movlb	0	; () banked
  9709  001262  51AD               	movf	___fladd@bexp& (0+255),w,b
  9710  001264  0100               	movlb	0	; () banked
  9711  001266  A4D8               	btfss	status,2,c
  9712  001268  D003               	goto	l4743
  9713                           
  9714                           ; BSR set to: 0
  9715  00126A  0E00               	movlw	0
  9716  00126C  0100               	movlb	0	; () banked
  9717  00126E  6FAB               	movwf	___fladd@signs& (0+255),b
  9718  001270                     l4743:
  9719                           
  9720                           ; BSR set to: 0
  9721  001270  0100               	movlb	0	; () banked
  9722  001272  A1AD               	btfss	___fladd@bexp& (0+255),0,b
  9723  001274  D003               	goto	l4747
  9724                           
  9725                           ; BSR set to: 0
  9726  001276  0100               	movlb	0	; () banked
  9727  001278  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  9728  00127A  D002               	goto	l4749
  9729  00127C                     l4747:
  9730                           
  9731                           ; BSR set to: 0
  9732  00127C  0100               	movlb	0	; () banked
  9733  00127E  9F9D               	bcf	(___fladd@b+2)& (0+255),7,b
  9734  001280                     l4749:
  9735                           
  9736                           ; BSR set to: 0
  9737  001280  0100               	movlb	0	; () banked
  9738  001282  90D8               	bcf	status,0,c
  9739  001284  31AD               	rrcf	___fladd@bexp& (0+255),w,b
  9740  001286  0100               	movlb	0	; () banked
  9741  001288  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  9742                           
  9743                           ; BSR set to: 0
  9744  00128A  0100               	movlb	0	; () banked
  9745  00128C  AFAB               	btfss	___fladd@signs& (0+255),7,b
  9746  00128E  D002               	goto	l4755
  9747                           
  9748                           ; BSR set to: 0
  9749  001290  0100               	movlb	0	; () banked
  9750  001292  8F9E               	bsf	(___fladd@b+3)& (0+255),7,b
  9751  001294                     l4755:
  9752                           
  9753                           ; BSR set to: 0
  9754  001294  C09B  F09B         	movff	___fladd@b,?___fladd
  9755  001298  C09C  F09C         	movff	___fladd@b+1,?___fladd+1
  9756  00129C  C09D  F09D         	movff	___fladd@b+2,?___fladd+2
  9757  0012A0  C09E  F09E         	movff	___fladd@b+3,?___fladd+3
  9758  0012A4  0012               	return	
  9759  0012A6                     __end_of___fladd:
  9760                           	opt stack 0
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           wreg	equ	0xFE8
  9770                           indf1	equ	0xFE7
  9771                           postinc1	equ	0xFE6
  9772                           fsr1h	equ	0xFE2
  9773                           fsr1l	equ	0xFE1
  9774                           indf2	equ	0xFDF
  9775                           postinc2	equ	0xFDE
  9776                           fsr2h	equ	0xFDA
  9777                           fsr2l	equ	0xFD9
  9778                           status	equ	0xFD8
  9779                           
  9780 ;; *************** function ___flneg *****************
  9781 ;; Defined at:
  9782 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  f1              4    0[BANK0 ] unsigned char 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  4    0[BANK0 ] unsigned char 
  9789 ;; Registers used:
  9790 ;;		wreg, status,2, status,0
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9796 ;;      Params:         0       4       0       0
  9797 ;;      Locals:         0       0       0       0
  9798 ;;      Temps:          0       0       0       0
  9799 ;;      Totals:         0       4       0       0
  9800 ;;Total ram usage:        4 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; Hardware stack levels required when called:    3
  9803 ;; This function calls:
  9804 ;;		Nothing
  9805 ;; This function is called by:
  9806 ;;		_sprintf
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text29
  9811  0032AA                     __ptext29:
  9812                           	opt stack 0
  9813  0032AA                     ___flneg:
  9814                           	opt stack 25
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;incstack = 0
  9818  0032AA  0100               	movlb	0	; () banked
  9819  0032AC  5160               	movf	___flneg@f1& (0+255),w,b
  9820  0032AE  0100               	movlb	0	; () banked
  9821  0032B0  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9822  0032B2  0100               	movlb	0	; () banked
  9823  0032B4  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9824  0032B6  0100               	movlb	0	; () banked
  9825  0032B8  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9826  0032BA  B4D8               	btfsc	status,2,c
  9827  0032BC  D009               	goto	l5221
  9828                           
  9829                           ; BSR set to: 0
  9830  0032BE  0E00               	movlw	0
  9831  0032C0  0100               	movlb	0	; () banked
  9832  0032C2  1B60               	xorwf	___flneg@f1& (0+255),f,b
  9833  0032C4  0E00               	movlw	0
  9834  0032C6  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9835  0032C8  0E00               	movlw	0
  9836  0032CA  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9837  0032CC  0E80               	movlw	128
  9838  0032CE  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9839  0032D0                     l5221:
  9840                           
  9841                           ; BSR set to: 0
  9842  0032D0  C060  F060         	movff	___flneg@f1,?___flneg
  9843  0032D4  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  9844  0032D8  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  9845  0032DC  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  9846  0032E0  0012               	return	
  9847  0032E2                     __end_of___flneg:
  9848                           	opt stack 0
  9849                           tblptru	equ	0xFF8
  9850                           tblptrh	equ	0xFF7
  9851                           tblptrl	equ	0xFF6
  9852                           tablat	equ	0xFF5
  9853                           prodh	equ	0xFF4
  9854                           prodl	equ	0xFF3
  9855                           intcon	equ	0xFF2
  9856                           postinc0	equ	0xFEE
  9857                           wreg	equ	0xFE8
  9858                           indf1	equ	0xFE7
  9859                           postinc1	equ	0xFE6
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           indf2	equ	0xFDF
  9863                           postinc2	equ	0xFDE
  9864                           fsr2h	equ	0xFDA
  9865                           fsr2l	equ	0xFD9
  9866                           status	equ	0xFD8
  9867                           
  9868 ;; *************** function ___flge *****************
  9869 ;; Defined at:
  9870 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  ff1             4    0[BANK0 ] unsigned char 
  9873 ;;  ff2             4    4[BANK0 ] unsigned char 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;		None               void
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9885 ;;      Params:         0       8       0       0
  9886 ;;      Locals:         0       0       0       0
  9887 ;;      Temps:          0       4       0       0
  9888 ;;      Totals:         0      12       0       0
  9889 ;;Total ram usage:       12 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    3
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_sprintf
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text30
  9900  002184                     __ptext30:
  9901                           	opt stack 0
  9902  002184                     ___flge:
  9903                           	opt stack 25
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;incstack = 0
  9907  002184  0E00               	movlw	0
  9908  002186  0100               	movlb	0	; () banked
  9909  002188  1560               	andwf	___flge@ff1& (0+255),w,b
  9910  00218A  0100               	movlb	0	; () banked
  9911  00218C  6F68               	movwf	??___flge& (0+255),b
  9912  00218E  0E00               	movlw	0
  9913  002190  0100               	movlb	0	; () banked
  9914  002192  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  9915  002194  0100               	movlb	0	; () banked
  9916  002196  6F69               	movwf	(??___flge+1)& (0+255),b
  9917  002198  0E80               	movlw	128
  9918  00219A  0100               	movlb	0	; () banked
  9919  00219C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  9920  00219E  0100               	movlb	0	; () banked
  9921  0021A0  6F6A               	movwf	(??___flge+2)& (0+255),b
  9922  0021A2  0E7F               	movlw	127
  9923  0021A4  0100               	movlb	0	; () banked
  9924  0021A6  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  9925  0021A8  0100               	movlb	0	; () banked
  9926  0021AA  6F6B               	movwf	(??___flge+3)& (0+255),b
  9927  0021AC  0100               	movlb	0	; () banked
  9928  0021AE  5168               	movf	??___flge& (0+255),w,b
  9929  0021B0  0100               	movlb	0	; () banked
  9930  0021B2  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9931  0021B4  0100               	movlb	0	; () banked
  9932  0021B6  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9933  0021B8  0100               	movlb	0	; () banked
  9934  0021BA  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9935  0021BC  A4D8               	btfss	status,2,c
  9936  0021BE  D009               	goto	l5199
  9937                           
  9938                           ; BSR set to: 0
  9939  0021C0  0E00               	movlw	0
  9940  0021C2  0100               	movlb	0	; () banked
  9941  0021C4  6F60               	movwf	___flge@ff1& (0+255),b
  9942  0021C6  0E00               	movlw	0
  9943  0021C8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  9944  0021CA  0E00               	movlw	0
  9945  0021CC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  9946  0021CE  0E00               	movlw	0
  9947  0021D0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  9948  0021D2                     l5199:
  9949                           
  9950                           ; BSR set to: 0
  9951  0021D2  0E00               	movlw	0
  9952  0021D4  0100               	movlb	0	; () banked
  9953  0021D6  1564               	andwf	___flge@ff2& (0+255),w,b
  9954  0021D8  0100               	movlb	0	; () banked
  9955  0021DA  6F68               	movwf	??___flge& (0+255),b
  9956  0021DC  0E00               	movlw	0
  9957  0021DE  0100               	movlb	0	; () banked
  9958  0021E0  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  9959  0021E2  0100               	movlb	0	; () banked
  9960  0021E4  6F69               	movwf	(??___flge+1)& (0+255),b
  9961  0021E6  0E80               	movlw	128
  9962  0021E8  0100               	movlb	0	; () banked
  9963  0021EA  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  9964  0021EC  0100               	movlb	0	; () banked
  9965  0021EE  6F6A               	movwf	(??___flge+2)& (0+255),b
  9966  0021F0  0E7F               	movlw	127
  9967  0021F2  0100               	movlb	0	; () banked
  9968  0021F4  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  9969  0021F6  0100               	movlb	0	; () banked
  9970  0021F8  6F6B               	movwf	(??___flge+3)& (0+255),b
  9971  0021FA  0100               	movlb	0	; () banked
  9972  0021FC  5168               	movf	??___flge& (0+255),w,b
  9973  0021FE  0100               	movlb	0	; () banked
  9974  002200  1169               	iorwf	(??___flge+1)& (0+255),w,b
  9975  002202  0100               	movlb	0	; () banked
  9976  002204  116A               	iorwf	(??___flge+2)& (0+255),w,b
  9977  002206  0100               	movlb	0	; () banked
  9978  002208  116B               	iorwf	(??___flge+3)& (0+255),w,b
  9979  00220A  A4D8               	btfss	status,2,c
  9980  00220C  D009               	goto	l5203
  9981                           
  9982                           ; BSR set to: 0
  9983  00220E  0E00               	movlw	0
  9984  002210  0100               	movlb	0	; () banked
  9985  002212  6F64               	movwf	___flge@ff2& (0+255),b
  9986  002214  0E00               	movlw	0
  9987  002216  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  9988  002218  0E00               	movlw	0
  9989  00221A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  9990  00221C  0E00               	movlw	0
  9991  00221E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  9992  002220                     l5203:
  9993                           
  9994                           ; BSR set to: 0
  9995  002220  0100               	movlb	0	; () banked
  9996  002222  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  9997  002224  D026               	goto	l5207
  9998                           
  9999                           ; BSR set to: 0
 10000  002226  C060  F068         	movff	___flge@ff1,??___flge
 10001  00222A  C061  F069         	movff	___flge@ff1+1,??___flge+1
 10002  00222E  C062  F06A         	movff	___flge@ff1+2,??___flge+2
 10003  002232  C063  F06B         	movff	___flge@ff1+3,??___flge+3
 10004  002236  0100               	movlb	0	; () banked
 10005  002238  1F68               	comf	??___flge& (0+255),f,b
 10006  00223A  1F69               	comf	(??___flge+1)& (0+255),f,b
 10007  00223C  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10008  00223E  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10009  002240  2B68               	incf	??___flge& (0+255),f,b
 10010  002242  0E00               	movlw	0
 10011  002244  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10012  002246  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10013  002248  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10014  00224A  0E00               	movlw	0
 10015  00224C  0100               	movlb	0	; () banked
 10016  00224E  2568               	addwf	??___flge& (0+255),w,b
 10017  002250  0100               	movlb	0	; () banked
 10018  002252  6F60               	movwf	___flge@ff1& (0+255),b
 10019  002254  0E00               	movlw	0
 10020  002256  0100               	movlb	0	; () banked
 10021  002258  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10022  00225A  0100               	movlb	0	; () banked
 10023  00225C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 10024  00225E  0E00               	movlw	0
 10025  002260  0100               	movlb	0	; () banked
 10026  002262  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10027  002264  0100               	movlb	0	; () banked
 10028  002266  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 10029  002268  0E80               	movlw	128
 10030  00226A  0100               	movlb	0	; () banked
 10031  00226C  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10032  00226E  0100               	movlb	0	; () banked
 10033  002270  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 10034  002272                     l5207:
 10035                           
 10036                           ; BSR set to: 0
 10037  002272  0100               	movlb	0	; () banked
 10038  002274  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 10039  002276  D026               	goto	l700
 10040                           
 10041                           ; BSR set to: 0
 10042  002278  C064  F068         	movff	___flge@ff2,??___flge
 10043  00227C  C065  F069         	movff	___flge@ff2+1,??___flge+1
 10044  002280  C066  F06A         	movff	___flge@ff2+2,??___flge+2
 10045  002284  C067  F06B         	movff	___flge@ff2+3,??___flge+3
 10046  002288  0100               	movlb	0	; () banked
 10047  00228A  1F68               	comf	??___flge& (0+255),f,b
 10048  00228C  1F69               	comf	(??___flge+1)& (0+255),f,b
 10049  00228E  1F6A               	comf	(??___flge+2)& (0+255),f,b
 10050  002290  1F6B               	comf	(??___flge+3)& (0+255),f,b
 10051  002292  2B68               	incf	??___flge& (0+255),f,b
 10052  002294  0E00               	movlw	0
 10053  002296  2369               	addwfc	(??___flge+1)& (0+255),f,b
 10054  002298  236A               	addwfc	(??___flge+2)& (0+255),f,b
 10055  00229A  236B               	addwfc	(??___flge+3)& (0+255),f,b
 10056  00229C  0E00               	movlw	0
 10057  00229E  0100               	movlb	0	; () banked
 10058  0022A0  2568               	addwf	??___flge& (0+255),w,b
 10059  0022A2  0100               	movlb	0	; () banked
 10060  0022A4  6F64               	movwf	___flge@ff2& (0+255),b
 10061  0022A6  0E00               	movlw	0
 10062  0022A8  0100               	movlb	0	; () banked
 10063  0022AA  2169               	addwfc	(??___flge+1)& (0+255),w,b
 10064  0022AC  0100               	movlb	0	; () banked
 10065  0022AE  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 10066  0022B0  0E00               	movlw	0
 10067  0022B2  0100               	movlb	0	; () banked
 10068  0022B4  216A               	addwfc	(??___flge+2)& (0+255),w,b
 10069  0022B6  0100               	movlb	0	; () banked
 10070  0022B8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 10071  0022BA  0E80               	movlw	128
 10072  0022BC  0100               	movlb	0	; () banked
 10073  0022BE  216B               	addwfc	(??___flge+3)& (0+255),w,b
 10074  0022C0  0100               	movlb	0	; () banked
 10075  0022C2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10076  0022C4                     l700:
 10077                           
 10078                           ; BSR set to: 0
 10079  0022C4  0E00               	movlw	0
 10080  0022C6  0100               	movlb	0	; () banked
 10081  0022C8  1B60               	xorwf	___flge@ff1& (0+255),f,b
 10082  0022CA  0E00               	movlw	0
 10083  0022CC  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10084  0022CE  0E00               	movlw	0
 10085  0022D0  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10086  0022D2  0E80               	movlw	128
 10087  0022D4  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10088  0022D6  0E00               	movlw	0
 10089  0022D8  0100               	movlb	0	; () banked
 10090  0022DA  1B64               	xorwf	___flge@ff2& (0+255),f,b
 10091  0022DC  0E00               	movlw	0
 10092  0022DE  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10093  0022E0  0E00               	movlw	0
 10094  0022E2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10095  0022E4  0E80               	movlw	128
 10096  0022E6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10097  0022E8  0100               	movlb	0	; () banked
 10098  0022EA  5164               	movf	___flge@ff2& (0+255),w,b
 10099  0022EC  0100               	movlb	0	; () banked
 10100  0022EE  5D60               	subwf	___flge@ff1& (0+255),w,b
 10101  0022F0  0100               	movlb	0	; () banked
 10102  0022F2  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 10103  0022F4  0100               	movlb	0	; () banked
 10104  0022F6  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10105  0022F8  0100               	movlb	0	; () banked
 10106  0022FA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 10107  0022FC  0100               	movlb	0	; () banked
 10108  0022FE  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10109  002300  0100               	movlb	0	; () banked
 10110  002302  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 10111  002304  0100               	movlb	0	; () banked
 10112  002306  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10113  002308  B0D8               	btfsc	status,0,c
 10114  00230A  D002               	goto	l5213
 10115                           
 10116                           ; BSR set to: 0
 10117  00230C  90D8               	bcf	status,0,c
 10118  00230E  0012               	return	
 10119  002310                     l5213:
 10120                           
 10121                           ; BSR set to: 0
 10122  002310  80D8               	bsf	status,0,c
 10123                           
 10124                           ; BSR set to: 0
 10125  002312  0012               	return	
 10126  002314                     __end_of___flge:
 10127                           	opt stack 0
 10128                           tblptru	equ	0xFF8
 10129                           tblptrh	equ	0xFF7
 10130                           tblptrl	equ	0xFF6
 10131                           tablat	equ	0xFF5
 10132                           prodh	equ	0xFF4
 10133                           prodl	equ	0xFF3
 10134                           intcon	equ	0xFF2
 10135                           postinc0	equ	0xFEE
 10136                           wreg	equ	0xFE8
 10137                           indf1	equ	0xFE7
 10138                           postinc1	equ	0xFE6
 10139                           fsr1h	equ	0xFE2
 10140                           fsr1l	equ	0xFE1
 10141                           indf2	equ	0xFDF
 10142                           postinc2	equ	0xFDE
 10143                           fsr2h	equ	0xFDA
 10144                           fsr2l	equ	0xFD9
 10145                           status	equ	0xFD8
 10146                           
 10147 ;; *************** function ___lwdiv *****************
 10148 ;; Defined at:
 10149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;  dividend        2    0[BANK0 ] unsigned int 
 10152 ;;  divisor         2    2[BANK0 ] unsigned int 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;  quotient        2    5[BANK0 ] unsigned int 
 10155 ;;  counter         1    4[BANK0 ] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  2    0[BANK0 ] unsigned int 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10165 ;;      Params:         0       4       0       0
 10166 ;;      Locals:         0       3       0       0
 10167 ;;      Temps:          0       0       0       0
 10168 ;;      Totals:         0       7       0       0
 10169 ;;Total ram usage:        7 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    3
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_LCD_Handler
 10176 ;;		_utoa
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text31
 10181  002FFE                     __ptext31:
 10182                           	opt stack 0
 10183  002FFE                     ___lwdiv:
 10184                           	opt stack 26
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;incstack = 0
 10188  002FFE  0E00               	movlw	0
 10189  003000  0100               	movlb	0	; () banked
 10190  003002  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10191  003004  0E00               	movlw	0
 10192  003006  6F65               	movwf	___lwdiv@quotient& (0+255),b
 10193                           
 10194                           ; BSR set to: 0
 10195  003008  0100               	movlb	0	; () banked
 10196  00300A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10197  00300C  0100               	movlb	0	; () banked
 10198  00300E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10199  003010  B4D8               	btfsc	status,2,c
 10200  003012  D02C               	goto	l936
 10201                           
 10202                           ; BSR set to: 0
 10203  003014  0E01               	movlw	1
 10204  003016  0100               	movlb	0	; () banked
 10205  003018  6F64               	movwf	___lwdiv@counter& (0+255),b
 10206  00301A  D006               	goto	l5697
 10207  00301C                     l5695:
 10208                           
 10209                           ; BSR set to: 0
 10210  00301C  0100               	movlb	0	; () banked
 10211  00301E  90D8               	bcf	status,0,c
 10212  003020  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 10213  003022  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10214  003024  0100               	movlb	0	; () banked
 10215  003026  2B64               	incf	___lwdiv@counter& (0+255),f,b
 10216  003028                     l5697:
 10217                           
 10218                           ; BSR set to: 0
 10219  003028  0100               	movlb	0	; () banked
 10220  00302A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10221  00302C  D7F7               	goto	l5695
 10222  00302E                     l5699:
 10223                           
 10224                           ; BSR set to: 0
 10225  00302E  0100               	movlb	0	; () banked
 10226  003030  90D8               	bcf	status,0,c
 10227  003032  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 10228  003034  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10229                           
 10230                           ; BSR set to: 0
 10231  003036  0100               	movlb	0	; () banked
 10232  003038  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10233  00303A  0100               	movlb	0	; () banked
 10234  00303C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 10235  00303E  0100               	movlb	0	; () banked
 10236  003040  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10237  003042  0100               	movlb	0	; () banked
 10238  003044  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10239  003046  A0D8               	btfss	status,0,c
 10240  003048  D00A               	goto	l5707
 10241                           
 10242                           ; BSR set to: 0
 10243  00304A  0100               	movlb	0	; () banked
 10244  00304C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10245  00304E  0100               	movlb	0	; () banked
 10246  003050  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 10247  003052  0100               	movlb	0	; () banked
 10248  003054  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10249  003056  0100               	movlb	0	; () banked
 10250  003058  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10251                           
 10252                           ; BSR set to: 0
 10253  00305A  0100               	movlb	0	; () banked
 10254  00305C  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 10255  00305E                     l5707:
 10256                           
 10257                           ; BSR set to: 0
 10258  00305E  0100               	movlb	0	; () banked
 10259  003060  90D8               	bcf	status,0,c
 10260  003062  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10261  003064  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 10262                           
 10263                           ; BSR set to: 0
 10264  003066  0100               	movlb	0	; () banked
 10265  003068  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 10266  00306A  D7E1               	goto	l5699
 10267  00306C                     l936:
 10268                           
 10269                           ; BSR set to: 0
 10270  00306C  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 10271  003070  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10272                           
 10273                           ; BSR set to: 0
 10274  003074  0012               	return		;funcret
 10275  003076                     __end_of___lwdiv:
 10276                           	opt stack 0
 10277                           tblptru	equ	0xFF8
 10278                           tblptrh	equ	0xFF7
 10279                           tblptrl	equ	0xFF6
 10280                           tablat	equ	0xFF5
 10281                           prodh	equ	0xFF4
 10282                           prodl	equ	0xFF3
 10283                           intcon	equ	0xFF2
 10284                           postinc0	equ	0xFEE
 10285                           wreg	equ	0xFE8
 10286                           indf1	equ	0xFE7
 10287                           postinc1	equ	0xFE6
 10288                           fsr1h	equ	0xFE2
 10289                           fsr1l	equ	0xFE1
 10290                           indf2	equ	0xFDF
 10291                           postinc2	equ	0xFDE
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function _LCD_write_string *****************
 10297 ;; Defined at:
 10298 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  buffer          2   17[BANK0 ] PTR unsigned char 
 10301 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;		None               void
 10306 ;; Registers used:
 10307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10313 ;;      Params:         0       2       0       0
 10314 ;;      Locals:         0       0       0       0
 10315 ;;      Temps:          0       0       0       0
 10316 ;;      Totals:         0       2       0       0
 10317 ;;Total ram usage:        2 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    8
 10320 ;; This function calls:
 10321 ;;		_LCD_write_char
 10322 ;; This function is called by:
 10323 ;;		_LCD_Handler
 10324 ;;		_LCD_write_integer
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text32
 10329  003426                     __ptext32:
 10330                           	opt stack 0
 10331  003426                     _LCD_write_string:
 10332                           	opt stack 21
 10333                           
 10334                           ;src\LCD_44780.c: 197: while(*buffer){
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;incstack = 0
 10338  003426  D00A               	goto	l5383
 10339  003428                     l5379:
 10340                           
 10341                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10342  003428  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10343  00342C  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10344  003430  50DF               	movf	indf2,w,c
 10345  003432  ECB4  F017         	call	_LCD_write_char
 10346                           
 10347                           ;src\LCD_44780.c: 202: buffer++;
 10348  003436  0100               	movlb	0	; () banked
 10349  003438  4B71               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10350  00343A  2B72               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10351  00343C                     l5383:
 10352  00343C  C071  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10353  003440  C072  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10354  003444  50DF               	movf	indf2,w,c
 10355  003446  B4D8               	btfsc	status,2,c
 10356  003448  0012               	return	
 10357  00344A  D7EE               	goto	l5379
 10358  00344C                     __end_of_LCD_write_string:
 10359                           	opt stack 0
 10360                           tblptru	equ	0xFF8
 10361                           tblptrh	equ	0xFF7
 10362                           tblptrl	equ	0xFF6
 10363                           tablat	equ	0xFF5
 10364                           prodh	equ	0xFF4
 10365                           prodl	equ	0xFF3
 10366                           intcon	equ	0xFF2
 10367                           postinc0	equ	0xFEE
 10368                           wreg	equ	0xFE8
 10369                           indf1	equ	0xFE7
 10370                           postinc1	equ	0xFE6
 10371                           fsr1h	equ	0xFE2
 10372                           fsr1l	equ	0xFE1
 10373                           indf2	equ	0xFDF
 10374                           postinc2	equ	0xFDE
 10375                           fsr2h	equ	0xFDA
 10376                           fsr2l	equ	0xFD9
 10377                           status	equ	0xFD8
 10378                           
 10379 ;; *************** function _LCD_write_message *****************
 10380 ;; Defined at:
 10381 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  buffer          2   17[BANK0 ] PTR const unsigned char 
 10384 ;;		 -> STR_13(8), STR_12(21), STR_11(5), STR_9(2), 
 10385 ;;		 -> STR_8(5), STR_7(4), STR_6(12), STR_5(21), 
 10386 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;		None               void
 10391 ;; Registers used:
 10392 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10398 ;;      Params:         0       2       0       0
 10399 ;;      Locals:         0       0       0       0
 10400 ;;      Temps:          0       0       0       0
 10401 ;;      Totals:         0       2       0       0
 10402 ;;Total ram usage:        2 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    8
 10405 ;; This function calls:
 10406 ;;		_LCD_write_char
 10407 ;; This function is called by:
 10408 ;;		_main
 10409 ;;		_LCD_Handler
 10410 ;;		_board_initialization
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text33
 10415  0033A8                     __ptext33:
 10416                           	opt stack 0
 10417  0033A8                     _LCD_write_message:
 10418                           	opt stack 21
 10419                           
 10420                           ;src\LCD_44780.c: 181: while(*buffer) {
 10421                           
 10422                           ;incstack = 0
 10423  0033A8  D00B               	goto	l5375
 10424  0033AA                     l5371:
 10425                           
 10426                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 10427  0033AA  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10428  0033AE  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10429  0033B2                     	if	0	;tblptru may be non-zero
 10430  0033B2                     	endif
 10431  0033B2                     	if	0	;tblptru may be non-zero
 10432  0033B2                     	endif
 10433  0033B2  0008               	tblrd		*
 10434  0033B4  50F5               	movf	tablat,w,c
 10435  0033B6  ECB4  F017         	call	_LCD_write_char
 10436                           
 10437                           ;src\LCD_44780.c: 186: buffer++;
 10438  0033BA  0100               	movlb	0	; () banked
 10439  0033BC  4B71               	infsnz	LCD_write_message@buffer& (0+255),f,b
 10440  0033BE  2B72               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 10441  0033C0                     l5375:
 10442  0033C0  C071  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10443  0033C4  C072  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10444  0033C8                     	if	0	;tblptru may be non-zero
 10445  0033C8                     	endif
 10446  0033C8                     	if	0	;tblptru may be non-zero
 10447  0033C8                     	endif
 10448  0033C8  0008               	tblrd		*
 10449  0033CA  50F5               	movf	tablat,w,c
 10450  0033CC  0900               	iorlw	0
 10451  0033CE  B4D8               	btfsc	status,2,c
 10452  0033D0  0012               	return	
 10453  0033D2  D7EB               	goto	l5371
 10454  0033D4                     __end_of_LCD_write_message:
 10455                           	opt stack 0
 10456                           tblptru	equ	0xFF8
 10457                           tblptrh	equ	0xFF7
 10458                           tblptrl	equ	0xFF6
 10459                           tablat	equ	0xFF5
 10460                           prodh	equ	0xFF4
 10461                           prodl	equ	0xFF3
 10462                           intcon	equ	0xFF2
 10463                           postinc0	equ	0xFEE
 10464                           wreg	equ	0xFE8
 10465                           indf1	equ	0xFE7
 10466                           postinc1	equ	0xFE6
 10467                           fsr1h	equ	0xFE2
 10468                           fsr1l	equ	0xFE1
 10469                           indf2	equ	0xFDF
 10470                           postinc2	equ	0xFDE
 10471                           fsr2h	equ	0xFDA
 10472                           fsr2l	equ	0xFD9
 10473                           status	equ	0xFD8
 10474                           
 10475 ;; *************** function _LCD_write_char *****************
 10476 ;; Defined at:
 10477 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  value           1    wreg     unsigned char 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  value           1   16[BANK0 ] unsigned char 
 10482 ;;  D0              1   15[BANK0 ] unsigned char 
 10483 ;;  D1              1   14[BANK0 ] unsigned char 
 10484 ;;  D2              1   13[BANK0 ] unsigned char 
 10485 ;;  D3              1   12[BANK0 ] unsigned char 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;		None               void
 10488 ;; Registers used:
 10489 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10495 ;;      Params:         0       0       0       0
 10496 ;;      Locals:         0       5       0       0
 10497 ;;      Temps:          0       0       0       0
 10498 ;;      Totals:         0       5       0       0
 10499 ;;Total ram usage:        5 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    7
 10502 ;; This function calls:
 10503 ;;		_LCD_send_command
 10504 ;; This function is called by:
 10505 ;;		_LCD_write_message
 10506 ;;		_LCD_write_string
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text34
 10511  002F68                     __ptext34:
 10512                           	opt stack 0
 10513  002F68                     _LCD_write_char:
 10514                           	opt stack 21
 10515                           
 10516                           ;incstack = 0
 10517                           ;LCD_write_char@value stored from wreg
 10518  002F68  0100               	movlb	0	; () banked
 10519  002F6A  6F70               	movwf	LCD_write_char@value& (0+255),b
 10520                           
 10521                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 10522                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 10523  002F6C  848D               	bsf	3981,2,c	;volatile
 10524                           
 10525                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10526  002F6E  0100               	movlb	0	; () banked
 10527  002F70  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10528  002F72  0B01               	andlw	1
 10529  002F74  0100               	movlb	0	; () banked
 10530  002F76  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10531                           
 10532                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 10533  002F78  0100               	movlb	0	; () banked
 10534  002F7A  4570               	rlncf	LCD_write_char@value& (0+255),w,b
 10535  002F7C  46E8               	rlncf	wreg,f,c
 10536  002F7E  0B03               	andlw	3
 10537  002F80  0B01               	andlw	1
 10538  002F82  0100               	movlb	0	; () banked
 10539  002F84  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10540                           
 10541                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 10542  002F86  0100               	movlb	0	; () banked
 10543  002F88  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10544  002F8A  42E8               	rrncf	wreg,f,c
 10545  002F8C  0B07               	andlw	7
 10546  002F8E  0B01               	andlw	1
 10547  002F90  0100               	movlb	0	; () banked
 10548  002F92  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10549                           
 10550                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 10551  002F94  0100               	movlb	0	; () banked
 10552  002F96  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10553  002F98  0B0F               	andlw	15
 10554  002F9A  0B01               	andlw	1
 10555  002F9C  0100               	movlb	0	; () banked
 10556  002F9E  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 10560  002FA0  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10561  002FA4  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10562  002FA8  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10563  002FAC  0100               	movlb	0	; () banked
 10564  002FAE  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10565  002FB0  EC1B  F019         	call	_LCD_send_command
 10566                           
 10567                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 10568  002FB4  0100               	movlb	0	; () banked
 10569  002FB6  3970               	swapf	LCD_write_char@value& (0+255),w,b
 10570  002FB8  46E8               	rlncf	wreg,f,c
 10571  002FBA  0B1F               	andlw	31
 10572  002FBC  0B01               	andlw	1
 10573  002FBE  0100               	movlb	0	; () banked
 10574  002FC0  6F6C               	movwf	LCD_write_char@D3& (0+255),b
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 10578  002FC2  0100               	movlb	0	; () banked
 10579  002FC4  4170               	rrncf	LCD_write_char@value& (0+255),w,b
 10580  002FC6  42E8               	rrncf	wreg,f,c
 10581  002FC8  0B3F               	andlw	63
 10582  002FCA  0B01               	andlw	1
 10583  002FCC  0100               	movlb	0	; () banked
 10584  002FCE  6F6D               	movwf	LCD_write_char@D2& (0+255),b
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 10588  002FD0  0100               	movlb	0	; () banked
 10589  002FD2  90D8               	bcf	status,0,c
 10590  002FD4  3170               	rrcf	LCD_write_char@value& (0+255),w,b
 10591  002FD6  0B01               	andlw	1
 10592  002FD8  0100               	movlb	0	; () banked
 10593  002FDA  6F6E               	movwf	LCD_write_char@D1& (0+255),b
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 10597  002FDC  0100               	movlb	0	; () banked
 10598  002FDE  5170               	movf	LCD_write_char@value& (0+255),w,b
 10599  002FE0  0B01               	andlw	1
 10600  002FE2  0100               	movlb	0	; () banked
 10601  002FE4  6F6F               	movwf	LCD_write_char@D0& (0+255),b
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 10605  002FE6  C06D  F068         	movff	LCD_write_char@D2,LCD_send_command@D2
 10606  002FEA  C06E  F069         	movff	LCD_write_char@D1,LCD_send_command@D1
 10607  002FEE  C06F  F06A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10608  002FF2  0100               	movlb	0	; () banked
 10609  002FF4  516C               	movf	LCD_write_char@D3& (0+255),w,b
 10610  002FF6  EC1B  F019         	call	_LCD_send_command
 10611                           
 10612                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 10613  002FFA  948D               	bcf	3981,2,c	;volatile
 10614  002FFC  0012               	return		;funcret
 10615  002FFE                     __end_of_LCD_write_char:
 10616                           	opt stack 0
 10617                           tblptru	equ	0xFF8
 10618                           tblptrh	equ	0xFF7
 10619                           tblptrl	equ	0xFF6
 10620                           tablat	equ	0xFF5
 10621                           prodh	equ	0xFF4
 10622                           prodl	equ	0xFF3
 10623                           intcon	equ	0xFF2
 10624                           postinc0	equ	0xFEE
 10625                           wreg	equ	0xFE8
 10626                           indf1	equ	0xFE7
 10627                           postinc1	equ	0xFE6
 10628                           fsr1h	equ	0xFE2
 10629                           fsr1l	equ	0xFE1
 10630                           indf2	equ	0xFDF
 10631                           postinc2	equ	0xFDE
 10632                           fsr2h	equ	0xFDA
 10633                           fsr2l	equ	0xFD9
 10634                           status	equ	0xFD8
 10635                           
 10636 ;; *************** function _LCD_goto_line *****************
 10637 ;; Defined at:
 10638 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  line            1    wreg     unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  line            1   12[BANK0 ] unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;		None               void
 10645 ;; Registers used:
 10646 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10652 ;;      Params:         0       0       0       0
 10653 ;;      Locals:         0       1       0       0
 10654 ;;      Temps:          0       0       0       0
 10655 ;;      Totals:         0       1       0       0
 10656 ;;Total ram usage:        1 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    7
 10659 ;; This function calls:
 10660 ;;		_LCD_send_command
 10661 ;; This function is called by:
 10662 ;;		_main
 10663 ;;		_LCD_Handler
 10664 ;;		_board_initialization
 10665 ;;		_LCD_goto_xy
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text35
 10670  0029A8                     __ptext35:
 10671                           	opt stack 0
 10672  0029A8                     _LCD_goto_line:
 10673                           	opt stack 22
 10674                           
 10675                           ;incstack = 0
 10676                           ;LCD_goto_line@line stored from wreg
 10677  0029A8  0100               	movlb	0	; () banked
 10678  0029AA  6F6C               	movwf	LCD_goto_line@line& (0+255),b
 10679                           
 10680                           ;src\LCD_44780.c: 113: switch(line) {
 10681  0029AC  D064               	goto	l5367
 10682  0029AE                     l5359:
 10683  0029AE  0E00               	movlw	0
 10684  0029B0  0100               	movlb	0	; () banked
 10685  0029B2  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10686  0029B4  0E00               	movlw	0
 10687  0029B6  0100               	movlb	0	; () banked
 10688  0029B8  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10689  0029BA  0E00               	movlw	0
 10690  0029BC  0100               	movlb	0	; () banked
 10691  0029BE  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10692  0029C0  0E01               	movlw	1
 10693  0029C2  EC1B  F019         	call	_LCD_send_command
 10694                           
 10695                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10696  0029C6  0E00               	movlw	0
 10697  0029C8  0100               	movlb	0	; () banked
 10698  0029CA  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10699  0029CC  0E00               	movlw	0
 10700  0029CE  0100               	movlb	0	; () banked
 10701  0029D0  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10702  0029D2  0E00               	movlw	0
 10703  0029D4  0100               	movlb	0	; () banked
 10704  0029D6  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10705  0029D8  0E00               	movlw	0
 10706  0029DA  EC1B  F019         	call	_LCD_send_command
 10707                           
 10708                           ;src\LCD_44780.c: 117: break;
 10709  0029DE  0012               	return	
 10710  0029E0                     l5361:
 10711  0029E0  0E01               	movlw	1
 10712  0029E2  0100               	movlb	0	; () banked
 10713  0029E4  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10714  0029E6  0E00               	movlw	0
 10715  0029E8  0100               	movlb	0	; () banked
 10716  0029EA  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10717  0029EC  0E00               	movlw	0
 10718  0029EE  0100               	movlb	0	; () banked
 10719  0029F0  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10720  0029F2  0E01               	movlw	1
 10721  0029F4  EC1B  F019         	call	_LCD_send_command
 10722                           
 10723                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10724  0029F8  0E00               	movlw	0
 10725  0029FA  0100               	movlb	0	; () banked
 10726  0029FC  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10727  0029FE  0E00               	movlw	0
 10728  002A00  0100               	movlb	0	; () banked
 10729  002A02  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10730  002A04  0E00               	movlw	0
 10731  002A06  0100               	movlb	0	; () banked
 10732  002A08  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10733  002A0A  0E00               	movlw	0
 10734  002A0C  EC1B  F019         	call	_LCD_send_command
 10735                           
 10736                           ;src\LCD_44780.c: 121: break;
 10737  002A10  0012               	return	
 10738  002A12                     l5363:
 10739  002A12  0E00               	movlw	0
 10740  002A14  0100               	movlb	0	; () banked
 10741  002A16  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10742  002A18  0E00               	movlw	0
 10743  002A1A  0100               	movlb	0	; () banked
 10744  002A1C  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10745  002A1E  0E01               	movlw	1
 10746  002A20  0100               	movlb	0	; () banked
 10747  002A22  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10748  002A24  0E01               	movlw	1
 10749  002A26  EC1B  F019         	call	_LCD_send_command
 10750                           
 10751                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10752  002A2A  0E01               	movlw	1
 10753  002A2C  0100               	movlb	0	; () banked
 10754  002A2E  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10755  002A30  0E00               	movlw	0
 10756  002A32  0100               	movlb	0	; () banked
 10757  002A34  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10758  002A36  0E00               	movlw	0
 10759  002A38  0100               	movlb	0	; () banked
 10760  002A3A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10761  002A3C  0E00               	movlw	0
 10762  002A3E  EC1B  F019         	call	_LCD_send_command
 10763                           
 10764                           ;src\LCD_44780.c: 125: break;
 10765  002A42  0012               	return	
 10766  002A44                     l5365:
 10767  002A44  0E01               	movlw	1
 10768  002A46  0100               	movlb	0	; () banked
 10769  002A48  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10770  002A4A  0E00               	movlw	0
 10771  002A4C  0100               	movlb	0	; () banked
 10772  002A4E  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10773  002A50  0E01               	movlw	1
 10774  002A52  0100               	movlb	0	; () banked
 10775  002A54  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10776  002A56  0E01               	movlw	1
 10777  002A58  EC1B  F019         	call	_LCD_send_command
 10778                           
 10779                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10780  002A5C  0E01               	movlw	1
 10781  002A5E  0100               	movlb	0	; () banked
 10782  002A60  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10783  002A62  0E00               	movlw	0
 10784  002A64  0100               	movlb	0	; () banked
 10785  002A66  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10786  002A68  0E00               	movlw	0
 10787  002A6A  0100               	movlb	0	; () banked
 10788  002A6C  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10789  002A6E  0E00               	movlw	0
 10790  002A70  EC1B  F019         	call	_LCD_send_command
 10791                           
 10792                           ;src\LCD_44780.c: 129: }
 10793  002A74  0012               	return	
 10794  002A76                     l5367:
 10795  002A76  0100               	movlb	0	; () banked
 10796  002A78  516C               	movf	LCD_goto_line@line& (0+255),w,b
 10797                           
 10798                           ; Switch size 1, requested type "space"
 10799                           ; Number of cases is 4, Range of values is 1 to 4
 10800                           ; switch strategies available:
 10801                           ; Name         Instructions Cycles
 10802                           ; simple_byte           13     7 (average)
 10803                           ;	Chosen strategy is simple_byte
 10804  002A7A  0A01               	xorlw	1	; case 1
 10805  002A7C  B4D8               	btfsc	status,2,c
 10806  002A7E  D797               	goto	l5359
 10807  002A80  0A03               	xorlw	3	; case 2
 10808  002A82  B4D8               	btfsc	status,2,c
 10809  002A84  D7AD               	goto	l5361
 10810  002A86  0A01               	xorlw	1	; case 3
 10811  002A88  B4D8               	btfsc	status,2,c
 10812  002A8A  D7C3               	goto	l5363
 10813  002A8C  0A07               	xorlw	7	; case 4
 10814  002A8E  A4D8               	btfss	status,2,c
 10815  002A90  0012               	return	
 10816  002A92  D7D8               	goto	l5365
 10817  002A94                     __end_of_LCD_goto_line:
 10818                           	opt stack 0
 10819                           tblptru	equ	0xFF8
 10820                           tblptrh	equ	0xFF7
 10821                           tblptrl	equ	0xFF6
 10822                           tablat	equ	0xFF5
 10823                           prodh	equ	0xFF4
 10824                           prodl	equ	0xFF3
 10825                           intcon	equ	0xFF2
 10826                           postinc0	equ	0xFEE
 10827                           wreg	equ	0xFE8
 10828                           indf1	equ	0xFE7
 10829                           postinc1	equ	0xFE6
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function _LCD_clear *****************
 10839 ;; Defined at:
 10840 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;		None
 10845 ;; Return value:  Size  Location     Type
 10846 ;;		None               void
 10847 ;; Registers used:
 10848 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10854 ;;      Params:         0       0       0       0
 10855 ;;      Locals:         0       0       0       0
 10856 ;;      Temps:          0       0       0       0
 10857 ;;      Totals:         0       0       0       0
 10858 ;;Total ram usage:        0 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; Hardware stack levels required when called:    7
 10861 ;; This function calls:
 10862 ;;		_LCD_send_command
 10863 ;; This function is called by:
 10864 ;;		_LCD_initialize
 10865 ;;		_main
 10866 ;;		_LCD_Handler
 10867 ;;		_board_initialization
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text36
 10872  00334A                     __ptext36:
 10873                           	opt stack 0
 10874  00334A                     _LCD_clear:
 10875                           	opt stack 21
 10876                           
 10877                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10878                           
 10879                           ;incstack = 0
 10880  00334A  0E00               	movlw	0
 10881  00334C  0100               	movlb	0	; () banked
 10882  00334E  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10883  003350  0E00               	movlw	0
 10884  003352  0100               	movlb	0	; () banked
 10885  003354  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10886  003356  0E00               	movlw	0
 10887  003358  0100               	movlb	0	; () banked
 10888  00335A  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10889  00335C  0E00               	movlw	0
 10890  00335E  EC1B  F019         	call	_LCD_send_command
 10891                           
 10892                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10893  003362  0E00               	movlw	0
 10894  003364  0100               	movlb	0	; () banked
 10895  003366  6F68               	movwf	LCD_send_command@D2& (0+255),b
 10896  003368  0E00               	movlw	0
 10897  00336A  0100               	movlb	0	; () banked
 10898  00336C  6F69               	movwf	LCD_send_command@D1& (0+255),b
 10899  00336E  0E01               	movlw	1
 10900  003370  0100               	movlb	0	; () banked
 10901  003372  6F6A               	movwf	LCD_send_command@D0& (0+255),b
 10902  003374  0E00               	movlw	0
 10903  003376  EC1B  F019         	call	_LCD_send_command
 10904  00337A  0012               	return		;funcret
 10905  00337C                     __end_of_LCD_clear:
 10906                           	opt stack 0
 10907                           tblptru	equ	0xFF8
 10908                           tblptrh	equ	0xFF7
 10909                           tblptrl	equ	0xFF6
 10910                           tablat	equ	0xFF5
 10911                           prodh	equ	0xFF4
 10912                           prodl	equ	0xFF3
 10913                           intcon	equ	0xFF2
 10914                           postinc0	equ	0xFEE
 10915                           wreg	equ	0xFE8
 10916                           indf1	equ	0xFE7
 10917                           postinc1	equ	0xFE6
 10918                           fsr1h	equ	0xFE2
 10919                           fsr1l	equ	0xFE1
 10920                           indf2	equ	0xFDF
 10921                           postinc2	equ	0xFDE
 10922                           fsr2h	equ	0xFDA
 10923                           fsr2l	equ	0xFD9
 10924                           status	equ	0xFD8
 10925                           
 10926 ;; *************** function _LCD_send_command *****************
 10927 ;; Defined at:
 10928 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  D3              1    wreg     unsigned char 
 10931 ;;  D2              1    8[BANK0 ] unsigned char 
 10932 ;;  D1              1    9[BANK0 ] unsigned char 
 10933 ;;  D0              1   10[BANK0 ] unsigned char 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  D3              1   11[BANK0 ] unsigned char 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;		None               void
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10945 ;;      Params:         0       3       0       0
 10946 ;;      Locals:         0       1       0       0
 10947 ;;      Temps:          0       0       0       0
 10948 ;;      Totals:         0       4       0       0
 10949 ;;Total ram usage:        4 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    6
 10952 ;; This function calls:
 10953 ;;		_LCD_enable_pulse
 10954 ;; This function is called by:
 10955 ;;		_LCD_goto_line
 10956 ;;		_LCD_write_char
 10957 ;;		_LCD_clear
 10958 ;;		_LCD_cursor
 10959 ;;		_LCD_initialize
 10960 ;;		_LCD_home
 10961 ;;		_LCD_shift
 10962 ;;		_LCD_shift_cursor
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text37
 10967  003236                     __ptext37:
 10968                           	opt stack 0
 10969  003236                     _LCD_send_command:
 10970                           	opt stack 21
 10971                           
 10972                           ;incstack = 0
 10973                           ;LCD_send_command@D3 stored from wreg
 10974  003236  0100               	movlb	0	; () banked
 10975  003238  6F6B               	movwf	LCD_send_command@D3& (0+255),b
 10976                           
 10977                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 10978  00323A  0100               	movlb	0	; () banked
 10979  00323C  B16A               	btfsc	LCD_send_command@D0& (0+255),0,b
 10980  00323E  D002               	bra	u5065
 10981  003240  948B               	bcf	3979,2,c	;volatile
 10982  003242  D001               	bra	u5066
 10983  003244                     u5065:
 10984  003244  848B               	bsf	3979,2,c	;volatile
 10985  003246                     u5066:
 10986                           
 10987                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 10988  003246  0100               	movlb	0	; () banked
 10989  003248  B169               	btfsc	LCD_send_command@D1& (0+255),0,b
 10990  00324A  D002               	bra	u5075
 10991  00324C  968B               	bcf	3979,3,c	;volatile
 10992  00324E  D001               	bra	u5076
 10993  003250                     u5075:
 10994  003250  868B               	bsf	3979,3,c	;volatile
 10995  003252                     u5076:
 10996                           
 10997                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 10998  003252  0100               	movlb	0	; () banked
 10999  003254  B168               	btfsc	LCD_send_command@D2& (0+255),0,b
 11000  003256  D002               	bra	u5085
 11001  003258  908C               	bcf	3980,0,c	;volatile
 11002  00325A  D001               	bra	u5086
 11003  00325C                     u5085:
 11004  00325C  808C               	bsf	3980,0,c	;volatile
 11005  00325E                     u5086:
 11006                           
 11007                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 11008  00325E  0100               	movlb	0	; () banked
 11009  003260  B16B               	btfsc	LCD_send_command@D3& (0+255),0,b
 11010  003262  D002               	bra	u5095
 11011  003264  928C               	bcf	3980,1,c	;volatile
 11012  003266  D001               	bra	u5096
 11013  003268                     u5095:
 11014  003268  828C               	bsf	3980,1,c	;volatile
 11015  00326A                     u5096:
 11016                           
 11017                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11018  00326A  EC26  F01A         	call	_LCD_enable_pulse	;wreg free
 11019  00326E  0012               	return		;funcret
 11020  003270                     __end_of_LCD_send_command:
 11021                           	opt stack 0
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           postinc0	equ	0xFEE
 11030                           wreg	equ	0xFE8
 11031                           indf1	equ	0xFE7
 11032                           postinc1	equ	0xFE6
 11033                           fsr1h	equ	0xFE2
 11034                           fsr1l	equ	0xFE1
 11035                           indf2	equ	0xFDF
 11036                           postinc2	equ	0xFDE
 11037                           fsr2h	equ	0xFDA
 11038                           fsr2l	equ	0xFD9
 11039                           status	equ	0xFD8
 11040                           
 11041 ;; *************** function _LCD_enable_pulse *****************
 11042 ;; Defined at:
 11043 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;		None               void
 11050 ;; Registers used:
 11051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11057 ;;      Params:         0       0       0       0
 11058 ;;      Locals:         0       0       0       0
 11059 ;;      Temps:          0       0       0       0
 11060 ;;      Totals:         0       0       0       0
 11061 ;;Total ram usage:        0 bytes
 11062 ;; Hardware stack levels used:    1
 11063 ;; Hardware stack levels required when called:    5
 11064 ;; This function calls:
 11065 ;;		_delay_ms
 11066 ;; This function is called by:
 11067 ;;		_LCD_send_command
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text38
 11072  00344C                     __ptext38:
 11073                           	opt stack 0
 11074  00344C                     _LCD_enable_pulse:
 11075                           	opt stack 21
 11076                           
 11077                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 11078                           
 11079                           ;incstack = 0
 11080  00344C  828B               	bsf	3979,1,c	;volatile
 11081                           
 11082                           ;src\LCD_44780.c: 52: delay_ms (1);
 11083  00344E  0E00               	movlw	0
 11084  003450  0100               	movlb	0	; () banked
 11085  003452  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11086  003454  0E01               	movlw	1
 11087  003456  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11088  003458  EC38  F019         	call	_delay_ms	;wreg free
 11089                           
 11090                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 11091  00345C  928B               	bcf	3979,1,c	;volatile
 11092                           
 11093                           ;src\LCD_44780.c: 54: delay_ms (1);
 11094  00345E  0E00               	movlw	0
 11095  003460  0100               	movlb	0	; () banked
 11096  003462  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11097  003464  0E01               	movlw	1
 11098  003466  6F66               	movwf	delay_ms@value_ms& (0+255),b
 11099  003468  EC38  F019         	call	_delay_ms	;wreg free
 11100  00346C  0012               	return		;funcret
 11101  00346E                     __end_of_LCD_enable_pulse:
 11102                           	opt stack 0
 11103                           tblptru	equ	0xFF8
 11104                           tblptrh	equ	0xFF7
 11105                           tblptrl	equ	0xFF6
 11106                           tablat	equ	0xFF5
 11107                           prodh	equ	0xFF4
 11108                           prodl	equ	0xFF3
 11109                           intcon	equ	0xFF2
 11110                           postinc0	equ	0xFEE
 11111                           wreg	equ	0xFE8
 11112                           indf1	equ	0xFE7
 11113                           postinc1	equ	0xFE6
 11114                           fsr1h	equ	0xFE2
 11115                           fsr1l	equ	0xFE1
 11116                           indf2	equ	0xFDF
 11117                           postinc2	equ	0xFDE
 11118                           fsr2h	equ	0xFDA
 11119                           fsr2l	equ	0xFD9
 11120                           status	equ	0xFD8
 11121                           
 11122 ;; *************** function _delay_ms *****************
 11123 ;; Defined at:
 11124 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  value_ms        2    6[BANK0 ] unsigned int 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;		None
 11129 ;; Return value:  Size  Location     Type
 11130 ;;		None               void
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11138 ;;      Params:         0       2       0       0
 11139 ;;      Locals:         0       0       0       0
 11140 ;;      Temps:          0       0       0       0
 11141 ;;      Totals:         0       2       0       0
 11142 ;;Total ram usage:        2 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    4
 11145 ;; This function calls:
 11146 ;;		___wmul
 11147 ;; This function is called by:
 11148 ;;		_delay_s
 11149 ;;		_LCD_enable_pulse
 11150 ;;		_LCD_initialize
 11151 ;;		_main
 11152 ;;		_USART_Send
 11153 ;;		_board_initialization
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text39
 11158  003270                     __ptext39:
 11159                           	opt stack 0
 11160  003270                     _delay_ms:
 11161                           	opt stack 26
 11162                           
 11163                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11164                           
 11165                           ;incstack = 0
 11166  003270  C045  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11167  003274  0100               	movlb	0	; () banked
 11168  003276  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 11169  003278  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 11170  00327C  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11171  003280  EC71  F019         	call	___wmul	;wreg free
 11172  003284  C060  F0F5         	movff	?___wmul,_clock_counter_reference	;volatile
 11173  003288  C061  F0F6         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11174                           
 11175                           ;src\delay.c: 75: while (clock_counter_reference) {
 11176  00328C  D007               	goto	l101
 11177  00328E                     l4541:
 11178                           
 11179                           ;src\delay.c: 85: _delay(240);
 11180  00328E  0E50               	movlw	80
 11181  003290                     u7487:
 11182  003290  2EE8               	decfsz	wreg,f,c
 11183  003292  D7FE               	goto	u7487
 11184                           
 11185                           ;src\delay.c: 88: clock_counter_reference--;
 11186  003294  0100               	movlb	0	; () banked
 11187  003296  07F5               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11188  003298  A0D8               	btfss	status,0,c
 11189  00329A  07F6               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11190  00329C                     l101:
 11191  00329C  0100               	movlb	0	; () banked
 11192  00329E  51F5               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11193  0032A0  0100               	movlb	0	; () banked
 11194  0032A2  11F6               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11195  0032A4  B4D8               	btfsc	status,2,c
 11196  0032A6  0012               	return	
 11197  0032A8  D7F2               	goto	l4541
 11198  0032AA                     __end_of_delay_ms:
 11199                           	opt stack 0
 11200                           tblptru	equ	0xFF8
 11201                           tblptrh	equ	0xFF7
 11202                           tblptrl	equ	0xFF6
 11203                           tablat	equ	0xFF5
 11204                           prodh	equ	0xFF4
 11205                           prodl	equ	0xFF3
 11206                           intcon	equ	0xFF2
 11207                           postinc0	equ	0xFEE
 11208                           wreg	equ	0xFE8
 11209                           indf1	equ	0xFE7
 11210                           postinc1	equ	0xFE6
 11211                           fsr1h	equ	0xFE2
 11212                           fsr1l	equ	0xFE1
 11213                           indf2	equ	0xFDF
 11214                           postinc2	equ	0xFDE
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function ___wmul *****************
 11220 ;; Defined at:
 11221 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11224 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  product         2    4[BANK0 ] unsigned int 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  2    0[BANK0 ] unsigned int 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0, prodl, prodh
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11236 ;;      Params:         0       4       0       0
 11237 ;;      Locals:         0       2       0       0
 11238 ;;      Temps:          0       0       0       0
 11239 ;;      Totals:         0       6       0       0
 11240 ;;Total ram usage:        6 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; Hardware stack levels required when called:    3
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_delay_ms
 11247 ;;		_sprintf
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           	psect	text40
 11252  0032E2                     __ptext40:
 11253                           	opt stack 0
 11254  0032E2                     ___wmul:
 11255                           	opt stack 26
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;incstack = 0
 11259  0032E2  0100               	movlb	0	; () banked
 11260  0032E4  5160               	movf	___wmul@multiplier& (0+255),w,b
 11261  0032E6  0100               	movlb	0	; () banked
 11262  0032E8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11263  0032EA  CFF3 F064          	movff	prodl,___wmul@product
 11264  0032EE  CFF4 F065          	movff	prodh,___wmul@product+1
 11265  0032F2  0100               	movlb	0	; () banked
 11266  0032F4  5160               	movf	___wmul@multiplier& (0+255),w,b
 11267  0032F6  0100               	movlb	0	; () banked
 11268  0032F8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11269  0032FA  50F3               	movf	prodl,w,c
 11270  0032FC  0100               	movlb	0	; () banked
 11271  0032FE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11272  003300  0100               	movlb	0	; () banked
 11273  003302  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11274  003304  0100               	movlb	0	; () banked
 11275  003306  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11276  003308  50F3               	movf	prodl,w,c
 11277  00330A  0100               	movlb	0	; () banked
 11278  00330C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11279                           
 11280                           ; BSR set to: 0
 11281  00330E  C064  F060         	movff	___wmul@product,?___wmul
 11282  003312  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11283  003316  0012               	return	
 11284  003318                     __end_of___wmul:
 11285                           	opt stack 0
 11286                           tblptru	equ	0xFF8
 11287                           tblptrh	equ	0xFF7
 11288                           tblptrl	equ	0xFF6
 11289                           tablat	equ	0xFF5
 11290                           prodh	equ	0xFF4
 11291                           prodl	equ	0xFF3
 11292                           intcon	equ	0xFF2
 11293                           postinc0	equ	0xFEE
 11294                           wreg	equ	0xFE8
 11295                           indf1	equ	0xFE7
 11296                           postinc1	equ	0xFE6
 11297                           fsr1h	equ	0xFE2
 11298                           fsr1l	equ	0xFE1
 11299                           indf2	equ	0xFDF
 11300                           postinc2	equ	0xFDE
 11301                           fsr2h	equ	0xFDA
 11302                           fsr2l	equ	0xFD9
 11303                           status	equ	0xFD8
 11304                           
 11305 ;; *************** function _Joystick_Polling *****************
 11306 ;; Defined at:
 11307 ;;		line 221 in file "telecomando.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;		None
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;		None
 11312 ;; Return value:  Size  Location     Type
 11313 ;;		None               void
 11314 ;; Registers used:
 11315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11321 ;;      Params:         0       0       0       0
 11322 ;;      Locals:         0       0       0       0
 11323 ;;      Temps:          0       1       0       0
 11324 ;;      Totals:         0       1       0       0
 11325 ;;Total ram usage:        1 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:    3
 11328 ;; This function calls:
 11329 ;;		Nothing
 11330 ;; This function is called by:
 11331 ;;		_main
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text41
 11336  00315C                     __ptext41:
 11337                           	opt stack 0
 11338  00315C                     _Joystick_Polling:
 11339                           	opt stack 27
 11340                           
 11341                           ;telecomando.c: 222: for (i = 0; i < 2; i++) {
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;incstack = 0
 11345  00315C  0E00               	movlw	0
 11346  00315E  6E3E               	movwf	_i,c	;volatile
 11347  003160                     l5945:
 11348  003160  0E01               	movlw	1
 11349  003162  643E               	cpfsgt	_i,c	;volatile
 11350  003164  D001               	goto	l282
 11351  003166  0012               	return	
 11352  003168                     l282:
 11353                           
 11354                           ;telecomando.c: 223: ADCON0bits.GO = 1;
 11355  003168  82C2               	bsf	4034,1,c	;volatile
 11356  00316A                     l284:
 11357  00316A  B2C2               	btfsc	4034,1,c	;volatile
 11358  00316C  D7FE               	goto	l284
 11359                           
 11360                           ;telecomando.c: 225: JoystickValues[i] = ADRESH;
 11361  00316E  503E               	movf	_i,w,c	;volatile
 11362  003170  0D01               	mullw	1
 11363  003172  0E33               	movlw	low _JoystickValues
 11364  003174  24F3               	addwf	prodl,w,c
 11365  003176  6ED9               	movwf	fsr2l,c
 11366  003178  0E00               	movlw	high _JoystickValues
 11367  00317A  20F4               	addwfc	prodh,w,c
 11368  00317C  6EDA               	movwf	fsr2h,c
 11369  00317E  CFC4 FFDF          	movff	4036,indf2	;volatile
 11370                           
 11371                           ;telecomando.c: 226: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 11372  003182  A4C2               	btfss	4034,2,c	;volatile
 11373  003184  D002               	goto	u7210
 11374  003186  0E01               	movlw	1
 11375  003188  D001               	goto	u7216
 11376  00318A                     u7210:
 11377  00318A  0E00               	movlw	0
 11378  00318C                     u7216:
 11379  00318C  0AFF               	xorlw	255
 11380  00318E  0100               	movlb	0	; () banked
 11381  003190  6F60               	movwf	??_Joystick_Polling& (0+255),b
 11382  003192  0100               	movlb	0	; () banked
 11383  003194  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11384  003196  4760               	rlncf	??_Joystick_Polling& (0+255),f,b
 11385  003198  50C2               	movf	4034,w,c	;volatile
 11386  00319A  0100               	movlb	0	; () banked
 11387  00319C  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11388  00319E  0BFB               	andlw	-5
 11389  0031A0  1960               	xorwf	??_Joystick_Polling& (0+255),w,b
 11390  0031A2  6EC2               	movwf	4034,c	;volatile
 11391                           
 11392                           ; BSR set to: 0
 11393  0031A4  2A3E               	incf	_i,f,c	;volatile
 11394  0031A6  D7DC               	goto	l5945
 11395  0031A8                     __end_of_Joystick_Polling:
 11396                           	opt stack 0
 11397                           tblptru	equ	0xFF8
 11398                           tblptrh	equ	0xFF7
 11399                           tblptrl	equ	0xFF6
 11400                           tablat	equ	0xFF5
 11401                           prodh	equ	0xFF4
 11402                           prodl	equ	0xFF3
 11403                           intcon	equ	0xFF2
 11404                           postinc0	equ	0xFEE
 11405                           wreg	equ	0xFE8
 11406                           indf1	equ	0xFE7
 11407                           postinc1	equ	0xFE6
 11408                           fsr1h	equ	0xFE2
 11409                           fsr1l	equ	0xFE1
 11410                           indf2	equ	0xFDF
 11411                           postinc2	equ	0xFDE
 11412                           fsr2h	equ	0xFDA
 11413                           fsr2l	equ	0xFD9
 11414                           status	equ	0xFD8
 11415                           
 11416 ;; *************** function _ISR_bassa *****************
 11417 ;; Defined at:
 11418 ;;		line 104 in file "telecomando.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;		None               void
 11425 ;; Registers used:
 11426 ;;		wreg, status,2, status,0
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11432 ;;      Params:         0       0       0       0
 11433 ;;      Locals:         0       0       0       0
 11434 ;;      Temps:         17       0       0       0
 11435 ;;      Totals:        17       0       0       0
 11436 ;;Total ram usage:       17 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    2
 11439 ;; This function calls:
 11440 ;;		Nothing
 11441 ;; This function is called by:
 11442 ;;		Interrupt level 1
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	intcodelo
 11447  000018                     __pintcodelo:
 11448                           	opt stack 0
 11449  000018                     _ISR_bassa:
 11450                           	opt stack 21
 11451                           
 11452                           ;incstack = 0
 11453  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11454  00001A  CFD8 F001          	movff	status,??_ISR_bassa
 11455  00001E  CFE8 F002          	movff	wreg,??_ISR_bassa+1
 11456  000022  CFE0 F003          	movff	bsr,??_ISR_bassa+2
 11457  000026  CFFA F004          	movff	pclath,??_ISR_bassa+3
 11458  00002A  CFFB F005          	movff	pclatu,??_ISR_bassa+4
 11459  00002E  CFE9 F006          	movff	fsr0l,??_ISR_bassa+5
 11460  000032  CFEA F007          	movff	fsr0h,??_ISR_bassa+6
 11461  000036  CFE1 F008          	movff	fsr1l,??_ISR_bassa+7
 11462  00003A  CFE2 F009          	movff	fsr1h,??_ISR_bassa+8
 11463  00003E  CFD9 F00A          	movff	fsr2l,??_ISR_bassa+9
 11464  000042  CFDA F00B          	movff	fsr2h,??_ISR_bassa+10
 11465  000046  CFF3 F00C          	movff	prodl,??_ISR_bassa+11
 11466  00004A  CFF4 F00D          	movff	prodh,??_ISR_bassa+12
 11467  00004E  CFF6 F00E          	movff	tblptrl,??_ISR_bassa+13
 11468  000052  CFF7 F00F          	movff	tblptrh,??_ISR_bassa+14
 11469  000056  CFF8 F010          	movff	tblptru,??_ISR_bassa+15
 11470  00005A  CFF5 F011          	movff	tablat,??_ISR_bassa+16
 11471                           
 11472                           ;telecomando.c: 105: if (PIR2bits.TMR3IF) {
 11473  00005E  A2A1               	btfss	4001,1,c	;volatile
 11474  000060  D00B               	goto	i1l249
 11475                           
 11476                           ;telecomando.c: 106: time_counter++;
 11477  000062  0E01               	movlw	1
 11478  000064  262F               	addwf	_time_counter,f,c	;volatile
 11479  000066  0E00               	movlw	0
 11480  000068  2230               	addwfc	_time_counter+1,f,c	;volatile
 11481  00006A  2231               	addwfc	_time_counter+2,f,c	;volatile
 11482  00006C  2232               	addwfc	_time_counter+3,f,c	;volatile
 11483                           
 11484                           ;telecomando.c: 107: TMR3H = 0x63;
 11485  00006E  0E63               	movlw	99
 11486  000070  6EB3               	movwf	4019,c	;volatile
 11487                           
 11488                           ;telecomando.c: 108: TMR3L = 0xC0;
 11489  000072  0EC0               	movlw	192
 11490  000074  6EB2               	movwf	4018,c	;volatile
 11491                           
 11492                           ;telecomando.c: 109: PIR2bits.TMR3IF = 0;
 11493  000076  92A1               	bcf	4001,1,c	;volatile
 11494  000078                     i1l249:
 11495  000078  C011  FFF5         	movff	??_ISR_bassa+16,tablat
 11496  00007C  C010  FFF8         	movff	??_ISR_bassa+15,tblptru
 11497  000080  C00F  FFF7         	movff	??_ISR_bassa+14,tblptrh
 11498  000084  C00E  FFF6         	movff	??_ISR_bassa+13,tblptrl
 11499  000088  C00D  FFF4         	movff	??_ISR_bassa+12,prodh
 11500  00008C  C00C  FFF3         	movff	??_ISR_bassa+11,prodl
 11501  000090  C00B  FFDA         	movff	??_ISR_bassa+10,fsr2h
 11502  000094  C00A  FFD9         	movff	??_ISR_bassa+9,fsr2l
 11503  000098  C009  FFE2         	movff	??_ISR_bassa+8,fsr1h
 11504  00009C  C008  FFE1         	movff	??_ISR_bassa+7,fsr1l
 11505  0000A0  C007  FFEA         	movff	??_ISR_bassa+6,fsr0h
 11506  0000A4  C006  FFE9         	movff	??_ISR_bassa+5,fsr0l
 11507  0000A8  C005  FFFB         	movff	??_ISR_bassa+4,pclatu
 11508  0000AC  C004  FFFA         	movff	??_ISR_bassa+3,pclath
 11509  0000B0  C003  FFE0         	movff	??_ISR_bassa+2,bsr
 11510  0000B4  C002  FFE8         	movff	??_ISR_bassa+1,wreg
 11511  0000B8  C001  FFD8         	movff	??_ISR_bassa,status
 11512  0000BC  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11513  0000BE  0010               	retfie	
 11514  0000C0                     __end_of_ISR_bassa:
 11515                           	opt stack 0
 11516                           pclatu	equ	0xFFB
 11517                           pclath	equ	0xFFA
 11518                           tblptru	equ	0xFF8
 11519                           tblptrh	equ	0xFF7
 11520                           tblptrl	equ	0xFF6
 11521                           tablat	equ	0xFF5
 11522                           prodh	equ	0xFF4
 11523                           prodl	equ	0xFF3
 11524                           intcon	equ	0xFF2
 11525                           postinc0	equ	0xFEE
 11526                           fsr0h	equ	0xFEA
 11527                           fsr0l	equ	0xFE9
 11528                           wreg	equ	0xFE8
 11529                           indf1	equ	0xFE7
 11530                           postinc1	equ	0xFE6
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           bsr	equ	0xFE0
 11534                           indf2	equ	0xFDF
 11535                           postinc2	equ	0xFDE
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function _ISR_alta *****************
 11541 ;; Defined at:
 11542 ;;		line 99 in file "telecomando.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;		None
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;		None
 11547 ;; Return value:  Size  Location     Type
 11548 ;;		None               void
 11549 ;; Registers used:
 11550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11556 ;;      Params:         0       0       0       0
 11557 ;;      Locals:         0       0       0       0
 11558 ;;      Temps:         14       0       0       0
 11559 ;;      Totals:        14       0       0       0
 11560 ;;Total ram usage:       14 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:    1
 11563 ;; This function calls:
 11564 ;;		i2_USART_RX
 11565 ;; This function is called by:
 11566 ;;		Interrupt level 2
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	intcode
 11571  000008                     __pintcode:
 11572                           	opt stack 0
 11573  000008                     _ISR_alta:
 11574                           	opt stack 21
 11575                           
 11576                           ;incstack = 0
 11577  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11578  00000A  CFFA F015          	movff	pclath,??_ISR_alta
 11579  00000E  CFFB F016          	movff	pclatu,??_ISR_alta+1
 11580  000012  ED75  F018         	call	int_func,f	;refresh shadow registers
 11581                           pclatu	equ	0xFFB
 11582                           pclath	equ	0xFFA
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           postinc0	equ	0xFEE
 11591                           fsr0h	equ	0xFEA
 11592                           fsr0l	equ	0xFE9
 11593                           wreg	equ	0xFE8
 11594                           indf1	equ	0xFE7
 11595                           postinc1	equ	0xFE6
 11596                           fsr1h	equ	0xFE2
 11597                           fsr1l	equ	0xFE1
 11598                           bsr	equ	0xFE0
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           fsr2h	equ	0xFDA
 11602                           fsr2l	equ	0xFD9
 11603                           status	equ	0xFD8
 11604                           
 11605                           	psect	intcode_body
 11606  0030EA                     __pintcode_body:
 11607                           	opt stack 21
 11608  0030EA                     int_func:
 11609                           	opt stack 21
 11610  0030EA  0006               	pop		; remove dummy address from shadow register refresh
 11611  0030EC  CFE9 F017          	movff	fsr0l,??_ISR_alta+2
 11612  0030F0  CFEA F018          	movff	fsr0h,??_ISR_alta+3
 11613  0030F4  CFE1 F019          	movff	fsr1l,??_ISR_alta+4
 11614  0030F8  CFE2 F01A          	movff	fsr1h,??_ISR_alta+5
 11615  0030FC  CFD9 F01B          	movff	fsr2l,??_ISR_alta+6
 11616  003100  CFDA F01C          	movff	fsr2h,??_ISR_alta+7
 11617  003104  CFF3 F01D          	movff	prodl,??_ISR_alta+8
 11618  003108  CFF4 F01E          	movff	prodh,??_ISR_alta+9
 11619  00310C  CFF6 F01F          	movff	tblptrl,??_ISR_alta+10
 11620  003110  CFF7 F020          	movff	tblptrh,??_ISR_alta+11
 11621  003114  CFF8 F021          	movff	tblptru,??_ISR_alta+12
 11622  003118  CFF5 F022          	movff	tablat,??_ISR_alta+13
 11623                           
 11624                           ;telecomando.c: 100: USART_RX();
 11625  00311C  EC68  F017         	call	i2_USART_RX	;wreg free
 11626  003120  C022  FFF5         	movff	??_ISR_alta+13,tablat
 11627  003124  C021  FFF8         	movff	??_ISR_alta+12,tblptru
 11628  003128  C020  FFF7         	movff	??_ISR_alta+11,tblptrh
 11629  00312C  C01F  FFF6         	movff	??_ISR_alta+10,tblptrl
 11630  003130  C01E  FFF4         	movff	??_ISR_alta+9,prodh
 11631  003134  C01D  FFF3         	movff	??_ISR_alta+8,prodl
 11632  003138  C01C  FFDA         	movff	??_ISR_alta+7,fsr2h
 11633  00313C  C01B  FFD9         	movff	??_ISR_alta+6,fsr2l
 11634  003140  C01A  FFE2         	movff	??_ISR_alta+5,fsr1h
 11635  003144  C019  FFE1         	movff	??_ISR_alta+4,fsr1l
 11636  003148  C018  FFEA         	movff	??_ISR_alta+3,fsr0h
 11637  00314C  C017  FFE9         	movff	??_ISR_alta+2,fsr0l
 11638  003150  C016  FFFB         	movff	??_ISR_alta+1,pclatu
 11639  003154  C015  FFFA         	movff	??_ISR_alta,pclath
 11640  003158  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11641  00315A  0011               	retfie		f
 11642  00315C                     __end_of_ISR_alta:
 11643                           	opt stack 0
 11644                           pclatu	equ	0xFFB
 11645                           pclath	equ	0xFFA
 11646                           tblptru	equ	0xFF8
 11647                           tblptrh	equ	0xFF7
 11648                           tblptrl	equ	0xFF6
 11649                           tablat	equ	0xFF5
 11650                           prodh	equ	0xFF4
 11651                           prodl	equ	0xFF3
 11652                           intcon	equ	0xFF2
 11653                           postinc0	equ	0xFEE
 11654                           fsr0h	equ	0xFEA
 11655                           fsr0l	equ	0xFE9
 11656                           wreg	equ	0xFE8
 11657                           indf1	equ	0xFE7
 11658                           postinc1	equ	0xFE6
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           bsr	equ	0xFE0
 11662                           indf2	equ	0xFDF
 11663                           postinc2	equ	0xFDE
 11664                           fsr2h	equ	0xFDA
 11665                           fsr2l	equ	0xFD9
 11666                           status	equ	0xFD8
 11667                           
 11668 ;; *************** function i2_USART_RX *****************
 11669 ;; Defined at:
 11670 ;;		line 283 in file "telecomando.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;  USART_RX        1   19[COMRAM] unsigned char 
 11675 ;; Return value:  Size  Location     Type
 11676 ;;		None               void
 11677 ;; Registers used:
 11678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11684 ;;      Params:         0       0       0       0
 11685 ;;      Locals:         1       0       0       0
 11686 ;;      Temps:          2       0       0       0
 11687 ;;      Totals:         3       0       0       0
 11688 ;;Total ram usage:        3 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_ISR_alta
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           	psect	text44
 11698  002ED0                     __ptext44:
 11699                           	opt stack 0
 11700  002ED0                     i2_USART_RX:
 11701                           	opt stack 21
 11702                           
 11703                           ;telecomando.c: 284: if (PIR1bits.RCIF == 1) {
 11704                           
 11705                           ;incstack = 0
 11706  002ED0  AA9E               	btfss	3998,5,c	;volatile
 11707  002ED2  D047               	goto	i2l4327
 11708                           
 11709                           ;telecomando.c: 285: INTCONbits.GIEH = 0;
 11710  002ED4  9EF2               	bcf	intcon,7,c	;volatile
 11711                           
 11712                           ;telecomando.c: 286: INTCONbits.GIEL = 0;
 11713  002ED6  9CF2               	bcf	intcon,6,c	;volatile
 11714                           
 11715                           ;telecomando.c: 287: PIE2bits.TMR3IE = 0;
 11716  002ED8  92A0               	bcf	4000,1,c	;volatile
 11717                           
 11718                           ;telecomando.c: 289: PIE1bits.RCIE = 0;
 11719  002EDA  9A9D               	bcf	3997,5,c	;volatile
 11720                           
 11721                           ;telecomando.c: 290: if (RCREG == 0xAA) {
 11722  002EDC  0EAA               	movlw	170
 11723  002EDE  18AE               	xorwf	4014,w,c	;volatile
 11724  002EE0  A4D8               	btfss	status,2,c
 11725  002EE2  D016               	goto	i2l4305
 11726                           
 11727                           ;telecomando.c: 292: for (unsigned char i = 0; i < 7; i++) {
 11728  002EE4  0E00               	movlw	0
 11729  002EE6  6E14               	movwf	i2USART_RX@i,c
 11730  002EE8                     i2l4293:
 11731  002EE8  0E06               	movlw	6
 11732  002EEA  6414               	cpfsgt	i2USART_RX@i,c
 11733  002EEC  D001               	goto	i2l314
 11734  002EEE  D010               	goto	i2l4305
 11735  002EF0                     i2l314:
 11736                           
 11737                           ;telecomando.c: 293: PORTDbits.RD7 = 1;
 11738  002EF0  8E83               	bsf	3971,7,c	;volatile
 11739  002EF2                     i2l316:
 11740  002EF2  AA9E               	btfss	3998,5,c	;volatile
 11741  002EF4  D7FE               	goto	i2l316
 11742                           
 11743                           ;telecomando.c: 295: }
 11744                           ;telecomando.c: 297: USART_Rx[i] = RCREG;
 11745  002EF6  5014               	movf	i2USART_RX@i,w,c
 11746  002EF8  0D01               	mullw	1
 11747  002EFA  0EC9               	movlw	low _USART_Rx
 11748  002EFC  24F3               	addwf	prodl,w,c
 11749  002EFE  6ED9               	movwf	fsr2l,c
 11750  002F00  0E00               	movlw	high _USART_Rx
 11751  002F02  20F4               	addwfc	prodh,w,c
 11752  002F04  6EDA               	movwf	fsr2h,c
 11753  002F06  CFAE FFDF          	movff	4014,indf2	;volatile
 11754                           
 11755                           ;telecomando.c: 298: PIR1bits.RCIF = 0;
 11756  002F0A  9A9E               	bcf	3998,5,c	;volatile
 11757  002F0C  2A14               	incf	i2USART_RX@i,f,c
 11758  002F0E  D7EC               	goto	i2l4293
 11759  002F10                     i2l4305:
 11760                           
 11761                           ;telecomando.c: 299: }
 11762                           ;telecomando.c: 301: }
 11763                           ;telecomando.c: 302: if (USART_Rx[5] == 0xAA) {
 11764  002F10  0EAA               	movlw	170
 11765  002F12  0100               	movlb	0	; () banked
 11766  002F14  19CE               	xorwf	(_USART_Rx+5)& (0+255),w,b
 11767  002F16  A4D8               	btfss	status,2,c
 11768  002F18  D021               	goto	i2l4321
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;telecomando.c: 303: actual_dir = USART_Rx[1];
 11772  002F1A  0100               	movlb	0	; () banked
 11773  002F1C  A1CA               	btfss	(_USART_Rx+1)& (0+255),0,b
 11774  002F1E  D002               	goto	i2u476_40
 11775  002F20  8044               	bsf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11776  002F22  D001               	goto	i2u477_45
 11777  002F24                     i2u476_40:
 11778  002F24  9044               	bcf	_actual_dir/(0+8),_actual_dir& (0+7),c	;volatile
 11779  002F26                     i2u477_45:
 11780                           
 11781                           ;telecomando.c: 304: actual_speed_pk1 = USART_Rx[2];
 11782  002F26  C0CB  F03B         	movff	_USART_Rx+2,_actual_speed_pk1	;volatile
 11783                           
 11784                           ;telecomando.c: 305: if (actual_speed_pk1 == 0b10000000) {
 11785  002F2A  0E80               	movlw	128
 11786  002F2C  183B               	xorwf	_actual_speed_pk1,w,c	;volatile
 11787  002F2E  A4D8               	btfss	status,2,c
 11788  002F30  D002               	goto	i2l4313
 11789                           
 11790                           ;telecomando.c: 307: actual_speed_pk1 = 0x00;
 11791  002F32  0E00               	movlw	0
 11792  002F34  6E3B               	movwf	_actual_speed_pk1,c	;volatile
 11793  002F36                     i2l4313:
 11794                           
 11795                           ;telecomando.c: 308: }
 11796                           ;telecomando.c: 309: actual_speed_pk0 = USART_Rx[3];
 11797  002F36  C0CC  F03A         	movff	_USART_Rx+3,_actual_speed_pk0	;volatile
 11798                           
 11799                           ;telecomando.c: 310: ECU_Check = USART_Rx[4];
 11800  002F3A  C0CD  F038         	movff	_USART_Rx+4,_ECU_Check	;volatile
 11801                           
 11802                           ;telecomando.c: 311: Battery_Check = USART_Rx[5];
 11803  002F3E  C0CE  F037         	movff	_USART_Rx+5,_Battery_Check	;volatile
 11804                           
 11805                           ;telecomando.c: 312: actual_speed = (actual_speed_pk1 << 8) | (actual_speed_pk0);
 11806  002F42  503A               	movf	_actual_speed_pk0,w,c	;volatile
 11807  002F44  C03B  F012         	movff	_actual_speed_pk1,??i2_USART_RX	;volatile
 11808  002F48  6A13               	clrf	(??i2_USART_RX+1)& (0+255),c
 11809  002F4A  C012  F013         	movff	??i2_USART_RX,??i2_USART_RX+1
 11810  002F4E  6A12               	clrf	??i2_USART_RX,c
 11811  002F50  1012               	iorwf	??i2_USART_RX,w,c
 11812  002F52  0100               	movlb	0	; () banked
 11813  002F54  6FEB               	movwf	_actual_speed& (0+255),b	;volatile
 11814  002F56  5013               	movf	??i2_USART_RX+1,w,c
 11815  002F58  0100               	movlb	0	; () banked
 11816  002F5A  6FEC               	movwf	(_actual_speed+1)& (0+255),b	;volatile
 11817  002F5C                     i2l4321:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;telecomando.c: 313: }
 11821                           ;telecomando.c: 314: PIR1bits.RCIF = 0;
 11822  002F5C  9A9E               	bcf	3998,5,c	;volatile
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;telecomando.c: 315: PIE1bits.RCIE = 1;
 11826  002F5E  8A9D               	bsf	3997,5,c	;volatile
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;telecomando.c: 316: PIE2bits.TMR3IE = 1;
 11830  002F60  82A0               	bsf	4000,1,c	;volatile
 11831  002F62                     i2l4327:
 11832                           
 11833                           ;telecomando.c: 317: }
 11834                           ;telecomando.c: 318: INTCONbits.GIEH = 1;
 11835  002F62  8EF2               	bsf	intcon,7,c	;volatile
 11836                           
 11837                           ;telecomando.c: 319: INTCONbits.GIEL = 1;
 11838  002F64  8CF2               	bsf	intcon,6,c	;volatile
 11839  002F66  0012               	return		;funcret
 11840  002F68                     __end_ofi2_USART_RX:
 11841                           	opt stack 0
 11842                           pclatu	equ	0xFFB
 11843                           pclath	equ	0xFFA
 11844                           tblptru	equ	0xFF8
 11845                           tblptrh	equ	0xFF7
 11846                           tblptrl	equ	0xFF6
 11847                           tablat	equ	0xFF5
 11848                           prodh	equ	0xFF4
 11849                           prodl	equ	0xFF3
 11850                           intcon	equ	0xFF2
 11851                           postinc0	equ	0xFEE
 11852                           fsr0h	equ	0xFEA
 11853                           fsr0l	equ	0xFE9
 11854                           wreg	equ	0xFE8
 11855                           indf1	equ	0xFE7
 11856                           postinc1	equ	0xFE6
 11857                           fsr1h	equ	0xFE2
 11858                           fsr1l	equ	0xFE1
 11859                           bsr	equ	0xFE0
 11860                           indf2	equ	0xFDF
 11861                           postinc2	equ	0xFDE
 11862                           fsr2h	equ	0xFDA
 11863                           fsr2l	equ	0xFD9
 11864                           status	equ	0xFD8
 11865                           pclatu	equ	0xFFB
 11866                           pclath	equ	0xFFA
 11867                           tblptru	equ	0xFF8
 11868                           tblptrh	equ	0xFF7
 11869                           tblptrl	equ	0xFF6
 11870                           tablat	equ	0xFF5
 11871                           prodh	equ	0xFF4
 11872                           prodl	equ	0xFF3
 11873                           intcon	equ	0xFF2
 11874                           postinc0	equ	0xFEE
 11875                           fsr0h	equ	0xFEA
 11876                           fsr0l	equ	0xFE9
 11877                           wreg	equ	0xFE8
 11878                           indf1	equ	0xFE7
 11879                           postinc1	equ	0xFE6
 11880                           fsr1h	equ	0xFE2
 11881                           fsr1l	equ	0xFE1
 11882                           bsr	equ	0xFE0
 11883                           indf2	equ	0xFDF
 11884                           postinc2	equ	0xFDE
 11885                           fsr2h	equ	0xFDA
 11886                           fsr2l	equ	0xFD9
 11887                           status	equ	0xFD8
 11888                           
 11889                           	psect	rparam
 11890  0000                     pclatu	equ	0xFFB
 11891                           pclath	equ	0xFFA
 11892                           tblptru	equ	0xFF8
 11893                           tblptrh	equ	0xFF7
 11894                           tblptrl	equ	0xFF6
 11895                           tablat	equ	0xFF5
 11896                           prodh	equ	0xFF4
 11897                           prodl	equ	0xFF3
 11898                           intcon	equ	0xFF2
 11899                           postinc0	equ	0xFEE
 11900                           fsr0h	equ	0xFEA
 11901                           fsr0l	equ	0xFE9
 11902                           wreg	equ	0xFE8
 11903                           indf1	equ	0xFE7
 11904                           postinc1	equ	0xFE6
 11905                           fsr1h	equ	0xFE2
 11906                           fsr1l	equ	0xFE1
 11907                           bsr	equ	0xFE0
 11908                           indf2	equ	0xFDF
 11909                           postinc2	equ	0xFDE
 11910                           fsr2h	equ	0xFDA
 11911                           fsr2l	equ	0xFD9
 11912                           status	equ	0xFD8
 11913                           
 11914                           	psect	temp
 11915  000046                     btemp:
 11916                           	opt stack 0
 11917  000046                     	ds	1
 11918  0000                     int$flags	set	btemp
 11919                           pclatu	equ	0xFFB
 11920                           pclath	equ	0xFFA
 11921                           tblptru	equ	0xFF8
 11922                           tblptrh	equ	0xFF7
 11923                           tblptrl	equ	0xFF6
 11924                           tablat	equ	0xFF5
 11925                           prodh	equ	0xFF4
 11926                           prodl	equ	0xFF3
 11927                           intcon	equ	0xFF2
 11928                           postinc0	equ	0xFEE
 11929                           fsr0h	equ	0xFEA
 11930                           fsr0l	equ	0xFE9
 11931                           wreg	equ	0xFE8
 11932                           indf1	equ	0xFE7
 11933                           postinc1	equ	0xFE6
 11934                           fsr1h	equ	0xFE2
 11935                           fsr1l	equ	0xFE1
 11936                           bsr	equ	0xFE0
 11937                           indf2	equ	0xFDF
 11938                           postinc2	equ	0xFDE
 11939                           fsr2h	equ	0xFDA
 11940                           fsr2l	equ	0xFD9
 11941                           status	equ	0xFD8


Data Sizes:
    Strings     132
    Constant    144
    Data        1
    BSS         89
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      69
    BANK0           160    105     151
    BANK1           256     25      37
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Tx(BANK0[8]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[8]), STR_12(CODE[21]), STR_11(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[12]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_USART_RX

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_LCD_write_message
    _delay_s->_delay_ms
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _USART_Send->_delay_ms
    _putsUSART->_WriteUSART
    _LCD_Handler->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___xxtofl->___lwdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  182033
                                             97 BANK0      8     8      0
                   _Joystick_Polling
                        _LCD_Handler
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                 _PWR_Button_Polling
                           _USART_RX
                         _USART_Send
                            ___flmul
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   61471
                      _LCD_backlight
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                          _OpenUSART
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1640
                                              8 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                             14 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                             12 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Send                                           5     5      0    2132
                                              8 BANK0      5     5      0
                           _delay_ms
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     170
                                              1 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_RX                                             3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0   81370
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___lwdiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41239
                                             87 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             21 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3697
                                             79 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3364
                                             59 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     639
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9827
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             17 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                             12 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                             12 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                              8 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1572
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            14    14      0      68
                                             20 COMRAM    14    14      0
                         i2_USART_RX
 ---------------------------------------------------------------------------------
 (10) i2_USART_RX                                          3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Joystick_Polling
   _LCD_Handler
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   _USART_RX
   _USART_Send
     _delay_ms
       ___wmul
     _putsUSART
       _WriteUSART
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___xxtofl
     ___lwdiv (ARG)
   _board_initialization
     _LCD_backlight
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _OpenUSART
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   i2_USART_RX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      25       6       14.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     69      97       4       94.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      45       1       73.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101       9        0.0%
DATA                 0      0     101      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 21:29:05 2016

                             _i 003E       __size_of_delay_set_quartz 000A                    ?_LCD_Handler 0001  
                  ___awdiv@sign 006B              delay_s@repeat_loop 0069                              bsr 000FE0  
           ___wmul@multiplicand 0062                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000                             l101 329C  
                           l314 2D10                             l316 2D12                             l261 18E4  
                           l254 17C2                             l409 069C                             l282 3168  
                           l284 316A                             l700 22C4                             l452 30BC  
                           l277 3476                             l453 30BE                             l454 30CA  
                           l455 30CC                             l448 30A2                             l465 33FE  
                           l299 2592                             l690 248A                             l936 306C  
                           l794 2172                             l883 2CDA                             l787 20AE  
                           l788 20F2                             l893 2EBE                             l977 0FDE  
                           l994 1152                             l978 0FD2                             l979 0F9E  
          ??_PWR_Button_Polling 0060                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 006C                             _dir 003D                             _str 0119  
                  ___awmod@sign 0065                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0082                    ___flmul@bexp 0087                    ___flmul@sign 0081  
                  ___flmul@temp 008C                    ___flmul@prod 0088                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 00A0                    __CFG_WDT$OFF 000000  
                          l1003 11E6                            l1100 1F82                            l1070 15F6  
                          l1063 135A                            l1080 1708                            l1072 1664  
                          l1092 1F0E                            l1085 1E62                            l1099 1F6A  
                          l5011 1DC6                            l5003 1CDA                            l5111 213C  
                          l5031 0B70                            l5025 0AAA                            l5203 2220  
                          l5107 2128                            l5043 0D0C                            l5035 0B9C  
                          l5213 2310                            l5221 32D0                            l5133 2360  
                          l5117 2158                            l5061 33F4                            l6101 18BE  
                          l5207 2272                            l5231 28C2                            l5303 2EAC  
                          l5127 233A                            l5119 2168                            l5071 2020  
                          l5321 1EA2                            l5313 1E72                            l5049 0DD2  
                          l6105 18D0                            l5251 2944                            l5331 1F4C  
                          l5323 1EB2                            l5171 2454                            l5155 2408  
                          l5147 23B4                            l6131 1A54                            l6115 18F0  
                          l6107 18D6                            l4541 328E                            l4605 0EE2  
                          l5261 297A                            l5333 1F5C                            l5325 1EF0  
                          l5077 205A                            l6117 18F8                            l5247 2930  
                          l5319 1E9A                            l5167 2440                            l5511 0374  
                          l5351 3388                            l6127 19D6                            l5361 29E0  
                          l4705 119A                            l5265 2996                            l5257 2960  
                          l5345 1FD4                            l5177 2470                            l5521 0418  
                          l5513 03B0                            l5505 032C                            l5441 00EE  
                          l6137 1ACC                            l6073 17A2                            l5363 2A12  
                          l5371 33AA                            l4715 11BA                            l4635 0F1E  
                          l4563 0E1C                            l5259 2970                            l5275 2C5E  
                          l5179 2480                            l5611 0842                            l5603 081A  
                          l5515 03C6                            l5435 00D4                            l5187 3498  
                          l5355 339A                            l6083 17CC                            l5365 2A44  
                          l4725 11E0                            l4709 11A6                            l4717 11C0  
                          l4653 0FC2                            l4581 0E76                            l4573 0E4A  
                          l5277 2C6E                            l5605 0828                            l5541 0532  
                          l5525 044A                            l5509 035E                            l5613 0850  
                          l5453 0166                            l5359 29AE                            l5367 2A76  
                          l5375 33C0                            l5383 343C                            l5199 21D2  
                          l4743 1270                            l4735 123C                            l4671 1040  
                          l4663 1002                            l4647 0FB2                            l5287 2CC8  
                          l5279 2C74                            l5295 2E52                            l4911 2BCE  
                          l4903 2BA4                            l5631 08FA                            l5623 089E  
                          l5535 04B4                            l5471 01D2                            l5463 0192  
                          l5455 017C                            l4673 1046                            l4681 1062  
                          l4649 0FB8                            l4593 0EAE                            l4569 0E40  
                          l5297 2E62                            l4921 2C04                            l4913 2BD4  
                          l4841 15E0                            l5553 0578                            l5481 0224  
                          l5465 01B8                            l5449 0120                            l5633 0900  
                          l5379 3428                            l5707 305E                            l4755 1294  
                          l4747 127C                            l4739 124E                            l4691 1132  
                          l4587 0E8A                            l5299 2E68                            l4771 12E8  
                          l5627 08CE                            l5619 0876                            l5539 052C  
                          l5459 018C                            l5635 091E                            l4749 1280  
                          l4677 1050                            l4597 0EB8                            l4909 2BC2  
                          l4925 2C12                            l4941 2DB0                            l4773 12EE  
                          l4765 12C4                            l5581 06A0                            l5557 05A4  
                          l5901 254C                            l4951 2DE0                            l4871 16DA  
                          l4847 160A                            l4791 1348                            l4783 131E  
                          l4775 1300                            l5575 066A                            l5559 05AC  
                          l5567 0642                            l5727 2D06                            l5903 2556  
                          l4929 2C26                            l4953 2DE6                            l4961 2E18  
                          l4945 2DC0                            l4881 1728                            l4873 16EE  
                          l4857 165E                            l5593 0732                            l5577 067E  
                          l5569 0650                            l5497 02A8                            l5761 2D8E  
                          l5921 25B8                            l5657 30A4                            l5649 3092  
                          l4699 1184                            l4883 1732                            l4867 16B4  
                          l4795 136E                            l5747 2D5A                            l5755 2D88  
                          l5739 2D34                            l5915 259E                            l5907 2560  
                          l4965 2E2C                            l4957 2E0A                            l4949 2DD4  
                          l4789 1342                            l5589 06D0                            l5933 25D6  
                          l5917 25A4                            l5695 301C                            l4799 1382  
                          l5871 24D2                            l5945 3160                            l5697 3028  
                          l4897 2B8E                            l5937 25E0                            l5865 24C4  
                          l5699 302E                            l5883 24F4                            l5893 2518  
                          l5885 2500                            l5975 280A                            l5977 281C  
                          l5897 2546                            l5889 250E                            l5979 282C  
                          STR_1 3FBA                            STR_2 3F90                            STR_3 3F7B  
                          STR_4 3FBA                            STR_5 3FA5                            STR_6 3FCF  
                          STR_7 3FF9                            STR_8 3FEF                            STR_9 3FFD  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            _PIE1 000F9D  
                          u5200 0F80                            u5210 0F82                            u7000 3484  
                          u5065 3244                            u5066 3246                            u5075 3250  
                          u5076 3252                            u6140 28E2                            u5085 325C  
                          u5086 325E                            u5190 0F68                            u5095 3268  
                          u7015 3486                            u5096 326A                            u6145 28D6  
                          u7210 318A                            u7216 318C                            u5650 16C8  
                          u5570 1582                            u7430 1AB8                            u5911 2036  
                          u5575 1576                            u6640 0694                            u7440 1B30  
                          u7360 188C                            u7370 18A4                            u6395 34AC  
                          u6396 34AE                            u7376 18A6                            u5891 1FFC  
                          u6940 2D48                            u7487 3290                            u6955 2D4A  
                          _main 174C       __size_of_LCD_send_command 003A                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0046                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00C0  
                 __CFG_IESO$OFF 000000              __size_of_LCD_clear 0032                    _sprintf$2399 0100  
                delay_s@value_s 0068                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 346E                   _LCD_backlight 349E         __size_of_LCD_initialize 016E  
                   ?i2_USART_RX 0001                   ___fltol@sign1 009F                 __end_of___fladd 12A6  
                         ?_main 0001                 __end_of___awdiv 2C30                 __end_of___flneg 32E2  
                         STR_10 3FDB                           STR_11 3FF4                           STR_12 3FBA  
                         STR_13 3FE7                 __end_of___awmod 2E36                 __end_of___flmul 174C  
               __end_of___flsub 31F0                 __end_of___fltol 29A8                 __end_of___lldiv 2CEC  
               ___awdiv@divisor 0068                 __end_of___llmod 2ED0                           _T3CON 000FB1  
               __end_of___lwdiv 3076                           i1l249 0078                           i2l314 2EF0  
                         i2l316 2EF2                 ___awdiv@counter 006A                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR3H 000FB3                           _TMR3L 000FB2  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
               __end_of_delay_s 33A8                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
            __size_of_ISR_bassa 00A8                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                __end_of_ISR_alta 315C                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 3F7B                           _scale 092C                 __end_of_isdigit 33FE  
              __end_of_USART_RX 2D94                  __pbitbssCOMRAM 0220                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 092C                  __CFG_PBADEN$ON 000000  
                   ?_USART_Send 0001             __size_of_LCD_cursor 0032                  WriteUSART@data 0060  
               __initialization 31F0                  ?_LCD_backlight 0001                    __end_of_main 1B46  
 __size_of_board_initialization 00DE                   _LCD_goto_line 29A8               ?_Joystick_Polling 0001  
            ??_Joystick_Polling 0060               ?_LCD_write_string 0071                          ??_main 00C1  
                 __activetblptr 000002                  _JoystickValues 0033              ??_LCD_write_string 0073  
          __size_of__tdiv_to_l_ 019E               __end_of_LCD_clear 337C          LCD_write_string@buffer 0071  
                        _ADCON1 000FC1                ___llmod@dividend 0060                          ?_scale 008E  
                        _ADRESH 000FC4                ___awdiv@dividend 0066                 __CFG_BBSIZ$1024 000000  
                        i2l4313 2F36                          i2l4321 2F5C                          i2l4305 2F10  
                        i2l4327 2F62                          i2l4293 2EE8                          _SPBRGH 000FB0  
           __size_ofi2_USART_RX 0098                __end_of___xxtofl 1FE6                 _switch_position 0043  
              __end_of_delay_ms 32AA                  __CFG_XINST$OFF 000000               __end_of_ISR_bassa 00C0  
              __end_of__powers_ 3F53              __size_of_OpenUSART 0074                  ?_LCD_goto_line 0001  
                        ___flge 2184                       ??___fladd 00A3                _delay_set_quartz 34B0  
                        ___wmul 32E2                       ??___awdiv 006A                       ??___flneg 0064  
                __CFG_STVREN$ON 000000                       ??___awmod 0064                       ??___flmul 007D  
                     ??___flsub 00B7                       ??___fltol 009B                       ??___lldiv 0068  
                     ??___llmod 0068                       ??___lwdiv 0064         __size_of_LCD_write_char 0096  
                        _fround 1B46  LCD_initialize@quartz_frequency 006E                          clear_0 31F6  
                        clear_1 3202                          clear_2 3210                ___awdiv@quotient 006C  
               ___awmod@divisor 0062                       ??_delay_s 0068            __size_of_LCD_Handler 0120  
               ___awmod@counter 0064                 __CFG_BOREN$BOHW 000000               _JoystickConstants 0023  
                  __pdataCOMRAM 0045                       ??_isdigit 0060                    __mediumconst 3EEA  
                        tblptrh 000FF7                  _analogic_brake 003C                          tblptrl 000FF6  
                        tblptru 000FF8             __size_of_USART_Send 0172                       ??_sprintf 00BF  
                    ___flge@ff1 0060                      ___flge@ff2 0064                    ___xxtofl@arg 0071  
                  ___xxtofl@exp 0070                    ___xxtofl@val 0067                      __accesstop 0060  
       __end_of__initialization 3228                      ___flneg@f1 0060                _LCD_send_command 3236  
                 ___rparam_used 000001                      ___fltol@f1 0097                 ??_LCD_backlight 0060  
                    _WriteUSART 348A                  __pcstackCOMRAM 0001                       ?_ISR_alta 0001  
                 __end_of_scale 0DFE                  _LCD_initialize 260E               _LCD_write_message 33A8  
                     ?_USART_RX 0001              ?_LCD_write_message 0071                      __div_to_l_ 2314  
                  ??_LCD_cursor 006D                    _actual_speed 00EB               __end_of_OpenUSART 30EA  
               __div_to_l_@exp1 006D             ??_LCD_write_message 0073                 __div_to_l_@cntr 006C  
                       ??_scale 0092                 __div_to_l_@quot 0068                      __pbssBANK0 00C9  
                    __pbssBANK1 0119                      _actual_dir 0220                   __div_to_l_@f1 0060  
                 __div_to_l_@f2 0064                 ??_LCD_goto_line 006C              __end_of_LCD_cursor 334A  
        __end_of_LCD_initialize 277C                         ?___flge 0060                         ?___wmul 0060  
                    ??_ISR_alta 0015       __end_of_LCD_write_message 33D4               ?_LCD_enable_pulse 0001  
                 putsUSART@data 0061                         ?_fround 008E                    ??i2_USART_RX 0012  
                    ??_USART_RX 0060              ??_LCD_enable_pulse 0068     __size_of_PWR_Button_Polling 001C  
                     ?___xxtofl 0067                LCD_cursor@active 006D                       ?_delay_ms 0066  
            __size_of_putsUSART 0028                       USART_RX@i 0062              __end_ofi2_USART_RX 2F68  
                  ??_USART_Send 0068               __end_of__npowers_ 3F1F                         __Hparam 0000  
                    _scale$2398 0092                         __Lparam 0000                delay_ms@value_ms 0066  
                   ?_WriteUSART 0001                 ?_LCD_initialize 0001                 __size_of___flge 0190  
                       ___fladd 0DFE                         ___awdiv 2B72                         ___flneg 32AA  
                       ___awmod 2D94                         ___flmul 12A6                         ___flsub 31A8  
                       ___fltol 289C                         ___lldiv 2C30                 __size_of___wmul 0036  
                _LCD_write_char 2F68                         ___llmod 2E36                         ___lwdiv 2FFE  
                       __pcinit 31F0                 __size_of_fround 02D2                         _delay_s 337C  
                       __ramtop 0300             LCD_write_char@value 0070                         __ptext0 174C  
                       __ptext1 2A94                         __ptext2 337C                         __ptext3 3076  
                       __ptext4 260E                         __ptext5 34B0                         __ptext6 3318  
                       __ptext7 349E                         __ptext8 249C                         __ptext9 33FE  
                     _ECU_Check 0038                     ?__div_to_l_ 0060                LCD_write_char@D0 006F  
              LCD_write_char@D1 006E                LCD_write_char@D2 006D                LCD_write_char@D3 006C  
                       _dpowers 3F53                         _isdigit 33D4                      ??___xxtofl 006B  
              ___awmod@dividend 0060                      ??_delay_ms 0068    __end_of_board_initialization 2B72  
     __size_of_Joystick_Polling 004C              __end_of_USART_Send 260E        __end_of_delay_set_quartz 34BA  
                       _sprintf 00C4                  __pintcode_body 30EA                       _LCD_clear 334A  
          end_of_initialization 3228       __size_of_LCD_write_string 0026                   __Lmediumconst 3EEA  
                       int_func 30EA                   _Battery_Check 0037             LCD_backlight@active 0060  
               ___lldiv@divisor 0064              LCD_cursor@blinking 006C                 ___lldiv@counter 006C  
        __end_of_LCD_write_char 2FFE                       _RCSTAbits 000FAB                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE               __end_of_putsUSART 3426  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0060                  __tdiv_to_l_@f2 0064  
                     _ISR_bassa 0018                   ??__tdiv_to_l_ 0068                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83        __end_of_LCD_send_command 3270  
                   ___fladd@grs 00AE                   ___xxtofl@sign 006F                       _TRISCbits 000F94  
           __size_of_WriteUSART 0014                      ?_LCD_clear 0001         _clock_counter_reference 00F5  
                   ___flmul@grs 0083                       _TXSTAbits 000FAC             __size_of__div_to_l_ 0188  
       LCD_write_integer@F17027 00D9                 ?_LCD_write_char 0001                   ??_LCD_Handler 00C1  
                __end_of___flge 2314                      ?_ISR_bassa 0001                  __end_of___wmul 3318  
                 __pidataCOMRAM 34BA               __size_of_ISR_alta 3154                  __end_of_fround 1E18  
                   USART_Send@i 006A               __size_of_USART_RX 00A8             start_initialization 31F0  
           __end_of__tdiv_to_l_ 2184                       _OpenUSART 3076                 ___llmod@divisor 0064  
               ___llmod@counter 0068           __end_of_LCD_backlight 34B0                        ??___flge 0068  
          _board_initialization 2A94                        ??___wmul 0064                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 0092                   sprintf@tmpval 010E                       ___fladd@a 009F  
                     ___fladd@b 009B                      fround@prec 009A             __end_of_LCD_Handler 289C  
                     ___flmul@a 0079                       ___flmul@b 0075                     __pbssCOMRAM 0023  
                     ___flsub@a 00B3                       ___flsub@b 00AF                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                _Joystick_Polling 315C               __size_of___xxtofl 01CE  
     __size_of_LCD_enable_pulse 0022                    _isdigit$2005 0061               __size_of_delay_ms 003A  
                   ??_LCD_clear 006C         LCD_write_message@buffer 0071                _LCD_write_string 3426  
                    ?_OpenUSART 0060                     sprintf@flag 0106                     sprintf@fval 0114  
                   sprintf@prec 0112                ??_LCD_initialize 006E                       __pnvBANK0 00F5  
     delay_set_quartz@frequency 0060                ___lwdiv@dividend 0060              LCD_send_command@D0 006A  
            LCD_send_command@D1 0069              LCD_send_command@D2 0068              LCD_send_command@D3 006B  
                  ??_WriteUSART 0060           __end_of_LCD_goto_line 2A94           ?_board_initialization 0001  
                     __pintcode 0008                   __pmediumconst 3EEA                        ?___fladd 009B  
                      ?___awdiv 0066                        ?___flneg 0060                        ?___awmod 0060  
                      ?___flmul 0075                        ?___flsub 00AF                        ?___fltol 0097  
                      ?___lldiv 0060                        ?___llmod 0060                       __npowers_ 3EEB  
                      ?___lwdiv 0060                     ??_ISR_bassa 0001                     __pintcodelo 0018  
    __end_of_PWR_Button_Polling 348A                        ?_delay_s 0001                     __tdiv_to_l_ 1FE6  
                  ??__div_to_l_ 0068                        ?_isdigit 0001                ___lwdiv@quotient 0065  
                      ?_sprintf 00B7                  __size_of_scale 04D2              __end_of_WriteUSART 349E  
             ?_delay_set_quartz 0001              ??_delay_set_quartz 0060                  ___wmul@product 0064  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2    _delay_quartz_frequency_value 0045  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 249C                        _PIR2bits 000FA1                        i2u476_40 2F24  
                      i2u477_45 2F26                       _pr_time_1 002B                       _pr_time_2 00E3  
                     _pr_time_3 00E7                       _set_speed 0035                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _ISR_alta 0008                     _LCD_Handler 277C  
                      _USART_RX 2CEC                        _USART_Rx 00C9                        _USART_Tx 00ED  
                    _ADCON0bits 000FC2                       _putsUSART 33FE                      _ADCON2bits 000FC0  
             ___wmul@multiplier 0060               ?_LCD_send_command 0068                USART_Send@i_1320 006B  
              USART_Send@i_1329 006C                _actual_speed_pk0 003A                _actual_speed_pk1 003B  
              _actual_speed_kmh 00DF              ??_LCD_send_command 006B                   _set_speed_pk0 003F  
                 _set_speed_pk1 0040                     ??_OpenUSART 0062                ??_LCD_write_char 006C  
                   i2USART_RX@i 0014                 OpenUSART@config 0062               LCD_goto_line@line 006C  
                      __Hrparam 0000          ??_board_initialization 0073                        __Lrparam 0000  
              __size_of___fladd 04A8                __size_of___awdiv 00BE                __size_of___flneg 0038  
              __size_of___awmod 00A2                __size_of___flmul 04A6                __size_of___flsub 0048  
              __size_of___fltol 010C                __size_of___lldiv 00BC                __size_of___llmod 009A  
              __size_of___lwdiv 0078                     _fround$2396 0096                     _fround$2397 0092  
                    ?_putsUSART 0061                __size_of_delay_s 002C                      sprintf@exp 010C  
                    sprintf@val 0108                        ___xxtofl 1E18                __size_of_isdigit 002A  
                      _delay_ms 3270                 ___lwdiv@divisor 0062                 ___lwdiv@counter 0064  
              _LCD_enable_pulse 344C                        __ptext10 348A                        __ptext11 2CEC  
                      __ptext20 2B72                        __ptext12 346E                        __ptext21 1FE6  
                      __ptext13 277C                        __ptext30 2184                        __ptext22 2314  
                      __ptext14 00C4                        __ptext31 2FFE                        __ptext23 1E18  
                      __ptext15 092C                        __ptext40 32E2                        __ptext32 3426  
                      __ptext24 2E36                        __ptext16 33D4                        __ptext41 315C  
                      __ptext33 33A8                        __ptext25 2C30                        __ptext17 1B46  
                      __ptext34 2F68                        __ptext26 289C                        __ptext18 12A6  
                      __ptext35 29A8                        __ptext27 31A8                        __ptext19 2D94  
                      __ptext44 2ED0                        __ptext36 334A                        __ptext28 0DFE  
                      __ptext37 3236                        __ptext29 32AA                        __ptext38 344C  
                      __ptext39 3270                        __powers_ 3F1F                __size_of_sprintf 0868  
                 __size_of_main 03FA                        _wait_low 0222        __end_of_Joystick_Polling 31A8  
                      int$flags 0046        __end_of_LCD_write_string 344C                      _LCD_cursor 3318  
                    _INTCONbits 000FF2                    _set_steering 0041                  OpenUSART@spbrg 0060  
                      isdigit@c 0062                        scale@scl 0096                    _time_counter 002F  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0104  
              __tdiv_to_l_@exp1 0070                       sprintf@sp 00B7                __tdiv_to_l_@cntr 006F  
              __tdiv_to_l_@quot 006B                ___lldiv@dividend 0060                    _spam_counter 0042  
                    i2_USART_RX 2ED0                    ?__tdiv_to_l_ 0060                     ??_putsUSART 0063  
                      sprintf@c 0118                        sprintf@f 00B9                ___lldiv@quotient 0068  
        __size_of_LCD_backlight 0012                   ___fladd@signs 00AB              _PWR_Button_Polling 346E  
                  ___fladd@aexp 00AC                    ___fladd@bexp 00AD             ?_PWR_Button_Polling 0001  
                  _USART_Tx_Old 00D1                    _USART_Status 0039                      _USART_Send 249C  
                  _power_switch 0221  
